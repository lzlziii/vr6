using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using DigitalOpus.MB.Core;
using Dissonance;
using Dissonance.Datastructures;
using Dissonance.Networking;
using Dissonance.Networking.Server;
using FSG.Utilities;
using HeathenEngineering.Events;
using HeathenEngineering.Scriptable;
using HeathenEngineering.UIX;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Mirror;
using Mirror.Discovery;
using NobleConnect.Ice;
using NobleConnect.Mirror;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Pico.Platform;
using Pico.Platform.Models;
using PlayfulSystems.ProgressBar;
using RotaryHeart.Lib.SerializableDictionary;
using Smooth;
using SynthesisvrArcade;
using TMPro;
using UltimateClean;
using Unity.XR.PXR;
using Unity.XR.Qiyu;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.SocialPlatforms;
using UnityEngine.U2D;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityStandardAssets.Characters.ThirdPerson;
using Valve.VR;
using VoxelArena;
using VoxelArena.Cook;
using VoxelArena.ManagementNetwork;
using VoxelArena.Utils;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public struct Music
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip music;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float volumeLevel;
}
[Token(Token = "0x2000003")]
public class MusicList : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A3B4", Offset = "0xF2A3B4")]
	private sealed class <WaitEndOfMusic>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicList <>4__this;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource <currentSource>5__2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000E")]
			[Address(RVA = "0x12AEBF4", Offset = "0x12AEBF4", VA = "0x12AEBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000010")]
			[Address(RVA = "0x12AEC5C", Offset = "0x12AEC5C", VA = "0x12AEC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x12AE144", Offset = "0x12AE144", VA = "0x12AE144")]
		[DebuggerHidden]
		public <WaitEndOfMusic>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x12AEA0C", Offset = "0x12AEA0C", VA = "0x12AEA0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x12AEA10", Offset = "0x12AEA10", VA = "0x12AEA10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x12AEBFC", Offset = "0x12AEBFC", VA = "0x12AEBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000005")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A3C4", Offset = "0xF2A3C4")]
	private sealed class <Mix>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicList <>4__this;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource <currentSource>5__2;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource <nextSource>5__3;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <remainingTime>5__4;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0x12AE67C", Offset = "0x12AE67C", VA = "0x12AE67C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000016")]
			[Address(RVA = "0x12AE6E4", Offset = "0x12AE6E4", VA = "0x12AE6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x12AE2F0", Offset = "0x12AE2F0", VA = "0x12AE2F0")]
		[DebuggerHidden]
		public <Mix>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x12AE35C", Offset = "0x12AE35C", VA = "0x12AE35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x12AE360", Offset = "0x12AE360", VA = "0x12AE360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x12AE684", Offset = "0x12AE684", VA = "0x12AE684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A3D4", Offset = "0xF2A3D4")]
	private sealed class <StopRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicList <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0x12AE99C", Offset = "0x12AE99C", VA = "0x12AE99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001C")]
			[Address(RVA = "0x12AEA04", Offset = "0x12AEA04", VA = "0x12AEA04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x12AE31C", Offset = "0x12AE31C", VA = "0x12AE31C")]
		[DebuggerHidden]
		public <StopRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x12AE6EC", Offset = "0x12AE6EC", VA = "0x12AE6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x12AE6F0", Offset = "0x12AE6F0", VA = "0x12AE6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x12AE9A4", Offset = "0x12AE9A4", VA = "0x12AE9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source1;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source2;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource currentSource;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine waitEndRoutine;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine stopRoutine;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentMusic;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Music[] musics;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioMixerGroup mixerGroup;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isPlayOnAwake;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isSmoothMix;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float mixTime;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float stopTime;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isMixInProgress;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameManager gameManager;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool stop;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x12ADC24", Offset = "0x12ADC24", VA = "0x12ADC24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x12ADF08", Offset = "0x12ADF08", VA = "0x12ADF08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x12ADE1C", Offset = "0x12ADE1C", VA = "0x12ADE1C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x12AE098", Offset = "0x12AE098", VA = "0x12AE098")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x12AE028", Offset = "0x12AE028", VA = "0x12AE028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35710", Offset = "0xF35710")]
	private IEnumerator WaitEndOfMusic()
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x12AE170", Offset = "0x12AE170", VA = "0x12AE170")]
	private void ChangeMusic()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x12AE280", Offset = "0x12AE280", VA = "0x12AE280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35774", Offset = "0xF35774")]
	private IEnumerator Mix()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x12AE24C", Offset = "0x12AE24C", VA = "0x12AE24C")]
	private void NextMusicId()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x12AE0D4", Offset = "0x12AE0D4", VA = "0x12AE0D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF357D8", Offset = "0xF357D8")]
	private IEnumerator StopRoutine()
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x12AE348", Offset = "0x12AE348", VA = "0x12AE348")]
	public MusicList()
	{
	}
}
[Token(Token = "0x2000007")]
public class ServerConsole : MonoBehaviour
{
	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1204C68", Offset = "0x1204C68", VA = "0x1204C68")]
	public ServerConsole()
	{
	}
}
[Token(Token = "0x2000008")]
public class SplashManager : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A3E4", Offset = "0xF2A3E4")]
	private sealed class <Repos>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashManager <>4__this;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <goodPosition>5__3;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000027")]
			[Address(RVA = "0x1386504", Offset = "0x1386504", VA = "0x1386504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000029")]
			[Address(RVA = "0x138656C", Offset = "0x138656C", VA = "0x138656C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x1385D34", Offset = "0x1385D34", VA = "0x1385D34")]
		[DebuggerHidden]
		public <Repos>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x1386194", Offset = "0x1386194", VA = "0x1386194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x1386198", Offset = "0x1386198", VA = "0x1386198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x138650C", Offset = "0x138650C", VA = "0x138650C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A3F4", Offset = "0xF2A3F4")]
	private sealed class <CheckSplashIsFinished>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashManager <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002D")]
			[Address(RVA = "0x1386124", Offset = "0x1386124", VA = "0x1386124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0x138618C", Offset = "0x138618C", VA = "0x138618C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x1385D60", Offset = "0x1385D60", VA = "0x1385D60")]
		[DebuggerHidden]
		public <CheckSplashIsFinished>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0x1385DA8", Offset = "0x1385DA8", VA = "0x1385DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x1385DAC", Offset = "0x1385DAC", VA = "0x1385DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x138612C", Offset = "0x138612C", VA = "0x138612C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D0D4", Offset = "0xF2D0D4")]
	private GameObject head;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject loadingText;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image loadingLogo;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D10C", Offset = "0xF2D10C")]
	public float reposDelay;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float speed;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int distance;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastRepositionning;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float reposTimer;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool stop;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool isRepositionning;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1385AA4", Offset = "0x1385AA4", VA = "0x1385AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1385C00", Offset = "0x1385C00", VA = "0x1385C00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1385C0C", Offset = "0x1385C0C", VA = "0x1385C0C")]
	private void LaunchRepos()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1385CC4", Offset = "0x1385CC4", VA = "0x1385CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3592C", Offset = "0xF3592C")]
	private IEnumerator Repos()
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1385B90", Offset = "0x1385B90", VA = "0x1385B90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35990", Offset = "0xF35990")]
	private IEnumerator CheckSplashIsFinished()
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1385D8C", Offset = "0x1385D8C", VA = "0x1385D8C")]
	public SplashManager()
	{
	}
}
[Token(Token = "0x200000B")]
public class VoxelArenaPersistentData : Singleton<VoxelArenaPersistentData>
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string levelsType;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isInLobby;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hostNbPlayers;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hostMaxNbPlayers;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1C1F958", Offset = "0x1C1F958", VA = "0x1C1F958")]
	public VoxelArenaPersistentData()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A404", Offset = "0xF2A404")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A404", Offset = "0xF2A404")]
public class OVRGrabbableOnNetwork : OVRGrabbable
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerScript player;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x19EC5D8", Offset = "0x19EC5D8", VA = "0x19EC5D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x19EC67C", Offset = "0x19EC67C", VA = "0x19EC67C", Slot = "4")]
	public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x19EC784", Offset = "0x19EC784", VA = "0x19EC784", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x19EC8D8", Offset = "0x19EC8D8", VA = "0x19EC8D8")]
	public OVRGrabbableOnNetwork()
	{
	}
}
[Token(Token = "0x200000D")]
public class OVRGrabbableSnapFixed : OVRGrabbable
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform localGripPoint;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool mustRotate;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x19EC8E0", Offset = "0x19EC8E0", VA = "0x19EC8E0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x19ECBC8", Offset = "0x19ECBC8", VA = "0x19ECBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x19ECD2C", Offset = "0x19ECD2C", VA = "0x19ECD2C", Slot = "4")]
	public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x19ECDD4", Offset = "0x19ECDD4", VA = "0x19ECDD4")]
	public OVRGrabbableSnapFixed()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A490", Offset = "0xF2A490")]
public class OVRGrabberWithNoPhysics : OVRGrabber
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	protected VRInputManager.Hand hand;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform targetForLocalGripPoint;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x19ECDDC", Offset = "0x19ECDDC", VA = "0x19ECDDC", Slot = "8")]
	public override void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x19ECF54", Offset = "0x19ECF54", VA = "0x19ECF54", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x19ECF58", Offset = "0x19ECF58", VA = "0x19ECF58", Slot = "10")]
	protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x19ECF5C", Offset = "0x19ECF5C", VA = "0x19ECF5C", Slot = "11")]
	protected override void GrabEnd()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x19ED068", Offset = "0x19ED068", VA = "0x19ED068")]
	public VRInputManager.Hand GetHand()
	{
		return default(VRInputManager.Hand);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x19ED070", Offset = "0x19ED070", VA = "0x19ED070")]
	public OVRGrabberWithNoPhysics()
	{
	}
}
[Token(Token = "0x200000F")]
public class VRHandAnimation : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator handAnimator;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Controller oculusController;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected float flexBlend;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float pointBlend;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float thumbsUpBlend;

	[Token(Token = "0x4000040")]
	public const float INPUT_RATE_CHANGE = 5f;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RuntimeAnimatorController firstPersonController;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RuntimeAnimatorController thirdPersonController;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool isPointFlex;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool isGivingThumbsUp;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool isForcePointing;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool smoothIndex;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectGrabbed;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x17318A0", Offset = "0x17318A0", VA = "0x17318A0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x173198C", Offset = "0x173198C", VA = "0x173198C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1731BB4", Offset = "0x1731BB4", VA = "0x1731BB4")]
	public float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1731C54", Offset = "0x1731C54", VA = "0x1731C54")]
	public void ForcePointing(bool force)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1731C60", Offset = "0x1731C60", VA = "0x1731C60")]
	public VRHandAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class LightMapGroup
{
	[Serializable]
	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A4F4", Offset = "0xF2A4F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, string> <>9__9_0;

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x11C649C", Offset = "0x11C649C", VA = "0x11C649C")]
		public <>c()
		{
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x11C64A4", Offset = "0x11C64A4", VA = "0x11C64A4")]
		internal string <GatherFiles>b__9_0(string f)
		{
			return null;
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string sourceFolder;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightProbeGroup[] lightProbeGroups;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light[] lights;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Texture2D> directionTextures;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Texture2D> lightTextures;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Texture2D> shadowMaskTextures;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal LightmapData[] data;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal bool isInit;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x152BDDC", Offset = "0x152BDDC", VA = "0x152BDDC")]
	private Texture2D LoadAssetTexture(string file)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x152BDE4", Offset = "0x152BDE4", VA = "0x152BDE4")]
	public void GatherFiles()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x152C218", Offset = "0x152C218", VA = "0x152C218")]
	public void CreateDataObject()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x152C46C", Offset = "0x152C46C", VA = "0x152C46C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x152C530", Offset = "0x152C530", VA = "0x152C530")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x152C600", Offset = "0x152C600", VA = "0x152C600")]
	public LightMapGroup()
	{
	}
}
[Token(Token = "0x2000012")]
public class LightMapSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LightMapSwitcher singleton;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int defaultGroup;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LightMapGroup[] lightMapGroups;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x11C64AC", Offset = "0x11C64AC", VA = "0x11C64AC")]
	public LightMapSwitcher()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x11C650C", Offset = "0x11C650C", VA = "0x11C650C")]
	private static void PostBuild()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x11C6628", Offset = "0x11C6628", VA = "0x11C6628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x11C662C", Offset = "0x11C662C", VA = "0x11C662C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xF35A94", Offset = "0xF35A94")]
	private void GatherFiles()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x11C6620", Offset = "0x11C6620", VA = "0x11C6620")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xF35ACC", Offset = "0xF35ACC")]
	private void ApplyDefaultGroup()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x11C66AC", Offset = "0x11C66AC", VA = "0x11C66AC")]
	public void Apply(int groupIndex)
	{
	}
}
[Token(Token = "0x2000013")]
public class NaturalSortComparer<T> : IComparer<string>, IDisposable
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly bool isAscending;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<string, string[]> table;

	[Token(Token = "0x6000053")]
	public NaturalSortComparer(bool inAscendingOrder = true)
	{
	}

	[Token(Token = "0x6000054")]
	public int Compare(string x, string y)
	{
		return default(int);
	}

	[Token(Token = "0x6000055")]
	private int System.Collections.Generic.IComparer<System.String>.Compare(string x, string y)
	{
		return default(int);
	}

	[Token(Token = "0x6000056")]
	private static int PartCompare(string left, string right)
	{
		return default(int);
	}

	[Token(Token = "0x6000057")]
	public void Dispose()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class LightmapFinder : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lightmapIndex;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bigTileThreshold;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> selectedObjects;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool findObjectsByIndex;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool findBigObjectsByIndex;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x11C6B64", Offset = "0x11C6B64", VA = "0x11C6B64")]
	private void FindObjectWithLightmapIndex()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x11C6C8C", Offset = "0x11C6C8C", VA = "0x11C6C8C")]
	private void FindBigObjectWithLightmapIndex()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x11C6DE4", Offset = "0x11C6DE4", VA = "0x11C6DE4")]
	public LightmapFinder()
	{
	}
}
[Token(Token = "0x2000015")]
public class NetworkManagerSpawnPlayerWithParent : NetworkManager
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform playerSpawnedParent;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x12AF1C8", Offset = "0x12AF1C8", VA = "0x12AF1C8", Slot = "15")]
	public override void OnServerAddPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x12AF424", Offset = "0x12AF424", VA = "0x12AF424")]
	public NetworkManagerSpawnPlayerWithParent()
	{
	}
}
[Token(Token = "0x2000016")]
public class NetworkRigidbodyUtil : NetworkBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool activatePhysicsAtServerStart;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x12AF48C", Offset = "0x12AF48C", VA = "0x12AF48C")]
	private void Start()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x12AF4E4", Offset = "0x12AF4E4", VA = "0x12AF4E4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x12AF5A8", Offset = "0x12AF5A8", VA = "0x12AF5A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x12AF640", Offset = "0x12AF640", VA = "0x12AF640")]
	public NetworkRigidbodyUtil()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x12AF6A8", Offset = "0x12AF6A8", VA = "0x12AF6A8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000017")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x2000018")]
	private class Wrapper<T>
	{
		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x6000066")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x6000062")]
	public static T[] FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	public static string ToJson<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	public static string ToJson<T>(T[] array, bool prettyPrint)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x13798D8", Offset = "0x13798D8", VA = "0x13798D8")]
	public static string fixJson(string value)
	{
		return null;
	}
}
[Token(Token = "0x2000019")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint appId;

	[Token(Token = "0x1700000B")]
	public static bool Initialized
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1388A38", Offset = "0x1388A38", VA = "0x1388A38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1388A40", Offset = "0x1388A40", VA = "0x1388A40")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class OVRSetFoveatedRendering : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager.FixedFoveatedRenderingLevel level;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x19F5F8C", Offset = "0x19F5F8C", VA = "0x19F5F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x19F5FFC", Offset = "0x19F5FFC", VA = "0x19F5FFC")]
	public void DisableFoveated()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x19F5F90", Offset = "0x19F5F90", VA = "0x19F5F90")]
	public void EnableFoveated()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x19F6060", Offset = "0x19F6060", VA = "0x19F6060")]
	public OVRSetFoveatedRendering()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class I18NLabel
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x146FF98", Offset = "0x146FF98", VA = "0x146FF98")]
	public I18NLabel()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class I18NAudioSource
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip value;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x146FF88", Offset = "0x146FF88", VA = "0x146FF88")]
	public I18NAudioSource()
	{
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class I18NTexture
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D value;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1364FA0", Offset = "0x1364FA0", VA = "0x1364FA0")]
	public I18NTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class I18NVideoPlayer
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoClip value;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1364FA8", Offset = "0x1364FA8", VA = "0x1364FA8")]
	public I18NVideoPlayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class I18NGameObject
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject value;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x146FF90", Offset = "0x146FF90", VA = "0x146FF90")]
	public I18NGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class I18NLanguage
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string LanguageName;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public I18NLabel[] label;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public I18NAudioSource[] audio;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public I18NVideoPlayer[] video;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public I18NTexture[] tex;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public I18NGameObject[] gameObj;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x146FFA0", Offset = "0x146FFA0", VA = "0x146FFA0")]
	public I18NLanguage()
	{
	}
}
[Token(Token = "0x2000021")]
public class I18NManager : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] filesToLoad;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public I18NLanguage[] language;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public I18NLanguage referenceLanguage;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static I18NLanguage[] languageStatic;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static I18NLanguage referenceLanguageStatic;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x146FFA8", Offset = "0x146FFA8", VA = "0x146FFA8")]
	public void loadExternalFiles()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x147066C", Offset = "0x147066C", VA = "0x147066C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x14708A4", Offset = "0x14708A4", VA = "0x14708A4")]
	public static void SetLanguage(string name)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1470A00", Offset = "0x1470A00", VA = "0x1470A00")]
	public static string GetLabel(string key)
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1470B5C", Offset = "0x1470B5C", VA = "0x1470B5C")]
	public static Texture2D GetTexture(string key)
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1470C54", Offset = "0x1470C54", VA = "0x1470C54")]
	public static AudioClip GetAudioClip(string key)
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1470D4C", Offset = "0x1470D4C", VA = "0x1470D4C")]
	public static VideoClip GetVideoClip(string key)
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1470E5C", Offset = "0x1470E5C", VA = "0x1470E5C")]
	public I18NManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class I18NSetAudioClip : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource src;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1364BA0", Offset = "0x1364BA0", VA = "0x1364BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1364C30", Offset = "0x1364C30", VA = "0x1364C30")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1364C6C", Offset = "0x1364C6C", VA = "0x1364C6C")]
	public I18NSetAudioClip()
	{
	}
}
[Token(Token = "0x2000023")]
public class I18NSetTMProText : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro label;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1364C74", Offset = "0x1364C74", VA = "0x1364C74")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1364D04", Offset = "0x1364D04", VA = "0x1364D04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1364D48", Offset = "0x1364D48", VA = "0x1364D48")]
	public I18NSetTMProText()
	{
	}
}
[Token(Token = "0x2000024")]
public class I18NSetTextMeshText : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh mesh;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1364D50", Offset = "0x1364D50", VA = "0x1364D50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1364D8C", Offset = "0x1364D8C", VA = "0x1364D8C")]
	public I18NSetTextMeshText()
	{
	}
}
[Token(Token = "0x2000025")]
public class I18NSetTexture : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer src;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1364D94", Offset = "0x1364D94", VA = "0x1364D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1364DE8", Offset = "0x1364DE8", VA = "0x1364DE8")]
	public I18NSetTexture()
	{
	}
}
[Token(Token = "0x2000026")]
public class I18NSetUIText : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1364DF0", Offset = "0x1364DF0", VA = "0x1364DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1364E80", Offset = "0x1364E80", VA = "0x1364E80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1364EC4", Offset = "0x1364EC4", VA = "0x1364EC4")]
	public I18NSetUIText()
	{
	}
}
[Token(Token = "0x2000027")]
public class I18NSetVideoClip : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer src;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string I18NKey;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1364ECC", Offset = "0x1364ECC", VA = "0x1364ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1364F98", Offset = "0x1364F98", VA = "0x1364F98")]
	public I18NSetVideoClip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000028")]
public class UITextDictionary : SerializableDictionaryBase<Text, string>
{
	[Token(Token = "0x600008A")]
	[Address(RVA = "0x156B564", Offset = "0x156B564", VA = "0x156B564")]
	public UITextDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class UITextMPDictionary : SerializableDictionaryBase<TextMeshPro, string>
{
	[Token(Token = "0x600008B")]
	[Address(RVA = "0x156B5D4", Offset = "0x156B5D4", VA = "0x156B5D4")]
	public UITextMPDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class UITextMPUIDictionary : SerializableDictionaryBase<TextMeshProUGUI, string>
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0x156B644", Offset = "0x156B644", VA = "0x156B644")]
	public UITextMPUIDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class StringsArray
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] strings;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x138AD24", Offset = "0x138AD24", VA = "0x138AD24")]
	public StringsArray()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class StringsTranslationDictionary : SerializableDictionaryBase<string, StringsArray>
{
	[Token(Token = "0x600008E")]
	[Address(RVA = "0x138AE04", Offset = "0x138AE04", VA = "0x138AE04")]
	public StringsTranslationDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class VideoSourceDictionary : SerializableDictionaryBase<VideoPlayer, VideoClip>
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1733210", Offset = "0x1733210", VA = "0x1733210")]
	public VideoSourceDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class VideoClipsArray
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VideoClip[] clips;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x17331AC", Offset = "0x17331AC", VA = "0x17331AC")]
	public VideoClipsArray()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class VideoClipTranslationDictionary : SerializableDictionaryBase<VideoClip, VideoClipsArray>
{
	[Token(Token = "0x6000091")]
	[Address(RVA = "0x173313C", Offset = "0x173313C", VA = "0x173313C")]
	public VideoClipTranslationDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class AudioSourceDictionary : SerializableDictionaryBase<AudioSource, AudioClip>
{
	[Token(Token = "0x6000092")]
	[Address(RVA = "0x12F1CE4", Offset = "0x12F1CE4", VA = "0x12F1CE4")]
	public AudioSourceDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class AudioClipsArray
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip[] clips;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x12F1C80", Offset = "0x12F1C80", VA = "0x12F1C80")]
	public AudioClipsArray()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class AudioClipTranslationDictionary : SerializableDictionaryBase<AudioClip, AudioClipsArray>
{
	[Token(Token = "0x6000094")]
	[Address(RVA = "0x12F1C10", Offset = "0x12F1C10", VA = "0x12F1C10")]
	public AudioClipTranslationDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class UIImageDictionary : SerializableDictionaryBase<Image, Sprite>
{
	[Token(Token = "0x6000095")]
	[Address(RVA = "0x156B4F4", Offset = "0x156B4F4", VA = "0x156B4F4")]
	public UIImageDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class SpritesArray
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite[] sprites;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1386574", Offset = "0x1386574", VA = "0x1386574")]
	public SpritesArray()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class SpritesTranslationDictionary : SerializableDictionaryBase<Sprite, SpritesArray>
{
	[Token(Token = "0x6000097")]
	[Address(RVA = "0x13865D8", Offset = "0x13865D8", VA = "0x13865D8")]
	public SpritesTranslationDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class MaterialDictionary : SerializableDictionaryBase<Material, Texture>
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0x11D015C", Offset = "0x11D015C", VA = "0x11D015C")]
	public MaterialDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class TexturesArray
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture[] textures;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x14AD870", Offset = "0x14AD870", VA = "0x14AD870")]
	public TexturesArray()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class Textures2DTranslationDictionary : SerializableDictionaryBase<Texture, TexturesArray>
{
	[Token(Token = "0x600009A")]
	[Address(RVA = "0x14AD800", Offset = "0x14AD800", VA = "0x14AD800")]
	public Textures2DTranslationDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class GameObjectsArray
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] gameObjects;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x14613B4", Offset = "0x14613B4", VA = "0x14613B4")]
	public GameObjectsArray()
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class GameObjectDictionary : SerializableDictionaryBase<GameObject, GameObjectsArray>
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1461344", Offset = "0x1461344", VA = "0x1461344")]
	public GameObjectDictionary()
	{
	}
}
[Token(Token = "0x200003B")]
[ExecuteInEditMode]
public class TranslationManager : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	public enum Language
	{
		[Token(Token = "0x400009E")]
		Francais,
		[Token(Token = "0x400009F")]
		English,
		[Token(Token = "0x40000A0")]
		Spanish,
		[Token(Token = "0x40000A1")]
		Italian,
		[Token(Token = "0x40000A2")]
		Korean,
		[Token(Token = "0x40000A3")]
		Chinese,
		[Token(Token = "0x40000A4")]
		Japanese,
		[Token(Token = "0x40000A5")]
		German,
		[Token(Token = "0x40000A6")]
		Portuguese,
		[Token(Token = "0x40000A7")]
		ChineseTraditional,
		[Token(Token = "0x40000A8")]
		Thai,
		[Token(Token = "0x40000A9")]
		NbLanguage
	}

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TranslationManager translationInstance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UITextDictionary uiTexts;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Text> uiTextsExcludes;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UITextMPDictionary uiTMPTexts;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<TextMeshPro> uiTMPTextsExcludes;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UITextMPUIDictionary uiTMPTextUIs;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<TextMeshProUGUI> uiTMPTextUIsExcludes;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIImageDictionary uiImages;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Image> uiImagesExcludes;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VideoSourceDictionary videoPlayers;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<VideoPlayer> videoPlayersExcludes;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSourceDictionary audioSources;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<AudioSource> audioSourcesExcludes;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObjectDictionary gameObjectsTranslations;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string filePath;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Language currentLanguage;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Language keyLanguage;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TranslationStorage storage;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isInitDone;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isLanguageSet;

	[Token(Token = "0x1700000C")]
	public static TranslationManager instance
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x14AF0FC", Offset = "0x14AF0FC", VA = "0x14AF0FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x14AF350", Offset = "0x14AF350", VA = "0x14AF350")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x14AF3A0", Offset = "0x14AF3A0", VA = "0x14AF3A0")]
	protected void DetectLanguage(string forcedLanguage = "")
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x14AF818", Offset = "0x14AF818", VA = "0x14AF818")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x14AF81C", Offset = "0x14AF81C", VA = "0x14AF81C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x14AF6F8", Offset = "0x14AF6F8", VA = "0x14AF6F8")]
	public void SetLanguage(string lang)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x14AFDC8", Offset = "0x14AFDC8", VA = "0x14AFDC8")]
	public void SetLanguage(int lang)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x14AF1C8", Offset = "0x14AF1C8", VA = "0x14AF1C8")]
	public string Translate(string str)
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x14B1828", Offset = "0x14B1828", VA = "0x14B1828")]
	public AudioClip Translate(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x14B1934", Offset = "0x14B1934", VA = "0x14B1934")]
	public VideoClip Translate(VideoClip clip)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x14B1A40", Offset = "0x14B1A40", VA = "0x14B1A40")]
	public Sprite Translate(Sprite sprite)
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x14B1B4C", Offset = "0x14B1B4C", VA = "0x14B1B4C")]
	public GameObject[] GetGameObjects(string str)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x14B1EA8", Offset = "0x14B1EA8", VA = "0x14B1EA8")]
	public GameObject[] GetGameObjects(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x14B2064", Offset = "0x14B2064", VA = "0x14B2064")]
	public GameObject[] GetGameObjects(VideoClip clip)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x14B2220", Offset = "0x14B2220", VA = "0x14B2220")]
	public GameObject[] GetGameObjects(Sprite sprite)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x14B23DC", Offset = "0x14B23DC", VA = "0x14B23DC")]
	private bool CheckIfTextureIsUsedInMaterials(Texture tex)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x14B2470", Offset = "0x14B2470", VA = "0x14B2470")]
	public bool CheckStringIsPresentInElements(string str)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x14B2C44", Offset = "0x14B2C44", VA = "0x14B2C44")]
	public bool CheckAudioClipIsPresentInElements(AudioClip clip)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x14B2F54", Offset = "0x14B2F54", VA = "0x14B2F54")]
	public bool CheckVideoClipIsPresentInElements(VideoClip clip)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x14B3264", Offset = "0x14B3264", VA = "0x14B3264")]
	public bool CheckSpriteIsPresentInElements(Sprite sprite)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x14B3574", Offset = "0x14B3574", VA = "0x14B3574")]
	public string FormatPrice(float value)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x14AF854", Offset = "0x14AF854", VA = "0x14AF854")]
	private void RestoreOriginals()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x14B3694", Offset = "0x14B3694", VA = "0x14B3694")]
	public TranslationManager()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2A534", Offset = "0xF2A534")]
public class TranslationStorage : ScriptableObject
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringsTranslationDictionary stringsTranslations;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> customStrings;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpritesTranslationDictionary spritesTranslations;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> customSprites;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VideoClipTranslationDictionary videoClipsTranslations;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<VideoClip> customVideoClips;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClipTranslationDictionary audioClipsTranslations;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AudioClip> customAudioClips;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MaterialDictionary materials;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Textures2DTranslationDictionary texturesTranslations;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1568AE8", Offset = "0x1568AE8", VA = "0x1568AE8")]
	public TranslationStorage()
	{
	}
}
[Token(Token = "0x200003E")]
public class IncrementValue : MonoBehaviour
{
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A588", Offset = "0xF2A588")]
	private sealed class <IncrementScore>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IncrementValue <>4__this;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float goalValue;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string format;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string prefix;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string suffix;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <value>5__2;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BF")]
			[Address(RVA = "0x1375344", Offset = "0x1375344", VA = "0x1375344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0x13753AC", Offset = "0x13753AC", VA = "0x13753AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x1374EFC", Offset = "0x1374EFC", VA = "0x1374EFC")]
		[DebuggerHidden]
		public <IncrementScore>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1375114", Offset = "0x1375114", VA = "0x1375114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x1375118", Offset = "0x1375118", VA = "0x1375118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x137534C", Offset = "0x137534C", VA = "0x137534C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource music;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1374D5C", Offset = "0x1374D5C", VA = "0x1374D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1374E24", Offset = "0x1374E24", VA = "0x1374E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1374E28", Offset = "0x1374E28", VA = "0x1374E28")]
	public void Increment(float goalValue, float duration, string format, string addedText, string suffix)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1374E54", Offset = "0x1374E54", VA = "0x1374E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35B04", Offset = "0xF35B04")]
	private IEnumerator IncrementScore(float goalValue, float duration, string format, string prefix, string suffix)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1374F28", Offset = "0x1374F28", VA = "0x1374F28")]
	public string FormatPriceDollar(float value)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1374FF4", Offset = "0x1374FF4", VA = "0x1374FF4")]
	private void FormatText(string format, float value, string prefix, string suffix)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x137510C", Offset = "0x137510C", VA = "0x137510C")]
	public IncrementValue()
	{
	}
}
[Token(Token = "0x2000040")]
public class InfoMessage : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject headObject;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AttachToObjectPosition attach;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string text;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text uiText;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mainCanvas;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1376108", Offset = "0x1376108", VA = "0x1376108")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1376128", Offset = "0x1376128", VA = "0x1376128")]
	public void SetAttachedTo(GameObject target)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x13761F4", Offset = "0x13761F4", VA = "0x13761F4")]
	public void SetText(string newText)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1376234", Offset = "0x1376234", VA = "0x1376234")]
	public void Activate(bool activate)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1376254", Offset = "0x1376254", VA = "0x1376254")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1376258", Offset = "0x1376258", VA = "0x1376258")]
	public InfoMessage()
	{
	}
}
[Token(Token = "0x2000041")]
public class LoopableSelectionSlider : SelectionSlider
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x11CCBA0", Offset = "0x11CCBA0", VA = "0x11CCBA0", Slot = "4")]
	public override void OnPreviousButtonPressed()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x11CCC20", Offset = "0x11CCC20", VA = "0x11CCC20", Slot = "5")]
	public override void OnNextButtonPressed()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x11CCCA4", Offset = "0x11CCCA4", VA = "0x11CCCA4")]
	public LoopableSelectionSlider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public struct NetworkVariable
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string strValue;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int intValue;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool boolValue;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float floatValue;
}
[Token(Token = "0x2000043")]
public class NetworkVariableSync : NetworkBehaviour
{
	[Token(Token = "0x2000044")]
	public delegate void OnValueChange();

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly SyncDictionary<string, NetworkVariable> variables;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnValueChange onValueChange;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x12AF6AC", Offset = "0x12AF6AC", VA = "0x12AF6AC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x12AF800", Offset = "0x12AF800", VA = "0x12AF800")]
	private void OnVariableChange(SyncIDictionary<string, NetworkVariable>.Operation op, string key, NetworkVariable item)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x12AC270", Offset = "0x12AC270", VA = "0x12AC270")]
	public void AddVariable(string variable, int value)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x12AFA1C", Offset = "0x12AFA1C", VA = "0x12AFA1C")]
	public void AddVariable(string variable, float value)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x12AFAD0", Offset = "0x12AFAD0", VA = "0x12AFAD0")]
	public void AddVariable(string variable, string value)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x12AC328", Offset = "0x12AC328", VA = "0x12AC328")]
	public void AddVariable(string variable, bool value)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x12AD1BC", Offset = "0x12AD1BC", VA = "0x12AD1BC")]
	public void UpdateVariable(string variable, int value)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x12AFB78", Offset = "0x12AFB78", VA = "0x12AFB78")]
	public void UpdateVariable(string variable, float value)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x12AD068", Offset = "0x12AD068", VA = "0x12AD068")]
	public void UpdateVariable(string variable, bool value)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x12AFC9C", Offset = "0x12AFC9C", VA = "0x12AFC9C")]
	public void UpdateVariable(string variable, string value)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x12ACA54", Offset = "0x12ACA54", VA = "0x12ACA54")]
	public int GetVariableInt(string variable)
	{
		return default(int);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x12AFDAC", Offset = "0x12AFDAC", VA = "0x12AFDAC")]
	public float GetVariableFloat(string variable)
	{
		return default(float);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x12AC988", Offset = "0x12AC988", VA = "0x12AC988")]
	public bool GetVariableBool(string variable)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x12AFE6C", Offset = "0x12AFE6C", VA = "0x12AFE6C")]
	public string GetVariableString(string variable)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x12AFF38", Offset = "0x12AFF38", VA = "0x12AFF38")]
	public NetworkVariableSync()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x12AFFD8", Offset = "0x12AFFD8", VA = "0x12AFFD8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x12AFFDC", Offset = "0x12AFFDC", VA = "0x12AFFDC")]
	static NetworkVariableSync()
	{
	}
}
[Token(Token = "0x2000045")]
public class Notification : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI titleUI;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textUI;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI timeUI;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image iconUI;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image readUI;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DateTime date;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NotificationType type;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isRead;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int id;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int value;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x12B63C4", Offset = "0x12B63C4", VA = "0x12B63C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x12B6420", Offset = "0x12B6420", VA = "0x12B6420")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x12B64B4", Offset = "0x12B64B4", VA = "0x12B64B4")]
	public void SetContent(int notifId, int notifValue, NotificationType notifType, Sprite icon, string title, string text, DateTime date, bool isRead = false)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x12B656C", Offset = "0x12B656C", VA = "0x12B656C")]
	public void SetRead(bool value)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x12B6618", Offset = "0x12B6618", VA = "0x12B6618")]
	public void SendReadRequest()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x12B66DC", Offset = "0x12B66DC", VA = "0x12B66DC")]
	private void UpdateTime()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x12B6940", Offset = "0x12B6940", VA = "0x12B6940")]
	public void Vanish()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x12B69BC", Offset = "0x12B69BC", VA = "0x12B69BC")]
	public Notification()
	{
	}
}
[Token(Token = "0x2000046")]
public class NotificationIcon : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int notificationsNumber;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textUI;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image imageUI;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x12B69C4", Offset = "0x12B69C4", VA = "0x12B69C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x12B6A78", Offset = "0x12B6A78", VA = "0x12B6A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x12B6A7C", Offset = "0x12B6A7C", VA = "0x12B6A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x12B69CC", Offset = "0x12B69CC", VA = "0x12B69CC")]
	public void SetNoficationNumber(int number)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x12B6A80", Offset = "0x12B6A80", VA = "0x12B6A80")]
	public void AddNotification()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x12B6A8C", Offset = "0x12B6A8C", VA = "0x12B6A8C")]
	public NotificationIcon()
	{
	}
}
[Token(Token = "0x2000047")]
public enum NotificationType
{
	[Token(Token = "0x40000D8")]
	REWARD,
	[Token(Token = "0x40000D9")]
	INFO,
	[Token(Token = "0x40000DA")]
	ITEM,
	[Token(Token = "0x40000DB")]
	WEEKLY_RESULT
}
[Serializable]
[Token(Token = "0x2000048")]
public struct NotificationInfo
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public NotificationType type;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int value;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool isRead;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string date;
}
[Token(Token = "0x2000049")]
public class NotificationsManager : Singleton<NotificationsManager>
{
	[Token(Token = "0x200004A")]
	public delegate void ReceivedNotifications(NotificationInfo[] notifs);

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NotificationInfo[] currentNotifications;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ReceivedNotifications receivedNotifications;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x12B6A94", Offset = "0x12B6A94", VA = "0x12B6A94")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x12B6D40", Offset = "0x12B6D40", VA = "0x12B6D40")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x12B6DBC", Offset = "0x12B6DBC", VA = "0x12B6DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x12B6CE4", Offset = "0x12B6CE4", VA = "0x12B6CE4")]
	public void UpdateNotifications()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x12B6DC0", Offset = "0x12B6DC0", VA = "0x12B6DC0")]
	private void NotificationsReadDone(int notifId)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x12B6E2C", Offset = "0x12B6E2C", VA = "0x12B6E2C")]
	private void SetRead(NotificationInfo notif)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x12B6E38", Offset = "0x12B6E38", VA = "0x12B6E38")]
	private void ReceiveNotifications(NotificationInfo[] notifs)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x12B71E4", Offset = "0x12B71E4", VA = "0x12B71E4")]
	public void ClaimReward(int value)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x12B6678", Offset = "0x12B6678", VA = "0x12B6678")]
	public void SendNotifiationRead(int notifId)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x12B7260", Offset = "0x12B7260", VA = "0x12B7260")]
	public NotificationsManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class PopupUI : MonoBehaviour
{
	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A598", Offset = "0xF2A598")]
	private sealed class <RunPopupDestroy>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupUI <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x11FABA4", Offset = "0x11FABA4", VA = "0x11FABA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0x11FAC0C", Offset = "0x11FAC0C", VA = "0x11FAC0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x11FA998", Offset = "0x11FA998", VA = "0x11FA998")]
		[DebuggerHidden]
		public <RunPopupDestroy>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x11FAA34", Offset = "0x11FAA34", VA = "0x11FAA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x11FAA38", Offset = "0x11FAA38", VA = "0x11FAA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x11FABAC", Offset = "0x11FABAC", VA = "0x11FABAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color backgroundColor;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float destroyTime;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_background;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform backgroundRT;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool destroyPopupOnClose;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x11FA3C4", Offset = "0x11FA3C4", VA = "0x11FA3C4")]
	public void Open(RectTransform bgRect)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x11FA738", Offset = "0x11FA738", VA = "0x11FA738")]
	public void Close()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x11FA928", Offset = "0x11FA928", VA = "0x11FA928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35BB8", Offset = "0xF35BB8")]
	private IEnumerator RunPopupDestroy()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x11FA3CC", Offset = "0x11FA3CC", VA = "0x11FA3CC")]
	private void AddBackground()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x11FA824", Offset = "0x11FA824", VA = "0x11FA824")]
	private void RemoveBackground()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x11FA9C4", Offset = "0x11FA9C4", VA = "0x11FA9C4")]
	public PopupUI()
	{
	}
}
[Token(Token = "0x200004D")]
public class PopupUIOpener : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject popupPrefab;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform popupParent;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameObject m_popup;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x11FAC14", Offset = "0x11FAC14", VA = "0x11FAC14")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x11FAC18", Offset = "0x11FAC18", VA = "0x11FAC18", Slot = "4")]
	public virtual void OpenPopup()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x11FAD4C", Offset = "0x11FAD4C", VA = "0x11FAD4C")]
	public PopupUIOpener()
	{
	}
}
[Token(Token = "0x200004E")]
public class ReplicateAlpha : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image source;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image destination;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x11FDB70", Offset = "0x11FDB70", VA = "0x11FDB70")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11FDB74", Offset = "0x11FDB74", VA = "0x11FDB74")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11FDBD4", Offset = "0x11FDBD4", VA = "0x11FDBD4")]
	public ReplicateAlpha()
	{
	}
}
[Token(Token = "0x200004F")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationAxis;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x11FF778", Offset = "0x11FF778", VA = "0x11FF778")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11FF77C", Offset = "0x11FF77C", VA = "0x11FF77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11FF7E8", Offset = "0x11FF7E8", VA = "0x11FF7E8")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000050")]
public abstract class SelectionSlider : MonoBehaviour
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button prevButton;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button nextButton;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected TextMeshProUGUI optionLabel;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Image optionImage;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected TextMeshProUGUI optionNumberLabel;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> Options;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Sprite> Images;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onClick;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool interactable;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int currentIndex;

	[Token(Token = "0x17000011")]
	public int Index
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1203CA0", Offset = "0x1203CA0", VA = "0x1203CA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000112")]
	public abstract void OnPreviousButtonPressed();

	[Token(Token = "0x6000113")]
	public abstract void OnNextButtonPressed();

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1203CA8", Offset = "0x1203CA8", VA = "0x1203CA8", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1203EA0", Offset = "0x1203EA0", VA = "0x1203EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1203CAC", Offset = "0x1203CAC", VA = "0x1203CAC")]
	protected void SetCurrentOptionLabel()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1203EE4", Offset = "0x1203EE4", VA = "0x1203EE4")]
	public string GetCurrentOptionText()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1203F54", Offset = "0x1203F54", VA = "0x1203F54")]
	public void SetCurrentOption(int index)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1203FD4", Offset = "0x1203FD4", VA = "0x1203FD4")]
	protected SelectionSlider()
	{
	}
}
[Token(Token = "0x2000051")]
public class SliderAnimation : MonoBehaviour
{
	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A5A8", Offset = "0xF2A5A8")]
	private sealed class <AnimateRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliderAnimation <>4__this;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <goal>5__2;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentValue>5__3;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0x1209C60", Offset = "0x1209C60", VA = "0x1209C60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000125")]
			[Address(RVA = "0x1209CC8", Offset = "0x1209CC8", VA = "0x1209CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x1209780", Offset = "0x1209780", VA = "0x1209780")]
		[DebuggerHidden]
		public <AnimateRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x1209828", Offset = "0x1209828", VA = "0x1209828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x120982C", Offset = "0x120982C", VA = "0x120982C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x1209C68", Offset = "0x1209C68", VA = "0x1209C68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SlicedFilledImage slicedImage;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StringBuilder strBuilder;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastPercentage;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1209640", Offset = "0x1209640", VA = "0x1209640")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1209708", Offset = "0x1209708", VA = "0x1209708")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x11FB07C", Offset = "0x11FB07C", VA = "0x11FB07C")]
	public void Animate(float value)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x12096CC", Offset = "0x12096CC", VA = "0x12096CC")]
	public void Animate()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1209710", Offset = "0x1209710", VA = "0x1209710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35C6C", Offset = "0xF35C6C")]
	private IEnumerator AnimateRoutine()
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x12097AC", Offset = "0x12097AC", VA = "0x12097AC")]
	public SliderAnimation()
	{
	}
}
[Token(Token = "0x2000053")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A5B8", Offset = "0xF2A5B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A5B8", Offset = "0xF2A5B8")]
public class SwitchUI : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image bgEnabledImage;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image bgDisabledImage;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image bgNotInteractableImage;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image handleEnabledImage;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image handleDisabledImage;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image handleNotInteractableImage;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool switchEnabled;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool objectsHasBeenFound;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x138AE74", Offset = "0x138AE74", VA = "0x138AE74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x138B06C", Offset = "0x138B06C", VA = "0x138B06C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x138B274", Offset = "0x138B274", VA = "0x138B274")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x138B308", Offset = "0x138B308", VA = "0x138B308")]
	public void SetInteractable(bool interactable)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x138AE78", Offset = "0x138AE78", VA = "0x138AE78")]
	private void FindObjects()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x138B40C", Offset = "0x138B40C", VA = "0x138B40C")]
	public void SetValue(bool enabled)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x138B418", Offset = "0x138B418", VA = "0x138B418")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x138B108", Offset = "0x138B108", VA = "0x138B108")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x138B428", Offset = "0x138B428", VA = "0x138B428")]
	public bool IsToggled()
	{
		return default(bool);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x138B430", Offset = "0x138B430", VA = "0x138B430")]
	public SwitchUI()
	{
	}
}
[Token(Token = "0x2000054")]
public class TabulatedUI : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform contentParent;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tabsParent;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x14A8DD0", Offset = "0x14A8DD0", VA = "0x14A8DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x14A8EE0", Offset = "0x14A8EE0", VA = "0x14A8EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x14A8EE4", Offset = "0x14A8EE4", VA = "0x14A8EE4")]
	public TabulatedUI()
	{
	}
}
[Token(Token = "0x2000055")]
public class AttachToObjectPosition : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectToFollow;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ObjectToFollowName;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Offset;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion rotationOffset;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool withRotation;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool lockPitch;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool keepInitialRotation;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool keepInitialPosition;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion initialRotationCorrection;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 initialPositionCorrection;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 initialPosition;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isApplyLimits;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 limitValues;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool removeLocalRotX;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool removeLocalRotY;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool removeLocalRotZ;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x12F0FB4", Offset = "0x12F0FB4", VA = "0x12F0FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x12F1058", Offset = "0x12F1058", VA = "0x12F1058")]
	public void CheckObject()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x12F13E4", Offset = "0x12F13E4", VA = "0x12F13E4")]
	public void SetObjectToFollow(GameObject obj)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x12F1148", Offset = "0x12F1148", VA = "0x12F1148")]
	private void InitialPos()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x12F140C", Offset = "0x12F140C", VA = "0x12F140C")]
	private void SetPosRot()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x12F170C", Offset = "0x12F170C", VA = "0x12F170C")]
	private void ApplyRotationLimits()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x12F17A0", Offset = "0x12F17A0", VA = "0x12F17A0")]
	private void ApplyTranslationLimits()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x12F1AD0", Offset = "0x12F1AD0", VA = "0x12F1AD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x12F1B5C", Offset = "0x12F1B5C", VA = "0x12F1B5C")]
	public AttachToObjectPosition()
	{
	}
}
[Token(Token = "0x2000056")]
public class DesactivateAtStart : MonoBehaviour
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1355740", Offset = "0x1355740", VA = "0x1355740")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1355768", Offset = "0x1355768", VA = "0x1355768")]
	private void Update()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x135576C", Offset = "0x135576C", VA = "0x135576C")]
	public DesactivateAtStart()
	{
	}
}
[Token(Token = "0x2000057")]
public class DestroyAfterTime : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyTime;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x135590C", Offset = "0x135590C", VA = "0x135590C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1355934", Offset = "0x1355934", VA = "0x1355934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x13559E4", Offset = "0x13559E4", VA = "0x13559E4")]
	public DestroyAfterTime()
	{
	}
}
[Token(Token = "0x2000058")]
public class DisplayChanger : MonoBehaviour
{
	[Token(Token = "0x6000142")]
	[Address(RVA = "0x135790C", Offset = "0x135790C", VA = "0x135790C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1357910", Offset = "0x1357910", VA = "0x1357910")]
	public void ChangeDisplay(int targetMonitor)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1357964", Offset = "0x1357964", VA = "0x1357964")]
	public DisplayChanger()
	{
	}
}
[Token(Token = "0x2000059")]
public class FacePlayer : MonoBehaviour
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationOffset;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string PlayerObjectName;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject player;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x135E720", Offset = "0x135E720", VA = "0x135E720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x135E90C", Offset = "0x135E90C", VA = "0x135E90C")]
	public void SetPlayer(GameObject playerToFace)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x135E914", Offset = "0x135E914", VA = "0x135E914")]
	public FacePlayer()
	{
	}
}
[Token(Token = "0x200005A")]
public class INIParser
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int error;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private object m_Lock;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_FileName;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_iniString;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_AutoFlush;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, Dictionary<string, string>> m_Sections;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Dictionary<string, string>> m_Modified;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_CacheModified;

	[Token(Token = "0x17000014")]
	public string FileName
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x1364FB0", Offset = "0x1364FB0", VA = "0x1364FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public string iniString
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x1364FB8", Offset = "0x1364FB8", VA = "0x1364FB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1364FC0", Offset = "0x1364FC0", VA = "0x1364FC0")]
	public void Open(string path, bool autoFlush = false)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x136508C", Offset = "0x136508C", VA = "0x136508C")]
	public void Open(TextAsset name)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1365190", Offset = "0x1365190", VA = "0x1365190")]
	public void OpenFromString(string str)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x136519C", Offset = "0x136519C", VA = "0x136519C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x136507C", Offset = "0x136507C", VA = "0x136507C")]
	private void Initialize(string iniString, bool AutoFlush)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1365458", Offset = "0x1365458", VA = "0x1365458")]
	public void Close()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1366088", Offset = "0x1366088", VA = "0x1366088")]
	private string ParseSectionName(string Line)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1366134", Offset = "0x1366134", VA = "0x1366134")]
	private bool ParseKeyValuePair(string Line, ref string Key, ref string Value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1366234", Offset = "0x1366234", VA = "0x1366234")]
	private bool isComment(string Line)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x13651A4", Offset = "0x13651A4", VA = "0x13651A4")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x13654E4", Offset = "0x13654E4", VA = "0x13654E4")]
	private void PerformFlush()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1366284", Offset = "0x1366284", VA = "0x1366284")]
	public bool IsSectionExists(string SectionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x13662EC", Offset = "0x13662EC", VA = "0x13662EC")]
	public bool IsKeyExists(string SectionName, string Key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x13663B4", Offset = "0x13663B4", VA = "0x13663B4")]
	public void SectionDelete(string SectionName)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x13664D4", Offset = "0x13664D4", VA = "0x13664D4")]
	public void KeyDelete(string SectionName, string Key)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1366658", Offset = "0x1366658", VA = "0x1366658")]
	public string[] GetAllKeysFromSection(string SectionName)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x13668F4", Offset = "0x13668F4", VA = "0x13668F4")]
	public string ReadValue(string SectionName, string Key, string DefaultValue)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1366A68", Offset = "0x1366A68", VA = "0x1366A68")]
	public void WriteValue(string SectionName, string Key, string Value)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1366D38", Offset = "0x1366D38", VA = "0x1366D38")]
	private string EncodeByteArray(byte[] Value)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1366EC8", Offset = "0x1366EC8", VA = "0x1366EC8")]
	private byte[] DecodeByteArray(string Value)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1367004", Offset = "0x1367004", VA = "0x1367004")]
	public bool ReadValue(string SectionName, string Key, bool DefaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x136710C", Offset = "0x136710C", VA = "0x136710C")]
	public int ReadValue(string SectionName, string Key, int DefaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x13671F0", Offset = "0x13671F0", VA = "0x13671F0")]
	public long ReadValue(string SectionName, string Key, long DefaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x13672D4", Offset = "0x13672D4", VA = "0x13672D4")]
	public double ReadValue(string SectionName, string Key, double DefaultValue)
	{
		return default(double);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x13673E0", Offset = "0x13673E0", VA = "0x13673E0")]
	public float ReadValue(string SectionName, string Key, float DefaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x13674C4", Offset = "0x13674C4", VA = "0x13674C4")]
	public byte[] ReadValue(string SectionName, string Key, byte[] DefaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x13675BC", Offset = "0x13675BC", VA = "0x13675BC")]
	public DateTime ReadValue(string SectionName, string Key, DateTime DefaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x13676C8", Offset = "0x13676C8", VA = "0x13676C8")]
	public void WriteValue(string SectionName, string Key, bool Value)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1367754", Offset = "0x1367754", VA = "0x1367754")]
	public void WriteValue(string SectionName, string Key, int Value)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x13677FC", Offset = "0x13677FC", VA = "0x13677FC")]
	public void WriteValue(string SectionName, string Key, long Value)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x13678A4", Offset = "0x13678A4", VA = "0x13678A4")]
	public void WriteValue(string SectionName, string Key, double Value)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x136794C", Offset = "0x136794C", VA = "0x136794C")]
	public void WriteValue(string SectionName, string Key, byte[] Value)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1367990", Offset = "0x1367990", VA = "0x1367990")]
	public void WriteValue(string SectionName, string Key, DateTime Value)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1367A38", Offset = "0x1367A38", VA = "0x1367A38")]
	public INIParser()
	{
	}
}
[Token(Token = "0x200005B")]
public class LocalGuardianBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject eye;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScreenFade fader;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer gridMesh;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 gridAppearDistance;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 gridAppearFadeDistance;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 fadeAppearDistance;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 fadeAppearFadeDistance;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeLevel;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float gridFadeLevel;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color gridColor;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float guardianWidth;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float guardianLenght;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float guardianHeight;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x11C9040", Offset = "0x11C9040", VA = "0x11C9040")]
	private void Start()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x11C9158", Offset = "0x11C9158", VA = "0x11C9158")]
	public void Relocate()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x11C92DC", Offset = "0x11C92DC", VA = "0x11C92DC")]
	public void ClearFader()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x11C92FC", Offset = "0x11C92FC", VA = "0x11C92FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x11C9688", Offset = "0x11C9688", VA = "0x11C9688")]
	public LocalGuardianBehaviour()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class MeshStats : MonoBehaviour
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool displayStats;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ignoreUnder;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x11D7760", Offset = "0x11D7760", VA = "0x11D7760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x11D7764", Offset = "0x11D7764", VA = "0x11D7764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x11D7B34", Offset = "0x11D7B34", VA = "0x11D7B34")]
	public MeshStats()
	{
	}
}
[Token(Token = "0x200005D")]
[ExecuteInEditMode]
public class MigrateToNobleNetworkManager : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool updateToNobleNetwork;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkManager networkManager;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VoxelArenaNobleNetworkManager nobleManager;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x11D7B3C", Offset = "0x11D7B3C", VA = "0x11D7B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x11D7B40", Offset = "0x11D7B40", VA = "0x11D7B40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x11D7DDC", Offset = "0x11D7DDC", VA = "0x11D7DDC")]
	public MigrateToNobleNetworkManager()
	{
	}
}
[Token(Token = "0x200005E")]
[ExecuteInEditMode]
public class MirroredObject : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ExecuteInEditor;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Mirror;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MirrorWorldLayer;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool mirrorRoot;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool syncChildren;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject mirroredObject;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> MirroredTransformChilds;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Transform> OriginTransformChilds;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Plane mirrorPlane;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject MirroredObjectsHolder;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x12A5590", Offset = "0x12A5590", VA = "0x12A5590")]
	private void Update()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x12A5E58", Offset = "0x12A5E58", VA = "0x12A5E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x12A56C0", Offset = "0x12A56C0", VA = "0x12A56C0")]
	private void InstantiateClone()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x12A5FC4", Offset = "0x12A5FC4", VA = "0x12A5FC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x12A5F14", Offset = "0x12A5F14", VA = "0x12A5F14")]
	private void DeleteMirrorInstance()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x12A5A30", Offset = "0x12A5A30", VA = "0x12A5A30")]
	private void MirrorObject()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x12A5FC8", Offset = "0x12A5FC8", VA = "0x12A5FC8")]
	private Quaternion ReflectRotation(Quaternion source, Vector3 normal)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x12A6144", Offset = "0x12A6144", VA = "0x12A6144")]
	public MirroredObject()
	{
	}
}
[Token(Token = "0x200005F")]
public class MixedRealityCapture : Singleton<MixedRealityCapture>
{
	[Token(Token = "0x2000060")]
	private enum CameraMode
	{
		[Token(Token = "0x4000151")]
		Normal,
		[Token(Token = "0x4000152")]
		OverrideFov,
		[Token(Token = "0x4000153")]
		ThirdPerson
	}

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool inited;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CameraMode currentMode;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera defaultExternalCamera;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRPlugin.Fovf defaultFov;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x12A615C", Offset = "0x12A615C", VA = "0x12A615C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x12A620C", Offset = "0x12A620C", VA = "0x12A620C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x12A6434", Offset = "0x12A6434", VA = "0x12A6434")]
	private void UpdateDefaultExternalCamera()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x12A686C", Offset = "0x12A686C", VA = "0x12A686C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x12A702C", Offset = "0x12A702C", VA = "0x12A702C")]
	public MixedRealityCapture()
	{
	}
}
[Token(Token = "0x2000061")]
public class OVRPlayerSingleton : Singleton<OVRPlayerSingleton>
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x19F5F34", Offset = "0x19F5F34", VA = "0x19F5F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x19F5F38", Offset = "0x19F5F38", VA = "0x19F5F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x19F5F3C", Offset = "0x19F5F3C", VA = "0x19F5F3C")]
	public OVRPlayerSingleton()
	{
	}
}
[Token(Token = "0x2000062")]
public class OculusDashboardPause : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjectsToHideOnPause;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useTimeScale;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float prevTimeScale;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LaserPointer laserPointer;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource[] audioSources;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MusicList musicListComponent;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x19FFCE4", Offset = "0x19FFCE4", VA = "0x19FFCE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x19FFE58", Offset = "0x19FFE58", VA = "0x19FFE58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x19FFFCC", Offset = "0x19FFFCC", VA = "0x19FFFCC")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1A00274", Offset = "0x1A00274", VA = "0x1A00274")]
	private void UnPauseGame()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1A00524", Offset = "0x1A00524", VA = "0x1A00524")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1A00578", Offset = "0x1A00578", VA = "0x1A00578")]
	public OculusDashboardPause()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
public class OrbitCamera : MonoBehaviour
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool activate;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camera;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float height;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isHeadsetCamera;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 positionAtStop;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion rotationAtStop;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x143C99C", Offset = "0x143C99C", VA = "0x143C99C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x143CA98", Offset = "0x143CA98", VA = "0x143CA98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x143C9A0", Offset = "0x143C9A0", VA = "0x143C9A0")]
	public void InitOrbitPosition()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x143CB1C", Offset = "0x143CB1C", VA = "0x143CB1C")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x143CC90", Offset = "0x143CC90", VA = "0x143CC90")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x143CF68", Offset = "0x143CF68", VA = "0x143CF68")]
	public void Desactivate()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x143D178", Offset = "0x143D178", VA = "0x143D178")]
	public OrbitCamera()
	{
	}
}
[Token(Token = "0x2000064")]
public class PersistentObject : Singleton<PersistentObject>
{
	[Token(Token = "0x6000194")]
	[Address(RVA = "0x13FEEA0", Offset = "0x13FEEA0", VA = "0x13FEEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x13FEEA4", Offset = "0x13FEEA4", VA = "0x13FEEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x13FEEA8", Offset = "0x13FEEA8", VA = "0x13FEEA8")]
	public PersistentObject()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A684", Offset = "0xF2A684")]
public class RandomClipAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] possibleClip;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x11FBE5C", Offset = "0x11FBE5C", VA = "0x11FBE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x11FBFAC", Offset = "0x11FBFAC", VA = "0x11FBFAC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x11FC02C", Offset = "0x11FC02C", VA = "0x11FC02C")]
	public RandomClipAudioSource()
	{
	}
}
[Token(Token = "0x2000066")]
public class RandomRotateAtStart : MonoBehaviour
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x11FC12C", Offset = "0x11FC12C", VA = "0x11FC12C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x11FC2B4", Offset = "0x11FC2B4", VA = "0x11FC2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x11FC2B8", Offset = "0x11FC2B8", VA = "0x11FC2B8")]
	public RandomRotateAtStart()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2A6E8", Offset = "0xF2A6E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A6E8", Offset = "0xF2A6E8")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int queue;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1204C70", Offset = "0x1204C70", VA = "0x1204C70")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1203ACC", Offset = "0x1203ACC", VA = "0x1203ACC")]
	public void UpdateRenderQueue()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1204C74", Offset = "0x1204C74", VA = "0x1204C74")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000068")]
[ExecuteInEditMode]
public class ShadowManager : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode castShadow;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool receiveShadow;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool apply;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] renderers;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x12072E8", Offset = "0x12072E8", VA = "0x12072E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x12073D4", Offset = "0x12073D4", VA = "0x12073D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1207344", Offset = "0x1207344", VA = "0x1207344")]
	private void ApplyRenderers()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1207400", Offset = "0x1207400", VA = "0x1207400")]
	public ShadowManager()
	{
	}
}
[Token(Token = "0x2000069")]
public class Singleton<Instance> : MonoBehaviour where Instance : Singleton<Instance>
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Instance instance;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isPersistant;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool willBeDestroyed;

	[Token(Token = "0x60001A4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60001A5")]
	public Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x200006A")]
public class Traveling
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject startPoint;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject endPoint;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x15697A4", Offset = "0x15697A4", VA = "0x15697A4")]
	public Traveling()
	{
	}
}
[Token(Token = "0x200006B")]
public class TravelingCamera : MonoBehaviour
{
	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A780", Offset = "0xF2A780")]
	private sealed class <DoTravelings>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelingCamera <>4__this;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <cnt>5__2;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Traveling <traveling>5__3;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentTimeTraveling>5__4;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0x1569E10", Offset = "0x1569E10", VA = "0x1569E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B2")]
			[Address(RVA = "0x1569E78", Offset = "0x1569E78", VA = "0x1569E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x15698B8", Offset = "0x15698B8", VA = "0x15698B8")]
		[DebuggerHidden]
		public <DoTravelings>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x1569A34", Offset = "0x1569A34", VA = "0x1569A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x1569A38", Offset = "0x1569A38", VA = "0x1569A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x1569E18", Offset = "0x1569E18", VA = "0x1569E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Traveling[] travelings;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x15697AC", Offset = "0x15697AC", VA = "0x15697AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x15697FC", Offset = "0x15697FC", VA = "0x15697FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1569848", Offset = "0x1569848", VA = "0x1569848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35D20", Offset = "0xF35D20")]
	private IEnumerator DoTravelings()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x15698E4", Offset = "0x15698E4", VA = "0x15698E4")]
	private void SetCameraToStartPoint(Traveling traveling)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1569988", Offset = "0x1569988", VA = "0x1569988")]
	private void SetCameraToEndPoint(Traveling traveling)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1569A2C", Offset = "0x1569A2C", VA = "0x1569A2C")]
	public TravelingCamera()
	{
	}
}
[Token(Token = "0x200006D")]
public class UnifiedFileFinder
{
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1573B20", Offset = "0x1573B20", VA = "0x1573B20")]
	public static string getFilePath(string filename)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1573CDC", Offset = "0x1573CDC", VA = "0x1573CDC")]
	public UnifiedFileFinder()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0xF2A790", Offset = "0xF2A790")]
public class XMLSerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IXmlSerializable
{
	[Token(Token = "0x60001B5")]
	public XMLSerializableDictionary()
	{
	}

	[Token(Token = "0x60001B6")]
	public XMLSerializableDictionary(IDictionary<TKey, TValue> dictionary)
	{
	}

	[Token(Token = "0x60001B7")]
	public XMLSerializableDictionary(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x60001B8")]
	public XMLSerializableDictionary(IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x60001B9")]
	public XMLSerializableDictionary(int capacity)
	{
	}

	[Token(Token = "0x60001BA")]
	public XMLSerializableDictionary(int capacity, IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x60001BB")]
	public XmlSchema GetSchema()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	public void ReadXml(XmlReader reader)
	{
	}

	[Token(Token = "0x60001BD")]
	public void WriteXml(XmlWriter writer)
	{
	}
}
[Token(Token = "0x200006F")]
public class ExampleMirrorNobleNetworkLobbyManager : NobleRoomManager
{
	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x135CA38", Offset = "0x135CA38", VA = "0x135CA38", Slot = "19")]
	public override void OnClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x135CAC4", Offset = "0x135CAC4", VA = "0x135CAC4", Slot = "20")]
	public override void OnClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x135CB50", Offset = "0x135CB50", VA = "0x135CB50", Slot = "12")]
	public override void OnServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x135CBDC", Offset = "0x135CBDC", VA = "0x135CBDC", Slot = "13")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x135CC68", Offset = "0x135CC68", VA = "0x135CC68", Slot = "34")]
	public override void OnServerPrepared(string hostAddress, ushort hostPort)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x135CE04", Offset = "0x135CE04", VA = "0x135CE04")]
	public ExampleMirrorNobleNetworkLobbyManager()
	{
	}
}
[Token(Token = "0x2000070")]
public class MirrorExamplePlayer : NetworkBehaviour
{
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x12A52F0", Offset = "0x12A52F0", VA = "0x12A52F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x12A5524", Offset = "0x12A5524", VA = "0x12A5524")]
	public MirrorExamplePlayer()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x12A558C", Offset = "0x12A558C", VA = "0x12A558C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000071")]
public class ExampleMirrorNetworkHUD : MonoBehaviour
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NobleNetworkManager networkManager;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string hostIP;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string hostPort;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isHost;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isClient;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x135C048", Offset = "0x135C048", VA = "0x135C048")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x135C138", Offset = "0x135C138", VA = "0x135C138")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x135C2C8", Offset = "0x135C2C8", VA = "0x135C2C8")]
	private void GUIHost()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x135C5BC", Offset = "0x135C5BC", VA = "0x135C5BC")]
	private void GUIClient()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x135C9E0", Offset = "0x135C9E0", VA = "0x135C9E0")]
	public ExampleMirrorNetworkHUD()
	{
	}
}
[Token(Token = "0x2000072")]
public class ExampleMirrorNobleNetworkManager : NobleNetworkManager
{
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x135CE0C", Offset = "0x135CE0C", VA = "0x135CE0C", Slot = "19")]
	public override void OnClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x135CE98", Offset = "0x135CE98", VA = "0x135CE98", Slot = "20")]
	public override void OnClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x135CF24", Offset = "0x135CF24", VA = "0x135CF24", Slot = "12")]
	public override void OnServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x135CFB0", Offset = "0x135CFB0", VA = "0x135CFB0", Slot = "13")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x135D03C", Offset = "0x135D03C", VA = "0x135D03C", Slot = "34")]
	public override void OnServerPrepared(string hostAddress, ushort hostPort)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x135D1D8", Offset = "0x135D1D8", VA = "0x135D1D8")]
	public ExampleMirrorNobleNetworkManager()
	{
	}
}
[Token(Token = "0x2000073")]
public class ServerAuthorityExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float transformMovementSpeed;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x120406C", Offset = "0x120406C", VA = "0x120406C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x12040DC", Offset = "0x12040DC", VA = "0x12040DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1204280", Offset = "0x1204280", VA = "0x1204280")]
	[Command]
	private void CmdTeleport()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1204194", Offset = "0x1204194", VA = "0x1204194")]
	[Command]
	private void CmdMove(KeyCode keyCode)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1204360", Offset = "0x1204360", VA = "0x1204360")]
	public ServerAuthorityExamplePlayerController()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x12043D4", Offset = "0x12043D4", VA = "0x12043D4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x12043D8", Offset = "0x12043D8", VA = "0x12043D8")]
	private void UserCode_CmdTeleport()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x120475C", Offset = "0x120475C", VA = "0x120475C")]
	protected static void InvokeUserCode_CmdTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1204898", Offset = "0x1204898", VA = "0x1204898")]
	private void UserCode_CmdMove(KeyCode keyCode)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x12049D0", Offset = "0x12049D0", VA = "0x12049D0")]
	protected static void InvokeUserCode_CmdMove(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1204B24", Offset = "0x1204B24", VA = "0x1204B24")]
	static ServerAuthorityExamplePlayerController()
	{
	}
}
[Token(Token = "0x2000074")]
public class SmoothSyncMirrorExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transformMovementSpeed;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject childObjectToControl;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1381250", Offset = "0x1381250", VA = "0x1381250")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1381344", Offset = "0x1381344", VA = "0x1381344")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1382790", Offset = "0x1382790", VA = "0x1382790")]
	public static bool validateStateOfPlayer(StateMirror latestReceivedState, StateMirror latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1382884", Offset = "0x1382884", VA = "0x1382884")]
	public SmoothSyncMirrorExamplePlayerController()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x13828F8", Offset = "0x13828F8", VA = "0x13828F8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000075")]
public class KeychainPluginPath : ScriptableObject
{
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1379938", Offset = "0x1379938", VA = "0x1379938")]
	public KeychainPluginPath()
	{
	}
}
[Token(Token = "0x2000076")]
public class AntiPicoKeyboard : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchScreenKeyboard m_keyboard;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x12F0DCC", Offset = "0x12F0DCC", VA = "0x12F0DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x12F0E68", Offset = "0x12F0E68", VA = "0x12F0E68")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x12F0EF8", Offset = "0x12F0EF8", VA = "0x12F0EF8")]
	public AntiPicoKeyboard()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A7C8", Offset = "0xF2A7C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2A7C8", Offset = "0xF2A7C8")]
public class Client : NetworkBehaviour
{
	[Token(Token = "0x2000078")]
	public enum State
	{
		[Token(Token = "0x40001A7")]
		Spawned,
		[Token(Token = "0x40001A8")]
		WaitingQueue,
		[Token(Token = "0x40001A9")]
		Waiting,
		[Token(Token = "0x40001AA")]
		GoingToDelivery,
		[Token(Token = "0x40001AB")]
		AtDelivery,
		[Token(Token = "0x40001AC")]
		Leaving
	}

	[Token(Token = "0x2000079")]
	public enum SkinType
	{
		[Token(Token = "0x40001AE")]
		Man,
		[Token(Token = "0x40001AF")]
		Woman
	}

	[Token(Token = "0x200007A")]
	public delegate void ImLeavingDelegate(Client client);

	[Token(Token = "0x200007B")]
	public enum Event
	{
		[Token(Token = "0x40001B1")]
		None,
		[Token(Token = "0x40001B2")]
		Christmas
	}

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public State state;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D1F4", Offset = "0xF2D1F4")]
	public GameObject[] skins;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	[HideInInspector]
	public int skin;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SkinType[] skinTypes;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	private int skinColor;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D2B4", Offset = "0xF2D2B4")]
	private AudioSource voice;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D2EC", Offset = "0xF2D2EC")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D338", Offset = "0xF2D338")]
	private NavMeshAgent <agent>k__BackingField;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D348", Offset = "0xF2D348")]
	private ThirdPersonCharacter <character>k__BackingField;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float agentWalkSpeed;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float agentRunSpeed;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D358", Offset = "0xF2D358")]
	public OrdersManager.Order order;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public DeliverySpot currentDelivery;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public Transform exitSpot;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject orderUI;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image orderSprite;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject emptySprite;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ProgressBarPro orderTimerUI;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text orderTimerText;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SyncVar]
	private float orderTimeCurrentValue;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SyncVar]
	public int orderIdInt;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool displayOrder;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D40C", Offset = "0xF2D40C")]
	private float spawningdelay;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Animator animator;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float angryTime;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ImLeavingDelegate imLeaving;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private CookPlayerScript player;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D444", Offset = "0xF2D444")]
	public Event specialEvent;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject christmasHat;

	[Token(Token = "0x17000018")]
	public NavMeshAgent agent
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x12F71F4", Offset = "0x12F71F4", VA = "0x12F71F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF35DF4", Offset = "0xF35DF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x12F71FC", Offset = "0x12F71FC", VA = "0x12F71FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF35E04", Offset = "0xF35E04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public ThirdPersonCharacter character
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x12F7204", Offset = "0x12F7204", VA = "0x12F7204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF35E14", Offset = "0xF35E14")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x12F720C", Offset = "0x12F720C", VA = "0x12F720C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF35E24", Offset = "0xF35E24")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public State Networkstate
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x12FA3D4", Offset = "0x12FA3D4", VA = "0x12FA3D4")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x12F8AF0", Offset = "0x12F8AF0", VA = "0x12F8AF0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public int Networkskin
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x12FA3DC", Offset = "0x12FA3DC", VA = "0x12FA3DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x12F9ECC", Offset = "0x12F9ECC", VA = "0x12F9ECC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public int NetworkskinColor
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x12FA3E4", Offset = "0x12FA3E4", VA = "0x12FA3E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x12F9FDC", Offset = "0x12F9FDC", VA = "0x12F9FDC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float NetworkorderTimeCurrentValue
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x12FA3EC", Offset = "0x12FA3EC", VA = "0x12FA3EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x12F8E74", Offset = "0x12F8E74", VA = "0x12F8E74")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public int NetworkorderIdInt
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x12FA3F4", Offset = "0x12FA3F4", VA = "0x12FA3F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x12FA3FC", Offset = "0x12FA3FC", VA = "0x12FA3FC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x12F7214", Offset = "0x12F7214", VA = "0x12F7214")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x12F72DC", Offset = "0x12F72DC", VA = "0x12F72DC")]
	public void Init()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x12F7D90", Offset = "0x12F7D90", VA = "0x12F7D90")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x12F930C", Offset = "0x12F930C", VA = "0x12F930C")]
	public void OrderHasBeenDelivered()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x12F9164", Offset = "0x12F9164", VA = "0x12F9164")]
	public void Leave()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x12F9728", Offset = "0x12F9728", VA = "0x12F9728")]
	public void ForceToDelivery(DeliverySpot spot)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x12F98A8", Offset = "0x12F98A8", VA = "0x12F98A8")]
	private void UpdateOrder(int oldOrder, int newOrder)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x12F9940", Offset = "0x12F9940", VA = "0x12F9940")]
	private void ChangeSkin(int oldSkin, int newSkin)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x12F8F10", Offset = "0x12F8F10", VA = "0x12F8F10")]
	private void PlayRandomVoice(RandomizeClient.VoiceType type, string order)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x12F9AAC", Offset = "0x12F9AAC", VA = "0x12F9AAC")]
	[ClientRpc]
	private void RpcPlayVoice(RandomizeClient.VoiceType type, string order)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x12F8DB8", Offset = "0x12F8DB8", VA = "0x12F8DB8")]
	public void MoveTo(Transform target)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x12F89A0", Offset = "0x12F89A0", VA = "0x12F89A0")]
	public bool CheckifReached()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x12F8B8C", Offset = "0x12F8B8C", VA = "0x12F8B8C")]
	public void LookForwardTarget(Transform target)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x12F9BCC", Offset = "0x12F9BCC", VA = "0x12F9BCC")]
	[ClientRpc]
	public void RpcPlayRefused()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x12F9CAC", Offset = "0x12F9CAC", VA = "0x12F9CAC")]
	public void PlayRefused()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x12F9D4C", Offset = "0x12F9D4C", VA = "0x12F9D4C")]
	[ClientRpc]
	public void RpcPlayDelivered()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x12F9E2C", Offset = "0x12F9E2C", VA = "0x12F9E2C")]
	public void PlayDelivered()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x12F7510", Offset = "0x12F7510", VA = "0x12F7510")]
	private void PickRandomSkin()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x12F99F0", Offset = "0x12F99F0", VA = "0x12F99F0")]
	private void ApplySpecialEvent()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x12F7710", Offset = "0x12F7710", VA = "0x12F7710")]
	private void GenerateOrderSprite()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x12FA0EC", Offset = "0x12FA0EC", VA = "0x12FA0EC")]
	private Sprite FindIngredientSprite(string id)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x12FA21C", Offset = "0x12FA21C", VA = "0x12FA21C")]
	public void SetSkinColor(int colorId)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x12FA25C", Offset = "0x12FA25C", VA = "0x12FA25C")]
	private void UpdateSkinColor(int oldColor, int newColor)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x12FA348", Offset = "0x12FA348", VA = "0x12FA348")]
	public Client()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x12FA3D0", Offset = "0x12FA3D0", VA = "0x12FA3D0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x12FA50C", Offset = "0x12FA50C", VA = "0x12FA50C")]
	private void UserCode_RpcPlayVoice(RandomizeClient.VoiceType type, string order)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x12FA678", Offset = "0x12FA678", VA = "0x12FA678")]
	protected static void InvokeUserCode_RpcPlayVoice(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x12FA7C0", Offset = "0x12FA7C0", VA = "0x12FA7C0")]
	public void UserCode_RpcPlayRefused()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x12FA7C4", Offset = "0x12FA7C4", VA = "0x12FA7C4")]
	protected static void InvokeUserCode_RpcPlayRefused(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x12FA8B4", Offset = "0x12FA8B4", VA = "0x12FA8B4")]
	public void UserCode_RpcPlayDelivered()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x12FA8B8", Offset = "0x12FA8B8", VA = "0x12FA8B8")]
	protected static void InvokeUserCode_RpcPlayDelivered(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x12FA9A8", Offset = "0x12FA9A8", VA = "0x12FA9A8")]
	static Client()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x12FAB38", Offset = "0x12FAB38", VA = "0x12FAB38", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x12FAD6C", Offset = "0x12FAD6C", VA = "0x12FAD6C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200007C")]
public class DeliverySpot : Storage
{
	[Token(Token = "0x200007D")]
	public enum State
	{
		[Token(Token = "0x40001C5")]
		Available,
		[Token(Token = "0x40001C6")]
		Unavailable
	}

	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A854", Offset = "0xF2A854")]
	private sealed class <CheckObjectRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeliverySpot <>4__this;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayTime;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject item;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000246")]
			[Address(RVA = "0x13550FC", Offset = "0x13550FC", VA = "0x13550FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000248")]
			[Address(RVA = "0x1355164", Offset = "0x1355164", VA = "0x1355164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1352E60", Offset = "0x1352E60", VA = "0x1352E60")]
		[DebuggerHidden]
		public <CheckObjectRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x1354B84", Offset = "0x1354B84", VA = "0x1354B84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x1354B88", Offset = "0x1354B88", VA = "0x1354B88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1355104", Offset = "0x1355104", VA = "0x1355104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A864", Offset = "0xF2A864")]
	private sealed class <ValidateItem>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractiveProp interactiveprop;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DeliverySpot <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600024C")]
			[Address(RVA = "0x13556D0", Offset = "0x13556D0", VA = "0x13556D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600024E")]
			[Address(RVA = "0x1355738", Offset = "0x1355738", VA = "0x1355738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x1352F08", Offset = "0x1352F08", VA = "0x1352F08")]
		[DebuggerHidden]
		public <ValidateItem>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x135516C", Offset = "0x135516C", VA = "0x135516C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x1355170", Offset = "0x1355170", VA = "0x1355170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x13556D8", Offset = "0x13556D8", VA = "0x13556D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A874", Offset = "0xF2A874")]
	private sealed class <ChangeDeliveryState>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeliverySpot <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000252")]
			[Address(RVA = "0x1354B14", Offset = "0x1354B14", VA = "0x1354B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0x1354B7C", Offset = "0x1354B7C", VA = "0x1354B7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x1353A58", Offset = "0x1353A58", VA = "0x1353A58")]
		[DebuggerHidden]
		public <ChangeDeliveryState>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x1354A64", Offset = "0x1354A64", VA = "0x1354A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x1354A68", Offset = "0x1354A68", VA = "0x1354A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x1354B1C", Offset = "0x1354B1C", VA = "0x1354B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public State state;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Client currentClient;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem deliveredParticle;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem refusedParticle;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem wrongSequenceParticle;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem notFilledEnoughParticle;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource jingleDeliverd;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SpriteRenderer orderSprite;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform waitingPoint;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text dollarValue;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform dollarPosition;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool checking;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource failJingle;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject plate;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<string> plateOrder;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ParticleSystem plateParticle;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool plateActivated;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x13523B8", Offset = "0x13523B8", VA = "0x13523B8", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x135247C", Offset = "0x135247C", VA = "0x135247C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1352784", Offset = "0x1352784", VA = "0x1352784")]
	[ClientRpc]
	public void RpcDestroyItem(GameObject item)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1352898", Offset = "0x1352898", VA = "0x1352898")]
	public void DestroyItem(GameObject item)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1352984", Offset = "0x1352984", VA = "0x1352984", Slot = "19")]
	public override void AddObject(GameObject item, int i)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x13526A4", Offset = "0x13526A4", VA = "0x13526A4")]
	public void CheckObject()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1352DD0", Offset = "0x1352DD0", VA = "0x1352DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35E74", Offset = "0xF35E74")]
	private IEnumerator CheckObjectRoutine(GameObject item, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1352E8C", Offset = "0x1352E8C", VA = "0x1352E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35ED8", Offset = "0xF35ED8")]
	private IEnumerator ValidateItem(InteractiveProp interactiveprop)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1352F34", Offset = "0x1352F34", VA = "0x1352F34")]
	[ClientRpc]
	public void RpcPlayRefused()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1353014", Offset = "0x1353014", VA = "0x1353014")]
	public void PlayRefused()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x13530F4", Offset = "0x13530F4", VA = "0x13530F4")]
	[ClientRpc]
	public void RpcPlayNotFilled()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x13531D4", Offset = "0x13531D4", VA = "0x13531D4")]
	public void PlayNotFilled()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x13532B4", Offset = "0x13532B4", VA = "0x13532B4")]
	[ClientRpc]
	public void RpcPlayWrongSequence()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1353394", Offset = "0x1353394", VA = "0x1353394")]
	public void PlayWrongSequence()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1353474", Offset = "0x1353474", VA = "0x1353474")]
	[ClientRpc]
	private void RpcPlayDollard(float price)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1353590", Offset = "0x1353590", VA = "0x1353590")]
	private void PlayDollar(float price)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1353764", Offset = "0x1353764", VA = "0x1353764")]
	private void DesactivateDollar()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x13537B8", Offset = "0x13537B8", VA = "0x13537B8")]
	private bool CheckContent(string orderID, string productID)
	{
		return default(bool);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x13539E8", Offset = "0x13539E8", VA = "0x13539E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF35F7C", Offset = "0xF35F7C")]
	public IEnumerator ChangeDeliveryState()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1353A84", Offset = "0x1353A84", VA = "0x1353A84")]
	public void ActivatePlate()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1353C44", Offset = "0x1353C44", VA = "0x1353C44")]
	public void DisplayPlate()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1353D08", Offset = "0x1353D08", VA = "0x1353D08")]
	[ClientRpc]
	public void RpcDisplayPlate()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1353DE8", Offset = "0x1353DE8", VA = "0x1353DE8")]
	public void DesactivatePlate()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1353E70", Offset = "0x1353E70", VA = "0x1353E70")]
	[ClientRpc]
	public void RpcDesactivatePlate()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1353F50", Offset = "0x1353F50", VA = "0x1353F50")]
	public DeliverySpot()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1353FE0", Offset = "0x1353FE0", VA = "0x1353FE0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1353FE4", Offset = "0x1353FE4", VA = "0x1353FE4")]
	public void UserCode_RpcDestroyItem(GameObject item)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x135405C", Offset = "0x135405C", VA = "0x135405C")]
	protected static void InvokeUserCode_RpcDestroyItem(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1354190", Offset = "0x1354190", VA = "0x1354190")]
	public void UserCode_RpcPlayRefused()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1354194", Offset = "0x1354194", VA = "0x1354194")]
	protected static void InvokeUserCode_RpcPlayRefused(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1354284", Offset = "0x1354284", VA = "0x1354284")]
	public void UserCode_RpcPlayNotFilled()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1354288", Offset = "0x1354288", VA = "0x1354288")]
	protected static void InvokeUserCode_RpcPlayNotFilled(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1354378", Offset = "0x1354378", VA = "0x1354378")]
	public void UserCode_RpcPlayWrongSequence()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x135437C", Offset = "0x135437C", VA = "0x135437C")]
	protected static void InvokeUserCode_RpcPlayWrongSequence(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x135446C", Offset = "0x135446C", VA = "0x135446C")]
	private void UserCode_RpcPlayDollard(float price)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1354470", Offset = "0x1354470", VA = "0x1354470")]
	protected static void InvokeUserCode_RpcPlayDollard(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x135459C", Offset = "0x135459C", VA = "0x135459C")]
	public void UserCode_RpcDisplayPlate()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x13545A0", Offset = "0x13545A0", VA = "0x13545A0")]
	protected static void InvokeUserCode_RpcDisplayPlate(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1354690", Offset = "0x1354690", VA = "0x1354690")]
	public void UserCode_RpcDesactivatePlate()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1354694", Offset = "0x1354694", VA = "0x1354694")]
	protected static void InvokeUserCode_RpcDesactivatePlate(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1354784", Offset = "0x1354784", VA = "0x1354784")]
	static DeliverySpot()
	{
	}
}
[Token(Token = "0x2000081")]
public class MoveTo : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform goal;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x12A7560", Offset = "0x12A7560", VA = "0x12A7560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x12A75DC", Offset = "0x12A75DC", VA = "0x12A75DC")]
	public MoveTo()
	{
	}
}
[Token(Token = "0x2000082")]
public class OrdersManager : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x2000083")]
	public class Order
	{
		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string orderId;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int price;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weight;

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x143E31C", Offset = "0x143E31C", VA = "0x143E31C")]
		public Order()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000084")]
	public class IngredientSprite
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite sprite;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x143E5AC", Offset = "0x143E5AC", VA = "0x143E5AC")]
		public IngredientSprite()
		{
		}
	}

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OrdersManager instance;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Transform> waitingQueuePositionList;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Client> clientList;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> clientGameObjectList;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Order> allowedOrders;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int tutoOrderId;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<IngredientSprite> ingredientsSprites;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeBetweenClients;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timer;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<DeliverySpot> deliverySpots;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public WaitingQueue waitingQueue;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform spawningPoint;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject clientPrefab;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform exitSpot;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool desactivateOrders;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CookManager manager;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float difficultyModifier;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int clientIdentifier;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int amountOfClientsLines;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int infiniteScalingFactor;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x143D230", Offset = "0x143D230", VA = "0x143D230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x143D490", Offset = "0x143D490", VA = "0x143D490")]
	private void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x143D50C", Offset = "0x143D50C", VA = "0x143D50C")]
	private void Update()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x143E144", Offset = "0x143E144", VA = "0x143E144")]
	private void ClientIsLeaving(Client client)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x143DFF0", Offset = "0x143DFF0", VA = "0x143DFF0")]
	private DeliverySpot FindFirstAvailableSpot()
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x143DAE8", Offset = "0x143DAE8", VA = "0x143DAE8")]
	public void SpawnClient()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x143E324", Offset = "0x143E324", VA = "0x143E324")]
	public void AskAllClientsToLeave()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x143D3D8", Offset = "0x143D3D8", VA = "0x143D3D8")]
	public void SetDeliverySpotsNumber(int number)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x143E3F8", Offset = "0x143E3F8", VA = "0x143E3F8")]
	public void SetDeliverySpots(List<DeliverySpot> newDeliverySpots)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x143E1AC", Offset = "0x143E1AC", VA = "0x143E1AC")]
	public int GetRandomOrder(List<Order> orderList)
	{
		return default(int);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x143E4DC", Offset = "0x143E4DC", VA = "0x143E4DC")]
	public OrdersManager()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x143E5A8", Offset = "0x143E5A8", VA = "0x143E5A8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000085")]
public class RandomizeClient : MonoBehaviour
{
	[Token(Token = "0x2000086")]
	public enum VoiceType
	{
		[Token(Token = "0x40001F4")]
		Hello,
		[Token(Token = "0x40001F5")]
		Waiting,
		[Token(Token = "0x40001F6")]
		Leaving,
		[Token(Token = "0x40001F7")]
		Thanks
	}

	[Serializable]
	[Token(Token = "0x2000087")]
	public class VoiceClip
	{
		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoiceType voiceType;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string associatedOrder;

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x11FC708", Offset = "0x11FC708", VA = "0x11FC708")]
		public VoiceClip()
		{
		}
	}

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VoiceClip[] voicesFR;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VoiceClip[] voicesENG;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] skinColors;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool allowChristmasHat;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int randomPick;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x11FC30C", Offset = "0x11FC30C", VA = "0x11FC30C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x11FC310", Offset = "0x11FC310", VA = "0x11FC310")]
	public int RandomizeSkinColor()
	{
		return default(int);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x11FC3F0", Offset = "0x11FC3F0", VA = "0x11FC3F0")]
	public VoiceClip GetVoiceClip(VoiceType type, string order, TranslationManager.Language language)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x11FC35C", Offset = "0x11FC35C", VA = "0x11FC35C")]
	public void SetSkinColor(int color)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x11FC700", Offset = "0x11FC700", VA = "0x11FC700")]
	public RandomizeClient()
	{
	}
}
[Token(Token = "0x2000088")]
public class SimpleClient : NetworkBehaviour
{
	[Token(Token = "0x2000089")]
	public enum Event
	{
		[Token(Token = "0x4000201")]
		None,
		[Token(Token = "0x4000202")]
		Christmas
	}

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] skins;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	private int skin;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	private int skinColor;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D4F4", Offset = "0xF2D4F4")]
	public Event specialEvent;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject christmasHat;

	[Token(Token = "0x17000025")]
	public int Networkskin
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1208A08", Offset = "0x1208A08", VA = "0x1208A08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x12084EC", Offset = "0x12084EC", VA = "0x12084EC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public int NetworkskinColor
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1208A10", Offset = "0x1208A10", VA = "0x1208A10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x1208600", Offset = "0x1208600", VA = "0x1208600")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1208288", Offset = "0x1208288", VA = "0x1208288")]
	private void Start()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x12082D8", Offset = "0x12082D8", VA = "0x12082D8")]
	private void PickRandomSkin()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1208710", Offset = "0x1208710", VA = "0x1208710")]
	private void ApplySpecialEvent()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1208848", Offset = "0x1208848", VA = "0x1208848")]
	private void UpdateSkin(int oldSkin, int newSkin)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1208444", Offset = "0x1208444", VA = "0x1208444")]
	private void ApplySkin()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x120886C", Offset = "0x120886C", VA = "0x120886C")]
	public void SetSkinColor(int colorId)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x12088AC", Offset = "0x12088AC", VA = "0x12088AC")]
	private void UpdateSkinColor(int oldColor, int newColor)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1208994", Offset = "0x1208994", VA = "0x1208994")]
	public SimpleClient()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1208A04", Offset = "0x1208A04", VA = "0x1208A04")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1208A18", Offset = "0x1208A18", VA = "0x1208A18", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1208B74", Offset = "0x1208B74", VA = "0x1208B74", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200008A")]
public class WaitingQueue
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Transform> positionList;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Client> clientList;

	[Token(Token = "0x17000027")]
	public int Capacity
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x1C1FDBC", Offset = "0x1C1FDBC", VA = "0x1C1FDBC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1C1F9A8", Offset = "0x1C1F9A8", VA = "0x1C1F9A8")]
	public WaitingQueue(List<Transform> positionList)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1C1FA2C", Offset = "0x1C1FA2C", VA = "0x1C1FA2C")]
	public bool CanAddClient()
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1C1FA90", Offset = "0x1C1FA90", VA = "0x1C1FA90")]
	public void AddClient(Client client)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1C1FB50", Offset = "0x1C1FB50", VA = "0x1C1FB50")]
	public Client GetFirstInQueue()
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1C1FC9C", Offset = "0x1C1FC9C", VA = "0x1C1FC9C")]
	public Client FindFirstClient()
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1C1FD00", Offset = "0x1C1FD00", VA = "0x1C1FD00")]
	public bool CheckIfFull()
	{
		return default(bool);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1C1FD64", Offset = "0x1C1FD64", VA = "0x1C1FD64")]
	public bool CheckIfEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1C1FBD4", Offset = "0x1C1FBD4", VA = "0x1C1FBD4")]
	private void RelocateAllClients()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1C1FE0C", Offset = "0x1C1FE0C", VA = "0x1C1FE0C")]
	public void ClearClientList()
	{
	}
}
[Token(Token = "0x200008B")]
public class Walking : NetworkBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target1;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target2;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform currentTarget;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D52C", Offset = "0xF2D52C")]
	private NavMeshAgent <agent>k__BackingField;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D53C", Offset = "0xF2D53C")]
	private ThirdPersonCharacter <character>k__BackingField;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isInitDone;

	[Token(Token = "0x17000028")]
	public NavMeshAgent agent
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1C1FE64", Offset = "0x1C1FE64", VA = "0x1C1FE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF360F0", Offset = "0xF360F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x1C1FE6C", Offset = "0x1C1FE6C", VA = "0x1C1FE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF36100", Offset = "0xF36100")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public ThirdPersonCharacter character
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1C1FE74", Offset = "0x1C1FE74", VA = "0x1C1FE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF36110", Offset = "0xF36110")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x1C1FE7C", Offset = "0x1C1FE7C", VA = "0x1C1FE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF36120", Offset = "0xF36120")]
		private set
		{
		}
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1C1FE84", Offset = "0x1C1FE84", VA = "0x1C1FE84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1C1FE88", Offset = "0x1C1FE88", VA = "0x1C1FE88", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1C1FFFC", Offset = "0x1C1FFFC", VA = "0x1C1FFFC", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1C1FEEC", Offset = "0x1C1FEEC", VA = "0x1C1FEEC")]
	private void Init()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1C20074", Offset = "0x1C20074", VA = "0x1C20074")]
	private void Update()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1C201D0", Offset = "0x1C201D0", VA = "0x1C201D0")]
	public bool CheckifReached()
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1C20034", Offset = "0x1C20034", VA = "0x1C20034")]
	private void MoveTo(Transform target)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1C20294", Offset = "0x1C20294", VA = "0x1C20294")]
	public Walking()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1C202FC", Offset = "0x1C202FC", VA = "0x1C202FC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200008C")]
public class FollowPath : NetworkBehaviour
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] pathNode;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float moveSpeed;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startPosition;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 currentPositionHolder;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int currentNode;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int startingNode;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13621B8", Offset = "0x13621B8", VA = "0x13621B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x13621E0", Offset = "0x13621E0", VA = "0x13621E0")]
	private void CheckNode()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x13622E8", Offset = "0x13622E8", VA = "0x13622E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x13625B4", Offset = "0x13625B4", VA = "0x13625B4")]
	public FollowPath()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x136261C", Offset = "0x136261C", VA = "0x136261C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200008D")]
public class BatAnimationCheck : MonoBehaviour
{
	[Token(Token = "0x6000296")]
	[Address(RVA = "0x12F423C", Offset = "0x12F423C", VA = "0x12F423C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x12F4240", Offset = "0x12F4240", VA = "0x12F4240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x12F4244", Offset = "0x12F4244", VA = "0x12F4244")]
	public BatAnimationCheck()
	{
	}
}
[Token(Token = "0x200008E")]
public class IceCreamBox : NetworkBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string iceCreamId;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float previousValue;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SkinnedMeshRenderer iceCream;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentValue;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float shapeValue;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject progressbarParent;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool scooperDetected;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SyncVar]
	public bool displayProgressBar;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IceCreamScooper scooperScript;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioScooping;

	[Token(Token = "0x1700002A")]
	public bool NetworkdisplayProgressBar
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x1368774", Offset = "0x1368774", VA = "0x1368774")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x13680A8", Offset = "0x13680A8", VA = "0x13680A8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1367AE8", Offset = "0x1367AE8", VA = "0x1367AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1367B9C", Offset = "0x1367B9C", VA = "0x1367B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1367CE8", Offset = "0x1367CE8", VA = "0x1367CE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1367F8C", Offset = "0x1367F8C", VA = "0x1367F8C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1368148", Offset = "0x1368148", VA = "0x1368148")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1367EAC", Offset = "0x1367EAC", VA = "0x1367EAC")]
	[Command]
	public void CmdSetScooperId()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1368548", Offset = "0x1368548", VA = "0x1368548")]
	[ClientRpc]
	public void RpcSetScooperId()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1368628", Offset = "0x1368628", VA = "0x1368628")]
	[Command]
	public void CmdIncreaseScooperTimer()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1368708", Offset = "0x1368708", VA = "0x1368708")]
	public IceCreamBox()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1368770", Offset = "0x1368770", VA = "0x1368770")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x136877C", Offset = "0x136877C", VA = "0x136877C")]
	public void UserCode_CmdSetScooperId()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x136880C", Offset = "0x136880C", VA = "0x136880C")]
	protected static void InvokeUserCode_CmdSetScooperId(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1368948", Offset = "0x1368948", VA = "0x1368948")]
	public void UserCode_RpcSetScooperId()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x13689D4", Offset = "0x13689D4", VA = "0x13689D4")]
	protected static void InvokeUserCode_RpcSetScooperId(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1368AC4", Offset = "0x1368AC4", VA = "0x1368AC4")]
	public void UserCode_CmdIncreaseScooperTimer()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1368B64", Offset = "0x1368B64", VA = "0x1368B64")]
	protected static void InvokeUserCode_CmdIncreaseScooperTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1368CA0", Offset = "0x1368CA0", VA = "0x1368CA0")]
	static IceCreamBox()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1368E38", Offset = "0x1368E38", VA = "0x1368E38", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1368F30", Offset = "0x1368F30", VA = "0x1368F30", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200008F")]
public class IceCreamIDHolder : NetworkBehaviour
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material chocolatMaterial;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material vanillaMaterial;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x136900C", Offset = "0x136900C", VA = "0x136900C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1369010", Offset = "0x1369010", VA = "0x1369010")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1369014", Offset = "0x1369014", VA = "0x1369014")]
	public void ChangeMaterial(string ID)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x13691C4", Offset = "0x13691C4", VA = "0x13691C4")]
	[ClientRpc]
	public void RpcChangeMaterial(string ID)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x13692D8", Offset = "0x13692D8", VA = "0x13692D8")]
	public IceCreamIDHolder()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1369340", Offset = "0x1369340", VA = "0x1369340")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1369344", Offset = "0x1369344", VA = "0x1369344")]
	public void UserCode_RpcChangeMaterial(string ID)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1369348", Offset = "0x1369348", VA = "0x1369348")]
	protected static void InvokeUserCode_RpcChangeMaterial(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x136947C", Offset = "0x136947C", VA = "0x136947C")]
	static IceCreamIDHolder()
	{
	}
}
[Token(Token = "0x2000090")]
public class IceCreamScooper : NetworkBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public bool isAcceptIceCream;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string iceCreamId;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material chocolatMaterial;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material vanillaMaterial;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public float iceCreamTimer;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float iceCreamTimerMax;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookPlayerScript localPlayer;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool forceSpawn;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject iceCreamObject;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxScale;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool grabLeftHand;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool isCaught;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem spawningParticle;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool reachedMaxSize;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource audio;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject spawnedObject;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastHapticTime;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float maxHapticTime;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform localGripPointRight;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform localGripPointLeft;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform localGripPoint;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject parentObject;

	[Token(Token = "0x1700002B")]
	public bool NetworkisAcceptIceCream
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x136A250", Offset = "0x136A250", VA = "0x136A250")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x13696A4", Offset = "0x13696A4", VA = "0x13696A4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float NetworkiceCreamTimer
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x136A258", Offset = "0x136A258", VA = "0x136A258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x13683BC", Offset = "0x13683BC", VA = "0x13683BC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x136955C", Offset = "0x136955C", VA = "0x136955C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x136981C", Offset = "0x136981C", VA = "0x136981C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1369D2C", Offset = "0x1369D2C", VA = "0x1369D2C")]
	public void SpawnObject(GameObject prefab, Transform location, int i)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1369F10", Offset = "0x1369F10", VA = "0x1369F10")]
	public void OnGrabBegin(bool isLeftHand)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x136A014", Offset = "0x136A014", VA = "0x136A014")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1369B2C", Offset = "0x1369B2C", VA = "0x1369B2C")]
	public void ReleaseIceCream()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1369C4C", Offset = "0x1369C4C", VA = "0x1369C4C")]
	[Command]
	public void CmdReleaseIceCream()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x136A01C", Offset = "0x136A01C", VA = "0x136A01C")]
	[ClientRpc]
	public void RpcReleaseIceCream()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1369744", Offset = "0x1369744", VA = "0x1369744")]
	private bool CheckIfAllowed(string ingredientName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x136A0FC", Offset = "0x136A0FC", VA = "0x136A0FC")]
	[ClientRpc]
	private void RpcSpawningParticle()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1369C10", Offset = "0x1369C10", VA = "0x1369C10")]
	private void SpawningParticle()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1367E6C", Offset = "0x1367E6C", VA = "0x1367E6C")]
	public void forcedReset()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1368458", Offset = "0x1368458", VA = "0x1368458")]
	public void ApticLaunch(bool leftHand, float strenght)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x136A1DC", Offset = "0x136A1DC", VA = "0x136A1DC")]
	public IceCreamScooper()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x136A24C", Offset = "0x136A24C", VA = "0x136A24C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x136A260", Offset = "0x136A260", VA = "0x136A260")]
	public void UserCode_CmdReleaseIceCream()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x136A314", Offset = "0x136A314", VA = "0x136A314")]
	protected static void InvokeUserCode_CmdReleaseIceCream(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x136A450", Offset = "0x136A450", VA = "0x136A450")]
	public void UserCode_RpcReleaseIceCream()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x136A458", Offset = "0x136A458", VA = "0x136A458")]
	protected static void InvokeUserCode_RpcReleaseIceCream(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x136A548", Offset = "0x136A548", VA = "0x136A548")]
	private void UserCode_RpcSpawningParticle()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x136A54C", Offset = "0x136A54C", VA = "0x136A54C")]
	protected static void InvokeUserCode_RpcSpawningParticle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x136A63C", Offset = "0x136A63C", VA = "0x136A63C")]
	static IceCreamScooper()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x136A7D0", Offset = "0x136A7D0", VA = "0x136A7D0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x136A93C", Offset = "0x136A93C", VA = "0x136A93C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000091")]
public class Knife : NetworkBehaviour
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particles;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastRotation;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speed;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rotationSpeed;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float speedLimitForParticle;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rotationSpeedLimitForParticle;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rb;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 particleLocalPos;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audio;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip impactSound;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip cutSound;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem sparkles;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool grabLeftHand;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastHapticTime;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float maxHapticTime;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isGrabbed;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected CookPlayerScript player;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1379940", Offset = "0x1379940", VA = "0x1379940")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x13799DC", Offset = "0x13799DC", VA = "0x13799DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1379CF0", Offset = "0x1379CF0", VA = "0x1379CF0")]
	[ClientRpc]
	private void RpcCut(int way)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1379E04", Offset = "0x1379E04", VA = "0x1379E04")]
	private void Cut(int way)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1379F68", Offset = "0x1379F68", VA = "0x1379F68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x137A02C", Offset = "0x137A02C", VA = "0x137A02C")]
	private void PlayKnifeImpact()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x137A0E4", Offset = "0x137A0E4", VA = "0x137A0E4", Slot = "15")]
	protected virtual void OnGrabBegin()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x137A314", Offset = "0x137A314", VA = "0x137A314", Slot = "16")]
	protected virtual void OnGrabEnd()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x137A230", Offset = "0x137A230", VA = "0x137A230")]
	public void ApticLaunch(bool leftHand)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x137A31C", Offset = "0x137A31C", VA = "0x137A31C")]
	public Knife()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x137A398", Offset = "0x137A398", VA = "0x137A398")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x137A39C", Offset = "0x137A39C", VA = "0x137A39C")]
	private void UserCode_RpcCut(int way)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x137A3A0", Offset = "0x137A3A0", VA = "0x137A3A0")]
	protected static void InvokeUserCode_RpcCut(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x137A4D4", Offset = "0x137A4D4", VA = "0x137A4D4")]
	static Knife()
	{
	}
}
[Token(Token = "0x2000092")]
public class LeverAction : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform jointPoint;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x152A0B4", Offset = "0x152A0B4", VA = "0x152A0B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x152A0B8", Offset = "0x152A0B8", VA = "0x152A0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x152A198", Offset = "0x152A198", VA = "0x152A198")]
	public LeverAction()
	{
	}
}
[Token(Token = "0x2000093")]
public class MultiplayerSpawnPositions : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawPositions;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x12AD758", Offset = "0x12AD758", VA = "0x12AD758")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x12AD75C", Offset = "0x12AD75C", VA = "0x12AD75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x12AD760", Offset = "0x12AD760", VA = "0x12AD760")]
	public MultiplayerSpawnPositions()
	{
	}
}
[Token(Token = "0x2000094")]
[ExecuteInEditMode]
public class ObjectSpawner : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x2000095")]
	private class PrefabDictionnary : SerializableDictionaryBase<string, GameObject>
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x19F7C94", Offset = "0x19F7C94", VA = "0x19F7C94")]
		public PrefabDictionnary()
		{
		}
	}

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PrefabDictionnary prefabDico;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> spawnedObjs;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool instantiate;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	private bool reset;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x19F7744", Offset = "0x19F7744", VA = "0x19F7744")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x19F780C", Offset = "0x19F780C", VA = "0x19F780C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x19F777C", Offset = "0x19F777C", VA = "0x19F777C")]
	private void InstantiatePrefabs()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x19F79E4", Offset = "0x19F79E4", VA = "0x19F79E4")]
	private void InstantiatePrefab(GameObject obj)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x19F7858", Offset = "0x19F7858", VA = "0x19F7858")]
	private void RemoveObjects()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x19F7BE8", Offset = "0x19F7BE8", VA = "0x19F7BE8")]
	public ObjectSpawner()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x19F7D04", Offset = "0x19F7D04", VA = "0x19F7D04")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000096")]
public class OvenDoor : NetworkBehaviour
{
	[Token(Token = "0x2000097")]
	public enum State
	{
		[Token(Token = "0x4000264")]
		CLOSED,
		[Token(Token = "0x4000265")]
		OPENED
	}

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool closedAtMin;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public State state;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion pivotStartRot;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform pivot;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minAngle;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxAngle;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 translationAxis;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 referenceAxis;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 projectionPlan;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform handle;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float handleOriginalValue;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CookingProp[] ovenSpots;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PasteReceiver[] pasteReceivers;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource cookingSound;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool snap;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 handleOriginalPos;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion HandleOriginalRot;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool colorChange;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material materialToChange;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Color colorIdle;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Color colorCooking;

	[Token(Token = "0x1700002D")]
	public State Networkstate
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x143F460", Offset = "0x143F460", VA = "0x143F460")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x143F0D4", Offset = "0x143F0D4", VA = "0x143F0D4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x143E5B4", Offset = "0x143E5B4", VA = "0x143E5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x143E74C", Offset = "0x143E74C", VA = "0x143E74C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x143ED9C", Offset = "0x143ED9C", VA = "0x143ED9C")]
	private void RotateLever()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x143EF98", Offset = "0x143EF98", VA = "0x143EF98")]
	private bool CheckIfContainSomethingCooking()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x143F284", Offset = "0x143F284", VA = "0x143F284")]
	public void ChangeColor(bool isCooking)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x143F170", Offset = "0x143F170", VA = "0x143F170")]
	[ClientRpc]
	public void RpcChangeColor(bool isCooking)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x143F314", Offset = "0x143F314", VA = "0x143F314")]
	public OvenDoor()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x143F45C", Offset = "0x143F45C", VA = "0x143F45C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x143F468", Offset = "0x143F468", VA = "0x143F468")]
	public void UserCode_RpcChangeColor(bool isCooking)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x143F470", Offset = "0x143F470", VA = "0x143F470")]
	protected static void InvokeUserCode_RpcChangeColor(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x143F5A0", Offset = "0x143F5A0", VA = "0x143F5A0")]
	static OvenDoor()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x143F680", Offset = "0x143F680", VA = "0x143F680", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x143F740", Offset = "0x143F740", VA = "0x143F740", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000098")]
public class PasteDispenser : NetworkBehaviour
{
	[Token(Token = "0x2000099")]
	public enum State
	{
		[Token(Token = "0x4000281")]
		Translation,
		[Token(Token = "0x4000282")]
		Rotation,
		[Token(Token = "0x4000283")]
		Ready
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public State currentState;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] headPositions;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int positionId;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dispenserHead;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool movable;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem pasteParticle;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioPaste;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CookingProp[] cookingProps;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D5CC", Offset = "0xF2D5CC")]
	private Quaternion pivotStartRot;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform pivot;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minAngle;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxAngle;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform handle;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float handleOriginalValue;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SyncVar]
	public bool springAction;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 translationAxis;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 referenceAxis;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 projectionPlan;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool increasingAngle;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string ingredientName;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool activated;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool rotationFirst;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D614", Offset = "0xF2D614")]
	public bool forceMove;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	[SyncVar]
	public bool dispensePaste;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool stopCookingWhenDispensing;

	[Token(Token = "0x1700002E")]
	public State NetworkcurrentState
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x13FC7B4", Offset = "0x13FC7B4", VA = "0x13FC7B4")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x13FB9D4", Offset = "0x13FB9D4", VA = "0x13FB9D4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool NetworkspringAction
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x13FC7BC", Offset = "0x13FC7BC", VA = "0x13FC7BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x13FC7C4", Offset = "0x13FC7C4", VA = "0x13FC7C4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool NetworkdispensePaste
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x13FC864", Offset = "0x13FC864", VA = "0x13FC864")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x13FC290", Offset = "0x13FC290", VA = "0x13FC290")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x13FB7FC", Offset = "0x13FB7FC", VA = "0x13FB7FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x13FBC3C", Offset = "0x13FBC3C", VA = "0x13FBC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x13FBA70", Offset = "0x13FBA70", VA = "0x13FBA70")]
	public void MoveDispenser(int headposition)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x13FC330", Offset = "0x13FC330", VA = "0x13FC330")]
	private void RotateLever()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x13FBB60", Offset = "0x13FBB60", VA = "0x13FBB60")]
	private bool CheckIfAllowed(string ingredientName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x13FC664", Offset = "0x13FC664", VA = "0x13FC664")]
	public PasteDispenser()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x13FC7B0", Offset = "0x13FC7B0", VA = "0x13FC7B0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x13FC86C", Offset = "0x13FC86C", VA = "0x13FC86C", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x13FCA08", Offset = "0x13FCA08", VA = "0x13FCA08", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200009A")]
public class SauceBottle : NetworkBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D65C", Offset = "0xF2D65C")]
	public ParticleSystem sauce;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject visual;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject visualPressed;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioSource;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D694", Offset = "0xF2D694")]
	public float hapticIntensity;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float hapticFrequency;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CookPlayerScript localPlayer;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tools tool;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool grabLeftHand;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isCaught;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool prevIsPressing;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lastHapticTime;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float maxHapticTime;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x11FF7F8", Offset = "0x11FF7F8", VA = "0x11FF7F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11FFA10", Offset = "0x11FFA10", VA = "0x11FFA10")]
	private void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x11FFFB4", Offset = "0x11FFFB4", VA = "0x11FFFB4")]
	public void OnGrabBegin(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x11FFD74", Offset = "0x11FFD74", VA = "0x11FFD74")]
	[ClientRpc]
	public void RpcPlaySound()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x11FFED4", Offset = "0x11FFED4", VA = "0x11FFED4")]
	[ClientRpc]
	public void RpcStopSound()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x11FFFD8", Offset = "0x11FFFD8", VA = "0x11FFFD8")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x12000B4", Offset = "0x12000B4", VA = "0x12000B4")]
	public void TriggerSauce(bool value)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1200108", Offset = "0x1200108", VA = "0x1200108")]
	[ClientRpc]
	public void RpcTriggerSauce(bool value)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x11FFE54", Offset = "0x11FFE54", VA = "0x11FFE54")]
	public void ApticLaunch(bool leftHand, float strenght, float lenght)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x11FF938", Offset = "0x11FF938", VA = "0x11FF938")]
	private bool CheckIfAllowed(string ingredientName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x120021C", Offset = "0x120021C", VA = "0x120021C")]
	public SauceBottle()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x120029C", Offset = "0x120029C", VA = "0x120029C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x12002A0", Offset = "0x12002A0", VA = "0x12002A0")]
	public void UserCode_RpcPlaySound()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x12002BC", Offset = "0x12002BC", VA = "0x12002BC")]
	protected static void InvokeUserCode_RpcPlaySound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x12003B4", Offset = "0x12003B4", VA = "0x12003B4")]
	public void UserCode_RpcStopSound()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x12003D0", Offset = "0x12003D0", VA = "0x12003D0")]
	protected static void InvokeUserCode_RpcStopSound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x12004C8", Offset = "0x12004C8", VA = "0x12004C8")]
	public void UserCode_RpcTriggerSauce(bool value)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x12004F0", Offset = "0x12004F0", VA = "0x12004F0")]
	protected static void InvokeUserCode_RpcTriggerSauce(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1200620", Offset = "0x1200620", VA = "0x1200620")]
	static SauceBottle()
	{
	}
}
[Token(Token = "0x200009B")]
public class SauceParticles : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem part;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pilePrefab;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject splatPrefab;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cnt;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x12007B0", Offset = "0x12007B0", VA = "0x12007B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1200830", Offset = "0x1200830", VA = "0x1200830")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1200D94", Offset = "0x1200D94", VA = "0x1200D94")]
	public SauceParticles()
	{
	}
}
[Token(Token = "0x200009C")]
public class ShackableBottle : NetworkBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particles;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastRotation;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speed;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rotationSpeed;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float speedLimitForParticle;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rotationSpeedLimitForParticle;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rb;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 particleLocalPos;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audio;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool grabLeftHand;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isCaught;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x12067A8", Offset = "0x12067A8", VA = "0x12067A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x120695C", Offset = "0x120695C", VA = "0x120695C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1206B60", Offset = "0x1206B60", VA = "0x1206B60")]
	[Command]
	public void CmdPlayParticle()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1206CB8", Offset = "0x1206CB8", VA = "0x1206CB8")]
	[ClientRpc]
	public void RpcPlayParticle()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1206884", Offset = "0x1206884", VA = "0x1206884")]
	private bool CheckIfAllowed(string ingredientName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1206D98", Offset = "0x1206D98", VA = "0x1206D98")]
	public void OnGrabBegin(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1206DAC", Offset = "0x1206DAC", VA = "0x1206DAC")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1206C40", Offset = "0x1206C40", VA = "0x1206C40")]
	public void ApticLaunch(bool leftHand)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1206DB4", Offset = "0x1206DB4", VA = "0x1206DB4")]
	public ShackableBottle()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1206E24", Offset = "0x1206E24", VA = "0x1206E24")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1206E28", Offset = "0x1206E28", VA = "0x1206E28")]
	public void UserCode_CmdPlayParticle()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1206ED8", Offset = "0x1206ED8", VA = "0x1206ED8")]
	protected static void InvokeUserCode_CmdPlayParticle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1207014", Offset = "0x1207014", VA = "0x1207014")]
	public void UserCode_RpcPlayParticle()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x12070B8", Offset = "0x12070B8", VA = "0x12070B8")]
	protected static void InvokeUserCode_RpcPlayParticle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x12071A8", Offset = "0x12071A8", VA = "0x12071A8")]
	static ShackableBottle()
	{
	}
}
[Token(Token = "0x200009D")]
public class CheatMode : MonoBehaviour
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TranslationManager.Language currentLanguage;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x12F68A4", Offset = "0x12F68A4", VA = "0x12F68A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x12F693C", Offset = "0x12F693C", VA = "0x12F693C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x12F6A14", Offset = "0x12F6A14", VA = "0x12F6A14")]
	public void UnlockAllLevels()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x12F6B68", Offset = "0x12F6B68", VA = "0x12F6B68")]
	public void SetLanguage()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x12F6E54", Offset = "0x12F6E54", VA = "0x12F6E54")]
	public CheatMode()
	{
	}
}
[Token(Token = "0x200009E")]
public class CookManager : GameManager
{
	[Token(Token = "0x200009F")]
	public enum GameState
	{
		[Token(Token = "0x40002B2")]
		WAIT,
		[Token(Token = "0x40002B3")]
		INGAME,
		[Token(Token = "0x40002B4")]
		END
	}

	[Serializable]
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A894", Offset = "0xF2A894")]
	private sealed class <>c
	{
		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__24_0;

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x12FD5A8", Offset = "0x12FD5A8", VA = "0x12FD5A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x12FD5B0", Offset = "0x12FD5B0", VA = "0x12FD5B0")]
		internal bool <CleanUpSpawnedObjectsList>b__24_0(GameObject GameObject)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8A4", Offset = "0xF2A8A4")]
	private sealed class <PayDebtRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookManager <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x12FD970", Offset = "0x12FD970", VA = "0x12FD970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x12FD9D8", Offset = "0x12FD9D8", VA = "0x12FD9D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x12FCB8C", Offset = "0x12FCB8C", VA = "0x12FCB8C")]
		[DebuggerHidden]
		public <PayDebtRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x12FD61C", Offset = "0x12FD61C", VA = "0x12FD61C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x12FD620", Offset = "0x12FD620", VA = "0x12FD620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x12FD978", Offset = "0x12FD978", VA = "0x12FD978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public GameState gameState;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<GameObject> spawnedObjects;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float listCleanUpTimer;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CookManager instance;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject inGameUI;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameScoreDisplay scoreDisplay;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D708", Offset = "0xF2D708")]
	[SyncVar]
	public float debtTimer;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SyncVar]
	public int debt;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float timeNextPaiement;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public float interestRate;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public InfiniteSuitCase suiteCase;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float previousSecondDebt;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public bool isEnding;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	[HideInInspector]
	public bool isClosingSuit;

	[Token(Token = "0x17000031")]
	public GameState NetworkgameState
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x12FCC4C", Offset = "0x12FCC4C", VA = "0x12FCC4C")]
		get
		{
			return default(GameState);
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x12FCC54", Offset = "0x12FCC54", VA = "0x12FCC54")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float NetworkdebtTimer
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x12FCD78", Offset = "0x12FCD78", VA = "0x12FCD78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x12FC808", Offset = "0x12FC808", VA = "0x12FC808")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public int Networkdebt
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x12FCD80", Offset = "0x12FCD80", VA = "0x12FCD80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x12FCD88", Offset = "0x12FCD88", VA = "0x12FCD88")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x12FC3E8", Offset = "0x12FC3E8", VA = "0x12FC3E8", Slot = "22")]
	public virtual void LoadLobby()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x12FC3EC", Offset = "0x12FC3EC", VA = "0x12FC3EC", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x12FC490", Offset = "0x12FC490", VA = "0x12FC490", Slot = "23")]
	public virtual void StartGameLogic()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x12FC494", Offset = "0x12FC494", VA = "0x12FC494", Slot = "24")]
	public virtual void LoadCurrentLevelScene()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x12FC498", Offset = "0x12FC498", VA = "0x12FC498", Slot = "25")]
	public virtual void LoadNextLevel()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x12FC49C", Offset = "0x12FC49C", VA = "0x12FC49C", Slot = "26")]
	public virtual float GetDebt()
	{
		return default(float);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x12FC4A8", Offset = "0x12FC4A8", VA = "0x12FC4A8", Slot = "27")]
	public virtual void Exit(bool exit)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x12FC4AC", Offset = "0x12FC4AC", VA = "0x12FC4AC", Slot = "28")]
	protected virtual void ChangeGameState(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x12FC4B0", Offset = "0x12FC4B0", VA = "0x12FC4B0", Slot = "29")]
	public virtual void LoadEnding()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x12FC4B4", Offset = "0x12FC4B4", VA = "0x12FC4B4")]
	public void CleanUpSpawnedObjectsList()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x12FC5D0", Offset = "0x12FC5D0", VA = "0x12FC5D0")]
	public bool CanPayDebt(float amountToPay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x12FC65C", Offset = "0x12FC65C", VA = "0x12FC65C")]
	public void ManageDebt()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x12FC914", Offset = "0x12FC914", VA = "0x12FC914")]
	public void FailedToPay()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x12FC9CC", Offset = "0x12FC9CC", VA = "0x12FC9CC")]
	[ClientRpc]
	public void RpcFailedToPay()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x12FCAAC", Offset = "0x12FCAAC", VA = "0x12FCAAC")]
	[ClientRpc]
	public void RpcDebtRoutine()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x12FC8A4", Offset = "0x12FC8A4", VA = "0x12FC8A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36230", Offset = "0xF36230")]
	private IEnumerator PayDebtRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x12FCBB8", Offset = "0x12FCBB8", VA = "0x12FCBB8")]
	public CookManager()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x12FCC48", Offset = "0x12FCC48", VA = "0x12FCC48")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x12FCE24", Offset = "0x12FCE24", VA = "0x12FCE24")]
	public void UserCode_RpcFailedToPay()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x12FCE40", Offset = "0x12FCE40", VA = "0x12FCE40")]
	protected static void InvokeUserCode_RpcFailedToPay(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x12FCF38", Offset = "0x12FCF38", VA = "0x12FCF38")]
	public void UserCode_RpcDebtRoutine()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x12FCF64", Offset = "0x12FCF64", VA = "0x12FCF64")]
	protected static void InvokeUserCode_RpcDebtRoutine(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x12FD064", Offset = "0x12FD064", VA = "0x12FD064")]
	static CookManager()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x12FD1A0", Offset = "0x12FD1A0", VA = "0x12FD1A0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x12FD33C", Offset = "0x12FD33C", VA = "0x12FD33C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000A2")]
public class CookScoreManager : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A3")]
	public class Score
	{
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int burgersUnlocked;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int bestProfit;

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1300B90", Offset = "0x1300B90", VA = "0x1300B90")]
		public Score(int burger, int profit)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000A4")]
	public class LevelScoresDictionnary : SerializableDictionaryBase<int, Score>
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1303DF4", Offset = "0x1303DF4", VA = "0x1303DF4")]
		public LevelScoresDictionnary()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	public enum ScoreInfoType
	{
		[Token(Token = "0x40002D1")]
		LOSTCLIENT,
		[Token(Token = "0x40002D2")]
		DELIVERYERROR,
		[Token(Token = "0x40002D3")]
		DELIVEREDCLIENT,
		[Token(Token = "0x40002D4")]
		ALIMENTCUT,
		[Token(Token = "0x40002D5")]
		BURGERCOOKED,
		[Token(Token = "0x40002D6")]
		FRIESDELIVERED,
		[Token(Token = "0x40002D7")]
		DRINKDELIVERED
	}

	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8B4", Offset = "0xF2A8B4")]
	private sealed class <IncrementBurgerNumber>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro totalBurgersUnlocked;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int value;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0x1303D84", Offset = "0x1303D84", VA = "0x1303D84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039E")]
			[Address(RVA = "0x1303DEC", Offset = "0x1303DEC", VA = "0x1303DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1302E70", Offset = "0x1302E70", VA = "0x1302E70")]
		[DebuggerHidden]
		public <IncrementBurgerNumber>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x1303C80", Offset = "0x1303C80", VA = "0x1303C80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x1303C84", Offset = "0x1303C84", VA = "0x1303C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1303D8C", Offset = "0x1303D8C", VA = "0x1303D8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelScoresDictionnary levelScores;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CookScoreManager instance;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public float timerForInfinite;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string gameModeName;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string levelsType;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int newBurgersGained;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public int lostClients;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	public int deliveryErrors;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public int deliveredClients;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	private int alimentsCut;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SyncVar]
	private int burgersCooked;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SyncVar]
	private int friesDelivered;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SyncVar]
	private int drinksDelivered;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public int score;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	public int debtPaid;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int wastedMoney;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int gainsMoney;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int totalScore;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int availableMoney;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool fullyResetScore;

	[Token(Token = "0x17000036")]
	public float NetworktimerForInfinite
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x1302F20", Offset = "0x1302F20", VA = "0x1302F20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x12FC930", Offset = "0x12FC930", VA = "0x12FC930")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public int NetworklostClients
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1302F28", Offset = "0x1302F28", VA = "0x1302F28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1301ED0", Offset = "0x1301ED0", VA = "0x1301ED0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public int NetworkdeliveryErrors
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1302F30", Offset = "0x1302F30", VA = "0x1302F30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1302218", Offset = "0x1302218", VA = "0x1302218")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public int NetworkdeliveredClients
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1302F38", Offset = "0x1302F38", VA = "0x1302F38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1302110", Offset = "0x1302110", VA = "0x1302110")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public int NetworkalimentsCut
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1302F40", Offset = "0x1302F40", VA = "0x1302F40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1301FD8", Offset = "0x1301FD8", VA = "0x1301FD8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public int NetworkburgersCooked
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1302F48", Offset = "0x1302F48", VA = "0x1302F48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1302074", Offset = "0x1302074", VA = "0x1302074")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public int NetworkfriesDelivered
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1302F50", Offset = "0x1302F50", VA = "0x1302F50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x13023BC", Offset = "0x13023BC", VA = "0x13023BC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public int NetworkdrinksDelivered
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1302F58", Offset = "0x1302F58", VA = "0x1302F58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1302320", Offset = "0x1302320", VA = "0x1302320")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public int Networkscore
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1302F60", Offset = "0x1302F60", VA = "0x1302F60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1302A40", Offset = "0x1302A40", VA = "0x1302A40")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public int NetworkdebtPaid
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1302F68", Offset = "0x1302F68", VA = "0x1302F68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x12FD864", Offset = "0x12FD864", VA = "0x12FD864")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1300414", Offset = "0x1300414", VA = "0x1300414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x130057C", Offset = "0x130057C", VA = "0x130057C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x13009F4", Offset = "0x13009F4", VA = "0x13009F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1300580", Offset = "0x1300580", VA = "0x1300580")]
	public void LoadSavedScore()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1300BC8", Offset = "0x1300BC8", VA = "0x1300BC8")]
	public void SaveScores()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x13015EC", Offset = "0x13015EC", VA = "0x13015EC")]
	public Score GetLevelScore(int levelId)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x13016CC", Offset = "0x13016CC", VA = "0x13016CC")]
	public int GetTotalBurgersUnlocked()
	{
		return default(int);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x13017D0", Offset = "0x13017D0", VA = "0x13017D0")]
	public int GetTotalModeScore(string gameModeName, string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1301B80", Offset = "0x1301B80", VA = "0x1301B80")]
	public int GetTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1301B88", Offset = "0x1301B88", VA = "0x1301B88")]
	public int GetMoneyAvailable()
	{
		return default(int);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1300A4C", Offset = "0x1300A4C", VA = "0x1300A4C")]
	public int GetTotalBestScores()
	{
		return default(int);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1301B90", Offset = "0x1301B90", VA = "0x1301B90")]
	public int GetRestaurantTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1301C4C", Offset = "0x1301C4C", VA = "0x1301C4C")]
	public void SetLevelScore(int levelId, int burgers, int money)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x12F90EC", Offset = "0x12F90EC", VA = "0x12F90EC")]
	public void AddScoreInfo(ScoreInfoType type)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1302458", Offset = "0x1302458", VA = "0x1302458")]
	private void ScoreChange(int oldScore, int newScore)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x13024D4", Offset = "0x13024D4", VA = "0x13024D4")]
	[ClientRpc]
	private void RpcUpdateScores()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x13025B4", Offset = "0x13025B4", VA = "0x13025B4")]
	private void PaidDebt(int oldScore, int newScore)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1302690", Offset = "0x1302690", VA = "0x1302690")]
	[ClientRpc]
	private void RpcPaidDebt()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x13025F4", Offset = "0x13025F4", VA = "0x13025F4")]
	private void UpdatePaidDebt()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1302770", Offset = "0x1302770", VA = "0x1302770")]
	public void CheckAllWaste()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1302B48", Offset = "0x1302B48", VA = "0x1302B48")]
	public void ResetLevelScore()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1300A24", Offset = "0x1300A24", VA = "0x1300A24")]
	public void ResetGlobalScore()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1302BBC", Offset = "0x1302BBC", VA = "0x1302BBC")]
	public void AddNewScore(string levelName, int levelId)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1302DF0", Offset = "0x1302DF0", VA = "0x1302DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36304", Offset = "0xF36304")]
	private IEnumerator IncrementBurgerNumber(TextMeshPro totalBurgersUnlocked, int value)
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1302D14", Offset = "0x1302D14", VA = "0x1302D14")]
	public int CalculateBurgersUnlocked()
	{
		return default(int);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1302E9C", Offset = "0x1302E9C", VA = "0x1302E9C")]
	public int GetNbLostClients()
	{
		return default(int);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x12F70B0", Offset = "0x12F70B0", VA = "0x12F70B0")]
	public void AddAvailableMoney(int amount)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1302EA4", Offset = "0x1302EA4", VA = "0x1302EA4")]
	public CookScoreManager()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1302F1C", Offset = "0x1302F1C", VA = "0x1302F1C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1302F70", Offset = "0x1302F70", VA = "0x1302F70")]
	private void UserCode_RpcUpdateScores()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1302FEC", Offset = "0x1302FEC", VA = "0x1302FEC")]
	protected static void InvokeUserCode_RpcUpdateScores(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x13030D8", Offset = "0x13030D8", VA = "0x13030D8")]
	private void UserCode_RpcPaidDebt()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x13030DC", Offset = "0x13030DC", VA = "0x13030DC")]
	protected static void InvokeUserCode_RpcPaidDebt(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x13031CC", Offset = "0x13031CC", VA = "0x13031CC")]
	static CookScoreManager()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1303308", Offset = "0x1303308", VA = "0x1303308", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x13036D4", Offset = "0x13036D4", VA = "0x13036D4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000A7")]
public class FinaleManager : GameManager
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MusicList gameMusic;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject paper;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x135E974", Offset = "0x135E974", VA = "0x135E974", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x135EA18", Offset = "0x135EA18", VA = "0x135EA18", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x135EA20", Offset = "0x135EA20", VA = "0x135EA20")]
	public void ShowPaper()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x135EA40", Offset = "0x135EA40", VA = "0x135EA40")]
	public void LoadLobby()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x135EBAC", Offset = "0x135EBAC", VA = "0x135EBAC")]
	public FinaleManager()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x135EC14", Offset = "0x135EC14", VA = "0x135EC14")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20000A8")]
public class InGameLBEManager : CookManager
{
	[Serializable]
	[Token(Token = "0x20000A9")]
	public class StoredTool
	{
		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toolOjbect;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 toolOriginalPosition;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion toolOriginalRotation;

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x136CA50", Offset = "0x136CA50", VA = "0x136CA50")]
		public StoredTool()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8C4", Offset = "0xF2A8C4")]
	private sealed class <AlarmRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameLBEManager <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0x136C718", Offset = "0x136C718", VA = "0x136C718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x136C780", Offset = "0x136C780", VA = "0x136C780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x136BD88", Offset = "0x136BD88", VA = "0x136BD88")]
		[DebuggerHidden]
		public <AlarmRoutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x136C434", Offset = "0x136C434", VA = "0x136C434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x136C438", Offset = "0x136C438", VA = "0x136C438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x136C720", Offset = "0x136C720", VA = "0x136C720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8D4", Offset = "0xF2A8D4")]
	private sealed class <PlayToolFogForClient>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoredTool tool;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x136C854", Offset = "0x136C854", VA = "0x136C854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x136C8BC", Offset = "0x136C8BC", VA = "0x136C8BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x136C19C", Offset = "0x136C19C", VA = "0x136C19C")]
		[DebuggerHidden]
		public <PlayToolFogForClient>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x136C788", Offset = "0x136C788", VA = "0x136C788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x136C78C", Offset = "0x136C78C", VA = "0x136C78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x136C85C", Offset = "0x136C85C", VA = "0x136C85C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8E4", Offset = "0xF2A8E4")]
	private sealed class <ToolRespawnRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameLBEManager <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x136C9E0", Offset = "0x136C9E0", VA = "0x136C9E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0x136CA48", Offset = "0x136CA48", VA = "0x136CA48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x136C1C8", Offset = "0x136C1C8", VA = "0x136C1C8")]
		[DebuggerHidden]
		public <ToolRespawnRoutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x136C8C4", Offset = "0x136C8C4", VA = "0x136C8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x136C8C8", Offset = "0x136C8C8", VA = "0x136C8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x136C9E8", Offset = "0x136C9E8", VA = "0x136C9E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D920", Offset = "0xF2D920")]
	public AudioSource whistleAudio;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource bip;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MusicList gameMusic;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource endingMusic;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource applauseAudio;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float previousMin;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float previousTenthSecond;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float previousSecond;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParticleSystem[] particleEnding;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D958", Offset = "0xF2D958")]
	public GameObject tutoPopup;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LevelObjectsLinker linkerScript;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D990", Offset = "0xF2D990")]
	public AudioSource alarmSound;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ParticleSystem[] alarmParticles;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AnimatedButton alarmButton;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool isAlarmInProgress;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public StoredTool[] tools;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AnimatedButton toolButton;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isToolAlarmInProgress;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x136AE7C", Offset = "0x136AE7C", VA = "0x136AE7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x136B000", Offset = "0x136B000", VA = "0x136B000", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x136B2F4", Offset = "0x136B2F4", VA = "0x136B2F4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x136B3E8", Offset = "0x136B3E8", VA = "0x136B3E8", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x136B4E8", Offset = "0x136B4E8", VA = "0x136B4E8", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x136B6F4", Offset = "0x136B6F4", VA = "0x136B6F4", Slot = "20")]
	protected override void StopGameOnServer()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x136BB9C", Offset = "0x136BB9C", VA = "0x136BB9C")]
	public string SecondsToString(float time)
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x136BA08", Offset = "0x136BA08", VA = "0x136BA08")]
	[ClientRpc]
	protected void RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x136BAE8", Offset = "0x136BAE8", VA = "0x136BAE8")]
	protected void PlayEndingEffect()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x136B1D4", Offset = "0x136B1D4", VA = "0x136B1D4")]
	private void LinkObjects()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x136B86C", Offset = "0x136B86C", VA = "0x136B86C")]
	public void ResetAllStorage()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x136BCE0", Offset = "0x136BCE0", VA = "0x136BCE0")]
	public void LaunchAlarm()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x136BD18", Offset = "0x136BD18", VA = "0x136BD18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF363C8", Offset = "0xF363C8")]
	private IEnumerator AlarmRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x136BDB4", Offset = "0x136BDB4", VA = "0x136BDB4")]
	public void ResetTools()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x136C12C", Offset = "0x136C12C", VA = "0x136C12C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3642C", Offset = "0xF3642C")]
	private IEnumerator PlayToolFogForClient(StoredTool tool)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x136B240", Offset = "0x136B240", VA = "0x136B240")]
	public void StoreToolsPosition()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x136C0BC", Offset = "0x136C0BC", VA = "0x136C0BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36490", Offset = "0xF36490")]
	private IEnumerator ToolRespawnRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x136C1F4", Offset = "0x136C1F4", VA = "0x136C1F4")]
	public InGameLBEManager()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x136C25C", Offset = "0x136C25C", VA = "0x136C25C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x136C260", Offset = "0x136C260", VA = "0x136C260")]
	protected void UserCode_RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x136C264", Offset = "0x136C264", VA = "0x136C264")]
	protected static void InvokeUserCode_RpcPlayEndingEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x136C354", Offset = "0x136C354", VA = "0x136C354")]
	static InGameLBEManager()
	{
	}
}
[Token(Token = "0x20000AD")]
public class InGameManager : CookManager
{
	[Serializable]
	[Token(Token = "0x20000AE")]
	public class StoredTool
	{
		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toolOjbect;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 toolOriginalPosition;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion toolOriginalRotation;

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x13710D8", Offset = "0x13710D8", VA = "0x13710D8")]
		public StoredTool()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A8F4", Offset = "0xF2A8F4")]
	private sealed class <PlayToolFogForClient>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoredTool tool;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x1370EDC", Offset = "0x1370EDC", VA = "0x1370EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x1370F44", Offset = "0x1370F44", VA = "0x1370F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1370210", Offset = "0x1370210", VA = "0x1370210")]
		[DebuggerHidden]
		public <PlayToolFogForClient>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1370E10", Offset = "0x1370E10", VA = "0x1370E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1370E14", Offset = "0x1370E14", VA = "0x1370E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1370EE4", Offset = "0x1370EE4", VA = "0x1370EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A904", Offset = "0xF2A904")]
	private sealed class <AlarmRoutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameManager <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0x1370DA0", Offset = "0x1370DA0", VA = "0x1370DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x1370E08", Offset = "0x1370E08", VA = "0x1370E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x137023C", Offset = "0x137023C", VA = "0x137023C")]
		[DebuggerHidden]
		public <AlarmRoutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1370AAC", Offset = "0x1370AAC", VA = "0x1370AAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1370AB0", Offset = "0x1370AB0", VA = "0x1370AB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x1370DA8", Offset = "0x1370DA8", VA = "0x1370DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A914", Offset = "0xF2A914")]
	private sealed class <ToolRespawnRoutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameManager <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x1371068", Offset = "0x1371068", VA = "0x1371068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x13710D0", Offset = "0x13710D0", VA = "0x13710D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1370268", Offset = "0x1370268", VA = "0x1370268")]
		[DebuggerHidden]
		public <ToolRespawnRoutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1370F4C", Offset = "0x1370F4C", VA = "0x1370F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1370F50", Offset = "0x1370F50", VA = "0x1370F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1371070", Offset = "0x1371070", VA = "0x1371070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2D9C8", Offset = "0xF2D9C8")]
	public AudioSource whistleAudio;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource bip;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MusicList gameMusic;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource endingMusic;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource applauseAudio;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float previousMin;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float previousTenthSecond;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float previousSecond;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParticleSystem[] particleEnding;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DA00", Offset = "0xF2DA00")]
	public GameObject playerCentralEye;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip startSound;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip showObjectiveSound;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DA38", Offset = "0xF2DA38")]
	public GameObject localGuardian;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject tutoPopup;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioSource popupAudioSrc;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public LevelObjectsLinker linkerScript;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DA70", Offset = "0xF2DA70")]
	public AudioSource alarmSound;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ParticleSystem[] alarmParticles;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AnimatedButton alarmButton;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool isAlarmInProgress;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AnimatedButton toolButton;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool isToolAlarmInProgress;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DAA8", Offset = "0xF2DAA8")]
	public AudioClip backToMenuSound;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip replaySound;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip nextSound;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip showScoresSound;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DAE0", Offset = "0xF2DAE0")]
	private PlayerScript playerScript;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public StoredTool[] tools;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ArcadeInterface svrInterface;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x136CA58", Offset = "0x136CA58", VA = "0x136CA58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x136CCC8", Offset = "0x136CCC8", VA = "0x136CCC8", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x136D034", Offset = "0x136D034", VA = "0x136D034", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x136D3D4", Offset = "0x136D3D4", VA = "0x136D3D4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x136D4C8", Offset = "0x136D4C8", VA = "0x136D4C8", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x136DA70", Offset = "0x136DA70", VA = "0x136DA70")]
	private void UpdateSolo()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x136D54C", Offset = "0x136D54C", VA = "0x136D54C")]
	private void UpdateMulti()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x136DE20", Offset = "0x136DE20", VA = "0x136DE20")]
	private void UpdateSynthesisTimer()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x136E368", Offset = "0x136E368", VA = "0x136E368", Slot = "22")]
	public override void LoadLobby()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x136E698", Offset = "0x136E698", VA = "0x136E698", Slot = "24")]
	public override void LoadCurrentLevelScene()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x136E7D0", Offset = "0x136E7D0", VA = "0x136E7D0", Slot = "29")]
	public override void LoadEnding()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x136E93C", Offset = "0x136E93C", VA = "0x136E93C", Slot = "25")]
	public override void LoadNextLevel()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x136EA68", Offset = "0x136EA68", VA = "0x136EA68", Slot = "23")]
	public override void StartGameLogic()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x136ED6C", Offset = "0x136ED6C", VA = "0x136ED6C")]
	[ClientRpc]
	private void RpcSuitcaseAppear()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x136EED4", Offset = "0x136EED4", VA = "0x136EED4")]
	[ClientRpc]
	private void RpcCloseUi()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x136EFB4", Offset = "0x136EFB4", VA = "0x136EFB4")]
	private void CloseUI()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x136E0F8", Offset = "0x136E0F8", VA = "0x136E0F8")]
	private void StopGame()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x136F6C4", Offset = "0x136F6C4", VA = "0x136F6C4", Slot = "20")]
	protected override void StopGameOnServer()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x136F880", Offset = "0x136F880", VA = "0x136F880")]
	[ClientRpc]
	private void RpcStopGame(int wastes, int gains, int score)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x136F2C0", Offset = "0x136F2C0", VA = "0x136F2C0")]
	[ClientRpc]
	protected void RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x136F3A0", Offset = "0x136F3A0", VA = "0x136F3A0")]
	protected void PlayEndingEffect()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x136F9C4", Offset = "0x136F9C4", VA = "0x136F9C4", Slot = "28")]
	protected override void ChangeGameState(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x136D138", Offset = "0x136D138", VA = "0x136D138")]
	private void SetGameState(GameState state)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x136E4C8", Offset = "0x136E4C8", VA = "0x136E4C8")]
	private void UpdateSessionToWebServer()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x136F9EC", Offset = "0x136F9EC", VA = "0x136F9EC")]
	private void UpdateSessionToWebServer(bool isGameEnded)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x136FBC4", Offset = "0x136FBC4", VA = "0x136FBC4", Slot = "27")]
	public override void Exit(bool exit)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x136CF14", Offset = "0x136CF14", VA = "0x136CF14")]
	private void LinkObjects()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x136F124", Offset = "0x136F124", VA = "0x136F124")]
	public void ResetAllStorage()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x136FD00", Offset = "0x136FD00", VA = "0x136FD00")]
	public void LaunchAlarm()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x136FE04", Offset = "0x136FE04", VA = "0x136FE04")]
	public void ResetTools()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x13701A0", Offset = "0x13701A0", VA = "0x13701A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36624", Offset = "0xF36624")]
	private IEnumerator PlayToolFogForClient(StoredTool tool)
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x136CF80", Offset = "0x136CF80", VA = "0x136CF80")]
	public void StoreToolsPosition()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x136FD94", Offset = "0x136FD94", VA = "0x136FD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36688", Offset = "0xF36688")]
	private IEnumerator AlarmRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1370130", Offset = "0x1370130", VA = "0x1370130")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF366EC", Offset = "0xF366EC")]
	private IEnumerator ToolRespawnRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1370294", Offset = "0x1370294", VA = "0x1370294")]
	public InGameManager()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x13702FC", Offset = "0x13702FC", VA = "0x13702FC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1370300", Offset = "0x1370300", VA = "0x1370300")]
	private void UserCode_RpcSuitcaseAppear()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1370348", Offset = "0x1370348", VA = "0x1370348")]
	protected static void InvokeUserCode_RpcSuitcaseAppear(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1370438", Offset = "0x1370438", VA = "0x1370438")]
	private void UserCode_RpcCloseUi()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x137043C", Offset = "0x137043C", VA = "0x137043C")]
	protected static void InvokeUserCode_RpcCloseUi(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x137052C", Offset = "0x137052C", VA = "0x137052C")]
	private void UserCode_RpcStopGame(int wastes, int gains, int score)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x137067C", Offset = "0x137067C", VA = "0x137067C")]
	protected new static void InvokeUserCode_RpcStopGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x13707D4", Offset = "0x13707D4", VA = "0x13707D4")]
	protected void UserCode_RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x13707D8", Offset = "0x13707D8", VA = "0x13707D8")]
	protected static void InvokeUserCode_RpcPlayEndingEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x13708C8", Offset = "0x13708C8", VA = "0x13708C8")]
	static InGameManager()
	{
	}
}
[Token(Token = "0x20000B2")]
public class InGameMultiplayerManager : CookManager
{
	[Serializable]
	[Token(Token = "0x20000B3")]
	public class StoredTool
	{
		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toolOjbect;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 toolOriginalPosition;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion toolOriginalRotation;

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1373FE4", Offset = "0x1373FE4", VA = "0x1373FE4")]
		public StoredTool()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A924", Offset = "0xF2A924")]
	private sealed class <PlayToolFogForClient>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoredTool tool;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x1373DE8", Offset = "0x1373DE8", VA = "0x1373DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x1373E50", Offset = "0x1373E50", VA = "0x1373E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x13733E8", Offset = "0x13733E8", VA = "0x13733E8")]
		[DebuggerHidden]
		public <PlayToolFogForClient>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1373D1C", Offset = "0x1373D1C", VA = "0x1373D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1373D20", Offset = "0x1373D20", VA = "0x1373D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1373DF0", Offset = "0x1373DF0", VA = "0x1373DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A934", Offset = "0xF2A934")]
	private sealed class <AlarmRoutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameMultiplayerManager <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x1373CAC", Offset = "0x1373CAC", VA = "0x1373CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x1373D14", Offset = "0x1373D14", VA = "0x1373D14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1373414", Offset = "0x1373414", VA = "0x1373414")]
		[DebuggerHidden]
		public <AlarmRoutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x13739B8", Offset = "0x13739B8", VA = "0x13739B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x13739BC", Offset = "0x13739BC", VA = "0x13739BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x1373CB4", Offset = "0x1373CB4", VA = "0x1373CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A944", Offset = "0xF2A944")]
	private sealed class <ToolRespawnRoutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameMultiplayerManager <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0x1373F74", Offset = "0x1373F74", VA = "0x1373F74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x1373FDC", Offset = "0x1373FDC", VA = "0x1373FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x1373440", Offset = "0x1373440", VA = "0x1373440")]
		[DebuggerHidden]
		public <ToolRespawnRoutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x1373E58", Offset = "0x1373E58", VA = "0x1373E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x1373E5C", Offset = "0x1373E5C", VA = "0x1373E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x1373F7C", Offset = "0x1373F7C", VA = "0x1373F7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DB18", Offset = "0xF2DB18")]
	public AudioSource whistleAudio;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource bip;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MusicList gameMusic;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource endingMusic;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource applauseAudio;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float previousMin;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float previousTenthSecond;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float previousSecond;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParticleSystem[] particleEnding;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DB50", Offset = "0xF2DB50")]
	public GameObject tutoPopup;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LevelObjectsLinker linkerScript;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject[] playersObjects;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DB88", Offset = "0xF2DB88")]
	public AudioSource alarmSound;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ParticleSystem[] alarmParticles;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AnimatedButton alarmButton;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool isAlarmInProgress;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AnimatedButton toolButton;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isToolAlarmInProgress;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ArcadeInterface svrInterface;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool currentVoiceChat;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private PlayerScript playerScript;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public StoredTool[] tools;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x13710E0", Offset = "0x13710E0", VA = "0x13710E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1371350", Offset = "0x1371350", VA = "0x1371350", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1371678", Offset = "0x1371678", VA = "0x1371678", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1371A18", Offset = "0x1371A18", VA = "0x1371A18", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1371B0C", Offset = "0x1371B0C", VA = "0x1371B0C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x137203C", Offset = "0x137203C", VA = "0x137203C")]
	private void UpdateSynthesisTimer()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1372338", Offset = "0x1372338", VA = "0x1372338", Slot = "28")]
	protected override void ChangeGameState(GameState oldState, GameState newState)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x137177C", Offset = "0x137177C", VA = "0x137177C")]
	private void SetGameState(GameState state)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1372360", Offset = "0x1372360", VA = "0x1372360", Slot = "23")]
	public override void StartGameLogic()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1372474", Offset = "0x1372474", VA = "0x1372474", Slot = "20")]
	protected override void StopGameOnServer()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1372880", Offset = "0x1372880", VA = "0x1372880")]
	[ClientRpc]
	private void RpcStopGame(int wastes, int gains, int score)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x13729C4", Offset = "0x13729C4", VA = "0x13729C4", Slot = "22")]
	public override void LoadLobby()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1372A8C", Offset = "0x1372A8C", VA = "0x1372A8C")]
	[ClientRpc]
	protected void RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x13727CC", Offset = "0x13727CC", VA = "0x13727CC")]
	protected void PlayEndingEffect()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1372B6C", Offset = "0x1372B6C", VA = "0x1372B6C")]
	private void UpdateSessionToWebServer(bool isGameEnded)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1371558", Offset = "0x1371558", VA = "0x1371558")]
	private void LinkObjects()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1372630", Offset = "0x1372630", VA = "0x1372630")]
	public void ResetAllStorage()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1372D44", Offset = "0x1372D44", VA = "0x1372D44", Slot = "27")]
	public override void Exit(bool exit)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1372E70", Offset = "0x1372E70", VA = "0x1372E70")]
	public void ToggleVoiceChat()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1372F00", Offset = "0x1372F00", VA = "0x1372F00")]
	public void LaunchAlarm()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1373000", Offset = "0x1373000", VA = "0x1373000")]
	public void ResetTools()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1373378", Offset = "0x1373378", VA = "0x1373378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36860", Offset = "0xF36860")]
	private IEnumerator PlayToolFogForClient(StoredTool tool)
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x13715C4", Offset = "0x13715C4", VA = "0x13715C4")]
	public void StoreToolsPosition()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1372F90", Offset = "0x1372F90", VA = "0x1372F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF368C4", Offset = "0xF368C4")]
	private IEnumerator AlarmRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1373308", Offset = "0x1373308", VA = "0x1373308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36928", Offset = "0xF36928")]
	private IEnumerator ToolRespawnRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x137346C", Offset = "0x137346C", VA = "0x137346C")]
	public InGameMultiplayerManager()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x13734DC", Offset = "0x13734DC", VA = "0x13734DC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x13734E0", Offset = "0x13734E0", VA = "0x13734E0")]
	private void UserCode_RpcStopGame(int wastes, int gains, int score)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1373630", Offset = "0x1373630", VA = "0x1373630")]
	protected new static void InvokeUserCode_RpcStopGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1373788", Offset = "0x1373788", VA = "0x1373788")]
	protected void UserCode_RpcPlayEndingEffect()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x137378C", Offset = "0x137378C", VA = "0x137378C")]
	protected static void InvokeUserCode_RpcPlayEndingEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x137387C", Offset = "0x137387C", VA = "0x137387C")]
	static InGameMultiplayerManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B7")]
public struct LevelsDefinition
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextAsset levelTextAsset;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public TextAsset levelDemoTextAsset;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset levelRelaxAsset;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset levelRelaxDemoTextAsset;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset levelInfiniteAsset;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset levelInfiniteDebtAsset;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextAsset levelMultiplayerTextAsset;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextAsset levelMultiplayerInfiniteAsset;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextAsset levelMultiplayerInfiniteDebtAsset;
}
[Token(Token = "0x20000B8")]
public class LevelManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class LevelDefinitionDictionnary : SerializableDictionaryBase<RestaurantType, LevelsDefinition>
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x15299D8", Offset = "0x15299D8", VA = "0x15299D8")]
		public LevelDefinitionDictionnary()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000BA")]
	public enum EndType
	{
		[Token(Token = "0x400035C")]
		TIME,
		[Token(Token = "0x400035D")]
		OBJECTIVE,
		[Token(Token = "0x400035E")]
		ERRORS,
		[Token(Token = "0x400035F")]
		MONEY
	}

	[Serializable]
	[Token(Token = "0x20000BB")]
	private class Level
	{
		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int levelId;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string levelName;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string levelDescription;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EndType endType;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int burgerRequirement;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int amountOfClientLine;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] spawnableItems;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<OrdersManager.Order> allowedOrders;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int tutoOrderId;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int profitObjective1;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int profitObjective2;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int profitObjective3;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lenght;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float timeBetweenClients;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<popupItem> tutoPopup;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1528F1C", Offset = "0x1528F1C", VA = "0x1528F1C")]
		public Level()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	public enum RestaurantType
	{
		[Token(Token = "0x4000370")]
		Diner,
		[Token(Token = "0x4000371")]
		Dessert,
		[Token(Token = "0x4000372")]
		Skewer
	}

	[Token(Token = "0x20000BD")]
	public enum SessionType
	{
		[Token(Token = "0x4000374")]
		DINER_TIMED,
		[Token(Token = "0x4000375")]
		DINER_RELAX,
		[Token(Token = "0x4000376")]
		DINER_SANDBOX,
		[Token(Token = "0x4000377")]
		DESSERT_TIMED,
		[Token(Token = "0x4000378")]
		DESSERT_RELAX,
		[Token(Token = "0x4000379")]
		DESSERT_SANDBOX,
		[Token(Token = "0x400037A")]
		DINER_INFINITE,
		[Token(Token = "0x400037B")]
		DESSERT_INFINITE,
		[Token(Token = "0x400037C")]
		DINER_INFINITE_DEBT,
		[Token(Token = "0x400037D")]
		DESSERT_INFINITE_DEBT,
		[Token(Token = "0x400037E")]
		SKEWER_TIMED,
		[Token(Token = "0x400037F")]
		SKEWER_RELAX,
		[Token(Token = "0x4000380")]
		SKEWER_INFINITE,
		[Token(Token = "0x4000381")]
		SKEWER_INFINITE_DEBT,
		[Token(Token = "0x4000382")]
		WEEKLY_DINER,
		[Token(Token = "0x4000383")]
		WEEKLY_DESSERT,
		[Token(Token = "0x4000384")]
		WEEKLY_SKEWER
	}

	[Token(Token = "0x20000BE")]
	public enum GameMode
	{
		[Token(Token = "0x4000386")]
		REGULAR,
		[Token(Token = "0x4000387")]
		RELAX,
		[Token(Token = "0x4000388")]
		INFINITE,
		[Token(Token = "0x4000389")]
		INFINITE_DEBT,
		[Token(Token = "0x400038A")]
		WEEKLY
	}

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DBC0", Offset = "0xF2DBC0")]
	public GameMode selectedGameMode;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DBF8", Offset = "0xF2DBF8")]
	public LevelDefinitionDictionnary levelDefinitions;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<VoxelStoreGameSessionDatabase.WeeklyInfo> levelWeeklyDefinitions;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool writeFile;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadFile;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int currentLevel;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numberOfWeeklyToCharge;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DC40", Offset = "0xF2DC40")]
	public GameObject[] allSpawnableItems;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DC78", Offset = "0xF2DC78")]
	[SerializeField]
	private Level[] levelList;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RestaurantType restaurant;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelManager instance;

	[Token(Token = "0x17000054")]
	public List<OrdersManager.Order> AllowedOrders
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x15291B4", Offset = "0x15291B4", VA = "0x15291B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public int TutoOrderId
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x15291FC", Offset = "0x15291FC", VA = "0x15291FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000056")]
	public GameObject[] SpawnableItems
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1529244", Offset = "0x1529244", VA = "0x1529244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public float TimeBetweenClients
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x152928C", Offset = "0x152928C", VA = "0x152928C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000058")]
	public int AmoutOfClientLine
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x15292D4", Offset = "0x15292D4", VA = "0x15292D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public float Lenght
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x152931C", Offset = "0x152931C", VA = "0x152931C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005A")]
	public string LevelName
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1529364", Offset = "0x1529364", VA = "0x1529364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public string LevelDescription
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x15293C8", Offset = "0x15293C8", VA = "0x15293C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public int LevelId
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x15241DC", Offset = "0x15241DC", VA = "0x15241DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005D")]
	public List<popupItem> TutoPopup
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x152942C", Offset = "0x152942C", VA = "0x152942C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	private Level CurrentLevel
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x1529174", Offset = "0x1529174", VA = "0x1529174")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public int CurrentLevelIdList
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x1529474", Offset = "0x1529474", VA = "0x1529474")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000060")]
	public int Objective1
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x152947C", Offset = "0x152947C", VA = "0x152947C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000061")]
	public int Objective2
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x15294C4", Offset = "0x15294C4", VA = "0x15294C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000062")]
	public int Objective3
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x152950C", Offset = "0x152950C", VA = "0x152950C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000063")]
	public RestaurantType Restaurant
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x1529554", Offset = "0x1529554", VA = "0x1529554")]
		get
		{
			return default(RestaurantType);
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x152955C", Offset = "0x152955C", VA = "0x152955C")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public EndType End
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1529564", Offset = "0x1529564", VA = "0x1529564")]
		get
		{
			return default(EndType);
		}
	}

	[Token(Token = "0x17000065")]
	public int LevelsCount
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x15295AC", Offset = "0x15295AC", VA = "0x15295AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1526434", Offset = "0x1526434", VA = "0x1526434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1526610", Offset = "0x1526610", VA = "0x1526610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1526614", Offset = "0x1526614", VA = "0x1526614")]
	public void LoadWeekly()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1526800", Offset = "0x1526800", VA = "0x1526800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1527310", Offset = "0x1527310", VA = "0x1527310")]
	public static SessionType GetSessionTypeForCurrentGame()
	{
		return default(SessionType);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x15265EC", Offset = "0x15265EC", VA = "0x15265EC")]
	public void UpdateLevels()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1528B68", Offset = "0x1528B68", VA = "0x1528B68")]
	private void UpdateSpawnableItemsOfLevels()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x15274B8", Offset = "0x15274B8", VA = "0x15274B8")]
	private void ReadLevelFile()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1526854", Offset = "0x1526854", VA = "0x1526854")]
	private void WriteLevelFile()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1528F2C", Offset = "0x1528F2C", VA = "0x1528F2C")]
	public bool CheckIfUnlocked(int idList)
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1529054", Offset = "0x1529054", VA = "0x1529054")]
	public bool CheckPreviousLevel(int idList)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1529120", Offset = "0x1529120", VA = "0x1529120")]
	public bool CheckIfLastLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x15261E4", Offset = "0x15261E4", VA = "0x15261E4")]
	public string GetLevelName(int idList)
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1526248", Offset = "0x1526248", VA = "0x1526248")]
	public string GetLevelDescription(int idList)
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x15262AC", Offset = "0x15262AC", VA = "0x15262AC")]
	public int GetLevelId(int idList)
	{
		return default(int);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x15295C8", Offset = "0x15295C8", VA = "0x15295C8")]
	public int GetBurgerRequirement(int levelIdList)
	{
		return default(int);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x152900C", Offset = "0x152900C", VA = "0x152900C")]
	private Level GetLevel(int idList)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x152960C", Offset = "0x152960C", VA = "0x152960C")]
	private Level GetNextLevel()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x15263A0", Offset = "0x15263A0", VA = "0x15263A0")]
	public void SetLevel(int level)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1529650", Offset = "0x1529650", VA = "0x1529650")]
	public void SelectGameType(GameMode type, bool forceReload = false)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x152982C", Offset = "0x152982C", VA = "0x152982C")]
	public void AddWeekly(VoxelStoreGameSessionDatabase.WeeklyInfo weeklyInfo, int weekOffset)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x15299C8", Offset = "0x15299C8", VA = "0x15299C8")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LevelObjectsLinker : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DeliverySpot> deliverySpots;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1529A48", Offset = "0x1529A48", VA = "0x1529A48")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1529A4C", Offset = "0x1529A4C", VA = "0x1529A4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1529A50", Offset = "0x1529A50", VA = "0x1529A50")]
	public LevelObjectsLinker()
	{
	}
}
[Token(Token = "0x20000C0")]
public class LobbyManager : GameManager
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbyManager instance;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MainUI mainUI;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DCD4", Offset = "0xF2DCD4")]
	public GameObject localGuardian;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject arcadeMachine;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DD0C", Offset = "0xF2DD0C")]
	public GameObject playerTargetForMulti;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DD44", Offset = "0xF2DD44")]
	public MusicList gameMusic;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string textForLedSignsInMulti;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] objectsToDesactivateInLBE;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<int> choosedSkinsForSimpleClients;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x11C755C", Offset = "0x11C755C", VA = "0x11C755C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x11C76C4", Offset = "0x11C76C4", VA = "0x11C76C4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x11C784C", Offset = "0x11C784C", VA = "0x11C784C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x11C788C", Offset = "0x11C788C", VA = "0x11C788C", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x11C7D18", Offset = "0x11C7D18", VA = "0x11C7D18", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x11C7D20", Offset = "0x11C7D20", VA = "0x11C7D20", Slot = "17")]
	protected override void StartGameOnServer()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x11C7D24", Offset = "0x11C7D24", VA = "0x11C7D24")]
	public void LoadCurrentLevelScene()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x11C7EC0", Offset = "0x11C7EC0", VA = "0x11C7EC0")]
	private void UpdateAdText(string text, bool useDefault)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x11C7FA0", Offset = "0x11C7FA0", VA = "0x11C7FA0", Slot = "18")]
	protected override void AppOptionOnServer()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x11C7FC8", Offset = "0x11C7FC8", VA = "0x11C7FC8")]
	public void HostMultiplayerGame()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x11C8310", Offset = "0x11C8310", VA = "0x11C8310")]
	private void HostIsReady()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x11C8664", Offset = "0x11C8664", VA = "0x11C8664")]
	private void HostCantBeAdded()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x11C8760", Offset = "0x11C8760", VA = "0x11C8760")]
	public void ConnectToHost(string ip, int port)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x11C8A3C", Offset = "0x11C8A3C", VA = "0x11C8A3C")]
	public void ExitMultiplayer()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11C8B18", Offset = "0x11C8B18", VA = "0x11C8B18")]
	[ClientRpc]
	public void RpcHostHasExitedMultiplayer()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x11C8BF8", Offset = "0x11C8BF8", VA = "0x11C8BF8")]
	public void LoadLobby(string lobbyName)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11C8C60", Offset = "0x11C8C60", VA = "0x11C8C60")]
	public LobbyManager()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11C8D00", Offset = "0x11C8D00", VA = "0x11C8D00")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11C8D04", Offset = "0x11C8D04", VA = "0x11C8D04")]
	public void UserCode_RpcHostHasExitedMultiplayer()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x11C8E70", Offset = "0x11C8E70", VA = "0x11C8E70")]
	protected static void InvokeUserCode_RpcHostHasExitedMultiplayer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x11C8F60", Offset = "0x11C8F60", VA = "0x11C8F60")]
	static LobbyManager()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OptionManager : Singleton<OptionManager>
{
	[Token(Token = "0x20000C2")]
	public enum AngularStep
	{
		[Token(Token = "0x40003A3")]
		DEGREES30,
		[Token(Token = "0x40003A4")]
		DEGREES45,
		[Token(Token = "0x40003A5")]
		DEGREES60,
		[Token(Token = "0x40003A6")]
		DEGREES90
	}

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NavigationType navigation;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isRotateWithJoystick;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isUseTeleport;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isTeleportFree;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isUseTunneling;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AngularStep joystickAngularStep;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float seatModeOffset;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float idealHeadPosition;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isAcceptMultiplayerInvitations;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float globalVolume;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chatVolume;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float musicVolume;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isPainSound;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x143BFE8", Offset = "0x143BFE8", VA = "0x143BFE8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x143C574", Offset = "0x143C574", VA = "0x143C574")]
	public void UpdateMoveOptions()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x143C048", Offset = "0x143C048", VA = "0x143C048")]
	private void ReadPlayerPrefs()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x143C6A4", Offset = "0x143C6A4", VA = "0x143C6A4")]
	private void WritePlayerPrefs()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x143C800", Offset = "0x143C800", VA = "0x143C800")]
	public void SaveAndUpdateOptions()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x143C824", Offset = "0x143C824", VA = "0x143C824")]
	public void CalibrateSeatPosition()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x143C938", Offset = "0x143C938", VA = "0x143C938")]
	public OptionManager()
	{
	}
}
[Token(Token = "0x20000C3")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A954", Offset = "0xF2A954")]
	private sealed class <DisplayPauseRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseManager <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0x13FE7A4", Offset = "0x13FE7A4", VA = "0x13FE7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0x13FE80C", Offset = "0x13FE80C", VA = "0x13FE80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x13FDE8C", Offset = "0x13FDE8C", VA = "0x13FDE8C")]
		[DebuggerHidden]
		public <DisplayPauseRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x13FDEEC", Offset = "0x13FDEEC", VA = "0x13FDEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x13FDEF0", Offset = "0x13FDEF0", VA = "0x13FDEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x13FE7AC", Offset = "0x13FE7AC", VA = "0x13FE7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A964", Offset = "0xF2A964")]
	private sealed class <HidePauseRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseManager <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049D")]
			[Address(RVA = "0x13FE9F4", Offset = "0x13FE9F4", VA = "0x13FE9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049F")]
			[Address(RVA = "0x13FEA5C", Offset = "0x13FEA5C", VA = "0x13FEA5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x13FDEB8", Offset = "0x13FDEB8", VA = "0x13FDEB8")]
		[DebuggerHidden]
		public <HidePauseRoutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x13FE814", Offset = "0x13FE814", VA = "0x13FE814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x13FE818", Offset = "0x13FE818", VA = "0x13FE818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x13FE9FC", Offset = "0x13FE9FC", VA = "0x13FE9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject popup;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectivesParent;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro objective1;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro objective2;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro objective3;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro objectiveRelax;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro objectivesFirstLevelText;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro infiniteText;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VoxelArena.Cook.PressButton buttonResume;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VoxelArena.Cook.PressButton buttonMenu;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoxelArena.Cook.PressButton buttonRestart;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro levelNameText;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSrc;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip showClip;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip hideClip;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject icon;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject tvArm;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isMoving;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x13FD984", Offset = "0x13FD984", VA = "0x13FD984")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x13FDA30", Offset = "0x13FDA30", VA = "0x13FDA30")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x13FDB30", Offset = "0x13FDB30", VA = "0x13FDB30")]
	private void SwitchPause()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x13FDC6C", Offset = "0x13FDC6C", VA = "0x13FDC6C")]
	public void GoToLobby()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x13FDD0C", Offset = "0x13FDD0C", VA = "0x13FDD0C")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x13FDC20", Offset = "0x13FDC20", VA = "0x13FDC20")]
	public void DisplayPause(bool show)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x13FDDAC", Offset = "0x13FDDAC", VA = "0x13FDDAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36A8C", Offset = "0xF36A8C")]
	private IEnumerator DisplayPauseRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x13FDE1C", Offset = "0x13FDE1C", VA = "0x13FDE1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36AF0", Offset = "0xF36AF0")]
	private IEnumerator HidePauseRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x13FDEE4", Offset = "0x13FDEE4", VA = "0x13FDEE4")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x20000C6")]
public class PopupCollisionManager : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PopupManager manager;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string expectedColliderTag;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x11F97B8", Offset = "0x11F97B8", VA = "0x11F97B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x11F9864", Offset = "0x11F9864", VA = "0x11F9864")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x11F9868", Offset = "0x11F9868", VA = "0x11F9868")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x11F99DC", Offset = "0x11F99DC", VA = "0x11F99DC")]
	public PopupCollisionManager()
	{
	}
}
[Token(Token = "0x20000C7")]
public delegate void popupHandler();
[Serializable]
[Token(Token = "0x20000C8")]
public class popupItem
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string popupLabel;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string popupLabelFR;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parentObjectName;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timerInSeconds;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int direction;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public popupHandler popupOnValidateAction;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1C25B48", Offset = "0x1C25B48", VA = "0x1C25B48")]
	public popupItem(string text, string gameObjectName, float timeLimit, int arrowDirection, popupHandler ValidateAction)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1C25BAC", Offset = "0x1C25BAC", VA = "0x1C25BAC")]
	public popupItem()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PopupManager : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<popupItem> popupQueue;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private popupHandler popupOnValidateAction;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject popupGameObject;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] popupArrowDirection;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro popupLabel;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem popupEffect;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource popupOpenSound;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource popupValidateSound;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject popupCurrentTargetGO;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float popupTimerInSeconds;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FacePlayer facePlayer;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private popupItem currentPopup;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isPopupDisplayed;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _mustClear;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float _popupTime;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _currentPopupDirection;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x11F9A34", Offset = "0x11F9A34", VA = "0x11F9A34")]
	private void ConsumePopupFromQueue()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x11FA018", Offset = "0x11FA018", VA = "0x11FA018")]
	public static void launchPopup(string message, string parentObject, float timerLimit, int arrowDirection, popupHandler onValidateAction)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x11FA134", Offset = "0x11FA134", VA = "0x11FA134")]
	public static void ClearPopups()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x11F9F54", Offset = "0x11F9F54", VA = "0x11F9F54")]
	public void ClosePopup()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x11FA1F0", Offset = "0x11FA1F0", VA = "0x11FA1F0")]
	public void PopupValidateEvent()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x11F993C", Offset = "0x11F993C", VA = "0x11F993C")]
	public void OnItemToCheckTriggered(GameObject source)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x11FA2A8", Offset = "0x11FA2A8", VA = "0x11FA2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x11FA3B4", Offset = "0x11FA3B4", VA = "0x11FA3B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x11FA3B8", Offset = "0x11FA3B8", VA = "0x11FA3B8")]
	public PopupManager()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ScoreManager : NetworkBehaviour
{
	[Token(Token = "0x20000CB")]
	public enum ScoreInfoType
	{
		[Token(Token = "0x40003E9")]
		LOSTCLIENT,
		[Token(Token = "0x40003EA")]
		DELIVERYERROR,
		[Token(Token = "0x40003EB")]
		DELIVEREDCLIENT,
		[Token(Token = "0x40003EC")]
		ALIMENTCUT,
		[Token(Token = "0x40003ED")]
		BURGERCOOKED,
		[Token(Token = "0x40003EE")]
		FRIESDELIVERED,
		[Token(Token = "0x40003EF")]
		DRINKDELIVERED
	}

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreManager instance;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DD8C", Offset = "0xF2DD8C")]
	public TextMeshProUGUI lostClientsText;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI deliveryErrorsText;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI deliveredClientsText;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI alimentsCutText;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI burgersCookedText;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI friesDeliveredText;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI drinksDeliveredText;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	private int lostClients;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	private int deliveryErrors;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SyncVar]
	private int deliveredClients;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SyncVar]
	private int alimentsCut;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SyncVar]
	private int burgersCooked;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SyncVar]
	private int friesDelivered;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SyncVar]
	private int drinksDelivered;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SyncVar]
	public int score;

	[Token(Token = "0x1700006A")]
	public int NetworklostClients
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1201CB8", Offset = "0x1201CB8", VA = "0x1201CB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1201448", Offset = "0x1201448", VA = "0x1201448")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public int NetworkdeliveryErrors
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1201CC0", Offset = "0x1201CC0", VA = "0x1201CC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x12016B8", Offset = "0x12016B8", VA = "0x12016B8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public int NetworkdeliveredClients
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1201CC8", Offset = "0x1201CC8", VA = "0x1201CC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x120161C", Offset = "0x120161C", VA = "0x120161C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public int NetworkalimentsCut
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1201CD0", Offset = "0x1201CD0", VA = "0x1201CD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x12014E4", Offset = "0x12014E4", VA = "0x12014E4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public int NetworkburgersCooked
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1201CD8", Offset = "0x1201CD8", VA = "0x1201CD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1201580", Offset = "0x1201580", VA = "0x1201580")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public int NetworkfriesDelivered
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1201CE0", Offset = "0x1201CE0", VA = "0x1201CE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x12017F0", Offset = "0x12017F0", VA = "0x12017F0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public int NetworkdrinksDelivered
	{
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1201CE8", Offset = "0x1201CE8", VA = "0x1201CE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1201754", Offset = "0x1201754", VA = "0x1201754")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public int Networkscore
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1201CF0", Offset = "0x1201CF0", VA = "0x1201CF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1201088", Offset = "0x1201088", VA = "0x1201088")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1201014", Offset = "0x1201014", VA = "0x1201014")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1201194", Offset = "0x1201194", VA = "0x1201194")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1201330", Offset = "0x1201330", VA = "0x1201330")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1201334", Offset = "0x1201334", VA = "0x1201334")]
	public void AddScoreInfo(ScoreInfoType type)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x120188C", Offset = "0x120188C", VA = "0x120188C")]
	private void ScoreChange(int oldScore, int newScore)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1201908", Offset = "0x1201908", VA = "0x1201908")]
	[ClientRpc]
	private void RpcUpdateScores()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1201198", Offset = "0x1201198", VA = "0x1201198")]
	private void UpdateScores()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x12019E8", Offset = "0x12019E8", VA = "0x12019E8")]
	public void CheckAllWaste()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1201C4C", Offset = "0x1201C4C", VA = "0x1201C4C")]
	public ScoreManager()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1201CB4", Offset = "0x1201CB4", VA = "0x1201CB4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1201CF8", Offset = "0x1201CF8", VA = "0x1201CF8")]
	private void UserCode_RpcUpdateScores()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1201CFC", Offset = "0x1201CFC", VA = "0x1201CFC")]
	protected static void InvokeUserCode_RpcUpdateScores(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1201DEC", Offset = "0x1201DEC", VA = "0x1201DEC")]
	static ScoreManager()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1201ECC", Offset = "0x1201ECC", VA = "0x1201ECC", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x12021F8", Offset = "0x12021F8", VA = "0x12021F8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000CC")]
public class MultiplayerInfoDisplay : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CD")]
	public struct PlayerInfo
	{
		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string serial;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int id;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;
	}

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float updateTime;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastUpdate;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject playerRowPrefab;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject playersListParent;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SyncList<PlayerInfo> playersInfo;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PlayerRowInfo> playersRows;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x12AA9FC", Offset = "0x12AA9FC", VA = "0x12AA9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x12AAADC", Offset = "0x12AAADC", VA = "0x12AAADC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x12AAE80", Offset = "0x12AAE80", VA = "0x12AAE80", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x12AAF7C", Offset = "0x12AAF7C", VA = "0x12AAF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x12AB5FC", Offset = "0x12AB5FC", VA = "0x12AB5FC")]
	private void OnListUpdated(SyncList<PlayerInfo>.Operation op, int index, PlayerInfo oldItem, PlayerInfo newItem)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x12AAC10", Offset = "0x12AAC10", VA = "0x12AAC10")]
	private void AddPlayer(PlayerInfo newItem, int inserId = -1)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x12AAE84", Offset = "0x12AAE84", VA = "0x12AAE84")]
	private void RemoveAll()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x12ABB88", Offset = "0x12ABB88", VA = "0x12ABB88")]
	private void UpdatePlayerInfo(PlayerRowInfo rowInfo, PlayerInfo info)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x12ABA54", Offset = "0x12ABA54", VA = "0x12ABA54")]
	private void PlayerInfoLayout()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x12AB530", Offset = "0x12AB530", VA = "0x12AB530")]
	private int GetPlayerInfoIdFromSerial(string serial)
	{
		return default(int);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x12AB480", Offset = "0x12AB480", VA = "0x12AB480")]
	private int GetPlayerScriptsFromSerial(List<PlayerScript> playersScripts, string serial)
	{
		return default(int);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x12ABD6C", Offset = "0x12ABD6C", VA = "0x12ABD6C")]
	public MultiplayerInfoDisplay()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x12ABE3C", Offset = "0x12ABE3C", VA = "0x12ABE3C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x12ABE40", Offset = "0x12ABE40", VA = "0x12ABE40")]
	static MultiplayerInfoDisplay()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BusStopButton : MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string lobbyName;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject glowing;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VoxelArena.Cook.PressButton buttonPress;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject youAreHere;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x12F5014", Offset = "0x12F5014", VA = "0x12F5014")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x12F5124", Offset = "0x12F5124", VA = "0x12F5124")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x12F5128", Offset = "0x12F5128", VA = "0x12F5128")]
	public BusStopButton()
	{
	}
}
[Token(Token = "0x20000CF")]
public class ChangeButtonColor : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnimatedButton buttonScript;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material buttonPressedMat;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material buttonUnpressedMat;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject topButton;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x12F5430", Offset = "0x12F5430", VA = "0x12F5430")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x12F5488", Offset = "0x12F5488", VA = "0x12F5488")]
	public void SetColor(bool pressed)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x12F550C", Offset = "0x12F550C", VA = "0x12F550C")]
	public ChangeButtonColor()
	{
	}
}
[Token(Token = "0x20000D0")]
public class DesactivatePreviewElement : MonoBehaviour
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<VoxelArena.Cook.PressButton> buttonsToDesactivate;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool desactivateOnBuild;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1355774", Offset = "0x1355774", VA = "0x1355774")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1355898", Offset = "0x1355898", VA = "0x1355898")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x135589C", Offset = "0x135589C", VA = "0x135589C")]
	public DesactivatePreviewElement()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LevelButton : MonoBehaviour
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro levelName;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] medalReward;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int levelId;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoxelArena.Cook.PressButton pressButton;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonBase;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject toUnlock;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro unlockBurger;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject padlock;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1525A68", Offset = "0x1525A68", VA = "0x1525A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1525A6C", Offset = "0x1525A6C", VA = "0x1525A6C")]
	private void SelectLevel()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1525AD0", Offset = "0x1525AD0", VA = "0x1525AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1525AD4", Offset = "0x1525AD4", VA = "0x1525AD4")]
	public void SetButtonAction()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1525BDC", Offset = "0x1525BDC", VA = "0x1525BDC")]
	public void ActivateMedals(int value)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1525CDC", Offset = "0x1525CDC", VA = "0x1525CDC")]
	public LevelButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D2")]
public class Panel
{
	[Token(Token = "0x20000D3")]
	public enum PanelType
	{
		[Token(Token = "0x400040F")]
		LEVELSELECTION,
		[Token(Token = "0x4000410")]
		PLAYLEVEL,
		[Token(Token = "0x4000411")]
		OPTIONS,
		[Token(Token = "0x4000412")]
		MULTIPLAYER,
		[Token(Token = "0x4000413")]
		MULTIPLAYERWAIT,
		[Token(Token = "0x4000414")]
		MULTIPLAYERCONFIGHOST,
		[Token(Token = "0x4000415")]
		MULTIPLAYERCONFIGCLIENT,
		[Token(Token = "0x4000416")]
		MULTIPLAYERCONFIRMQUIT,
		[Token(Token = "0x4000417")]
		ANNOUCEMENT
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject panelObject;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PanelType panelType;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x13FB7F4", Offset = "0x13FB7F4", VA = "0x13FB7F4")]
	public Panel()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	public class MultiplayerTypeSprites : SerializableDictionaryBase<string, Image>
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x11D5EC0", Offset = "0x11D5EC0", VA = "0x11D5EC0")]
		public MultiplayerTypeSprites()
		{
		}
	}

	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A974", Offset = "0xF2A974")]
	private sealed class <DisplayPanelRoutine>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuManager <>4__this;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Panel panel;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x11D6F28", Offset = "0x11D6F28", VA = "0x11D6F28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0x11D6F90", Offset = "0x11D6F90", VA = "0x11D6F90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x11D41F0", Offset = "0x11D41F0", VA = "0x11D41F0")]
		[DebuggerHidden]
		public <DisplayPanelRoutine>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x11D5F50", Offset = "0x11D5F50", VA = "0x11D5F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x11D5F54", Offset = "0x11D5F54", VA = "0x11D5F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x11D6F30", Offset = "0x11D6F30", VA = "0x11D6F30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A984", Offset = "0xF2A984")]
	private sealed class <SpawnLevelsButton>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuManager <>4__this;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allUnlocked;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x11D76F0", Offset = "0x11D76F0", VA = "0x11D76F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000530")]
			[Address(RVA = "0x11D7758", Offset = "0x11D7758", VA = "0x11D7758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x11D45D8", Offset = "0x11D45D8", VA = "0x11D45D8")]
		[DebuggerHidden]
		public <SpawnLevelsButton>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x11D717C", Offset = "0x11D717C", VA = "0x11D717C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x11D7180", Offset = "0x11D7180", VA = "0x11D7180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x11D76F8", Offset = "0x11D76F8", VA = "0x11D76F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A994", Offset = "0xF2A994")]
	private sealed class <>c__DisplayClass134_0
	{
		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuManager <>4__this;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x11D5A48", Offset = "0x11D5A48", VA = "0x11D5A48")]
		public <>c__DisplayClass134_0()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x11D5F30", Offset = "0x11D5F30", VA = "0x11D5F30")]
		internal void <HostsHasBeenUpdated>b__0()
		{
		}
	}

	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9A4", Offset = "0xF2A9A4")]
	private sealed class <HidePopup>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject popup;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator <animator>5__2;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000536")]
			[Address(RVA = "0x11D710C", Offset = "0x11D710C", VA = "0x11D710C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0x11D7174", Offset = "0x11D7174", VA = "0x11D7174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x11D5DF8", Offset = "0x11D5DF8", VA = "0x11D5DF8")]
		[DebuggerHidden]
		public <HidePopup>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x11D6F98", Offset = "0x11D6F98", VA = "0x11D6F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x11D6F9C", Offset = "0x11D6F9C", VA = "0x11D6F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x11D7114", Offset = "0x11D7114", VA = "0x11D7114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentLevelSelected;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isMenuMoving;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isFirstPanelDisplayed;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DE70", Offset = "0xF2DE70")]
	public Panel[] panels;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Panel currentPanel;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Panel.PanelType previousPanelType;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DEA8", Offset = "0xF2DEA8")]
	public AudioClip buttonClickSound;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip menuSlideSound;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip backButtonSound;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip playButtonSound;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioSrc;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DEE0", Offset = "0xF2DEE0")]
	public TextMeshPro moneyDisplay;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DF18", Offset = "0xF2DF18")]
	public VoxelArena.Cook.PressButton returnButton;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject returnButtonImage;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject settingsButtonImage;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VoxelArena.Cook.PressButton settingsButton;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DF50", Offset = "0xF2DF50")]
	public Transform[] buttonsPosition;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject buttonPrefab;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<GameObject> buttonList;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager instance;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool wasPreviousUnlocked;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite[] rankingSprites;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DF88", Offset = "0xF2DF88")]
	public AnimatedButton modeRegularButton;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AnimatedButton modeRelaxButton;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimatedButton modeSandboxButton;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimatedButton modeRegularButtonMulti;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AnimatedButton modeInfiniteButtonMulti;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro modeDescription;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject modeSelect;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject infiniteScreen;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LevelManager.GameMode currentGameType;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro infiniteAdviceRegular;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro infiniteAdviceDemo;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject infiniteBuyButton;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject infiniteModeButton;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject infiniteDebtModeButton;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ParticleSystem infiniteParticleBuy;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Material disabledButtonMaterial;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DFC0", Offset = "0xF2DFC0")]
	public TextMeshPro levelTitle;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro levelDescription;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro moneyEarned;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2DFF8", Offset = "0xF2DFF8")]
	public int serverIndexToJoinInDebug;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VoxelArena.Cook.PressButton multiplayerButton;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject multiplayerButtonImage;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject multiPlayButton;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject multiNextButton;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TMP_Text multiErrorText;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TMP_Text multiHostErrorText;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TMP_InputField inputPlayerNameHost;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TMP_InputField inputServerNameHost;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TMP_InputField inputServerPasswordHost;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public TMP_InputField inputServerPasswordClient;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TMP_InputField inputPlayerNameClient;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TMP_InputField hostFilterInput;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TMP_Text clientWaitText;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public VRUIController keyboardVRUIController;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public VRUIController multiplayerHostUIController;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public VRUIController multiplayerClientUIController;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject hostsListContainer;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject hostRowPrefab;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Sprite dinerIcon;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Sprite dessertIcon;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Sprite skewerIcon;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private VoxelStoreGameSessionDatabase.HostInfo selectedHost;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TMP_Text levelNameTextForMulti;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject multiplayerDisplay;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public TMP_Text multiConfirmationQuitText;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public TMP_Text serverNameOnMultiplayerWait;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private VoxelArenaNobleNetworkManager netMgr;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public MultiplayerTypeSprites multiplayerTypeSprites;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject multiplayerChoiceRegular;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject multiplayerChoiceDemo;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public TMP_Text multiplayerDemoText;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject multiplayerBuyButton;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public ParticleSystem multiplayerParticleBuy;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject hostsListWaitingImg;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public TMP_Text hostsListError;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E030", Offset = "0xF2E030")]
	public AnimatedButton seatedButton;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public AnimatedButton standButton;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AnimatedButton roomScaleButton;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AnimatedButton joystickRotationButton;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public AnimatedButton joystickRotationStepButton;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public AnimatedButton teleportButton;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public AnimatedButton teleportFreeButton;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public AnimatedButton tunnelingButton;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public VoxelArena.Cook.PressButton seatCalibrateButton;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E068", Offset = "0xF2E068")]
	public float selectLevelHelpPopUpTime;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float selectLevelHelpPopUpTimer;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject selectLevelHelpPopUp;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject navigationHelpPopup;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool isALevelHasBeenSelected;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Leaderboard leaderboard;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x11D172C", Offset = "0x11D172C", VA = "0x11D172C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x11D182C", Offset = "0x11D182C", VA = "0x11D182C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11D2AC0", Offset = "0x11D2AC0", VA = "0x11D2AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x11D3F68", Offset = "0x11D3F68", VA = "0x11D3F68")]
	public void ReturnAction()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x11D24DC", Offset = "0x11D24DC", VA = "0x11D24DC")]
	public void SelectGameType(LevelManager.GameMode gameMode, bool forceReload = false)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x11D21D4", Offset = "0x11D21D4", VA = "0x11D21D4")]
	public void SelectGameTypeMultiplayer(LevelManager.GameMode gameMode, bool forceReload = false)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x11D4060", Offset = "0x11D4060", VA = "0x11D4060")]
	private Panel GetPanel(Panel.PanelType type)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x11D2150", Offset = "0x11D2150", VA = "0x11D2150")]
	public void DisplayPanel(Panel.PanelType type)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x11D40C8", Offset = "0x11D40C8", VA = "0x11D40C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36C04", Offset = "0xF36C04")]
	private IEnumerator DisplayPanelRoutine(Panel panel)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11D421C", Offset = "0x11D421C", VA = "0x11D421C")]
	public void LoadStorePage(string URL)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11D4228", Offset = "0x11D4228", VA = "0x11D4228")]
	public void SelectLevel(int level)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11D448C", Offset = "0x11D448C", VA = "0x11D448C")]
	public void ClickOnPlay()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11D2990", Offset = "0x11D2990", VA = "0x11D2990")]
	private void DeleteLevelsButtons()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11D4554", Offset = "0x11D4554", VA = "0x11D4554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36C68", Offset = "0xF36C68")]
	private IEnumerator SpawnLevelsButton(bool allUnlocked)
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11D4604", Offset = "0x11D4604", VA = "0x11D4604")]
	public void SetRelaxMode()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11D464C", Offset = "0x11D464C", VA = "0x11D464C")]
	public void SelectInfiniteClientMode()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x11D46CC", Offset = "0x11D46CC", VA = "0x11D46CC")]
	public void SelectInfiniteDebtMode()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11D474C", Offset = "0x11D474C", VA = "0x11D474C")]
	public void SetRegularMode()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11D4794", Offset = "0x11D4794", VA = "0x11D4794")]
	public void SetInfiniteMode()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11D47C0", Offset = "0x11D47C0", VA = "0x11D47C0")]
	public void SetRegularModeMultiplayer()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11D47CC", Offset = "0x11D47CC", VA = "0x11D47CC")]
	public void SetInfiniteModeMultiplayer()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x11D47D8", Offset = "0x11D47D8", VA = "0x11D47D8")]
	public void SpawnAllUnlocked()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x11D4810", Offset = "0x11D4810", VA = "0x11D4810")]
	public void DisplayOptions()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x11D4818", Offset = "0x11D4818", VA = "0x11D4818")]
	public void UpdateOptionButtons()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x11D4B20", Offset = "0x11D4B20", VA = "0x11D4B20")]
	public void SwitchTeleport()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x11D4C68", Offset = "0x11D4C68", VA = "0x11D4C68")]
	public void SwitchTeleportFree()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x11D4CDC", Offset = "0x11D4CDC", VA = "0x11D4CDC")]
	public void SetPlayerSeated()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x11D4D88", Offset = "0x11D4D88", VA = "0x11D4D88")]
	public void SetPlayerStand()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x11D4E00", Offset = "0x11D4E00", VA = "0x11D4E00")]
	public void SetPlayerRoomScale()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x11D4E7C", Offset = "0x11D4E7C", VA = "0x11D4E7C")]
	public void SwitchJoystickRotation()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x11D4F18", Offset = "0x11D4F18", VA = "0x11D4F18")]
	public void SwitchJoystickRotationStep()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x11D4F90", Offset = "0x11D4F90", VA = "0x11D4F90")]
	public void SwitchTunneling()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x11D5004", Offset = "0x11D5004", VA = "0x11D5004")]
	public void CalibrateSeatPosition()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x11D2F80", Offset = "0x11D2F80", VA = "0x11D2F80")]
	public void DisplayMultiplayer()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x11D5060", Offset = "0x11D5060", VA = "0x11D5060")]
	public void DisplayMultiplayerHostConfig()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x11D3448", Offset = "0x11D3448", VA = "0x11D3448")]
	public void DisplayMultiplayerClientConfig()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x11D30C8", Offset = "0x11D30C8", VA = "0x11D30C8")]
	public void HostMultiplayerGame()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x11D50B0", Offset = "0x11D50B0", VA = "0x11D50B0")]
	private void HostIsReady()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11D35C8", Offset = "0x11D35C8", VA = "0x11D35C8")]
	public void JoinMultiplayerGame()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x11D5178", Offset = "0x11D5178", VA = "0x11D5178")]
	private void DestroyHostsList()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x11D5258", Offset = "0x11D5258", VA = "0x11D5258")]
	public void RefreshHostsList()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x11D52DC", Offset = "0x11D52DC", VA = "0x11D52DC")]
	public void HostsHasBeenUpdated(bool error)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x11D5A50", Offset = "0x11D5A50", VA = "0x11D5A50")]
	private void ColorizeList()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x11D3498", Offset = "0x11D3498", VA = "0x11D3498")]
	public void HostHasBeenSelected(int id)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x11D3E90", Offset = "0x11D3E90", VA = "0x11D3E90")]
	public void ConfirmQuit(bool quit)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x11D5C30", Offset = "0x11D5C30", VA = "0x11D5C30")]
	private void DisplayLevelHelpPopup()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x11D4410", Offset = "0x11D4410", VA = "0x11D4410")]
	private void DesactivateSelectLevelHelpPopPup()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x11D4144", Offset = "0x11D4144", VA = "0x11D4144")]
	private void DesactivateNavigationHelPopPup()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x11D5D7C", Offset = "0x11D5D7C", VA = "0x11D5D7C")]
	public void DesactivateAnnoucementPanel()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x11D441C", Offset = "0x11D441C", VA = "0x11D441C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36CCC", Offset = "0xF36CCC")]
	private IEnumerator HidePopup(GameObject popup)
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x11D5E24", Offset = "0x11D5E24", VA = "0x11D5E24")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ScreenDisplay : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	public enum Screen
	{
		[Token(Token = "0x4000494")]
		none,
		[Token(Token = "0x4000495")]
		endDemo,
		[Token(Token = "0x4000496")]
		objective,
		[Token(Token = "0x4000497")]
		objectiveRelax,
		[Token(Token = "0x4000498")]
		pause,
		[Token(Token = "0x4000499")]
		scoreEnd,
		[Token(Token = "0x400049A")]
		scoreDisplay,
		[Token(Token = "0x400049B")]
		sandbox,
		[Token(Token = "0x400049C")]
		exitConfirmation,
		[Token(Token = "0x400049D")]
		objectiveInfinite,
		[Token(Token = "0x400049E")]
		objectiveInfiniteDebt
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject endDemo;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objective;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectiveRelax;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectiveInfinite;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectiveInfiniteDebt;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject pause;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject scoreEnd;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject scoreDisplay;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject sandbox;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject exitConfirmation;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem particle;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Screen modeTest;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool testDisplay;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material screenTransparent;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material screenOpaque;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer screenRenderer;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isMoving;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1202558", Offset = "0x1202558", VA = "0x1202558")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1202560", Offset = "0x1202560", VA = "0x1202560")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1202574", Offset = "0x1202574", VA = "0x1202574")]
	public void ChangeDisplay(Screen mode)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x12039D0", Offset = "0x12039D0", VA = "0x12039D0")]
	private void SwitchToTransparentMaterial(bool transparent)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1203C18", Offset = "0x1203C18", VA = "0x1203C18")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1203C84", Offset = "0x1203C84", VA = "0x1203C84")]
	public void StartMovement()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1203C90", Offset = "0x1203C90", VA = "0x1203C90")]
	public void StopMovement()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1203C98", Offset = "0x1203C98", VA = "0x1203C98")]
	public ScreenDisplay()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Van : MonoBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string sceneName;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip poofAudio;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hornSound;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audios;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isLoading;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x173295C", Offset = "0x173295C", VA = "0x173295C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1732A10", Offset = "0x1732A10", VA = "0x1732A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1732C00", Offset = "0x1732C00", VA = "0x1732C00")]
	public void Activate(string scene)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1732FF8", Offset = "0x1732FF8", VA = "0x1732FF8")]
	public void PlayCarHorn()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x17330A0", Offset = "0x17330A0", VA = "0x17330A0")]
	public Van()
	{
	}
}
[Token(Token = "0x20000DD")]
public class PersistentData : Singleton<PersistentData>
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int level;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> simpleClientsSkins;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager.GameMode gameMode;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string playerName;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string serverPassword;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string serverName;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string serverNameConnectedTo;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool levelStarted;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string weeklyLevelDef;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x13FECDC", Offset = "0x13FECDC", VA = "0x13FECDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x13FEDF0", Offset = "0x13FEDF0", VA = "0x13FEDF0")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x13FEE48", Offset = "0x13FEE48", VA = "0x13FEE48")]
	public PersistentData()
	{
	}
}
[Token(Token = "0x20000DE")]
public class PicoPauseManager : MonoBehaviour
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PXR_Manager picoManager;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource[] audioSources;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MusicList musicListComponent;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x13FEEF8", Offset = "0x13FEEF8", VA = "0x13FEEF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x13FEEFC", Offset = "0x13FEEFC", VA = "0x13FEEFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x13FEF94", Offset = "0x13FEF94", VA = "0x13FEF94")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x13FF23C", Offset = "0x13FF23C", VA = "0x13FF23C")]
	private void ResumeGame()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x13FF4EC", Offset = "0x13FF4EC", VA = "0x13FF4EC")]
	public PicoPauseManager()
	{
	}
}
[Token(Token = "0x20000DF")]
public class CookHeadsetPlayer : HeadsetPlayer
{
	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9B4", Offset = "0xF2A9B4")]
	private sealed class <ChangeTrackingOrigin>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookHeadsetPlayer <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000554")]
			[Address(RVA = "0x12FC378", Offset = "0x12FC378", VA = "0x12FC378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0x12FC3E0", Offset = "0x12FC3E0", VA = "0x12FC3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x12FBFF4", Offset = "0x12FBFF4", VA = "0x12FBFF4")]
		[DebuggerHidden]
		public <ChangeTrackingOrigin>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x12FC088", Offset = "0x12FC088", VA = "0x12FC088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x12FC08C", Offset = "0x12FC08C", VA = "0x12FC08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x12FC380", Offset = "0x12FC380", VA = "0x12FC380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject pauseIconRef;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject pauseIcon;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject leftArrowHintRef;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject rightArrowHintRef;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject leftArrowHint;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject rightArrowHint;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ScreenFade localGuardianScreenFadeRef;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ScreenFade localGuardianScreenFade;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x12FBCFC", Offset = "0x12FBCFC", VA = "0x12FBCFC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x12FBF84", Offset = "0x12FBF84", VA = "0x12FBF84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36E20", Offset = "0xF36E20")]
	private IEnumerator ChangeTrackingOrigin()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x12FC020", Offset = "0x12FC020", VA = "0x12FC020")]
	public CookHeadsetPlayer()
	{
	}
}
[Token(Token = "0x20000E1")]
public class CookPlayerScript : PlayerScript
{
	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9C4", Offset = "0xF2A9C4")]
	private sealed class <forceSendPositionRoutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CookPlayerScript <>4__this;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothSyncMirror[] <smooths>5__3;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x1300224", Offset = "0x1300224", VA = "0x1300224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0x130028C", Offset = "0x130028C", VA = "0x130028C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x12FDFBC", Offset = "0x12FDFBC", VA = "0x12FDFBC")]
		[DebuggerHidden]
		public <forceSendPositionRoutine>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x12FFEB8", Offset = "0x12FFEB8", VA = "0x12FFEB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x12FFEBC", Offset = "0x12FFEBC", VA = "0x12FFEBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x130022C", Offset = "0x130022C", VA = "0x130022C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro userNameMesh;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject head;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CookPlayerScriptLocal scriptLocal;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSource painSound;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E0A0", Offset = "0xF2E0A0")]
	public Vector3 leftHandOculusPosOffset;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Vector3 leftHandOculusRotOffset;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3 rightHandOculusPosOffset;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Vector3 rightHandOculusRotOffset;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 leftHandSteamPosOffset;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Vector3 leftHandSteamRotOffset;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector3 rightHandSteamPosOffset;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Vector3 rightHandSteamRotOffset;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 leftHandPicoPosOffset;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Vector3 leftHandPicoRotOffset;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Vector3 rightHandPicoPosOffset;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public Vector3 rightHandPicoRotOffset;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Vector3 leftHandQiyuPosOffset;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Vector3 leftHandQiyuRotOffset;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Vector3 rightHandQiyuPosOffset;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public Vector3 rightHandQiyuRotOffset;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject leftHandRef;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject rightHandRef;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SyncVar]
	public HeadsetType headsetType;

	[Token(Token = "0x1700007A")]
	public HeadsetType NetworkheadsetType
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x12FEBA4", Offset = "0x12FEBA4", VA = "0x12FEBA4")]
		get
		{
			return default(HeadsetType);
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x12FEBAC", Offset = "0x12FEBAC", VA = "0x12FEBAC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x12FD9E0", Offset = "0x12FD9E0", VA = "0x12FD9E0", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x12FDAC4", Offset = "0x12FDAC4", VA = "0x12FDAC4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x12FDD04", Offset = "0x12FDD04", VA = "0x12FDD04", Slot = "15")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x12FDD0C", Offset = "0x12FDD0C", VA = "0x12FDD0C", Slot = "17")]
	public override void ChangePlayerName(string oldName, string newName)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x12FDD74", Offset = "0x12FDD74", VA = "0x12FDD74", Slot = "18")]
	public override void SetPlayerID(int oldId, int id)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x12FDF4C", Offset = "0x12FDF4C", VA = "0x12FDF4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF36ED4", Offset = "0xF36ED4")]
	private IEnumerator forceSendPositionRoutine()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x12FDC18", Offset = "0x12FDC18", VA = "0x12FDC18")]
	[Command]
	public void CmdSetHeadsetType(HeadsetType type)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x12FDFE8", Offset = "0x12FDFE8", VA = "0x12FDFE8")]
	private void SetHeadsetType(HeadsetType oldType, HeadsetType type)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x12FE3F4", Offset = "0x12FE3F4", VA = "0x12FE3F4")]
	[Command]
	public void CmdSetInteractivePropGrabbed(NetworkIdentity identity, bool grabbed)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x12FE51C", Offset = "0x12FE51C", VA = "0x12FE51C")]
	[Command]
	public void CmdSetToolGrabbed(NetworkIdentity identity, bool grabbed)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x12FE644", Offset = "0x12FE644", VA = "0x12FE644")]
	[Command]
	public void CmdSetPasteReceiverSpring(NetworkIdentity identity, bool state)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x12FE76C", Offset = "0x12FE76C", VA = "0x12FE76C")]
	[Command]
	public void CmdTriggerSauce(NetworkIdentity identity, bool state)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x12FE894", Offset = "0x12FE894", VA = "0x12FE894")]
	public void ReceiveHit()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x12FE9F4", Offset = "0x12FE9F4", VA = "0x12FE9F4")]
	[ClientRpc]
	private void RpcPlayPain()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x12FE920", Offset = "0x12FE920", VA = "0x12FE920")]
	private void PlayPain()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x12FEB38", Offset = "0x12FEB38", VA = "0x12FEB38")]
	public CookPlayerScript()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x12FEBA0", Offset = "0x12FEBA0", VA = "0x12FEBA0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x12FECBC", Offset = "0x12FECBC", VA = "0x12FECBC")]
	public void UserCode_CmdSetHeadsetType(HeadsetType type)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x12FED0C", Offset = "0x12FED0C", VA = "0x12FED0C")]
	protected static void InvokeUserCode_CmdSetHeadsetType(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x12FEE60", Offset = "0x12FEE60", VA = "0x12FEE60")]
	public void UserCode_CmdSetInteractivePropGrabbed(NetworkIdentity identity, bool grabbed)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x12FEFA4", Offset = "0x12FEFA4", VA = "0x12FEFA4")]
	protected static void InvokeUserCode_CmdSetInteractivePropGrabbed(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x12FF124", Offset = "0x12FF124", VA = "0x12FF124")]
	public void UserCode_CmdSetToolGrabbed(NetworkIdentity identity, bool grabbed)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x12FF268", Offset = "0x12FF268", VA = "0x12FF268")]
	protected static void InvokeUserCode_CmdSetToolGrabbed(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x12FF3E8", Offset = "0x12FF3E8", VA = "0x12FF3E8")]
	public void UserCode_CmdSetPasteReceiverSpring(NetworkIdentity identity, bool state)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x12FF518", Offset = "0x12FF518", VA = "0x12FF518")]
	protected static void InvokeUserCode_CmdSetPasteReceiverSpring(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x12FF698", Offset = "0x12FF698", VA = "0x12FF698")]
	public void UserCode_CmdTriggerSauce(NetworkIdentity identity, bool state)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x12FF7C8", Offset = "0x12FF7C8", VA = "0x12FF7C8")]
	protected static void InvokeUserCode_CmdTriggerSauce(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x12FF948", Offset = "0x12FF948", VA = "0x12FF948")]
	private void UserCode_RpcPlayPain()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x12FF978", Offset = "0x12FF978", VA = "0x12FF978")]
	protected static void InvokeUserCode_RpcPlayPain(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x12FFA68", Offset = "0x12FFA68", VA = "0x12FFA68")]
	static CookPlayerScript()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x12FFD08", Offset = "0x12FFD08", VA = "0x12FFD08", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x12FFDC8", Offset = "0x12FFDC8", VA = "0x12FFDC8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E3")]
public class CookPlayerScriptLocal : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer painVisual;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool painActivated;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1300294", Offset = "0x1300294", VA = "0x1300294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x13002D8", Offset = "0x13002D8", VA = "0x13002D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x12FEAD4", Offset = "0x12FEAD4", VA = "0x12FEAD4")]
	public void PlayPain()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1300404", Offset = "0x1300404", VA = "0x1300404")]
	private void TurnOffPain()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x13002DC", Offset = "0x13002DC", VA = "0x13002DC")]
	private void ManagePainVisual()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x130040C", Offset = "0x130040C", VA = "0x130040C")]
	public CookPlayerScriptLocal()
	{
	}
}
[Token(Token = "0x20000E4")]
public class CookVRHandAnimation : VRHandAnimation
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VRInputManager.Hand hand;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVRGrabber OculusGrabber;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int handFlexLayer;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int handPointLayer;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int handThumbLayer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float editorCurrentFlex;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1303E64", Offset = "0x1303E64", VA = "0x1303E64", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1303F1C", Offset = "0x1303F1C", VA = "0x1303F1C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1304564", Offset = "0x1304564", VA = "0x1304564")]
	public CookVRHandAnimation()
	{
	}
}
[Token(Token = "0x20000E5")]
public class Hit : MonoBehaviour
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CookPlayerScript player;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x146FE14", Offset = "0x146FE14", VA = "0x146FE14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x146FE6C", Offset = "0x146FE6C", VA = "0x146FE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x146FE70", Offset = "0x146FE70", VA = "0x146FE70")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x146FF80", Offset = "0x146FF80", VA = "0x146FF80")]
	public Hit()
	{
	}
}
[Token(Token = "0x20000E6")]
public class VRHandManager : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator handAnimator;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Controller oculusController;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_pointBlend;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x40004E5")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1731C68", Offset = "0x1731C68", VA = "0x1731C68")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1731D08", Offset = "0x1731D08", VA = "0x1731D08")]
	private void Update()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1731E58", Offset = "0x1731E58", VA = "0x1731E58")]
	public VRHandManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class CookedInteractiveProp : InteractiveProp
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E114", Offset = "0xF2E114")]
	[SyncVar]
	public bool isCooking;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip cookSound;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	[SyncVar]
	public float cookingTimer;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SyncVar]
	public float totalCookingTime;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem tooMuchCookedParticles;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool isCanGrabWhileCooking;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool canBeCooked;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool cookChildren;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	[HideInInspector]
	[SyncVar]
	public bool isTimerDisplayed;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public float previousCookingTimer;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int cookedState;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public float totalTimeCooked;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private NetworkGrabbableScript grabbable;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E200", Offset = "0xF2E200")]
	public ProgressBarPro timerUI;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text timerUIText;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool exteriorTimer;

	[Token(Token = "0x1700007D")]
	public bool NetworkisCooking
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1305784", Offset = "0x1305784", VA = "0x1305784")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1304BFC", Offset = "0x1304BFC", VA = "0x1304BFC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public float NetworkcookingTimer
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x130578C", Offset = "0x130578C", VA = "0x130578C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1304EBC", Offset = "0x1304EBC", VA = "0x1304EBC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public float NetworktotalCookingTime
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1305794", Offset = "0x1305794", VA = "0x1305794")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x13046AC", Offset = "0x13046AC", VA = "0x13046AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public bool NetworkisTimerDisplayed
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x130579C", Offset = "0x130579C", VA = "0x130579C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x13051F8", Offset = "0x13051F8", VA = "0x13051F8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x130456C", Offset = "0x130456C", VA = "0x130456C", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1304748", Offset = "0x1304748", VA = "0x1304748", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x130479C", Offset = "0x130479C", VA = "0x130479C", Slot = "21")]
	protected virtual void ManageCook()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1304E7C", Offset = "0x1304E7C", VA = "0x1304E7C")]
	public void AddCookingTime(float time)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1304F58", Offset = "0x1304F58", VA = "0x1304F58", Slot = "22")]
	public virtual void ManageTimerUI()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1304D68", Offset = "0x1304D68", VA = "0x1304D68")]
	[ClientRpc]
	public void RpcPlayCookingSound(bool play)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1305298", Offset = "0x1305298", VA = "0x1305298", Slot = "23")]
	public virtual void ChangeState()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1304C9C", Offset = "0x1304C9C", VA = "0x1304C9C")]
	public void ChangeChildrenState()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1305494", Offset = "0x1305494", VA = "0x1305494")]
	public void UpdateChildrenVisual()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x13053B4", Offset = "0x13053B4", VA = "0x13053B4")]
	[ClientRpc]
	public void RpcUpdateChildrenVisual()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1305708", Offset = "0x1305708", VA = "0x1305708")]
	public CookedInteractiveProp()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1305780", Offset = "0x1305780", VA = "0x1305780")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x13057A4", Offset = "0x13057A4", VA = "0x13057A4")]
	public void UserCode_RpcPlayCookingSound(bool play)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x13058A0", Offset = "0x13058A0", VA = "0x13058A0")]
	protected static void InvokeUserCode_RpcPlayCookingSound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x13059D0", Offset = "0x13059D0", VA = "0x13059D0")]
	public void UserCode_RpcUpdateChildrenVisual()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x13059D4", Offset = "0x13059D4", VA = "0x13059D4")]
	protected static void InvokeUserCode_RpcUpdateChildrenVisual(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1305AC4", Offset = "0x1305AC4", VA = "0x1305AC4")]
	static CookedInteractiveProp()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1305C00", Offset = "0x1305C00", VA = "0x1305C00", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1305E0C", Offset = "0x1305E0C", VA = "0x1305E0C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E8")]
public class CookedStackableProp : CookedInteractiveProp
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public StackableProp.SpawnableObject[] spawnable;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool useIngredientThickness;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<string> spawned;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<string> allowedParticles;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int[] stackableStates;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<string> idLid;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool preventEmptyStack;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float stackHeight;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool applyRandomRotation;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Vector3 stacklableDirection;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<Transform> stackPoints;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int pointIndex;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool forceHeightGain;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float forcedHeightGain;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioSource stackSound;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool preventStack;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SyncVar]
	public string id;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public BoxCollider collider_trigger;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public BoxCollider collider_physic;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ParticleSystem particle;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject progressbarParent;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SyncVar]
	public bool displayProgressBar;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SyncVar]
	public float condimentTimer;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float condimentTimerMax;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string condimentName;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool isAcceptCondiment;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool allowParticle;

	[Token(Token = "0x17000081")]
	public string Networkid
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1308C44", Offset = "0x1308C44", VA = "0x1308C44")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x13060EC", Offset = "0x13060EC", VA = "0x13060EC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool NetworkdisplayProgressBar
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1308C4C", Offset = "0x1308C4C", VA = "0x1308C4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1307178", Offset = "0x1307178", VA = "0x1307178")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float NetworkcondimentTimer
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1308C54", Offset = "0x1308C54", VA = "0x1308C54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x13070DC", Offset = "0x13070DC", VA = "0x13070DC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1305FD8", Offset = "0x1305FD8", VA = "0x1305FD8", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x13061FC", Offset = "0x13061FC", VA = "0x13061FC", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x13072E4", Offset = "0x13072E4", VA = "0x13072E4")]
	private void UpdateId(string oldId, string newId)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x13074D4", Offset = "0x13074D4", VA = "0x13074D4", Slot = "18")]
	protected override void ReceipeCheck(Tools tool)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x130658C", Offset = "0x130658C", VA = "0x130658C")]
	private void SpawnObject(string idToSpawn, int i)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x13073F0", Offset = "0x13073F0", VA = "0x13073F0")]
	private string GetLastIngredientFromId()
	{
		return null;
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x130849C", Offset = "0x130849C", VA = "0x130849C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1308110", Offset = "0x1308110", VA = "0x1308110")]
	public bool CanStack()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x13087D8", Offset = "0x13087D8", VA = "0x13087D8", Slot = "23")]
	public override void ChangeState()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x13088E4", Offset = "0x13088E4", VA = "0x13088E4", Slot = "22")]
	public override void ManageTimerUI()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1307218", Offset = "0x1307218", VA = "0x1307218")]
	public bool SearchForAllowedTopping(string toolID)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1308168", Offset = "0x1308168", VA = "0x1308168")]
	private void UpdateCookingTime()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1308B94", Offset = "0x1308B94", VA = "0x1308B94")]
	public CookedStackableProp()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1308C40", Offset = "0x1308C40", VA = "0x1308C40")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1308C5C", Offset = "0x1308C5C", VA = "0x1308C5C", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1308E14", Offset = "0x1308E14", VA = "0x1308E14", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E9")]
public class Cooker : Storage
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E294", Offset = "0xF2E294")]
	public bool isHitWhenPlayerTouchMe;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentHitTime;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float hitTime;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastHit;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float timeBetweenHits;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x134B898", Offset = "0x134B898", VA = "0x134B898", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x134B8A0", Offset = "0x134B8A0", VA = "0x134B8A0", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x134B8A8", Offset = "0x134B8A8", VA = "0x134B8A8", Slot = "17")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x134B8E0", Offset = "0x134B8E0", VA = "0x134B8E0")]
	protected void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x134BAB0", Offset = "0x134BAB0", VA = "0x134BAB0", Slot = "19")]
	public override void AddObject(GameObject item, int i)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x134BCAC", Offset = "0x134BCAC", VA = "0x134BCAC")]
	public Cooker()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x134BD24", Offset = "0x134BD24", VA = "0x134BD24")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20000EA")]
public class CookingProp : InteractiveProp
{
	[Serializable]
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9D4", Offset = "0xF2A9D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__16_0;

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x134D6E4", Offset = "0x134D6E4", VA = "0x134D6E4")]
		public <>c()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x134D6EC", Offset = "0x134D6EC", VA = "0x134D6EC")]
		internal bool <Update>b__16_0(GameObject i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public Storage storageScript;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	[SyncVar]
	public bool canCook;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool isAttached;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string[] allowedIds;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool allowSkewer;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool transmitAllowedToStorage;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource vanishSound;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem vanishParticle;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystem cookingParticle;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float removeTimer;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshRenderer voyant;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material voyantON;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material voyantOFF;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E314", Offset = "0xF2E314")]
	public ProgressBarPro timerUI;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text timerUIText;

	[Token(Token = "0x17000084")]
	public bool NetworkcanCook
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x134CFF4", Offset = "0x134CFF4", VA = "0x134CFF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x134C700", Offset = "0x134C700", VA = "0x134C700")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x134BD28", Offset = "0x134BD28", VA = "0x134BD28", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x134BDB8", Offset = "0x134BDB8", VA = "0x134BDB8", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x134CF18", Offset = "0x134CF18", VA = "0x134CF18", Slot = "19")]
	protected override void OnGrabBegin()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x134CF50", Offset = "0x134CF50", VA = "0x134CF50", Slot = "20")]
	protected override void OnGrabEnd()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x134CCC4", Offset = "0x134CCC4", VA = "0x134CCC4")]
	[ClientRpc]
	private void RpcPlayEffect()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x134CC30", Offset = "0x134CC30", VA = "0x134CC30")]
	private void PlayEffect()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x134CE38", Offset = "0x134CE38", VA = "0x134CE38")]
	[ClientRpc]
	private void RpcPlayVanishSoundEffect()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x134CDA4", Offset = "0x134CDA4", VA = "0x134CDA4")]
	private void PlayVanishSoundEffect()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x134CB1C", Offset = "0x134CB1C", VA = "0x134CB1C")]
	[ClientRpc]
	private void RpcPlayCookingSmoke(bool activatesmoke)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x134CA2C", Offset = "0x134CA2C", VA = "0x134CA2C")]
	private void PlayCookingSmoke(bool activatesmoke)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x134C7A0", Offset = "0x134C7A0", VA = "0x134C7A0")]
	private void CookIngredient(CookedInteractiveProp itemInteractiveScript)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x134CF88", Offset = "0x134CF88", VA = "0x134CF88")]
	public CookingProp()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x134CFF0", Offset = "0x134CFF0", VA = "0x134CFF0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x134CFFC", Offset = "0x134CFFC", VA = "0x134CFFC")]
	private void UserCode_RpcPlayEffect()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x134D000", Offset = "0x134D000", VA = "0x134D000")]
	protected static void InvokeUserCode_RpcPlayEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x134D0F0", Offset = "0x134D0F0", VA = "0x134D0F0")]
	private void UserCode_RpcPlayVanishSoundEffect()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x134D0F4", Offset = "0x134D0F4", VA = "0x134D0F4")]
	protected static void InvokeUserCode_RpcPlayVanishSoundEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x134D1E4", Offset = "0x134D1E4", VA = "0x134D1E4")]
	private void UserCode_RpcPlayCookingSmoke(bool activatesmoke)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x134D1EC", Offset = "0x134D1EC", VA = "0x134D1EC")]
	protected static void InvokeUserCode_RpcPlayCookingSmoke(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x134D31C", Offset = "0x134D31C", VA = "0x134D31C")]
	static CookingProp()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x134D4AC", Offset = "0x134D4AC", VA = "0x134D4AC", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x134D5A4", Offset = "0x134D5A4", VA = "0x134D5A4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000EC")]
public class CutableProp : InteractiveProp
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject spawnedOnCut;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float spawnOffset;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<GameObject> parts;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<GameObject> spawnedParts;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 rotationOffset;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool autoCutLast;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool onlyCutExtremities;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x134DD44", Offset = "0x134DD44", VA = "0x134DD44", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x134DD4C", Offset = "0x134DD4C", VA = "0x134DD4C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x134DFC0", Offset = "0x134DFC0", VA = "0x134DFC0", Slot = "17")]
	protected override void ActionReceived(Tools toolScript)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x134EB38", Offset = "0x134EB38", VA = "0x134EB38")]
	public void SpawnProp(GameObject part)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x134E5F8", Offset = "0x134E5F8", VA = "0x134E5F8")]
	private int GetClosestPart(Tools tool)
	{
		return default(int);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x134EA24", Offset = "0x134EA24", VA = "0x134EA24")]
	[ClientRpc]
	private void RpcDesactivatePart(int itemId)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x134E928", Offset = "0x134E928", VA = "0x134E928")]
	private void DesactivatePart(int itemId)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x134EE28", Offset = "0x134EE28", VA = "0x134EE28")]
	[ClientRpc]
	private void RpcRemovePart(int itemId)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x134ED2C", Offset = "0x134ED2C", VA = "0x134ED2C")]
	private void RemovePart(int itemId)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x134EF3C", Offset = "0x134EF3C", VA = "0x134EF3C")]
	public CutableProp()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x134EFA4", Offset = "0x134EFA4", VA = "0x134EFA4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x134EFA8", Offset = "0x134EFA8", VA = "0x134EFA8")]
	private void UserCode_RpcDesactivatePart(int itemId)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x134EFAC", Offset = "0x134EFAC", VA = "0x134EFAC")]
	protected static void InvokeUserCode_RpcDesactivatePart(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x134F0E0", Offset = "0x134F0E0", VA = "0x134F0E0")]
	private void UserCode_RpcRemovePart(int itemId)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x134F0E4", Offset = "0x134F0E4", VA = "0x134F0E4")]
	protected static void InvokeUserCode_RpcRemovePart(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x134F218", Offset = "0x134F218", VA = "0x134F218")]
	static CutableProp()
	{
	}
}
[Token(Token = "0x20000ED")]
public class DippableProp : InteractiveProp
{
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class Dippable
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject objectToActivate;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1357418", Offset = "0x1357418", VA = "0x1357418")]
		public Dippable()
		{
		}
	}

	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9E4", Offset = "0xF2A9E4")]
	private sealed class <ActivateDipping>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DippableProp <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0x13573A8", Offset = "0x13573A8", VA = "0x13573A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0x1357410", Offset = "0x1357410", VA = "0x1357410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1356750", Offset = "0x1356750", VA = "0x1356750")]
		[DebuggerHidden]
		public <ActivateDipping>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1356EA0", Offset = "0x1356EA0", VA = "0x1356EA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1356EA4", Offset = "0x1356EA4", VA = "0x1356EA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x13573B0", Offset = "0x13573B0", VA = "0x13573B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E34C", Offset = "0xF2E34C")]
	public List<DippingCollider> dippingColliderList;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject parentObject;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Dippable> dippableList;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject progressbarParent;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool onlyOnce;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool dipped;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool listAssigned;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	[SyncVar]
	public bool displayProgressBar;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SyncVar]
	public float condimentTimer;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float condimentTimerMax;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SyncVar]
	private string condimentName;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool isAcceptCondiment;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool allowParticle;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Tools toolVariable;

	[Token(Token = "0x17000085")]
	public bool NetworkdisplayProgressBar
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x13567E8", Offset = "0x13567E8", VA = "0x13567E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1355BE4", Offset = "0x1355BE4", VA = "0x1355BE4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float NetworkcondimentTimer
	{
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x13567F0", Offset = "0x13567F0", VA = "0x13567F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1355B48", Offset = "0x1355B48", VA = "0x1355B48")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public string NetworkcondimentName
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x13567F8", Offset = "0x13567F8", VA = "0x13567F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x13566B4", Offset = "0x13566B4", VA = "0x13566B4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x13559F4", Offset = "0x13559F4", VA = "0x13559F4", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1355A1C", Offset = "0x1355A1C", VA = "0x1355A1C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1355FC8", Offset = "0x1355FC8", VA = "0x1355FC8")]
	private string GetLastIngredientFromId()
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x13560DC", Offset = "0x13560DC", VA = "0x13560DC", Slot = "18")]
	protected override void ReceipeCheck(Tools tool)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1356158", Offset = "0x1356158", VA = "0x1356158")]
	public void ActivateDipp()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1356184", Offset = "0x1356184", VA = "0x1356184")]
	[ClientRpc]
	public void RpcActivateDipp()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x13562D4", Offset = "0x13562D4", VA = "0x13562D4")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1355C84", Offset = "0x1355C84", VA = "0x1355C84")]
	public void ActivateTopping()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1355EE8", Offset = "0x1355EE8", VA = "0x1355EE8")]
	[ClientRpc]
	public void RpcActivateTopping()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1356264", Offset = "0x1356264", VA = "0x1356264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37078", Offset = "0xF37078")]
	private IEnumerator ActivateDipping()
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x135677C", Offset = "0x135677C", VA = "0x135677C")]
	public DippableProp()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x13567E4", Offset = "0x13567E4", VA = "0x13567E4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1356800", Offset = "0x1356800", VA = "0x1356800")]
	public void UserCode_RpcActivateDipp()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x135682C", Offset = "0x135682C", VA = "0x135682C")]
	protected static void InvokeUserCode_RpcActivateDipp(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x135692C", Offset = "0x135692C", VA = "0x135692C")]
	public void UserCode_RpcActivateTopping()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1356930", Offset = "0x1356930", VA = "0x1356930")]
	protected static void InvokeUserCode_RpcActivateTopping(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1356A20", Offset = "0x1356A20", VA = "0x1356A20")]
	static DippableProp()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1356B5C", Offset = "0x1356B5C", VA = "0x1356B5C", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1356D1C", Offset = "0x1356D1C", VA = "0x1356D1C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000F0")]
public class DippingCollider : NetworkBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DippableProp dippable;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string allowedId;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<DippableProp.Dippable> dippableList;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<DippingCollider> dippingColliderList;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject parentObject;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject progressbarParent;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject anchor;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool collided;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1357420", Offset = "0x1357420", VA = "0x1357420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1357448", Offset = "0x1357448", VA = "0x1357448")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x135732C", Offset = "0x135732C", VA = "0x135732C")]
	public void AssignList()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x13575EC", Offset = "0x13575EC", VA = "0x13575EC")]
	[ClientRpc]
	public void RpcAssignList()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x13576CC", Offset = "0x13576CC", VA = "0x13576CC")]
	public DippingCollider()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1357734", Offset = "0x1357734", VA = "0x1357734")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1357738", Offset = "0x1357738", VA = "0x1357738")]
	public void UserCode_RpcAssignList()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x135773C", Offset = "0x135773C", VA = "0x135773C")]
	protected static void InvokeUserCode_RpcAssignList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x135782C", Offset = "0x135782C", VA = "0x135782C")]
	static DippingCollider()
	{
	}
}
[Token(Token = "0x20000F1")]
public class Drink : InteractiveProp
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DrinkContainer drinkContainer;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] splitId;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E3B4", Offset = "0xF2E3B4")]
	public string containerName;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x135AC90", Offset = "0x135AC90", VA = "0x135AC90", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x135AD8C", Offset = "0x135AD8C", VA = "0x135AD8C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x135AE80", Offset = "0x135AE80", VA = "0x135AE80")]
	public Drink()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x135AEE8", Offset = "0x135AEE8", VA = "0x135AEE8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20000F2")]
public class Frier : NetworkBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2A9F4", Offset = "0xF2A9F4")]
	private sealed class <UpRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frier <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0x1C46BF4", Offset = "0x1C46BF4", VA = "0x1C46BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0x1C46C5C", Offset = "0x1C46C5C", VA = "0x1C46C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1C4639C", Offset = "0x1C4639C", VA = "0x1C4639C")]
		[DebuggerHidden]
		public <UpRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1C468BC", Offset = "0x1C468BC", VA = "0x1C468BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x1C468C0", Offset = "0x1C468C0", VA = "0x1C468C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x1C46BFC", Offset = "0x1C46BFC", VA = "0x1C46BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA04", Offset = "0xF2AA04")]
	private sealed class <DownRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frier <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0x1C4684C", Offset = "0x1C4684C", VA = "0x1C4684C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x1C468B4", Offset = "0x1C468B4", VA = "0x1C468B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1C46484", Offset = "0x1C46484", VA = "0x1C46484")]
		[DebuggerHidden]
		public <DownRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1C4651C", Offset = "0x1C4651C", VA = "0x1C4651C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1C46520", Offset = "0x1C46520", VA = "0x1C46520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1C46854", Offset = "0x1C46854", VA = "0x1C46854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CookingProp cookingProp;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMoving;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isDown;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer ledUp;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer ledDown;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1C46228", Offset = "0x1C46228", VA = "0x1C46228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1C462DC", Offset = "0x1C462DC", VA = "0x1C462DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1C462E0", Offset = "0x1C462E0", VA = "0x1C462E0")]
	public void Up()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1C4632C", Offset = "0x1C4632C", VA = "0x1C4632C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3713C", Offset = "0xF3713C")]
	private IEnumerator UpRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1C463C8", Offset = "0x1C463C8", VA = "0x1C463C8")]
	public void Down()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1C46414", Offset = "0x1C46414", VA = "0x1C46414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF371A0", Offset = "0xF371A0")]
	private IEnumerator DownRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1C464B0", Offset = "0x1C464B0", VA = "0x1C464B0")]
	public Frier()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1C46518", Offset = "0x1C46518", VA = "0x1C46518")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20000F5")]
public class InteractiveProp : NetworkBehaviour
{
	[Token(Token = "0x20000F6")]
	public enum Action
	{
		[Token(Token = "0x400056E")]
		Cut,
		[Token(Token = "0x400056F")]
		Cook,
		[Token(Token = "0x4000570")]
		Mix,
		[Token(Token = "0x4000571")]
		None,
		[Token(Token = "0x4000572")]
		Clean
	}

	[Serializable]
	[Token(Token = "0x20000F7")]
	public class State
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action autorisedAction;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color uiColor;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject placeHolderPrefab;

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1377F80", Offset = "0x1377F80", VA = "0x1377F80")]
		public State()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<State> states;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E3EC", Offset = "0xF2E3EC")]
	[SyncVar]
	public int activeState;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public bool isGrabbed;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool changeable;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float cooldown;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E458", Offset = "0xF2E458")]
	public bool isContained;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool isSnapPosOverrided;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform currentStoragePoint;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Storage currentStorageObject;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlaceHolder placeHolder;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource audioSource;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected CookPlayerScript player;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem spawningParticle;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject anchor;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool grabLeftHand;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float lastHapticTime;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float maxHapticTime;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool inHand;

	[Token(Token = "0x1700008E")]
	public int NetworkactiveState
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1377A68", Offset = "0x1377A68", VA = "0x1377A68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1376DAC", Offset = "0x1376DAC", VA = "0x1376DAC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool NetworkisGrabbed
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1377A70", Offset = "0x1377A70", VA = "0x1377A70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1377A78", Offset = "0x1377A78", VA = "0x1377A78")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x1376350", Offset = "0x1376350", VA = "0x1376350", Slot = "15")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x13763AC", Offset = "0x13763AC", VA = "0x13763AC", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1376910", Offset = "0x1376910", VA = "0x1376910")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1376620", Offset = "0x1376620", VA = "0x1376620")]
	public void SnapObject()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1376A6C", Offset = "0x1376A6C", VA = "0x1376A6C", Slot = "17")]
	protected virtual void ActionReceived(Tools toolScript)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1376E48", Offset = "0x1376E48", VA = "0x1376E48", Slot = "18")]
	protected virtual void ReceipeCheck(Tools tool)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1376E4C", Offset = "0x1376E4C", VA = "0x1376E4C")]
	public void CleanIngredient(GameObject item)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1377018", Offset = "0x1377018", VA = "0x1377018")]
	public string GetID()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1377090", Offset = "0x1377090", VA = "0x1377090", Slot = "19")]
	protected virtual void OnGrabBegin()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1377498", Offset = "0x1377498", VA = "0x1377498", Slot = "20")]
	protected virtual void OnGrabEnd()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1377548", Offset = "0x1377548", VA = "0x1377548")]
	public PlaceHolder ActivatePlaceHolder(Transform storageParent)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1377714", Offset = "0x1377714", VA = "0x1377714")]
	private void SetVisible(Transform root, bool visible)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x13772B0", Offset = "0x13772B0", VA = "0x13772B0")]
	public void DesactivatePlaceHolder()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1377820", Offset = "0x1377820", VA = "0x1377820")]
	[ClientRpc]
	public void RpcPlaySpawningParticle()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1377900", Offset = "0x1377900", VA = "0x1377900")]
	public void PlaySpawningParticle()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x137795C", Offset = "0x137795C", VA = "0x137795C")]
	private void PlayDelayedParticle()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x13773B4", Offset = "0x13773B4", VA = "0x13773B4")]
	public void ApticLaunch(bool leftHand)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x13779F0", Offset = "0x13779F0", VA = "0x13779F0")]
	public InteractiveProp()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1377A64", Offset = "0x1377A64", VA = "0x1377A64")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1377B18", Offset = "0x1377B18", VA = "0x1377B18")]
	public void UserCode_RpcPlaySpawningParticle()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1377B1C", Offset = "0x1377B1C", VA = "0x1377B1C")]
	protected static void InvokeUserCode_RpcPlaySpawningParticle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1377C0C", Offset = "0x1377C0C", VA = "0x1377C0C")]
	static InteractiveProp()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1377CEC", Offset = "0x1377CEC", VA = "0x1377CEC", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1377E48", Offset = "0x1377E48", VA = "0x1377E48", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000F8")]
public class LeverActionStorage : Storage
{
	[Serializable]
	[Token(Token = "0x20000F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA14", Offset = "0xF2AA14")]
	private sealed class <>c
	{
		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__20_0;

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x152B0C8", Offset = "0x152B0C8", VA = "0x152B0C8")]
		public <>c()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x152B0D0", Offset = "0x152B0D0", VA = "0x152B0D0")]
		internal bool <OnTriggerEnter>b__20_0(GameObject i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion pivotStartRot;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform pivot;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float minAngle;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float maxAngle;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform handle;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float handleZOriginalValue;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float handleZMinValue;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string propToChangeId;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject spawnedProp;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform spawnPoint;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float pushedPercent;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float axisAngleOffset;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject axis;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource actionSound;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource failSound;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystem failParticle;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int indexToRemove;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool currentlySpawning;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x152A1A0", Offset = "0x152A1A0", VA = "0x152A1A0", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x152A22C", Offset = "0x152A22C", VA = "0x152A22C", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x152AAD0", Offset = "0x152AAD0", VA = "0x152AAD0", Slot = "17")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x152A614", Offset = "0x152A614", VA = "0x152A614")]
	private void RotateLever()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x152A8DC", Offset = "0x152A8DC", VA = "0x152A8DC")]
	[ClientRpc]
	private void RpcResultAction(bool success)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x152A750", Offset = "0x152A750", VA = "0x152A750")]
	private void SuccessAction()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x152A9F0", Offset = "0x152A9F0", VA = "0x152A9F0")]
	private void FailAction()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x152ADC8", Offset = "0x152ADC8", VA = "0x152ADC8")]
	public LeverActionStorage()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x152AE30", Offset = "0x152AE30", VA = "0x152AE30")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x152AE34", Offset = "0x152AE34", VA = "0x152AE34")]
	private void UserCode_RpcResultAction(bool success)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x152AE40", Offset = "0x152AE40", VA = "0x152AE40")]
	protected static void InvokeUserCode_RpcResultAction(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x152AF84", Offset = "0x152AF84", VA = "0x152AF84")]
	static LeverActionStorage()
	{
	}
}
[Token(Token = "0x20000FA")]
public class LeverHandle : NetworkBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject handleRef;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public bool springAction;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool useHaptic;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PasteDispenser actionScript;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool grabLeftHand;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastHapticTime;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float maxHapticTime;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isCaught;

	[Token(Token = "0x17000090")]
	public bool NetworkspringAction
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x152B938", Offset = "0x152B938", VA = "0x152B938")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x152B710", Offset = "0x152B710", VA = "0x152B710")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x152B13C", Offset = "0x152B13C", VA = "0x152B13C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x152B1C8", Offset = "0x152B1C8", VA = "0x152B1C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x152B3A4", Offset = "0x152B3A4", VA = "0x152B3A4")]
	public void OnGrabBegin(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x152B4BC", Offset = "0x152B4BC", VA = "0x152B4BC")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x152B31C", Offset = "0x152B31C", VA = "0x152B31C")]
	public void ApticLaunch(bool leftHand, float strenght)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x152B64C", Offset = "0x152B64C", VA = "0x152B64C")]
	public void ToggleSpring(bool state)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x152B7B0", Offset = "0x152B7B0", VA = "0x152B7B0")]
	[ClientRpc]
	public void RpcToggleSpring(bool state)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x152B5B4", Offset = "0x152B5B4", VA = "0x152B5B4")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x152B8C4", Offset = "0x152B8C4", VA = "0x152B8C4")]
	public LeverHandle()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x152B934", Offset = "0x152B934", VA = "0x152B934")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x152B940", Offset = "0x152B940", VA = "0x152B940")]
	public void UserCode_RpcToggleSpring(bool state)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x152B9F8", Offset = "0x152B9F8", VA = "0x152B9F8")]
	protected static void InvokeUserCode_RpcToggleSpring(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x152BB28", Offset = "0x152BB28", VA = "0x152BB28")]
	static LeverHandle()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x152BC08", Offset = "0x152BC08", VA = "0x152BC08", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x152BD00", Offset = "0x152BD00", VA = "0x152BD00", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000FB")]
public class PasteReceiver : NetworkBehaviour
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject progressbarParent;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public bool isAcceptPaste;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool doorBlock;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public float pasteTimer;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pasteTimerMax;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public bool displayProgressBar;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool externalSpawnControl;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool forceSpawn;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxScale;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject pasteObject;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject spawnedObject;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<string> allowedParticles;

	[Token(Token = "0x17000091")]
	public bool NetworkisAcceptPaste
	{
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x13FD628", Offset = "0x13FD628", VA = "0x13FD628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x13FCC3C", Offset = "0x13FCC3C", VA = "0x13FCC3C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public float NetworkpasteTimer
	{
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x13FD630", Offset = "0x13FD630", VA = "0x13FD630")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x13FD520", Offset = "0x13FD520", VA = "0x13FD520")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public bool NetworkdisplayProgressBar
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x13FD638", Offset = "0x13FD638", VA = "0x13FD638")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x13FCF68", Offset = "0x13FCF68", VA = "0x13FCF68")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x13FCB8C", Offset = "0x13FCB8C", VA = "0x13FCB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x13FCCDC", Offset = "0x13FCCDC", VA = "0x13FCCDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x13FD264", Offset = "0x13FD264", VA = "0x13FD264")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x13FD008", Offset = "0x13FD008", VA = "0x13FD008")]
	public void SpawnObject(GameObject prefab, Transform location, int i)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x13FD5BC", Offset = "0x13FD5BC", VA = "0x13FD5BC")]
	public PasteReceiver()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x13FD624", Offset = "0x13FD624", VA = "0x13FD624")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x13FD640", Offset = "0x13FD640", VA = "0x13FD640", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x13FD800", Offset = "0x13FD800", VA = "0x13FD800", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000FC")]
public class ReceipeTester : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool delivery1;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool delivery2;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool delivery3;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject receipeTesterPrefab;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string receipeID;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x11FC710", Offset = "0x11FC710", VA = "0x11FC710")]
	private void Start()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x11FC714", Offset = "0x11FC714", VA = "0x11FC714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x11FC7BC", Offset = "0x11FC7BC", VA = "0x11FC7BC")]
	private void InstantiateTester(string deliveryName)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x11FC96C", Offset = "0x11FC96C", VA = "0x11FC96C")]
	public ReceipeTester()
	{
	}
}
[Token(Token = "0x20000FD")]
public class RecipeManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000FE")]
	public struct ItemAmount
	{
		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string itemid;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject prefab;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int amount;
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public class Recipe
	{
		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ItemAmount> ingredients;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemAmount craftedItem;

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x11FCD68", Offset = "0x11FCD68", VA = "0x11FCD68")]
		public bool CheckIngredient(string item_ID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x11FCE88", Offset = "0x11FCE88", VA = "0x11FCE88")]
		public void CreateObject(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x11FCFD8", Offset = "0x11FCFD8", VA = "0x11FCFD8")]
		public Recipe()
		{
		}
	}

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RecipeManager instance;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<Recipe> recipes;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Recipe> setRecipes;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<GameObject> currentRecipeIngredients;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool currentlyChecking;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x11FC974", Offset = "0x11FC974", VA = "0x11FC974")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x11FCABC", Offset = "0x11FCABC", VA = "0x11FCABC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x11FCC60", Offset = "0x11FCC60", VA = "0x11FCC60")]
	public static bool IsIngredientAlreadyInUse(GameObject ingredientObj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x11FCCCC", Offset = "0x11FCCCC", VA = "0x11FCCCC")]
	public static void SetReceipeInProgress(GameObject ingredientObj1, GameObject ingredientObj2)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x11FCD60", Offset = "0x11FCD60", VA = "0x11FCD60")]
	public RecipeManager()
	{
	}
}
[Token(Token = "0x2000100")]
public class Skewer : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CookedStackableProp prop;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float originalMaxStackHeight;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] pikes;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float addedScale;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1208DA8", Offset = "0x1208DA8", VA = "0x1208DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1208E20", Offset = "0x1208E20", VA = "0x1208E20")]
	private void Update()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1208EC8", Offset = "0x1208EC8", VA = "0x1208EC8")]
	private void ChangeLenght()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1208FC0", Offset = "0x1208FC0", VA = "0x1208FC0")]
	public Skewer()
	{
	}
}
[Token(Token = "0x2000101")]
public class SkewerCooker : MonoBehaviour
{
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Storage storage;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractiveProp skewer;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject movingPart;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject snapRight;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject snapLeft;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem fire;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform cookingSpot;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cookingSpotOriginal;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1208FC8", Offset = "0x1208FC8", VA = "0x1208FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x12090C8", Offset = "0x12090C8", VA = "0x12090C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1209638", Offset = "0x1209638", VA = "0x1209638")]
	public SkewerCooker()
	{
	}
}
[Token(Token = "0x2000102")]
public class StackableProp : InteractiveProp
{
	[Serializable]
	[Token(Token = "0x2000103")]
	public class SpawnableObject
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idSpawnable;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject item;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float thickness;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isTopping;

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1388744", Offset = "0x1388744", VA = "0x1388744")]
		public SpawnableObject()
		{
		}
	}

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SpawnableObject[] spawnable;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<string> spawned;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int[] stackableStates;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<string> idLid;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool preventEmptyStack;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float stackHeight;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool applyRandomRotation;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Transform> stackPoints;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int pointIndex;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool forceHeightGain;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float forcedHeightGain;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SyncVar]
	public string id;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoxCollider collider_trigger;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public BoxCollider collider_physic;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParticleSystem particle;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ProgressBarPro progressbar;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject progressbarParent;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SyncVar]
	public bool displayProgressBar;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SyncVar]
	public float condimentTimer;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float condimentTimerMax;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<string> allowedParticles;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string condimentName;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool isAcceptCondiment;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool gotKetchup;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	private bool gotMayo;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	private bool allowParticle;

	[Token(Token = "0x17000094")]
	public string Networkid
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1388354", Offset = "0x1388354", VA = "0x1388354")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1386760", Offset = "0x1386760", VA = "0x1386760")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool NetworkdisplayProgressBar
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x138835C", Offset = "0x138835C", VA = "0x138835C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1386D20", Offset = "0x1386D20", VA = "0x1386D20")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float NetworkcondimentTimer
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1388364", Offset = "0x1388364", VA = "0x1388364")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1386C84", Offset = "0x1386C84", VA = "0x1386C84")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1386648", Offset = "0x1386648", VA = "0x1386648", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1386870", Offset = "0x1386870", VA = "0x1386870", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1387008", Offset = "0x1387008", VA = "0x1387008")]
	private void UpdateId(string oldId, string newId)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1387114", Offset = "0x1387114", VA = "0x1387114", Slot = "18")]
	protected override void ReceipeCheck(Tools tool)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1387718", Offset = "0x1387718", VA = "0x1387718", Slot = "21")]
	public virtual void SpawnObject(string idToSpawn, int i)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1386DC0", Offset = "0x1386DC0", VA = "0x1386DC0")]
	private string GetLastIngredientFromId()
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1387F68", Offset = "0x1387F68", VA = "0x1387F68")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1386EA4", Offset = "0x1386EA4", VA = "0x1386EA4")]
	public bool SearchForAllowedTopping(string toolID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x13876C0", Offset = "0x13876C0", VA = "0x13876C0")]
	public bool CanStack()
	{
		return default(bool);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x13882E8", Offset = "0x13882E8", VA = "0x13882E8")]
	public StackableProp()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1388350", Offset = "0x1388350", VA = "0x1388350")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x138836C", Offset = "0x138836C", VA = "0x138836C", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1388528", Offset = "0x1388528", VA = "0x1388528", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000104")]
public class Tools : NetworkBehaviour
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA24", Offset = "0xF2AA24")]
	private sealed class <RespawnRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tools <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BB")]
			[Address(RVA = "0x14AEC00", Offset = "0x14AEC00", VA = "0x14AEC00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x14AEC68", Offset = "0x14AEC68", VA = "0x14AEC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x14AE338", Offset = "0x14AE338", VA = "0x14AE338")]
		[DebuggerHidden]
		public <RespawnRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x14AE978", Offset = "0x14AE978", VA = "0x14AE978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x14AE97C", Offset = "0x14AE97C", VA = "0x14AE97C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x14AEC08", Offset = "0x14AEC08", VA = "0x14AEC08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InteractiveProp.Action action;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string id;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InteractiveProp interactivePropScript;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isNeedingGrabForAction;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected CookPlayerScript player;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E52C", Offset = "0xF2E52C")]
	public bool isRespawnIfTooFar;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 limits;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 initPos;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion initRot;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isKinematicAtStart;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystem respawnParticles;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Renderer[] renderers;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool respawnInProgress;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[HideInInspector]
	public bool isActive;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[SyncVar]
	public bool isGrabbed;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool instantGrabEnd;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float respawnTimer;

	[Token(Token = "0x17000097")]
	public bool NetworkisGrabbed
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x14AE5C8", Offset = "0x14AE5C8", VA = "0x14AE5C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x14AE0C8", Offset = "0x14AE0C8", VA = "0x14AE0C8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x14ADB7C", Offset = "0x14ADB7C", VA = "0x14ADB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x14ADD08", Offset = "0x14ADD08", VA = "0x14ADD08")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x14ADFD8", Offset = "0x14ADFD8", VA = "0x14ADFD8")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x14AE168", Offset = "0x14AE168", VA = "0x14AE168")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x14AE1D8", Offset = "0x14AE1D8", VA = "0x14AE1D8")]
	private void SetNotGrabbed()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x14ADE70", Offset = "0x14ADE70", VA = "0x14ADE70")]
	private void CheckIfTooFar()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x14AE2C8", Offset = "0x14AE2C8", VA = "0x14AE2C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF372D4", Offset = "0xF372D4")]
	private IEnumerator RespawnRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x14AE364", Offset = "0x14AE364", VA = "0x14AE364")]
	private void Show(bool show)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x14AE3E0", Offset = "0x14AE3E0", VA = "0x14AE3E0")]
	public void PlayRespawnParticle()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x14AE474", Offset = "0x14AE474", VA = "0x14AE474")]
	[ClientRpc]
	public void RpcPlayRespawnParticle()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x14AE554", Offset = "0x14AE554", VA = "0x14AE554")]
	public Tools()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x14AE5C4", Offset = "0x14AE5C4", VA = "0x14AE5C4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x14AE5D0", Offset = "0x14AE5D0", VA = "0x14AE5D0")]
	public void UserCode_RpcPlayRespawnParticle()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x14AE5D4", Offset = "0x14AE5D4", VA = "0x14AE5D4")]
	protected static void InvokeUserCode_RpcPlayRespawnParticle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x14AE6C4", Offset = "0x14AE6C4", VA = "0x14AE6C4")]
	static Tools()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x14AE7A4", Offset = "0x14AE7A4", VA = "0x14AE7A4", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x14AE89C", Offset = "0x14AE89C", VA = "0x14AE89C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000106")]
public class Topping : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000107")]
	public class ToppingClass
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject item;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x14AEFF4", Offset = "0x14AEFF4", VA = "0x14AEFF4")]
		public ToppingClass()
		{
		}
	}

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ToppingClass> topings;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x14AEC70", Offset = "0x14AEC70", VA = "0x14AEC70")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x14AED7C", Offset = "0x14AED7C", VA = "0x14AED7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x14AED80", Offset = "0x14AED80", VA = "0x14AED80")]
	public void ActivateTopping(string identifier)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x14AEEB0", Offset = "0x14AEEB0", VA = "0x14AEEB0")]
	public bool CheckIfToppingAllowed(string identifier)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x14AEFEC", Offset = "0x14AEFEC", VA = "0x14AEFEC")]
	public Topping()
	{
	}
}
[Token(Token = "0x2000108")]
public class VisualCookingStates : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<InteractiveProp.State> states;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E584", Offset = "0xF2E584")]
	public int activeState;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1733280", Offset = "0x1733280", VA = "0x1733280")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1733284", Offset = "0x1733284", VA = "0x1733284")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1733288", Offset = "0x1733288", VA = "0x1733288")]
	public void ChangeCurrentState(int state)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x173340C", Offset = "0x173340C", VA = "0x173340C")]
	public VisualCookingStates()
	{
	}
}
[Token(Token = "0x2000109")]
public class AutomaticTrash : NetworkBehaviour
{
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA34", Offset = "0xF2AA34")]
	private sealed class <WaitClose>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutomaticTrash <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x12F24B4", Offset = "0x12F24B4", VA = "0x12F24B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x12F251C", Offset = "0x12F251C", VA = "0x12F251C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x12F2050", Offset = "0x12F2050", VA = "0x12F2050")]
		[DebuggerHidden]
		public <WaitClose>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x12F20E8", Offset = "0x12F20E8", VA = "0x12F20E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x12F20EC", Offset = "0x12F20EC", VA = "0x12F20EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x12F24BC", Offset = "0x12F24BC", VA = "0x12F24BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator doorAnimator;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeBeforeClose;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<InteractiveProp> containedObjects;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isOpen;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastTimeOpen;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isClosing;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioSrc;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AutomaticTrashContainer container;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x12F1D54", Offset = "0x12F1D54", VA = "0x12F1D54", Slot = "15")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x12F1DE8", Offset = "0x12F1DE8", VA = "0x12F1DE8", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x12F1EC8", Offset = "0x12F1EC8", VA = "0x12F1EC8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x12F1F64", Offset = "0x12F1F64", VA = "0x12F1F64")]
	private void Open()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x12F1E4C", Offset = "0x12F1E4C", VA = "0x12F1E4C")]
	private void Close()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x12F1FE0", Offset = "0x12F1FE0", VA = "0x12F1FE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37398", Offset = "0xF37398")]
	private IEnumerator WaitClose()
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x12F207C", Offset = "0x12F207C", VA = "0x12F207C")]
	public AutomaticTrash()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x12F20E4", Offset = "0x12F20E4", VA = "0x12F20E4")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200010B")]
public class AutomaticTrashContainer : NetworkBehaviour
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<InteractiveProp> containedObjects;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSrc;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x12F2524", Offset = "0x12F2524", VA = "0x12F2524")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x12F25A4", Offset = "0x12F25A4", VA = "0x12F25A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x12F25A8", Offset = "0x12F25A8", VA = "0x12F25A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x12F26F0", Offset = "0x12F26F0", VA = "0x12F26F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x12F2824", Offset = "0x12F2824", VA = "0x12F2824")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x12F298C", Offset = "0x12F298C", VA = "0x12F298C")]
	[ClientRpc]
	private void RpcPlaySound()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x12F2A6C", Offset = "0x12F2A6C", VA = "0x12F2A6C")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x12F21F8", Offset = "0x12F21F8", VA = "0x12F21F8")]
	public void EmptyCan()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x12F2B00", Offset = "0x12F2B00", VA = "0x12F2B00")]
	public AutomaticTrashContainer()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x12F2B68", Offset = "0x12F2B68", VA = "0x12F2B68")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x12F2B6C", Offset = "0x12F2B6C", VA = "0x12F2B6C")]
	private void UserCode_RpcPlaySound()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x12F2B70", Offset = "0x12F2B70", VA = "0x12F2B70")]
	protected static void InvokeUserCode_RpcPlaySound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x12F2C60", Offset = "0x12F2C60", VA = "0x12F2C60")]
	static AutomaticTrashContainer()
	{
	}
}
[Token(Token = "0x200010C")]
public class FoodBox : Storage
{
	[Token(Token = "0x200010D")]
	public enum DoorAction
	{
		[Token(Token = "0x4000612")]
		CLOSE,
		[Token(Token = "0x4000613")]
		OPEN
	}

	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA44", Offset = "0xF2AA44")]
	private sealed class <WaitClose>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FoodBox <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x1C461B8", Offset = "0x1C461B8", VA = "0x1C461B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x1C46220", Offset = "0x1C46220", VA = "0x1C46220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1C4600C", Offset = "0x1C4600C", VA = "0x1C4600C")]
		[DebuggerHidden]
		public <WaitClose>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1C46038", Offset = "0x1C46038", VA = "0x1C46038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1C4603C", Offset = "0x1C4603C", VA = "0x1C4603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1C461C0", Offset = "0x1C461C0", VA = "0x1C461C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public DoorAction doorAction;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E5F8", Offset = "0xF2E5F8")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float spawnDelay;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int spawnIfMoreThanInReceipe;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public float spawnTimer;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E640", Offset = "0xF2E640")]
	public Sprite icon;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image iconImage;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E678", Offset = "0xF2E678")]
	public ProgressBarPro progress;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Animator animator;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip openAudio;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip closeAudio;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource audioSrc;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SyncVar]
	[SerializeField]
	private bool isActivated;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool isClosed;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool isDoorMoving;

	[Token(Token = "0x1700009C")]
	public DoorAction NetworkdoorAction
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x13637BC", Offset = "0x13637BC", VA = "0x13637BC")]
		get
		{
			return default(DoorAction);
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x13631F8", Offset = "0x13631F8", VA = "0x13631F8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public float NetworkspawnTimer
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x13637C4", Offset = "0x13637C4", VA = "0x13637C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1362F40", Offset = "0x1362F40", VA = "0x1362F40")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public bool NetworkisActivated
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x13637CC", Offset = "0x13637CC", VA = "0x13637CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1362E28", Offset = "0x1362E28", VA = "0x1362E28")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1362620", Offset = "0x1362620", VA = "0x1362620", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1362770", Offset = "0x1362770", VA = "0x1362770", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1362FDC", Offset = "0x1362FDC", VA = "0x1362FDC")]
	public void InstantiatePrefab(GameObject prefab, Transform location, int i)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1362B24", Offset = "0x1362B24", VA = "0x1362B24")]
	private bool CheckIfAllowed(GameObject ingredient)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x13634E8", Offset = "0x13634E8", VA = "0x13634E8", Slot = "18")]
	protected override void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x13633C8", Offset = "0x13633C8", VA = "0x13633C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3745C", Offset = "0xF3745C")]
	[Server]
	private IEnumerator WaitClose()
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x13626C4", Offset = "0x13626C4", VA = "0x13626C4")]
	private void Activate(bool oldValue, bool newValue)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1363308", Offset = "0x1363308", VA = "0x1363308")]
	private void Open()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1363608", Offset = "0x1363608", VA = "0x1363608")]
	private void Close()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x13636D8", Offset = "0x13636D8", VA = "0x13636D8")]
	private void DoorActionChanged(DoorAction oldState, DoorAction newState)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1363748", Offset = "0x1363748", VA = "0x1363748")]
	public FoodBox()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x13637B8", Offset = "0x13637B8", VA = "0x13637B8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x13637D4", Offset = "0x13637D4", VA = "0x13637D4", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1363970", Offset = "0x1363970", VA = "0x1363970", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200010F")]
public class MovingSpawner : Storage
{
	[Serializable]
	[Token(Token = "0x2000110")]
	public class ObjectsToSpawn
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefabToSpawn;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timer;

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x12AA854", Offset = "0x12AA854", VA = "0x12AA854")]
		public ObjectsToSpawn()
		{
		}
	}

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookManager manager;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int itemIdentifier;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int allowedNodeSpawn;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x12AA2C8", Offset = "0x12AA2C8", VA = "0x12AA2C8", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x12AA348", Offset = "0x12AA348", VA = "0x12AA348", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x12AA4D0", Offset = "0x12AA4D0", VA = "0x12AA4D0")]
	public void InstantiatePrefab(GameObject prefab, Transform location, int i)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x12AA6EC", Offset = "0x12AA6EC", VA = "0x12AA6EC")]
	private bool CheckIfAllowed(GameObject ingredient)
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x12AA7E8", Offset = "0x12AA7E8", VA = "0x12AA7E8")]
	public MovingSpawner()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x12AA850", Offset = "0x12AA850", VA = "0x12AA850")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000111")]
public class PlaceHolder : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject realObject;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Storage storage;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x13FF4F4", Offset = "0x13FF4F4", VA = "0x13FF4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x13FF4F8", Offset = "0x13FF4F8", VA = "0x13FF4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x13FF4FC", Offset = "0x13FF4FC", VA = "0x13FF4FC")]
	public PlaceHolder()
	{
	}
}
[Token(Token = "0x2000112")]
public class Plate : Storage
{
	[Token(Token = "0x6000707")]
	[Address(RVA = "0x13FF504", Offset = "0x13FF504", VA = "0x13FF504")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x13FF508", Offset = "0x13FF508", VA = "0x13FF508")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x13FF50C", Offset = "0x13FF50C", VA = "0x13FF50C")]
	public Plate()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x13FF574", Offset = "0x13FF574", VA = "0x13FF574")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000113")]
public class PropsSpawner : Storage
{
	[Serializable]
	[Token(Token = "0x2000114")]
	public class ObjectsToSpawn
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefabToSpawn;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timer;

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x11FBE54", Offset = "0x11FBE54", VA = "0x11FBE54")]
		public ObjectsToSpawn()
		{
		}
	}

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<ObjectsToSpawn> spawnedObjets;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CookManager manager;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int itemIdentifier;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x11FB7F0", Offset = "0x11FB7F0", VA = "0x11FB7F0", Slot = "15")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x11FB870", Offset = "0x11FB870", VA = "0x11FB870", Slot = "16")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x11FBAD0", Offset = "0x11FBAD0", VA = "0x11FBAD0")]
	public void InstantiatePrefab(GameObject prefab, Transform location, int i)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x11FBCEC", Offset = "0x11FBCEC", VA = "0x11FBCEC")]
	private bool CheckIfAllowed(GameObject ingredient)
	{
		return default(bool);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x11FBDE8", Offset = "0x11FBDE8", VA = "0x11FBDE8")]
	public PropsSpawner()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x11FBE50", Offset = "0x11FBE50", VA = "0x11FBE50")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000115")]
public class Storage : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA54", Offset = "0xF2AA54")]
	private sealed class <>c
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__10_0;

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x138A428", Offset = "0x138A428", VA = "0x138A428")]
		public <>c()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x138A430", Offset = "0x138A430", VA = "0x138A430")]
		internal bool <OnTriggerEnter>b__10_0(GameObject i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA64", Offset = "0xF2AA64")]
	private sealed class <SetClientAuthorityOnContainedObject>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Storage <>4__this;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int storageId;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x138A744", Offset = "0x138A744", VA = "0x138A744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x138A7AC", Offset = "0x138A7AC", VA = "0x138A7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1389EC0", Offset = "0x1389EC0", VA = "0x1389EC0")]
		[DebuggerHidden]
		public <SetClientAuthorityOnContainedObject>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x138A49C", Offset = "0x138A49C", VA = "0x138A49C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x138A4A0", Offset = "0x138A4A0", VA = "0x138A4A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x138A74C", Offset = "0x138A74C", VA = "0x138A74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA74", Offset = "0xF2AA74")]
	private sealed class <UpdateContainedObjectFromNetIdRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Storage <>4__this;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint netId;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkIdentity <netIdComponent>5__2;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x138ABDC", Offset = "0x138ABDC", VA = "0x138ABDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x138AC44", Offset = "0x138AC44", VA = "0x138AC44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x138A044", Offset = "0x138A044", VA = "0x138A044")]
		[DebuggerHidden]
		public <UpdateContainedObjectFromNetIdRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x138A7B4", Offset = "0x138A7B4", VA = "0x138A7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x138A7B8", Offset = "0x138A7B8", VA = "0x138A7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x138ABE4", Offset = "0x138ABE4", VA = "0x138ABE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SyncListUInt containedObjectNetIds;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> containedObject;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Transform> storageSpace;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool canStoreNoneFood;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool isGrabbed;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool blockStorage;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string[] allowedIds;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool allowSkewer;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1388A48", Offset = "0x1388A48", VA = "0x1388A48", Slot = "15")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1388D34", Offset = "0x1388D34", VA = "0x1388D34", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1388D38", Offset = "0x1388D38", VA = "0x1388D38", Slot = "17")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1389064", Offset = "0x1389064", VA = "0x1389064")]
	public bool IsAllowedID(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1389134", Offset = "0x1389134", VA = "0x1389134", Slot = "18")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1389384", Offset = "0x1389384", VA = "0x1389384", Slot = "19")]
	public virtual void AddObject(GameObject item, int i)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1389188", Offset = "0x1389188", VA = "0x1389188")]
	public void RemoveObject(GameObject item)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x13898D8", Offset = "0x13898D8", VA = "0x13898D8")]
	public void ForceRemoveObject(GameObject item)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1389B14", Offset = "0x1389B14", VA = "0x1389B14")]
	private void ReAllowedStorage()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x13896AC", Offset = "0x13896AC", VA = "0x13896AC")]
	public void UpdateObject(GameObject item, bool state, Transform storageSpace, GameObject currentStorage)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1389B1C", Offset = "0x1389B1C", VA = "0x1389B1C")]
	[Client]
	public void SetClientAuthorityOnContainedObjects(bool clientAuthority)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x13897C0", Offset = "0x13897C0", VA = "0x13897C0")]
	[TargetRpc]
	public void TargetSetClientAuthorityOnContainedObject(NetworkConnection target, int storageId)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1389E40", Offset = "0x1389E40", VA = "0x1389E40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37540", Offset = "0xF37540")]
	private IEnumerator SetClientAuthorityOnContainedObject(int storageId)
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1389C5C", Offset = "0x1389C5C", VA = "0x1389C5C")]
	[Client]
	public void SetClientAuthorityOnContainedObject(CookedInteractiveProp prop, bool clientAuthority)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1389EEC", Offset = "0x1389EEC", VA = "0x1389EEC")]
	public void ClearStoredList()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1389F74", Offset = "0x1389F74", VA = "0x1389F74")]
	private void OnContainedObjChange(SyncList<uint>.Operation op, int index, uint oldItem, uint newItem)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1388CB0", Offset = "0x1388CB0", VA = "0x1388CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF375B4", Offset = "0xF375B4")]
	private IEnumerator UpdateContainedObjectFromNetIdRoutine(int index, uint netId)
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x138A070", Offset = "0x138A070", VA = "0x138A070")]
	public Storage()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x138A110", Offset = "0x138A110", VA = "0x138A110")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x138A114", Offset = "0x138A114", VA = "0x138A114")]
	public void UserCode_TargetSetClientAuthorityOnContainedObject(NetworkConnection target, int storageId)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x138A144", Offset = "0x138A144", VA = "0x138A144")]
	protected static void InvokeUserCode_TargetSetClientAuthorityOnContainedObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x138A2E4", Offset = "0x138A2E4", VA = "0x138A2E4")]
	static Storage()
	{
	}
}
[Token(Token = "0x2000119")]
public class Trash : NetworkBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InteractiveProp> containedObjects;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isOpen;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1568C90", Offset = "0x1568C90", VA = "0x1568C90", Slot = "15")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1568D2C", Offset = "0x1568D2C", VA = "0x1568D2C", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1568D30", Offset = "0x1568D30", VA = "0x1568D30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1568E78", Offset = "0x1568E78", VA = "0x1568E78")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1568FAC", Offset = "0x1568FAC", VA = "0x1568FAC")]
	public void SetLidState(bool open)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1569324", Offset = "0x1569324", VA = "0x1569324")]
	[ClientRpc]
	private void RpcPlaySound()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x15692B8", Offset = "0x15692B8", VA = "0x15692B8")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1569404", Offset = "0x1569404", VA = "0x1569404")]
	public Trash()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x156946C", Offset = "0x156946C", VA = "0x156946C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1569470", Offset = "0x1569470", VA = "0x1569470")]
	private void UserCode_RpcPlaySound()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1569474", Offset = "0x1569474", VA = "0x1569474")]
	protected static void InvokeUserCode_RpcPlaySound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1569564", Offset = "0x1569564", VA = "0x1569564")]
	static Trash()
	{
	}
}
[Token(Token = "0x200011A")]
public class TrashLid : MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trash trash;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1569644", Offset = "0x1569644", VA = "0x1569644")]
	private void Start()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1569648", Offset = "0x1569648", VA = "0x1569648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x156964C", Offset = "0x156964C", VA = "0x156964C")]
	private void OnGrabBegin()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x15696D0", Offset = "0x15696D0", VA = "0x15696D0")]
	private void OnGrabEnd()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x15696D4", Offset = "0x15696D4", VA = "0x15696D4")]
	private void SetClosed()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x156979C", Offset = "0x156979C", VA = "0x156979C")]
	public TrashLid()
	{
	}
}
[Token(Token = "0x200011B")]
public class TutoTester : MonoBehaviour
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro popupText;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI currentPopUp;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currentLevel;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LevelManager.GameMode currentMode;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDemo;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PopupManager popup;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int remainingPopups;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int totalPopups;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1569E80", Offset = "0x1569E80", VA = "0x1569E80")]
	private void Start()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1569F40", Offset = "0x1569F40", VA = "0x1569F40")]
	private void Update()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x156B0B0", Offset = "0x156B0B0", VA = "0x156B0B0")]
	private void UpdatePopups()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x156B31C", Offset = "0x156B31C", VA = "0x156B31C")]
	public void UpdateTranslationManager(string key, string text)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x156B4EC", Offset = "0x156B4EC", VA = "0x156B4EC")]
	public TutoTester()
	{
	}
}
[Token(Token = "0x200011C")]
public class AvatarPickUI : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text title;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x12F2D48", Offset = "0x12F2D48", VA = "0x12F2D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x12F2DC8", Offset = "0x12F2DC8", VA = "0x12F2DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x12F2DCC", Offset = "0x12F2DCC", VA = "0x12F2DCC")]
	public AvatarPickUI()
	{
	}
}
[Token(Token = "0x200011D")]
public class ClaimRewardPopUp : MonoBehaviour
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI amountText;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI title;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI claimText;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI rewardText;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x12F6E5C", Offset = "0x12F6E5C", VA = "0x12F6E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x12F6FE4", Offset = "0x12F6FE4", VA = "0x12F6FE4")]
	private void NotificationsReadDone(int notifId)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x12F7120", Offset = "0x12F7120", VA = "0x12F7120")]
	public void Init()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x12F7184", Offset = "0x12F7184", VA = "0x12F7184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x12F7188", Offset = "0x12F7188", VA = "0x12F7188")]
	public void ClaimReward()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x12F71EC", Offset = "0x12F71EC", VA = "0x12F71EC")]
	public ClaimRewardPopUp()
	{
	}
}
[Token(Token = "0x200011E")]
public class CreateHostUI : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField inputPlayerNameHost;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField inputServerNameHost;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputServerPasswordHost;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI inputPlayerNameHostPlaceholder;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI inputServerNameHostPlaceholder;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI inputServerPasswordHostPlaceholder;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text errorTextUI;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text title;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text playerName;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text serverName;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_Text password;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text hostText;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public MainUI mainUIscript;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x134D758", Offset = "0x134D758", VA = "0x134D758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x134DAAC", Offset = "0x134DAAC", VA = "0x134DAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x134DAB0", Offset = "0x134DAB0", VA = "0x134DAB0")]
	public void HostMultiplayerGame()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x134DCF8", Offset = "0x134DCF8", VA = "0x134DCF8")]
	public void ToggleKeyboard(float offset)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x134DD18", Offset = "0x134DD18", VA = "0x134DD18")]
	public void CloseKeyboard()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x134DD3C", Offset = "0x134DD3C", VA = "0x134DD3C")]
	public CreateHostUI()
	{
	}
}
[Token(Token = "0x200011F")]
public class GameEndUI : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA84", Offset = "0xF2AA84")]
	private sealed class <DisplayLevelScoreRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndUI <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x1460E80", Offset = "0x1460E80", VA = "0x1460E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x1460EE8", Offset = "0x1460EE8", VA = "0x1460EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x14607C0", Offset = "0x14607C0", VA = "0x14607C0")]
		[DebuggerHidden]
		public <DisplayLevelScoreRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1460B54", Offset = "0x1460B54", VA = "0x1460B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1460B58", Offset = "0x1460B58", VA = "0x1460B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1460E88", Offset = "0x1460E88", VA = "0x1460E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AA94", Offset = "0xF2AA94")]
	private sealed class <MedalsDisplayRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndUI <>4__this;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <burgersDisplayed>5__2;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <previousScore>5__3;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x14612D4", Offset = "0x14612D4", VA = "0x14612D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0x146133C", Offset = "0x146133C", VA = "0x146133C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1460984", Offset = "0x1460984", VA = "0x1460984")]
		[DebuggerHidden]
		public <MedalsDisplayRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1461064", Offset = "0x1461064", VA = "0x1461064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1461068", Offset = "0x1461068", VA = "0x1461068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x14612DC", Offset = "0x14612DC", VA = "0x14612DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAA4", Offset = "0xF2AAA4")]
	private sealed class <IncrementBurgerNumber>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI totalBurgersUnlocked;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int value;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x1460FF4", Offset = "0x1460FF4", VA = "0x1460FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x146105C", Offset = "0x146105C", VA = "0x146105C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1460A40", Offset = "0x1460A40", VA = "0x1460A40")]
		[DebuggerHidden]
		public <IncrementBurgerNumber>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1460EF0", Offset = "0x1460EF0", VA = "0x1460EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1460EF4", Offset = "0x1460EF4", VA = "0x1460EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1460FFC", Offset = "0x1460FFC", VA = "0x1460FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI levelName;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IncrementValue totalScoreText;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IncrementValue gainsText;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IncrementValue wastesText;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject timed_relax_object;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI infiniteText;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI weeklyText;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image[] goldBurgerMedals;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject medals;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SlicedFilledImage progressionBar;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI totalBurgerGainedText;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject nextButton;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject restartButton;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject lobbyButton;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject locked;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI multiplayerText;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x145FC68", Offset = "0x145FC68", VA = "0x145FC68")]
	private void Start()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1460340", Offset = "0x1460340", VA = "0x1460340")]
	private void SetLanguage()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x14603C4", Offset = "0x14603C4", VA = "0x14603C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1460590", Offset = "0x1460590", VA = "0x1460590")]
	public void DisplayFinalScore()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1460740", Offset = "0x1460740", VA = "0x1460740")]
	private void RequestWeeklyRanking()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1460400", Offset = "0x1460400", VA = "0x1460400")]
	public void CheckForNextLevel()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x14606D0", Offset = "0x14606D0", VA = "0x14606D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF376C8", Offset = "0xF376C8")]
	private IEnumerator DisplayLevelScoreRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x14607EC", Offset = "0x14607EC", VA = "0x14607EC")]
	private void IncrementProgressBar()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1460914", Offset = "0x1460914", VA = "0x1460914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3772C", Offset = "0xF3772C")]
	private IEnumerator MedalsDisplayRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x14609B0", Offset = "0x14609B0", VA = "0x14609B0")]
	private int RequestPlayerPlacement()
	{
		return default(int);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x14609B8", Offset = "0x14609B8", VA = "0x14609B8")]
	private int RequestPlayersNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x14609C0", Offset = "0x14609C0", VA = "0x14609C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37790", Offset = "0xF37790")]
	private IEnumerator IncrementBurgerNumber(TextMeshProUGUI totalBurgersUnlocked, int value)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1460A6C", Offset = "0x1460A6C", VA = "0x1460A6C")]
	private void RankInfoUpdated(int rank, int numberOfPlayers)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1460B4C", Offset = "0x1460B4C", VA = "0x1460B4C")]
	public GameEndUI()
	{
	}
}
[Token(Token = "0x2000123")]
public class GameScoreDisplay : MonoBehaviour
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E71C", Offset = "0xF2E71C")]
	public TextMeshProUGUI lostClientsText;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI deliveryErrorsText;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI deliveredClientsText;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI timerText;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E754", Offset = "0xF2E754")]
	public AudioSource bip;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float previousMin;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float previousTenthSecond;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float previousSecond;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1461418", Offset = "0x1461418", VA = "0x1461418")]
	private void Start()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1461424", Offset = "0x1461424", VA = "0x1461424")]
	public void UpdateScores()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x14616E8", Offset = "0x14616E8", VA = "0x14616E8")]
	public void UpdateHour()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x14618A0", Offset = "0x14618A0", VA = "0x14618A0")]
	public void UpdateTimer(float timer)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1461B3C", Offset = "0x1461B3C", VA = "0x1461B3C")]
	public GameScoreDisplay()
	{
	}
}
[Token(Token = "0x2000124")]
public class GameStartUI : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI levelName;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E78C", Offset = "0xF2E78C")]
	public GameObject timedUI;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject relaxUI;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject infiniteUI;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject infiniteDebtUI;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject weeklyUI;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E7C4", Offset = "0xF2E7C4")]
	public TextMeshProUGUI objectiveTimed1;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI objectiveTimed2;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI objectiveTimed3;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI objectiveRelax;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI objectiveRelaxText;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI objectiveInfinite;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI objectiveInfiniteDebt;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI timer;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI objectivesFirstLevel;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI objectivesFirstLevelRelax;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI multiplayerTimerStart;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI weeklyTimer;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI infiniteTextStart;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI infiniteTextEnd;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI infiniteDebtTextStart;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshProUGUI infiniteDebtTextEnd;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject playButton;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1461B44", Offset = "0x1461B44", VA = "0x1461B44", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x146231C", Offset = "0x146231C", VA = "0x146231C")]
	private void SetLanguage()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1462560", Offset = "0x1462560", VA = "0x1462560", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1461BF8", Offset = "0x1461BF8", VA = "0x1461BF8")]
	public void SetStartingScreen()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1462680", Offset = "0x1462680", VA = "0x1462680")]
	public GameStartUI()
	{
	}
}
[Token(Token = "0x2000125")]
public class GridUI : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 cellSize;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 spacing;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parent;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numberPerLine;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lineNumber;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int columnNumber;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float marginX;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float marginY;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1462D64", Offset = "0x1462D64", VA = "0x1462D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1462E54", Offset = "0x1462E54", VA = "0x1462E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1462E58", Offset = "0x1462E58", VA = "0x1462E58")]
	public void AddObject(GameObject prefab)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1462FC0", Offset = "0x1462FC0", VA = "0x1462FC0")]
	public GridUI()
	{
	}
}
[Token(Token = "0x2000126")]
public class ImplodingEmitter : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAB4", Offset = "0xF2AAB4")]
	private sealed class <ImplodeRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImplodingEmitter <>4__this;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.Particle[] <particles>5__2;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x136AE0C", Offset = "0x136AE0C", VA = "0x136AE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0x136AE74", Offset = "0x136AE74", VA = "0x136AE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x136AB24", Offset = "0x136AB24", VA = "0x136AB24")]
		[DebuggerHidden]
		public <ImplodeRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x136AB58", Offset = "0x136AB58", VA = "0x136AB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x136AB5C", Offset = "0x136AB5C", VA = "0x136AB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x136AE14", Offset = "0x136AE14", VA = "0x136AE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particle;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource coinaudio;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x136AA70", Offset = "0x136AA70", VA = "0x136AA70")]
	public void Implode()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x136AAB4", Offset = "0x136AAB4", VA = "0x136AAB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF378E4", Offset = "0xF378E4")]
	private IEnumerator ImplodeRoutine()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x136AB50", Offset = "0x136AB50", VA = "0x136AB50")]
	public ImplodingEmitter()
	{
	}
}
[Token(Token = "0x2000128")]
public class InGameUI : MonoBehaviour
{
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAC4", Offset = "0xF2AAC4")]
	private sealed class <TogglePopUp>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InGameUI <>4__this;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool show;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x1374CEC", Offset = "0x1374CEC", VA = "0x1374CEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x1374D54", Offset = "0x1374D54", VA = "0x1374D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1374BDC", Offset = "0x1374BDC", VA = "0x1374BDC")]
		[DebuggerHidden]
		public <TogglePopUp>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1374C1C", Offset = "0x1374C1C", VA = "0x1374C1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1374C20", Offset = "0x1374C20", VA = "0x1374C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1374CF4", Offset = "0x1374CF4", VA = "0x1374CF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameStartUI;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pauseUI;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameEndUI;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject demoEndUI;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject multiplayerExitUI;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator popUpAnimator;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject buyButton;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool exitUIOpened;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1373FEC", Offset = "0x1373FEC", VA = "0x1373FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1374078", Offset = "0x1374078", VA = "0x1374078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1373FF0", Offset = "0x1373FF0", VA = "0x1373FF0")]
	public void DisplayGameStart()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x136F550", Offset = "0x136F550", VA = "0x136F550")]
	public void DisplayGameEnd()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x13743C4", Offset = "0x13743C4", VA = "0x13743C4")]
	public void DisplayMultiplayerExitUI()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x137444C", Offset = "0x137444C", VA = "0x137444C")]
	private void DisplayEndScore()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x13744B0", Offset = "0x13744B0", VA = "0x13744B0")]
	private void CheckLevelEnd()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1374544", Offset = "0x1374544", VA = "0x1374544")]
	private void DisplayPause()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1374628", Offset = "0x1374628", VA = "0x1374628")]
	private void DisplayDemoScreen()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x13746A8", Offset = "0x13746A8", VA = "0x13746A8")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1374730", Offset = "0x1374730", VA = "0x1374730")]
	public void ReturnToLobby()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1374800", Offset = "0x1374800", VA = "0x1374800")]
	public void MultiplayerExit()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1374880", Offset = "0x1374880", VA = "0x1374880")]
	public void LoadEnding()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x13748FC", Offset = "0x13748FC", VA = "0x13748FC")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x137497C", Offset = "0x137497C", VA = "0x137497C")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1374A4C", Offset = "0x1374A4C", VA = "0x1374A4C")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x13742B0", Offset = "0x13742B0", VA = "0x13742B0")]
	public void OpenUI()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x136F014", Offset = "0x136F014", VA = "0x136F014")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1374B48", Offset = "0x1374B48", VA = "0x1374B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37998", Offset = "0xF37998")]
	private IEnumerator TogglePopUp(bool show, float waitTime)
	{
		return null;
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1374124", Offset = "0x1374124", VA = "0x1374124")]
	public void SwitchPause()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1374C08", Offset = "0x1374C08", VA = "0x1374C08")]
	public void LoadStorePage(string URL)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1374C14", Offset = "0x1374C14", VA = "0x1374C14")]
	public InGameUI()
	{
	}
}
[Token(Token = "0x200012A")]
public class InfiniteLevelSelectionUI : MonoBehaviour
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button infiniteSwitch;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playButton;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject demoText;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buyButton;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x13753B4", Offset = "0x13753B4", VA = "0x13753B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1375500", Offset = "0x1375500", VA = "0x1375500")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1375504", Offset = "0x1375504", VA = "0x1375504")]
	public InfiniteLevelSelectionUI()
	{
	}
}
[Token(Token = "0x200012B")]
public class InfiniteSuitCase : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Animator anim;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AudioSource cashSound;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] cashStacks;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI debtTimerText;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI debtValueText;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI amountofMoneyAvailableText;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem suitecaseParticle;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform cursorLow;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform cursorHigh;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject cursor;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource alarmBipSound;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource cashRegisterSound;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem infiniteEndExplosion;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x137550C", Offset = "0x137550C", VA = "0x137550C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1375598", Offset = "0x1375598", VA = "0x1375598")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x136EE4C", Offset = "0x136EE4C", VA = "0x136EE4C")]
	public void SuitecaseAppear()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1375778", Offset = "0x1375778", VA = "0x1375778")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1375A50", Offset = "0x1375A50", VA = "0x1375A50")]
	public void CloseCase()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x137571C", Offset = "0x137571C", VA = "0x137571C")]
	public void OpenCase()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x13756AC", Offset = "0x13756AC", VA = "0x13756AC")]
	public void DeactivateStacks()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1375888", Offset = "0x1375888", VA = "0x1375888")]
	public void ManageCashStack()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1375AAC", Offset = "0x1375AAC", VA = "0x1375AAC")]
	public void UpdateAmountOfMoney(float value)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1375B08", Offset = "0x1375B08", VA = "0x1375B08")]
	public void ManageCursorPosition()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1375CF8", Offset = "0x1375CF8", VA = "0x1375CF8")]
	public void UpdateDebtTimer(float timer)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1375FB0", Offset = "0x1375FB0", VA = "0x1375FB0")]
	public void FailedToPay()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1376100", Offset = "0x1376100", VA = "0x1376100")]
	public InfiniteSuitCase()
	{
	}
}
[Token(Token = "0x200012C")]
public class JoinSessionUI : MonoBehaviour
{
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAD4", Offset = "0xF2AAD4")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JoinSessionUI <>4__this;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1379554", Offset = "0x1379554", VA = "0x1379554")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x13798B8", Offset = "0x13798B8", VA = "0x13798B8")]
		internal void <HostsHasBeenUpdated>b__0()
		{
		}
	}

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VoxelStoreGameSessionDatabase.HostInfo selectedHost;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField inputServerPasswordClient;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputPlayerNameClient;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_InputField hostFilterInput;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text hostsListErrorUI;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text errorTextUI;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject hostsListWaitingImg;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject hostsListContainer;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hostRowPrefab;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite dinerIcon;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite dessertIcon;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite skewerIcon;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text title;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TMP_Text playerName;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text searchFilter;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text passwordText;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text joinText;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text refreshText;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI inputPlayerNameHostPlaceholder;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI inputServerSearchPlaceholder;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI inputServerPasswordHostPlaceholder;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public MainUI mainUIscript;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1377F88", Offset = "0x1377F88", VA = "0x1377F88")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x13783E4", Offset = "0x13783E4", VA = "0x13783E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x13783E8", Offset = "0x13783E8", VA = "0x13783E8")]
	public void Join()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1378340", Offset = "0x1378340", VA = "0x1378340")]
	public void RefreshHostsList()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1378C90", Offset = "0x1378C90", VA = "0x1378C90")]
	private void DestroyHostsList()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1378D70", Offset = "0x1378D70", VA = "0x1378D70")]
	public void HostsHasBeenUpdated(bool error)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x137955C", Offset = "0x137955C", VA = "0x137955C")]
	private void ColorizeList()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x137973C", Offset = "0x137973C", VA = "0x137973C")]
	public void HostHasBeenSelected(int id)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x137986C", Offset = "0x137986C", VA = "0x137986C")]
	public void ToggleKeyboard(float offset)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x137988C", Offset = "0x137988C", VA = "0x137988C")]
	public void CloseKeyboard()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x13798B0", Offset = "0x13798B0", VA = "0x13798B0")]
	public JoinSessionUI()
	{
	}
}
[Token(Token = "0x200012E")]
public class Leaderboard : MonoBehaviour
{
	[Token(Token = "0x200012F")]
	public enum ScoreType
	{
		[Token(Token = "0x4000704")]
		GLOBAL,
		[Token(Token = "0x4000705")]
		SOLO,
		[Token(Token = "0x4000706")]
		MULTIPLAYER
	}

	[Token(Token = "0x2000130")]
	private enum ScoreFilter
	{
		[Token(Token = "0x4000708")]
		TOP,
		[Token(Token = "0x4000709")]
		MINE,
		[Token(Token = "0x400070A")]
		FRIENDS
	}

	[Token(Token = "0x2000131")]
	private enum DisplayInfinite
	{
		[Token(Token = "0x400070C")]
		CLIENT,
		[Token(Token = "0x400070D")]
		DEBT,
		[Token(Token = "0x400070E")]
		NONE
	}

	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAE4", Offset = "0xF2AAE4")]
	private sealed class <AddElementsInLeaderboard>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoxelStoreGameSessionDatabase.LeaderboardInfo[] scores;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Leaderboard <>4__this;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform <myRow>5__2;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x1524914", Offset = "0x1524914", VA = "0x1524914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x152497C", Offset = "0x152497C", VA = "0x152497C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1522ECC", Offset = "0x1522ECC", VA = "0x1522ECC")]
		[DebuggerHidden]
		public <AddElementsInLeaderboard>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x15242E0", Offset = "0x15242E0", VA = "0x15242E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x15242E4", Offset = "0x15242E4", VA = "0x15242E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x152491C", Offset = "0x152491C", VA = "0x152491C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E82C", Offset = "0xF2E82C")]
	public ScrollRect scrollRect;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform listParent;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject refresh;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI levelText;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI errorText;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI rankText;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI playersText;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button loadMoreUpButton;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button loadMoreDownButton;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SwitchUI timedInfiniteSwitch;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SwitchUI soloMultiSwitch;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SwitchUI totalLevelSwitch;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle friendToggleUI;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle topToggleUI;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Toggle myScoreToggleUI;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SelectionSlider restaurantSlider;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button nextLevelButton;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button previousLevelButton;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E864", Offset = "0xF2E864")]
	public GameObject rowPrefab;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color rowSelectedColor;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color rowUnselectedColor;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E89C", Offset = "0xF2E89C")]
	private string gameType;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int nbLevelsSolo;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int nbLevelsMulti;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int nbRowsByPage;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Color buttonSelectedColor;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Color buttonUnselectedColor;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public ScoreType currentScoreType;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ScoreFilter currentScoreFilter;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public int currentLevel;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public int currentRank;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public int currentNbOfPlayers;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int currentStartRankDisplayed;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[HideInInspector]
	public bool listUpdating;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private DisplayInfinite infinite;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool isLevelScoreUI;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	private bool isMultiUI;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	private bool isInfiniteUI;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1521D30", Offset = "0x1521D30", VA = "0x1521D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1521DC0", Offset = "0x1521DC0", VA = "0x1521DC0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1522094", Offset = "0x1522094", VA = "0x1522094", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x15221F4", Offset = "0x15221F4", VA = "0x15221F4", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x15221F8", Offset = "0x15221F8", VA = "0x15221F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1522398", Offset = "0x1522398", VA = "0x1522398")]
	public void RankInfoUpdated(int rank, int numberOfPlayers)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1522950", Offset = "0x1522950", VA = "0x1522950")]
	private void PlatformLeaderboardUpdated(string leaderboardName)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1522DE8", Offset = "0x1522DE8", VA = "0x1522DE8")]
	public void LeaderboardUpdated(VoxelStoreGameSessionDatabase.LeaderboardInfo[] scores)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1522E50", Offset = "0x1522E50", VA = "0x1522E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37A4C", Offset = "0xF37A4C")]
	private IEnumerator AddElementsInLeaderboard(VoxelStoreGameSessionDatabase.LeaderboardInfo[] scores)
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1522674", Offset = "0x1522674", VA = "0x1522674")]
	private void AskLeaderboard(int fromRank = -1, int nbData = -1)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x15230FC", Offset = "0x15230FC", VA = "0x15230FC", Slot = "7")]
	protected virtual void RequestLeaderboardFromWebServer(int minRank, int nbData)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x15234E0", Offset = "0x15234E0", VA = "0x15234E0", Slot = "8")]
	public virtual void AskScore()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x152384C", Offset = "0x152384C", VA = "0x152384C")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x15238F0", Offset = "0x15238F0", VA = "0x15238F0")]
	public void PreviousLevel()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1523998", Offset = "0x1523998", VA = "0x1523998")]
	public void ToggleTotalLevel()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1523A7C", Offset = "0x1523A7C", VA = "0x1523A7C")]
	public void ToggleSoloMulti()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1523A8C", Offset = "0x1523A8C", VA = "0x1523A8C")]
	public void ToggleTimedInfinite()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1523A9C", Offset = "0x1523A9C", VA = "0x1523A9C")]
	public void ToggleFriends()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1523AC0", Offset = "0x1523AC0", VA = "0x1523AC0")]
	public void ToggleTop()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1523AE4", Offset = "0x1523AE4", VA = "0x1523AE4")]
	public void ToggleMyScore()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1523B08", Offset = "0x1523B08", VA = "0x1523B08")]
	public void ChangeRestaurant()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x15239A8", Offset = "0x15239A8", VA = "0x15239A8")]
	public void UpdateScoreFilter()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1523BB8", Offset = "0x1523BB8", VA = "0x1523BB8")]
	public void LoadMore(int way)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x152211C", Offset = "0x152211C", VA = "0x152211C")]
	protected void UpdateCurrentLevelDisplay()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1523BD4", Offset = "0x1523BD4", VA = "0x1523BD4", Slot = "9")]
	protected virtual void UpdateButtons()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1523DA4", Offset = "0x1523DA4", VA = "0x1523DA4")]
	private void RemoveRows(int nbRowsFromStart, int nbRowsFromEnd)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1522870", Offset = "0x1522870", VA = "0x1522870")]
	private void ClearLeaderboard()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1522EF8", Offset = "0x1522EF8", VA = "0x1522EF8")]
	public static string GetPlatformLeaderboardNameForCurrentDisplay(ScoreType type, string gameType, int level)
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1523F7C", Offset = "0x1523F7C", VA = "0x1523F7C")]
	public static string GetPlatformLeaderboardNameFromCurrentGameMode()
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1524224", Offset = "0x1524224", VA = "0x1524224")]
	public static string GetPlatformLeaderboardNameForGlobalScore()
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x152426C", Offset = "0x152426C", VA = "0x152426C")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x2000133")]
public class LeaderboardRow : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI rank;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI score;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image background;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image platformIcon;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite oculusLogo;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite steamLogo;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite picoLogo;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1524984", Offset = "0x1524984", VA = "0x1524984")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1524988", Offset = "0x1524988", VA = "0x1524988")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x15248B0", Offset = "0x15248B0", VA = "0x15248B0")]
	public void SetPlatform(VoxelStoreGameSessionDatabase.Platform type)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x152498C", Offset = "0x152498C", VA = "0x152498C")]
	public LeaderboardRow()
	{
	}
}
[Token(Token = "0x2000134")]
public class LeaderboardWeekly : Leaderboard
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LevelManager.RestaurantType currentRestaurant;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public LoopableSelectionSlider selectedWeek;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1524994", Offset = "0x1524994", VA = "0x1524994")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1524998", Offset = "0x1524998", VA = "0x1524998", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x152499C", Offset = "0x152499C", VA = "0x152499C")]
	public void Init()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1524B90", Offset = "0x1524B90", VA = "0x1524B90", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1524B94", Offset = "0x1524B94", VA = "0x1524B94")]
	public void UpdateWeekPicked()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1524D24", Offset = "0x1524D24", VA = "0x1524D24", Slot = "7")]
	protected override void RequestLeaderboardFromWebServer(int minRank, int nbData)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1524EA8", Offset = "0x1524EA8", VA = "0x1524EA8", Slot = "8")]
	public override void AskScore()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1525070", Offset = "0x1525070", VA = "0x1525070", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x15250B8", Offset = "0x15250B8", VA = "0x15250B8")]
	public void ReadFile()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x152523C", Offset = "0x152523C", VA = "0x152523C", Slot = "9")]
	protected override void UpdateButtons()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1525240", Offset = "0x1525240", VA = "0x1525240")]
	public LeaderboardWeekly()
	{
	}
}
[Token(Token = "0x2000135")]
public class LevelButtonUI : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E924", Offset = "0xF2E924")]
	public TextMeshProUGUI levelNameUI;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI levelIdUI;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject medal1;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject medal2;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject medal3;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject locked;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isUnlocked;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LevelSelector selector;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string levelName;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int levelId;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int levelListIndex;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int score;

	[Token(Token = "0x170000B1")]
	public string LevelName
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1525F30", Offset = "0x1525F30", VA = "0x1525F30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1525F38", Offset = "0x1525F38", VA = "0x1525F38")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int Score
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1525F40", Offset = "0x1525F40", VA = "0x1525F40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1525F48", Offset = "0x1525F48", VA = "0x1525F48")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int LevelId
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1525F50", Offset = "0x1525F50", VA = "0x1525F50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1525F58", Offset = "0x1525F58", VA = "0x1525F58")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public int LevelListIndex
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1525F60", Offset = "0x1525F60", VA = "0x1525F60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1525F68", Offset = "0x1525F68", VA = "0x1525F68")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public LevelSelector Selector
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1525F70", Offset = "0x1525F70", VA = "0x1525F70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1525F78", Offset = "0x1525F78", VA = "0x1525F78")]
		set
		{
		}
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1525CE4", Offset = "0x1525CE4", VA = "0x1525CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1525CE8", Offset = "0x1525CE8", VA = "0x1525CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1525CEC", Offset = "0x1525CEC", VA = "0x1525CEC")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1525E5C", Offset = "0x1525E5C", VA = "0x1525E5C")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1525F80", Offset = "0x1525F80", VA = "0x1525F80")]
	public LevelButtonUI()
	{
	}
}
[Token(Token = "0x2000136")]
public class LevelDisplayUI : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI title;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI levelNameUI;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI levelDescriptionUI;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI levelScoreUI;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI playText;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject medal1;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject medal2;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject medal3;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int levelId;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1525F88", Offset = "0x1525F88", VA = "0x1525F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x15262F0", Offset = "0x15262F0", VA = "0x15262F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x15262F4", Offset = "0x15262F4", VA = "0x15262F4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x152642C", Offset = "0x152642C", VA = "0x152642C")]
	public LevelDisplayUI()
	{
	}
}
[Token(Token = "0x2000137")]
public class LevelSelector : MonoBehaviour
{
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AAF4", Offset = "0xF2AAF4")]
	private sealed class <SpawnLevelsButtons>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSelector <>4__this;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x152A044", Offset = "0x152A044", VA = "0x152A044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x152A0AC", Offset = "0x152A0AC", VA = "0x152A0AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1529C54", Offset = "0x1529C54", VA = "0x1529C54")]
		[DebuggerHidden]
		public <SpawnLevelsButtons>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1529C88", Offset = "0x1529C88", VA = "0x1529C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1529C8C", Offset = "0x1529C8C", VA = "0x1529C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x152A04C", Offset = "0x152A04C", VA = "0x152A04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager.GameMode gameMode;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject levelButtonPrefab;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelButtonUI[] levelButtons;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audio;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip spawnClip;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject playLevelPopupPrefab;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform popupBackground;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1529A58", Offset = "0x1529A58", VA = "0x1529A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1529AB0", Offset = "0x1529AB0", VA = "0x1529AB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1529C4C", Offset = "0x1529C4C", VA = "0x1529C4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1529C50", Offset = "0x1529C50", VA = "0x1529C50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1529BDC", Offset = "0x1529BDC", VA = "0x1529BDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37B00", Offset = "0xF37B00")]
	private IEnumerator SpawnLevelsButtons()
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1525D18", Offset = "0x1525D18", VA = "0x1525D18")]
	public void SelectLevel(int listIdd)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1529C80", Offset = "0x1529C80", VA = "0x1529C80")]
	public LevelSelector()
	{
	}
}
[Token(Token = "0x2000139")]
public class MainUI : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainUI;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject infoUI;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject multiplayerUI;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle burgersToggleUI;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle dessertsToggleUI;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle kebabsToggleUI;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle multiToggleUI;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MultiplayerUI multiplayerTabUI;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MultiplayerLevelSelectionUI multiplayerLevelSelectionUI;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle timedUI;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle relaxUI;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle infiniteUI;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SwitchUI infiniteChoiceUI;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject keyboardUI;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI version;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform pickSettingsPopUpBackground;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject pickSettingsPopUpObject;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WeeklyUI weeklyUI;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x11CF654", Offset = "0x11CF654", VA = "0x11CF654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x11C7794", Offset = "0x11C7794", VA = "0x11C7794")]
	public void DisplayMainUi()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x11C8714", Offset = "0x11C8714", VA = "0x11C8714")]
	public void DisplayCreateHostUi(string error = "")
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x11CF720", Offset = "0x11CF720", VA = "0x11CF720")]
	public void DisplayJoinSessionUi(string error = "")
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x11CF76C", Offset = "0x11CF76C", VA = "0x11CF76C")]
	public void DisplayMultiplayerUi()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x11C773C", Offset = "0x11C773C", VA = "0x11C773C")]
	public void DisplayMultiSelectionLevelUi()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x11CF7D8", Offset = "0x11CF7D8", VA = "0x11CF7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x11CF9E0", Offset = "0x11CF9E0", VA = "0x11CF9E0")]
	private void ToggleLobbyRestaurant()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x11CFB38", Offset = "0x11CFB38", VA = "0x11CFB38")]
	private void Update()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x11CFB3C", Offset = "0x11CFB3C", VA = "0x11CFB3C")]
	public void ToggleBurgers()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x11CFBBC", Offset = "0x11CFBBC", VA = "0x11CFBBC")]
	public void ToggleDesserts()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x11CFC3C", Offset = "0x11CFC3C", VA = "0x11CFC3C")]
	public void ToggleKebabs()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x11CFCBC", Offset = "0x11CFCBC", VA = "0x11CFCBC")]
	public void ToggleTimed()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x11CFD40", Offset = "0x11CFD40", VA = "0x11CFD40")]
	public void ToggleRelax()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x11CFDC4", Offset = "0x11CFDC4", VA = "0x11CFDC4")]
	public void ToggleInfinite()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x11CFE5C", Offset = "0x11CFE5C", VA = "0x11CFE5C")]
	public void LaunchWeekly()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x11CFF14", Offset = "0x11CFF14", VA = "0x11CFF14")]
	public void ToggleInfiniteChoice()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x11CFF8C", Offset = "0x11CFF8C", VA = "0x11CFF8C")]
	public void LaunchLevel()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x11D003C", Offset = "0x11D003C", VA = "0x11D003C")]
	public void HideKeyboard()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x11D0048", Offset = "0x11D0048", VA = "0x11D0048")]
	public void ToggleKeyboard(bool value, float offset)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x11CF868", Offset = "0x11CF868", VA = "0x11CF868")]
	private void SpawnSettingsPopUp()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x11D0124", Offset = "0x11D0124", VA = "0x11D0124")]
	public void HideRightColumn(bool value)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x11D0148", Offset = "0x11D0148", VA = "0x11D0148")]
	public void LoadStorePage(string URL)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x11D0154", Offset = "0x11D0154", VA = "0x11D0154")]
	public MainUI()
	{
	}
}
[Token(Token = "0x200013A")]
public class MultiplayerExitUI : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI confirmationQuitText;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI levelName;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x12AA85C", Offset = "0x12AA85C", VA = "0x12AA85C")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x12AA8B8", Offset = "0x12AA8B8", VA = "0x12AA8B8")]
	private void SetLanguage()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x12AA9F0", Offset = "0x12AA9F0", VA = "0x12AA9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x12AA9F4", Offset = "0x12AA9F4", VA = "0x12AA9F4")]
	public MultiplayerExitUI()
	{
	}
}
[Token(Token = "0x200013B")]
public class MultiplayerLevelSelectionUI : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	private enum Variables
	{
		[Token(Token = "0x4000761")]
		CURRENT_LEVEL,
		[Token(Token = "0x4000762")]
		CURRENT_RESTAURANT,
		[Token(Token = "0x4000763")]
		GAME_TYPE,
		[Token(Token = "0x4000764")]
		INFINITE_DEBT
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject quitConfirmationHostPopup;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject quitConfirmationSessionPopup;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform popupBackground;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI serverNameUI;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LoopableSelectionSlider levelSliderUI;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LoopableSelectionSlider restaurantSliderUI;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchUI gameTypeSwitch;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI hostHasAuthorityText;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NetworkVariableSync syncVariables;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject playButton;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject avatarPopUp;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform avatarPopupBackground;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject avatarPopUpObject;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x12ABE44", Offset = "0x12ABE44", VA = "0x12ABE44")]
	private void Start()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x12ABF28", Offset = "0x12ABF28", VA = "0x12ABF28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x12AC984", Offset = "0x12AC984", VA = "0x12AC984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x12AC508", Offset = "0x12AC508", VA = "0x12AC508")]
	private void OnValueChange()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x12ACB18", Offset = "0x12ACB18", VA = "0x12ACB18")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x12ACC74", Offset = "0x12ACC74", VA = "0x12ACC74")]
	public void ConfirmQuit()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x12ACD54", Offset = "0x12ACD54", VA = "0x12ACD54")]
	public void Play()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x12ACDF8", Offset = "0x12ACDF8", VA = "0x12ACDF8")]
	public void ChangeLevel()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x12AC404", Offset = "0x12AC404", VA = "0x12AC404")]
	private void UpdateLevels()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x12AD2E4", Offset = "0x12AD2E4", VA = "0x12AD2E4")]
	public void ChangeGameMode()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x12AD4A8", Offset = "0x12AD4A8", VA = "0x12AD4A8")]
	public void ChangeRestaurant()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x12AD5E8", Offset = "0x12AD5E8", VA = "0x12AD5E8")]
	public void SpawnAvatarPopUp()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x12AD750", Offset = "0x12AD750", VA = "0x12AD750")]
	public MultiplayerLevelSelectionUI()
	{
	}
}
[Token(Token = "0x200013D")]
public class MultiplayerUI : MonoBehaviour
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform popupBackground;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject createHostPopupPrefab;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject joinSessionPopupPrefab;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hostButton;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject joinButton;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject choiceText;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject demoText;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buyButton;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public MainUI mainUIscript;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x12AD768", Offset = "0x12AD768", VA = "0x12AD768")]
	private void Start()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x12AD8C0", Offset = "0x12AD8C0", VA = "0x12AD8C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x12AD928", Offset = "0x12AD928", VA = "0x12AD928")]
	private void Update()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x12AD92C", Offset = "0x12AD92C", VA = "0x12AD92C")]
	public void OpenCreateHostUI(string error = "")
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x12ADAA4", Offset = "0x12ADAA4", VA = "0x12ADAA4")]
	public void OpenJoinSessionUI(string error = "")
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x12ADC1C", Offset = "0x12ADC1C", VA = "0x12ADC1C")]
	public MultiplayerUI()
	{
	}
}
[Token(Token = "0x200013E")]
public class NotificationsPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013F")]
	public class NotificationSpriteDictionnary : SerializableDictionaryBase<NotificationType, Sprite>
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x12B81CC", Offset = "0x12B81CC", VA = "0x12B81CC")]
		public NotificationSpriteDictionnary()
		{
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NotificationIcon icon;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject listParent;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject notificationPrefab;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NotificationSpriteDictionnary sprites;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle infoToggle;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Notification> currentNotifObjects;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI numberOfNotif;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject rewardPopUp;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform popupBackground;

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x12B72F0", Offset = "0x12B72F0", VA = "0x12B72F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x12B75DC", Offset = "0x12B75DC", VA = "0x12B75DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x12B7654", Offset = "0x12B7654", VA = "0x12B7654")]
	private void NotificationsReadDone(int notifId)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x12B77FC", Offset = "0x12B77FC", VA = "0x12B77FC")]
	private void ReceiveNotifications(NotificationInfo[] notifs)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x12B7800", Offset = "0x12B7800", VA = "0x12B7800")]
	private void UpdateNotificationsDisplay()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x12B7AA0", Offset = "0x12B7AA0", VA = "0x12B7AA0")]
	private void AddNotification(NotificationInfo notif)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x12B7DE4", Offset = "0x12B7DE4", VA = "0x12B7DE4")]
	private Sprite GetNotificationSprite(NotificationType type)
	{
		return null;
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x12B7E78", Offset = "0x12B7E78", VA = "0x12B7E78")]
	private string GetNotificationTitle(NotificationType type)
	{
		return null;
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x12B7F58", Offset = "0x12B7F58", VA = "0x12B7F58")]
	private string GetNotificationText(NotificationInfo notif)
	{
		return null;
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x12B80B0", Offset = "0x12B80B0", VA = "0x12B80B0")]
	public void AllRead()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x12B81A4", Offset = "0x12B81A4", VA = "0x12B81A4")]
	public void SwitchToInfoTab()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x12B7514", Offset = "0x12B7514", VA = "0x12B7514")]
	private void UpdateUnreadNumber(int value)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x12B7C24", Offset = "0x12B7C24", VA = "0x12B7C24")]
	public void SpawnRewardListingPopUp(int notifId, int amount)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x12B81C4", Offset = "0x12B81C4", VA = "0x12B81C4")]
	public NotificationsPanel()
	{
	}
}
[Token(Token = "0x2000140")]
public class PauseUI : GameStartUI
{
	[Token(Token = "0x600085F")]
	[Address(RVA = "0x13FEA64", Offset = "0x13FEA64", VA = "0x13FEA64", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x13FEA8C", Offset = "0x13FEA8C", VA = "0x13FEA8C")]
	private void SetLanguage()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x13FECD0", Offset = "0x13FECD0", VA = "0x13FECD0", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x13FECD4", Offset = "0x13FECD4", VA = "0x13FECD4")]
	public PauseUI()
	{
	}
}
[Token(Token = "0x2000141")]
public class PlayerRowInfo : MonoBehaviour
{
	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image colorImage;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new TextMeshProUGUI name;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x13FFCB8", Offset = "0x13FFCB8", VA = "0x13FFCB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x13FFCBC", Offset = "0x13FFCBC", VA = "0x13FFCBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x13FFCC0", Offset = "0x13FFCC0", VA = "0x13FFCC0")]
	public PlayerRowInfo()
	{
	}
}
[Token(Token = "0x2000142")]
public class ProfileUI : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text playerName;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text playerLevel;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SliderAnimation progressionSlider;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x11FAF54", Offset = "0x11FAF54", VA = "0x11FAF54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x11FAF58", Offset = "0x11FAF58", VA = "0x11FAF58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x11FB198", Offset = "0x11FB198", VA = "0x11FB198")]
	private void Update()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x11FB19C", Offset = "0x11FB19C", VA = "0x11FB19C")]
	public ProfileUI()
	{
	}
}
[Token(Token = "0x2000143")]
public class RewardListingUI : MonoBehaviour
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI rank;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI rewardAmount;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image icon;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x11FDBDC", Offset = "0x11FDBDC", VA = "0x11FDBDC")]
	public RewardListingUI()
	{
	}
}
[Token(Token = "0x2000144")]
public class SettingsUI : MonoBehaviour
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle seatedButton;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle standButton;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle roomScaleButton;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchUI joystickRotationButton;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchUI teleportButton;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchUI teleportFreeButton;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchUI tunnelingButton;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider angleSlider;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button seatCalibrateButton;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider globalVolumeSlider;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider musicVolumeSlider;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider chatVolumeSlider;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SwitchUI painEffectSwitch;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SwitchUI multiAcceptInvitationsSwitch;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1204C84", Offset = "0x1204C84", VA = "0x1204C84")]
	private void Start()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1204C88", Offset = "0x1204C88", VA = "0x1204C88")]
	private void Update()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1204D40", Offset = "0x1204D40", VA = "0x1204D40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1204D44", Offset = "0x1204D44", VA = "0x1204D44")]
	public void UpdateOptionDisplay()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x12050EC", Offset = "0x12050EC", VA = "0x12050EC")]
	public void UpdateOptionDisplayFromPlayerPosition()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1205214", Offset = "0x1205214", VA = "0x1205214")]
	public void SwitchTeleport()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x12053C8", Offset = "0x12053C8", VA = "0x12053C8")]
	public void SwitchTeleportFree()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x12054A8", Offset = "0x12054A8", VA = "0x12054A8")]
	public void UpdatePlayerPosition()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1205678", Offset = "0x1205678", VA = "0x1205678")]
	public void SwitchJoystickRotation()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1205780", Offset = "0x1205780", VA = "0x1205780")]
	public void UpdateJoystickRotationStep()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x12058B0", Offset = "0x12058B0", VA = "0x12058B0")]
	public void SwitchTunneling()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1205990", Offset = "0x1205990", VA = "0x1205990")]
	public void CalibrateSeatPosition()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1205A20", Offset = "0x1205A20", VA = "0x1205A20")]
	public void SetGlobalAudioVolume()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1205B40", Offset = "0x1205B40", VA = "0x1205B40")]
	public void SetMusicAudioVolume()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1205C60", Offset = "0x1205C60", VA = "0x1205C60")]
	public void SetChatAudioVolume()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1205D80", Offset = "0x1205D80", VA = "0x1205D80")]
	public void SwitchPainEffect()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1205E60", Offset = "0x1205E60", VA = "0x1205E60")]
	public void SwitchMultiNotifications()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1205F40", Offset = "0x1205F40", VA = "0x1205F40")]
	public SettingsUI()
	{
	}
}
[Token(Token = "0x2000145")]
public class SettingsUIPopUp : SettingsUI
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject positionUI;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject movementUI;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E96C", Offset = "0xF2E96C")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI positionTitle;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI positionSubtitle;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI standText;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI seatText;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshProUGUI roomScaleText;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI calibrateText;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshProUGUI standAdviceText;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI standDescriptionText;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI seatDescriptionText;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshProUGUI roomscaleAdviceText;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshProUGUI roomscaleDescriptionText;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshProUGUI confirmText;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshProUGUI moreOptionText;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E9A4", Offset = "0xF2E9A4")]
	public TextMeshProUGUI movementTitle;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshProUGUI movementSubtitle;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshProUGUI rotationText;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshProUGUI displacementText;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TextMeshProUGUI bodyText;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshProUGUI controllerText;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshProUGUI joystickText;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshProUGUI teleportText;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshProUGUI noTunnellingText;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI tunnelingText;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI pointsText;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI freeText;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshProUGUI returnText;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1205F48", Offset = "0x1205F48", VA = "0x1205F48")]
	private void Start()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x12066A0", Offset = "0x12066A0", VA = "0x12066A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1206654", Offset = "0x1206654", VA = "0x1206654")]
	public void ToggleMovementUI(bool value)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x12066A4", Offset = "0x12066A4", VA = "0x12066A4")]
	public void UpdatePlayerPref()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1206700", Offset = "0x1206700", VA = "0x1206700")]
	public void DisplayRightColumn()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x12067A0", Offset = "0x12067A0", VA = "0x12067A0")]
	public SettingsUIPopUp()
	{
	}
}
[Token(Token = "0x2000146")]
public class ShiftColorChange : MonoBehaviour
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Keyboard keyboard;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image shiftKey;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color shiftOffColor;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color shiftOnColor;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1207408", Offset = "0x1207408", VA = "0x1207408")]
	private void Start()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1207470", Offset = "0x1207470", VA = "0x1207470")]
	private void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1207538", Offset = "0x1207538", VA = "0x1207538")]
	public ShiftColorChange()
	{
	}
}
[Token(Token = "0x2000147")]
public class StoreUI : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI availableMoneyText;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x138AC4C", Offset = "0x138AC4C", VA = "0x138AC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x138AD18", Offset = "0x138AD18", VA = "0x138AD18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x138AD1C", Offset = "0x138AD1C", VA = "0x138AD1C")]
	public StoreUI()
	{
	}
}
[Token(Token = "0x2000148")]
public class TranslateSliderOptions : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LoopableSelectionSlider slider;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x14AEFFC", Offset = "0x14AEFFC", VA = "0x14AEFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x14AF344", Offset = "0x14AF344", VA = "0x14AF344")]
	private void Update()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x14AF348", Offset = "0x14AF348", VA = "0x14AF348")]
	public TranslateSliderOptions()
	{
	}
}
[Token(Token = "0x2000149")]
public class WeeklyRewardPopUpUI : MonoBehaviour
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rewardPrefab;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<int> weeklyRewards;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject listParent;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI title;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Sprite> icons;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1C20300", Offset = "0x1C20300", VA = "0x1C20300")]
	private void Start()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1C20380", Offset = "0x1C20380", VA = "0x1C20380")]
	private void Update()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1C20384", Offset = "0x1C20384", VA = "0x1C20384")]
	public void SpawnListing()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1C203F8", Offset = "0x1C203F8", VA = "0x1C203F8")]
	public void AddReward(int rank)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1C20680", Offset = "0x1C20680", VA = "0x1C20680")]
	public WeeklyRewardPopUpUI()
	{
	}
}
[Token(Token = "0x200014A")]
public class WeeklyUI : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB04", Offset = "0xF2AB04")]
	private sealed class <UpdateWeeklyInfoRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeeklyUI <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x1C22B50", Offset = "0x1C22B50", VA = "0x1C22B50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x1C22BB8", Offset = "0x1C22BB8", VA = "0x1C22BB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1C2100C", Offset = "0x1C2100C", VA = "0x1C2100C")]
		[DebuggerHidden]
		public <UpdateWeeklyInfoRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1C22854", Offset = "0x1C22854", VA = "0x1C22854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1C22858", Offset = "0x1C22858", VA = "0x1C22858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1C22B58", Offset = "0x1C22B58", VA = "0x1C22B58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB14", Offset = "0xF2AB14")]
	private sealed class <InitLeaderboardCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeeklyUI <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x1C227E4", Offset = "0x1C227E4", VA = "0x1C227E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x1C2284C", Offset = "0x1C2284C", VA = "0x1C2284C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1C21BBC", Offset = "0x1C21BBC", VA = "0x1C21BBC")]
		[DebuggerHidden]
		public <InitLeaderboardCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1C22644", Offset = "0x1C22644", VA = "0x1C22644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1C22648", Offset = "0x1C22648", VA = "0x1C22648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1C227EC", Offset = "0x1C227EC", VA = "0x1C227EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB24", Offset = "0xF2AB24")]
	private sealed class <GetPlayerRankAndNumberOfPlayersForWeeklyLevel>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeeklyUI <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x1C225D4", Offset = "0x1C225D4", VA = "0x1C225D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x1C2263C", Offset = "0x1C2263C", VA = "0x1C2263C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1C21CAC", Offset = "0x1C21CAC", VA = "0x1C21CAC")]
		[DebuggerHidden]
		public <GetPlayerRankAndNumberOfPlayersForWeeklyLevel>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1C223C0", Offset = "0x1C223C0", VA = "0x1C223C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1C223C4", Offset = "0x1C223C4", VA = "0x1C223C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1C225DC", Offset = "0x1C225DC", VA = "0x1C225DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI currentWeeklyScore;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI weeklyRanking;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI timeLeft;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle infoToggle;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeaderboardWeekly leaderboardWeekly;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LoopableSelectionSlider selectedWeek;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int selectedWeekId;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject playButton;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject noWeeklyWarning;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject loadingIcon;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initInProgress;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<int> weeklyRewards;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TextMeshProUGUI> podiumRewards;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rewardListingPopup;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform popupBackground;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject demoText;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1C20688", Offset = "0x1C20688", VA = "0x1C20688")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1C208D8", Offset = "0x1C208D8", VA = "0x1C208D8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1C20EC0", Offset = "0x1C20EC0", VA = "0x1C20EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1C20F70", Offset = "0x1C20F70", VA = "0x1C20F70")]
	public void UpdateWeeklyInfo(VoxelStoreGameSessionDatabase.WeeklyInfo weeklyInfo, int weekOffset)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1C20F9C", Offset = "0x1C20F9C", VA = "0x1C20F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37BB4", Offset = "0xF37BB4")]
	private IEnumerator UpdateWeeklyInfoRoutine(VoxelStoreGameSessionDatabase.WeeklyInfo weeklyInfo, int weekOffset)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1C21038", Offset = "0x1C21038", VA = "0x1C21038")]
	public void GetWeeklyScore(int score)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1C21098", Offset = "0x1C21098", VA = "0x1C21098")]
	public void UpdateWeeklyError(int weekOffset)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1C20CD0", Offset = "0x1C20CD0", VA = "0x1C20CD0")]
	public void InitWeekSelection()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1C21A54", Offset = "0x1C21A54", VA = "0x1C21A54")]
	public void RankInfoUpdated(int rank, int numberOfPlayers)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1C21B4C", Offset = "0x1C21B4C", VA = "0x1C21B4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37C18", Offset = "0xF37C18")]
	private IEnumerator InitLeaderboardCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1C21BE8", Offset = "0x1C21BE8", VA = "0x1C21BE8")]
	private void RequestWeeklyScore()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1C21C3C", Offset = "0x1C21C3C", VA = "0x1C21C3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37C7C", Offset = "0xF37C7C")]
	private IEnumerator GetPlayerRankAndNumberOfPlayersForWeeklyLevel()
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1C215D8", Offset = "0x1C215D8", VA = "0x1C215D8")]
	public void ChangeWeek()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1C212EC", Offset = "0x1C212EC", VA = "0x1C212EC")]
	private void RequestTimeLeft()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1C21CD8", Offset = "0x1C21CD8", VA = "0x1C21CD8")]
	private void UpdateTimeLeft()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1C21348", Offset = "0x1C21348", VA = "0x1C21348")]
	private void GetRewards(int week)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1C22140", Offset = "0x1C22140", VA = "0x1C22140")]
	private void DisplayPodiumRewards()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1C22248", Offset = "0x1C22248", VA = "0x1C22248")]
	public void SpawnRewardListingPopUp()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1C223B8", Offset = "0x1C223B8", VA = "0x1C223B8")]
	public WeeklyUI()
	{
	}
}
[Token(Token = "0x200014E")]
public class FlashingLight : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Lit;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material unLitMat;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material LitMat;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer rend;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startTime;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x135EC18", Offset = "0x135EC18", VA = "0x135EC18")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x135ED08", Offset = "0x135ED08", VA = "0x135ED08")]
	private void StartAnimation()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x135ED0C", Offset = "0x135ED0C", VA = "0x135ED0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x135ED6C", Offset = "0x135ED6C", VA = "0x135ED6C")]
	public FlashingLight()
	{
	}
}
[Token(Token = "0x200014F")]
public class LedSign : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB34", Offset = "0xF2AB34")]
	private sealed class <MoveLedTextRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LedSign <>4__this;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <widthText>5__2;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <nbText>5__3;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x15259F8", Offset = "0x15259F8", VA = "0x15259F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x1525A60", Offset = "0x1525A60", VA = "0x1525A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x15255FC", Offset = "0x15255FC", VA = "0x15255FC")]
		[DebuggerHidden]
		public <MoveLedTextRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1525644", Offset = "0x1525644", VA = "0x1525644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1525648", Offset = "0x1525648", VA = "0x1525648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1525A00", Offset = "0x1525A00", VA = "0x1525A00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parentPanel;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ledSignePrefab;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int panelPixelSize;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2E9EC", Offset = "0xF2E9EC")]
	public float ledSize;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeBetweenLedChange;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float textSpace;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool stop;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<TextMeshProUGUI> textMeshes;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RectTransform> textRTs;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string text;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1525244", Offset = "0x1525244", VA = "0x1525244")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1525384", Offset = "0x1525384", VA = "0x1525384")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1525388", Offset = "0x1525388", VA = "0x1525388")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1525394", Offset = "0x1525394", VA = "0x1525394")]
	public void Init(string textToDisplay)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x15254B4", Offset = "0x15254B4", VA = "0x15254B4")]
	private void AddText(int position, float widthText)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1525444", Offset = "0x1525444", VA = "0x1525444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37DD0", Offset = "0xF37DD0")]
	private IEnumerator MoveLedTextRoutine()
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1525628", Offset = "0x1525628", VA = "0x1525628")]
	public LedSign()
	{
	}
}
[Token(Token = "0x2000151")]
[ExecuteInEditMode]
public class Lighting : MonoBehaviour
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color dayAmbiantColor;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color nightAmbiantColor;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool setNightDebug;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool setDayDebug;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool setLobbyDebug;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ReflectionProbe[] reflectionProbes;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x11C6774", Offset = "0x11C6774", VA = "0x11C6774")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x11C68DC", Offset = "0x11C68DC", VA = "0x11C68DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x11C693C", Offset = "0x11C693C", VA = "0x11C693C")]
	public void SetNight()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x11C67EC", Offset = "0x11C67EC", VA = "0x11C67EC")]
	public void SetDay()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x11C6A30", Offset = "0x11C6A30", VA = "0x11C6A30")]
	public void SetLobby()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x11C6B20", Offset = "0x11C6B20", VA = "0x11C6B20")]
	public Lighting()
	{
	}
}
[Token(Token = "0x2000152")]
public class PlayParticle : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particle;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource particleAudio;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x13FF578", Offset = "0x13FF578", VA = "0x13FF578")]
	public void Play()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x13FF61C", Offset = "0x13FF61C", VA = "0x13FF61C")]
	public PlayParticle()
	{
	}
}
[Token(Token = "0x2000153")]
public class RandomIdle : StateMachineBehaviour
{
	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x11FC034", Offset = "0x11FC034", VA = "0x11FC034", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x11FC0A4", Offset = "0x11FC0A4", VA = "0x11FC0A4")]
	public RandomIdle()
	{
	}
}
[Token(Token = "0x2000154")]
[ExecuteInEditMode]
public class RandomPhotoSize : MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] photoList;

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x11FC11C", Offset = "0x11FC11C", VA = "0x11FC11C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x11FC120", Offset = "0x11FC120", VA = "0x11FC120")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x11FC124", Offset = "0x11FC124", VA = "0x11FC124")]
	public RandomPhotoSize()
	{
	}
}
[Token(Token = "0x2000155")]
public class RandomSpeed : StateMachineBehaviour
{
	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x11FC2C0", Offset = "0x11FC2C0", VA = "0x11FC2C0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x11FC304", Offset = "0x11FC304", VA = "0x11FC304")]
	public RandomSpeed()
	{
	}
}
[Token(Token = "0x2000156")]
public class Sign : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] rends;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] texts;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] qiyuTexts;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] picoTexts;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material soloSignsMaterial;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material soloQiyuSignsMaterial;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material soloPicoSignsMaterial;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material multiplayerSignsMaterial;

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1207540", Offset = "0x1207540", VA = "0x1207540")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1207868", Offset = "0x1207868", VA = "0x1207868")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x120786C", Offset = "0x120786C", VA = "0x120786C")]
	public Sign()
	{
	}
}
[Token(Token = "0x2000157")]
public class DrinkContainer : MonoBehaviour
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject liquid;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject liquidMesh;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particles;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sloshSpeed;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int rotateSpeed;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 filledAltitude;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 filledScale;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startFillingTime;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentAtStartFilling;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 emptyScale;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 liquidStartPosition;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float filledPercent;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string content;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float deliveryTime;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer styleRenderer;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material dinerMat;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material dessertMat;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int difference;

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x135AEEC", Offset = "0x135AEEC", VA = "0x135AEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x135B0DC", Offset = "0x135B0DC", VA = "0x135B0DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x135B1CC", Offset = "0x135B1CC", VA = "0x135B1CC")]
	private void Slosh()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x135B4CC", Offset = "0x135B4CC", VA = "0x135B4CC")]
	private float ClampRotationValue(float value, float difference)
	{
		return default(float);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x135B380", Offset = "0x135B380", VA = "0x135B380")]
	private void UpdateFilling()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x135B57C", Offset = "0x135B57C", VA = "0x135B57C")]
	public void StartFill(Material mat, float deliverTime, string dringType, bool useParticles)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x135B6B8", Offset = "0x135B6B8", VA = "0x135B6B8")]
	private void StartParticles()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x135B6D4", Offset = "0x135B6D4", VA = "0x135B6D4")]
	public void Fill()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x135B720", Offset = "0x135B720", VA = "0x135B720")]
	public DrinkContainer()
	{
	}
}
[Token(Token = "0x2000158")]
public class DrinkStream : MonoBehaviour
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer mesh;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filledString;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useParticles;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DrinkContainer container;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material containerMat;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float streamSize;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float deliverTime;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x135B744", Offset = "0x135B744", VA = "0x135B744")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x135B76C", Offset = "0x135B76C", VA = "0x135B76C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x135B774", Offset = "0x135B774", VA = "0x135B774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x135B77C", Offset = "0x135B77C", VA = "0x135B77C")]
	public void InitStream(Material mat, bool particles)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x135B7FC", Offset = "0x135B7FC", VA = "0x135B7FC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x135BC00", Offset = "0x135BC00", VA = "0x135BC00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x135B93C", Offset = "0x135B93C", VA = "0x135B93C")]
	private float ComputeStreamHeight(Collider collid)
	{
		return default(float);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x135BB0C", Offset = "0x135BB0C", VA = "0x135BB0C")]
	private void UpdateStream(float newHeight)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x135BCB0", Offset = "0x135BCB0", VA = "0x135BCB0")]
	public DrinkStream()
	{
	}
}
[Token(Token = "0x2000159")]
public class SynthesisArcadeObject : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB64", Offset = "0xF2AB64")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynthesisArcadeObject <>4__this;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArcadeInterface svrInterface;

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x138BC68", Offset = "0x138BC68", VA = "0x138BC68")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x138BC70", Offset = "0x138BC70", VA = "0x138BC70")]
		internal void <EnableLicensingCheckTask>b__0()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AB74", Offset = "0xF2AB74")]
	private sealed class <EnableLicensingCheckTask>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SynthesisArcadeObject <>4__this;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass9_0 <>8__1;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x138C118", Offset = "0x138C118", VA = "0x138C118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x138C180", Offset = "0x138C180", VA = "0x138C180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x138BBC4", Offset = "0x138BBC4", VA = "0x138BBC4")]
		[DebuggerHidden]
		public <EnableLicensingCheckTask>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x138BDEC", Offset = "0x138BDEC", VA = "0x138BDEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x138BDF0", Offset = "0x138BDF0", VA = "0x138BDF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x138C120", Offset = "0x138C120", VA = "0x138C120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SynthesisArcadeObject _instance;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine co;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string synthesisGameId;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool synthesisCdnBuild;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool winServerForAndroid;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> IPAddresses;

	[Token(Token = "0x170000C0")]
	public static SynthesisArcadeObject Instance
	{
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x138B438", Offset = "0x138B438", VA = "0x138B438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x138B488", Offset = "0x138B488", VA = "0x138B488")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x138BB54", Offset = "0x138BB54", VA = "0x138BB54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37E84", Offset = "0xF37E84")]
	private IEnumerator EnableLicensingCheckTask()
	{
		return null;
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x138B810", Offset = "0x138B810", VA = "0x138B810")]
	protected string filehash(string fileName)
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x138BBF0", Offset = "0x138BBF0", VA = "0x138BBF0")]
	public SynthesisArcadeObject()
	{
	}
}
[Token(Token = "0x200015C")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x11FC0AC", Offset = "0x11FC0AC", VA = "0x11FC0AC")]
	public void Start()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x11FC0B0", Offset = "0x11FC0B0", VA = "0x11FC0B0")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x11FC114", Offset = "0x11FC114", VA = "0x11FC114")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x200015D")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x17314CC", Offset = "0x17314CC", VA = "0x17314CC")]
	public void Start()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x17315B4", Offset = "0x17315B4", VA = "0x17315B4")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x17315EC", Offset = "0x17315EC", VA = "0x17315EC")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1731738", Offset = "0x1731738", VA = "0x1731738")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1731884", Offset = "0x1731884", VA = "0x1731884")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x200015E")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x11CCA9C", Offset = "0x11CCA9C", VA = "0x11CCA9C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x11CCB88", Offset = "0x11CCB88", VA = "0x11CCB88")]
	public void Update()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x11CCB38", Offset = "0x11CCB38", VA = "0x11CCB38")]
	public void LookCam()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x11CCB98", Offset = "0x11CCB98", VA = "0x11CCB98")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2AB84", Offset = "0xF2AB84")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1380870", Offset = "0x1380870", VA = "0x1380870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1380C28", Offset = "0x1380C28", VA = "0x1380C28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1380874", Offset = "0x1380874", VA = "0x1380874")]
	public void Init()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1380C2C", Offset = "0x1380C2C", VA = "0x1380C2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1381164", Offset = "0x1381164", VA = "0x1381164")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1381214", Offset = "0x1381214", VA = "0x1381214")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000160")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x135ED74", Offset = "0x135ED74", VA = "0x135ED74")]
	public void Start()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x135F4BC", Offset = "0x135F4BC", VA = "0x135F4BC")]
	public void Update()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x135FC90", Offset = "0x135FC90", VA = "0x135FC90")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x135FCD0", Offset = "0x135FCD0", VA = "0x135FCD0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x135EEA0", Offset = "0x135EEA0", VA = "0x135EEA0")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x135F1E8", Offset = "0x135F1E8", VA = "0x135F1E8")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x135F45C", Offset = "0x135F45C", VA = "0x135F45C")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x135F084", Offset = "0x135F084", VA = "0x135F084")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x135F528", Offset = "0x135F528", VA = "0x135F528")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x135F58C", Offset = "0x135F58C", VA = "0x135F58C")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x135F6CC", Offset = "0x135F6CC", VA = "0x135F6CC")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x135FFD0", Offset = "0x135FFD0", VA = "0x135FFD0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x135FA68", Offset = "0x135FA68", VA = "0x135FA68")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x135EFD4", Offset = "0x135EFD4", VA = "0x135EFD4")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x13605D8", Offset = "0x13605D8", VA = "0x13605D8")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x135FD80", Offset = "0x135FD80", VA = "0x135FD80")]
	public void Flap()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x135F0F8", Offset = "0x135F0F8", VA = "0x135F0F8")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x13606A0", Offset = "0x13606A0", VA = "0x13606A0")]
	public void Soar()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1360738", Offset = "0x1360738", VA = "0x1360738")]
	public void Dive()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1360A2C", Offset = "0x1360A2C", VA = "0x1360A2C")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1360CE0", Offset = "0x1360CE0", VA = "0x1360CE0")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2ABBC", Offset = "0xF2ABBC")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1360D08", Offset = "0x1360D08", VA = "0x1360D08")]
	public void Start()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1360DE0", Offset = "0x1360DE0", VA = "0x1360DE0")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1360FFC", Offset = "0x1360FFC", VA = "0x1360FFC")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x136110C", Offset = "0x136110C", VA = "0x136110C")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000162")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1361130", Offset = "0x1361130", VA = "0x1361130")]
	public void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1361280", Offset = "0x1361280", VA = "0x1361280")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x13614C0", Offset = "0x13614C0", VA = "0x13614C0")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1361520", Offset = "0x1361520", VA = "0x1361520")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x136163C", Offset = "0x136163C", VA = "0x136163C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1361380", Offset = "0x1361380", VA = "0x1361380")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x13616AC", Offset = "0x13616AC", VA = "0x13616AC")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1361744", Offset = "0x1361744", VA = "0x1361744")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x135FE58", Offset = "0x135FE58", VA = "0x135FE58")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1361A14", Offset = "0x1361A14", VA = "0x1361A14")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1361AF4", Offset = "0x1361AF4", VA = "0x1361AF4")]
	public FlockController()
	{
	}
}
[Token(Token = "0x2000163")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1361C0C", Offset = "0x1361C0C", VA = "0x1361C0C")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1361CE8", Offset = "0x1361CE8", VA = "0x1361CE8")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1361D98", Offset = "0x1361D98", VA = "0x1361D98")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1361F34", Offset = "0x1361F34", VA = "0x1361F34")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1361FCC", Offset = "0x1361FCC", VA = "0x1361FCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1362048", Offset = "0x1362048", VA = "0x1362048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x136209C", Offset = "0x136209C", VA = "0x136209C")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x2000164")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x13620B4", Offset = "0x13620B4", VA = "0x13620B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x136218C", Offset = "0x136218C", VA = "0x136218C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x13621A8", Offset = "0x13621A8", VA = "0x13621A8")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x2000165")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x151E978", Offset = "0x151E978", VA = "0x151E978")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x151EEF8", Offset = "0x151EEF8", VA = "0x151EEF8")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x2000166")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AC20", Offset = "0xF2AC20")]
	private sealed class <GetFlockChild>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x1520BAC", Offset = "0x1520BAC", VA = "0x1520BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x1520C14", Offset = "0x1520C14", VA = "0x1520C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x151FE4C", Offset = "0x151FE4C", VA = "0x151FE4C")]
		[DebuggerHidden]
		public <GetFlockChild>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x152051C", Offset = "0x152051C", VA = "0x152051C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1520520", Offset = "0x1520520", VA = "0x1520520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1520BB4", Offset = "0x1520BB4", VA = "0x1520BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoScare;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x151EF08", Offset = "0x151EF08", VA = "0x151EF08")]
	public void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x151F0BC", Offset = "0x151F0BC", VA = "0x151F0BC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x151F4BC", Offset = "0x151F4BC", VA = "0x151F4BC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x151FDD0", Offset = "0x151FDD0", VA = "0x151FDD0")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x151FC24", Offset = "0x151FC24", VA = "0x151FC24")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x151F038", Offset = "0x151F038", VA = "0x151F038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37F38", Offset = "0xF37F38")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x151FE78", Offset = "0x151FE78", VA = "0x151FE78")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x15201CC", Offset = "0x15201CC", VA = "0x15201CC")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x15204B8", Offset = "0x15204B8", VA = "0x15204B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1520514", Offset = "0x1520514", VA = "0x1520514")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x2000168")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AC30", Offset = "0xF2AC30")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x152142C", Offset = "0x152142C", VA = "0x152142C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1521494", Offset = "0x1521494", VA = "0x1521494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1520FC0", Offset = "0x1520FC0", VA = "0x1520FC0")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x15212B8", Offset = "0x15212B8", VA = "0x15212B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x15212BC", Offset = "0x15212BC", VA = "0x15212BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1521434", Offset = "0x1521434", VA = "0x1521434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AC40", Offset = "0xF2AC40")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x1521248", Offset = "0x1521248", VA = "0x1521248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x15212B0", Offset = "0x15212B0", VA = "0x15212B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1520FEC", Offset = "0x1520FEC", VA = "0x1520FEC")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x15210D4", Offset = "0x15210D4", VA = "0x15210D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x15210D8", Offset = "0x15210D8", VA = "0x15210D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1521250", Offset = "0x1521250", VA = "0x1521250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1520C1C", Offset = "0x1520C1C", VA = "0x1520C1C")]
	public void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x151ED40", Offset = "0x151ED40", VA = "0x151ED40")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1520E80", Offset = "0x1520E80", VA = "0x1520E80")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x151ED4C", Offset = "0x151ED4C", VA = "0x151ED4C")]
	public void LandAll()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1520E00", Offset = "0x1520E00", VA = "0x1520E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF37FEC", Offset = "0xF37FEC")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x151EE78", Offset = "0x151EE78", VA = "0x151EE78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38050", Offset = "0xF38050")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1521018", Offset = "0x1521018", VA = "0x1521018")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x200016B")]
public class SpinPlanet : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x13859D0", Offset = "0x13859D0", VA = "0x13859D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1385A94", Offset = "0x1385A94", VA = "0x1385A94")]
	public SpinPlanet()
	{
	}
}
[Token(Token = "0x200016C")]
public class ModifySkyAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2EB34", Offset = "0xF2EB34")]
	public float speed;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x12A707C", Offset = "0x12A707C", VA = "0x12A707C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x12A720C", Offset = "0x12A720C", VA = "0x12A720C")]
	public ModifySkyAtRuntime()
	{
	}
}
[Token(Token = "0x200016D")]
public abstract class BaseStarDataRenderer
{
	[Token(Token = "0x200016E")]
	public delegate void StarDataProgress(BaseStarDataRenderer renderer, float progress);

	[Token(Token = "0x200016F")]
	public delegate void StarDataComplete(BaseStarDataRenderer renderer, Texture2D texture, bool success);

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float density;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float imageSize;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string layerId;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxRadius;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float sphereRadius;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool isCancelled;

	[Token(Token = "0x14000001")]
	public event StarDataProgress progressCallback
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x12F35D4", Offset = "0x12F35D4", VA = "0x12F35D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38154", Offset = "0xF38154")]
		add
		{
		}
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x12F3678", Offset = "0x12F3678", VA = "0x12F3678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38164", Offset = "0xF38164")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event StarDataComplete completionCallback
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x12F371C", Offset = "0x12F371C", VA = "0x12F371C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38174", Offset = "0xF38174")]
		add
		{
		}
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x12F37C0", Offset = "0x12F37C0", VA = "0x12F37C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38184", Offset = "0xF38184")]
		remove
		{
		}
	}

	[Token(Token = "0x6000966")]
	public abstract IEnumerator ComputeStarData();

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x12F3864", Offset = "0x12F3864", VA = "0x12F3864", Slot = "5")]
	public virtual void Cancel()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x12F386C", Offset = "0x12F386C", VA = "0x12F386C")]
	protected void SendProgress(float progress)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x12F3C80", Offset = "0x12F3C80", VA = "0x12F3C80")]
	protected void SendCompletion(Texture2D texture, bool success)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x12F40B4", Offset = "0x12F40B4", VA = "0x12F40B4")]
	protected BaseStarDataRenderer()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2AC50", Offset = "0xF2AC50")]
public class InformationNote : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isReady;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TextInfo;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string spaceMessage;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1376260", Offset = "0x1376260", VA = "0x1376260")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x137626C", Offset = "0x137626C", VA = "0x137626C")]
	public void SwitchToggle()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x137627C", Offset = "0x137627C", VA = "0x137627C")]
	public InformationNote()
	{
	}
}
[Token(Token = "0x2000171")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController controller;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float turnSpeed;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gravity;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x13FF624", Offset = "0x13FF624", VA = "0x13FF624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x13FF6A4", Offset = "0x13FF6A4", VA = "0x13FF6A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x13FF8AC", Offset = "0x13FF8AC", VA = "0x13FF8AC")]
	public Player()
	{
	}
}
[Token(Token = "0x2000172")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x40008D5")]
	private const float Y_ANGLE_MIN = 0f;

	[Token(Token = "0x40008D6")]
	private const float Y_ANGLE_MAX = 50f;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lookAt;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camTransform;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentX;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentY;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float sensitivityX;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sensitivityY;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x14AD8D4", Offset = "0x14AD8D4", VA = "0x14AD8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x14AD8FC", Offset = "0x14AD8FC", VA = "0x14AD8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x14AD9C0", Offset = "0x14AD9C0", VA = "0x14AD9C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x14ADB58", Offset = "0x14ADB58", VA = "0x14ADB58")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x2000173")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x12F2DD4", Offset = "0x12F2DD4", VA = "0x12F2DD4")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x12F2E50", Offset = "0x12F2E50", VA = "0x12F2E50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x12F3394", Offset = "0x12F3394", VA = "0x12F3394")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x12F356C", Offset = "0x12F356C", VA = "0x12F356C")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000174")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000981")]
	[Address(RVA = "0x11CCCAC", Offset = "0x11CCCAC", VA = "0x11CCCAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x11CCD84", Offset = "0x11CCD84", VA = "0x11CCD84")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000175")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x11CEA30", Offset = "0x11CEA30", VA = "0x11CEA30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x11CEB7C", Offset = "0x11CEB7C", VA = "0x11CEB7C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x11CEDD0", Offset = "0x11CEDD0", VA = "0x11CEDD0")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x11CF25C", Offset = "0x11CF25C", VA = "0x11CF25C")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000176")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000987")]
	[Address(RVA = "0x11CDA08", Offset = "0x11CDA08", VA = "0x11CDA08")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x11CDAE0", Offset = "0x11CDAE0", VA = "0x11CDAE0")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000177")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AC88", Offset = "0xF2AC88")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x11CD5EC", Offset = "0x11CD5EC", VA = "0x11CD5EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x11CD654", Offset = "0x11CD654", VA = "0x11CD654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x11CD310", Offset = "0x11CD310", VA = "0x11CD310")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x11CD484", Offset = "0x11CD484", VA = "0x11CD484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x11CD488", Offset = "0x11CD488", VA = "0x11CD488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x11CD5F4", Offset = "0x11CD5F4", VA = "0x11CD5F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x11CCD8C", Offset = "0x11CCD8C", VA = "0x11CCD8C")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x11CCE70", Offset = "0x11CCE70", VA = "0x11CCE70")]
	private void Start()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x11CD2A0", Offset = "0x11CD2A0", VA = "0x11CD2A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38194", Offset = "0xF38194")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x11CD33C", Offset = "0x11CD33C", VA = "0x11CD33C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x11CD414", Offset = "0x11CD414", VA = "0x11CD414")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000179")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x11CD65C", Offset = "0x11CD65C", VA = "0x11CD65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x11CD6B8", Offset = "0x11CD6B8", VA = "0x11CD6B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x11CD744", Offset = "0x11CD744", VA = "0x11CD744")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x11CD81C", Offset = "0x11CD81C", VA = "0x11CD81C")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x200017A")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x11CD824", Offset = "0x11CD824", VA = "0x11CD824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x11CD918", Offset = "0x11CD918", VA = "0x11CD918")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200017B")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x600099A")]
	[Address(RVA = "0x11CD920", Offset = "0x11CD920", VA = "0x11CD920")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x11CD9F8", Offset = "0x11CD9F8", VA = "0x11CD9F8")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x200017C")]
[ExecuteInEditMode]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x600099C")]
	[Address(RVA = "0x11CDA00", Offset = "0x11CDA00", VA = "0x11CDA00")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x200017D")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x11CDAE8", Offset = "0x11CDAE8", VA = "0x11CDAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x11CDCD4", Offset = "0x11CDCD4", VA = "0x11CDCD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x11CE90C", Offset = "0x11CE90C", VA = "0x11CE90C")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x11CEA28", Offset = "0x11CEA28", VA = "0x11CEA28")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x200017E")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x11CF264", Offset = "0x11CF264", VA = "0x11CF264")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x11CF33C", Offset = "0x11CF33C", VA = "0x11CF33C")]
	public void Start()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x11CF3E4", Offset = "0x11CF3E4", VA = "0x11CF3E4")]
	public void Update()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x11CF64C", Offset = "0x11CF64C", VA = "0x11CF64C")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x200017F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xF2ACA8", Offset = "0xF2ACA8")]
public class FastList<T>
{
	[Token(Token = "0x2000180")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2ACE0", Offset = "0xF2ACE0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000CD")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60009C6")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C3")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60009C4")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C5")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C7")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000CB")]
	public int Count
	{
		[Token(Token = "0x60009A7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public T Item
	{
		[Token(Token = "0x60009A9")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60009AA")]
		set
		{
		}
	}

	[Token(Token = "0x60009A5")]
	public FastList()
	{
	}

	[Token(Token = "0x60009A6")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60009AB")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60009AC")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60009AD")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60009AE")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60009AF")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B0")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60009B1")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60009B3")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B4")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60009B5")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60009B6")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60009B7")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60009B8")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60009B9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38248", Offset = "0xF38248")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60009BB")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60009BC")]
	private void Trim()
	{
	}

	[Token(Token = "0x60009BD")]
	public void Clear()
	{
	}

	[Token(Token = "0x60009BE")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000182")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1376318", Offset = "0x1376318", VA = "0x1376318")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000183")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x13762EC", Offset = "0x13762EC", VA = "0x13762EC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000184")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x13F9114", Offset = "0x13F9114", VA = "0x13F9114")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x13F9280", Offset = "0x13F9280", VA = "0x13F9280")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x13F9624", Offset = "0x13F9624", VA = "0x13F9624")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x13F987C", Offset = "0x13F987C", VA = "0x13F987C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x13F98A8", Offset = "0x13F98A8", VA = "0x13F98A8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000185")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x11FAD54", Offset = "0x11FAD54", VA = "0x11FAD54")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x11FADE0", Offset = "0x11FADE0", VA = "0x11FADE0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x11FAF4C", Offset = "0x11FAF4C", VA = "0x11FAF4C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000186")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x170000CF")]
	public bool IsVisible
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x14629FC", Offset = "0x14629FC", VA = "0x14629FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1462A04", Offset = "0x1462A04", VA = "0x1462A04")]
		set
		{
		}
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1462B2C", Offset = "0x1462B2C", VA = "0x1462B2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1462D48", Offset = "0x1462D48", VA = "0x1462D48")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1462D50", Offset = "0x1462D50", VA = "0x1462D50")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000187")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x11FD940", Offset = "0x11FD940", VA = "0x11FD940")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000189")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2EB7C", Offset = "0xF2EB7C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2EB94", Offset = "0xF2EB94")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2EBAC", Offset = "0xF2EBAC")]
		public float LatencyWeight;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2EBC4", Offset = "0xF2EBC4")]
		public int MaxSamples;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x11FD948", Offset = "0x11FD948", VA = "0x11FD948")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x11FDAE0", Offset = "0x11FDAE0", VA = "0x11FDAE0")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x11FCFE0", Offset = "0x11FCFE0", VA = "0x11FCFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x11FD104", Offset = "0x11FD104", VA = "0x11FD104")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x11FD468", Offset = "0x11FD468", VA = "0x11FD468")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x11FD3CC", Offset = "0x11FD3CC", VA = "0x11FD3CC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x11FD6C4", Offset = "0x11FD6C4", VA = "0x11FD6C4")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x11FDA54", Offset = "0x11FDA54", VA = "0x11FDA54")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200018A")]
public class P2PManager
{
	[Token(Token = "0x200018B")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400091B")]
		Update = 1
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x13FA7E4", Offset = "0x13FA7E4", VA = "0x13FA7E4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x13FA8A4", Offset = "0x13FA8A4", VA = "0x13FA8A4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x13FA988", Offset = "0x13FA988", VA = "0x13FA988")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x13FAA0C", Offset = "0x13FAA0C", VA = "0x13FAA0C")]
	private void PeerConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x13FAB68", Offset = "0x13FAB68", VA = "0x13FAB68")]
	private void ConnectionStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x13FAE18", Offset = "0x13FAE18", VA = "0x13FAE18")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x13FB20C", Offset = "0x13FB20C", VA = "0x13FB20C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x13FB4B0", Offset = "0x13FB4B0", VA = "0x13FB4B0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x13FAFDC", Offset = "0x13FAFDC", VA = "0x13FAFDC")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x13FB3E0", Offset = "0x13FB3E0", VA = "0x13FB3E0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x13FB0C4", Offset = "0x13FB0C4", VA = "0x13FB0C4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x13FB6C8", Offset = "0x13FB6C8", VA = "0x13FB6C8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x13FB024", Offset = "0x13FB024", VA = "0x13FB024")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x13FB424", Offset = "0x13FB424", VA = "0x13FB424")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x13FB16C", Offset = "0x13FB16C", VA = "0x13FB16C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x13FB754", Offset = "0x13FB754", VA = "0x13FB754")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200018C")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x13FF938", Offset = "0x13FF938", VA = "0x13FF938", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x13FF974", Offset = "0x13FF974", VA = "0x13FF974", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x13FF9AC", Offset = "0x13FF9AC", VA = "0x13FF9AC", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x13FF9D4", Offset = "0x13FF9D4", VA = "0x13FF9D4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x13FFB74", Offset = "0x13FFB74", VA = "0x13FFB74")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x13FFBF4", Offset = "0x13FFBF4", VA = "0x13FFBF4")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x13FFC48", Offset = "0x13FFC48", VA = "0x13FFC48")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200018D")]
public class RemotePlayer
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x11FDB68", Offset = "0x11FDB68", VA = "0x11FDB68")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200018E")]
public class RoomManager
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x11FDBE4", Offset = "0x11FDBE4", VA = "0x11FDBE4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x11FDCB0", Offset = "0x11FDCB0", VA = "0x11FDCB0")]
	private void AcceptingInviteCallback(Oculus.Platform.Message<string> msg)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x11FDE10", Offset = "0x11FDE10", VA = "0x11FDE10")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x11FDF20", Offset = "0x11FDF20", VA = "0x11FDF20")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x11FDFD4", Offset = "0x11FDFD4", VA = "0x11FDFD4")]
	private void CreateAndJoinPrivateRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x11FE108", Offset = "0x11FE108", VA = "0x11FE108")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x11FDE40", Offset = "0x11FDE40", VA = "0x11FDE40")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x11FE194", Offset = "0x11FE194", VA = "0x11FE194")]
	private void JoinRoomCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x11FE830", Offset = "0x11FE830", VA = "0x11FE830")]
	private void RoomUpdateCallback(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x11FEB00", Offset = "0x11FEB00", VA = "0x11FEB00")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x11FE434", Offset = "0x11FE434", VA = "0x11FE434")]
	private void ProcessRoomData(Oculus.Platform.Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200018F")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	public enum State
	{
		[Token(Token = "0x4000953")]
		INITIALIZING,
		[Token(Token = "0x4000954")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000955")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000956")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000957")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000958")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000959")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400095A")]
		SHUTDOWN
	}

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x170000D0")]
	public static State CurrentState
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x13846EC", Offset = "0x13846EC", VA = "0x13846EC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170000D1")]
	public static ulong MyID
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1384760", Offset = "0x1384760", VA = "0x1384760")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170000D2")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1384838", Offset = "0x1384838", VA = "0x1384838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1382984", Offset = "0x1382984", VA = "0x1382984", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1382D10", Offset = "0x1382D10", VA = "0x1382D10", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x13833EC", Offset = "0x13833EC", VA = "0x13833EC")]
	private void InitCallback(Oculus.Platform.Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x13836B4", Offset = "0x13836B4", VA = "0x13836B4", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x13836B8", Offset = "0x13836B8", VA = "0x13836B8")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x13837AC", Offset = "0x13837AC", VA = "0x13837AC")]
	private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1383EA0", Offset = "0x1383EA0", VA = "0x1383EA0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Oculus.Platform.Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x1384360", Offset = "0x1384360", VA = "0x1384360")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x138452C", Offset = "0x138452C", VA = "0x138452C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x138467C", Offset = "0x138467C", VA = "0x138467C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1383010", Offset = "0x1383010", VA = "0x1383010")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1383548", Offset = "0x1383548", VA = "0x1383548")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x13830C4", Offset = "0x13830C4", VA = "0x13830C4")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x138494C", Offset = "0x138494C", VA = "0x138494C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1384ACC", Offset = "0x1384ACC", VA = "0x1384ACC")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1384BB4", Offset = "0x1384BB4", VA = "0x1384BB4")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1384CD8", Offset = "0x1384CD8", VA = "0x1384CD8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1384DA8", Offset = "0x1384DA8", VA = "0x1384DA8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x13835F8", Offset = "0x13835F8", VA = "0x13835F8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x13851D4", Offset = "0x13851D4", VA = "0x13851D4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1385260", Offset = "0x1385260", VA = "0x1385260")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1384FF8", Offset = "0x1384FF8", VA = "0x1384FF8")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1385434", Offset = "0x1385434", VA = "0x1385434")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x13828FC", Offset = "0x13828FC", VA = "0x13828FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xF382FC", Offset = "0xF382FC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1385570", Offset = "0x1385570", VA = "0x1385570")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1385638", Offset = "0x1385638", VA = "0x1385638")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000191")]
public class VoipManager
{
	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1733414", Offset = "0x1733414", VA = "0x1733414")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x17334D4", Offset = "0x17334D4", VA = "0x17334D4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x17335B8", Offset = "0x17335B8", VA = "0x17335B8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x173363C", Offset = "0x173363C", VA = "0x173363C")]
	private void VoipConnectRequestCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1733798", Offset = "0x1733798", VA = "0x1733798")]
	private void VoipStateChangedCallback(Oculus.Platform.Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000192")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1462688", Offset = "0x1462688", VA = "0x1462688")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x14626F8", Offset = "0x14626F8", VA = "0x14626F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1462874", Offset = "0x1462874", VA = "0x1462874")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x14628D8", Offset = "0x14628D8", VA = "0x14628D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1462734", Offset = "0x1462734", VA = "0x1462734")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1462994", Offset = "0x1462994", VA = "0x1462994")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x14629F4", Offset = "0x14629F4", VA = "0x14629F4")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000193")]
public class AvatarLayer
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x12F2D40", Offset = "0x12F2D40", VA = "0x12F2D40")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000194")]
public class PacketRecordSettings
{
	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x13FB7E0", Offset = "0x13FB7E0", VA = "0x13FB7E0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000195")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000196")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x13EC77C", Offset = "0x13EC77C", VA = "0x13EC77C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000197")]
	public enum HandType
	{
		[Token(Token = "0x40009BC")]
		Right,
		[Token(Token = "0x40009BD")]
		Left,
		[Token(Token = "0x40009BE")]
		Max
	}

	[Token(Token = "0x2000198")]
	public enum HandJoint
	{
		[Token(Token = "0x40009C0")]
		HandBase,
		[Token(Token = "0x40009C1")]
		IndexBase,
		[Token(Token = "0x40009C2")]
		IndexTip,
		[Token(Token = "0x40009C3")]
		ThumbBase,
		[Token(Token = "0x40009C4")]
		ThumbTip,
		[Token(Token = "0x40009C5")]
		Max
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2ACF0", Offset = "0xF2ACF0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x13EC70C", Offset = "0x13EC70C", VA = "0x13EC70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x13EC774", Offset = "0x13EC774", VA = "0x13EC774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x13EC550", Offset = "0x13EC550", VA = "0x13EC550")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x13EC57C", Offset = "0x13EC57C", VA = "0x13EC57C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x13EC580", Offset = "0x13EC580", VA = "0x13EC580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x13EC714", Offset = "0x13EC714", VA = "0x13EC714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2EBDC", Offset = "0xF2EBDC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2EC14", Offset = "0xF2EC14")]
	public bool EnableBody;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2EC4C", Offset = "0xF2EC4C")]
	public bool RecordPackets;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2EC84", Offset = "0xF2EC84")]
	public bool StartWithControllers;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2ECBC", Offset = "0xF2ECBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2ECBC", Offset = "0xF2ECBC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2ED2C", Offset = "0xF2ED2C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2ED64", Offset = "0xF2ED64")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2ED9C", Offset = "0xF2ED9C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF2EDD4", Offset = "0xF2EDD4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EE0C", Offset = "0xF2EE0C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400099C")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400099E")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400099F")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40009A0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40009A1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40009A2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x143F7FC", Offset = "0x143F7FC", VA = "0x143F7FC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x143FB64", Offset = "0x143FB64", VA = "0x143FB64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x143FBF0", Offset = "0x143FBF0", VA = "0x143FBF0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x143FC5C", Offset = "0x143FC5C", VA = "0x143FC5C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x143FD84", Offset = "0x143FD84", VA = "0x143FD84")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x143FE68", Offset = "0x143FE68", VA = "0x143FE68")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x143FF48", Offset = "0x143FF48", VA = "0x143FF48")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1440130", Offset = "0x1440130", VA = "0x1440130")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x14401F8", Offset = "0x14401F8", VA = "0x14401F8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x144027C", Offset = "0x144027C", VA = "0x144027C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1440364", Offset = "0x1440364", VA = "0x1440364")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x14403F0", Offset = "0x14403F0", VA = "0x14403F0")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x144050C", Offset = "0x144050C", VA = "0x144050C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x144056C", Offset = "0x144056C", VA = "0x144056C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000A3E")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x14409F0", Offset = "0x14409F0", VA = "0x14409F0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1440D50", Offset = "0x1440D50", VA = "0x1440D50")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1440EB4", Offset = "0x1440EB4", VA = "0x1440EB4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x144117C", Offset = "0x144117C", VA = "0x144117C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1441268", Offset = "0x1441268", VA = "0x1441268")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x144161C", Offset = "0x144161C", VA = "0x144161C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1441990", Offset = "0x1441990", VA = "0x1441990")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x14423A8", Offset = "0x14423A8", VA = "0x14423A8")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x14423FC", Offset = "0x14423FC", VA = "0x14423FC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x14414E4", Offset = "0x14414E4", VA = "0x14414E4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1441580", Offset = "0x1441580", VA = "0x1441580")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x144242C", Offset = "0x144242C", VA = "0x144242C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1441D04", Offset = "0x1441D04", VA = "0x1441D04")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1442678", Offset = "0x1442678", VA = "0x1442678")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1442494", Offset = "0x1442494", VA = "0x1442494")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1442914", Offset = "0x1442914", VA = "0x1442914")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1442D18", Offset = "0x1442D18", VA = "0x1442D18")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1442F48", Offset = "0x1442F48", VA = "0x1442F48")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1443088", Offset = "0x1443088", VA = "0x1443088")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1443240", Offset = "0x1443240", VA = "0x1443240")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1441EA4", Offset = "0x1441EA4", VA = "0x1441EA4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1443318", Offset = "0x1443318", VA = "0x1443318")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1441D14", Offset = "0x1441D14", VA = "0x1441D14")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x144340C", Offset = "0x144340C", VA = "0x144340C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x14439B8", Offset = "0x14439B8", VA = "0x14439B8")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1443E78", Offset = "0x1443E78", VA = "0x1443E78")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1443EF0", Offset = "0x1443EF0", VA = "0x1443EF0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1443F6C", Offset = "0x1443F6C", VA = "0x1443F6C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x144223C", Offset = "0x144223C", VA = "0x144223C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x14434C8", Offset = "0x14434C8", VA = "0x14434C8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1444404", Offset = "0x1444404", VA = "0x1444404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38360", Offset = "0xF38360")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1444474", Offset = "0x1444474", VA = "0x1444474")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x14442A8", Offset = "0x14442A8", VA = "0x14442A8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x144453C", Offset = "0x144453C", VA = "0x144453C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1444628", Offset = "0x1444628", VA = "0x1444628")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x144403C", Offset = "0x144403C", VA = "0x144403C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1444714", Offset = "0x1444714", VA = "0x1444714")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200019A")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x13EC7F8", Offset = "0x13EC7F8", VA = "0x13EC7F8")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200019B")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x13EC8A8", Offset = "0x13EC8A8", VA = "0x13EC8A8")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x13EDB88", Offset = "0x13EDB88", VA = "0x13EDB88")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x13ED72C", Offset = "0x13ED72C", VA = "0x13ED72C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x13ED4D0", Offset = "0x13ED4D0", VA = "0x13ED4D0")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x13ED5A0", Offset = "0x13ED5A0", VA = "0x13ED5A0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x13EDDEC", Offset = "0x13EDDEC", VA = "0x13EDDEC")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200019C")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40009CE")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x13EE36C", Offset = "0x13EE36C", VA = "0x13EE36C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200019D")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x13EE5D4", Offset = "0x13EE5D4", VA = "0x13EE5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x13EE9D4", Offset = "0x13EE9D4", VA = "0x13EE9D4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200019E")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x13EEAD0", Offset = "0x13EEAD0", VA = "0x13EEAD0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x13EEC2C", Offset = "0x13EEC2C", VA = "0x13EEC2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x13EED48", Offset = "0x13EED48", VA = "0x13EED48")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200019F")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x13EEDAC", Offset = "0x13EEDAC", VA = "0x13EEDAC")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x13EE6F0", Offset = "0x13EE6F0", VA = "0x13EE6F0")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x13EF390", Offset = "0x13EF390", VA = "0x13EF390")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x13EF3F0", Offset = "0x13EF3F0", VA = "0x13EF3F0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x13EFBD4", Offset = "0x13EFBD4", VA = "0x13EFBD4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x13EEA38", Offset = "0x13EEA38", VA = "0x13EEA38")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20001A0")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	public enum PacketMode
	{
		[Token(Token = "0x40009E2")]
		SDK,
		[Token(Token = "0x40009E3")]
		Unity
	}

	[Token(Token = "0x20001A2")]
	public struct ControllerPose
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x13F12A4", Offset = "0x13F12A4", VA = "0x13F12A4")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20001A3")]
	public struct PoseFrame
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x13F1400", Offset = "0x13F1400", VA = "0x13F1400")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x13F0ED0", Offset = "0x13F0ED0", VA = "0x13F0ED0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000A80")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x13F0EE0", Offset = "0x13F0EE0", VA = "0x13F0EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x13F0F80", Offset = "0x13F0F80", VA = "0x13F0F80")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x13F11F8", Offset = "0x13F11F8", VA = "0x13F11F8")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x13F1294", Offset = "0x13F1294", VA = "0x13F1294")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20001A4")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x13F17B8", Offset = "0x13F17B8", VA = "0x13F17B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x13F1914", Offset = "0x13F1914", VA = "0x13F1914")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20001A5")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x13F1980", Offset = "0x13F1980", VA = "0x13F1980")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x13F1AEC", Offset = "0x13F1AEC", VA = "0x13F1AEC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x13F1E90", Offset = "0x13F1E90", VA = "0x13F1E90")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x13F215C", Offset = "0x13F215C", VA = "0x13F215C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x13F2188", Offset = "0x13F2188", VA = "0x13F2188")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20001A6")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20001A7")]
	public enum TextureType
	{
		[Token(Token = "0x4000A19")]
		DiffuseTextures,
		[Token(Token = "0x4000A1A")]
		NormalMaps,
		[Token(Token = "0x4000A1B")]
		RoughnessMaps,
		[Token(Token = "0x4000A1C")]
		Count
	}

	[Token(Token = "0x20001A8")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20001A9")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20001AA")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20001AB")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x13F43A8", Offset = "0x13F43A8", VA = "0x13F43A8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AD00", Offset = "0xF2AD00")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x13F4CB8", Offset = "0x13F4CB8", VA = "0x13F4CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x13F4D20", Offset = "0x13F4D20", VA = "0x13F4D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x13F4210", Offset = "0x13F4210", VA = "0x13F4210")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x13F4640", Offset = "0x13F4640", VA = "0x13F4640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x13F4644", Offset = "0x13F4644", VA = "0x13F4644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x13F4CC0", Offset = "0x13F4CC0", VA = "0x13F4CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000A14")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000A15")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000A16")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000A17")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x13F2238", Offset = "0x13F2238", VA = "0x13F2238")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x13F2398", Offset = "0x13F2398", VA = "0x13F2398")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x13F23C0", Offset = "0x13F23C0", VA = "0x13F23C0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x13F2AD8", Offset = "0x13F2AD8", VA = "0x13F2AD8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x13F2D58", Offset = "0x13F2D58", VA = "0x13F2D58")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x13F2454", Offset = "0x13F2454", VA = "0x13F2454")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x13F2E48", Offset = "0x13F2E48", VA = "0x13F2E48")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x13F2854", Offset = "0x13F2854", VA = "0x13F2854")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x13F30B0", Offset = "0x13F30B0", VA = "0x13F30B0")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x13F3328", Offset = "0x13F3328", VA = "0x13F3328")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x13F3424", Offset = "0x13F3424", VA = "0x13F3424")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x13F345C", Offset = "0x13F345C", VA = "0x13F345C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x13F2A5C", Offset = "0x13F2A5C", VA = "0x13F2A5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38414", Offset = "0xF38414")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x13F423C", Offset = "0x13F423C", VA = "0x13F423C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20001AD")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x170000D7")]
	public float Duration
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x13F4D28", Offset = "0x13F4D28", VA = "0x13F4D28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D8")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x13F4D94", Offset = "0x13F4D94", VA = "0x13F4D94")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x13F4E18", Offset = "0x13F4E18", VA = "0x13F4E18")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x13F4EDC", Offset = "0x13F4EDC", VA = "0x13F4EDC")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x13F501C", Offset = "0x13F501C", VA = "0x13F501C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x13F50F8", Offset = "0x13F50F8", VA = "0x13F50F8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x13F51C8", Offset = "0x13F51C8", VA = "0x13F51C8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x13F53D0", Offset = "0x13F53D0", VA = "0x13F53D0")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x13F5628", Offset = "0x13F5628", VA = "0x13F5628")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20001AE")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x12F464C", Offset = "0x12F464C", VA = "0x12F464C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x12F4760", Offset = "0x12F4760", VA = "0x12F4760")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x12F490C", Offset = "0x12F490C", VA = "0x12F490C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x12F47D0", Offset = "0x12F47D0", VA = "0x12F47D0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x12F4864", Offset = "0x12F4864", VA = "0x12F4864")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20001AF")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x12F424C", Offset = "0x12F424C", VA = "0x12F424C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x12F45F0", Offset = "0x12F45F0", VA = "0x12F45F0")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x12F43EC", Offset = "0x12F43EC", VA = "0x12F43EC")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x12F4464", Offset = "0x12F4464", VA = "0x12F4464")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x12F4500", Offset = "0x12F4500", VA = "0x12F4500")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20001B0")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000A3E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000A3F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x13F5818", Offset = "0x13F5818", VA = "0x13F5818")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x13F58A4", Offset = "0x13F58A4", VA = "0x13F58A4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x13F58C0", Offset = "0x13F58C0", VA = "0x13F58C0")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x13F5A6C", Offset = "0x13F5A6C", VA = "0x13F5A6C")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x13F5C14", Offset = "0x13F5C14", VA = "0x13F5C14")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20001B1")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x13F5C94", Offset = "0x13F5C94", VA = "0x13F5C94")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x13F5D78", Offset = "0x13F5D78", VA = "0x13F5D78")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x13F5F6C", Offset = "0x13F5F6C", VA = "0x13F5F6C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x13F6300", Offset = "0x13F6300", VA = "0x13F6300")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x13F63F8", Offset = "0x13F63F8", VA = "0x13F63F8")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20001B2")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000A48")]
	Body = 1,
	[Token(Token = "0x4000A49")]
	Hands = 2,
	[Token(Token = "0x4000A4A")]
	Base = 4,
	[Token(Token = "0x4000A4B")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000A4C")]
	Expressive = 0x20,
	[Token(Token = "0x4000A4D")]
	All = -1
}
[Token(Token = "0x20001B3")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000A4F")]
	AvatarSpecification,
	[Token(Token = "0x4000A50")]
	AssetLoaded,
	[Token(Token = "0x4000A51")]
	Count
}
[Token(Token = "0x20001B4")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20001B5")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20001B6")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000A57")]
	Mesh,
	[Token(Token = "0x4000A58")]
	Texture,
	[Token(Token = "0x4000A59")]
	Pose,
	[Token(Token = "0x4000A5A")]
	Material,
	[Token(Token = "0x4000A5B")]
	CombinedMesh,
	[Token(Token = "0x4000A5C")]
	PBSMaterial,
	[Token(Token = "0x4000A5D")]
	FailedLoad,
	[Token(Token = "0x4000A5E")]
	Count
}
[Token(Token = "0x20001B7")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20001B8")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20001B9")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20001BA")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001BB")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001BC")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000A93")]
	RGB24,
	[Token(Token = "0x4000A94")]
	DXT1,
	[Token(Token = "0x4000A95")]
	DXT5,
	[Token(Token = "0x4000A96")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000A97")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000A98")]
	Count
}
[Token(Token = "0x20001BD")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20001BE")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000AA0")]
	SkinnedMeshRender,
	[Token(Token = "0x4000AA1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000AA2")]
	ProjectorRender,
	[Token(Token = "0x4000AA3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000AA4")]
	Count
}
[Token(Token = "0x20001BF")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000AA6")]
	Unknown,
	[Token(Token = "0x4000AA7")]
	Default,
	[Token(Token = "0x4000AA8")]
	Verbose,
	[Token(Token = "0x4000AA9")]
	Debug,
	[Token(Token = "0x4000AAA")]
	Info,
	[Token(Token = "0x4000AAB")]
	Warn,
	[Token(Token = "0x4000AAC")]
	Error,
	[Token(Token = "0x4000AAD")]
	Fatal,
	[Token(Token = "0x4000AAE")]
	Silent
}
[Token(Token = "0x20001C0")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20001C1")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000AB3")]
	One = 1,
	[Token(Token = "0x4000AB4")]
	Two = 2,
	[Token(Token = "0x4000AB5")]
	Three = 4,
	[Token(Token = "0x4000AB6")]
	Joystick = 8
}
[Token(Token = "0x20001C2")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000AB8")]
	One = 1,
	[Token(Token = "0x4000AB9")]
	Two = 2,
	[Token(Token = "0x4000ABA")]
	Joystick = 4,
	[Token(Token = "0x4000ABB")]
	ThumbRest = 8,
	[Token(Token = "0x4000ABC")]
	Index = 0x10,
	[Token(Token = "0x4000ABD")]
	Pointing = 0x40,
	[Token(Token = "0x4000ABE")]
	ThumbUp = 0x80
}
[Token(Token = "0x20001C3")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20001C4")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20001C5")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20001C6")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001C7")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001C8")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20001C9")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001CA")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001CB")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000ADE")]
	Add,
	[Token(Token = "0x4000ADF")]
	Multiply,
	[Token(Token = "0x4000AE0")]
	Count
}
[Token(Token = "0x20001CC")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000AE2")]
	Color,
	[Token(Token = "0x4000AE3")]
	Texture,
	[Token(Token = "0x4000AE4")]
	TextureSingleChannel,
	[Token(Token = "0x4000AE5")]
	Parallax,
	[Token(Token = "0x4000AE6")]
	Count
}
[Token(Token = "0x20001CD")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000AE8")]
	None,
	[Token(Token = "0x4000AE9")]
	Positional,
	[Token(Token = "0x4000AEA")]
	ViewReflection,
	[Token(Token = "0x4000AEB")]
	Fresnel,
	[Token(Token = "0x4000AEC")]
	Pulse,
	[Token(Token = "0x4000AED")]
	Count
}
[Token(Token = "0x20001CE")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000AEF")]
	Touch,
	[Token(Token = "0x4000AF0")]
	Malibu,
	[Token(Token = "0x4000AF1")]
	Go,
	[Token(Token = "0x4000AF2")]
	Quest,
	[Token(Token = "0x4000AF3")]
	Count
}
[Token(Token = "0x20001CF")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000AF5")]
	Lowest = 1,
	[Token(Token = "0x4000AF6")]
	Medium = 3,
	[Token(Token = "0x4000AF7")]
	Highest = 5
}
[Token(Token = "0x20001D0")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000AF9")]
	Unknown = -1,
	[Token(Token = "0x4000AFA")]
	One,
	[Token(Token = "0x4000AFB")]
	Two
}
[Token(Token = "0x20001D1")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1C24C24", Offset = "0x1C24C24", VA = "0x1C24C24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1C24C54", Offset = "0x1C24C54", VA = "0x1C24C54", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1C24E74", Offset = "0x1C24E74", VA = "0x1C24E74", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20001D2")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1C24F58", Offset = "0x1C24F58", VA = "0x1C24F58")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1C24F88", Offset = "0x1C24F88", VA = "0x1C24F88", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1C2531C", Offset = "0x1C2531C", VA = "0x1C2531C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20001D3")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1C242CC", Offset = "0x1C242CC", VA = "0x1C242CC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x1C242FC", Offset = "0x1C242FC", VA = "0x1C242FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x1C24590", Offset = "0x1C24590", VA = "0x1C24590", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20001D4")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1C25484", Offset = "0x1C25484", VA = "0x1C25484")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1C254B4", Offset = "0x1C254B4", VA = "0x1C254B4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1C256A8", Offset = "0x1C256A8", VA = "0x1C256A8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20001D5")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x13EC800", Offset = "0x13EC800", VA = "0x13EC800")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20001D6")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20001D7")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000B30")]
	FirstPerson = 1,
	[Token(Token = "0x4000B31")]
	ThirdPerson = 2,
	[Token(Token = "0x4000B32")]
	SelfOccluding = 4
}
[Token(Token = "0x20001D8")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001D9")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001DA")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20001DB")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001DC")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000B48")]
	Default,
	[Token(Token = "0x4000B49")]
	GripSphere,
	[Token(Token = "0x4000B4A")]
	GripCube,
	[Token(Token = "0x4000B4B")]
	Count
}
[Token(Token = "0x20001DD")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000B4D")]
	Body,
	[Token(Token = "0x4000B4E")]
	Clothing,
	[Token(Token = "0x4000B4F")]
	Eyewear,
	[Token(Token = "0x4000B50")]
	Hair,
	[Token(Token = "0x4000B51")]
	Beard,
	[Token(Token = "0x4000B52")]
	Count
}
[Token(Token = "0x20001DE")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20001DF")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20001E0")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20001E1")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20001E2")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000B5C")]
	AvatarHead,
	[Token(Token = "0x4000B5D")]
	AvatarHand,
	[Token(Token = "0x4000B5E")]
	Object,
	[Token(Token = "0x4000B5F")]
	ObjectStatic,
	[Token(Token = "0x4000B60")]
	Count
}
[Token(Token = "0x20001E3")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20001E4")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20001E5")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20001E6")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20001E7")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000B6C")]
	Point,
	[Token(Token = "0x4000B6D")]
	Direction,
	[Token(Token = "0x4000B6E")]
	Spot,
	[Token(Token = "0x4000B6F")]
	Count
}
[Token(Token = "0x20001E8")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20001E9")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20001EA")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20001EB")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20001EC")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000B85")]
	None = 0u,
	[Token(Token = "0x4000B86")]
	GazeTarget = 1u,
	[Token(Token = "0x4000B87")]
	Any = uint.MaxValue
}
[Token(Token = "0x20001ED")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20001EE")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20001EF")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20001F0")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20001F1")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20001F2")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x13F7458", Offset = "0x13F7458", VA = "0x13F7458")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000B9C")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x170000D9")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x13EFC68", Offset = "0x13EFC68", VA = "0x13EFC68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x13F6408", Offset = "0x13F6408", VA = "0x13F6408")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x13F6654", Offset = "0x13F6654", VA = "0x13F6654")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x13F66C8", Offset = "0x13F66C8", VA = "0x13F66C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x13F6F0C", Offset = "0x13F6F0C", VA = "0x13F6F0C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x13F6F64", Offset = "0x13F6F64", VA = "0x13F6F64")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x13F6FBC", Offset = "0x13F6FBC", VA = "0x13F6FBC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x13F7024", Offset = "0x13F7024", VA = "0x13F7024")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x13F708C", Offset = "0x13F708C", VA = "0x13F708C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x13F6D44", Offset = "0x13F6D44", VA = "0x13F6D44")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x13F716C", Offset = "0x13F716C", VA = "0x13F716C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x13F7288", Offset = "0x13F7288", VA = "0x13F7288")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x13EFDF8", Offset = "0x13EFDF8", VA = "0x13EFDF8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x13F7368", Offset = "0x13F7368", VA = "0x13F7368")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x13F6608", Offset = "0x13F6608", VA = "0x13F6608")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x13F2B38", Offset = "0x13F2B38", VA = "0x13F2B38")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x13F7440", Offset = "0x13F7440", VA = "0x13F7440")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20001F4")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x170000DA")]
	public static string AppID
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x13F7400", Offset = "0x13F7400", VA = "0x13F7400")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x13F7598", Offset = "0x13F7598", VA = "0x13F7598")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x13F7420", Offset = "0x13F7420", VA = "0x13F7420")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x13F75C4", Offset = "0x13F75C4", VA = "0x13F75C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x13F7484", Offset = "0x13F7484", VA = "0x13F7484")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x13F75F0", Offset = "0x13F75F0", VA = "0x13F75F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x13F7644", Offset = "0x13F7644", VA = "0x13F7644")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20001F5")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x13F8D20", Offset = "0x13F8D20", VA = "0x13F8D20")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x13EEDB4", Offset = "0x13EEDB4", VA = "0x13EEDB4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x13F8E64", Offset = "0x13F8E64", VA = "0x13F8E64")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x13F8FC4", Offset = "0x13F8FC4", VA = "0x13F8FC4")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20001F6")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x13F8FD4", Offset = "0x13F8FD4", VA = "0x13F8FD4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x13EEFDC", Offset = "0x13EEFDC", VA = "0x13EEFDC")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x13F9104", Offset = "0x13F9104", VA = "0x13F9104")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20001F7")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000BB3")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000BB4")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000BB5")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x13F769C", Offset = "0x13F769C", VA = "0x13F769C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x13EF174", Offset = "0x13EF174", VA = "0x13EF174")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x13F84DC", Offset = "0x13F84DC", VA = "0x13F84DC")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x13F7C70", Offset = "0x13F7C70", VA = "0x13F7C70")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x13F7A40", Offset = "0x13F7A40", VA = "0x13F7A40")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x13F7B54", Offset = "0x13F7B54", VA = "0x13F7B54")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x13F8D10", Offset = "0x13F8D10", VA = "0x13F8D10")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20001F8")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F9")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20001FA")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x13F9EBC", Offset = "0x13F9EBC", VA = "0x13F9EBC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20001FB")]
	public struct TextureSet
	{
		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x13F9ECC", Offset = "0x13F9ECC", VA = "0x13F9ECC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AD80", Offset = "0xF2AD80")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x13FA5AC", Offset = "0x13FA5AC", VA = "0x13FA5AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x13FA614", Offset = "0x13FA614", VA = "0x13FA614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x13F9F70", Offset = "0x13F9F70", VA = "0x13F9F70")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x13FA0D8", Offset = "0x13FA0D8", VA = "0x13FA0D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x13FA0DC", Offset = "0x13FA0DC", VA = "0x13FA0DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x13FA5B4", Offset = "0x13FA5B4", VA = "0x13FA5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000BB9")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000BBA")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000BBD")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000BBE")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000BBF")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000BC0")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000BC1")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000BC2")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000BC3")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x13F9968", Offset = "0x13F9968", VA = "0x13F9968")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x13F9CC4", Offset = "0x13F9CC4", VA = "0x13F9CC4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x13F4C68", Offset = "0x13F4C68", VA = "0x13F4C68")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x13F2F2C", Offset = "0x13F2F2C", VA = "0x13F2F2C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x13F9E2C", Offset = "0x13F9E2C", VA = "0x13F9E2C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x13F2BBC", Offset = "0x13F2BBC", VA = "0x13F2BBC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x13F2DA0", Offset = "0x13F2DA0", VA = "0x13F2DA0")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x13F9EDC", Offset = "0x13F9EDC", VA = "0x13F9EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38568", Offset = "0xF38568")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x13F7120", Offset = "0x13F7120", VA = "0x13F7120")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x13F9F9C", Offset = "0x13F9F9C", VA = "0x13F9F9C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20001FD")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x13FA61C", Offset = "0x13FA61C", VA = "0x13FA61C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x13FA778", Offset = "0x13FA778", VA = "0x13FA778")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20001FE")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000B1D")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x135BCC4", Offset = "0x135BCC4", VA = "0x135BCC4")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20001FF")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EE64", Offset = "0xF2EE64")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EE9C", Offset = "0xF2EE9C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EED4", Offset = "0xF2EED4")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x11C6DF8", Offset = "0x11C6DF8", VA = "0x11C6DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x11C6DFC", Offset = "0x11C6DFC", VA = "0x11C6DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x11C6E7C", Offset = "0x11C6E7C", VA = "0x11C6E7C")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x11C7068", Offset = "0x11C7068", VA = "0x11C7068")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000200")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x11C7098", Offset = "0x11C7098", VA = "0x11C7098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x11C719C", Offset = "0x11C719C", VA = "0x11C719C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x11C7270", Offset = "0x11C7270", VA = "0x11C7270")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x11C74FC", Offset = "0x11C74FC", VA = "0x11C74FC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x11C754C", Offset = "0x11C754C", VA = "0x11C754C")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000201")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x170000DF")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x19F0C3C", Offset = "0x19F0C3C", VA = "0x19F0C3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x19F0EF4", Offset = "0x19F0EF4", VA = "0x19F0EF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x19F1030", Offset = "0x19F1030", VA = "0x19F1030")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x19F0F64", Offset = "0x19F0F64", VA = "0x19F0F64")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x19EEE94", Offset = "0x19EEE94", VA = "0x19EEE94")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x19F11B8", Offset = "0x19F11B8", VA = "0x19F11B8")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x19EEE2C", Offset = "0x19EEE2C", VA = "0x19EEE2C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x19EEF14", Offset = "0x19EEF14", VA = "0x19EEF14")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x19F10C8", Offset = "0x19F10C8", VA = "0x19F10C8")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x19F1258", Offset = "0x19F1258", VA = "0x19F1258")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x19F1294", Offset = "0x19F1294", VA = "0x19F1294")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x19F1488", Offset = "0x19F1488", VA = "0x19F1488")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x19F12A4", Offset = "0x19F12A4", VA = "0x19F12A4")]
	private void Display()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x19F1538", Offset = "0x19F1538", VA = "0x19F1538")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000202")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x19F2014", Offset = "0x19F2014", VA = "0x19F2014")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000203")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000204")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000BEB")]
		SingleTap,
		[Token(Token = "0x4000BEC")]
		DoubleTap,
		[Token(Token = "0x4000BED")]
		Left,
		[Token(Token = "0x4000BEE")]
		Right,
		[Token(Token = "0x4000BEF")]
		Up,
		[Token(Token = "0x4000BF0")]
		Down
	}

	[Token(Token = "0x2000205")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x19EDAA8", Offset = "0x19EDAA8", VA = "0x19EDAA8")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x19F7194", Offset = "0x19F7194", VA = "0x19F7194")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x19F74B4", Offset = "0x19F74B4", VA = "0x19F74B4")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x19F7304", Offset = "0x19F7304", VA = "0x19F7304")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x19EE988", Offset = "0x19EE988", VA = "0x19EE988")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000206")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x19F7564", Offset = "0x19F7564", VA = "0x19F7564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x19F75E0", Offset = "0x19F75E0", VA = "0x19F75E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x19F7678", Offset = "0x19F7678", VA = "0x19F7678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x19F76D4", Offset = "0x19F76D4", VA = "0x19F76D4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x19F7738", Offset = "0x19F7738", VA = "0x19F7738")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x19F773C", Offset = "0x19F773C", VA = "0x19F773C")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000207")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000208")]
	public enum Result
	{
		[Token(Token = "0x4000BF7")]
		Success = 0,
		[Token(Token = "0x4000BF8")]
		Unknown = -2200,
		[Token(Token = "0x4000BF9")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000BFA")]
		InvalidParam = -2202,
		[Token(Token = "0x4000BFB")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000BFC")]
		MissingDLL = -2204,
		[Token(Token = "0x4000BFD")]
		BadVersion = -2205,
		[Token(Token = "0x4000BFE")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000209")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000C00")]
		S16_Mono,
		[Token(Token = "0x4000C01")]
		S16_Stereo,
		[Token(Token = "0x4000C02")]
		F32_Mono,
		[Token(Token = "0x4000C03")]
		F32_Stereo
	}

	[Token(Token = "0x200020A")]
	public enum Viseme
	{
		[Token(Token = "0x4000C05")]
		sil,
		[Token(Token = "0x4000C06")]
		PP,
		[Token(Token = "0x4000C07")]
		FF,
		[Token(Token = "0x4000C08")]
		TH,
		[Token(Token = "0x4000C09")]
		DD,
		[Token(Token = "0x4000C0A")]
		kk,
		[Token(Token = "0x4000C0B")]
		CH,
		[Token(Token = "0x4000C0C")]
		SS,
		[Token(Token = "0x4000C0D")]
		nn,
		[Token(Token = "0x4000C0E")]
		RR,
		[Token(Token = "0x4000C0F")]
		aa,
		[Token(Token = "0x4000C10")]
		E,
		[Token(Token = "0x4000C11")]
		ih,
		[Token(Token = "0x4000C12")]
		oh,
		[Token(Token = "0x4000C13")]
		ou
	}

	[Token(Token = "0x200020B")]
	public enum Signals
	{
		[Token(Token = "0x4000C15")]
		VisemeOn,
		[Token(Token = "0x4000C16")]
		VisemeOff,
		[Token(Token = "0x4000C17")]
		VisemeAmount,
		[Token(Token = "0x4000C18")]
		VisemeSmoothing,
		[Token(Token = "0x4000C19")]
		LaughterAmount
	}

	[Token(Token = "0x200020C")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000C1B")]
		Original,
		[Token(Token = "0x4000C1C")]
		Enhanced,
		[Token(Token = "0x4000C1D")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200020D")]
	public class Frame
	{
		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x19EE6F0", Offset = "0x19EE6F0", VA = "0x19EE6F0")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x19EE748", Offset = "0x19EE748", VA = "0x19EE748")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x19EE7D8", Offset = "0x19EE7D8", VA = "0x19EE7D8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000BF3")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x19ED078", Offset = "0x19ED078", VA = "0x19ED078")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x19ED108", Offset = "0x19ED108", VA = "0x19ED108")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x19ED178", Offset = "0x19ED178", VA = "0x19ED178")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x19ED20C", Offset = "0x19ED20C", VA = "0x19ED20C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x19ED2B4", Offset = "0x19ED2B4", VA = "0x19ED2B4")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x19ED380", Offset = "0x19ED380", VA = "0x19ED380")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x19ED400", Offset = "0x19ED400", VA = "0x19ED400")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x19ED480", Offset = "0x19ED480", VA = "0x19ED480")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x19ED528", Offset = "0x19ED528", VA = "0x19ED528")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x19ED630", Offset = "0x19ED630", VA = "0x19ED630")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x19EDAAC", Offset = "0x19EDAAC", VA = "0x19EDAAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x19ED970", Offset = "0x19ED970", VA = "0x19ED970")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x19EDB8C", Offset = "0x19EDB8C", VA = "0x19EDB8C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x19EDCA0", Offset = "0x19EDCA0", VA = "0x19EDCA0")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x19EDD10", Offset = "0x19EDD10", VA = "0x19EDD10")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x19EDD78", Offset = "0x19EDD78", VA = "0x19EDD78")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x19EDE9C", Offset = "0x19EDE9C", VA = "0x19EDE9C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x19EDFD4", Offset = "0x19EDFD4", VA = "0x19EDFD4")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x19EE0B4", Offset = "0x19EE0B4", VA = "0x19EE0B4")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x19EE194", Offset = "0x19EE194", VA = "0x19EE194")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x19EE298", Offset = "0x19EE298", VA = "0x19EE298")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x19EE43C", Offset = "0x19EE43C", VA = "0x19EE43C")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x19EE5D8", Offset = "0x19EE5D8", VA = "0x19EE5D8")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200020E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2AD90", Offset = "0xF2AD90")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EF0C", Offset = "0xF2EF0C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EF44", Offset = "0xF2EF44")]
	public bool enableTouchInput;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EF7C", Offset = "0xF2EF7C")]
	public bool audioLoopback;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EFB4", Offset = "0xF2EFB4")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2EFEC", Offset = "0xF2EFEC")]
	public bool showVisemes;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F024", Offset = "0xF2F024")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F05C", Offset = "0xF2F05C")]
	public bool skipAudioSource;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F094", Offset = "0xF2F094")]
	public float gain;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x19EE860", Offset = "0x19EE860", VA = "0x19EE860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x19EEA48", Offset = "0x19EEA48", VA = "0x19EEA48")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x19EEF94", Offset = "0x19EEF94", VA = "0x19EEF94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x19EF278", Offset = "0x19EF278", VA = "0x19EF278")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x19EF2DC", Offset = "0x19EF2DC", VA = "0x19EF2DC")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x19EF348", Offset = "0x19EF348", VA = "0x19EF348")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x19EF4AC", Offset = "0x19EF4AC", VA = "0x19EF4AC")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x19EF610", Offset = "0x19EF610", VA = "0x19EF610")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x19EF744", Offset = "0x19EF744", VA = "0x19EF744")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x19EEFD8", Offset = "0x19EEFD8", VA = "0x19EEFD8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x19EED58", Offset = "0x19EED58", VA = "0x19EED58")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x19EF754", Offset = "0x19EF754", VA = "0x19EF754")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x19EF880", Offset = "0x19EF880", VA = "0x19EF880")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2ADF4", Offset = "0xF2ADF4")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F0CC", Offset = "0xF2F0CC")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F104", Offset = "0xF2F104")]
	public bool enableAcceleration;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x170000E0")]
	public int Smoothing
	{
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x19EFA00", Offset = "0x19EFA00", VA = "0x19EFA00")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x19EF914", Offset = "0x19EF914", VA = "0x19EF914")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public uint Context
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x19EFA08", Offset = "0x19EFA08", VA = "0x19EFA08")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000E2")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x19EFA10", Offset = "0x19EFA10", VA = "0x19EFA10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x19EFA18", Offset = "0x19EFA18", VA = "0x19EFA18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x19EFBA8", Offset = "0x19EFBA8", VA = "0x19EFBA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x19EFCC4", Offset = "0x19EFCC4", VA = "0x19EFCC4")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x19EFCCC", Offset = "0x19EFCCC", VA = "0x19EFCCC")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x19EFDC0", Offset = "0x19EFDC0", VA = "0x19EFDC0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x19EFE88", Offset = "0x19EFE88", VA = "0x19EFE88")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x19EF8A4", Offset = "0x19EF8A4", VA = "0x19EF8A4")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000210")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2AE58", Offset = "0xF2AE58")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F13C", Offset = "0xF2F13C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x19EFF00", Offset = "0x19EFF00", VA = "0x19EFF00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x19F0088", Offset = "0x19F0088", VA = "0x19F0088")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000211")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F174", Offset = "0xF2F174")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F1AC", Offset = "0xF2F1AC")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F1E4", Offset = "0xF2F1E4")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F21C", Offset = "0xF2F21C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F254", Offset = "0xF2F254")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F28C", Offset = "0xF2F28C")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2F2C4", Offset = "0xF2F2C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F2C4", Offset = "0xF2F2C4")]
	public float laughterThreshold;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2F318", Offset = "0xF2F318")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F318", Offset = "0xF2F318")]
	public float laughterMultiplier;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2F36C", Offset = "0xF2F36C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F36C", Offset = "0xF2F36C")]
	public int smoothAmount;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x19F008C", Offset = "0x19F008C", VA = "0x19F008C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x19F01D0", Offset = "0x19F01D0", VA = "0x19F01D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x19F0480", Offset = "0x19F0480", VA = "0x19F0480")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x19F02DC", Offset = "0x19F02DC", VA = "0x19F02DC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x19F0390", Offset = "0x19F0390", VA = "0x19F0390")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x19F0550", Offset = "0x19F0550", VA = "0x19F0550")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x19F0614", Offset = "0x19F0614", VA = "0x19F0614")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x19F067C", Offset = "0x19F067C", VA = "0x19F067C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000212")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F3C4", Offset = "0xF2F3C4")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xF2F3C4", Offset = "0xF2F3C4")]
	public Texture[] Textures;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2F540", Offset = "0xF2F540")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F540", Offset = "0xF2F540")]
	public int smoothAmount;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x19F0774", Offset = "0x19F0774", VA = "0x19F0774")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x19F08C8", Offset = "0x19F08C8", VA = "0x19F08C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x19F0A6C", Offset = "0x19F0A6C", VA = "0x19F0A6C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x19F0B90", Offset = "0x19F0B90", VA = "0x19F0B90")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000213")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2AEBC", Offset = "0xF2AEBC")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	public enum micActivation
	{
		[Token(Token = "0x4000C52")]
		HoldToSpeak,
		[Token(Token = "0x4000C53")]
		PushToSpeak,
		[Token(Token = "0x4000C54")]
		ConstantSpeak
	}

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F598", Offset = "0xF2F598")]
	public AudioSource audioSource;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F5D0", Offset = "0xF2F5D0")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F608", Offset = "0xF2F608")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2F640", Offset = "0xF2F640")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F640", Offset = "0xF2F640")]
	private float micInputVolume;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F6A8", Offset = "0xF2F6A8")]
	private int micFrequency;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F6F4", Offset = "0xF2F6F4")]
	public micActivation micControl;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F72C", Offset = "0xF2F72C")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F764", Offset = "0xF2F764")]
	public string selectedDevice;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x170000E3")]
	public float MicFrequency
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x19F15AC", Offset = "0x19F15AC", VA = "0x19F15AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x19F15B8", Offset = "0x19F15B8", VA = "0x19F15B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x19F165C", Offset = "0x19F165C", VA = "0x19F165C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x19F171C", Offset = "0x19F171C", VA = "0x19F171C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x19F1768", Offset = "0x19F1768", VA = "0x19F1768")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x19F18AC", Offset = "0x19F18AC", VA = "0x19F18AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x19F1CE4", Offset = "0x19F1CE4", VA = "0x19F1CE4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x19F1CF8", Offset = "0x19F1CF8", VA = "0x19F1CF8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x19F1D10", Offset = "0x19F1D10", VA = "0x19F1D10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x19F1D14", Offset = "0x19F1D14", VA = "0x19F1D14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x19F1D8C", Offset = "0x19F1D8C", VA = "0x19F1D8C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x19F17F0", Offset = "0x19F17F0", VA = "0x19F17F0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x19F1B50", Offset = "0x19F1B50", VA = "0x19F1B50")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x19F1A08", Offset = "0x19F1A08", VA = "0x19F1A08")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x19F1F6C", Offset = "0x19F1F6C", VA = "0x19F1F6C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x19F1F74", Offset = "0x19F1F74", VA = "0x19F1F74")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000215")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x19EFFCC", Offset = "0x19EFFCC", VA = "0x19EFFCC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x19F1FA4", Offset = "0x19F1FA4", VA = "0x19F1FA4")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000216")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000217")]
	public delegate void OnClick();

	[Token(Token = "0x2000218")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000219")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200021A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF20", Offset = "0xF2AF20")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x13503A8", Offset = "0x13503A8", VA = "0x13503A8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1350D48", Offset = "0x1350D48", VA = "0x1350D48")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF30", Offset = "0xF2AF30")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x135061C", Offset = "0x135061C", VA = "0x135061C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1350F6C", Offset = "0x1350F6C", VA = "0x1350F6C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF40", Offset = "0xF2AF40")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1350834", Offset = "0x1350834", VA = "0x1350834")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x13511E4", Offset = "0x13511E4", VA = "0x13511E4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF50", Offset = "0xF2AF50")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x13509C8", Offset = "0x13509C8", VA = "0x13509C8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1351598", Offset = "0x1351598", VA = "0x1351598")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF60", Offset = "0xF2AF60")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1350C20", Offset = "0x1350C20", VA = "0x1350C20")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x13515B8", Offset = "0x13515B8", VA = "0x13515B8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000C57")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000C58")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000C59")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000C66")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000C67")]
	private const float marginH = 16f;

	[Token(Token = "0x4000C68")]
	private const float marginV = 16f;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x134F354", Offset = "0x134F354", VA = "0x134F354")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x134F758", Offset = "0x134F758", VA = "0x134F758")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x134FD24", Offset = "0x134FD24", VA = "0x134FD24")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x134FAD0", Offset = "0x134FAD0", VA = "0x134FAD0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x134FECC", Offset = "0x134FECC", VA = "0x134FECC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1350180", Offset = "0x1350180", VA = "0x1350180")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x13503B0", Offset = "0x13503B0", VA = "0x13503B0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1350494", Offset = "0x1350494", VA = "0x1350494")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1350624", Offset = "0x1350624", VA = "0x1350624")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x13506C0", Offset = "0x13506C0", VA = "0x13506C0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x135083C", Offset = "0x135083C", VA = "0x135083C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x13509D0", Offset = "0x13509D0", VA = "0x13509D0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1350C28", Offset = "0x1350C28", VA = "0x1350C28")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1350CD8", Offset = "0x1350CD8", VA = "0x1350CD8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000220")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x14636E8", Offset = "0x14636E8", VA = "0x14636E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1463770", Offset = "0x1463770", VA = "0x1463770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1463880", Offset = "0x1463880", VA = "0x1463880")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x14638BC", Offset = "0x14638BC", VA = "0x14638BC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000221")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000222")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000C85")]
		On,
		[Token(Token = "0x4000C86")]
		Off,
		[Token(Token = "0x4000C87")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000E4")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x15214E0", Offset = "0x15214E0", VA = "0x15214E0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x152149C", Offset = "0x152149C", VA = "0x152149C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x15214E8", Offset = "0x15214E8", VA = "0x15214E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1521540", Offset = "0x1521540", VA = "0x1521540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1521658", Offset = "0x1521658", VA = "0x1521658", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x1521674", Offset = "0x1521674", VA = "0x1521674", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x15216C8", Offset = "0x15216C8", VA = "0x15216C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x1521924", Offset = "0x1521924", VA = "0x1521924")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x1521A38", Offset = "0x1521A38", VA = "0x1521A38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1521ACC", Offset = "0x1521ACC", VA = "0x1521ACC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1521B9C", Offset = "0x1521B9C", VA = "0x1521B9C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1521C54", Offset = "0x1521C54", VA = "0x1521C54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1521D20", Offset = "0x1521D20", VA = "0x1521D20")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000223")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x12F4960", Offset = "0x12F4960", VA = "0x12F4960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x12F4B6C", Offset = "0x12F4B6C", VA = "0x12F4B6C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x12F500C", Offset = "0x12F500C", VA = "0x12F500C")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000224")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1462FC8", Offset = "0x1462FC8", VA = "0x1462FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x14630FC", Offset = "0x14630FC", VA = "0x14630FC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x146334C", Offset = "0x146334C", VA = "0x146334C")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000225")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x170000E5")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x14633F8", Offset = "0x14633F8", VA = "0x14633F8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1463058", Offset = "0x1463058", VA = "0x1463058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3861C", Offset = "0xF3861C")]
		add
		{
		}
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1463354", Offset = "0x1463354", VA = "0x1463354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3862C", Offset = "0xF3862C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1463404", Offset = "0x1463404", VA = "0x1463404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x146355C", Offset = "0x146355C", VA = "0x146355C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x14636D0", Offset = "0x14636D0", VA = "0x14636D0")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x14636D8", Offset = "0x14636D8", VA = "0x14636D8")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000226")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F84C", Offset = "0xF2F84C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F884", Offset = "0xF2F884")]
	public bool EnableCollision;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F8BC", Offset = "0xF2F8BC")]
	public float MaxFade;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F8F4", Offset = "0xF2F8F4")]
	public float FadeMinDistance;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F92C", Offset = "0xF2F92C")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x12F5514", Offset = "0x12F5514", VA = "0x12F5514")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x12F559C", Offset = "0x12F559C", VA = "0x12F559C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x12F560C", Offset = "0x12F560C", VA = "0x12F560C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x12F5610", Offset = "0x12F5610", VA = "0x12F5610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x12F5634", Offset = "0x12F5634", VA = "0x12F5634")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x12F5658", Offset = "0x12F5658", VA = "0x12F5658")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000227")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x11C97B8", Offset = "0x11C97B8", VA = "0x11C97B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x11C9864", Offset = "0x11C9864", VA = "0x11C9864")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000228")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000229")]
	public enum States
	{
		[Token(Token = "0x4000CC6")]
		Ready,
		[Token(Token = "0x4000CC7")]
		Aim,
		[Token(Token = "0x4000CC8")]
		CancelAim,
		[Token(Token = "0x4000CC9")]
		PreTeleport,
		[Token(Token = "0x4000CCA")]
		CancelTeleport,
		[Token(Token = "0x4000CCB")]
		Teleporting,
		[Token(Token = "0x4000CCC")]
		PostTeleport
	}

	[Token(Token = "0x200022A")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000CCE")]
		None,
		[Token(Token = "0x4000CCF")]
		Aim,
		[Token(Token = "0x4000CD0")]
		PreTeleport,
		[Token(Token = "0x4000CD1")]
		Teleport
	}

	[Token(Token = "0x200022B")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000CD3")]
		Point,
		[Token(Token = "0x4000CD4")]
		Sphere,
		[Token(Token = "0x4000CD5")]
		Capsule
	}

	[Token(Token = "0x200022C")]
	public class AimData
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2FD44", Offset = "0xF2FD44")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000E9")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x11CCA28", Offset = "0x11CCA28", VA = "0x11CCA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38AD0", Offset = "0xF38AD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x11CCA30", Offset = "0x11CCA30", VA = "0x11CCA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38AE0", Offset = "0xF38AE0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x11CC9B4", Offset = "0x11CC9B4", VA = "0x11CC9B4")]
		public AimData()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x11CCA38", Offset = "0x11CCA38", VA = "0x11CCA38")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF70", Offset = "0xF2AF70")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x11CC800", Offset = "0x11CC800", VA = "0x11CC800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x11CC868", Offset = "0x11CC868", VA = "0x11CC868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x11CAD04", Offset = "0x11CAD04", VA = "0x11CAD04")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x11CC718", Offset = "0x11CC718", VA = "0x11CC718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x11CC71C", Offset = "0x11CC71C", VA = "0x11CC71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x11CC808", Offset = "0x11CC808", VA = "0x11CC808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF80", Offset = "0xF2AF80")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x11CC1E0", Offset = "0x11CC1E0", VA = "0x11CC1E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x11CC248", Offset = "0x11CC248", VA = "0x11CC248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x11CB1EC", Offset = "0x11CB1EC", VA = "0x11CB1EC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x11CC0A8", Offset = "0x11CC0A8", VA = "0x11CC0A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x11CC0AC", Offset = "0x11CC0AC", VA = "0x11CC0AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x11CC1E8", Offset = "0x11CC1E8", VA = "0x11CC1E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AF90", Offset = "0xF2AF90")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x11CC2F4", Offset = "0x11CC2F4", VA = "0x11CC2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x11CC35C", Offset = "0x11CC35C", VA = "0x11CC35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x11CB3D0", Offset = "0x11CB3D0", VA = "0x11CB3D0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x11CC250", Offset = "0x11CC250", VA = "0x11CC250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x11CC254", Offset = "0x11CC254", VA = "0x11CC254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x11CC2FC", Offset = "0x11CC2FC", VA = "0x11CC2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFA0", Offset = "0xF2AFA0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x11CC6A8", Offset = "0x11CC6A8", VA = "0x11CC6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x11CC710", Offset = "0x11CC710", VA = "0x11CC710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x11CB5B4", Offset = "0x11CB5B4", VA = "0x11CB5B4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x11CC5D0", Offset = "0x11CC5D0", VA = "0x11CC5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x11CC5D4", Offset = "0x11CC5D4", VA = "0x11CC5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x11CC6B0", Offset = "0x11CC6B0", VA = "0x11CC6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFB0", Offset = "0xF2AFB0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x11CC408", Offset = "0x11CC408", VA = "0x11CC408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x11CC470", Offset = "0x11CC470", VA = "0x11CC470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x11CB798", Offset = "0x11CB798", VA = "0x11CB798")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x11CC364", Offset = "0x11CC364", VA = "0x11CC364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x11CC368", Offset = "0x11CC368", VA = "0x11CC368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x11CC410", Offset = "0x11CC410", VA = "0x11CC410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFC0", Offset = "0xF2AFC0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x11CC944", Offset = "0x11CC944", VA = "0x11CC944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x11CC9AC", Offset = "0x11CC9AC", VA = "0x11CC9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x11CB97C", Offset = "0x11CB97C", VA = "0x11CB97C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x11CC870", Offset = "0x11CC870", VA = "0x11CC870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x11CC874", Offset = "0x11CC874", VA = "0x11CC874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x11CC94C", Offset = "0x11CC94C", VA = "0x11CC94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFD0", Offset = "0xF2AFD0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x11CC560", Offset = "0x11CC560", VA = "0x11CC560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x11CC5C8", Offset = "0x11CC5C8", VA = "0x11CC5C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x11CBB60", Offset = "0x11CBB60", VA = "0x11CBB60")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x11CC478", Offset = "0x11CC478", VA = "0x11CC478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x11CC47C", Offset = "0x11CC47C", VA = "0x11CC47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11CC568", Offset = "0x11CC568", VA = "0x11CC568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F964", Offset = "0xF2F964")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F99C", Offset = "0xF2F99C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2F9D4", Offset = "0xF2F9D4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FA0C", Offset = "0xF2FA0C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FA44", Offset = "0xF2FA44")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FA7C", Offset = "0xF2FA7C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FAB4", Offset = "0xF2FAB4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FAEC", Offset = "0xF2FAEC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2FB24", Offset = "0xF2FB24")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FB34", Offset = "0xF2FB34")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FB6C", Offset = "0xF2FB6C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2FBB4", Offset = "0xF2FBB4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FBC4", Offset = "0xF2FBC4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FBFC", Offset = "0xF2FBFC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FC34", Offset = "0xF2FC34")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FC6C", Offset = "0xF2FC6C")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000E6")]
	public States CurrentState
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x11CA248", Offset = "0x11CA248", VA = "0x11CA248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3863C", Offset = "0xF3863C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x11CA250", Offset = "0x11CA250", VA = "0x11CA250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3864C", Offset = "0xF3864C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x11CA480", Offset = "0x11CA480", VA = "0x11CA480")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000E8")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x11CA4A8", Offset = "0x11CA4A8", VA = "0x11CA4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3867C", Offset = "0xF3867C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x11CA4B0", Offset = "0x11CA4B0", VA = "0x11CA4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3868C", Offset = "0xF3868C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x11CA258", Offset = "0x11CA258", VA = "0x11CA258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3865C", Offset = "0xF3865C")]
		add
		{
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x11CA2FC", Offset = "0x11CA2FC", VA = "0x11CA2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3866C", Offset = "0xF3866C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x11CABBC", Offset = "0x11CABBC", VA = "0x11CABBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF386D4", Offset = "0xF386D4")]
		add
		{
		}
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x11CAC60", Offset = "0x11CAC60", VA = "0x11CAC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF386E4", Offset = "0xF386E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x11CAD30", Offset = "0x11CAD30", VA = "0x11CAD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38758", Offset = "0xF38758")]
		add
		{
		}
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x11CADD4", Offset = "0x11CADD4", VA = "0x11CADD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38768", Offset = "0xF38768")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x11CAE78", Offset = "0x11CAE78", VA = "0x11CAE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38778", Offset = "0xF38778")]
		add
		{
		}
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x11CAF1C", Offset = "0x11CAF1C", VA = "0x11CAF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38788", Offset = "0xF38788")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x11CB034", Offset = "0x11CB034", VA = "0x11CB034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38798", Offset = "0xF38798")]
		add
		{
		}
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x11CB0D8", Offset = "0x11CB0D8", VA = "0x11CB0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF387A8", Offset = "0xF387A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x11CB218", Offset = "0x11CB218", VA = "0x11CB218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3881C", Offset = "0xF3881C")]
		add
		{
		}
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x11CB2BC", Offset = "0x11CB2BC", VA = "0x11CB2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3882C", Offset = "0xF3882C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x11CB3FC", Offset = "0x11CB3FC", VA = "0x11CB3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF388A0", Offset = "0xF388A0")]
		add
		{
		}
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x11CB4A0", Offset = "0x11CB4A0", VA = "0x11CB4A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF388B0", Offset = "0xF388B0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x11CB5E0", Offset = "0x11CB5E0", VA = "0x11CB5E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38924", Offset = "0xF38924")]
		add
		{
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x11CB684", Offset = "0x11CB684", VA = "0x11CB684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38934", Offset = "0xF38934")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x11CB7C4", Offset = "0x11CB7C4", VA = "0x11CB7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF389A8", Offset = "0xF389A8")]
		add
		{
		}
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x11CB868", Offset = "0x11CB868", VA = "0x11CB868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF389B8", Offset = "0xF389B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x11CB9A8", Offset = "0x11CB9A8", VA = "0x11CB9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38A2C", Offset = "0xF38A2C")]
		add
		{
		}
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x11CBA4C", Offset = "0x11CBA4C", VA = "0x11CBA4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38A3C", Offset = "0xF38A3C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x11CBB8C", Offset = "0x11CBB8C", VA = "0x11CBB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38AB0", Offset = "0xF38AB0")]
		add
		{
		}
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x11CBC30", Offset = "0x11CBC30", VA = "0x11CBC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38AC0", Offset = "0xF38AC0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x11C9F18", Offset = "0x11C9F18", VA = "0x11C9F18")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x11C9F3C", Offset = "0x11C9F3C", VA = "0x11C9F3C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x11CA3A0", Offset = "0x11CA3A0", VA = "0x11CA3A0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x11CA4B8", Offset = "0x11CA4B8", VA = "0x11CA4B8")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x11CA810", Offset = "0x11CA810", VA = "0x11CA810")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3869C", Offset = "0xF3869C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11CA8C8", Offset = "0x11CA8C8", VA = "0x11CA8C8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x11CA990", Offset = "0x11CA990", VA = "0x11CA990")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x11CA9AC", Offset = "0x11CA9AC", VA = "0x11CA9AC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x11CAA74", Offset = "0x11CAA74", VA = "0x11CAA74")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x11CAAB8", Offset = "0x11CAAB8", VA = "0x11CAAB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x11CAB14", Offset = "0x11CAB14", VA = "0x11CAB14", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x11CABB4", Offset = "0x11CABB4", VA = "0x11CABB4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x11CAB44", Offset = "0x11CAB44", VA = "0x11CAB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF386F4", Offset = "0xF386F4")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x11CAFC0", Offset = "0x11CAFC0", VA = "0x11CAFC0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x11CB17C", Offset = "0x11CB17C", VA = "0x11CB17C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF387B8", Offset = "0xF387B8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x11CB360", Offset = "0x11CB360", VA = "0x11CB360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3883C", Offset = "0xF3883C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x11CB544", Offset = "0x11CB544", VA = "0x11CB544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF388C0", Offset = "0xF388C0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x11CB728", Offset = "0x11CB728", VA = "0x11CB728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38944", Offset = "0xF38944")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x11CB90C", Offset = "0x11CB90C", VA = "0x11CB90C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF389C8", Offset = "0xF389C8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x11CBAF0", Offset = "0x11CBAF0", VA = "0x11CBAF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38A4C", Offset = "0xF38A4C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x11CBCD4", Offset = "0x11CBCD4", VA = "0x11CBCD4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x11CBE18", Offset = "0x11CBE18", VA = "0x11CBE18")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x11CBE4C", Offset = "0x11CBE4C", VA = "0x11CBE4C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x11CBF6C", Offset = "0x11CBF6C", VA = "0x11CBF6C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x11CC098", Offset = "0x11CC098", VA = "0x11CC098")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000234")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1207874", Offset = "0x1207874", VA = "0x1207874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D20", Offset = "0xF38D20")]
		add
		{
		}
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1207918", Offset = "0x1207918", VA = "0x1207918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D30", Offset = "0xF38D30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x12079BC", Offset = "0x12079BC", VA = "0x12079BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D40", Offset = "0xF38D40")]
		add
		{
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1207A60", Offset = "0x1207A60", VA = "0x1207A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D50", Offset = "0xF38D50")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1207B04", Offset = "0x1207B04", VA = "0x1207B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1207BAC", Offset = "0x1207BAC", VA = "0x1207BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1207BB0", Offset = "0x1207BB0", VA = "0x1207BB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x1207C24", Offset = "0x1207C24", VA = "0x1207C24")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x1207D94", Offset = "0x1207D94", VA = "0x1207D94")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x1208078", Offset = "0x1208078", VA = "0x1208078")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x1208268", Offset = "0x1208268", VA = "0x1208268")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000235")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x14A8EEC", Offset = "0x14A8EEC", VA = "0x14A8EEC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x14A8F80", Offset = "0x14A8F80", VA = "0x14A8F80", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C58")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x14A9050", Offset = "0x14A9050", VA = "0x14A9050")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000236")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FD74", Offset = "0xF2FD74")]
	public float Range;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x14A9060", Offset = "0x14A9060", VA = "0x14A9060", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x14A91BC", Offset = "0x14A91BC", VA = "0x14A91BC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000237")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FDAC", Offset = "0xF2FDAC")]
	public float Range;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FDE4", Offset = "0xF2FDE4")]
	public float MinimumElevation;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FE1C", Offset = "0xF2FE1C")]
	public float Gravity;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FE54", Offset = "0xF2FE54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2FE54", Offset = "0xF2FE54")]
	public float AimVelocity;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FEB0", Offset = "0xF2FEB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF2FEB0", Offset = "0xF2FEB0")]
	public float AimStep;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x14A91CC", Offset = "0x14A91CC", VA = "0x14A91CC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x14A9418", Offset = "0x14A9418", VA = "0x14A9418")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000238")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FF08", Offset = "0xF2FF08")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x14A942C", Offset = "0x14A942C", VA = "0x14A942C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x14A9510", Offset = "0x14A9510", VA = "0x14A9510")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x14A9540", Offset = "0x14A9540", VA = "0x14A9540")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x14A9570", Offset = "0x14A9570", VA = "0x14A9570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x14A9610", Offset = "0x14A9610", VA = "0x14A9610", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x14A967C", Offset = "0x14A967C", VA = "0x14A967C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x14A96E4", Offset = "0x14A96E4", VA = "0x14A96E4")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000239")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2FF40", Offset = "0xF2FF40")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FF50", Offset = "0xF2FF50")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FF88", Offset = "0xF2FF88")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF2FFC0", Offset = "0xF2FFC0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000F8")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x14A9800", Offset = "0x14A9800", VA = "0x14A9800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D60", Offset = "0xF38D60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x14A9808", Offset = "0x14A9808", VA = "0x14A9808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D70", Offset = "0xF38D70")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x14A99B8", Offset = "0x14A99B8", VA = "0x14A99B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D80", Offset = "0xF38D80")]
		add
		{
		}
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x14A9A5C", Offset = "0x14A9A5C", VA = "0x14A9A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38D90", Offset = "0xF38D90")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x14A9814", Offset = "0x14A9814", VA = "0x14A9814")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x14A989C", Offset = "0x14A989C", VA = "0x14A989C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x14A9974", Offset = "0x14A9974", VA = "0x14A9974")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x14A99B4", Offset = "0x14A99B4", VA = "0x14A99B4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x14A9B00", Offset = "0x14A9B00", VA = "0x14A9B00")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x14A9B68", Offset = "0x14A9B68", VA = "0x14A9B68")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x14A9B88", Offset = "0x14A9B88", VA = "0x14A9B88", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200023A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFE0", Offset = "0xF2AFE0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x14AA24C", Offset = "0x14AA24C", VA = "0x14AA24C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x14AA2B4", Offset = "0x14AA2B4", VA = "0x14AA2B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x14A9F98", Offset = "0x14A9F98", VA = "0x14A9F98")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x14AA1BC", Offset = "0x14AA1BC", VA = "0x14AA1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x14AA1C0", Offset = "0x14AA1C0", VA = "0x14AA1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x14AA254", Offset = "0x14AA254", VA = "0x14AA254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2AFF0", Offset = "0xF2AFF0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x14AA14C", Offset = "0x14AA14C", VA = "0x14AA14C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x14AA1B4", Offset = "0x14AA1B4", VA = "0x14AA1B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x14AA034", Offset = "0x14AA034", VA = "0x14AA034")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x14AA0B8", Offset = "0x14AA0B8", VA = "0x14AA0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x14AA0BC", Offset = "0x14AA0BC", VA = "0x14AA0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x14AA154", Offset = "0x14AA154", VA = "0x14AA154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x14A9D68", Offset = "0x14A9D68", VA = "0x14A9D68")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x14A9E14", Offset = "0x14A9E14", VA = "0x14A9E14", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x14A9E6C", Offset = "0x14A9E6C", VA = "0x14A9E6C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x14A9F28", Offset = "0x14A9F28", VA = "0x14A9F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38DA0", Offset = "0xF38DA0")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x14A9FC4", Offset = "0x14A9FC4", VA = "0x14A9FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38E04", Offset = "0xF38E04")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C75")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000C76")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x14AA060", Offset = "0x14AA060", VA = "0x14AA060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38E68", Offset = "0xF38E68")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x14AA08C", Offset = "0x14AA08C", VA = "0x14AA08C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38E78", Offset = "0xF38E78")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200023D")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30008", Offset = "0xF30008")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30018", Offset = "0xF30018")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30050", Offset = "0xF30050")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30088", Offset = "0xF30088")]
	public bool FastTeleport;

	[Token(Token = "0x170000FD")]
	public Transform Pointer
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x14AA2BC", Offset = "0x14AA2BC", VA = "0x14AA2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38F28", Offset = "0xF38F28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x14AA2C4", Offset = "0x14AA2C4", VA = "0x14AA2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38F38", Offset = "0xF38F38")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x14AA2CC", Offset = "0x14AA2CC", VA = "0x14AA2CC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x14AA428", Offset = "0x14AA428", VA = "0x14AA428", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x14AA4E0", Offset = "0x14AA4E0", VA = "0x14AA4E0")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200023E")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200023F")]
	public enum InputModes
	{
		[Token(Token = "0x4000D26")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000D27")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000D28")]
		ThumbstickTeleport,
		[Token(Token = "0x4000D29")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000240")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000D2B")]
		A,
		[Token(Token = "0x4000D2C")]
		B,
		[Token(Token = "0x4000D2D")]
		LeftTrigger,
		[Token(Token = "0x4000D2E")]
		LeftThumbstick,
		[Token(Token = "0x4000D2F")]
		RightTrigger,
		[Token(Token = "0x4000D30")]
		RightThumbstick,
		[Token(Token = "0x4000D31")]
		X,
		[Token(Token = "0x4000D32")]
		Y
	}

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF300C0", Offset = "0xF300C0")]
	public InputModes InputMode;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF300F8", Offset = "0xF300F8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30130", Offset = "0xF30130")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30168", Offset = "0xF30168")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x14AA4E4", Offset = "0x14AA4E4", VA = "0x14AA4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x14AA4E8", Offset = "0x14AA4E8", VA = "0x14AA4E8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x14AA930", Offset = "0x14AA930", VA = "0x14AA930", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x14AA9F0", Offset = "0x14AA9F0", VA = "0x14AA9F0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000241")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000242")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000D37")]
		HeadRelative,
		[Token(Token = "0x4000D38")]
		ForwardFacing
	}

	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B000", Offset = "0xF2B000")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x14AAE80", Offset = "0x14AAE80", VA = "0x14AAE80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x14AAEE8", Offset = "0x14AAEE8", VA = "0x14AAEE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x14AAC5C", Offset = "0x14AAC5C", VA = "0x14AAC5C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x14AADD8", Offset = "0x14AADD8", VA = "0x14AADD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x14AADDC", Offset = "0x14AADDC", VA = "0x14AADDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x14AAE88", Offset = "0x14AAE88", VA = "0x14AAE88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x14AAA9C", Offset = "0x14AAA9C", VA = "0x14AAA9C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x14AAB50", Offset = "0x14AAB50", VA = "0x14AAB50")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x14AAB58", Offset = "0x14AAB58", VA = "0x14AAB58", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x14AABA4", Offset = "0x14AABA4", VA = "0x14AABA4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x14AABEC", Offset = "0x14AABEC", VA = "0x14AABEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF38F48", Offset = "0xF38F48")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000C94")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x14AAC88", Offset = "0x14AAC88", VA = "0x14AAC88")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x14AADAC", Offset = "0x14AADAC", VA = "0x14AADAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF38FAC", Offset = "0xF38FAC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000244")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x14AAEF0", Offset = "0x14AAEF0", VA = "0x14AAEF0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x14AAEF4", Offset = "0x14AAEF4", VA = "0x14AAEF4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x14AAF70", Offset = "0x14AAF70", VA = "0x14AAF70")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000245")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF301A0", Offset = "0xF301A0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF301D8", Offset = "0xF301D8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30210", Offset = "0xF30210")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30248", Offset = "0xF30248")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x14AAF74", Offset = "0x14AAF74", VA = "0x14AAF74", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x14AAFE4", Offset = "0x14AAFE4", VA = "0x14AAFE4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x14AB45C", Offset = "0x14AB45C", VA = "0x14AB45C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000246")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30280", Offset = "0xF30280")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF302B8", Offset = "0xF302B8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF302F0", Offset = "0xF302F0")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x14AB460", Offset = "0x14AB460", VA = "0x14AB460", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x14AB4A4", Offset = "0x14AB4A4", VA = "0x14AB4A4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x14AB914", Offset = "0x14AB914", VA = "0x14AB914")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000247")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x14AB924", Offset = "0x14AB924", VA = "0x14AB924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x14AB928", Offset = "0x14AB928", VA = "0x14AB928")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x14AB930", Offset = "0x14AB930", VA = "0x14AB930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x14ABA18", Offset = "0x14ABA18", VA = "0x14ABA18")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x14ABA40", Offset = "0x14ABA40", VA = "0x14ABA40")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000248")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30328", Offset = "0xF30328")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000100")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x14ABA58", Offset = "0x14ABA58", VA = "0x14ABA58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3900C", Offset = "0xF3900C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x14ABA60", Offset = "0x14ABA60", VA = "0x14ABA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3901C", Offset = "0xF3901C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x14A8F1C", Offset = "0x14A8F1C", VA = "0x14A8F1C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x14A9024", Offset = "0x14A9024", VA = "0x14A9024", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x14ABA68", Offset = "0x14ABA68", VA = "0x14ABA68")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3902C", Offset = "0xF3902C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x14A9670", Offset = "0x14A9670", VA = "0x14A9670", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x14A96DC", Offset = "0x14A96DC", VA = "0x14A96DC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x14A9058", Offset = "0x14A9058", VA = "0x14A9058")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000249")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B010", Offset = "0xF2B010")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x14AC0BC", Offset = "0x14AC0BC", VA = "0x14AC0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x14AC124", Offset = "0x14AC124", VA = "0x14AC124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x14ABCB8", Offset = "0x14ABCB8", VA = "0x14ABCB8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x14ABE50", Offset = "0x14ABE50", VA = "0x14ABE50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x14ABE54", Offset = "0x14ABE54", VA = "0x14ABE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x14AC0C4", Offset = "0x14AC0C4", VA = "0x14AC0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30338", Offset = "0xF30338")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000D52")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x14ABB30", Offset = "0x14ABB30", VA = "0x14ABB30")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x14ABBF4", Offset = "0x14ABBF4", VA = "0x14ABBF4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x14ABC20", Offset = "0x14ABC20", VA = "0x14ABC20", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x14ABC48", Offset = "0x14ABC48", VA = "0x14ABC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39064", Offset = "0xF39064")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x14ABCE4", Offset = "0x14ABCE4", VA = "0x14ABCE4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000CB8")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x14ABD00", Offset = "0x14ABD00", VA = "0x14ABD00", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x14ABE24", Offset = "0x14ABE24", VA = "0x14ABE24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF390C8", Offset = "0xF390C8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200024B")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x14AC12C", Offset = "0x14AC12C", VA = "0x14AC12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x14AC18C", Offset = "0x14AC18C", VA = "0x14AC18C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x14AC310", Offset = "0x14AC310", VA = "0x14AC310", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x14AC400", Offset = "0x14AC400", VA = "0x14AC400")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF39128", Offset = "0xF39128")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x14AC404", Offset = "0x14AC404", VA = "0x14AC404")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200024C")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30370", Offset = "0xF30370")]
	public float LOSOffset;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF303A8", Offset = "0xF303A8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x14AC410", Offset = "0x14AC410", VA = "0x14AC410", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x14AC640", Offset = "0x14AC640", VA = "0x14AC640")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200024D")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x14AC64C", Offset = "0x14AC64C", VA = "0x14AC64C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x14AC7D0", Offset = "0x14AC7D0", VA = "0x14AC7D0")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200024E")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x14AC7D4", Offset = "0x14AC7D4", VA = "0x14AC7D4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x14AC86C", Offset = "0x14AC86C", VA = "0x14AC86C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CCC")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x14AC900", Offset = "0x14AC900", VA = "0x14AC900")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200024F")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B020", Offset = "0xF2B020")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x14ACC68", Offset = "0x14ACC68", VA = "0x14ACC68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x14ACCD0", Offset = "0x14ACCD0", VA = "0x14ACCD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x14AC9A4", Offset = "0x14AC9A4", VA = "0x14AC9A4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x14ACB68", Offset = "0x14ACB68", VA = "0x14ACB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x14ACB6C", Offset = "0x14ACB6C", VA = "0x14ACB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x14ACC70", Offset = "0x14ACC70", VA = "0x14ACC70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF303E0", Offset = "0xF303E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF303E0", Offset = "0xF303E0")]
	public float TransitionDuration;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30438", Offset = "0xF30438")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF30438", Offset = "0xF30438")]
	public float TeleportDelay;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF3048C", Offset = "0xF3048C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x14AC908", Offset = "0x14AC908", VA = "0x14AC908", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x14AC934", Offset = "0x14AC934", VA = "0x14AC934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39160", Offset = "0xF39160")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x14AC9D0", Offset = "0x14AC9D0", VA = "0x14AC9D0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000251")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x14ACCD8", Offset = "0x14ACCD8", VA = "0x14ACCD8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x14ACCF4", Offset = "0x14ACCF4", VA = "0x14ACCF4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000252")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B030", Offset = "0xF2B030")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x14ACF40", Offset = "0x14ACF40", VA = "0x14ACF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x14ACFA8", Offset = "0x14ACFA8", VA = "0x14ACFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x14ACD98", Offset = "0x14ACD98", VA = "0x14ACD98")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x14ACE0C", Offset = "0x14ACE0C", VA = "0x14ACE0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x14ACE10", Offset = "0x14ACE10", VA = "0x14ACE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x14ACF48", Offset = "0x14ACF48", VA = "0x14ACF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF304C4", Offset = "0xF304C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF304C4", Offset = "0xF304C4")]
	public float TransitionDuration;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x14ACCFC", Offset = "0x14ACCFC", VA = "0x14ACCFC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x14ACD28", Offset = "0x14ACD28", VA = "0x14ACD28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39214", Offset = "0xF39214")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x14ACDC4", Offset = "0x14ACDC4", VA = "0x14ACDC4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000254")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000107")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x12AEC64", Offset = "0x12AEC64", VA = "0x12AEC64")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000108")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x12AEF20", Offset = "0x12AEF20", VA = "0x12AEF20")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000109")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x12A7830", Offset = "0x12A7830", VA = "0x12A7830")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010A")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x12A8AA0", Offset = "0x12A8AA0", VA = "0x12A8AA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010B")]
	public static long Duration
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x12A8C84", Offset = "0x12A8C84", VA = "0x12A8C84")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700010C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x12A8B90", Offset = "0x12A8B90", VA = "0x12A8B90")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x12A8214", Offset = "0x12A8214", VA = "0x12A8214")]
		set
		{
		}
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x12A92E4", Offset = "0x12A92E4", VA = "0x12A92E4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x12A9028", Offset = "0x12A9028", VA = "0x12A9028")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x12A7EA4", Offset = "0x12A7EA4", VA = "0x12A7EA4")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x12A8028", Offset = "0x12A8028", VA = "0x12A8028")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x12A8E50", Offset = "0x12A8E50", VA = "0x12A8E50")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x12A94D8", Offset = "0x12A94D8", VA = "0x12A94D8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x12A88E4", Offset = "0x12A88E4", VA = "0x12A88E4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000255")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000012")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x12F5130", Offset = "0x12F5130", VA = "0x12F5130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF392C8", Offset = "0xF392C8")]
		add
		{
		}
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x12F51D4", Offset = "0x12F51D4", VA = "0x12F51D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF392D8", Offset = "0xF392D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x12F5278", Offset = "0x12F5278", VA = "0x12F5278", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x12F528C", Offset = "0x12F528C", VA = "0x12F528C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000256")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000257")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D80")]
		Play,
		[Token(Token = "0x4000D81")]
		Pause,
		[Token(Token = "0x4000D82")]
		FastForward,
		[Token(Token = "0x4000D83")]
		Rewind,
		[Token(Token = "0x4000D84")]
		SkipForward,
		[Token(Token = "0x4000D85")]
		SkipBack,
		[Token(Token = "0x4000D86")]
		Stop
	}

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700010D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x11D01CC", Offset = "0x11D01CC", VA = "0x11D01CC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x11D01D4", Offset = "0x11D01D4", VA = "0x11D01D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x11D01F8", Offset = "0x11D01F8", VA = "0x11D01F8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x11D16C4", Offset = "0x11D16C4", VA = "0x11D16C4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000258")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D9A")]
		_360,
		[Token(Token = "0x4000D9B")]
		_180,
		[Token(Token = "0x4000D9C")]
		Quad
	}

	[Token(Token = "0x200025A")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D9E")]
		Mono,
		[Token(Token = "0x4000D9F")]
		TopBottom,
		[Token(Token = "0x4000DA0")]
		LeftRight
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B040", Offset = "0xF2B040")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x12A97A0", Offset = "0x12A97A0", VA = "0x12A97A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x12A9808", Offset = "0x12A9808", VA = "0x12A9808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x12A7BA0", Offset = "0x12A7BA0", VA = "0x12A7BA0")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x12A961C", Offset = "0x12A961C", VA = "0x12A961C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x12A9620", Offset = "0x12A9620", VA = "0x12A9620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x12A97A8", Offset = "0x12A97A8", VA = "0x12A97A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B050", Offset = "0xF2B050")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x12A7E08", Offset = "0x12A7E08", VA = "0x12A7E08")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x12A9210", Offset = "0x12A9210", VA = "0x12A9210")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3054C", Offset = "0xF3054C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3055C", Offset = "0xF3055C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3056C", Offset = "0xF3056C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700010E")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x12A75E4", Offset = "0x12A75E4", VA = "0x12A75E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF392E8", Offset = "0xF392E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x12A75EC", Offset = "0x12A75EC", VA = "0x12A75EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF392F8", Offset = "0xF392F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public long Duration
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x12A75F8", Offset = "0x12A75F8", VA = "0x12A75F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF39308", Offset = "0xF39308")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x12A7600", Offset = "0x12A7600", VA = "0x12A7600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF39318", Offset = "0xF39318")]
		private set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x12A7608", Offset = "0x12A7608", VA = "0x12A7608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF39328", Offset = "0xF39328")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x12A7610", Offset = "0x12A7610", VA = "0x12A7610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF39338", Offset = "0xF39338")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x12A7618", Offset = "0x12A7618", VA = "0x12A7618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x12A7898", Offset = "0x12A7898", VA = "0x12A7898")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x12A7900", Offset = "0x12A7900", VA = "0x12A7900")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x12A7B30", Offset = "0x12A7B30", VA = "0x12A7B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39348", Offset = "0xF39348")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x12A7BCC", Offset = "0x12A7BCC", VA = "0x12A7BCC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x12A7E10", Offset = "0x12A7E10", VA = "0x12A7E10")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x12A7F98", Offset = "0x12A7F98", VA = "0x12A7F98")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x12A811C", Offset = "0x12A811C", VA = "0x12A811C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x12A8354", Offset = "0x12A8354", VA = "0x12A8354")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x12A8D78", Offset = "0x12A8D78", VA = "0x12A8D78")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x12A8F98", Offset = "0x12A8F98", VA = "0x12A8F98")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x12A911C", Offset = "0x12A911C", VA = "0x12A911C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x12A9200", Offset = "0x12A9200", VA = "0x12A9200")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200025D")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200025E")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000DBD")]
		Playing,
		[Token(Token = "0x4000DBE")]
		Paused,
		[Token(Token = "0x4000DBF")]
		Rewinding,
		[Token(Token = "0x4000DC0")]
		FastForwarding
	}

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x12A9810", Offset = "0x12A9810", VA = "0x12A9810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x12A9AC4", Offset = "0x12A9AC4", VA = "0x12A9AC4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x12A9BF0", Offset = "0x12A9BF0", VA = "0x12A9BF0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x12A9CFC", Offset = "0x12A9CFC", VA = "0x12A9CFC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x12A9DDC", Offset = "0x12A9DDC", VA = "0x12A9DDC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x12A9CD0", Offset = "0x12A9CD0", VA = "0x12A9CD0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x12A9EBC", Offset = "0x12A9EBC", VA = "0x12A9EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x12A99B8", Offset = "0x12A99B8", VA = "0x12A99B8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x12AA2B8", Offset = "0x12AA2B8", VA = "0x12AA2B8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200025F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B060", Offset = "0xF2B060")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	private enum CubeFace
	{
		[Token(Token = "0x4000DD5")]
		Right,
		[Token(Token = "0x4000DD6")]
		Left,
		[Token(Token = "0x4000DD7")]
		Top,
		[Token(Token = "0x4000DD8")]
		Bottom,
		[Token(Token = "0x4000DD9")]
		Front,
		[Token(Token = "0x4000DDA")]
		Back,
		[Token(Token = "0x4000DDB")]
		COUNT
	}

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x19F38CC", Offset = "0x19F38CC", VA = "0x19F38CC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x19F3A2C", Offset = "0x19F3A2C", VA = "0x19F3A2C")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x19F3BE8", Offset = "0x19F3BE8", VA = "0x19F3BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x19F40C0", Offset = "0x19F40C0", VA = "0x19F40C0")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x19F4394", Offset = "0x19F4394", VA = "0x19F4394")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x19F55F0", Offset = "0x19F55F0", VA = "0x19F55F0")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x19F5650", Offset = "0x19F5650", VA = "0x19F5650")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x19F4714", Offset = "0x19F4714", VA = "0x19F4714")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x19F5738", Offset = "0x19F5738", VA = "0x19F5738")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x19F5924", Offset = "0x19F5924", VA = "0x19F5924")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x19F4BCC", Offset = "0x19F4BCC", VA = "0x19F4BCC")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x19F4EF4", Offset = "0x19F4EF4", VA = "0x19F4EF4")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x19F524C", Offset = "0x19F524C", VA = "0x19F524C")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x19F5AD8", Offset = "0x19F5AD8", VA = "0x19F5AD8")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000261")]
public static class VectorUtil
{
	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x17330A8", Offset = "0x17330A8", VA = "0x17330A8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000262")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1351988", Offset = "0x1351988", VA = "0x1351988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1351D58", Offset = "0x1351D58", VA = "0x1351D58")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1351E10", Offset = "0x1351E10", VA = "0x1351E10")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x1352010", Offset = "0x1352010", VA = "0x1352010")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x13520F8", Offset = "0x13520F8", VA = "0x13520F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x13521D4", Offset = "0x13521D4", VA = "0x13521D4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1352240", Offset = "0x1352240", VA = "0x1352240")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1352248", Offset = "0x1352248", VA = "0x1352248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3940C", Offset = "0xF3940C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x13522A4", Offset = "0x13522A4", VA = "0x13522A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3941C", Offset = "0xF3941C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1352300", Offset = "0x1352300", VA = "0x1352300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3942C", Offset = "0xF3942C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x135235C", Offset = "0x135235C", VA = "0x135235C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3943C", Offset = "0xF3943C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000263")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B0E4", Offset = "0xF2B0E4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1463D10", Offset = "0x1463D10", VA = "0x1463D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x1463D78", Offset = "0x1463D78", VA = "0x1463D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1463BC0", Offset = "0x1463BC0", VA = "0x1463BC0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1463BF4", Offset = "0x1463BF4", VA = "0x1463BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1463BF8", Offset = "0x1463BF8", VA = "0x1463BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1463D18", Offset = "0x1463D18", VA = "0x1463D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x14638C4", Offset = "0x14638C4", VA = "0x14638C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x14639C4", Offset = "0x14639C4", VA = "0x14639C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x1463954", Offset = "0x1463954", VA = "0x1463954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3944C", Offset = "0xF3944C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x1463BEC", Offset = "0x1463BEC", VA = "0x1463BEC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000265")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3058C", Offset = "0xF3058C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF305A8", Offset = "0xF305A8")]
	public int SubdivisionsV;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x12F5904", Offset = "0x12F5904", VA = "0x12F5904")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x12F63BC", Offset = "0x12F63BC", VA = "0x12F63BC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000266")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000115")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x11C986C", Offset = "0x11C986C", VA = "0x11C986C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x11C98C4", Offset = "0x11C98C4", VA = "0x11C98C4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x11C9C08", Offset = "0x11C9C08", VA = "0x11C9C08")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x11C9CEC", Offset = "0x11C9CEC", VA = "0x11C9CEC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF39500", Offset = "0xF39500")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000D48")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000D4A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000D4B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000D4C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000D4D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000D4E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000D4F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x11C9D54", Offset = "0x11C9D54", VA = "0x11C9D54")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x11C9D90", Offset = "0x11C9D90", VA = "0x11C9D90")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x11C9E04", Offset = "0x11C9E04", VA = "0x11C9E04")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x11C9F60", Offset = "0x11C9F60", VA = "0x11C9F60")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x11CA034", Offset = "0x11CA034", VA = "0x11CA034")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x11C9B14", Offset = "0x11C9B14", VA = "0x11C9B14")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x11CA0F4", Offset = "0x11CA0F4", VA = "0x11CA0F4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x11CA15C", Offset = "0x11CA15C", VA = "0x11CA15C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x11CA240", Offset = "0x11CA240", VA = "0x11CA240")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000267")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B104", Offset = "0xF2B104")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public enum DrawMode
	{
		[Token(Token = "0x4000E06")]
		Opaque,
		[Token(Token = "0x4000E07")]
		OpaqueWithClip,
		[Token(Token = "0x4000E08")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000E09")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000116")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x19F36B0", Offset = "0x19F36B0", VA = "0x19F36B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x19F3744", Offset = "0x19F3744", VA = "0x19F3744")]
		set
		{
		}
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x19F2040", Offset = "0x19F2040", VA = "0x19F2040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x19F2CB0", Offset = "0x19F2CB0", VA = "0x19F2CB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x19F2D34", Offset = "0x19F2D34", VA = "0x19F2D34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x19F2E28", Offset = "0x19F2E28", VA = "0x19F2E28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x19F2F1C", Offset = "0x19F2F1C", VA = "0x19F2F1C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x19F3120", Offset = "0x19F3120", VA = "0x19F3120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x19F3814", Offset = "0x19F3814", VA = "0x19F3814")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000269")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B168", Offset = "0xF2B168")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x138890C", Offset = "0x138890C", VA = "0x138890C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1388A1C", Offset = "0x1388A1C", VA = "0x1388A1C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x138874C", Offset = "0x138874C", VA = "0x138874C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1388914", Offset = "0x1388914", VA = "0x1388914")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1388A14", Offset = "0x1388A14", VA = "0x1388A14")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200026B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2B178", Offset = "0xF2B178")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000E18")]
		MouseXAndY,
		[Token(Token = "0x4000E19")]
		MouseX,
		[Token(Token = "0x4000E1A")]
		MouseY
	}

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x12A7220", Offset = "0x12A7220", VA = "0x12A7220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x12A7480", Offset = "0x12A7480", VA = "0x12A7480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x12A7540", Offset = "0x12A7540", VA = "0x12A7540")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200026D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000E21")]
		Uninitialized = -1,
		[Token(Token = "0x4000E22")]
		NotEnabled,
		[Token(Token = "0x4000E23")]
		Success,
		[Token(Token = "0x4000E24")]
		StreamError,
		[Token(Token = "0x4000E25")]
		ProcessError,
		[Token(Token = "0x4000E26")]
		MaxStatValue
	}

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000117")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x12B823C", Offset = "0x12B823C", VA = "0x12B823C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x12B8244", Offset = "0x12B8244", VA = "0x12B8244")]
		set
		{
		}
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x12B8250", Offset = "0x12B8250", VA = "0x12B8250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x12B846C", Offset = "0x12B846C", VA = "0x12B846C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x12B86E0", Offset = "0x12B86E0", VA = "0x12B86E0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200026F")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	private enum Parameters
	{
		[Token(Token = "0x4000E32")]
		P_GAIN,
		[Token(Token = "0x4000E33")]
		P_USEINVSQR,
		[Token(Token = "0x4000E34")]
		P_NEAR,
		[Token(Token = "0x4000E35")]
		P_FAR,
		[Token(Token = "0x4000E36")]
		P_RADIUS,
		[Token(Token = "0x4000E37")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000E38")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000E39")]
		P_AMBISTAT,
		[Token(Token = "0x4000E3A")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000E3B")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000E3C")]
		P_SENDLEVEL,
		[Token(Token = "0x4000E3D")]
		P_NUM
	}

	[Token(Token = "0x4000E27")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000118")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x12B893C", Offset = "0x12B893C", VA = "0x12B893C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x12B8944", Offset = "0x12B8944", VA = "0x12B8944")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public float Gain
	{
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x12B8950", Offset = "0x12B8950", VA = "0x12B8950")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x12B8958", Offset = "0x12B8958", VA = "0x12B8958")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x12B89DC", Offset = "0x12B89DC", VA = "0x12B89DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x12B89E4", Offset = "0x12B89E4", VA = "0x12B89E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public float Near
	{
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x12B89F0", Offset = "0x12B89F0", VA = "0x12B89F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x12B89F8", Offset = "0x12B89F8", VA = "0x12B89F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public float Far
	{
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x12B8A80", Offset = "0x12B8A80", VA = "0x12B8A80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x12B8A88", Offset = "0x12B8A88", VA = "0x12B8A88")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x12B8B10", Offset = "0x12B8B10", VA = "0x12B8B10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x12B8B18", Offset = "0x12B8B18", VA = "0x12B8B18")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public float ReverbSend
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x12B8BA0", Offset = "0x12B8BA0", VA = "0x12B8BA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x12B8BA8", Offset = "0x12B8BA8", VA = "0x12B8BA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x12B8C30", Offset = "0x12B8C30", VA = "0x12B8C30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x12B8C38", Offset = "0x12B8C38", VA = "0x12B8C38")]
		set
		{
		}
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x12B8764", Offset = "0x12B8764", VA = "0x12B8764")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xF39538", Offset = "0xF39538")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x12B885C", Offset = "0x12B885C", VA = "0x12B885C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x12B8C44", Offset = "0x12B8C44", VA = "0x12B8C44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x12B8DB8", Offset = "0x12B8DB8", VA = "0x12B8DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x12B8DBC", Offset = "0x12B8DBC", VA = "0x12B8DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x12B8CB0", Offset = "0x12B8CB0", VA = "0x12B8CB0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x12B8E84", Offset = "0x12B8E84", VA = "0x12B8E84")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x12B92E4", Offset = "0x12B92E4", VA = "0x12B92E4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x12B87DC", Offset = "0x12B87DC", VA = "0x12B87DC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x12B93B4", Offset = "0x12B93B4", VA = "0x12B93B4")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000271")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000E3F")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000E41")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x259F6AC", Offset = "0x259F6AC", VA = "0x259F6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x259F6B8", Offset = "0x259F6B8", VA = "0x259F6B8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x259F770", Offset = "0x259F770", VA = "0x259F770")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x259F6F0", Offset = "0x259F6F0", VA = "0x259F6F0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x259F7F0", Offset = "0x259F7F0", VA = "0x259F7F0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000272")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000273")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000274")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000E48")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000120")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x25A226C", Offset = "0x25A226C", VA = "0x25A226C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public string filePath
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x25A22F8", Offset = "0x25A22F8", VA = "0x25A22F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x25A2370", Offset = "0x25A2370", VA = "0x25A2370")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x25A24B8", Offset = "0x25A24B8", VA = "0x25A24B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x25A24BC", Offset = "0x25A24BC", VA = "0x25A24BC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x25A2A1C", Offset = "0x25A2A1C", VA = "0x25A2A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x25A2DB4", Offset = "0x25A2DB4", VA = "0x25A2DB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x25A2F10", Offset = "0x25A2F10", VA = "0x25A2F10")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x25A35E8", Offset = "0x25A35E8", VA = "0x25A35E8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x25A3624", Offset = "0x25A3624", VA = "0x25A3624")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x25A4DCC", Offset = "0x25A4DCC", VA = "0x25A4DCC")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x25A4CA4", Offset = "0x25A4CA4", VA = "0x25A4CA4")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x25A2854", Offset = "0x25A2854", VA = "0x25A2854")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x25A2688", Offset = "0x25A2688", VA = "0x25A2688")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x25A53E0", Offset = "0x25A53E0", VA = "0x25A53E0")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x25A581C", Offset = "0x25A581C", VA = "0x25A581C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000275")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000276")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000E51")]
		Int8,
		[Token(Token = "0x4000E52")]
		UInt8,
		[Token(Token = "0x4000E53")]
		Int16,
		[Token(Token = "0x4000E54")]
		UInt16,
		[Token(Token = "0x4000E55")]
		Int32,
		[Token(Token = "0x4000E56")]
		UInt32,
		[Token(Token = "0x4000E57")]
		Int64,
		[Token(Token = "0x4000E58")]
		UInt64,
		[Token(Token = "0x4000E59")]
		Float16,
		[Token(Token = "0x4000E5A")]
		Float32,
		[Token(Token = "0x4000E5B")]
		Float64
	}

	[Token(Token = "0x2000277")]
	public class ClientType
	{
		[Token(Token = "0x4000E5C")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000E5D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000E5E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000E5F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000E60")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000E61")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000E62")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000E63")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000E64")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000E65")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000E66")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000E67")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000E68")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000E69")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x259FCA4", Offset = "0x259FCA4", VA = "0x259FCA4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000278")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000DA6")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000DA7")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000DA8")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000DA9")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DAA")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000DAB")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DAC")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DAD")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DAE")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DAF")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DB0")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DB1")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000DB2")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DB3")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DB4")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000279")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000E6A")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000123")]
		private IntPtr context
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x25A0914", Offset = "0x25A0914", VA = "0x25A0914")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x25A0978", Offset = "0x25A0978", VA = "0x25A0978")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x25A0A08", Offset = "0x25A0A08", VA = "0x25A0A08")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x25A0A98", Offset = "0x25A0A98", VA = "0x25A0A98", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x25A0ABC", Offset = "0x25A0ABC", VA = "0x25A0ABC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x25A0B4C", Offset = "0x25A0B4C", VA = "0x25A0B4C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x25A0B70", Offset = "0x25A0B70", VA = "0x25A0B70")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x25A0BFC", Offset = "0x25A0BFC", VA = "0x25A0BFC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x25A0C20", Offset = "0x25A0C20", VA = "0x25A0C20")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x25A0CA0", Offset = "0x25A0CA0", VA = "0x25A0CA0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x25A0CA8", Offset = "0x25A0CA8", VA = "0x25A0CA8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x25A0DC8", Offset = "0x25A0DC8", VA = "0x25A0DC8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x25A0EC0", Offset = "0x25A0EC0", VA = "0x25A0EC0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x25A0F58", Offset = "0x25A0F58", VA = "0x25A0F58", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x25A0F64", Offset = "0x25A0F64", VA = "0x25A0F64")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x25A1090", Offset = "0x25A1090", VA = "0x25A1090", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x25A109C", Offset = "0x25A109C", VA = "0x25A109C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x25A1148", Offset = "0x25A1148", VA = "0x25A1148", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x25A1154", Offset = "0x25A1154", VA = "0x25A1154")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x25A1200", Offset = "0x25A1200", VA = "0x25A1200", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x25A120C", Offset = "0x25A120C", VA = "0x25A120C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x25A12B8", Offset = "0x25A12B8", VA = "0x25A12B8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x25A12C4", Offset = "0x25A12C4", VA = "0x25A12C4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x25A1350", Offset = "0x25A1350", VA = "0x25A1350", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x25A1374", Offset = "0x25A1374", VA = "0x25A1374")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x25A13F4", Offset = "0x25A13F4", VA = "0x25A13F4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x25A13FC", Offset = "0x25A13FC", VA = "0x25A13FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x25A14A4", Offset = "0x25A14A4", VA = "0x25A14A4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x25A14B0", Offset = "0x25A14B0", VA = "0x25A14B0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x25A1558", Offset = "0x25A1558", VA = "0x25A1558", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x25A1568", Offset = "0x25A1568", VA = "0x25A1568")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x25A15F8", Offset = "0x25A15F8", VA = "0x25A15F8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x259FC50", Offset = "0x259FC50", VA = "0x259FC50")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200027A")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E6C")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000124")]
		private IntPtr context
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x25A1604", Offset = "0x25A1604", VA = "0x25A1604")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x259FA98", Offset = "0x259FA98", VA = "0x259FA98")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x25A1668", Offset = "0x25A1668", VA = "0x25A1668")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x25A16F8", Offset = "0x25A16F8", VA = "0x25A16F8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x25A171C", Offset = "0x25A171C", VA = "0x25A171C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x25A17AC", Offset = "0x25A17AC", VA = "0x25A17AC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x25A17D0", Offset = "0x25A17D0", VA = "0x25A17D0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x25A1860", Offset = "0x25A1860", VA = "0x25A1860", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x25A1884", Offset = "0x25A1884", VA = "0x25A1884")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x25A1904", Offset = "0x25A1904", VA = "0x25A1904", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x25A190C", Offset = "0x25A190C", VA = "0x25A190C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x25A1A2C", Offset = "0x25A1A2C", VA = "0x25A1A2C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x25A1B24", Offset = "0x25A1B24", VA = "0x25A1B24")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x25A1BBC", Offset = "0x25A1BBC", VA = "0x25A1BBC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x25A1BC8", Offset = "0x25A1BC8", VA = "0x25A1BC8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x25A1CF4", Offset = "0x25A1CF4", VA = "0x25A1CF4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x25A1D00", Offset = "0x25A1D00", VA = "0x25A1D00")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x25A1DAC", Offset = "0x25A1DAC", VA = "0x25A1DAC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x25A1DB8", Offset = "0x25A1DB8", VA = "0x25A1DB8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x25A1E64", Offset = "0x25A1E64", VA = "0x25A1E64", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x25A1E70", Offset = "0x25A1E70", VA = "0x25A1E70")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x25A1F1C", Offset = "0x25A1F1C", VA = "0x25A1F1C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x25A1F28", Offset = "0x25A1F28", VA = "0x25A1F28")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x25A1FB8", Offset = "0x25A1FB8", VA = "0x25A1FB8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x25A1FDC", Offset = "0x25A1FDC", VA = "0x25A1FDC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x25A205C", Offset = "0x25A205C", VA = "0x25A205C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x25A2064", Offset = "0x25A2064", VA = "0x25A2064")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x25A210C", Offset = "0x25A210C", VA = "0x25A210C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x25A2118", Offset = "0x25A2118", VA = "0x25A2118")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x25A21C0", Offset = "0x25A21C0", VA = "0x25A21C0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x25A21D0", Offset = "0x25A21D0", VA = "0x25A21D0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x25A2260", Offset = "0x25A2260", VA = "0x25A2260", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x259FB28", Offset = "0x259FB28", VA = "0x259FB28")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200027B")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E6E")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000125")]
		private IntPtr context
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x259FCAC", Offset = "0x259FCAC", VA = "0x259FCAC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x259FB74", Offset = "0x259FB74", VA = "0x259FB74")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x259FD10", Offset = "0x259FD10", VA = "0x259FD10")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x259FDA0", Offset = "0x259FDA0", VA = "0x259FDA0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x259FDC4", Offset = "0x259FDC4", VA = "0x259FDC4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x259FE54", Offset = "0x259FE54", VA = "0x259FE54", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x259FE78", Offset = "0x259FE78", VA = "0x259FE78")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x259FF08", Offset = "0x259FF08", VA = "0x259FF08", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x259FF2C", Offset = "0x259FF2C", VA = "0x259FF2C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x259FFAC", Offset = "0x259FFAC", VA = "0x259FFAC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x259FFB4", Offset = "0x259FFB4", VA = "0x259FFB4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x25A00D4", Offset = "0x25A00D4", VA = "0x25A00D4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x25A01CC", Offset = "0x25A01CC", VA = "0x25A01CC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x25A0264", Offset = "0x25A0264", VA = "0x25A0264", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x25A0270", Offset = "0x25A0270", VA = "0x25A0270")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x25A039C", Offset = "0x25A039C", VA = "0x25A039C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x25A03A8", Offset = "0x25A03A8", VA = "0x25A03A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x25A0454", Offset = "0x25A0454", VA = "0x25A0454", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x25A0460", Offset = "0x25A0460", VA = "0x25A0460")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x25A050C", Offset = "0x25A050C", VA = "0x25A050C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x25A0518", Offset = "0x25A0518", VA = "0x25A0518")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x25A05C4", Offset = "0x25A05C4", VA = "0x25A05C4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x25A05D0", Offset = "0x25A05D0", VA = "0x25A05D0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x25A0660", Offset = "0x25A0660", VA = "0x25A0660", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x25A0684", Offset = "0x25A0684", VA = "0x25A0684")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x25A0704", Offset = "0x25A0704", VA = "0x25A0704", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x25A070C", Offset = "0x25A070C", VA = "0x25A070C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x25A07B4", Offset = "0x25A07B4", VA = "0x25A07B4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x25A07C0", Offset = "0x25A07C0", VA = "0x25A07C0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x25A0868", Offset = "0x25A0868", VA = "0x25A0868", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x25A0878", Offset = "0x25A0878", VA = "0x25A0878")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x25A0908", Offset = "0x25A0908", VA = "0x25A0908", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x259FC04", Offset = "0x259FC04", VA = "0x259FC04")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000122")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x259F800", Offset = "0x259F800", VA = "0x259F800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x259F870", Offset = "0x259F870", VA = "0x259F870")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x259FC9C", Offset = "0x259FC9C", VA = "0x259FC9C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200027C")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	public enum Preset
	{
		[Token(Token = "0x4000E76")]
		Custom,
		[Token(Token = "0x4000E77")]
		AcousticTile,
		[Token(Token = "0x4000E78")]
		Brick,
		[Token(Token = "0x4000E79")]
		BrickPainted,
		[Token(Token = "0x4000E7A")]
		Carpet,
		[Token(Token = "0x4000E7B")]
		CarpetHeavy,
		[Token(Token = "0x4000E7C")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000E7D")]
		CeramicTile,
		[Token(Token = "0x4000E7E")]
		Concrete,
		[Token(Token = "0x4000E7F")]
		ConcreteRough,
		[Token(Token = "0x4000E80")]
		ConcreteBlock,
		[Token(Token = "0x4000E81")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000E82")]
		Curtain,
		[Token(Token = "0x4000E83")]
		Foliage,
		[Token(Token = "0x4000E84")]
		Glass,
		[Token(Token = "0x4000E85")]
		GlassHeavy,
		[Token(Token = "0x4000E86")]
		Grass,
		[Token(Token = "0x4000E87")]
		Gravel,
		[Token(Token = "0x4000E88")]
		GypsumBoard,
		[Token(Token = "0x4000E89")]
		PlasterOnBrick,
		[Token(Token = "0x4000E8A")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000E8B")]
		Soil,
		[Token(Token = "0x4000E8C")]
		SoundProof,
		[Token(Token = "0x4000E8D")]
		Snow,
		[Token(Token = "0x4000E8E")]
		Steel,
		[Token(Token = "0x4000E8F")]
		Water,
		[Token(Token = "0x4000E90")]
		WoodThin,
		[Token(Token = "0x4000E91")]
		WoodThick,
		[Token(Token = "0x4000E92")]
		WoodFloor,
		[Token(Token = "0x4000E93")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200027E")]
	public sealed class Point
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x25AD6F0", Offset = "0x25AD6F0", VA = "0x25AD6F0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x25AD838", Offset = "0x25AD838", VA = "0x25AD838")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x25AD8A8", Offset = "0x25AD8A8", VA = "0x25AD8A8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xF2B1B0", Offset = "0xF2B1B0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B1E8", Offset = "0xF2B1E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x25ADD00", Offset = "0x25ADD00", VA = "0x25ADD00")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x25ADD08", Offset = "0x25ADD08", VA = "0x25ADD08")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x25ADD20", Offset = "0x25ADD20", VA = "0x25ADD20")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000127")]
		public float Item
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x25AD8E0", Offset = "0x25AD8E0", VA = "0x25AD8E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x25AD7C0", Offset = "0x25AD7C0", VA = "0x25AD7C0")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF306C4", Offset = "0xF306C4")]
	public Spectrum absorption;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF306FC", Offset = "0xF306FC")]
	public Spectrum transmission;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30734", Offset = "0xF30734")]
	public Spectrum scattering;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000126")]
	public Preset preset
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x25A58F4", Offset = "0x25A58F4", VA = "0x25A58F4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x25A58FC", Offset = "0x25A58FC", VA = "0x25A58FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x25A5924", Offset = "0x25A5924", VA = "0x25A5924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x25A5274", Offset = "0x25A5274", VA = "0x25A5274")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x25A5ED4", Offset = "0x25A5ED4", VA = "0x25A5ED4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x25A5ED8", Offset = "0x25A5ED8", VA = "0x25A5ED8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x25A5928", Offset = "0x25A5928", VA = "0x25A5928")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x25A4B10", Offset = "0x25A4B10", VA = "0x25A4B10")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x25A5FBC", Offset = "0x25A5FBC", VA = "0x25A5FBC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x25A641C", Offset = "0x25A641C", VA = "0x25A641C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x25A687C", Offset = "0x25A687C", VA = "0x25A687C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x25A6CDC", Offset = "0x25A6CDC", VA = "0x25A6CDC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x25A713C", Offset = "0x25A713C", VA = "0x25A713C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x25A759C", Offset = "0x25A759C", VA = "0x25A759C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x25A79FC", Offset = "0x25A79FC", VA = "0x25A79FC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x25A7E5C", Offset = "0x25A7E5C", VA = "0x25A7E5C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x25A82BC", Offset = "0x25A82BC", VA = "0x25A82BC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x25A871C", Offset = "0x25A871C", VA = "0x25A871C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x25A8B7C", Offset = "0x25A8B7C", VA = "0x25A8B7C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x25A8FDC", Offset = "0x25A8FDC", VA = "0x25A8FDC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x25A943C", Offset = "0x25A943C", VA = "0x25A943C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x25A989C", Offset = "0x25A989C", VA = "0x25A989C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x25A9CF4", Offset = "0x25A9CF4", VA = "0x25A9CF4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x25AA154", Offset = "0x25AA154", VA = "0x25AA154")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x25AA490", Offset = "0x25AA490", VA = "0x25AA490")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x25AA7CC", Offset = "0x25AA7CC", VA = "0x25AA7CC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x25AAC2C", Offset = "0x25AAC2C", VA = "0x25AAC2C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x25AB08C", Offset = "0x25AB08C", VA = "0x25AB08C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x25AB4EC", Offset = "0x25AB4EC", VA = "0x25AB4EC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x25AB828", Offset = "0x25AB828", VA = "0x25AB828")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x25AB984", Offset = "0x25AB984", VA = "0x25AB984")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x25ABCC0", Offset = "0x25ABCC0", VA = "0x25ABCC0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x25AC118", Offset = "0x25AC118", VA = "0x25AC118")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x25AC578", Offset = "0x25AC578", VA = "0x25AC578")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x25AC9D0", Offset = "0x25AC9D0", VA = "0x25AC9D0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x25ACE30", Offset = "0x25ACE30", VA = "0x25ACE30")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x25AD290", Offset = "0x25AD290", VA = "0x25AD290")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x25AD728", Offset = "0x25AD728", VA = "0x25AD728")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000281")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x25ADD38", Offset = "0x25ADD38", VA = "0x25ADD38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x25ADE08", Offset = "0x25ADE08", VA = "0x25ADE08")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000282")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000128")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x25AE3C4", Offset = "0x25AE3C4", VA = "0x25AE3C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x25AE4D8", Offset = "0x25AE4D8", VA = "0x25AE4D8")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000283")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000E9E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x25AE4E8", Offset = "0x25AE4E8", VA = "0x25AE4E8")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x25AE580", Offset = "0x25AE580", VA = "0x25AE580")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x25AE68C", Offset = "0x25AE68C", VA = "0x25AE68C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x25AE690", Offset = "0x25AE690", VA = "0x25AE690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x25AE694", Offset = "0x25AE694", VA = "0x25AE694")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000284")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000EAE")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000EB4")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1439D48", Offset = "0x1439D48", VA = "0x1439D48")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1439D80", Offset = "0x1439D80", VA = "0x1439D80")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x1439F50", Offset = "0x1439F50", VA = "0x1439F50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x143A000", Offset = "0x143A000", VA = "0x143A000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x143A0F4", Offset = "0x143A0F4", VA = "0x143A0F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x143AA5C", Offset = "0x143AA5C", VA = "0x143AA5C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1439FE4", Offset = "0x1439FE4", VA = "0x1439FE4")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x143A064", Offset = "0x143A064", VA = "0x143A064")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x143A7C4", Offset = "0x143A7C4", VA = "0x143A7C4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x143A844", Offset = "0x143A844", VA = "0x143A844")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x143A8CC", Offset = "0x143A8CC", VA = "0x143A8CC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x143A954", Offset = "0x143A954", VA = "0x143A954")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x143A9D4", Offset = "0x143A9D4", VA = "0x143A9D4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x143B894", Offset = "0x143B894", VA = "0x143B894")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x143B93C", Offset = "0x143B93C", VA = "0x143B93C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x143B9E4", Offset = "0x143B9E4", VA = "0x143B9E4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000286")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000287")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x25ADE18", Offset = "0x25ADE18", VA = "0x25ADE18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x25ADE1C", Offset = "0x25ADE1C", VA = "0x25ADE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x25ADE20", Offset = "0x25ADE20", VA = "0x25ADE20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x25ADF88", Offset = "0x25ADF88", VA = "0x25ADF88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x25ADE6C", Offset = "0x25ADE6C", VA = "0x25ADE6C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x25ADEFC", Offset = "0x25ADEFC", VA = "0x25ADEFC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x25ADFD4", Offset = "0x25ADFD4", VA = "0x25ADFD4")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x25AE06C", Offset = "0x25AE06C", VA = "0x25AE06C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x25AE1D4", Offset = "0x25AE1D4", VA = "0x25AE1D4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x25AE33C", Offset = "0x25AE33C", VA = "0x25AE33C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000288")]
public class AssetStoreLink : MonoBehaviour
{
	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string assetStoreID;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x12F0F00", Offset = "0x12F0F00", VA = "0x12F0F00")]
	public void VisitStore()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x12F0F5C", Offset = "0x12F0F5C", VA = "0x12F0F5C")]
	public AssetStoreLink()
	{
	}
}
[Token(Token = "0x2000289")]
public class TestPageSwitch : MonoBehaviour
{
	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentPage;

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x14ACFB0", Offset = "0x14ACFB0", VA = "0x14ACFB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x14AD230", Offset = "0x14AD230", VA = "0x14AD230")]
	public void ShiftPage(int offset)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x14ACFB4", Offset = "0x14ACFB4", VA = "0x14ACFB4")]
	private void ShowPage()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x14AD2AC", Offset = "0x14AD2AC", VA = "0x14AD2AC")]
	public TestPageSwitch()
	{
	}
}
[Token(Token = "0x200028A")]
public class TestSwitchBar : MonoBehaviour
{
	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProgressBarPro[] progressBarPrefabs;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform prefabParent;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int currentPrefab;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text prefabName;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProgressBarPro bar;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentValue;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x14AD2B4", Offset = "0x14AD2B4", VA = "0x14AD2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x14AD524", Offset = "0x14AD524", VA = "0x14AD524")]
	public void SetRandomBar()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x14AD564", Offset = "0x14AD564", VA = "0x14AD564")]
	public void ShiftBar(int shift)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x14AD2BC", Offset = "0x14AD2BC", VA = "0x14AD2BC")]
	private void InstantiateBar(int num)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x14AD5D0", Offset = "0x14AD5D0", VA = "0x14AD5D0")]
	private void EnableBar()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x14AD674", Offset = "0x14AD674", VA = "0x14AD674")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x14AD724", Offset = "0x14AD724", VA = "0x14AD724")]
	public void SetBarColor(Color color)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x14AD7F0", Offset = "0x14AD7F0", VA = "0x14AD7F0")]
	public TestSwitchBar()
	{
	}
}
[Token(Token = "0x200028B")]
[ExecuteInEditMode]
public class ProgressBarPro : MonoBehaviour
{
	[Token(Token = "0x200028C")]
	public enum AnimationType
	{
		[Token(Token = "0x4000ECB")]
		FixedTimeForChange,
		[Token(Token = "0x4000ECC")]
		ChangeSpeed
	}

	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B208", Offset = "0xF2B208")]
	private sealed class <DoBarSizeAnim>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProgressBarPro <>4__this;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startValue>5__2;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__3;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <change>5__4;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <duration>5__5;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x11FB780", Offset = "0x11FB780", VA = "0x11FB780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x11FB7E8", Offset = "0x11FB7E8", VA = "0x11FB7E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x11FB488", Offset = "0x11FB488", VA = "0x11FB488")]
		[DebuggerHidden]
		public <DoBarSizeAnim>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x11FB628", Offset = "0x11FB628", VA = "0x11FB628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x11FB62C", Offset = "0x11FB62C", VA = "0x11FB62C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x11FB788", Offset = "0x11FB788", VA = "0x11FB788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF307CC", Offset = "0xF307CC")]
	private float m_value;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float displayValue;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xF3080C", Offset = "0xF3080C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF3080C", Offset = "0xF3080C")]
	[SerializeField]
	private bool animateBar;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AnimationType animationType;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float animTime;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xF3088C", Offset = "0xF3088C")]
	[SerializeField]
	private ProgressBarProView[] views;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine sizeAnim;

	[Token(Token = "0x17000129")]
	public float Value
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x11FB2DC", Offset = "0x11FB2DC", VA = "0x11FB2DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x11FB2E4", Offset = "0x11FB2E4", VA = "0x11FB2E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x11FB1A4", Offset = "0x11FB1A4", VA = "0x11FB1A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x11FB20C", Offset = "0x11FB20C", VA = "0x11FB20C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x11FB2FC", Offset = "0x11FB2FC", VA = "0x11FB2FC")]
	public void SetValue(float value, float maxValue)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x11FB31C", Offset = "0x11FB31C", VA = "0x11FB31C")]
	public void SetValue(int value, int maxValue)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x11F9408", Offset = "0x11F9408", VA = "0x11F9408")]
	public void SetValue(float percentage, bool forceUpdate = false)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x11FB38C", Offset = "0x11FB38C", VA = "0x11FB38C")]
	public bool IsAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x11F96F0", Offset = "0x11F96F0", VA = "0x11F96F0")]
	public void SetBarColor(Color color)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x11FB340", Offset = "0x11FB340", VA = "0x11FB340")]
	private void StartSizeAnim(float percentage)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x11FB418", Offset = "0x11FB418", VA = "0x11FB418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3954C", Offset = "0xF3954C")]
	private IEnumerator DoBarSizeAnim()
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x11FB218", Offset = "0x11FB218", VA = "0x11FB218")]
	private void SetDisplayValue(float value, bool forceUpdate = false)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x11FB4B4", Offset = "0x11FB4B4", VA = "0x11FB4B4")]
	private void UpdateBarViews(float currentValue, float targetValue, bool forceUpdate = false)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x11FB5F8", Offset = "0x11FB5F8", VA = "0x11FB5F8")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x11FB604", Offset = "0x11FB604", VA = "0x11FB604")]
	public ProgressBarPro()
	{
	}
}
[Token(Token = "0x200028E")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x12F63C4", Offset = "0x12F63C4", VA = "0x12F63C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x12F6468", Offset = "0x12F6468", VA = "0x12F6468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x12F650C", Offset = "0x12F650C", VA = "0x12F650C")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x12F689C", Offset = "0x12F689C", VA = "0x12F689C")]
	public ChatController()
	{
	}
}
[Token(Token = "0x200028F")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B218", Offset = "0xF2B218")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x135BFD8", Offset = "0x135BFD8", VA = "0x135BFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x135C040", Offset = "0x135C040", VA = "0x135C040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x135BDB0", Offset = "0x135BDB0", VA = "0x135BDB0")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x135BDE4", Offset = "0x135BDE4", VA = "0x135BDE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x135BDE8", Offset = "0x135BDE8", VA = "0x135BDE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x135BFE0", Offset = "0x135BFE0", VA = "0x135BFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x135BCCC", Offset = "0x135BCCC", VA = "0x135BCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x135BD40", Offset = "0x135BD40", VA = "0x135BD40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39600", Offset = "0xF39600")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x135BDDC", Offset = "0x135BDDC", VA = "0x135BDDC")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x2000291")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _speed;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x12F5294", Offset = "0x12F5294", VA = "0x12F5294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x12F5298", Offset = "0x12F5298", VA = "0x12F5298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x12F539C", Offset = "0x12F539C", VA = "0x12F539C")]
	public void ResetRotation()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x12F5428", Offset = "0x12F5428", VA = "0x12F5428")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x2000292")]
public class handGestures : MonoBehaviour
{
	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _handAnimator;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _handGestureNo;

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1C23DCC", Offset = "0x1C23DCC", VA = "0x1C23DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1C23E24", Offset = "0x1C23E24", VA = "0x1C23E24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1C23E84", Offset = "0x1C23E84", VA = "0x1C23E84")]
	public void SetGesture(int i)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1C23E8C", Offset = "0x1C23E8C", VA = "0x1C23E8C")]
	public handGestures()
	{
	}
}
[Token(Token = "0x2000293")]
public class SaveAndLoadData : MonoBehaviour
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePath;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DataLibraryVariable library;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x1200D9C", Offset = "0x1200D9C", VA = "0x1200D9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xF396B4", Offset = "0xF396B4")]
	public void Save()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1200E88", Offset = "0x1200E88", VA = "0x1200E88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xF396EC", Offset = "0xF396EC")]
	public void Load()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1200FBC", Offset = "0x1200FBC", VA = "0x1200FBC")]
	public SaveAndLoadData()
	{
	}
}
namespace HeathenEngineering.Tools.Demo
{
	[Token(Token = "0x2000294")]
	public class TestProcessStateGameEvents : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneProcessStateGameEvent started;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneProcessStateGameEvent updated;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneProcessStateGameEvent completed;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x14646BC", Offset = "0x14646BC", VA = "0x14646BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x14647D8", Offset = "0x14647D8", VA = "0x14647D8")]
		private void HandleCompleted(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x146487C", Offset = "0x146487C", VA = "0x146487C")]
		private void HandleUpdated(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1464920", Offset = "0x1464920", VA = "0x1464920")]
		private void HandleStarted(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x14649C4", Offset = "0x14649C4", VA = "0x14649C4")]
		public TestProcessStateGameEvents()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class ExampleDemo_RandomizeColor : MonoBehaviour
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1463E9C", Offset = "0x1463E9C", VA = "0x1463E9C")]
		public void RandomizeColor(ColorVariable target)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1463F08", Offset = "0x1463F08", VA = "0x1463F08")]
		public ExampleDemo_RandomizeColor()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class HitIndicator : MonoBehaviour, IDamageHandler<DamageHandler.Report>
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color normalColor;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color hitColor;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float flashTime;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody selfBody;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1463F10", Offset = "0x1463F10", VA = "0x1463F10")]
		public void Update()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1463FEC", Offset = "0x1463FEC", VA = "0x1463FEC", Slot = "4")]
		public void ApplyDamage(DamageHandler.Report data)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x14640D4", Offset = "0x14640D4", VA = "0x14640D4")]
		public HitIndicator()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class SpawnProjectiles : MonoBehaviour
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectileSpawner spawner;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] spawnPoints;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spawnPointRotationSpeed;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text countLabel;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle autoSpawn;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider speedSlider;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rot;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 bulletScale;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float spawnTime;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion right;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion left;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion back;

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x14640E4", Offset = "0x14640E4", VA = "0x14640E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x14641B4", Offset = "0x14641B4", VA = "0x14641B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x14643D4", Offset = "0x14643D4", VA = "0x14643D4")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1464650", Offset = "0x1464650", VA = "0x1464650")]
		public SpawnProjectiles()
		{
		}
	}
}
namespace HeathenEngineering.Serializable.Demo
{
	[Token(Token = "0x2000298")]
	public class ExampleReferencingAVariable : MonoBehaviour
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolReference useAsAConstant;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoolReference useAsAReference;

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1463D80", Offset = "0x1463D80", VA = "0x1463D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1463E94", Offset = "0x1463E94", VA = "0x1463E94")]
		public ExampleReferencingAVariable()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000299")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x14A7E4C", Offset = "0x14A7E4C", VA = "0x14A7E4C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x14A7E78", Offset = "0x14A7E78", VA = "0x14A7E78")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x14A7E80", Offset = "0x14A7E80", VA = "0x14A7E80", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x14A8250", Offset = "0x14A8250", VA = "0x14A8250")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200029C")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x14A8C40", Offset = "0x14A8C40", VA = "0x14A8C40")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029D")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x14A8C90", Offset = "0x14A8C90", VA = "0x14A8C90")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029E")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x14A8CE0", Offset = "0x14A8CE0", VA = "0x14A8CE0")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029F")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x14A8D30", Offset = "0x14A8D30", VA = "0x14A8D30")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002A0")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x14A8D80", Offset = "0x14A8D80", VA = "0x14A8D80")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x1700012E")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x14A8258", Offset = "0x14A8258", VA = "0x14A8258")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x14A8260", Offset = "0x14A8260", VA = "0x14A8260")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x14A8268", Offset = "0x14A8268", VA = "0x14A8268")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x14A8270", Offset = "0x14A8270", VA = "0x14A8270")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x14A8278", Offset = "0x14A8278", VA = "0x14A8278")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x14A8280", Offset = "0x14A8280", VA = "0x14A8280")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x14A8288", Offset = "0x14A8288", VA = "0x14A8288")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x14A8290", Offset = "0x14A8290", VA = "0x14A8290")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x14A8298", Offset = "0x14A8298", VA = "0x14A8298")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x14A82A0", Offset = "0x14A82A0", VA = "0x14A82A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x14A82A8", Offset = "0x14A82A8", VA = "0x14A82A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x14A8410", Offset = "0x14A8410", VA = "0x14A8410")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x14A8B5C", Offset = "0x14A8B5C", VA = "0x14A8B5C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x14A8B60", Offset = "0x14A8B60", VA = "0x14A8B60", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x14A88B4", Offset = "0x14A88B4", VA = "0x14A88B4")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x14A8930", Offset = "0x14A8930", VA = "0x14A8930")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x14A89AC", Offset = "0x14A89AC", VA = "0x14A89AC")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x14A8A3C", Offset = "0x14A8A3C", VA = "0x14A8A3C")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x14A8ACC", Offset = "0x14A8ACC", VA = "0x14A8ACC")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x14A8B64", Offset = "0x14A8B64", VA = "0x14A8B64")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20002A1")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B228", Offset = "0xF2B228")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000133")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDD")]
				[Address(RVA = "0x1390014", Offset = "0x1390014", VA = "0x1390014", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000134")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDF")]
				[Address(RVA = "0x139007C", Offset = "0x139007C", VA = "0x139007C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x138FAE4", Offset = "0x138FAE4", VA = "0x138FAE4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x138FB18", Offset = "0x138FB18", VA = "0x138FB18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x138FB1C", Offset = "0x138FB1C", VA = "0x138FB1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x139001C", Offset = "0x139001C", VA = "0x139001C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000F0B")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4000F0C")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x138FA74", Offset = "0x138FA74", VA = "0x138FA74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39724", Offset = "0xF39724")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x138FB10", Offset = "0x138FB10", VA = "0x138FB10")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B238", Offset = "0xF2B238")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000135")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x1390564", Offset = "0x1390564", VA = "0x1390564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000136")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE7")]
				[Address(RVA = "0x13905CC", Offset = "0x13905CC", VA = "0x13905CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x13900F4", Offset = "0x13900F4", VA = "0x13900F4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1390128", Offset = "0x1390128", VA = "0x1390128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x139012C", Offset = "0x139012C", VA = "0x139012C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x139056C", Offset = "0x139056C", VA = "0x139056C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x4000F19")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4000F1A")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1390084", Offset = "0x1390084", VA = "0x1390084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF397D8", Offset = "0xF397D8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1390120", Offset = "0x1390120", VA = "0x1390120")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x13905D4", Offset = "0x13905D4", VA = "0x13905D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1390BD0", Offset = "0x1390BD0", VA = "0x1390BD0")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1390BE0", Offset = "0x1390BE0", VA = "0x1390BE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1390BE4", Offset = "0x1390BE4", VA = "0x1390BE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1390E94", Offset = "0x1390E94", VA = "0x1390E94")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1390EA4", Offset = "0x1390EA4", VA = "0x1390EA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1391210", Offset = "0x1391210", VA = "0x1391210")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x20002A9")]
		public enum CameraModes
		{
			[Token(Token = "0x4000F46")]
			Follow,
			[Token(Token = "0x4000F47")]
			Isometric,
			[Token(Token = "0x4000F48")]
			Free
		}

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4000F43")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4000F44")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x139122C", Offset = "0x139122C", VA = "0x139122C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x13912B0", Offset = "0x13912B0", VA = "0x13912B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1391368", Offset = "0x1391368", VA = "0x1391368")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x13917E4", Offset = "0x13917E4", VA = "0x13917E4")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x13920D4", Offset = "0x13920D4", VA = "0x13920D4")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public enum MotionType
		{
			[Token(Token = "0x4000F54")]
			Rotation,
			[Token(Token = "0x4000F55")]
			BackAndForth,
			[Token(Token = "0x4000F56")]
			Translation
		}

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x139217C", Offset = "0x139217C", VA = "0x139217C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1392294", Offset = "0x1392294", VA = "0x1392294")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x13924D0", Offset = "0x13924D0", VA = "0x13924D0")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B248", Offset = "0xF2B248")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EFE")]
				[Address(RVA = "0x139277C", Offset = "0x139277C", VA = "0x139277C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F00")]
				[Address(RVA = "0x13927E4", Offset = "0x13927E4", VA = "0x13927E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x13925EC", Offset = "0x13925EC", VA = "0x13925EC")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1392620", Offset = "0x1392620", VA = "0x1392620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1392624", Offset = "0x1392624", VA = "0x1392624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1392784", Offset = "0x1392784", VA = "0x1392784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x13924E4", Offset = "0x13924E4", VA = "0x13924E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1392550", Offset = "0x1392550", VA = "0x1392550")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x139257C", Offset = "0x139257C", VA = "0x139257C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3988C", Offset = "0xF3988C")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1392618", Offset = "0x1392618", VA = "0x1392618")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000F5F")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x13927EC", Offset = "0x13927EC", VA = "0x13927EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x13928A8", Offset = "0x13928A8", VA = "0x13928A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1392944", Offset = "0x1392944", VA = "0x1392944")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B258", Offset = "0xF2B258")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000139")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F0C")]
				[Address(RVA = "0x1393A28", Offset = "0x1393A28", VA = "0x1393A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F0E")]
				[Address(RVA = "0x1393A90", Offset = "0x1393A90", VA = "0x1393A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x1392AD8", Offset = "0x1392AD8", VA = "0x1392AD8")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x1392D34", Offset = "0x1392D34", VA = "0x1392D34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x1392D38", Offset = "0x1392D38", VA = "0x1392D38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x1393A30", Offset = "0x1393A30", VA = "0x1393A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x139294C", Offset = "0x139294C", VA = "0x139294C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x13929B4", Offset = "0x13929B4", VA = "0x13929B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1392A50", Offset = "0x1392A50", VA = "0x1392A50")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x13929E0", Offset = "0x13929E0", VA = "0x13929E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39940", Offset = "0xF39940")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1392B04", Offset = "0x1392B04", VA = "0x1392B04")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		public enum objectType
		{
			[Token(Token = "0x4000F71")]
			TextMeshPro,
			[Token(Token = "0x4000F72")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000F6E")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1393A98", Offset = "0x1393A98", VA = "0x1393A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1393C7C", Offset = "0x1393C7C", VA = "0x1393C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1393D18", Offset = "0x1393D18", VA = "0x1393D18")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000F7E")]
			TopLeft,
			[Token(Token = "0x4000F7F")]
			BottomLeft,
			[Token(Token = "0x4000F80")]
			TopRight,
			[Token(Token = "0x4000F81")]
			BottomRight
		}

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000F78")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1393D20", Offset = "0x1393D20", VA = "0x1393D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x13941B0", Offset = "0x13941B0", VA = "0x13941B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x13941DC", Offset = "0x13941DC", VA = "0x13941DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1393F10", Offset = "0x1393F10", VA = "0x1393F10")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x139433C", Offset = "0x139433C", VA = "0x139433C")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1394354", Offset = "0x1394354", VA = "0x1394354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x139458C", Offset = "0x139458C", VA = "0x139458C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x13947C4", Offset = "0x13947C4", VA = "0x13947C4")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x139499C", Offset = "0x139499C", VA = "0x139499C")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1394B74", Offset = "0x1394B74", VA = "0x1394B74")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x1394DB8", Offset = "0x1394DB8", VA = "0x1394DB8")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1394FFC", Offset = "0x1394FFC", VA = "0x1394FFC")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x139522C", Offset = "0x139522C", VA = "0x139522C")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x149D90C", Offset = "0x149D90C", VA = "0x149D90C")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x149D914", Offset = "0x149D914", VA = "0x149D914")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x149D9A8", Offset = "0x149D9A8", VA = "0x149D9A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x149E0E4", Offset = "0x149E0E4", VA = "0x149E0E4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x149E160", Offset = "0x149E160", VA = "0x149E160", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x149E1D8", Offset = "0x149E1D8", VA = "0x149E1D8")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000F8C")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000F8D")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x149E1F0", Offset = "0x149E1F0", VA = "0x149E1F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x149E350", Offset = "0x149E350", VA = "0x149E350")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x149E414", Offset = "0x149E414", VA = "0x149E414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x149E4D8", Offset = "0x149E4D8", VA = "0x149E4D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x149E57C", Offset = "0x149E57C", VA = "0x149E57C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x149FCEC", Offset = "0x149FCEC", VA = "0x149FCEC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x149FCF8", Offset = "0x149FCF8", VA = "0x149FCF8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x149FD00", Offset = "0x149FD00", VA = "0x149FD00", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x149FD04", Offset = "0x149FD04", VA = "0x149FD04", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x149F45C", Offset = "0x149F45C", VA = "0x149F45C")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x149FD08", Offset = "0x149FD08", VA = "0x149FD08")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20002BA")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000FA1")]
			TopLeft,
			[Token(Token = "0x4000FA2")]
			BottomLeft,
			[Token(Token = "0x4000FA3")]
			TopRight,
			[Token(Token = "0x4000FA4")]
			BottomRight
		}

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000F9C")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x149FD20", Offset = "0x149FD20", VA = "0x149FD20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x14A0254", Offset = "0x14A0254", VA = "0x14A0254")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x14A0280", Offset = "0x14A0280", VA = "0x14A0280")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x149FED0", Offset = "0x149FED0", VA = "0x149FED0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x14A03E0", Offset = "0x14A03E0", VA = "0x14A03E0")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000FAC")]
			TopLeft,
			[Token(Token = "0x4000FAD")]
			BottomLeft,
			[Token(Token = "0x4000FAE")]
			TopRight,
			[Token(Token = "0x4000FAF")]
			BottomRight
		}

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000FA6")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x14A03F8", Offset = "0x14A03F8", VA = "0x14A03F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x14A0608", Offset = "0x14A0608", VA = "0x14A0608")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x14A0758", Offset = "0x14A0758", VA = "0x14A0758")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B268", Offset = "0xF2B268")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x1700013B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F3E")]
				[Address(RVA = "0x14A0B3C", Offset = "0x14A0B3C", VA = "0x14A0B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F40")]
				[Address(RVA = "0x14A0BA4", Offset = "0x14A0BA4", VA = "0x14A0BA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x14A0870", Offset = "0x14A0870", VA = "0x14A0870")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x14A0904", Offset = "0x14A0904", VA = "0x14A0904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x14A0908", Offset = "0x14A0908", VA = "0x14A0908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x14A0B44", Offset = "0x14A0B44", VA = "0x14A0B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x14A0768", Offset = "0x14A0768", VA = "0x14A0768")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x14A0800", Offset = "0x14A0800", VA = "0x14A0800")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF399F4", Offset = "0xF399F4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x14A089C", Offset = "0x14A089C", VA = "0x14A089C")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B278", Offset = "0xF2B278")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700013D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F4C")]
				[Address(RVA = "0x14A1090", Offset = "0x14A1090", VA = "0x14A1090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F4E")]
				[Address(RVA = "0x14A10F8", Offset = "0x14A10F8", VA = "0x14A10F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x14A0E54", Offset = "0x14A0E54", VA = "0x14A0E54")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x14A0F24", Offset = "0x14A0F24", VA = "0x14A0F24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x14A0F28", Offset = "0x14A0F28", VA = "0x14A0F28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x14A1098", Offset = "0x14A1098", VA = "0x14A1098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B288", Offset = "0xF2B288")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700013F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F52")]
				[Address(RVA = "0x14A12F0", Offset = "0x14A12F0", VA = "0x14A12F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F54")]
				[Address(RVA = "0x14A1358", Offset = "0x14A1358", VA = "0x14A1358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x14A0EF0", Offset = "0x14A0EF0", VA = "0x14A0EF0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x14A1100", Offset = "0x14A1100", VA = "0x14A1100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x14A1104", Offset = "0x14A1104", VA = "0x14A1104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x14A12F8", Offset = "0x14A12F8", VA = "0x14A12F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x14A0BAC", Offset = "0x14A0BAC", VA = "0x14A0BAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x14A0C14", Offset = "0x14A0C14", VA = "0x14A0C14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x14A0CC0", Offset = "0x14A0CC0", VA = "0x14A0CC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x14A0D84", Offset = "0x14A0D84", VA = "0x14A0D84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x14A0E48", Offset = "0x14A0E48", VA = "0x14A0E48")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x14A0C44", Offset = "0x14A0C44", VA = "0x14A0C44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39AA8", Offset = "0xF39AA8")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x14A0E80", Offset = "0x14A0E80", VA = "0x14A0E80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39B0C", Offset = "0xF39B0C")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x14A0F1C", Offset = "0x14A0F1C", VA = "0x14A0F1C")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B298", Offset = "0xF2B298")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000141")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F5D")]
				[Address(RVA = "0x14A24B8", Offset = "0x14A24B8", VA = "0x14A24B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000142")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F5F")]
				[Address(RVA = "0x14A2520", Offset = "0x14A2520", VA = "0x14A2520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x14A1960", Offset = "0x14A1960", VA = "0x14A1960")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x14A1FB8", Offset = "0x14A1FB8", VA = "0x14A1FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x14A1FBC", Offset = "0x14A1FBC", VA = "0x14A1FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x14A24C0", Offset = "0x14A24C0", VA = "0x14A24C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2A8", Offset = "0xF2B2A8")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F63")]
				[Address(RVA = "0x14A1F48", Offset = "0x14A1F48", VA = "0x14A1F48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F65")]
				[Address(RVA = "0x14A1FB0", Offset = "0x14A1FB0", VA = "0x14A1FB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x14A198C", Offset = "0x14A198C", VA = "0x14A198C")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x14A1A60", Offset = "0x14A1A60", VA = "0x14A1A60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x14A1A64", Offset = "0x14A1A64", VA = "0x14A1A64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x14A1F50", Offset = "0x14A1F50", VA = "0x14A1F50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x14A1360", Offset = "0x14A1360", VA = "0x14A1360")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x14A1420", Offset = "0x14A1420", VA = "0x14A1420")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x14A1880", Offset = "0x14A1880", VA = "0x14A1880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39C10", Offset = "0xF39C10")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x14A18F0", Offset = "0x14A18F0", VA = "0x14A18F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39C74", Offset = "0xF39C74")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x14A19B8", Offset = "0x14A19B8", VA = "0x14A19B8")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x14A2528", Offset = "0x14A2528", VA = "0x14A2528")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x14A252C", Offset = "0x14A252C", VA = "0x14A252C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x14A284C", Offset = "0x14A284C", VA = "0x14A284C")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2B8", Offset = "0xF2B2B8")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F70")]
				[Address(RVA = "0x14A2C44", Offset = "0x14A2C44", VA = "0x14A2C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F72")]
				[Address(RVA = "0x14A2CAC", Offset = "0x14A2CAC", VA = "0x14A2CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x14A2950", Offset = "0x14A2950", VA = "0x14A2950")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x14A2984", Offset = "0x14A2984", VA = "0x14A2984", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x14A2988", Offset = "0x14A2988", VA = "0x14A2988", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x14A2C4C", Offset = "0x14A2C4C", VA = "0x14A2C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x14A285C", Offset = "0x14A285C", VA = "0x14A285C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x14A28B4", Offset = "0x14A28B4", VA = "0x14A28B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x14A28E0", Offset = "0x14A28E0", VA = "0x14A28E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39D78", Offset = "0xF39D78")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x14A297C", Offset = "0x14A297C", VA = "0x14A297C")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		private struct VertexAnim
		{
			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2C8", Offset = "0xF2B2C8")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7D")]
				[Address(RVA = "0x14A3AB4", Offset = "0x14A3AB4", VA = "0x14A3AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7F")]
				[Address(RVA = "0x14A3B1C", Offset = "0x14A3B1C", VA = "0x14A3B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x14A2FBC", Offset = "0x14A2FBC", VA = "0x14A2FBC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x14A3000", Offset = "0x14A3000", VA = "0x14A3000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x14A3004", Offset = "0x14A3004", VA = "0x14A3004", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x14A3ABC", Offset = "0x14A3ABC", VA = "0x14A3ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x14A2CB4", Offset = "0x14A2CB4", VA = "0x14A2CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x14A2D0C", Offset = "0x14A2D0C", VA = "0x14A2D0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x14A2DD0", Offset = "0x14A2DD0", VA = "0x14A2DD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x14A2E94", Offset = "0x14A2E94", VA = "0x14A2E94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x14A2F30", Offset = "0x14A2F30", VA = "0x14A2F30")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x14A2EC0", Offset = "0x14A2EC0", VA = "0x14A2EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39E2C", Offset = "0xF39E2C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x14A2FE8", Offset = "0x14A2FE8", VA = "0x14A2FE8")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2D8", Offset = "0xF2B2D8")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F8A")]
				[Address(RVA = "0x14A4944", Offset = "0x14A4944", VA = "0x14A4944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F8C")]
				[Address(RVA = "0x14A49AC", Offset = "0x14A49AC", VA = "0x14A49AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x14A3E1C", Offset = "0x14A3E1C", VA = "0x14A3E1C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x14A3E58", Offset = "0x14A3E58", VA = "0x14A3E58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x14A3E5C", Offset = "0x14A3E5C", VA = "0x14A3E5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x14A494C", Offset = "0x14A494C", VA = "0x14A494C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x14A3B24", Offset = "0x14A3B24", VA = "0x14A3B24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x14A3B7C", Offset = "0x14A3B7C", VA = "0x14A3B7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x14A3C40", Offset = "0x14A3C40", VA = "0x14A3C40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x14A3D04", Offset = "0x14A3D04", VA = "0x14A3D04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x14A3DA0", Offset = "0x14A3DA0", VA = "0x14A3DA0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x14A3D30", Offset = "0x14A3D30", VA = "0x14A3D30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39EE0", Offset = "0xF39EE0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x14A3E48", Offset = "0x14A3E48", VA = "0x14A3E48")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2E8", Offset = "0xF2B2E8")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F97")]
				[Address(RVA = "0x14A5D3C", Offset = "0x14A5D3C", VA = "0x14A5D3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F99")]
				[Address(RVA = "0x14A5DA4", Offset = "0x14A5DA4", VA = "0x14A5DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x14A4CAC", Offset = "0x14A4CAC", VA = "0x14A4CAC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x14A4CF0", Offset = "0x14A4CF0", VA = "0x14A4CF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x14A4CF4", Offset = "0x14A4CF4", VA = "0x14A4CF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x14A5D44", Offset = "0x14A5D44", VA = "0x14A5D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x14A49B4", Offset = "0x14A49B4", VA = "0x14A49B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x14A4A0C", Offset = "0x14A4A0C", VA = "0x14A4A0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x14A4AD0", Offset = "0x14A4AD0", VA = "0x14A4AD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x14A4B94", Offset = "0x14A4B94", VA = "0x14A4B94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x14A4C30", Offset = "0x14A4C30", VA = "0x14A4C30")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x14A4BC0", Offset = "0x14A4BC0", VA = "0x14A4BC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF39F94", Offset = "0xF39F94")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x14A4CD8", Offset = "0x14A4CD8", VA = "0x14A4CD8")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B2F8", Offset = "0xF2B2F8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x14A60F8", Offset = "0x14A60F8", VA = "0x14A60F8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x14A6100", Offset = "0x14A6100", VA = "0x14A6100")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B308", Offset = "0xF2B308")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0x14A6E7C", Offset = "0x14A6E7C", VA = "0x14A6E7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0x14A6EE4", Offset = "0x14A6EE4", VA = "0x14A6EE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x14A60B4", Offset = "0x14A60B4", VA = "0x14A60B4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x14A61C4", Offset = "0x14A61C4", VA = "0x14A61C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x14A61C8", Offset = "0x14A61C8", VA = "0x14A61C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x14A6E84", Offset = "0x14A6E84", VA = "0x14A6E84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x14A5DAC", Offset = "0x14A5DAC", VA = "0x14A5DAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x14A5E04", Offset = "0x14A5E04", VA = "0x14A5E04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x14A5EC8", Offset = "0x14A5EC8", VA = "0x14A5EC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x14A5F8C", Offset = "0x14A5F8C", VA = "0x14A5F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x14A6028", Offset = "0x14A6028", VA = "0x14A6028")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x14A5FB8", Offset = "0x14A5FB8", VA = "0x14A5FB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A048", Offset = "0xF3A048")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x14A60E0", Offset = "0x14A60E0", VA = "0x14A60E0")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B318", Offset = "0xF2B318")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x14A7DDC", Offset = "0x14A7DDC", VA = "0x14A7DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB3")]
				[Address(RVA = "0x14A7E44", Offset = "0x14A7E44", VA = "0x14A7E44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x14A7078", Offset = "0x14A7078", VA = "0x14A7078")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x14A72DC", Offset = "0x14A72DC", VA = "0x14A72DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x14A72E0", Offset = "0x14A72E0", VA = "0x14A72E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x14A7DE4", Offset = "0x14A7DE4", VA = "0x14A7DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x14A6EEC", Offset = "0x14A6EEC", VA = "0x14A6EEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x14A6F54", Offset = "0x14A6F54", VA = "0x14A6F54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x14A6FF0", Offset = "0x14A6FF0", VA = "0x14A6FF0")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x14A6F80", Offset = "0x14A6F80", VA = "0x14A6F80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A0FC", Offset = "0xF3A0FC")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x14A70A4", Offset = "0x14A70A4", VA = "0x14A70A4")]
		public WarpTextExample()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B328", Offset = "0xF2B328")]
	public class AfterburnerPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectAngle;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectWidth;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectDistance;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_Cols;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphereCollider m_Sphere;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1578DAC", Offset = "0x1578DAC", VA = "0x1578DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1578E44", Offset = "0x1578E44", VA = "0x1578E44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x15792F0", Offset = "0x15792F0", VA = "0x15792F0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1579834", Offset = "0x1579834", VA = "0x1579834")]
		public AfterburnerPhysicsForce()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class ExplosionFireAndDebris : MonoBehaviour
	{
		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B38C", Offset = "0xF2B38C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionFireAndDebris <>4__this;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <multiplier>5__2;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FBE")]
				[Address(RVA = "0x157A060", Offset = "0x157A060", VA = "0x157A060", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC0")]
				[Address(RVA = "0x157A0C8", Offset = "0x157A0C8", VA = "0x157A0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x15798B8", Offset = "0x15798B8", VA = "0x15798B8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1579A70", Offset = "0x1579A70", VA = "0x1579A70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1579A74", Offset = "0x1579A74", VA = "0x1579A74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x157A068", Offset = "0x157A068", VA = "0x157A068", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] debrisPrefabs;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePrefab;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numDebrisPieces;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int numFires;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1579848", Offset = "0x1579848", VA = "0x1579848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A1B0", Offset = "0xF3A1B0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x15798E4", Offset = "0x15798E4", VA = "0x15798E4")]
		private void AddFire(Transform t, Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1579A68", Offset = "0x1579A68", VA = "0x1579A68")]
		public ExplosionFireAndDebris()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B39C", Offset = "0xF2B39C")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC6")]
				[Address(RVA = "0x157A484", Offset = "0x157A484", VA = "0x157A484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC8")]
				[Address(RVA = "0x157A4EC", Offset = "0x157A4EC", VA = "0x157A4EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x157A140", Offset = "0x157A140", VA = "0x157A140")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x157A17C", Offset = "0x157A17C", VA = "0x157A17C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x157A180", Offset = "0x157A180", VA = "0x157A180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x157A48C", Offset = "0x157A48C", VA = "0x157A48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float explosionForce;

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x157A0D0", Offset = "0x157A0D0", VA = "0x157A0D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A264", Offset = "0xF3A264")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x157A16C", Offset = "0x157A16C", VA = "0x157A16C")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class ExtinguishableParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem[] m_Systems;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x157A4F4", Offset = "0x157A4F4", VA = "0x157A4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x157A54C", Offset = "0x157A54C", VA = "0x157A54C")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x157A5D8", Offset = "0x157A5D8", VA = "0x157A5D8")]
		public ExtinguishableParticleSystem()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class FireLight : MonoBehaviour
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Rnd;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_Burning;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light m_Light;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x157A5E8", Offset = "0x157A5E8", VA = "0x157A5E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x157A658", Offset = "0x157A658", VA = "0x157A658")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x157A8B8", Offset = "0x157A8B8", VA = "0x157A8B8")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x157A8E0", Offset = "0x157A8E0", VA = "0x157A8E0")]
		public FireLight()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class Hose : MonoBehaviour
	{
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPower;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPower;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeSpeed;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] hoseWaterSystems;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer systemRenderer;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Power;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x157A8F0", Offset = "0x157A8F0", VA = "0x157A8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x157AAB4", Offset = "0x157AAB4", VA = "0x157AAB4")]
		public Hose()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x157AAD0", Offset = "0x157AAD0", VA = "0x157AAD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x157AC5C", Offset = "0x157AC5C", VA = "0x157AC5C")]
		public ParticleSystemMultiplier()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class SmokeParticles : MonoBehaviour
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] extinguishSounds;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x157AC6C", Offset = "0x157AC6C", VA = "0x157AC6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x157AD2C", Offset = "0x157AD2C", VA = "0x157AD2C")]
		public SmokeParticles()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class WaterHoseParticles : MonoBehaviour
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float lastSoundTime;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleCollisionEvent> m_CollisionEvents;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x157AD34", Offset = "0x157AD34", VA = "0x157AD34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x157AD8C", Offset = "0x157AD8C", VA = "0x157AD8C")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x157B01C", Offset = "0x157B01C", VA = "0x157B01C")]
		public WaterHoseParticles()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20002DF")]
	[ExecuteInEditMode]
	public class WaterBasic : MonoBehaviour
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1730FBC", Offset = "0x1730FBC", VA = "0x1730FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1731200", Offset = "0x1731200", VA = "0x1731200")]
		public WaterBasic()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B3BC", Offset = "0xF2B3BC")]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x157B094", Offset = "0x157B094", VA = "0x157B094")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x157B0B8", Offset = "0x157B0B8", VA = "0x157B0B8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x157B118", Offset = "0x157B118", VA = "0x157B118")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x157B178", Offset = "0x157B178", VA = "0x157B178")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B430", Offset = "0xF2B430")]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x157B180", Offset = "0x157B180", VA = "0x157B180")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class MeshContainer
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x157B188", Offset = "0x157B188", VA = "0x157B188")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x157B1DC", Offset = "0x157B1DC", VA = "0x157B1DC")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B4A4", Offset = "0xF2B4A4")]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x157B220", Offset = "0x157B220", VA = "0x157B220")]
		public void Start()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x157B310", Offset = "0x157B310", VA = "0x157B310")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x157B618", Offset = "0x157B618", VA = "0x157B618")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x157B6CC", Offset = "0x157B6CC", VA = "0x157B6CC")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x157B7D4", Offset = "0x157B7D4", VA = "0x157B7D4")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x157C09C", Offset = "0x157C09C", VA = "0x157C09C")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x157C0FC", Offset = "0x157C0FC", VA = "0x157C0FC")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x157C1F4", Offset = "0x157C1F4", VA = "0x157C1F4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x157C254", Offset = "0x157C254", VA = "0x157C254")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x157B93C", Offset = "0x157B93C", VA = "0x157B93C")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x157C2B4", Offset = "0x157C2B4", VA = "0x157C2B4")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x157C7B4", Offset = "0x157C7B4", VA = "0x157C7B4")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x157C318", Offset = "0x157C318", VA = "0x157C318")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x157C9EC", Offset = "0x157C9EC", VA = "0x157C9EC")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x157C5D0", Offset = "0x157C5D0", VA = "0x157C5D0")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x157CA0C", Offset = "0x157CA0C", VA = "0x157CA0C")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B518", Offset = "0xF2B518")]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x157CA80", Offset = "0x157CA80", VA = "0x157CA80")]
		public void Start()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x157CB6C", Offset = "0x157CB6C", VA = "0x157CB6C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x157CD94", Offset = "0x157CD94", VA = "0x157CD94")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		public enum WaterMode
		{
			[Token(Token = "0x400106C")]
			Simple,
			[Token(Token = "0x400106D")]
			Reflective,
			[Token(Token = "0x400106E")]
			Refractive
		}

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x157CD9C", Offset = "0x157CD9C", VA = "0x157CD9C")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x157E940", Offset = "0x157E940", VA = "0x157E940")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x157EC2C", Offset = "0x157EC2C", VA = "0x157EC2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x157E25C", Offset = "0x157E25C", VA = "0x157E25C")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x157D854", Offset = "0x157D854", VA = "0x157D854")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x157D840", Offset = "0x157D840", VA = "0x157D840")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x157D6F8", Offset = "0x157D6F8", VA = "0x157D6F8")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x157E75C", Offset = "0x157E75C", VA = "0x157E75C")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x157E4B8", Offset = "0x157E4B8", VA = "0x157E4B8")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x157EEB8", Offset = "0x157EEB8", VA = "0x157EEB8")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public enum WaterQuality
	{
		[Token(Token = "0x4001070")]
		High = 2,
		[Token(Token = "0x4001071")]
		Medium = 1,
		[Token(Token = "0x4001072")]
		Low = 0
	}
	[Token(Token = "0x20002E8")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1730CEC", Offset = "0x1730CEC", VA = "0x1730CEC")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1730E6C", Offset = "0x1730E6C", VA = "0x1730E6C")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1730F20", Offset = "0x1730F20", VA = "0x1730F20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1730FA4", Offset = "0x1730FA4", VA = "0x1730FA4")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1731208", Offset = "0x1731208", VA = "0x1731208")]
		public void Start()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x173120C", Offset = "0x173120C", VA = "0x173120C")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x17313B0", Offset = "0x17313B0", VA = "0x17313B0")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x17314C4", Offset = "0x17314C4", VA = "0x17314C4")]
		public WaterTile()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20002EA")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1575320", Offset = "0x1575320", VA = "0x1575320")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x15755B0", Offset = "0x15755B0", VA = "0x15755B0")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1575730", Offset = "0x1575730", VA = "0x1575730")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x15757B0", Offset = "0x15757B0", VA = "0x15757B0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1575898", Offset = "0x1575898", VA = "0x1575898", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1575940", Offset = "0x1575940", VA = "0x1575940")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x15759AC", Offset = "0x15759AC", VA = "0x15759AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x15759B0", Offset = "0x15759B0", VA = "0x15759B0")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1575A98", Offset = "0x1575A98", VA = "0x1575A98")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1575B80", Offset = "0x1575B80", VA = "0x1575B80")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1575C68", Offset = "0x1575C68", VA = "0x1575C68")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1575D50", Offset = "0x1575D50", VA = "0x1575D50")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1575E38", Offset = "0x1575E38", VA = "0x1575E38")]
		public void Update()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1575E3C", Offset = "0x1575E3C", VA = "0x1575E3C")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20002ED")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4001083")]
			Hardware,
			[Token(Token = "0x4001084")]
			Touch
		}

		[Token(Token = "0x20002EE")]
		public class VirtualAxis
		{
			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30918", Offset = "0xF30918")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30928", Offset = "0xF30928")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000156")]
			public string name
			{
				[Token(Token = "0x600102E")]
				[Address(RVA = "0x1576CA4", Offset = "0x1576CA4", VA = "0x1576CA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A318", Offset = "0xF3A318")]
				get
				{
					return null;
				}
				[Token(Token = "0x600102F")]
				[Address(RVA = "0x1576CAC", Offset = "0x1576CAC", VA = "0x1576CAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A328", Offset = "0xF3A328")]
				private set
				{
				}
			}

			[Token(Token = "0x17000157")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001030")]
				[Address(RVA = "0x1576CB4", Offset = "0x1576CB4", VA = "0x1576CB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A338", Offset = "0xF3A338")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001031")]
				[Address(RVA = "0x1576CBC", Offset = "0x1576CBC", VA = "0x1576CBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A348", Offset = "0xF3A348")]
				private set
				{
				}
			}

			[Token(Token = "0x17000158")]
			public float GetValue
			{
				[Token(Token = "0x6001036")]
				[Address(RVA = "0x1576D10", Offset = "0x1576D10", VA = "0x1576D10")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000159")]
			public float GetValueRaw
			{
				[Token(Token = "0x6001037")]
				[Address(RVA = "0x1576D18", Offset = "0x1576D18", VA = "0x1576D18")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x157548C", Offset = "0x157548C", VA = "0x157548C")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x1576CC8", Offset = "0x1576CC8", VA = "0x1576CC8")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x1575748", Offset = "0x1575748", VA = "0x1575748")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x1576D08", Offset = "0x1576D08", VA = "0x1576D08")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20002EF")]
		public class VirtualButton
		{
			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30938", Offset = "0xF30938")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30948", Offset = "0xF30948")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x1700015A")]
			public string name
			{
				[Token(Token = "0x6001038")]
				[Address(RVA = "0x1576D20", Offset = "0x1576D20", VA = "0x1576D20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A358", Offset = "0xF3A358")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001039")]
				[Address(RVA = "0x1576D28", Offset = "0x1576D28", VA = "0x1576D28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A368", Offset = "0xF3A368")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015B")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600103A")]
				[Address(RVA = "0x1576D30", Offset = "0x1576D30", VA = "0x1576D30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A378", Offset = "0xF3A378")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600103B")]
				[Address(RVA = "0x1576D38", Offset = "0x1576D38", VA = "0x1576D38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A388", Offset = "0xF3A388")]
				private set
				{
				}
			}

			[Token(Token = "0x1700015C")]
			public bool GetButton
			{
				[Token(Token = "0x6001041")]
				[Address(RVA = "0x1576E98", Offset = "0x1576E98", VA = "0x1576E98")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700015D")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001042")]
				[Address(RVA = "0x1576EA0", Offset = "0x1576EA0", VA = "0x1576EA0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700015E")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001043")]
				[Address(RVA = "0x1576ED0", Offset = "0x1576ED0", VA = "0x1576ED0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1576D44", Offset = "0x1576D44", VA = "0x1576D44")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x1576D80", Offset = "0x1576D80", VA = "0x1576D80")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x600103E")]
			[Address(RVA = "0x1576DC8", Offset = "0x1576DC8", VA = "0x1576DC8")]
			public void Pressed()
			{
			}

			[Token(Token = "0x600103F")]
			[Address(RVA = "0x1576E04", Offset = "0x1576E04", VA = "0x1576E04")]
			public void Released()
			{
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x1576E30", Offset = "0x1576E30", VA = "0x1576E30")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000155")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1576924", Offset = "0x1576924", VA = "0x1576924")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1575E44", Offset = "0x1575E44", VA = "0x1575E44")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1575EE4", Offset = "0x1575EE4", VA = "0x1575EE4")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1575414", Offset = "0x1575414", VA = "0x1575414")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1575FFC", Offset = "0x1575FFC", VA = "0x1575FFC")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x15754C0", Offset = "0x15754C0", VA = "0x15754C0")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1576204", Offset = "0x1576204", VA = "0x1576204")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x15763A4", Offset = "0x15763A4", VA = "0x15763A4")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x15764F4", Offset = "0x15764F4", VA = "0x15764F4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1575538", Offset = "0x1575538", VA = "0x1575538")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x15752B0", Offset = "0x15752B0", VA = "0x15752B0")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1576728", Offset = "0x1576728", VA = "0x1576728")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1576698", Offset = "0x1576698", VA = "0x1576698")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1576790", Offset = "0x1576790", VA = "0x1576790")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1574F8C", Offset = "0x1574F8C", VA = "0x1574F8C")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1576810", Offset = "0x1576810", VA = "0x1576810")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1575A18", Offset = "0x1575A18", VA = "0x1575A18")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1575B00", Offset = "0x1575B00", VA = "0x1575B00")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1575BE8", Offset = "0x1575BE8", VA = "0x1575BE8")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1575DB8", Offset = "0x1575DB8", VA = "0x1575DB8")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1575CD0", Offset = "0x1575CD0", VA = "0x1575CD0")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1576890", Offset = "0x1576890", VA = "0x1576890")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x15769A0", Offset = "0x15769A0", VA = "0x15769A0")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1576A9C", Offset = "0x1576A9C", VA = "0x1576A9C")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1576BA4", Offset = "0x1576BA4", VA = "0x1576BA4")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1576F00", Offset = "0x1576F00", VA = "0x1576F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1576F04", Offset = "0x1576F04", VA = "0x1576F04")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1576F84", Offset = "0x1576F84", VA = "0x1576F84")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20002F2")]
		public enum AxisOption
		{
			[Token(Token = "0x4001098")]
			Both,
			[Token(Token = "0x4001099")]
			OnlyHorizontal,
			[Token(Token = "0x400109A")]
			OnlyVertical
		}

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1576F8C", Offset = "0x1576F8C", VA = "0x1576F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x15770CC", Offset = "0x15770CC", VA = "0x15770CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1577108", Offset = "0x1577108", VA = "0x1577108")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1576F90", Offset = "0x1576F90", VA = "0x1576F90")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x15771F8", Offset = "0x15771F8", VA = "0x15771F8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x15773E8", Offset = "0x15773E8", VA = "0x15773E8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1577430", Offset = "0x1577430", VA = "0x1577430", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1577434", Offset = "0x1577434", VA = "0x1577434")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1577484", Offset = "0x1577484", VA = "0x1577484")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x15774F4", Offset = "0x15774F4", VA = "0x15774F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1577504", Offset = "0x1577504", VA = "0x1577504")]
		private void Start()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x15774FC", Offset = "0x15774FC", VA = "0x15774FC")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x15775E0", Offset = "0x15775E0", VA = "0x15775E0")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x157784C", Offset = "0x157784C", VA = "0x157784C")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		public enum AxisOptions
		{
			[Token(Token = "0x40010A1")]
			ForwardAxis,
			[Token(Token = "0x40010A2")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x20002F6")]
		public class AxisMapping
		{
			[Token(Token = "0x20002F7")]
			public enum MappingType
			{
				[Token(Token = "0x40010A6")]
				NamedAxis,
				[Token(Token = "0x40010A7")]
				MousePositionX,
				[Token(Token = "0x40010A8")]
				MousePositionY,
				[Token(Token = "0x40010A9")]
				MousePositionZ
			}

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x15786FC", Offset = "0x15786FC", VA = "0x15786FC")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1578388", Offset = "0x1578388", VA = "0x1578388")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1578448", Offset = "0x1578448", VA = "0x1578448")]
		private void Update()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x15786D4", Offset = "0x15786D4", VA = "0x15786D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x15786EC", Offset = "0x15786EC", VA = "0x15786EC")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B5CC", Offset = "0xF2B5CC")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20002F9")]
		public enum AxisOption
		{
			[Token(Token = "0x40010BD")]
			Both,
			[Token(Token = "0x40010BE")]
			OnlyHorizontal,
			[Token(Token = "0x40010BF")]
			OnlyVertical
		}

		[Token(Token = "0x20002FA")]
		public enum ControlStyle
		{
			[Token(Token = "0x40010C1")]
			Absolute,
			[Token(Token = "0x40010C2")]
			Relative,
			[Token(Token = "0x40010C3")]
			Swipe
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1578704", Offset = "0x1578704", VA = "0x1578704")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1578844", Offset = "0x1578844", VA = "0x1578844")]
		private void Start()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1578708", Offset = "0x1578708", VA = "0x1578708")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x15788C0", Offset = "0x15788C0", VA = "0x15788C0")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x157892C", Offset = "0x157892C", VA = "0x157892C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x15789DC", Offset = "0x15789DC", VA = "0x15789DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1578BB0", Offset = "0x1578BB0", VA = "0x1578BB0", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1578C28", Offset = "0x1578C28", VA = "0x1578C28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1578D1C", Offset = "0x1578D1C", VA = "0x1578D1C")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30958", Offset = "0xF30958")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x1700015F")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x1578D94", Offset = "0x1578D94", VA = "0x1578D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A398", Offset = "0xF3A398")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x1578DA0", Offset = "0x1578DA0", VA = "0x1578DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A3A8", Offset = "0xF3A3A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1575F94", Offset = "0x1575F94", VA = "0x1575F94")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1576074", Offset = "0x1576074", VA = "0x1576074")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x15760DC", Offset = "0x15760DC", VA = "0x15760DC")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x157627C", Offset = "0x157627C", VA = "0x157627C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x157645C", Offset = "0x157645C", VA = "0x157645C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x157656C", Offset = "0x157656C", VA = "0x157656C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1576604", Offset = "0x1576604", VA = "0x1576604")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1576A50", Offset = "0x1576A50", VA = "0x1576A50")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1576B50", Offset = "0x1576B50", VA = "0x1576B50")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1576C54", Offset = "0x1576C54", VA = "0x1576C54")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600106F")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6001070")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6001071")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6001072")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001073")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001074")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001075")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001076")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001077")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001078")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001079")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1578000", Offset = "0x1578000", VA = "0x1578000")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20002FC")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1577854", Offset = "0x1577854", VA = "0x1577854")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x15778E8", Offset = "0x15778E8", VA = "0x15778E8")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1577974", Offset = "0x1577974", VA = "0x1577974", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1577A10", Offset = "0x1577A10", VA = "0x1577A10", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1577AC8", Offset = "0x1577AC8", VA = "0x1577AC8", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1577B74", Offset = "0x1577B74", VA = "0x1577B74", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1577C14", Offset = "0x1577C14", VA = "0x1577C14", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1577CB4", Offset = "0x1577CB4", VA = "0x1577CB4", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1577D50", Offset = "0x1577D50", VA = "0x1577D50", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1577DF8", Offset = "0x1577DF8", VA = "0x1577DF8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1577EA8", Offset = "0x1577EA8", VA = "0x1577EA8", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1577F58", Offset = "0x1577F58", VA = "0x1577F58", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1577FF4", Offset = "0x1577FF4", VA = "0x1577FF4", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1575EDC", Offset = "0x1575EDC", VA = "0x1575EDC")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0x15780C0", Offset = "0x15780C0", VA = "0x15780C0", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x15780D4", Offset = "0x15780D4", VA = "0x15780D4", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x15780E0", Offset = "0x15780E0", VA = "0x15780E0", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x15780EC", Offset = "0x15780EC", VA = "0x15780EC", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x15780F8", Offset = "0x15780F8", VA = "0x15780F8", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1578164", Offset = "0x1578164", VA = "0x1578164", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x15781D0", Offset = "0x15781D0", VA = "0x15781D0", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x157823C", Offset = "0x157823C", VA = "0x157823C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x15782A8", Offset = "0x15782A8", VA = "0x15782A8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1578314", Offset = "0x1578314", VA = "0x1578314", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1578380", Offset = "0x1578380", VA = "0x1578380", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1575EE0", Offset = "0x1575EE0", VA = "0x1575EE0")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.ThirdPerson
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B630", Offset = "0xF2B630")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B630", Offset = "0xF2B630")]
	public class AICharacterControl : MonoBehaviour
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30968", Offset = "0xF30968")]
		private NavMeshAgent <agent>k__BackingField;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30978", Offset = "0xF30978")]
		private ThirdPersonCharacter <character>k__BackingField;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x17000160")]
		public NavMeshAgent agent
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x1573CE4", Offset = "0x1573CE4", VA = "0x1573CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A3B8", Offset = "0xF3A3B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x1573CEC", Offset = "0x1573CEC", VA = "0x1573CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A3C8", Offset = "0xF3A3C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public ThirdPersonCharacter character
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1573CF4", Offset = "0x1573CF4", VA = "0x1573CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A3D8", Offset = "0xF3A3D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x1573CFC", Offset = "0x1573CFC", VA = "0x1573CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A3E8", Offset = "0xF3A3E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1573D04", Offset = "0x1573D04", VA = "0x1573D04")]
		private void Start()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1573DA0", Offset = "0x1573DA0", VA = "0x1573DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x157407C", Offset = "0x157407C", VA = "0x157407C")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1574084", Offset = "0x1574084", VA = "0x1574084")]
		public AICharacterControl()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B6BC", Offset = "0xF2B6BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B6BC", Offset = "0xF2B6BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B6BC", Offset = "0xF2B6BC")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF309B8", Offset = "0xF309B8")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x40010D7")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x157408C", Offset = "0x157408C", VA = "0x157408C")]
		private void Start()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1573EC4", Offset = "0x1573EC4", VA = "0x1573EC4")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1574614", Offset = "0x1574614", VA = "0x1574614")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x15748B0", Offset = "0x15748B0", VA = "0x15748B0")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1574A68", Offset = "0x1574A68", VA = "0x1574A68")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1574500", Offset = "0x1574500", VA = "0x1574500")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x15743C0", Offset = "0x15743C0", VA = "0x15743C0")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x15742F0", Offset = "0x15742F0", VA = "0x15742F0")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1574CB4", Offset = "0x1574CB4", VA = "0x1574CB4")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x157415C", Offset = "0x157415C", VA = "0x157415C")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1574DE4", Offset = "0x1574DE4", VA = "0x1574DE4")]
		public ThirdPersonCharacter()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B770", Offset = "0xF2B770")]
	public class ThirdPersonUserControl : MonoBehaviour
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ThirdPersonCharacter m_Character;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1574E04", Offset = "0x1574E04", VA = "0x1574E04")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1574F0C", Offset = "0x1574F0C", VA = "0x1574F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x157500C", Offset = "0x157500C", VA = "0x157500C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1575318", Offset = "0x1575318", VA = "0x1575318")]
		public ThirdPersonUserControl()
		{
		}
	}
}
namespace PlayfulSystems
{
	[Token(Token = "0x2000301")]
	public class ImageSlicedMirror : Image
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2[] s_VertScratch;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2[] s_UVScratch;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float[] s_UVMultiplierScratch;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x13FFCC8", Offset = "0x13FFCC8", VA = "0x13FFCC8", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper toFill)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x13FFD9C", Offset = "0x13FFD9C", VA = "0x13FFD9C")]
		private void GenerateSlicedFilledSprite(VertexHelper toFill)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1400350", Offset = "0x1400350", VA = "0x1400350")]
		private void SetSlicedVerts(Rect rect, Vector4 border, Vector4 padding)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x14005E8", Offset = "0x14005E8", VA = "0x14005E8")]
		private void SetSlicedUVs(Vector4 outer, Vector4 inner, Vector4 border)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1400AEC", Offset = "0x1400AEC", VA = "0x1400AEC")]
		private static void AddQuad(VertexHelper vertexHelper, Vector2 posMin, Vector2 posMax, Color32 color, Vector2 uvMin, Vector2 uvMax)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1400234", Offset = "0x1400234", VA = "0x1400234")]
		private Vector4 GetAdjustedBorders(Vector4 border, Rect rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1400CF8", Offset = "0x1400CF8", VA = "0x1400CF8")]
		public ImageSlicedMirror()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public static class Utils
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x11F777C", Offset = "0x11F777C", VA = "0x11F777C")]
		public static float EaseSinInOut(float lerp, float start, float change)
		{
			return default(float);
		}
	}
}
namespace PlayfulSystems.ProgressBar
{
	[Token(Token = "0x2000303")]
	public class TestBarControl : MonoBehaviour
	{
		[Token(Token = "0x2000304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B7D4", Offset = "0xF2B7D4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentValue;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TestBarControl <>4__this;

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x11F928C", Offset = "0x11F928C", VA = "0x11F928C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x11F9798", Offset = "0x11F9798", VA = "0x11F9798")]
			internal void <SetupButtons>b__0()
			{
			}
		}

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform barParent;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform sizeButtonParent;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TestSwitchBar[] barSelectors;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProgressBarPro[] bars;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button[] buttons;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider slider;

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x11F8FA4", Offset = "0x11F8FA4", VA = "0x11F8FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x11F90C0", Offset = "0x11F90C0", VA = "0x11F90C0")]
		private void SetupButtons()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x11F9294", Offset = "0x11F9294", VA = "0x11F9294")]
		private void SetSlider(float value)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x11F9344", Offset = "0x11F9344", VA = "0x11F9344")]
		public void SetBars(float value)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x11F958C", Offset = "0x11F958C", VA = "0x11F958C")]
		public void SetRandomColor()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x11F9604", Offset = "0x11F9604", VA = "0x11F9604")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x11F9790", Offset = "0x11F9790", VA = "0x11F9790")]
		public TestBarControl()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B7E4", Offset = "0xF2B7E4")]
	public class BarViewColor : ProgressBarProView
	{
		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B848", Offset = "0xF2B848")]
		private sealed class <DoBarColorAnim>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarViewColor <>4__this;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color targetColor;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <time>5__2;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CA")]
				[Address(RVA = "0x11F781C", Offset = "0x11F781C", VA = "0x11F781C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CC")]
				[Address(RVA = "0x11F7884", Offset = "0x11F7884", VA = "0x11F7884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x11F74FC", Offset = "0x11F74FC", VA = "0x11F74FC")]
			[DebuggerHidden]
			public <DoBarColorAnim>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x11F7684", Offset = "0x11F7684", VA = "0x11F7684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x11F7688", Offset = "0x11F7688", VA = "0x11F7688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x11F7824", Offset = "0x11F7824", VA = "0x11F7824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Graphic graphic;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF30A78", Offset = "0xF30A78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30A78", Offset = "0xF30A78")]
		[SerializeField]
		private bool canOverrideColor;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30AF8", Offset = "0xF30AF8")]
		[SerializeField]
		private bool useGradient;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.Gradient barGradient;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color flashColor;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float flashcolorAlpha;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentValue;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF30B54", Offset = "0xF30B54")]
		[SerializeField]
		private bool flashOnGain;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Color gainColor;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool flashOnLoss;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color lossColor;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float flashTime;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine colorAnim;

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x11F730C", Offset = "0x11F730C", VA = "0x11F730C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x11F7360", Offset = "0x11F7360", VA = "0x11F7360", Slot = "4")]
		public override void NewChangeStarted(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x11F7454", Offset = "0x11F7454", VA = "0x11F7454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A3F8", Offset = "0xF3A3F8")]
		private IEnumerator DoBarColorAnim(Color targetColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x11F7528", Offset = "0x11F7528", VA = "0x11F7528", Slot = "5")]
		public override void SetBarColor(Color color)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x11F754C", Offset = "0x11F754C", VA = "0x11F754C")]
		private void SetOverrideColor(Color color, float alpha)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x11F755C", Offset = "0x11F755C", VA = "0x11F755C", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x11F7314", Offset = "0x11F7314", VA = "0x11F7314")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x11F7570", Offset = "0x11F7570", VA = "0x11F7570")]
		private Color GetCurrentColor(float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x11F761C", Offset = "0x11F761C", VA = "0x11F761C")]
		public BarViewColor()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B858", Offset = "0xF2B858")]
	public class BarViewColorWhileMoving : ProgressBarProView
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Graphic graphic;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color colorStatic;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color colorMoving;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float blendTimeOnMove;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float blendTimeOnStop;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isMoving;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x11F788C", Offset = "0x11F788C", VA = "0x11F788C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x11F7904", Offset = "0x11F7904", VA = "0x11F7904", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x11F79AC", Offset = "0x11F79AC", VA = "0x11F79AC")]
		private Color GetCurrentColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x11F7890", Offset = "0x11F7890", VA = "0x11F7890")]
		private void SetDefaultColor()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x11F79EC", Offset = "0x11F79EC", VA = "0x11F79EC")]
		public BarViewColorWhileMoving()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class BarViewPosAnchors : BarViewSizeAnchors
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x11F7A3C", Offset = "0x11F7A3C", VA = "0x11F7A3C", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x11F7D90", Offset = "0x11F7D90", VA = "0x11F7D90")]
		public BarViewPosAnchors()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B8BC", Offset = "0xF2B8BC")]
	public class BarViewPosImageFill : ProgressBarProView
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform rectTrans;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image referenceImage;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF30C50", Offset = "0xF30C50")]
		[SerializeField]
		private float offset;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x11F7DC0", Offset = "0x11F7DC0", VA = "0x11F7DC0", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x11F7E20", Offset = "0x11F7E20", VA = "0x11F7E20")]
		private Vector2 GetAnchor(float currentDisplay)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x11F7F44", Offset = "0x11F7F44", VA = "0x11F7F44")]
		private Vector2 GetAnchorHorizontal(float fillAmount, int fillOrigin)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x11F7F90", Offset = "0x11F7F90", VA = "0x11F7F90")]
		private Vector2 GetAnchorVertical(float fillAmount, int fillOrigin)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x11F7FDC", Offset = "0x11F7FDC", VA = "0x11F7FDC")]
		private Vector2 GetAnchorRadial360(float fillAmount, int fillOrigin, bool fillClockwise)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x11F8050", Offset = "0x11F8050", VA = "0x11F8050")]
		private Vector2 GetPointOnCircle(float degrees)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x11F811C", Offset = "0x11F811C", VA = "0x11F811C")]
		public BarViewPosImageFill()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B920", Offset = "0xF2B920")]
	public class BarViewScale : ProgressBarProView
	{
		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2B984", Offset = "0xF2B984")]
		private sealed class <DoBarScaleAnim>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarViewScale <>4__this;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <time>5__2;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E5")]
				[Address(RVA = "0x11F84E8", Offset = "0x11F84E8", VA = "0x11F84E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E7")]
				[Address(RVA = "0x11F8550", Offset = "0x11F8550", VA = "0x11F8550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x11F8250", Offset = "0x11F8250", VA = "0x11F8250")]
			[DebuggerHidden]
			public <DoBarScaleAnim>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x11F8428", Offset = "0x11F8428", VA = "0x11F8428", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x11F842C", Offset = "0x11F842C", VA = "0x11F842C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x11F84F0", Offset = "0x11F84F0", VA = "0x11F84F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected RectTransform graphic;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF30CA0", Offset = "0xF30CA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30CA0", Offset = "0xF30CA0")]
		[SerializeField]
		private bool animateOnChange;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 minSize;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 maxSize;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF30D30", Offset = "0xF30D30")]
		[SerializeField]
		private AnimationCurve scale;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float animDuration;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine scaleAnim;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x11F8124", Offset = "0x11F8124", VA = "0x11F8124")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x11F815C", Offset = "0x11F815C", VA = "0x11F815C", Slot = "4")]
		public override void NewChangeStarted(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x11F81D0", Offset = "0x11F81D0", VA = "0x11F81D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A4AC", Offset = "0xF3A4AC")]
		private IEnumerator DoBarScaleAnim(float duration)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x11F827C", Offset = "0x11F827C", VA = "0x11F827C", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x11F812C", Offset = "0x11F812C", VA = "0x11F812C")]
		private void UpdateScale(float value = 0f)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x11F8294", Offset = "0x11F8294", VA = "0x11F8294")]
		private Vector3 GetCurrentScale(float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x11F8360", Offset = "0x11F8360", VA = "0x11F8360")]
		public BarViewScale()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B994", Offset = "0xF2B994")]
	public class BarViewSizeAnchors : ProgressBarProView
	{
		[Token(Token = "0x200030D")]
		public enum FillType
		{
			[Token(Token = "0x4001120")]
			LeftToRight,
			[Token(Token = "0x4001121")]
			RightToLeft,
			[Token(Token = "0x4001122")]
			TopToBottom,
			[Token(Token = "0x4001123")]
			BottomToTop
		}

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected RectTransform rectTrans;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected FillType fillType;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool hideOnEmpty;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool useDiscreteSteps;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int numSteps;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		protected bool isDisplaySizeZero;

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x11F8558", Offset = "0x11F8558", VA = "0x11F8558", Slot = "6")]
		public override bool CanUpdateView(float currentValue, float targetValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x11F8594", Offset = "0x11F8594", VA = "0x11F8594", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x11F7A44", Offset = "0x11F7A44", VA = "0x11F7A44")]
		protected void SetPivot(float startEdge, float endEdge)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x11F8638", Offset = "0x11F8638", VA = "0x11F8638")]
		private void UpdateTracker()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x11F8668", Offset = "0x11F8668", VA = "0x11F8668")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x11F7DA8", Offset = "0x11F7DA8", VA = "0x11F7DA8")]
		public BarViewSizeAnchors()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2B9F8", Offset = "0xF2B9F8")]
	public class BarViewSizeAnchorsShadow : BarViewSizeAnchors
	{
		[Token(Token = "0x200030F")]
		public enum ShadowType
		{
			[Token(Token = "0x4001126")]
			Gaining,
			[Token(Token = "0x4001127")]
			Losing
		}

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShadowType shadowType;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x11F8674", Offset = "0x11F8674", VA = "0x11F8674", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x11F879C", Offset = "0x11F879C", VA = "0x11F879C")]
		public BarViewSizeAnchorsShadow()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BA5C", Offset = "0xF2BA5C")]
	public class BarViewSizeImageFill : ProgressBarProView
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Image image;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool hideOnEmpty;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool useDiscreteSteps;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int numSteps;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isDisplaySizeZero;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x11F87B4", Offset = "0x11F87B4", VA = "0x11F87B4", Slot = "6")]
		public override bool CanUpdateView(float currentValue, float targetValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x11F87F0", Offset = "0x11F87F0", VA = "0x11F87F0", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x11F88A4", Offset = "0x11F88A4", VA = "0x11F88A4")]
		private float GetDisplayValue(float display)
		{
			return default(float);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x11F89A8", Offset = "0x11F89A8", VA = "0x11F89A8")]
		public BarViewSizeImageFill()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BAC0", Offset = "0xF2BAC0")]
	public class BarViewValueText : ProgressBarProView
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string prefix;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minValue;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxValue;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int numDecimals;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool showMaxValue;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string numberUnit;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string suffix;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastDisplayValue;

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x11F89C0", Offset = "0x11F89C0", VA = "0x11F89C0", Slot = "6")]
		public override bool CanUpdateView(float currentValue, float targetValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x11F8C20", Offset = "0x11F8C20", VA = "0x11F8C20", Slot = "7")]
		public override void UpdateView(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x11F8E9C", Offset = "0x11F8E9C", VA = "0x11F8E9C")]
		private float GetDisplayValue(float num)
		{
			return default(float);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x11F8A80", Offset = "0x11F8A80", VA = "0x11F8A80")]
		private float GetRoundedDisplayValue(float num)
		{
			return default(float);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x11F8E08", Offset = "0x11F8E08", VA = "0x11F8E08")]
		private string FormatNumber(float num)
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x11F8F24", Offset = "0x11F8F24", VA = "0x11F8F24")]
		public BarViewValueText()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public abstract class ProgressBarProView : MonoBehaviour
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x11F8F94", Offset = "0x11F8F94", VA = "0x11F8F94", Slot = "4")]
		public virtual void NewChangeStarted(float currentValue, float targetValue)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x11F8F98", Offset = "0x11F8F98", VA = "0x11F8F98", Slot = "5")]
		public virtual void SetBarColor(Color color)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x11F8F9C", Offset = "0x11F8F9C", VA = "0x11F8F9C", Slot = "6")]
		public virtual bool CanUpdateView(float currentValue, float targetValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		public abstract void UpdateView(float currentValue, float targetValue);

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x11F767C", Offset = "0x11F767C", VA = "0x11F767C")]
		protected ProgressBarProView()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000313")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000166")]
		public bool Highlight
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x1A01A64", Offset = "0x1A01A64", VA = "0x1A01A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x1A01A6C", Offset = "0x1A01A6C", VA = "0x1A01A6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1A01A78", Offset = "0x1A01A78", VA = "0x1A01A78")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1A01C44", Offset = "0x1A01C44", VA = "0x1A01C44", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1A01C6C", Offset = "0x1A01C6C", VA = "0x1A01C6C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1A01C94", Offset = "0x1A01C94", VA = "0x1A01C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1A01B44", Offset = "0x1A01B44", VA = "0x1A01B44")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1A01EE8", Offset = "0x1A01EE8", VA = "0x1A01EE8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000167")]
		public bool InRange
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x1A02264", Offset = "0x1A02264", VA = "0x1A02264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x1A0226C", Offset = "0x1A0226C", VA = "0x1A0226C")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public bool Targeted
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x1A023F8", Offset = "0x1A023F8", VA = "0x1A023F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x1A02400", Offset = "0x1A02400", VA = "0x1A02400")]
			set
			{
			}
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1A0240C", Offset = "0x1A0240C", VA = "0x1A0240C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1A02278", Offset = "0x1A02278", VA = "0x1A02278")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1A0253C", Offset = "0x1A0253C", VA = "0x1A0253C")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1A02580", Offset = "0x1A02580", VA = "0x1A02580")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1A025DC", Offset = "0x1A025DC", VA = "0x1A025DC")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BB24", Offset = "0xF2BB24")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000169")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x1A025E4", Offset = "0x1A025E4", VA = "0x1A025E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x1A025EC", Offset = "0x1A025EC", VA = "0x1A025EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1A02608", Offset = "0x1A02608", VA = "0x1A02608", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1A02794", Offset = "0x1A02794", VA = "0x1A02794", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1A03128", Offset = "0x1A03128", VA = "0x1A03128", Slot = "9")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1A036E8", Offset = "0x1A036E8", VA = "0x1A036E8", Slot = "10")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1A03AC8", Offset = "0x1A03AC8", VA = "0x1A03AC8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1A02A5C", Offset = "0x1A02A5C", VA = "0x1A02A5C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1A03BA4", Offset = "0x1A03BA4", VA = "0x1A03BA4")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1A03FDC", Offset = "0x1A03FDC", VA = "0x1A03FDC", Slot = "12")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1A03FF4", Offset = "0x1A03FF4", VA = "0x1A03FF4", Slot = "13")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1A03FFC", Offset = "0x1A03FFC", VA = "0x1A03FFC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x142D794", Offset = "0x142D794", VA = "0x142D794")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x142D844", Offset = "0x142D844", VA = "0x142D844")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x142D8F4", Offset = "0x142D8F4", VA = "0x142D8F4")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000318")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001158")]
			Disabled,
			[Token(Token = "0x4001159")]
			Enabled,
			[Token(Token = "0x400115A")]
			Targeted
		}

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x142D8FC", Offset = "0x142D8FC", VA = "0x142D8FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x142D964", Offset = "0x142D964", VA = "0x142D964")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x142DA00", Offset = "0x142DA00", VA = "0x142DA00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x142DA48", Offset = "0x142DA48", VA = "0x142DA48")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1432AF4", Offset = "0x1432AF4", VA = "0x1432AF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1432BC0", Offset = "0x1432BC0", VA = "0x1432BC0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1432BCC", Offset = "0x1432BCC", VA = "0x1432BCC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1432BD8", Offset = "0x1432BD8", VA = "0x1432BD8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1A00588", Offset = "0x1A00588", VA = "0x1A00588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1A005E0", Offset = "0x1A005E0", VA = "0x1A005E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1A00884", Offset = "0x1A00884", VA = "0x1A00884")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1A00974", Offset = "0x1A00974", VA = "0x1A00974")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1A005E4", Offset = "0x1A005E4", VA = "0x1A005E4")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1A00A64", Offset = "0x1A00A64", VA = "0x1A00A64")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200031C")]
		public enum ContactTest
		{
			[Token(Token = "0x400116C")]
			PerpenTest,
			[Token(Token = "0x400116D")]
			BackwardsPress
		}

		[Token(Token = "0x400115E")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400115F")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700016A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x1A00AFC", Offset = "0x1A00AFC", VA = "0x1A00AFC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1A00B04", Offset = "0x1A00B04", VA = "0x1A00B04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1A00B10", Offset = "0x1A00B10", VA = "0x1A00B10", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1A00C00", Offset = "0x1A00C00", VA = "0x1A00C00")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1A00E04", Offset = "0x1A00E04", VA = "0x1A00E04")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1A00F64", Offset = "0x1A00F64", VA = "0x1A00F64")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1A010C4", Offset = "0x1A010C4", VA = "0x1A010C4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1A0158C", Offset = "0x1A0158C", VA = "0x1A0158C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1A01674", Offset = "0x1A01674", VA = "0x1A01674")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1A01768", Offset = "0x1A01768", VA = "0x1A01768")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1A0188C", Offset = "0x1A0188C", VA = "0x1A0188C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30FEC", Offset = "0xF30FEC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF30FFC", Offset = "0xF30FFC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700016C")]
		public Collider Collider
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x1A01970", Offset = "0x1A01970", VA = "0x1A01970", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A560", Offset = "0xF3A560")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1A01978", Offset = "0x1A01978", VA = "0x1A01978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A570", Offset = "0xF3A570")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x1A01980", Offset = "0x1A01980", VA = "0x1A01980", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A580", Offset = "0xF3A580")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1A01988", Offset = "0x1A01988", VA = "0x1A01988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A590", Offset = "0xF3A590")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x1A01990", Offset = "0x1A01990", VA = "0x1A01990", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1A019E0", Offset = "0x1A019E0", VA = "0x1A019E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1A01A5C", Offset = "0x1A01A5C", VA = "0x1A01A5C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700016F")]
		Collider Collider
		{
			[Token(Token = "0x6001140")]
			get;
		}

		[Token(Token = "0x17000170")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001141")]
			get;
		}

		[Token(Token = "0x17000171")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001142")]
			get;
		}
	}
	[Token(Token = "0x200031F")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1A00D60", Offset = "0x1A00D60", VA = "0x1A00D60")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public enum InteractionType
	{
		[Token(Token = "0x4001176")]
		Enter,
		[Token(Token = "0x4001177")]
		Stay,
		[Token(Token = "0x4001178")]
		Exit
	}
	[Token(Token = "0x2000321")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000322")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400118A")]
			Mesh,
			[Token(Token = "0x400118B")]
			Skeleton,
			[Token(Token = "0x400118C")]
			Both
		}

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BB88", Offset = "0xF2BB88")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001165")]
				[Address(RVA = "0x142EA24", Offset = "0x142EA24", VA = "0x142EA24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001167")]
				[Address(RVA = "0x142EA8C", Offset = "0x142EA8C", VA = "0x142EA8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x142E430", Offset = "0x142E430", VA = "0x142E430")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x142E804", Offset = "0x142E804", VA = "0x142E804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x142E808", Offset = "0x142E808", VA = "0x142E808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x142EA2C", Offset = "0x142EA2C", VA = "0x142EA2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001179")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3102C", Offset = "0xF3102C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000172")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x142C890", Offset = "0x142C890", VA = "0x142C890")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x142DA50", Offset = "0x142DA50", VA = "0x142DA50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x142D418", Offset = "0x142D418", VA = "0x142D418")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x142DAB8", Offset = "0x142DAB8", VA = "0x142DAB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x142DB20", Offset = "0x142DB20", VA = "0x142DB20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x142DB58", Offset = "0x142DB58", VA = "0x142DB58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x142DBC0", Offset = "0x142DBC0", VA = "0x142DBC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x142DBF8", Offset = "0x142DBF8", VA = "0x142DBF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x142DC60", Offset = "0x142DC60", VA = "0x142DC60")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x142DC98", Offset = "0x142DC98", VA = "0x142DC98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x142C85C", Offset = "0x142C85C", VA = "0x142C85C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x142DD00", Offset = "0x142DD00", VA = "0x142DD00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x142D3E4", Offset = "0x142D3E4", VA = "0x142D3E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x142DD64", Offset = "0x142DD64", VA = "0x142DD64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x142DDC8", Offset = "0x142DDC8", VA = "0x142DDC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x142DDFC", Offset = "0x142DDFC", VA = "0x142DDFC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x142DE60", Offset = "0x142DE60", VA = "0x142DE60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x142DE94", Offset = "0x142DE94", VA = "0x142DE94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x142DEF8", Offset = "0x142DEF8", VA = "0x142DEF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x142DF2C", Offset = "0x142DF2C", VA = "0x142DF2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x142DF90", Offset = "0x142DF90", VA = "0x142DF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A5A0", Offset = "0xF3A5A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x142DFE0", Offset = "0x142DFE0", VA = "0x142DFE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A5B0", Offset = "0xF3A5B0")]
			private set
			{
			}
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x142E034", Offset = "0x142E034", VA = "0x142E034")]
		private void Awake()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x142E3A8", Offset = "0x142E3A8", VA = "0x142E3A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x142E338", Offset = "0x142E338", VA = "0x142E338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A5C0", Offset = "0xF3A5C0")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x142E45C", Offset = "0x142E45C", VA = "0x142E45C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x142E544", Offset = "0x142E544", VA = "0x142E544")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x142D450", Offset = "0x142D450", VA = "0x142D450")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x142C6CC", Offset = "0x142C6CC", VA = "0x142C6CC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x142E724", Offset = "0x142E724", VA = "0x142E724")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000325")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x142F248", Offset = "0x142F248", VA = "0x142F248")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700017F")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x142EA94", Offset = "0x142EA94", VA = "0x142EA94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x142EA9C", Offset = "0x142EA9C", VA = "0x142EA9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x142EAA4", Offset = "0x142EAA4", VA = "0x142EAA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x142EAAC", Offset = "0x142EAAC", VA = "0x142EAAC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x142EAB4", Offset = "0x142EAB4", VA = "0x142EAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A674", Offset = "0xF3A674")]
			add
			{
			}
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x142EB58", Offset = "0x142EB58", VA = "0x142EB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A684", Offset = "0xF3A684")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x142EC70", Offset = "0x142EC70", VA = "0x142EC70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A694", Offset = "0xF3A694")]
			add
			{
			}
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x142ED14", Offset = "0x142ED14", VA = "0x142ED14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A6A4", Offset = "0xF3A6A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x142EE2C", Offset = "0x142EE2C", VA = "0x142EE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A6B4", Offset = "0xF3A6B4")]
			add
			{
			}
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x142EED0", Offset = "0x142EED0", VA = "0x142EED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A6C4", Offset = "0xF3A6C4")]
			remove
			{
			}
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x142EBFC", Offset = "0x142EBFC", VA = "0x142EBFC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x142EDB8", Offset = "0x142EDB8", VA = "0x142EDB8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x142EF74", Offset = "0x142EF74", VA = "0x142EF74", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001175")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x142EFE8", Offset = "0x142EFE8", VA = "0x142EFE8", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x142F114", Offset = "0x142F114", VA = "0x142F114", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x142F240", Offset = "0x142F240", VA = "0x142F240")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001198")]
		None,
		[Token(Token = "0x4001199")]
		Proximity,
		[Token(Token = "0x400119A")]
		Contact,
		[Token(Token = "0x400119B")]
		Action
	}
	[Token(Token = "0x2000327")]
	public enum InteractableState
	{
		[Token(Token = "0x400119D")]
		Default,
		[Token(Token = "0x400119E")]
		ProximityState,
		[Token(Token = "0x400119F")]
		ContactState,
		[Token(Token = "0x40011A0")]
		ActionState
	}
	[Token(Token = "0x2000328")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x142F37C", Offset = "0x142F37C", VA = "0x142F37C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000183")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x142F298", Offset = "0x142F298", VA = "0x142F298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x142F04C", Offset = "0x142F04C", VA = "0x142F04C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x142F178", Offset = "0x142F178", VA = "0x142F178")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x142F300", Offset = "0x142F300", VA = "0x142F300")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BB98", Offset = "0xF2BB98")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000184")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001188")]
				[Address(RVA = "0x1430494", Offset = "0x1430494", VA = "0x1430494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600118A")]
				[Address(RVA = "0x14304FC", Offset = "0x14304FC", VA = "0x14304FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x142FF58", Offset = "0x142FF58", VA = "0x142FF58")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x1430084", Offset = "0x1430084", VA = "0x1430084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x14300F8", Offset = "0x14300F8", VA = "0x14300F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x14300A0", Offset = "0x14300A0", VA = "0x14300A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x143049C", Offset = "0x143049C", VA = "0x143049C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x142FE50", Offset = "0x142FE50", VA = "0x142FE50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x142FECC", Offset = "0x142FECC", VA = "0x142FECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A6D4", Offset = "0xF3A6D4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x142FF84", Offset = "0x142FF84", VA = "0x142FF84")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x143007C", Offset = "0x143007C", VA = "0x143007C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000186")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x142C108", Offset = "0x142C108", VA = "0x142C108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x142C270", Offset = "0x142C270", VA = "0x142C270")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1430504", Offset = "0x1430504", VA = "0x1430504")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x14305B0", Offset = "0x14305B0", VA = "0x14305B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1430878", Offset = "0x1430878", VA = "0x1430878")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x14308C0", Offset = "0x14308C0", VA = "0x14308C0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1430B10", Offset = "0x1430B10", VA = "0x1430B10")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1430C3C", Offset = "0x1430C3C", VA = "0x1430C3C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BBA8", Offset = "0xF2BBA8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0x142D660", Offset = "0x142D660", VA = "0x142D660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A6")]
				[Address(RVA = "0x142D6C8", Offset = "0x142D6C8", VA = "0x142D6C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x142C38C", Offset = "0x142C38C", VA = "0x142C38C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x142D074", Offset = "0x142D074", VA = "0x142D074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x142D078", Offset = "0x142D078", VA = "0x142D078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x142D668", Offset = "0x142D668", VA = "0x142D668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011B9")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000187")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x142BFEC", Offset = "0x142BFEC", VA = "0x142BFEC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000188")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x142BFF4", Offset = "0x142BFF4", VA = "0x142BFF4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000189")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x142BFFC", Offset = "0x142BFFC", VA = "0x142BFFC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018A")]
		public override bool EnableState
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x142C004", Offset = "0x142C004", VA = "0x142C004", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x142C030", Offset = "0x142C030", VA = "0x142C030", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x142C06C", Offset = "0x142C06C", VA = "0x142C06C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x142C31C", Offset = "0x142C31C", VA = "0x142C31C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A788", Offset = "0xF3A788")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x142C3B8", Offset = "0x142C3B8", VA = "0x142C3B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x142C8C8", Offset = "0x142C8C8", VA = "0x142C8C8")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x142CB40", Offset = "0x142CB40", VA = "0x142CB40")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x142CC80", Offset = "0x142CC80", VA = "0x142CC80", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x142CF48", Offset = "0x142CF48", VA = "0x142CF48", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x142CF4C", Offset = "0x142CF4C", VA = "0x142CF4C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x142CF50", Offset = "0x142CF50", VA = "0x142CF50")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF310BC", Offset = "0xF310BC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF310CC", Offset = "0xF310CC")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF310DC", Offset = "0xF310DC")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700018D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x142D6D0", Offset = "0x142D6D0", VA = "0x142D6D0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A83C", Offset = "0xF3A83C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x142D6D8", Offset = "0x142D6D8", VA = "0x142D6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A84C", Offset = "0xF3A84C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public bool EnableState
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x142D6E0", Offset = "0x142D6E0", VA = "0x142D6E0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x142D6FC", Offset = "0x142D6FC", VA = "0x142D6FC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x142D71C", Offset = "0x142D71C", VA = "0x142D71C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A85C", Offset = "0xF3A85C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x142D724", Offset = "0x142D724", VA = "0x142D724", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A86C", Offset = "0xF3A86C")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public float SphereRadius
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x142D730", Offset = "0x142D730", VA = "0x142D730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A87C", Offset = "0xF3A87C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x142D738", Offset = "0x142D738", VA = "0x142D738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A88C", Offset = "0xF3A88C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x142D740", Offset = "0x142D740", VA = "0x142D740")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x142D788", Offset = "0x142D788", VA = "0x142D788", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x142D78C", Offset = "0x142D78C", VA = "0x142D78C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40011CC")]
		None = 0,
		[Token(Token = "0x40011CD")]
		Ray = 1,
		[Token(Token = "0x40011CE")]
		Poke = 4,
		[Token(Token = "0x40011CF")]
		All = -1
	}
	[Token(Token = "0x2000331")]
	public enum ToolInputState
	{
		[Token(Token = "0x40011D1")]
		Inactive,
		[Token(Token = "0x40011D2")]
		PrimaryInputDown,
		[Token(Token = "0x40011D3")]
		PrimaryInputDownStay,
		[Token(Token = "0x40011D4")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000332")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x142CF04", Offset = "0x142CF04", VA = "0x142CF04")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF310EC", Offset = "0xF310EC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF310FC", Offset = "0xF310FC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3110C", Offset = "0xF3110C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000191")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x142F420", Offset = "0x142F420", VA = "0x142F420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x142F428", Offset = "0x142F428", VA = "0x142F428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A89C", Offset = "0xF3A89C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x142F430", Offset = "0x142F430", VA = "0x142F430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8AC", Offset = "0xF3A8AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011B6")]
			get;
		}

		[Token(Token = "0x17000194")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60011B7")]
			get;
		}

		[Token(Token = "0x17000195")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60011B8")]
			get;
		}

		[Token(Token = "0x17000196")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x142F43C", Offset = "0x142F43C", VA = "0x142F43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8BC", Offset = "0xF3A8BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x142F448", Offset = "0x142F448", VA = "0x142F448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8CC", Offset = "0xF3A8CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x142F454", Offset = "0x142F454", VA = "0x142F454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8DC", Offset = "0xF3A8DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x142F460", Offset = "0x142F460", VA = "0x142F460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8EC", Offset = "0xF3A8EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60011C1")]
			get;
			[Token(Token = "0x60011C2")]
			set;
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x142F46C", Offset = "0x142F46C", VA = "0x142F46C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60011BF")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60011C0")]
		public abstract void DeFocus();

		[Token(Token = "0x60011C3")]
		public abstract void Initialize();

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x142F474", Offset = "0x142F474", VA = "0x142F474")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x142F4C4", Offset = "0x142F4C4", VA = "0x142F4C4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x142F51C", Offset = "0x142F51C", VA = "0x142F51C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x142F760", Offset = "0x142F760", VA = "0x142F760", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x142CF64", Offset = "0x142CF64", VA = "0x142CF64")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000199")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60011C9")]
			get;
		}

		[Token(Token = "0x1700019A")]
		bool EnableState
		{
			[Token(Token = "0x60011CB")]
			get;
			[Token(Token = "0x60011CC")]
			set;
		}

		[Token(Token = "0x1700019B")]
		bool ToolActivateState
		{
			[Token(Token = "0x60011CD")]
			get;
			[Token(Token = "0x60011CE")]
			set;
		}

		[Token(Token = "0x60011CA")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000335")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000336")]
		private enum PinchState
		{
			[Token(Token = "0x40011E5")]
			None,
			[Token(Token = "0x40011E6")]
			PinchDown,
			[Token(Token = "0x40011E7")]
			PinchStay,
			[Token(Token = "0x40011E8")]
			PinchUp
		}

		[Token(Token = "0x40011E1")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700019C")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x1432BE0", Offset = "0x1432BE0", VA = "0x1432BE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x1432C6C", Offset = "0x1432C6C", VA = "0x1432C6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x1432CF8", Offset = "0x1432CF8", VA = "0x1432CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1432D84", Offset = "0x1432D84", VA = "0x1432D84")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1432DB0", Offset = "0x1432DB0", VA = "0x1432DB0")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40011E9")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40011EA")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40011EB")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40011EC")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40011ED")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3112C", Offset = "0xF3112C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700019F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1433050", Offset = "0x1433050", VA = "0x1433050", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001A0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x1433058", Offset = "0x1433058", VA = "0x1433058", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001A1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x14330C0", Offset = "0x14330C0", VA = "0x14330C0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public override bool EnableState
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x14330C8", Offset = "0x14330C8", VA = "0x14330C8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x143310C", Offset = "0x143310C", VA = "0x143310C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1433180", Offset = "0x1433180", VA = "0x1433180", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x14331D8", Offset = "0x14331D8", VA = "0x14331D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1433274", Offset = "0x1433274", VA = "0x1433274")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1433574", Offset = "0x1433574", VA = "0x1433574")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1433670", Offset = "0x1433670", VA = "0x1433670", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x14339D4", Offset = "0x14339D4", VA = "0x14339D4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1433B78", Offset = "0x1433B78", VA = "0x1433B78")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x1433CA0", Offset = "0x1433CA0", VA = "0x1433CA0")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x1433FD8", Offset = "0x1433FD8", VA = "0x1433FD8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x14343E8", Offset = "0x14343E8", VA = "0x14343E8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x14344BC", Offset = "0x14344BC", VA = "0x14344BC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x14344F0", Offset = "0x14344F0", VA = "0x14344F0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40011F9")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40011FA")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.Gradient _oldColorGradient;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Gradient _highLightColorGradient;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF311A0", Offset = "0xF311A0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001A3")]
		public bool EnableState
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x14330F0", Offset = "0x14330F0", VA = "0x14330F0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x1433128", Offset = "0x1433128", VA = "0x1433128", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x14345A8", Offset = "0x14345A8", VA = "0x14345A8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x1433538", Offset = "0x1433538", VA = "0x1433538", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x14347D8", Offset = "0x14347D8", VA = "0x14347D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A8FC", Offset = "0xF3A8FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x14347E0", Offset = "0x14347E0", VA = "0x14347E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A90C", Offset = "0xF3A90C")]
			set
			{
			}
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x14345B0", Offset = "0x14345B0", VA = "0x14345B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x143441C", Offset = "0x143441C", VA = "0x143441C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x14347E8", Offset = "0x14347E8", VA = "0x14347E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1434B14", Offset = "0x1434B14", VA = "0x1434B14")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1434D04", Offset = "0x1434D04", VA = "0x1434D04")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170001A6")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x142BD80", Offset = "0x142BD80", VA = "0x142BD80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x142BD88", Offset = "0x142BD88", VA = "0x142BD88")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x142BE00", Offset = "0x142BE00", VA = "0x142BE00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x142BE08", Offset = "0x142BE08", VA = "0x142BE08")]
			set
			{
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x142BE74", Offset = "0x142BE74", VA = "0x142BE74")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x142BFC4", Offset = "0x142BFC4", VA = "0x142BFC4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x142BFD4", Offset = "0x142BFD4", VA = "0x142BFD4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x142BFE4", Offset = "0x142BFE4", VA = "0x142BFE4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1A01FD4", Offset = "0x1A01FD4", VA = "0x1A01FD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1A01FD8", Offset = "0x1A01FD8", VA = "0x1A01FD8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1A02010", Offset = "0x1A02010", VA = "0x1A02010")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1A02048", Offset = "0x1A02048", VA = "0x1A02048")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1A02080", Offset = "0x1A02080", VA = "0x1A02080")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1A020B8", Offset = "0x1A020B8", VA = "0x1A020B8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1A020F0", Offset = "0x1A020F0", VA = "0x1A020F0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1A02128", Offset = "0x1A02128", VA = "0x1A02128")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1A021A0", Offset = "0x1A021A0", VA = "0x1A021A0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1A02210", Offset = "0x1A02210", VA = "0x1A02210")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Animation _cowAnimation;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1A02218", Offset = "0x1A02218", VA = "0x1A02218")]
		private void Start()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1A0221C", Offset = "0x1A0221C", VA = "0x1A0221C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1A021D4", Offset = "0x1A021D4", VA = "0x1A021D4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1A0225C", Offset = "0x1A0225C", VA = "0x1A0225C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BBC8", Offset = "0xF2BBC8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600120E")]
				[Address(RVA = "0x1432A84", Offset = "0x1432A84", VA = "0x1432A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001210")]
				[Address(RVA = "0x1432AEC", Offset = "0x1432AEC", VA = "0x1432AEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600120B")]
			[Address(RVA = "0x14327B8", Offset = "0x14327B8", VA = "0x14327B8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600120C")]
			[Address(RVA = "0x1432894", Offset = "0x1432894", VA = "0x1432894", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600120D")]
			[Address(RVA = "0x1432898", Offset = "0x1432898", VA = "0x1432898", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x1432A8C", Offset = "0x1432A8C", VA = "0x1432A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400120A")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400120B")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x14323D0", Offset = "0x14323D0", VA = "0x14323D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1432468", Offset = "0x1432468", VA = "0x1432468")]
		private void Update()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x14326F4", Offset = "0x14326F4", VA = "0x14326F4")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1432684", Offset = "0x1432684", VA = "0x1432684")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A91C", Offset = "0xF3A91C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x14327E4", Offset = "0x14327E4", VA = "0x14327E4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200033F")]
		public enum SelectionState
		{
			[Token(Token = "0x4001221")]
			Off,
			[Token(Token = "0x4001222")]
			Selected,
			[Token(Token = "0x4001223")]
			Highlighted
		}

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170001AA")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1434D64", Offset = "0x1434D64", VA = "0x1434D64")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x1434D6C", Offset = "0x1434D6C", VA = "0x1434D6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1434EF4", Offset = "0x1434EF4", VA = "0x1434EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x14350B4", Offset = "0x14350B4", VA = "0x14350B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1434DF4", Offset = "0x1434DF4", VA = "0x1434DF4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x14351A4", Offset = "0x14351A4", VA = "0x14351A4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000341")]
		public enum SegmentType
		{
			[Token(Token = "0x4001232")]
			Straight,
			[Token(Token = "0x4001233")]
			LeftTurn,
			[Token(Token = "0x4001234")]
			RightTurn,
			[Token(Token = "0x4001235")]
			Switch
		}

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400122A")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400122B")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF31280", Offset = "0xF31280")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170001AB")]
		public float StartDistance
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x1435210", Offset = "0x1435210", VA = "0x1435210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A9D0", Offset = "0xF3A9D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x1435218", Offset = "0x1435218", VA = "0x1435218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3A9E0", Offset = "0xF3A9E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public float GridSize
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x1435220", Offset = "0x1435220", VA = "0x1435220")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x1435228", Offset = "0x1435228", VA = "0x1435228")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public int SubDivCount
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1435230", Offset = "0x1435230", VA = "0x1435230")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x1435238", Offset = "0x1435238", VA = "0x1435238")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public SegmentType Type
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x1435240", Offset = "0x1435240", VA = "0x1435240")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001AF")]
		public Pose EndPose
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1435248", Offset = "0x1435248", VA = "0x1435248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public float Radius
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x14356DC", Offset = "0x14356DC", VA = "0x14356DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B1")]
		public float SegmentLength
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x14352B0", Offset = "0x14352B0", VA = "0x14352B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x14356EC", Offset = "0x14356EC", VA = "0x14356EC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1435704", Offset = "0x1435704", VA = "0x1435704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x14352F0", Offset = "0x14352F0", VA = "0x14352F0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1435708", Offset = "0x1435708", VA = "0x1435708")]
		private void Update()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x143570C", Offset = "0x143570C", VA = "0x143570C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1435778", Offset = "0x1435778", VA = "0x1435778")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1436300", Offset = "0x1436300", VA = "0x1436300")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x143660C", Offset = "0x143660C", VA = "0x143660C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BBD8", Offset = "0xF2BBD8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001238")]
				[Address(RVA = "0x1437214", Offset = "0x1437214", VA = "0x1437214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123A")]
				[Address(RVA = "0x143727C", Offset = "0x143727C", VA = "0x143727C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001235")]
			[Address(RVA = "0x1436F8C", Offset = "0x1436F8C", VA = "0x1436F8C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x1437068", Offset = "0x1437068", VA = "0x1437068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x143706C", Offset = "0x143706C", VA = "0x143706C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001239")]
			[Address(RVA = "0x143721C", Offset = "0x143721C", VA = "0x143721C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001236")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001237")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x14366B0", Offset = "0x14366B0", VA = "0x14366B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x143675C", Offset = "0x143675C", VA = "0x143675C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1436810", Offset = "0x1436810", VA = "0x1436810")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x143693C", Offset = "0x143693C", VA = "0x143693C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1436AAC", Offset = "0x1436AAC", VA = "0x1436AAC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1436C48", Offset = "0x1436C48", VA = "0x1436C48")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1436EC4", Offset = "0x1436EC4", VA = "0x1436EC4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1436D5C", Offset = "0x1436D5C", VA = "0x1436D5C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1436D70", Offset = "0x1436D70", VA = "0x1436D70")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1436F1C", Offset = "0x1436F1C", VA = "0x1436F1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3A9F0", Offset = "0xF3A9F0")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1436FB8", Offset = "0x1436FB8", VA = "0x1436FB8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001B4")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x1437284", Offset = "0x1437284", VA = "0x1437284")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1437294", Offset = "0x1437294", VA = "0x1437294", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x143729C", Offset = "0x143729C", VA = "0x143729C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1437708", Offset = "0x1437708", VA = "0x1437708")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400124F")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001250")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF31380", Offset = "0xF31380")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170001B5")]
		public float Distance
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1437800", Offset = "0x1437800", VA = "0x1437800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AAA4", Offset = "0xF3AAA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1437808", Offset = "0x1437808", VA = "0x1437808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AAB4", Offset = "0xF3AAB4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float Scale
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1437810", Offset = "0x1437810", VA = "0x1437810")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x1437818", Offset = "0x1437818", VA = "0x1437818")]
			set
			{
			}
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1437298", Offset = "0x1437298", VA = "0x1437298", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1437820", Offset = "0x1437820", VA = "0x1437820")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x14372E4", Offset = "0x14372E4", VA = "0x14372E4")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x14375BC", Offset = "0x14375BC", VA = "0x14375BC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001247")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1437778", Offset = "0x1437778", VA = "0x1437778")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BBE8", Offset = "0xF2BBE8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001256")]
				[Address(RVA = "0x14381C0", Offset = "0x14381C0", VA = "0x14381C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001258")]
				[Address(RVA = "0x1438228", Offset = "0x1438228", VA = "0x1438228", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001253")]
			[Address(RVA = "0x1437E04", Offset = "0x1437E04", VA = "0x1437E04")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1437F9C", Offset = "0x1437F9C", VA = "0x1437F9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001255")]
			[Address(RVA = "0x1437FA0", Offset = "0x1437FA0", VA = "0x1437FA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001257")]
			[Address(RVA = "0x14381C8", Offset = "0x14381C8", VA = "0x14381C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x14379F0", Offset = "0x14379F0", VA = "0x14379F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1437A3C", Offset = "0x1437A3C", VA = "0x1437A3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1437B48", Offset = "0x1437B48", VA = "0x1437B48")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1437CA8", Offset = "0x1437CA8", VA = "0x1437CA8")]
		private void Update()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1437BA4", Offset = "0x1437BA4", VA = "0x1437BA4")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1437D84", Offset = "0x1437D84", VA = "0x1437D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3AAC4", Offset = "0xF3AAC4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1437E30", Offset = "0x1437E30", VA = "0x1437E30")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1437EDC", Offset = "0x1437EDC", VA = "0x1437EDC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1437F3C", Offset = "0x1437F3C", VA = "0x1437F3C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000349")]
		private enum EngineSoundState
		{
			[Token(Token = "0x400128D")]
			Start,
			[Token(Token = "0x400128E")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400128F")]
			Stop
		}

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BBF8", Offset = "0xF2BBF8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0x1438E98", Offset = "0x1438E98", VA = "0x1438E98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600126D")]
				[Address(RVA = "0x1438F00", Offset = "0x1438F00", VA = "0x1438F00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0x1438534", Offset = "0x1438534", VA = "0x1438534")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001269")]
			[Address(RVA = "0x1438C78", Offset = "0x1438C78", VA = "0x1438C78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0x1438C7C", Offset = "0x1438C7C", VA = "0x1438C7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600126C")]
			[Address(RVA = "0x1438EA0", Offset = "0x1438EA0", VA = "0x1438EA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400126F")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001270")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001271")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001272")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF313E0", Offset = "0xF313E0")]
		protected float _initialSpeed;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1438230", Offset = "0x1438230", VA = "0x1438230")]
		private void Start()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1438388", Offset = "0x1438388", VA = "0x1438388")]
		private void Update()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1438394", Offset = "0x1438394", VA = "0x1438394", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x14384E8", Offset = "0x14384E8", VA = "0x14384E8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1438304", Offset = "0x1438304", VA = "0x1438304")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3AB78", Offset = "0xF3AB78")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1438560", Offset = "0x1438560", VA = "0x1438560")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1438484", Offset = "0x1438484", VA = "0x1438484")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x14387AC", Offset = "0x14387AC", VA = "0x14387AC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1438970", Offset = "0x1438970", VA = "0x1438970")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1438868", Offset = "0x1438868", VA = "0x1438868")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1438A2C", Offset = "0x1438A2C", VA = "0x1438A2C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1438AB4", Offset = "0x1438AB4", VA = "0x1438AB4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1438B40", Offset = "0x1438B40", VA = "0x1438B40")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1438BFC", Offset = "0x1438BFC", VA = "0x1438BFC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1438C0C", Offset = "0x1438C0C", VA = "0x1438C0C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001BB")]
		public float TrackLength
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x1438F08", Offset = "0x1438F08", VA = "0x1438F08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x1438F10", Offset = "0x1438F10", VA = "0x1438F10")]
			private set
			{
			}
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1438F18", Offset = "0x1438F18", VA = "0x1438F18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x14378A0", Offset = "0x14378A0", VA = "0x14378A0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x1438F1C", Offset = "0x1438F1C", VA = "0x1438F1C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1439114", Offset = "0x1439114", VA = "0x1439114")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x1439230", Offset = "0x1439230", VA = "0x1439230")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class Pose
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1432F34", Offset = "0x1432F34", VA = "0x1432F34")]
		public Pose()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1432FE0", Offset = "0x1432FE0", VA = "0x1432FE0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BC08", Offset = "0xF2BC08")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001283")]
				[Address(RVA = "0x1439814", Offset = "0x1439814", VA = "0x1439814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001285")]
				[Address(RVA = "0x143987C", Offset = "0x143987C", VA = "0x143987C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x14394D8", Offset = "0x14394D8", VA = "0x14394D8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x1439638", Offset = "0x1439638", VA = "0x1439638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x143963C", Offset = "0x143963C", VA = "0x143963C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x143981C", Offset = "0x143981C", VA = "0x143981C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BC18", Offset = "0xF2BC18")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001289")]
				[Address(RVA = "0x1439950", Offset = "0x1439950", VA = "0x1439950", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600128B")]
				[Address(RVA = "0x14399B8", Offset = "0x14399B8", VA = "0x14399B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x1439598", Offset = "0x1439598", VA = "0x1439598")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001287")]
			[Address(RVA = "0x1439884", Offset = "0x1439884", VA = "0x1439884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0x1439888", Offset = "0x1439888", VA = "0x1439888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0x1439958", Offset = "0x1439958", VA = "0x1439958", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012A2")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF315C8", Offset = "0xF315C8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170001BC")]
		public bool IsMoving
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x143924C", Offset = "0x143924C", VA = "0x143924C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AC2C", Offset = "0xF3AC2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x1439254", Offset = "0x1439254", VA = "0x1439254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AC3C", Offset = "0xF3AC3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1439260", Offset = "0x1439260", VA = "0x1439260")]
		private void Start()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x143929C", Offset = "0x143929C", VA = "0x143929C")]
		private void Update()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x14393F0", Offset = "0x14393F0", VA = "0x14393F0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1439458", Offset = "0x1439458", VA = "0x1439458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3AC4C", Offset = "0xF3AC4C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1439504", Offset = "0x1439504", VA = "0x1439504")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3ACB0", Offset = "0xF3ACB0")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x14395C4", Offset = "0x14395C4", VA = "0x14395C4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x1439630", Offset = "0x1439630", VA = "0x1439630")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x14399C0", Offset = "0x14399C0", VA = "0x14399C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1439A28", Offset = "0x1439A28", VA = "0x1439A28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1439AE0", Offset = "0x1439AE0", VA = "0x1439AE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1439BE0", Offset = "0x1439BE0", VA = "0x1439BE0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1439C5C", Offset = "0x1439C5C", VA = "0x1439C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1439D38", Offset = "0x1439D38", VA = "0x1439D38")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40012BF")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40012C0")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40012C1")]
		EUDT_None,
		[Token(Token = "0x40012C2")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000352")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BC28", Offset = "0xF2BC28")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A5")]
				[Address(RVA = "0x1432360", Offset = "0x1432360", VA = "0x1432360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012A7")]
				[Address(RVA = "0x14323C8", Offset = "0x14323C8", VA = "0x14323C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x14319DC", Offset = "0x14319DC", VA = "0x14319DC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x1432114", Offset = "0x1432114", VA = "0x1432114", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x1432118", Offset = "0x1432118", VA = "0x1432118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x1432368", Offset = "0x1432368", VA = "0x1432368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40012C4")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40012C5")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40012C6")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF31608", Offset = "0xF31608")]
		public GameObject mainCamera;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF31640", Offset = "0xF31640")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1430CFC", Offset = "0x1430CFC", VA = "0x1430CFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1431504", Offset = "0x1431504", VA = "0x1431504")]
		private void Update()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1431644", Offset = "0x1431644", VA = "0x1431644")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x143176C", Offset = "0x143176C", VA = "0x143176C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1431894", Offset = "0x1431894", VA = "0x1431894")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1431618", Offset = "0x1431618", VA = "0x1431618")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x143196C", Offset = "0x143196C", VA = "0x143196C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3ADB4", Offset = "0xF3ADB4")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1431A08", Offset = "0x1431A08", VA = "0x1431A08")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1431068", Offset = "0x1431068", VA = "0x1431068")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1431B30", Offset = "0x1431B30", VA = "0x1431B30")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1431A3C", Offset = "0x1431A3C", VA = "0x1431A3C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1431ECC", Offset = "0x1431ECC", VA = "0x1431ECC")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1431FA8", Offset = "0x1431FA8", VA = "0x1431FA8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1432024", Offset = "0x1432024", VA = "0x1432024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AE18", Offset = "0xF3AE18")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1432074", Offset = "0x1432074", VA = "0x1432074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AE28", Offset = "0xF3AE28")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x14320C4", Offset = "0x14320C4", VA = "0x14320C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3AE38", Offset = "0xF3AE38")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BC38", Offset = "0xF2BC38")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BC9C", Offset = "0xF2BC9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x19F6E24", Offset = "0x19F6E24", VA = "0x19F6E24")]
			public <>c()
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x19F6E2C", Offset = "0x19F6E2C", VA = "0x19F6E2C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012DE")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40012DF")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40012E0")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40012E1")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40012E2")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40012E3")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40012E4")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40012E5")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40012E6")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40012E7")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40012E8")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x19F6068", Offset = "0x19F6068", VA = "0x19F6068")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x19F60C0", Offset = "0x19F60C0", VA = "0x19F60C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x19F64C8", Offset = "0x19F64C8", VA = "0x19F64C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x19F6594", Offset = "0x19F6594", VA = "0x19F6594")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x19F66A0", Offset = "0x19F66A0", VA = "0x19F66A0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x19F69D8", Offset = "0x19F69D8", VA = "0x19F69D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x19F6B40", Offset = "0x19F6B40", VA = "0x19F6B40")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x19F6C8C", Offset = "0x19F6C8C", VA = "0x19F6C8C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x19F673C", Offset = "0x19F673C", VA = "0x19F673C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x19F67DC", Offset = "0x19F67DC", VA = "0x19F67DC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x19F631C", Offset = "0x19F631C", VA = "0x19F631C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x19F6DA8", Offset = "0x19F6DA8", VA = "0x19F6DA8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public enum HandPoseId
	{
		[Token(Token = "0x40012FD")]
		Default,
		[Token(Token = "0x40012FE")]
		Generic,
		[Token(Token = "0x40012FF")]
		PingPongBall,
		[Token(Token = "0x4001300")]
		Controller
	}
	[Token(Token = "0x2000357")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001C3")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x19F6E58", Offset = "0x19F6E58", VA = "0x19F6E58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x19F6E60", Offset = "0x19F6E60", VA = "0x19F6E60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x19F6E68", Offset = "0x19F6E68", VA = "0x19F6E68")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x19F6E70", Offset = "0x19F6E70", VA = "0x19F6E70")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x19F6E78", Offset = "0x19F6E78", VA = "0x19F6E78")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x19F70EC", Offset = "0x19F70EC", VA = "0x19F70EC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x19F7148", Offset = "0x19F7148", VA = "0x19F7148")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x19F718C", Offset = "0x19F718C", VA = "0x19F718C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000359")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001308")]
		TRIANGLES,
		[Token(Token = "0x4001309")]
		QUADS
	}
	[Token(Token = "0x200035A")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400130B")]
		ABSORPTION,
		[Token(Token = "0x400130C")]
		TRANSMISSION,
		[Token(Token = "0x400130D")]
		SCATTERING
	}
	[Token(Token = "0x200035B")]
	public struct MeshGroup
	{
		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200035C")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001312")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001313")]
		public const string Tab = "    ";

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x19F7D08", Offset = "0x19F7D08", VA = "0x19F7D08")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AE98", Offset = "0xF3AE98")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AE98", Offset = "0xF3AE98")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x19F7D90", Offset = "0x19F7D90", VA = "0x19F7D90")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AEF8", Offset = "0xF3AEF8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AEF8", Offset = "0xF3AEF8")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x19F7E28", Offset = "0x19F7E28", VA = "0x19F7E28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AF58", Offset = "0xF3AF58")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AF58", Offset = "0xF3AF58")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x19F7EB0", Offset = "0x19F7EB0", VA = "0x19F7EB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AFB8", Offset = "0xF3AFB8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3AFB8", Offset = "0xF3AFB8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x19F7F38", Offset = "0x19F7F38", VA = "0x19F7F38")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3B018", Offset = "0xF3B018")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xF3B018", Offset = "0xF3B018")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class CAPI
	{
		[Token(Token = "0x200035E")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200035F")]
		public enum Result
		{
			[Token(Token = "0x400131F")]
			Success = 0,
			[Token(Token = "0x4001320")]
			Failure = -1000,
			[Token(Token = "0x4001321")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001322")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001323")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001324")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001325")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001326")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001327")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000360")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly System.Version version;

			[PreserveSig]
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x19FF770", Offset = "0x19FF770", VA = "0x19FF770")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001314")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400131C")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static System.Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x19F8038", Offset = "0x19F8038", VA = "0x19F8038")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x19F80C8", Offset = "0x19F80C8", VA = "0x19F80C8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x19F8284", Offset = "0x19F8284", VA = "0x19F8284")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x19F8364", Offset = "0x19F8364", VA = "0x19F8364")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x19F83D4", Offset = "0x19F83D4", VA = "0x19F83D4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x19F8448", Offset = "0x19F8448", VA = "0x19F8448")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x19F84C8", Offset = "0x19F84C8", VA = "0x19F84C8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x19F85E0", Offset = "0x19F85E0", VA = "0x19F85E0")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x19F8660", Offset = "0x19F8660", VA = "0x19F8660")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x19F8778", Offset = "0x19F8778", VA = "0x19F8778")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x19F87F8", Offset = "0x19F87F8", VA = "0x19F87F8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x19F8878", Offset = "0x19F8878", VA = "0x19F8878")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x19F88F8", Offset = "0x19F88F8", VA = "0x19F88F8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x19F8978", Offset = "0x19F8978", VA = "0x19F8978")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x19F8A08", Offset = "0x19F8A08", VA = "0x19F8A08")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x19F8A98", Offset = "0x19F8A98", VA = "0x19F8A98")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x19F8B28", Offset = "0x19F8B28", VA = "0x19F8B28")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x19F8BA8", Offset = "0x19F8BA8", VA = "0x19F8BA8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x19F8C28", Offset = "0x19F8C28", VA = "0x19F8C28")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x19F8CB8", Offset = "0x19F8CB8", VA = "0x19F8CB8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x19F8D48", Offset = "0x19F8D48", VA = "0x19F8D48")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x19F8DD8", Offset = "0x19F8DD8", VA = "0x19F8DD8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x19F8E58", Offset = "0x19F8E58", VA = "0x19F8E58")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x19F8EF8", Offset = "0x19F8EF8", VA = "0x19F8EF8")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x19F8F78", Offset = "0x19F8F78", VA = "0x19F8F78")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x19F9018", Offset = "0x19F9018", VA = "0x19F9018")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x19F90D8", Offset = "0x19F90D8", VA = "0x19F90D8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x19F91A8", Offset = "0x19F91A8", VA = "0x19F91A8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x19F9238", Offset = "0x19F9238", VA = "0x19F9238")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x19F92C8", Offset = "0x19F92C8", VA = "0x19F92C8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x19F9358", Offset = "0x19F9358", VA = "0x19F9358")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x19F93E8", Offset = "0x19F93E8", VA = "0x19F93E8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x19F9478", Offset = "0x19F9478", VA = "0x19F9478")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x19F94F8", Offset = "0x19F94F8", VA = "0x19F94F8")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x19F9618", Offset = "0x19F9618", VA = "0x19F9618")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x19F9588", Offset = "0x19F9588", VA = "0x19F9588")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x19F980C", Offset = "0x19F980C", VA = "0x19F980C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x19F9944", Offset = "0x19F9944", VA = "0x19F9944")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012EA")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x19F99C4", Offset = "0x19F99C4", VA = "0x19F99C4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x19F9C34", Offset = "0x19F9C34", VA = "0x19F9C34")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x19F9CB4", Offset = "0x19F9CB4", VA = "0x19F9CB4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x19F9DEC", Offset = "0x19F9DEC", VA = "0x19F9DEC")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x19F9E6C", Offset = "0x19F9E6C", VA = "0x19F9E6C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x19F9FA4", Offset = "0x19F9FA4", VA = "0x19F9FA4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x19FA024", Offset = "0x19FA024", VA = "0x19FA024")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x19FA15C", Offset = "0x19FA15C", VA = "0x19FA15C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x19FA1DC", Offset = "0x19FA1DC", VA = "0x19FA1DC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x19FA314", Offset = "0x19FA314", VA = "0x19FA314")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x19FA394", Offset = "0x19FA394", VA = "0x19FA394")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x19FA414", Offset = "0x19FA414", VA = "0x19FA414")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x19FA4AC", Offset = "0x19FA4AC", VA = "0x19FA4AC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x19FA52C", Offset = "0x19FA52C", VA = "0x19FA52C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x19FA6D8", Offset = "0x19FA6D8", VA = "0x19FA6D8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x19FA804", Offset = "0x19FA804", VA = "0x19FA804")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x19FA658", Offset = "0x19FA658", VA = "0x19FA658")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x19FA884", Offset = "0x19FA884", VA = "0x19FA884")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x19FA904", Offset = "0x19FA904", VA = "0x19FA904")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x19FA994", Offset = "0x19FA994", VA = "0x19FA994")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x19FAA14", Offset = "0x19FAA14", VA = "0x19FAA14")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x19FAAA4", Offset = "0x19FAAA4", VA = "0x19FAAA4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x19FAB24", Offset = "0x19FAB24", VA = "0x19FAB24")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x19FABA4", Offset = "0x19FABA4", VA = "0x19FABA4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x19FADE0", Offset = "0x19FADE0", VA = "0x19FADE0")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x19FAE70", Offset = "0x19FAE70", VA = "0x19FAE70")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001305")]
		[Address(RVA = "0x19FB05C", Offset = "0x19FB05C", VA = "0x19FB05C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x19FB0F4", Offset = "0x19FB0F4", VA = "0x19FB0F4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001307")]
		[Address(RVA = "0x19FB218", Offset = "0x19FB218", VA = "0x19FB218")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001308")]
		[Address(RVA = "0x19FB298", Offset = "0x19FB298", VA = "0x19FB298")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x19FB318", Offset = "0x19FB318", VA = "0x19FB318")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x19FB440", Offset = "0x19FB440", VA = "0x19FB440")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x19FB4C0", Offset = "0x19FB4C0", VA = "0x19FB4C0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x19FB5E8", Offset = "0x19FB5E8", VA = "0x19FB5E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130D")]
		[Address(RVA = "0x19FB668", Offset = "0x19FB668", VA = "0x19FB668")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130E")]
		[Address(RVA = "0x19FB6F8", Offset = "0x19FB6F8", VA = "0x19FB6F8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130F")]
		[Address(RVA = "0x19FB788", Offset = "0x19FB788", VA = "0x19FB788")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001310")]
		[Address(RVA = "0x19FB818", Offset = "0x19FB818", VA = "0x19FB818")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001311")]
		[Address(RVA = "0x19FB898", Offset = "0x19FB898", VA = "0x19FB898")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001312")]
		[Address(RVA = "0x19FB920", Offset = "0x19FB920", VA = "0x19FB920")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001313")]
		[Address(RVA = "0x19FB9A8", Offset = "0x19FB9A8", VA = "0x19FB9A8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001314")]
		[Address(RVA = "0x19FBA28", Offset = "0x19FBA28", VA = "0x19FBA28")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001315")]
		[Address(RVA = "0x19FBAA8", Offset = "0x19FBAA8", VA = "0x19FBAA8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x19FBB5C", Offset = "0x19FBB5C", VA = "0x19FBB5C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x19FBBEC", Offset = "0x19FBBEC", VA = "0x19FBBEC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001318")]
		[Address(RVA = "0x19FBC7C", Offset = "0x19FBC7C", VA = "0x19FBC7C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x19FBCFC", Offset = "0x19FBCFC", VA = "0x19FBCFC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600131A")]
		[Address(RVA = "0x19FBD7C", Offset = "0x19FBD7C", VA = "0x19FBD7C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600131B")]
		[Address(RVA = "0x19FBDFC", Offset = "0x19FBDFC", VA = "0x19FBDFC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600131C")]
		[Address(RVA = "0x19FBE94", Offset = "0x19FBE94", VA = "0x19FBE94")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x19FBF24", Offset = "0x19FBF24", VA = "0x19FBF24")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600131E")]
		[Address(RVA = "0x19FBFB4", Offset = "0x19FBFB4", VA = "0x19FBFB4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600131F")]
		[Address(RVA = "0x19FC044", Offset = "0x19FC044", VA = "0x19FC044")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001320")]
		[Address(RVA = "0x19FC0DC", Offset = "0x19FC0DC", VA = "0x19FC0DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001321")]
		[Address(RVA = "0x19FC174", Offset = "0x19FC174", VA = "0x19FC174")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001322")]
		[Address(RVA = "0x19FC1F4", Offset = "0x19FC1F4", VA = "0x19FC1F4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x19FC274", Offset = "0x19FC274", VA = "0x19FC274")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001324")]
		[Address(RVA = "0x19FC39C", Offset = "0x19FC39C", VA = "0x19FC39C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x19FC41C", Offset = "0x19FC41C", VA = "0x19FC41C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001326")]
		[Address(RVA = "0x19FC544", Offset = "0x19FC544", VA = "0x19FC544")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x19FC5C4", Offset = "0x19FC5C4", VA = "0x19FC5C4")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x19FC6EC", Offset = "0x19FC6EC", VA = "0x19FC6EC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x19FC76C", Offset = "0x19FC76C", VA = "0x19FC76C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x19FC914", Offset = "0x19FC914", VA = "0x19FC914")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x19FCBB0", Offset = "0x19FCBB0", VA = "0x19FCBB0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x19FC894", Offset = "0x19FC894", VA = "0x19FC894")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x19FCC40", Offset = "0x19FCC40", VA = "0x19FCC40")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x19FCCC0", Offset = "0x19FCCC0", VA = "0x19FCCC0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x19FCD50", Offset = "0x19FCD50", VA = "0x19FCD50")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x19FCDE0", Offset = "0x19FCDE0", VA = "0x19FCDE0")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001331")]
		[Address(RVA = "0x19FCE70", Offset = "0x19FCE70", VA = "0x19FCE70")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x19FCF10", Offset = "0x19FCF10", VA = "0x19FCF10")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x19FCFB0", Offset = "0x19FCFB0", VA = "0x19FCFB0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x19FD050", Offset = "0x19FD050", VA = "0x19FD050")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x19FD0D0", Offset = "0x19FD0D0", VA = "0x19FD0D0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x19FD150", Offset = "0x19FD150", VA = "0x19FD150")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x19FD1D0", Offset = "0x19FD1D0", VA = "0x19FD1D0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x19FD250", Offset = "0x19FD250", VA = "0x19FD250")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x19FD2D0", Offset = "0x19FD2D0", VA = "0x19FD2D0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x19FD3F8", Offset = "0x19FD3F8", VA = "0x19FD3F8")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600133B")]
		[Address(RVA = "0x19FD490", Offset = "0x19FD490", VA = "0x19FD490")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x19FD510", Offset = "0x19FD510", VA = "0x19FD510")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x19FD574", Offset = "0x19FD574", VA = "0x19FD574")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x19FD690", Offset = "0x19FD690", VA = "0x19FD690")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x19FD720", Offset = "0x19FD720", VA = "0x19FD720")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001340")]
		[Address(RVA = "0x19FD864", Offset = "0x19FD864", VA = "0x19FD864")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001341")]
		[Address(RVA = "0x19FD8F4", Offset = "0x19FD8F4", VA = "0x19FD8F4")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x19FD994", Offset = "0x19FD994", VA = "0x19FD994")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001343")]
		[Address(RVA = "0x19FDD2C", Offset = "0x19FDD2C", VA = "0x19FDD2C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0x19FDDAC", Offset = "0x19FDDAC", VA = "0x19FDDAC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x19FDE44", Offset = "0x19FDE44", VA = "0x19FDE44")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x19FE60C", Offset = "0x19FE60C", VA = "0x19FE60C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001347")]
		[Address(RVA = "0x19FE68C", Offset = "0x19FE68C", VA = "0x19FE68C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x19F7FD0", Offset = "0x19F7FD0", VA = "0x19F7FD0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xF3B078", Offset = "0xF3B078")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x19FE724", Offset = "0x19FE724", VA = "0x19FE724")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x19FE7A8", Offset = "0x19FE7A8", VA = "0x19FE7A8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600134B")]
		[Address(RVA = "0x19FE828", Offset = "0x19FE828", VA = "0x19FE828")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0x19FE8A8", Offset = "0x19FE8A8", VA = "0x19FE8A8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x19FE928", Offset = "0x19FE928", VA = "0x19FE928")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x19FF308", Offset = "0x19FF308", VA = "0x19FF308")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x19FF388", Offset = "0x19FF388", VA = "0x19FF388")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x19FF84C", Offset = "0x19FF84C", VA = "0x19FF84C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x19FF6E0", Offset = "0x19FF6E0", VA = "0x19FF6E0")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x19FF8C0", Offset = "0x19FF8C0", VA = "0x19FF8C0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000361")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xF316F8", Offset = "0xF316F8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x19EC50C", Offset = "0x19EC50C", VA = "0x19EC50C")]
		private void Start()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x19EC510", Offset = "0x19EC510", VA = "0x19EC510")]
		private void Update()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x19EC5D0", Offset = "0x19EC5D0", VA = "0x19EC5D0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31744", Offset = "0xF31744")]
		public bool autoRetrigger;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xF3177C", Offset = "0xF3177C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF317A0", Offset = "0xF317A0")]
		public Transform[] playPositions;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x25AE69C", Offset = "0x25AE69C", VA = "0x25AE69C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x25AE820", Offset = "0x25AE820", VA = "0x25AE820")]
		private void Update()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x25AEA00", Offset = "0x25AEA00", VA = "0x25AEA00")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x25AE880", Offset = "0x25AE880", VA = "0x25AE880")]
		public void Play()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x25AEAC0", Offset = "0x25AEAC0", VA = "0x25AEAC0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x25AEC34", Offset = "0x25AEC34", VA = "0x25AEC34")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001336")]
		Default,
		[Token(Token = "0x4001337")]
		Preload,
		[Token(Token = "0x4001338")]
		ManualPreload
	}
	[Token(Token = "0x2000364")]
	public enum Fade
	{
		[Token(Token = "0x400133A")]
		In,
		[Token(Token = "0x400133B")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000365")]
	public class SoundGroup
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF317D8", Offset = "0xF317D8")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x19EC2CC", Offset = "0x19EC2CC", VA = "0x19EC2CC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x19EC360", Offset = "0x19EC360", VA = "0x19EC360")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x19EC3EC", Offset = "0x19EC3EC", VA = "0x19EC3EC")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x19EC47C", Offset = "0x19EC47C", VA = "0x19EC47C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x19EB880", Offset = "0x19EB880", VA = "0x19EB880")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000366")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000367")]
		public enum Fade
		{
			[Token(Token = "0x4001363")]
			In,
			[Token(Token = "0x4001364")]
			Out
		}

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BCAC", Offset = "0xF2BCAC")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600139B")]
			[Address(RVA = "0x25B2D4C", Offset = "0x25B2D4C", VA = "0x25B2D4C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600139C")]
			[Address(RVA = "0x25B5044", Offset = "0x25B5044", VA = "0x25B5044")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BCBC", Offset = "0xF2BCBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600139E")]
			[Address(RVA = "0x25B4FAC", Offset = "0x25B4FAC", VA = "0x25B4FAC")]
			public <>c()
			{
			}

			[Token(Token = "0x600139F")]
			[Address(RVA = "0x25B4FB4", Offset = "0x25B4FB4", VA = "0x25B4FB4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31804", Offset = "0xF31804")]
		public bool makePersistent;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF3183C", Offset = "0xF3183C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31874", Offset = "0xF31874")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF318AC", Offset = "0xF318AC")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF318E4", Offset = "0xF318E4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF3191C", Offset = "0xF3191C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31954", Offset = "0xF31954")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF3198C", Offset = "0xF3198C")]
		public bool verboseLogging;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF319C4", Offset = "0xF319C4")]
		public int maxSoundEmitters;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF319FC", Offset = "0xF319FC")]
		public float volumeSoundFX;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31A34", Offset = "0xF31A34")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001C6")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x25AECF4", Offset = "0x25AECF4", VA = "0x25AECF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x25AEDD4", Offset = "0x25AEDD4", VA = "0x25AEDD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public static float NearFallOff
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x25AEE3C", Offset = "0x25AEE3C", VA = "0x25AEE3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C9")]
		public static float FarFallOff
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x25AEEB0", Offset = "0x25AEEB0", VA = "0x25AEEB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CA")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x25AEF24", Offset = "0x25AEF24", VA = "0x25AEF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x25AEF98", Offset = "0x25AEF98", VA = "0x25AEF98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x25AF00C", Offset = "0x25AF00C", VA = "0x25AF00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x25B0D5C", Offset = "0x25B0D5C", VA = "0x25B0D5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x25AF080", Offset = "0x25AF080", VA = "0x25AF080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x25AF2A8", Offset = "0x25AF2A8", VA = "0x25AF2A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x25AF084", Offset = "0x25AF084", VA = "0x25AF084")]
		private void Init()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x25AFED4", Offset = "0x25AFED4", VA = "0x25AFED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x25AF400", Offset = "0x25AF400", VA = "0x25AF400")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x25B04F8", Offset = "0x25B04F8", VA = "0x25B04F8")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x25B0678", Offset = "0x25B0678", VA = "0x25B0678")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x25B0814", Offset = "0x25B0814", VA = "0x25B0814")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x25B0914", Offset = "0x25B0914", VA = "0x25B0914")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x25B09A4", Offset = "0x25B09A4", VA = "0x25B09A4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x25AF84C", Offset = "0x25AF84C", VA = "0x25AF84C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x25AFED8", Offset = "0x25AFED8", VA = "0x25AFED8")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x25B0FE0", Offset = "0x25B0FE0", VA = "0x25B0FE0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x25B10E4", Offset = "0x25B10E4", VA = "0x25B10E4")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x25B11EC", Offset = "0x25B11EC", VA = "0x25B11EC")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x25B0EA8", Offset = "0x25B0EA8", VA = "0x25B0EA8")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x25B1358", Offset = "0x25B1358", VA = "0x25B1358")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x25B14AC", Offset = "0x25B14AC", VA = "0x25B14AC")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x25B165C", Offset = "0x25B165C", VA = "0x25B165C")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x25AEA10", Offset = "0x25AEA10", VA = "0x25AEA10")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x25AEB84", Offset = "0x25AEB84", VA = "0x25AEB84")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x25B1808", Offset = "0x25B1808", VA = "0x25B1808")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x25B18D4", Offset = "0x25B18D4", VA = "0x25B18D4")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x25B1968", Offset = "0x25B1968", VA = "0x25B1968")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x25B1A2C", Offset = "0x25B1A2C", VA = "0x25B1A2C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x25B1AD0", Offset = "0x25B1AD0", VA = "0x25B1AD0")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x25B1BB0", Offset = "0x25B1BB0", VA = "0x25B1BB0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x25B2694", Offset = "0x25B2694", VA = "0x25B2694")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x25B2D54", Offset = "0x25B2D54", VA = "0x25B2D54")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x25B2F34", Offset = "0x25B2F34", VA = "0x25B2F34")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x25B3AB8", Offset = "0x25B3AB8", VA = "0x25B3AB8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x25B1DB8", Offset = "0x25B1DB8", VA = "0x25B1DB8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x25B3BD8", Offset = "0x25B3BD8", VA = "0x25B3BD8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x25B3CBC", Offset = "0x25B3CBC", VA = "0x25B3CBC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x25B3DAC", Offset = "0x25B3DAC", VA = "0x25B3DAC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x25B4164", Offset = "0x25B4164", VA = "0x25B4164")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x25B4360", Offset = "0x25B4360", VA = "0x25B4360")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x25B447C", Offset = "0x25B447C", VA = "0x25B447C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x25B4644", Offset = "0x25B4644", VA = "0x25B4644")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x25B471C", Offset = "0x25B471C", VA = "0x25B471C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x25B4850", Offset = "0x25B4850", VA = "0x25B4850")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x25B4C3C", Offset = "0x25B4C3C", VA = "0x25B4C3C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001369")]
		None = -1,
		[Token(Token = "0x400136A")]
		Reserved,
		[Token(Token = "0x400136B")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200036B")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x25B5140", Offset = "0x25B5140", VA = "0x25B5140")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x25B50E4", Offset = "0x25B50E4", VA = "0x25B50E4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		public enum FadeState
		{
			[Token(Token = "0x4001382")]
			Null,
			[Token(Token = "0x4001383")]
			FadingIn,
			[Token(Token = "0x4001384")]
			FadingOut,
			[Token(Token = "0x4001385")]
			Ducking
		}

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BCCC", Offset = "0xF2BCCC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013CE")]
				[Address(RVA = "0x25B5A6C", Offset = "0x25B5A6C", VA = "0x25B5A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D0")]
				[Address(RVA = "0x25B5AD4", Offset = "0x25B5AD4", VA = "0x25B5AD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x25B574C", Offset = "0x25B574C", VA = "0x25B574C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x25B597C", Offset = "0x25B597C", VA = "0x25B597C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x25B5980", Offset = "0x25B5980", VA = "0x25B5980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x25B5A74", Offset = "0x25B5A74", VA = "0x25B5A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BCDC", Offset = "0xF2BCDC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D4")]
				[Address(RVA = "0x25B5F20", Offset = "0x25B5F20", VA = "0x25B5F20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D6")]
				[Address(RVA = "0x25B5F88", Offset = "0x25B5F88", VA = "0x25B5F88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x25B590C", Offset = "0x25B590C", VA = "0x25B590C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x25B5DB4", Offset = "0x25B5DB4", VA = "0x25B5DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x25B5DB8", Offset = "0x25B5DB8", VA = "0x25B5DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x25B5F28", Offset = "0x25B5F28", VA = "0x25B5F28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BCEC", Offset = "0xF2BCEC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DA")]
				[Address(RVA = "0x25B5D44", Offset = "0x25B5D44", VA = "0x25B5D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DC")]
				[Address(RVA = "0x25B5DAC", Offset = "0x25B5DAC", VA = "0x25B5DAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x25B5938", Offset = "0x25B5938", VA = "0x25B5938")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x25B5ADC", Offset = "0x25B5ADC", VA = "0x25B5ADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x25B5AE0", Offset = "0x25B5AE0", VA = "0x25B5AE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x25B5D4C", Offset = "0x25B5D4C", VA = "0x25B5D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001CE")]
		public float volume
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x25B3A9C", Offset = "0x25B3A9C", VA = "0x25B3A9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x25B51E0", Offset = "0x25B51E0", VA = "0x25B51E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public float pitch
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x25B51FC", Offset = "0x25B51FC", VA = "0x25B51FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x25B5218", Offset = "0x25B5218", VA = "0x25B5218")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public AudioClip clip
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x25B5234", Offset = "0x25B5234", VA = "0x25B5234")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x25B5250", Offset = "0x25B5250", VA = "0x25B5250")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float time
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x25B526C", Offset = "0x25B526C", VA = "0x25B526C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x25B1B94", Offset = "0x25B1B94", VA = "0x25B1B94")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public float length
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x25B5288", Offset = "0x25B5288", VA = "0x25B5288")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D3")]
		public bool loop
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x25B5340", Offset = "0x25B5340", VA = "0x25B5340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x25B535C", Offset = "0x25B535C", VA = "0x25B535C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public bool mute
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x25B537C", Offset = "0x25B537C", VA = "0x25B537C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x25B5398", Offset = "0x25B5398", VA = "0x25B5398")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x25B53B8", Offset = "0x25B53B8", VA = "0x25B53B8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x25B53D4", Offset = "0x25B53D4", VA = "0x25B53D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool isPlaying
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x25B53F0", Offset = "0x25B53F0", VA = "0x25B53F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x25B540C", Offset = "0x25B540C", VA = "0x25B540C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x25B3A84", Offset = "0x25B3A84", VA = "0x25B3A84")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x25B5588", Offset = "0x25B5588", VA = "0x25B5588")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x25B3DA4", Offset = "0x25B3DA4", VA = "0x25B3DA4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x25B5590", Offset = "0x25B5590", VA = "0x25B5590")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x25B5598", Offset = "0x25B5598", VA = "0x25B5598")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x25B459C", Offset = "0x25B459C", VA = "0x25B459C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x25B0F74", Offset = "0x25B0F74", VA = "0x25B0F74")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x25B55A0", Offset = "0x25B55A0", VA = "0x25B55A0")]
		public void Play()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x25B5600", Offset = "0x25B5600", VA = "0x25B5600")]
		public void Pause()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x25B0DC4", Offset = "0x25B0DC4", VA = "0x25B0DC4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x25B5638", Offset = "0x25B5638", VA = "0x25B5638")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x25B4068", Offset = "0x25B4068", VA = "0x25B4068")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x25B42A8", Offset = "0x25B42A8", VA = "0x25B42A8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x25B1318", Offset = "0x25B1318", VA = "0x25B1318")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x25B5690", Offset = "0x25B5690", VA = "0x25B5690")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x25B56BC", Offset = "0x25B56BC", VA = "0x25B56BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B0DC", Offset = "0xF3B0DC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x25B5778", Offset = "0x25B5778", VA = "0x25B5778")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x25B1714", Offset = "0x25B1714", VA = "0x25B1714")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x25B1790", Offset = "0x25B1790", VA = "0x25B1790")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x25B15C4", Offset = "0x25B15C4", VA = "0x25B15C4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x25B1410", Offset = "0x25B1410", VA = "0x25B1410")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x25B57E0", Offset = "0x25B57E0", VA = "0x25B57E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B140", Offset = "0xF3B140")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x25B5864", Offset = "0x25B5864", VA = "0x25B5864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B1A4", Offset = "0xF3B1A4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x25B5964", Offset = "0x25B5964", VA = "0x25B5964")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40013A2")]
		Random,
		[Token(Token = "0x40013A3")]
		Sequential
	}
	[Token(Token = "0x2000373")]
	public enum FreqHint
	{
		[Token(Token = "0x40013A5")]
		None,
		[Token(Token = "0x40013A6")]
		Wide,
		[Token(Token = "0x40013A7")]
		Narrow
	}
	[Token(Token = "0x2000374")]
	public enum SoundPriority
	{
		[Token(Token = "0x40013A9")]
		VeryLow = -2,
		[Token(Token = "0x40013AA")]
		Low,
		[Token(Token = "0x40013AB")]
		Default,
		[Token(Token = "0x40013AC")]
		High,
		[Token(Token = "0x40013AD")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public class OSPProps
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31B1C", Offset = "0xF31B1C")]
		public bool enableSpatialization;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31B54", Offset = "0xF31B54")]
		public bool useFastOverride;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31B8C", Offset = "0xF31B8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF31B8C", Offset = "0xF31B8C")]
		public float gain;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31BE0", Offset = "0xF31BE0")]
		public bool enableInvSquare;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31C18", Offset = "0xF31C18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF31C18", Offset = "0xF31C18")]
		public float volumetric;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31C70", Offset = "0xF31C70")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xF31C70", Offset = "0xF31C70")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x25B5150", Offset = "0x25B5150", VA = "0x25B5150")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public class SoundFX
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31CD0", Offset = "0xF31CD0")]
		public string name;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31D08", Offset = "0xF31D08")]
		public SoundFXNext playback;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31D40", Offset = "0xF31D40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF31D40", Offset = "0xF31D40")]
		public float volume;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31D94", Offset = "0xF31D94")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xF31D94", Offset = "0xF31D94")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31DF0", Offset = "0xF31DF0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xF31DF0", Offset = "0xF31DF0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31E50", Offset = "0xF31E50")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31E88", Offset = "0xF31E88")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31EC0", Offset = "0xF31EC0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31EF8", Offset = "0xF31EF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF31EF8", Offset = "0xF31EF8")]
		public float spread;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31F50", Offset = "0xF31F50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF31F50", Offset = "0xF31F50")]
		public float pctChanceToPlay;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31FA4", Offset = "0xF31FA4")]
		public SoundPriority priority;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF31FDC", Offset = "0xF31FDC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xF31FDC", Offset = "0xF31FDC")]
		public Vector2 delay;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32038", Offset = "0xF32038")]
		public bool looping;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32070", Offset = "0xF32070")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001DD")]
		public int Length
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x19EB5F4", Offset = "0x19EB5F4", VA = "0x19EB5F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DE")]
		public bool IsValid
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x19EB610", Offset = "0x19EB610", VA = "0x19EB610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DF")]
		public SoundGroup Group
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x19EB6B4", Offset = "0x19EB6B4", VA = "0x19EB6B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x19EB6BC", Offset = "0x19EB6BC", VA = "0x19EB6BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x19EB6C4", Offset = "0x19EB6C4", VA = "0x19EB6C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E1")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x19EB6D0", Offset = "0x19EB6D0", VA = "0x19EB6D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x19EB104", Offset = "0x19EB104", VA = "0x19EB104")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x19EB6E8", Offset = "0x19EB6E8", VA = "0x19EB6E8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x19EB7B8", Offset = "0x19EB7B8", VA = "0x19EB7B8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x19EB858", Offset = "0x19EB858", VA = "0x19EB858")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x19EB8A0", Offset = "0x19EB8A0", VA = "0x19EB8A0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x19EB99C", Offset = "0x19EB99C", VA = "0x19EB99C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x19EB9A8", Offset = "0x19EB9A8", VA = "0x19EB9A8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x19EBA88", Offset = "0x19EBA88", VA = "0x19EBA88")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x19EBBA0", Offset = "0x19EBBA0", VA = "0x19EBBA0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x19EBC30", Offset = "0x19EBC30", VA = "0x19EBC30")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x19EBCC8", Offset = "0x19EBCC8", VA = "0x19EBCC8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x19EBD58", Offset = "0x19EBD58", VA = "0x19EBD58")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x19EBDE8", Offset = "0x19EBDE8", VA = "0x19EBDE8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public class SoundFXRef
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001E2")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x19EBE64", Offset = "0x19EBE64", VA = "0x19EBE64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public string name
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x19EBF60", Offset = "0x19EBF60", VA = "0x19EBF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x19EBF68", Offset = "0x19EBF68", VA = "0x19EBF68")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public int Length
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x19EBF70", Offset = "0x19EBF70", VA = "0x19EBF70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E5")]
		public bool IsValid
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x19EBFB4", Offset = "0x19EBFB4", VA = "0x19EBFB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x19EBE94", Offset = "0x19EBE94", VA = "0x19EBE94")]
		private void Init()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x19EBFEC", Offset = "0x19EBFEC", VA = "0x19EBFEC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x19EC024", Offset = "0x19EC024", VA = "0x19EC024")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x19EC064", Offset = "0x19EC064", VA = "0x19EC064")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x19EC0AC", Offset = "0x19EC0AC", VA = "0x19EC0AC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x19EC12C", Offset = "0x19EC12C", VA = "0x19EC12C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x19EC16C", Offset = "0x19EC16C", VA = "0x19EC16C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x19EC1BC", Offset = "0x19EC1BC", VA = "0x19EC1BC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x19EC1F4", Offset = "0x19EC1F4", VA = "0x19EC1F4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x19EC234", Offset = "0x19EC234", VA = "0x19EC234")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x19EC26C", Offset = "0x19EC26C", VA = "0x19EC26C")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000378")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x40013CB")]
		NONE = 0u,
		[Token(Token = "0x40013CC")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x40013CD")]
		STAGE = 2u,
		[Token(Token = "0x40013CE")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x40013CF")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2BD0C", Offset = "0xF2BD0C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2BD0C", Offset = "0xF2BD0C")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BD6C", Offset = "0xF2BD6C")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170001F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600142B")]
				[Address(RVA = "0x137B8D4", Offset = "0x137B8D4", VA = "0x137B8D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600142D")]
				[Address(RVA = "0x137B93C", Offset = "0x137B93C", VA = "0x137B93C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x137B030", Offset = "0x137B030", VA = "0x137B030")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001429")]
			[Address(RVA = "0x137B7F8", Offset = "0x137B7F8", VA = "0x137B7F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0x137B7FC", Offset = "0x137B7FC", VA = "0x137B7FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x137B8DC", Offset = "0x137B8DC", VA = "0x137B8DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF320A8", Offset = "0xF320A8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF320A8", Offset = "0xF320A8")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32118", Offset = "0xF32118")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF32118", Offset = "0xF32118")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32188", Offset = "0xF32188")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF32188", Offset = "0xF32188")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF321F8", Offset = "0xF321F8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF321F8", Offset = "0xF321F8")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32268", Offset = "0xF32268")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF32268", Offset = "0xF32268")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF322D8", Offset = "0xF322D8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF322D8", Offset = "0xF322D8")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32348", Offset = "0xF32348")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF32348", Offset = "0xF32348")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF323B8", Offset = "0xF323B8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF323B8", Offset = "0xF323B8")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170001E6")]
		public Transform stage
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x137A5B4", Offset = "0x137A5B4", VA = "0x137A5B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x137A654", Offset = "0x137A654", VA = "0x137A654")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xF3F50C", Offset = "0xF3F50C")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x137A754", Offset = "0x137A754", VA = "0x137A754")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x137A758", Offset = "0x137A758", VA = "0x137A758")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x137A75C", Offset = "0x137A75C", VA = "0x137A75C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001E9")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x137A83C", Offset = "0x137A83C", VA = "0x137A83C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001EA")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x137A91C", Offset = "0x137A91C", VA = "0x137A91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x137A924", Offset = "0x137A924", VA = "0x137A924")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x137A92C", Offset = "0x137A92C", VA = "0x137A92C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x137A934", Offset = "0x137A934", VA = "0x137A934")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x137AA34", Offset = "0x137AA34", VA = "0x137AA34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x137AA3C", Offset = "0x137AA3C", VA = "0x137AA3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x137AADC", Offset = "0x137AADC", VA = "0x137AADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x137AAE4", Offset = "0x137AAE4", VA = "0x137AAE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x137AAF0", Offset = "0x137AAF0", VA = "0x137AAF0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x137AAF8", Offset = "0x137AAF8", VA = "0x137AAF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x137AB00", Offset = "0x137AB00", VA = "0x137AB00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x137AB08", Offset = "0x137AB08", VA = "0x137AB08")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x137AB4C", Offset = "0x137AB4C", VA = "0x137AB4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x137AB54", Offset = "0x137AB54", VA = "0x137AB54")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool isValid
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x137AB60", Offset = "0x137AB60", VA = "0x137AB60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public bool isActive
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x137ACD0", Offset = "0x137ACD0", VA = "0x137ACD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F3")]
		private bool _isReady
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x137ACD8", Offset = "0x137ACD8", VA = "0x137ACD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		public SDKRender render
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x137AE14", Offset = "0x137AE14", VA = "0x137AE14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x137AE1C", Offset = "0x137AE1C", VA = "0x137AE1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x137AE80", Offset = "0x137AE80", VA = "0x137AE80")]
		private void Update()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x137AFB8", Offset = "0x137AFB8", VA = "0x137AFB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x137AFC0", Offset = "0x137AFC0", VA = "0x137AFC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B2F8", Offset = "0xF3B2F8")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x137AE28", Offset = "0x137AE28", VA = "0x137AE28")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x137B05C", Offset = "0x137B05C", VA = "0x137B05C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x137B068", Offset = "0x137B068", VA = "0x137B068")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x137B110", Offset = "0x137B110", VA = "0x137B110")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x137B330", Offset = "0x137B330", VA = "0x137B330")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x137B428", Offset = "0x137B428", VA = "0x137B428")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x137B3A8", Offset = "0x137B3A8", VA = "0x137B3A8")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x137B3F8", Offset = "0x137B3F8", VA = "0x137B3F8")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x137B1C4", Offset = "0x137B1C4", VA = "0x137B1C4")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x137AEA4", Offset = "0x137AEA4", VA = "0x137AEA4")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x137B65C", Offset = "0x137B65C", VA = "0x137B65C")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public static class SDKBridge
	{
		[Token(Token = "0x200037C")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x170001F7")]
		public static bool IsActive
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x137AD5C", Offset = "0x137AD5C", VA = "0x137AD5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x137BB80", Offset = "0x137BB80", VA = "0x137BB80")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x137BB88", Offset = "0x137BB88", VA = "0x137BB88")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x137BB90", Offset = "0x137BB90", VA = "0x137BB90")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x137BB98", Offset = "0x137BB98", VA = "0x137BB98")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x137BBA0", Offset = "0x137BBA0", VA = "0x137BBA0")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x137BBA8", Offset = "0x137BBA8", VA = "0x137BBA8")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x137BBE8", Offset = "0x137BBE8", VA = "0x137BBE8")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x137BC28", Offset = "0x137BC28", VA = "0x137BC28")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x137BC30", Offset = "0x137BC30", VA = "0x137BC30")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x137BC38", Offset = "0x137BC38", VA = "0x137BC38")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x137BC78", Offset = "0x137BC78", VA = "0x137BC78")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x137BCB8", Offset = "0x137BCB8", VA = "0x137BCB8")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x137BCF8", Offset = "0x137BCF8", VA = "0x137BCF8")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x137BD00", Offset = "0x137BD00", VA = "0x137BD00")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x137BD88", Offset = "0x137BD88", VA = "0x137BD88")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x137BE84", Offset = "0x137BE84", VA = "0x137BE84")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x137BF40", Offset = "0x137BF40", VA = "0x137BF40")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x137BFAC", Offset = "0x137BFAC", VA = "0x137BFAC")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x137C018", Offset = "0x137C018", VA = "0x137C018")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x137B4CC", Offset = "0x137B4CC", VA = "0x137B4CC")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6001443")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001445")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001447")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x137C0D4", Offset = "0x137C0D4", VA = "0x137C0D4")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x137C380", Offset = "0x137C380", VA = "0x137C380")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x137C508", Offset = "0x137C508", VA = "0x137C508")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x137C620", Offset = "0x137C620", VA = "0x137C620")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x137C770", Offset = "0x137C770", VA = "0x137C770")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x137C808", Offset = "0x137C808", VA = "0x137C808")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037D")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x170001F8")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x1519038", Offset = "0x1519038", VA = "0x1519038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x1519090", Offset = "0x1519090", VA = "0x1519090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x15190A8", Offset = "0x15190A8", VA = "0x15190A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FB")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x1519144", Offset = "0x1519144", VA = "0x1519144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x15191F4", Offset = "0x15191F4", VA = "0x15191F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public LIV liv
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x151CD28", Offset = "0x151CD28", VA = "0x151CD28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x151CD30", Offset = "0x151CD30", VA = "0x151CD30")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x170001FF")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x151CD40", Offset = "0x151CD40", VA = "0x151CD40")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000200")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x151CD50", Offset = "0x151CD50", VA = "0x151CD50")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000201")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x151CD58", Offset = "0x151CD58", VA = "0x151CD58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public Camera cameraReference
		{
			[Token(Token = "0x6001463")]
			[Address(RVA = "0x151C108", Offset = "0x151C108", VA = "0x151C108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x151CD60", Offset = "0x151CD60", VA = "0x151CD60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public Transform stage
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x151CD7C", Offset = "0x151CD7C", VA = "0x151CD7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x151CD98", Offset = "0x151CD98", VA = "0x151CD98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x151CDB4", Offset = "0x151CDB4", VA = "0x151CDB4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000207")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x151B4B8", Offset = "0x151B4B8", VA = "0x151B4B8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000208")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x151B578", Offset = "0x151B578", VA = "0x151B578")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000209")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x151BB0C", Offset = "0x151BB0C", VA = "0x151BB0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool canSetPose
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x151CEA4", Offset = "0x151CEA4", VA = "0x151CEA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1518E60", Offset = "0x1518E60", VA = "0x1518E60")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1518F8C", Offset = "0x1518F8C", VA = "0x1518F8C")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x151927C", Offset = "0x151927C", VA = "0x151927C")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x15199C0", Offset = "0x15199C0", VA = "0x15199C0")]
		public void Render()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x151A108", Offset = "0x151A108", VA = "0x151A108")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x151A3F0", Offset = "0x151A3F0", VA = "0x151A3F0")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x151AD90", Offset = "0x151AD90", VA = "0x151AD90")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x15193CC", Offset = "0x15193CC", VA = "0x15193CC")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x151CA48", Offset = "0x151CA48", VA = "0x151CA48")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x151CBC8", Offset = "0x151CBC8", VA = "0x151CBC8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x151CEC4", Offset = "0x151CEC4", VA = "0x151CEC4")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x151D358", Offset = "0x151D358", VA = "0x151D358")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x151D554", Offset = "0x151D554", VA = "0x151D554")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x151D5D0", Offset = "0x151D5D0", VA = "0x151D5D0")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x151CC0C", Offset = "0x151CC0C", VA = "0x151CC0C")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1519A98", Offset = "0x1519A98", VA = "0x1519A98")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1519B04", Offset = "0x1519B04", VA = "0x1519B04")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x151A098", Offset = "0x151A098", VA = "0x151A098")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x151B2A4", Offset = "0x151B2A4", VA = "0x151B2A4")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x151B88C", Offset = "0x151B88C", VA = "0x151B88C")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x151BA04", Offset = "0x151BA04", VA = "0x151BA04")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x151BF40", Offset = "0x151BF40", VA = "0x151BF40")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x151BFB0", Offset = "0x151BFB0", VA = "0x151BFB0")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x151D7A8", Offset = "0x151D7A8", VA = "0x151D7A8")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x151D9AC", Offset = "0x151D9AC", VA = "0x151D9AC")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x151DA44", Offset = "0x151DA44", VA = "0x151DA44")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x151DADC", Offset = "0x151DADC", VA = "0x151DADC")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1519DD8", Offset = "0x1519DD8", VA = "0x1519DD8")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x151B8FC", Offset = "0x151B8FC", VA = "0x151B8FC")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x200037E")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001418")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001419")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400141A")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400141B")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400141C")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400141D")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x400141E")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x400141F")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001420")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001421")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001422")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x151B7F4", Offset = "0x151B7F4", VA = "0x151B7F4")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x151BAC0", Offset = "0x151BAC0", VA = "0x151BAC0")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x151BEF4", Offset = "0x151BEF4", VA = "0x151BEF4")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x151C020", Offset = "0x151C020", VA = "0x151C020")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x151B840", Offset = "0x151B840", VA = "0x151B840")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x151BA74", Offset = "0x151BA74", VA = "0x151BA74")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001423")]
		public const string SDK_ID = "I3VSJGPSQ6WZZPETEGAQVARI0EG5MRNC";

		[Token(Token = "0x4001424")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4001425")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000380")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001427")]
		NONE = 0,
		[Token(Token = "0x4001428")]
		GAME = 63
	}
	[Token(Token = "0x2000381")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x400142A")]
		NONE = 0uL,
		[Token(Token = "0x400142B")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x400142C")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x400142D")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x400142E")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x400142F")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001430")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001431")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001432")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001433")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4001434")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4001435")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000382")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001437")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001438")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001439")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x400143A")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000383")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x400143C")]
		UNDEFINED,
		[Token(Token = "0x400143D")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000384")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x400143F")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001440")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000385")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4001442")]
		UNDEFINED,
		[Token(Token = "0x4001443")]
		RAW,
		[Token(Token = "0x4001444")]
		DIRECTX,
		[Token(Token = "0x4001445")]
		OPENGL,
		[Token(Token = "0x4001446")]
		VULKAN,
		[Token(Token = "0x4001447")]
		METAL
	}
	[Token(Token = "0x2000386")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001449")]
		UNDEFINED,
		[Token(Token = "0x400144A")]
		LINEAR,
		[Token(Token = "0x400144B")]
		SRGB
	}
	[Token(Token = "0x2000387")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x400144D")]
		UNDEFINED,
		[Token(Token = "0x400144E")]
		FORWARD,
		[Token(Token = "0x400144F")]
		DEFERRED,
		[Token(Token = "0x4001450")]
		VERTEX_LIT,
		[Token(Token = "0x4001451")]
		UNIVERSAL,
		[Token(Token = "0x4001452")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000388")]
	public struct SDKResolution
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700020B")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x15193C4", Offset = "0x15193C4", VA = "0x15193C4")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x151DC74", Offset = "0x151DC74", VA = "0x151DC74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000389")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700020C")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x15171A8", Offset = "0x15171A8", VA = "0x15171A8")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700020D")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x151E37C", Offset = "0x151E37C", VA = "0x151E37C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700020E")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x151E858", Offset = "0x151E858", VA = "0x151E858")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700020F")]
		public static SDKVector3 up
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x15184F0", Offset = "0x15184F0", VA = "0x15184F0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000210")]
		public static SDKVector3 right
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x151E868", Offset = "0x151E868", VA = "0x151E868")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x151E598", Offset = "0x151E598", VA = "0x151E598")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x15184D8", Offset = "0x15184D8", VA = "0x15184D8")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x151E878", Offset = "0x151E878", VA = "0x151E878")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x151E888", Offset = "0x151E888", VA = "0x151E888")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x151E898", Offset = "0x151E898", VA = "0x151E898")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x151E8A8", Offset = "0x151E8A8", VA = "0x151E8A8")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x151E8B8", Offset = "0x151E8B8", VA = "0x151E8B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038A")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000211")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x15171B8", Offset = "0x15171B8", VA = "0x15171B8")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1518A5C", Offset = "0x1518A5C", VA = "0x1518A5C")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1518A8C", Offset = "0x1518A8C", VA = "0x1518A8C")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1518A90", Offset = "0x1518A90", VA = "0x1518A90")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1518BA4", Offset = "0x1518BA4", VA = "0x1518BA4")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1518C18", Offset = "0x1518C18", VA = "0x1518C18")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1518CBC", Offset = "0x1518CBC", VA = "0x1518CBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038B")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000212")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x1516F74", Offset = "0x1516F74", VA = "0x1516F74")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x15179F0", Offset = "0x15179F0", VA = "0x15179F0")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1517A34", Offset = "0x1517A34", VA = "0x1517A34")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1517A78", Offset = "0x1517A78", VA = "0x1517A78")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1517B80", Offset = "0x1517B80", VA = "0x1517B80")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1517C2C", Offset = "0x1517C2C", VA = "0x1517C2C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1517C84", Offset = "0x1517C84", VA = "0x1517C84")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1517CC0", Offset = "0x1517CC0", VA = "0x1517CC0")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1517D54", Offset = "0x1517D54", VA = "0x1517D54")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1517D80", Offset = "0x1517D80", VA = "0x1517D80")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1517E6C", Offset = "0x1517E6C", VA = "0x1517E6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038C")]
	public struct SDKPlane
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000213")]
		public static SDKPlane empty
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x15184DC", Offset = "0x15184DC", VA = "0x15184DC")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1518478", Offset = "0x1518478", VA = "0x1518478")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1518500", Offset = "0x1518500", VA = "0x1518500", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038D")]
	public struct SDKPriority
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000214")]
		public static SDKPriority empty
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x15176C8", Offset = "0x15176C8", VA = "0x15176C8")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x15187F8", Offset = "0x15187F8", VA = "0x15187F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038E")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000215")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x137B458", Offset = "0x137B458", VA = "0x137B458")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x137B944", Offset = "0x137B944", VA = "0x137B944", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200038F")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000216")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x1517528", Offset = "0x1517528", VA = "0x1517528")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x15176D4", Offset = "0x15176D4", VA = "0x15176D4")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x15176E4", Offset = "0x15176E4", VA = "0x15176E4")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x15176F8", Offset = "0x15176F8", VA = "0x15176F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000217")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x1518310", Offset = "0x1518310", VA = "0x1518310")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x15183CC", Offset = "0x15183CC", VA = "0x15183CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000391")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000218")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x1518370", Offset = "0x1518370", VA = "0x1518370")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x151E158", Offset = "0x151E158", VA = "0x151E158", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000392")]
	public struct SDKTexture
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000219")]
		public static SDKTexture empty
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x151DDB4", Offset = "0x151DDB4", VA = "0x151DDB4")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x151DE04", Offset = "0x151DE04", VA = "0x151DE04", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000393")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700021A")]
		public static SDKTransform empty
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x15176B4", Offset = "0x15176B4", VA = "0x15176B4")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x151E38C", Offset = "0x151E38C", VA = "0x151E38C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000394")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700021B")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x1516F40", Offset = "0x1516F40", VA = "0x1516F40")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1516FA0", Offset = "0x1516FA0", VA = "0x1516FA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000395")]
	public struct SDKControllerState
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700021C")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x151715C", Offset = "0x151715C", VA = "0x151715C")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x15171CC", Offset = "0x15171CC", VA = "0x15171CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public struct SDKPose
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x1700021D")]
		public static SDKPose empty
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x1517638", Offset = "0x1517638", VA = "0x1517638")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x15185AC", Offset = "0x15185AC", VA = "0x15185AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000397")]
	public static class SDKUtils
	{
		[Token(Token = "0x1700021E")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x151E47C", Offset = "0x151E47C", VA = "0x151E47C")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x151C4B8", Offset = "0x151C4B8", VA = "0x151C4B8")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x151E464", Offset = "0x151E464", VA = "0x151E464")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x151DBD8", Offset = "0x151DBD8", VA = "0x151DBD8")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x151E4AC", Offset = "0x151E4AC", VA = "0x151E4AC")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x151DB74", Offset = "0x151DB74", VA = "0x151DB74")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x151E4CC", Offset = "0x151E4CC", VA = "0x151E4CC")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x151E4D8", Offset = "0x151E4D8", VA = "0x151E4D8")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x151E4EC", Offset = "0x151E4EC", VA = "0x151E4EC")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x151C1A4", Offset = "0x151C1A4", VA = "0x151C1A4")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x151B598", Offset = "0x151B598", VA = "0x151B598")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x151D234", Offset = "0x151D234", VA = "0x151D234")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x151E5CC", Offset = "0x151E5CC", VA = "0x151E5CC")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x60014CC")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x60014CD")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x151D840", Offset = "0x151D840", VA = "0x151D840")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x151CC84", Offset = "0x151CC84", VA = "0x151CC84")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1519C90", Offset = "0x1519C90", VA = "0x1519C90")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x151B314", Offset = "0x151B314", VA = "0x151B314")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x151909C", Offset = "0x151909C", VA = "0x151909C")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x151BB28", Offset = "0x151BB28", VA = "0x151BB28")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x151C06C", Offset = "0x151C06C", VA = "0x151C06C")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x151BC90", Offset = "0x151BC90", VA = "0x151BC90")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace Funly.SkyStudio
{
	[Token(Token = "0x2000398")]
	[ExecuteInEditMode]
	public class OrbitingBody : MonoBehaviour
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_PositionTransform;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RotateBody m_RotateBody;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpherePoint m_SpherePoint;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_CachedWorldDirection;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Light m_BodyLight;

		[Token(Token = "0x1700021F")]
		public Transform positionTransform
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x1C4C42C", Offset = "0x1C4C42C", VA = "0x1C4C42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public RotateBody rotateBody
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x1C4C4D8", Offset = "0x1C4C4D8", VA = "0x1C4C4D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public SpherePoint Point
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x1C4C5F4", Offset = "0x1C4C5F4", VA = "0x1C4C5F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x1C4C5FC", Offset = "0x1C4C5FC", VA = "0x1C4C5FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public Vector3 BodyGlobalDirection
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x1C4C808", Offset = "0x1C4C808", VA = "0x1C4C808")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000223")]
		public Light BodyLight
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x1C4C814", Offset = "0x1C4C814", VA = "0x1C4C814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1C4C940", Offset = "0x1C4C940", VA = "0x1C4C940")]
		public void ResetOrbit()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1C4C6FC", Offset = "0x1C4C6FC", VA = "0x1C4C6FC")]
		public void LayoutOribit()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1C4C964", Offset = "0x1C4C964", VA = "0x1C4C964")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1C4C968", Offset = "0x1C4C968", VA = "0x1C4C968")]
		public OrbitingBody()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class RotateBody : MonoBehaviour
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_SpinSpeed;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_AllowSpinning;

		[Token(Token = "0x17000224")]
		public float SpinSpeed
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x1C4F084", Offset = "0x1C4F084", VA = "0x1C4F084")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x1C4F08C", Offset = "0x1C4F08C", VA = "0x1C4F08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public bool AllowSpinning
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1C4F1D8", Offset = "0x1C4F1D8", VA = "0x1C4F1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1C4F1E0", Offset = "0x1C4F1E0", VA = "0x1C4F1E0")]
			set
			{
			}
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1C4F094", Offset = "0x1C4F094", VA = "0x1C4F094")]
		public void UpdateOrbitBodyRotation()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1C4F1EC", Offset = "0x1C4F1EC", VA = "0x1C4F1EC")]
		public RotateBody()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class NearbyStarRenderer : BaseStarDataRenderer
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2BD9C", Offset = "0xF2BD9C")]
		private sealed class <ComputeStarData>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NearbyStarRenderer <>4__this;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F0")]
				[Address(RVA = "0x1C4BF10", Offset = "0x1C4BF10", VA = "0x1C4BF10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F2")]
				[Address(RVA = "0x1C4BF78", Offset = "0x1C4BF78", VA = "0x1C4BF78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x1C4BC04", Offset = "0x1C4BC04", VA = "0x1C4BC04")]
			[DebuggerHidden]
			public <ComputeStarData>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x1C4BC38", Offset = "0x1C4BC38", VA = "0x1C4BC38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x1C4BC3C", Offset = "0x1C4BC3C", VA = "0x1C4BC3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x1C4BF18", Offset = "0x1C4BF18", VA = "0x1C4BF18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B8")]
		private const int kMaxStars = 2000;

		[Token(Token = "0x40014B9")]
		private const int kStarPointTextureWidth = 2048;

		[Token(Token = "0x40014BA")]
		private const float kStarPaddingRadiusMultipler = 2.1f;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1C4B564", Offset = "0x1C4B564", VA = "0x1C4B564")]
		private RenderTexture CreateRenderTexture(string name, int renderTextureSize, RenderTextureFormat format)
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1C4B5D4", Offset = "0x1C4B5D4", VA = "0x1C4B5D4")]
		private Material GetNearbyStarMaterial(Vector4 randomSeed, int starCount)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1C4B738", Offset = "0x1C4B738", VA = "0x1C4B738")]
		private void WriteDebugTexture(RenderTexture rt, string path)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1C4B8D4", Offset = "0x1C4B8D4", VA = "0x1C4B8D4")]
		private Texture2D GetStarListTexture(string starTexKey, out int validStarPixelCount)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1C4BB94", Offset = "0x1C4BB94", VA = "0x1C4BB94", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B3AC", Offset = "0xF3B3AC")]
		public override IEnumerator ComputeStarData()
		{
			return null;
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1C4B76C", Offset = "0x1C4B76C", VA = "0x1C4B76C")]
		private Texture2D ConvertToTexture2D(RenderTexture rt)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1C4BC30", Offset = "0x1C4BC30", VA = "0x1C4BC30")]
		public NearbyStarRenderer()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class BaseArtItem : ScriptableObject
	{
		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1C46C64", Offset = "0x1C46C64", VA = "0x1C46C64")]
		public BaseArtItem()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public abstract class BaseArtSet : ScriptableObject
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1C46C6C", Offset = "0x1C46C6C", VA = "0x1C46C6C")]
		protected BaseArtSet()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2BDAC", Offset = "0xF2BDAC")]
	public class LightningArtItem : SpriteArtItem
	{
		[Token(Token = "0x200039F")]
		public enum Alignment
		{
			[Token(Token = "0x40014C4")]
			ScaleToFit,
			[Token(Token = "0x40014C5")]
			TopAlign
		}

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32428", Offset = "0xF32428")]
		public Alignment alignment;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32460", Offset = "0xF32460")]
		public AudioClip thunderSound;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32498", Offset = "0xF32498")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32498", Offset = "0xF32498")]
		public float strikeProbability;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF324EC", Offset = "0xF324EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF324EC", Offset = "0xF324EC")]
		public float size;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32544", Offset = "0xF32544")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32544", Offset = "0xF32544")]
		public float intensity;

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1C49960", Offset = "0x1C49960", VA = "0x1C49960")]
		public LightningArtItem()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2BDF8", Offset = "0xF2BDF8")]
	public class LightningArtSet : SpriteArtSet
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32598", Offset = "0xF32598")]
		public List<LightningArtItem> lightingStyleItems;

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1C499AC", Offset = "0x1C499AC", VA = "0x1C499AC")]
		public LightningArtSet()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2BE44", Offset = "0xF2BE44")]
	public class RainSplashArtItem : SpriteArtItem
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF325D0", Offset = "0xF325D0")]
		public float intensityMultiplier;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF325E8", Offset = "0xF325E8")]
		public float scaleMultiplier;

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1C4DDD0", Offset = "0x1C4DDD0", VA = "0x1C4DDD0")]
		public RainSplashArtItem()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2BE90", Offset = "0xF2BE90")]
	public class RainSplashArtSet : SpriteArtSet
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RainSplashArtItem> rainSplashArtItems;

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1C4DDDC", Offset = "0x1C4DDDC", VA = "0x1C4DDDC")]
		public RainSplashArtSet()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class SpriteArtItem : ScriptableObject
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture spriteSheetTexture;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int rows;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int columns;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int totalFrames;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int animateSpeed;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF32600", Offset = "0xF32600")]
		public Color tintColor;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1C49978", Offset = "0x1C49978", VA = "0x1C49978")]
		public SpriteArtItem()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class SpriteArtSet : BaseArtSet
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1C499B4", Offset = "0x1C499B4", VA = "0x1C499B4")]
		public SpriteArtSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class BoolKeyframeGroup : KeyframeGroup<BoolKeyframe>
	{
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1C483B0", Offset = "0x1C483B0", VA = "0x1C483B0")]
		public BoolKeyframeGroup(string name)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1C48410", Offset = "0x1C48410", VA = "0x1C48410")]
		public BoolKeyframeGroup(string name, BoolKeyframe keyframe)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1C4848C", Offset = "0x1C4848C", VA = "0x1C4848C")]
		public bool BoolForTime(float time)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003A6")]
	public class ColorKeyframeGroup : KeyframeGroup<ColorKeyframe>
	{
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1C487A8", Offset = "0x1C487A8", VA = "0x1C487A8")]
		public ColorKeyframeGroup(string name)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1C48808", Offset = "0x1C48808", VA = "0x1C48808")]
		public ColorKeyframeGroup(string name, ColorKeyframe frame)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1C48884", Offset = "0x1C48884", VA = "0x1C48884")]
		public Color ColorForTime(float time)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20003A7")]
	public interface IKeyframeGroup
	{
		[Token(Token = "0x17000228")]
		string name
		{
			[Token(Token = "0x6001501")]
			get;
			[Token(Token = "0x6001502")]
			set;
		}

		[Token(Token = "0x17000229")]
		string id
		{
			[Token(Token = "0x6001503")]
			get;
		}

		[Token(Token = "0x6001504")]
		void SortKeyframes();

		[Token(Token = "0x6001505")]
		void TrimToSingleKeyframe();

		[Token(Token = "0x6001506")]
		void RemoveKeyFrame(IBaseKeyframe keyframe);

		[Token(Token = "0x6001507")]
		int GetKeyFrameCount();
	}
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class KeyframeGroup<T> : IKeyframeGroup where T : IBaseKeyframe
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> keyframes;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_Name;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_Id;

		[Token(Token = "0x1700022A")]
		public string name
		{
			[Token(Token = "0x6001508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001509")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public string id
		{
			[Token(Token = "0x600150A")]
			get
			{
				return null;
			}
			[Token(Token = "0x600150B")]
			set
			{
			}
		}

		[Token(Token = "0x600150C")]
		public KeyframeGroup(string name)
		{
		}

		[Token(Token = "0x600150D")]
		public void AddKeyFrame(T keyFrame)
		{
		}

		[Token(Token = "0x600150E")]
		public void RemoveKeyFrame(T keyFrame)
		{
		}

		[Token(Token = "0x600150F")]
		public void RemoveKeyFrame(IBaseKeyframe keyframe)
		{
		}

		[Token(Token = "0x6001510")]
		public int GetKeyFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001511")]
		public T GetKeyframe(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6001512")]
		public void SortKeyframes()
		{
		}

		[Token(Token = "0x6001513")]
		public float CurveAdjustedBlendingTime(InterpolationCurve curve, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001514")]
		public T GetPreviousKeyFrame(float time)
		{
			return (T)null;
		}

		[Token(Token = "0x6001515")]
		public bool GetSurroundingKeyFrames(float time, out T beforeKeyframe, out T afterKeyframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		public bool GetSurroundingKeyFrames(float time, out int beforeIndex, out int afterIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001517")]
		public static float ProgressBetweenSurroundingKeyframes(float time, BaseKeyframe beforeKey, BaseKeyframe afterKey)
		{
			return default(float);
		}

		[Token(Token = "0x6001518")]
		public static float ProgressBetweenSurroundingKeyframes(float time, float beforeKeyTime, float afterKeyTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001519")]
		public static float WidthBetweenCircularValues(float begin, float end)
		{
			return default(float);
		}

		[Token(Token = "0x600151A")]
		public void TrimToSingleKeyframe()
		{
		}

		[Token(Token = "0x600151B")]
		public InterpolationDirection GetShortestInterpolationDirection(float previousKeyValue, float nextKeyValue, float minValue, float maxValue)
		{
			return default(InterpolationDirection);
		}

		[Token(Token = "0x600151C")]
		public void CalculateCircularDistances(float previousKeyValue, float nextKeyValue, float minValue, float maxValue, out float forwardDistance, out float reverseDistance)
		{
		}

		[Token(Token = "0x600151D")]
		public float InterpolateFloat(InterpolationCurve curve, InterpolationDirection direction, float time, float beforeTime, float nextTime, float previousKeyValue, float nextKeyValue, float minValue, float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x600151E")]
		public float AutoInterpolation(float curvedTime, float previousValue, float nextValue)
		{
			return default(float);
		}

		[Token(Token = "0x600151F")]
		public float ForwardInterpolation(float time, float previousKeyValue, float nextKeyValue, float minValue, float maxValue, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6001520")]
		public float ReverseInterpolation(float time, float previousKeyValue, float nextKeyValue, float minValue, float maxValue, float distance)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public class NumberKeyframeGroup : KeyframeGroup<NumberKeyframe>
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minValue;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxValue;

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1C4BFF8", Offset = "0x1C4BFF8", VA = "0x1C4BFF8")]
		public NumberKeyframeGroup(string name, float min, float max)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1C4C070", Offset = "0x1C4C070", VA = "0x1C4C070")]
		public NumberKeyframeGroup(string name, float min, float max, NumberKeyframe frame)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1C4C100", Offset = "0x1C4C100", VA = "0x1C4C100")]
		public float GetFirstValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1C4C164", Offset = "0x1C4C164", VA = "0x1C4C164")]
		public float ValueToPercent(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1C4C1EC", Offset = "0x1C4C1EC", VA = "0x1C4C1EC")]
		public float ValuePercentAtTime(float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1C4C39C", Offset = "0x1C4C39C", VA = "0x1C4C39C")]
		public float PercentToValue(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1C4C210", Offset = "0x1C4C210", VA = "0x1C4C210")]
		public float NumericValueAtTime(float time)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class SpherePointKeyframeGroup : KeyframeGroup<SpherePointKeyframe>
	{
		[Token(Token = "0x40014D7")]
		public const float MinHorizontalRotation = -(float)Math.PI;

		[Token(Token = "0x40014D8")]
		public const float MaxHorizontalRotation = (float)Math.PI;

		[Token(Token = "0x40014D9")]
		public const float MinVerticalRotation = -(float)Math.PI / 2f;

		[Token(Token = "0x40014DA")]
		public const float MaxVerticalRotation = (float)Math.PI / 2f;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1C557F8", Offset = "0x1C557F8", VA = "0x1C557F8")]
		public SpherePointKeyframeGroup(string name)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1C54B0C", Offset = "0x1C54B0C", VA = "0x1C54B0C")]
		public SpherePointKeyframeGroup(string name, SpherePointKeyframe keyframe)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1C53688", Offset = "0x1C53688", VA = "0x1C53688")]
		public SpherePoint SpherePointForTime(float time)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003AB")]
	public class TextureKeyframeGroup : KeyframeGroup<TextureKeyframe>
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x145A7C4", Offset = "0x145A7C4", VA = "0x145A7C4")]
		public TextureKeyframeGroup(string name, TextureKeyframe keyframe)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x145A840", Offset = "0x145A840", VA = "0x145A840")]
		public Texture TextureForTime(float time)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class BaseKeyframe : IComparable, IBaseKeyframe
	{
		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string m_Id;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_Time;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private InterpolationCurve m_InterpolationCurve;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InterpolationDirection m_InterpolationDirection;

		[Token(Token = "0x1700022C")]
		public string id
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x1C46C74", Offset = "0x1C46C74", VA = "0x1C46C74", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x1C46C7C", Offset = "0x1C46C7C", VA = "0x1C46C7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public float time
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x1C46C84", Offset = "0x1C46C84", VA = "0x1C46C84", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x1C46C8C", Offset = "0x1C46C8C", VA = "0x1C46C8C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public InterpolationCurve interpolationCurve
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x1C46C94", Offset = "0x1C46C94", VA = "0x1C46C94", Slot = "8")]
			get
			{
				return default(InterpolationCurve);
			}
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x1C46C9C", Offset = "0x1C46C9C", VA = "0x1C46C9C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public InterpolationDirection interpolationDirection
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x1C46CA4", Offset = "0x1C46CA4", VA = "0x1C46CA4", Slot = "10")]
			get
			{
				return default(InterpolationDirection);
			}
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x1C46CAC", Offset = "0x1C46CAC", VA = "0x1C46CAC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1C46CB4", Offset = "0x1C46CB4", VA = "0x1C46CB4")]
		public BaseKeyframe(float time)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1C46D58", Offset = "0x1C46D58", VA = "0x1C46D58", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class BoolKeyframe : BaseKeyframe
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool value;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1C4833C", Offset = "0x1C4833C", VA = "0x1C4833C")]
		public BoolKeyframe(float time, bool value)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1C48368", Offset = "0x1C48368", VA = "0x1C48368")]
		public BoolKeyframe(BoolKeyframe keyframe)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class ColorKeyframe : BaseKeyframe
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color;

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1C486E0", Offset = "0x1C486E0", VA = "0x1C486E0")]
		public ColorKeyframe(Color c, float time)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1C4874C", Offset = "0x1C4874C", VA = "0x1C4874C")]
		public ColorKeyframe(ColorKeyframe keyframe)
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public enum InterpolationCurve
	{
		[Token(Token = "0x40014E2")]
		Linear,
		[Token(Token = "0x40014E3")]
		EaseInEaseOut
	}
	[Token(Token = "0x20003B0")]
	public enum InterpolationDirection
	{
		[Token(Token = "0x40014E5")]
		Auto,
		[Token(Token = "0x40014E6")]
		Foward,
		[Token(Token = "0x40014E7")]
		Reverse,
		[Token(Token = "0x40014E8")]
		ShortestPath
	}
	[Token(Token = "0x20003B1")]
	public interface IBaseKeyframe
	{
		[Token(Token = "0x17000230")]
		string id
		{
			[Token(Token = "0x600153B")]
			get;
		}

		[Token(Token = "0x17000231")]
		float time
		{
			[Token(Token = "0x600153C")]
			get;
			[Token(Token = "0x600153D")]
			set;
		}

		[Token(Token = "0x17000232")]
		InterpolationCurve interpolationCurve
		{
			[Token(Token = "0x600153E")]
			get;
			[Token(Token = "0x600153F")]
			set;
		}

		[Token(Token = "0x17000233")]
		InterpolationDirection interpolationDirection
		{
			[Token(Token = "0x6001540")]
			get;
			[Token(Token = "0x6001541")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class NumberKeyframe : BaseKeyframe
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float value;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1C4BF80", Offset = "0x1C4BF80", VA = "0x1C4BF80")]
		public NumberKeyframe(float time, float value)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1C4BFB0", Offset = "0x1C4BFB0", VA = "0x1C4BFB0")]
		public NumberKeyframe(NumberKeyframe keyframe)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B3")]
	public class SpherePointKeyframe : BaseKeyframe
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpherePoint spherePoint;

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1C54A48", Offset = "0x1C54A48", VA = "0x1C54A48")]
		public SpherePointKeyframe(SpherePoint spherePoint, float time)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1C55758", Offset = "0x1C55758", VA = "0x1C55758")]
		public SpherePointKeyframe(SpherePointKeyframe keyframe)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	public class TextureKeyframe : BaseKeyframe
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture texture;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x145A74C", Offset = "0x145A74C", VA = "0x145A74C")]
		public TextureKeyframe(Texture texture, float time)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x145A778", Offset = "0x145A778", VA = "0x145A778")]
		public TextureKeyframe(TextureKeyframe keyframe)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class ProfileFeatureDefinition
	{
		[Token(Token = "0x20003B6")]
		public enum FeatureType
		{
			[Token(Token = "0x40014FA")]
			ShaderKeyword,
			[Token(Token = "0x40014FB")]
			BooleanValue,
			[Token(Token = "0x40014FC")]
			ShaderKeywordDropdown
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string featureKey;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] featureKeys;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FeatureType featureType;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shaderKeyword;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] shaderKeywords;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] dropdownLabels;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int dropdownSelectedIndex;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string name;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool value;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string tooltip;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string dependsOnFeature;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool dependsOnValue;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool isShaderKeywordFeature;

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1C4CA04", Offset = "0x1C4CA04", VA = "0x1C4CA04")]
		public static ProfileFeatureDefinition CreateShaderFeature(string featureKey, string shaderKeyword, bool value, string name, string dependsOnFeature, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1C4CAC8", Offset = "0x1C4CAC8", VA = "0x1C4CAC8")]
		public static ProfileFeatureDefinition CreateShaderFeatureDropdown(string[] featureKeys, string[] shaderKeywords, string[] labels, int selectedIndex, string name, string dependsOnFeature, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1C4CB90", Offset = "0x1C4CB90", VA = "0x1C4CB90")]
		public static ProfileFeatureDefinition CreateBooleanFeature(string featureKey, bool value, string name, string dependsOnFeature, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1C4CAC0", Offset = "0x1C4CAC0", VA = "0x1C4CAC0")]
		public ProfileFeatureDefinition()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class ProfileFeatureKeys
	{
		[Token(Token = "0x40014FD")]
		public const string MobileQualityFeature = "MobileQualityFeature";

		[Token(Token = "0x40014FE")]
		public const string GradientSkyFeature = "GradientSkyFeature";

		[Token(Token = "0x40014FF")]
		public const string FogFeature = "FogFeature";

		[Token(Token = "0x4001500")]
		public const string VertexGradientSkyFeature = "VertexGradientSkyFeature";

		[Token(Token = "0x4001501")]
		public const string SunFeature = "SunFeature";

		[Token(Token = "0x4001502")]
		public const string SunCustomTextureFeature = "SunCustomTextureFeature";

		[Token(Token = "0x4001503")]
		public const string SunSpriteSheetFeature = "SunSpriteSheetFeature";

		[Token(Token = "0x4001504")]
		public const string SunAlphaBlendFeature = "SunAlphaBlendFeature";

		[Token(Token = "0x4001505")]
		public const string SunRotationFeature = "SunRotationFeature";

		[Token(Token = "0x4001506")]
		public const string MoonFeature = "MoonFeature";

		[Token(Token = "0x4001507")]
		public const string MoonCustomTextureFeature = "MoonCustomTextureFeature";

		[Token(Token = "0x4001508")]
		public const string MoonSpriteSheetFeature = "MoonSpriteSheetFeature";

		[Token(Token = "0x4001509")]
		public const string MoonAlphaBlendFeature = "MoonAlphaBlendFeature";

		[Token(Token = "0x400150A")]
		public const string MoonRotationFeature = "MoonRotationFeature";

		[Token(Token = "0x400150B")]
		public const string StarBasicFeature = "StarBasicFeature";

		[Token(Token = "0x400150C")]
		public const string StarLayer1Feature = "StarLayer1Feature";

		[Token(Token = "0x400150D")]
		public const string StarLayer1CustomTextureFeature = "StarLayer1CustomTextureFeature";

		[Token(Token = "0x400150E")]
		public const string StarLayer1SpriteSheetFeature = "StarLayer1SpriteSheetFeature";

		[Token(Token = "0x400150F")]
		public const string StarLayer1AlphaBlendFeature = "StarLayer1AlphaBlendFeature";

		[Token(Token = "0x4001510")]
		public const string StarLayer2Feature = "StarLayer2Feature";

		[Token(Token = "0x4001511")]
		public const string StarLayer2CustomTextureFeature = "StarLayer2CustomTextureFeature";

		[Token(Token = "0x4001512")]
		public const string StarLayer2SpriteSheetFeature = "StarLayer2SpriteSheetFeature";

		[Token(Token = "0x4001513")]
		public const string StarLayer2AlphaBlendFeature = "StarLayer2AlphaBlendFeature";

		[Token(Token = "0x4001514")]
		public const string StarLayer3Feature = "StarLayer3Feature";

		[Token(Token = "0x4001515")]
		public const string StarLayer3CustomTextureFeature = "StarLayer3CustomTextureFeature";

		[Token(Token = "0x4001516")]
		public const string StarLayer3SpriteSheetFeature = "StarLayer3SpriteSheetFeature";

		[Token(Token = "0x4001517")]
		public const string StarLayer3AlphaBlendFeature = "StarLayer3AlphaBlendFeature";

		[Token(Token = "0x4001518")]
		public const string RainFeature = "RainFeature";

		[Token(Token = "0x4001519")]
		public const string RainSoundFeature = "RainSoundFeature";

		[Token(Token = "0x400151A")]
		public const string RainSplashFeature = "RainSplashFeature";

		[Token(Token = "0x400151B")]
		public const string LightningFeature = "LightningFeature";

		[Token(Token = "0x400151C")]
		public const string ThunderFeature = "ThunderFeature";

		[Token(Token = "0x400151D")]
		public const string CloudFeature = "CloudFeature";

		[Token(Token = "0x400151E")]
		public const string NoiseCloudFeature = "NoiseCloudFeature";

		[Token(Token = "0x400151F")]
		public const string CubemapCloudFeature = "CubemapCloudFeature";

		[Token(Token = "0x4001520")]
		public const string CubemapNormalCloudFeature = "CubemapNormalCloudFeature";

		[Token(Token = "0x4001521")]
		public const string CubemapCloudTextureFormatRGBFeature = "CubemapCloudTextureFormatRGBFeature";

		[Token(Token = "0x4001522")]
		public const string CubemapCloudTextureFormatRGBAFeature = "CubemapCloudTextureFormatRGBAFeature";

		[Token(Token = "0x4001523")]
		public const string CubemapCloudDoubleLayerFeature = "CubemapCloudDoubleLayerFeature";

		[Token(Token = "0x4001524")]
		public const string CubemapNormalCloudDoubleLayerFeature = "CubemapNormalCloudDoubleLayerFeature";

		[Token(Token = "0x4001525")]
		public const string CubemapCloudDoubleLayerCubemapFeature = "CubemapCloudDoubleLayerCubemap";

		[Token(Token = "0x4001526")]
		public const string CubemapNormalCloudDoubleLayerCubemapFeature = "CubemapNormalCloudDoubleLayerCubemap";

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1C4CC30", Offset = "0x1C4CC30", VA = "0x1C4CC30")]
		public ProfileFeatureKeys()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class ProfileGroupDefinition
	{
		[Token(Token = "0x20003B9")]
		public enum GroupType
		{
			[Token(Token = "0x4001537")]
			None,
			[Token(Token = "0x4001538")]
			Color,
			[Token(Token = "0x4001539")]
			Number,
			[Token(Token = "0x400153A")]
			Texture,
			[Token(Token = "0x400153B")]
			SpherePoint,
			[Token(Token = "0x400153C")]
			Boolean
		}

		[Token(Token = "0x20003BA")]
		public enum FormatStyle
		{
			[Token(Token = "0x400153E")]
			None,
			[Token(Token = "0x400153F")]
			Integer,
			[Token(Token = "0x4001540")]
			Float
		}

		[Token(Token = "0x20003BB")]
		public enum RebuildType
		{
			[Token(Token = "0x4001542")]
			None,
			[Token(Token = "0x4001543")]
			Stars
		}

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GroupType type;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FormatStyle formatStyle;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RebuildType rebuildType;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string propertyKey;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string groupName;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color color;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpherePoint spherePoint;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minimumValue;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maximumValue;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float value;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool boolValue;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D texture;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string tooltip;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string dependsOnFeature;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool dependsOnValue;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1C4CC78", Offset = "0x1C4CC78", VA = "0x1C4CC78")]
		public static ProfileGroupDefinition NumberGroupDefinition(string groupName, string propKey, float minimumValue, float maximumValue, float value, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1C4CCA8", Offset = "0x1C4CCA8", VA = "0x1C4CCA8")]
		public static ProfileGroupDefinition NumberGroupDefinition(string groupName, string propKey, float minimumValue, float maximumValue, float value, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1C4CC90", Offset = "0x1C4CC90", VA = "0x1C4CC90")]
		public static ProfileGroupDefinition NumberGroupDefinition(string groupName, string propKey, float minimumValue, float maximumValue, float value, RebuildType rebuildType, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1C4CCC0", Offset = "0x1C4CCC0", VA = "0x1C4CCC0")]
		public static ProfileGroupDefinition NumberGroupDefinition(string groupName, string propKey, float minimumValue, float maximumValue, float value, RebuildType rebuildType, FormatStyle formatStyle, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1C4CDC0", Offset = "0x1C4CDC0", VA = "0x1C4CDC0")]
		public static ProfileGroupDefinition ColorGroupDefinition(string groupName, string propKey, Color color, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1C4CEBC", Offset = "0x1C4CEBC", VA = "0x1C4CEBC")]
		public static ProfileGroupDefinition ColorGroupDefinition(string groupName, string propKey, Color color, string dependsOnFeature, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1C4CDD4", Offset = "0x1C4CDD4", VA = "0x1C4CDD4")]
		public static ProfileGroupDefinition ColorGroupDefinition(string groupName, string propKey, Color color, RebuildType rebuildType, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1C4CED4", Offset = "0x1C4CED4", VA = "0x1C4CED4")]
		public static ProfileGroupDefinition SpherePointGroupDefinition(string groupName, string propKey, float horizontalRotation, float verticalRotation, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1C4CEE8", Offset = "0x1C4CEE8", VA = "0x1C4CEE8")]
		public static ProfileGroupDefinition SpherePointGroupDefinition(string groupName, string propKey, float horizontalRotation, float verticalRotation, RebuildType rebuildType, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1C4CFDC", Offset = "0x1C4CFDC", VA = "0x1C4CFDC")]
		public static ProfileGroupDefinition TextureGroupDefinition(string groupName, string propKey, Texture2D texture, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1C4D0B8", Offset = "0x1C4D0B8", VA = "0x1C4D0B8")]
		public static ProfileGroupDefinition TextureGroupDefinition(string groupName, string propKey, Texture2D texture, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1C4CFF0", Offset = "0x1C4CFF0", VA = "0x1C4CFF0")]
		public static ProfileGroupDefinition TextureGroupDefinition(string groupName, string propKey, Texture2D texture, RebuildType rebuildType, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1C4D0D0", Offset = "0x1C4D0D0", VA = "0x1C4D0D0")]
		public static ProfileGroupDefinition BoolGroupDefinition(string groupName, string propKey, bool value, string dependsOnKeyword, bool dependsOnValue, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1C4CDA8", Offset = "0x1C4CDA8", VA = "0x1C4CDA8")]
		public ProfileGroupDefinition()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class ProfileGroupSection
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sectionTitle;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sectionIcon;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sectionKey;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string dependsOnFeature;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dependsOnValue;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProfileGroupDefinition[] groups;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1C4D194", Offset = "0x1C4D194", VA = "0x1C4D194")]
		public ProfileGroupSection(string sectionTitle, string sectionKey, string sectionIcon, string dependsOnFeature, bool dependsOnValue, ProfileGroupDefinition[] groups)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class ProfileFeatureSection
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sectionTitle;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sectionKey;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sectionIcon;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ProfileFeatureDefinition[] featureDefinitions;

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1C4CC38", Offset = "0x1C4CC38", VA = "0x1C4CC38")]
		public ProfileFeatureSection(string sectionTitle, string sectionKey, ProfileFeatureDefinition[] featureDefinitions)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class ProfilePropertyKeys
	{
		[Token(Token = "0x400154E")]
		public const string SkyCubemapKey = "SkyCubemapKey";

		[Token(Token = "0x400154F")]
		public const string SkyUpperColorKey = "SkyUpperColorKey";

		[Token(Token = "0x4001550")]
		public const string SkyMiddleColorKey = "SkyMiddleColorKey";

		[Token(Token = "0x4001551")]
		public const string SkyLowerColorKey = "SkyLowerColorKey";

		[Token(Token = "0x4001552")]
		public const string SkyMiddleColorPositionKey = "SkyMiddleColorPosition";

		[Token(Token = "0x4001553")]
		public const string HorizonTrasitionStartKey = "HorizonTransitionStartKey";

		[Token(Token = "0x4001554")]
		public const string HorizonTransitionLengthKey = "HorizonTransitionLengthKey";

		[Token(Token = "0x4001555")]
		public const string HorizonStarScaleKey = "HorizonStarScaleKey";

		[Token(Token = "0x4001556")]
		public const string StarTransitionStartKey = "StarTransitionStartKey";

		[Token(Token = "0x4001557")]
		public const string StarTransitionLengthKey = "StarTransitionLengthKey";

		[Token(Token = "0x4001558")]
		public const string SunColorKey = "SunColorKey";

		[Token(Token = "0x4001559")]
		public const string SunTextureKey = "SunTextureKey";

		[Token(Token = "0x400155A")]
		public const string SunSizeKey = "SunSizeKey";

		[Token(Token = "0x400155B")]
		public const string SunRotationSpeedKey = "SunRotationSpeedKey";

		[Token(Token = "0x400155C")]
		public const string SunEdgeFeatheringKey = "SunEdgeFeatheringKey";

		[Token(Token = "0x400155D")]
		public const string SunColorIntensityKey = "SunColorIntensityKey";

		[Token(Token = "0x400155E")]
		public const string SunLightColorKey = "SunLightColorKey";

		[Token(Token = "0x400155F")]
		public const string SunLightIntensityKey = "SunLightIntensityKey";

		[Token(Token = "0x4001560")]
		public const string SunPositionKey = "SunPositionKey";

		[Token(Token = "0x4001561")]
		public const string SunSpriteRowCountKey = "SunSpriteRowCountKey";

		[Token(Token = "0x4001562")]
		public const string SunSpriteColumnCountKey = "SunSpriteColumnCountKey";

		[Token(Token = "0x4001563")]
		public const string SunSpriteItemCountKey = "SunSpriteItemCount";

		[Token(Token = "0x4001564")]
		public const string SunSpriteAnimationSpeedKey = "SunSpriteAnimationSpeed";

		[Token(Token = "0x4001565")]
		public const string MoonColorKey = "MoonColorKey";

		[Token(Token = "0x4001566")]
		public const string MoonTextureKey = "MoonTextureKey";

		[Token(Token = "0x4001567")]
		public const string MoonSizeKey = "MoonSizeKey";

		[Token(Token = "0x4001568")]
		public const string MoonRotationSpeedKey = "MoonRotationSpeedKey";

		[Token(Token = "0x4001569")]
		public const string MoonEdgeFeatheringKey = "MoonEdgeFeatheringKey";

		[Token(Token = "0x400156A")]
		public const string MoonColorIntensityKey = "MoonColorIntensityKey";

		[Token(Token = "0x400156B")]
		public const string MoonLightColorKey = "MoonLightColorKey";

		[Token(Token = "0x400156C")]
		public const string MoonLightIntensityKey = "MoonLightIntensityKey";

		[Token(Token = "0x400156D")]
		public const string MoonPositionKey = "MoonPositionKey";

		[Token(Token = "0x400156E")]
		public const string MoonOrbitSpeedKey = "MoonOrbitSpeed";

		[Token(Token = "0x400156F")]
		public const string MoonSpriteRowCountKey = "MoonSpriteRowCountKey";

		[Token(Token = "0x4001570")]
		public const string MoonSpriteColumnCountKey = "MoonSpriteColumnCountKey";

		[Token(Token = "0x4001571")]
		public const string MoonSpriteItemCountKey = "MoonSpriteItemCount";

		[Token(Token = "0x4001572")]
		public const string MoonSpriteAnimationSpeedKey = "MoonSpriteAnimationSpeed";

		[Token(Token = "0x4001573")]
		public const string StarBasicCubemapKey = "StarBasicCubemapKey";

		[Token(Token = "0x4001574")]
		public const string StarBasicTwinkleSpeedKey = "StarBasicTwinkleSpeedKey";

		[Token(Token = "0x4001575")]
		public const string StarBasicTwinkleAmountKey = "StarBasicTwinkleAmountKey";

		[Token(Token = "0x4001576")]
		public const string StarBasicOpacityKey = "StarBasicOpacityKey";

		[Token(Token = "0x4001577")]
		public const string StarBasicTintColorKey = "StarBasicTintColorKey";

		[Token(Token = "0x4001578")]
		public const string StarBasicIntensityKey = "StarBasicIntensityKey";

		[Token(Token = "0x4001579")]
		public const string StarBasicExponentKey = "StarBasicExponentKey";

		[Token(Token = "0x400157A")]
		public const string Star1SizeKey = "Star1SizeKey";

		[Token(Token = "0x400157B")]
		public const string Star1DensityKey = "Star1DensityKey";

		[Token(Token = "0x400157C")]
		public const string Star1TextureKey = "Star1TextureKey";

		[Token(Token = "0x400157D")]
		public const string Star1ColorKey = "Star1ColorKey";

		[Token(Token = "0x400157E")]
		public const string Star1TwinkleAmountKey = "Star1TwinkleAmountKey";

		[Token(Token = "0x400157F")]
		public const string Star1TwinkleSpeedKey = "Star1TwinkleSpeedKey";

		[Token(Token = "0x4001580")]
		public const string Star1RotationSpeedKey = "Star1RotationSpeed";

		[Token(Token = "0x4001581")]
		public const string Star1EdgeFeatheringKey = "Star1EdgeFeathering";

		[Token(Token = "0x4001582")]
		public const string Star1ColorIntensityKey = "Star1ColorIntensityKey";

		[Token(Token = "0x4001583")]
		public const string Star1SpriteRowCountKey = "Star1SpriteRowCountKey";

		[Token(Token = "0x4001584")]
		public const string Star1SpriteColumnCountKey = "Star1SpriteColumnCountKey";

		[Token(Token = "0x4001585")]
		public const string Star1SpriteItemCountKey = "Star1SpriteItemCount";

		[Token(Token = "0x4001586")]
		public const string Star1SpriteAnimationSpeedKey = "Star1SpriteAnimationSpeed";

		[Token(Token = "0x4001587")]
		public const string Star2SizeKey = "Star2SizeKey";

		[Token(Token = "0x4001588")]
		public const string Star2DensityKey = "Star2DensityKey";

		[Token(Token = "0x4001589")]
		public const string Star2TextureKey = "Star2TextureKey";

		[Token(Token = "0x400158A")]
		public const string Star2ColorKey = "Star2ColorKey";

		[Token(Token = "0x400158B")]
		public const string Star2TwinkleAmountKey = "Star2TwinkleAmountKey";

		[Token(Token = "0x400158C")]
		public const string Star2TwinkleSpeedKey = "Star2TwinkleSpeedKey";

		[Token(Token = "0x400158D")]
		public const string Star2RotationSpeedKey = "Star2RotationSpeed";

		[Token(Token = "0x400158E")]
		public const string Star2EdgeFeatheringKey = "Star2EdgeFeathering";

		[Token(Token = "0x400158F")]
		public const string Star2ColorIntensityKey = "Star2ColorIntensityKey";

		[Token(Token = "0x4001590")]
		public const string Star2SpriteRowCountKey = "Star2SpriteRowCountKey";

		[Token(Token = "0x4001591")]
		public const string Star2SpriteColumnCountKey = "Star2SpriteColumnCountKey";

		[Token(Token = "0x4001592")]
		public const string Star2SpriteItemCountKey = "Star2SpriteItemCount";

		[Token(Token = "0x4001593")]
		public const string Star2SpriteAnimationSpeedKey = "Star2SpriteAnimationSpeed";

		[Token(Token = "0x4001594")]
		public const string Star3SizeKey = "Star3SizeKey";

		[Token(Token = "0x4001595")]
		public const string Star3DensityKey = "Star3DensityKey";

		[Token(Token = "0x4001596")]
		public const string Star3TextureKey = "Star3TextureKey";

		[Token(Token = "0x4001597")]
		public const string Star3ColorKey = "Star3ColorKey";

		[Token(Token = "0x4001598")]
		public const string Star3TwinkleAmountKey = "Star3TwinkleAmountKey";

		[Token(Token = "0x4001599")]
		public const string Star3TwinkleSpeedKey = "Star3TwinkleSpeedKey";

		[Token(Token = "0x400159A")]
		public const string Star3RotationSpeedKey = "Star3RotationSpeed";

		[Token(Token = "0x400159B")]
		public const string Star3EdgeFeatheringKey = "Star3EdgeFeathering";

		[Token(Token = "0x400159C")]
		public const string Star3ColorIntensityKey = "Star3ColorIntensityKey";

		[Token(Token = "0x400159D")]
		public const string Star3SpriteRowCountKey = "Star3SpriteRowCountKey";

		[Token(Token = "0x400159E")]
		public const string Star3SpriteColumnCountKey = "Star3SpriteColumnCountKey";

		[Token(Token = "0x400159F")]
		public const string Star3SpriteItemCountKey = "Star3SpriteItemCount";

		[Token(Token = "0x40015A0")]
		public const string Star3SpriteAnimationSpeedKey = "Star3SpriteAnimationSpeed";

		[Token(Token = "0x40015A1")]
		public const string CloudNoiseTextureKey = "CloudNoiseTextureKey";

		[Token(Token = "0x40015A2")]
		public const string CloudDensityKey = "CloudDensityKey";

		[Token(Token = "0x40015A3")]
		public const string CloudSpeedKey = "CloudSpeedKey";

		[Token(Token = "0x40015A4")]
		public const string CloudDirectionKey = "CloudDirectionKey";

		[Token(Token = "0x40015A5")]
		public const string CloudHeightKey = "CloudHeightKey";

		[Token(Token = "0x40015A6")]
		public const string CloudColor1Key = "CloudColor1Key";

		[Token(Token = "0x40015A7")]
		public const string CloudColor2Key = "CloudColor2Key";

		[Token(Token = "0x40015A8")]
		public const string CloudFadePositionKey = "CloudFadePositionKey";

		[Token(Token = "0x40015A9")]
		public const string CloudFadeAmountKey = "CloudFadeAmountKey";

		[Token(Token = "0x40015AA")]
		public const string CloudTextureTiling = "CloudTextureTiling";

		[Token(Token = "0x40015AB")]
		public const string CloudCubemapNormalTextureKey = "CloudCubemapNormalTextureKey";

		[Token(Token = "0x40015AC")]
		public const string CloudCubemapNormalLitColorKey = "CloudCubemapNormalLitColorKey";

		[Token(Token = "0x40015AD")]
		public const string CloudCubemapNormalShadowKey = "CloudCubemapNormalShadowColorKey";

		[Token(Token = "0x40015AE")]
		public const string CloudCubemapNormalRotationSpeedKey = "CloudCubemapNormalRotationSpeedKey";

		[Token(Token = "0x40015AF")]
		public const string CloudCubemapNormalAmbientIntensity = "CloudCubemapNormalAmbientIntensityKey";

		[Token(Token = "0x40015B0")]
		public const string CloudCubemapNormalHeightKey = "CloudCubemapNormalHeightKey";

		[Token(Token = "0x40015B1")]
		public const string CloudCubemapNormalDoubleLayerRotationSpeedKey = "CloudCubemapNormalDoubleLayerRotationSpeedKey";

		[Token(Token = "0x40015B2")]
		public const string CloudCubemapNormalDoubleLayerHeightKey = "CloudCubemapNormalDoubleLayerHeightKey";

		[Token(Token = "0x40015B3")]
		public const string CloudCubemapNormalDoubleLayerCustomTextureKey = "CloudCubemapNormalDoubleLayerCustomTextureKey";

		[Token(Token = "0x40015B4")]
		public const string CloudCubemapNormalDoubleLayerLitColorKey = "CloudCubemapNormalDoubleLayerLitColorKey";

		[Token(Token = "0x40015B5")]
		public const string CloudCubemapNormalDoubleLayerShadowKey = "CloudCubemapNormalDoubleLayerShadowKey";

		[Token(Token = "0x40015B6")]
		public const string CloudCubemapTextureKey = "CloudCubemapTextureKey";

		[Token(Token = "0x40015B7")]
		public const string CloudCubemapRotationSpeedKey = "CloudCubemapRotationSpeedKey";

		[Token(Token = "0x40015B8")]
		public const string CloudCubemapTintColorKey = "CloudCubemapTintColorKey";

		[Token(Token = "0x40015B9")]
		public const string CloudCubemapHeightKey = "CloudCubemapHeightKey";

		[Token(Token = "0x40015BA")]
		public const string CloudCubemapDoubleLayerRotationSpeedKey = "CloudCubemapDoubleLayerRotationSpeedKey";

		[Token(Token = "0x40015BB")]
		public const string CloudCubemapDoubleLayerHeightKey = "CloudCubemapDoubleLayerHeightKey";

		[Token(Token = "0x40015BC")]
		public const string CloudCubemapDoubleLayerCustomTextureKey = "CloudCubemapDoubleLayerCustomTextureKey";

		[Token(Token = "0x40015BD")]
		public const string CloudCubemapDoubleLayerTintColorKey = "CloudCubemapDoubleLayerTintColorKey";

		[Token(Token = "0x40015BE")]
		public const string FogDensityKey = "FogDensityKey";

		[Token(Token = "0x40015BF")]
		public const string FogColorKey = "FogColorKey";

		[Token(Token = "0x40015C0")]
		public const string FogLengthKey = "FogLengthKey";

		[Token(Token = "0x40015C1")]
		public const string FogSyncWithGlobal = "FogSyncWithGlobal";

		[Token(Token = "0x40015C2")]
		public const string RainNearIntensityKey = "RainNearIntensityKey";

		[Token(Token = "0x40015C3")]
		public const string RainFarIntensityKey = "RainFarIntensityKey";

		[Token(Token = "0x40015C4")]
		public const string RainNearSpeedKey = "RainNearSpeedKey";

		[Token(Token = "0x40015C5")]
		public const string RainFarSpeedKey = "RainFarSpeedKey";

		[Token(Token = "0x40015C6")]
		public const string RainSoundVolumeKey = "RainSoundVolume";

		[Token(Token = "0x40015C7")]
		public const string RainSoundKey = "RainSoundKey";

		[Token(Token = "0x40015C8")]
		public const string RainTintColorKey = "RainTintColorKey";

		[Token(Token = "0x40015C9")]
		public const string RainWindTurbulence = "RainWindTurbulenceKey";

		[Token(Token = "0x40015CA")]
		public const string RainWindTurbulenceSpeed = "RainWindTurbulenceSpeedKey";

		[Token(Token = "0x40015CB")]
		public const string RainNearTextureKey = "RainNearTextureKey";

		[Token(Token = "0x40015CC")]
		public const string RainFarTextureKey = "RainFarTextureKey";

		[Token(Token = "0x40015CD")]
		public const string RainNearTextureTiling = "RainNearTextureTiling";

		[Token(Token = "0x40015CE")]
		public const string RainFarTextureTiling = "RainFarTextureTiling";

		[Token(Token = "0x40015CF")]
		public const string RainSplashMaxConcurrentKey = "RainSplashMaxConcurrentKey";

		[Token(Token = "0x40015D0")]
		public const string RainSplashAreaStartKey = "RainSplashAreaStartKey";

		[Token(Token = "0x40015D1")]
		public const string RainSplashAreaLengthKey = "RainSplashAreaLengthKey";

		[Token(Token = "0x40015D2")]
		public const string RainSplashScaleKey = "RainSplashScaleKey";

		[Token(Token = "0x40015D3")]
		public const string RainSplashScaleVarienceKey = "RainSplashScaleVarienceKey";

		[Token(Token = "0x40015D4")]
		public const string RainSplashIntensityKey = "RainSplashIntensityKey";

		[Token(Token = "0x40015D5")]
		public const string RainSplashSurfaceOffsetKey = "RainSplashSurfaceOffsetKey";

		[Token(Token = "0x40015D6")]
		public const string RainSplashTintColorKey = "RainSplashTintColorKey";

		[Token(Token = "0x40015D7")]
		public const string LightningProbabilityKey = "LightningProbabilityKey";

		[Token(Token = "0x40015D8")]
		public const string LightningStrikeCoolDown = "LightningStrikeCoolDown";

		[Token(Token = "0x40015D9")]
		public const string LightningIntensityKey = "LightningIntensityKey";

		[Token(Token = "0x40015DA")]
		public const string LightningTintColorKey = "LightningTintColorKey";

		[Token(Token = "0x40015DB")]
		public const string ThunderSoundVolumeKey = "ThunderSoundVolumeKey";

		[Token(Token = "0x40015DC")]
		public const string ThunderSoundDelayKey = "ThunderSoundDelayKey";

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1C4D1FC", Offset = "0x1C4D1FC", VA = "0x1C4D1FC")]
		public static HashSet<string> GetPropertyKeysSet()
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1C4D378", Offset = "0x1C4D378", VA = "0x1C4D378")]
		protected ProfilePropertyKeys()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public abstract class ProfileSectionKeys
	{
		[Token(Token = "0x40015DD")]
		public const string FeaturesSectionKey = "FeaturesSectionKey";

		[Token(Token = "0x40015DE")]
		public const string SkySectionKey = "SkySectionKey";

		[Token(Token = "0x40015DF")]
		public const string SunSectionKey = "SunSectionKey";

		[Token(Token = "0x40015E0")]
		public const string MoonSectionKey = "MoonSectionKey";

		[Token(Token = "0x40015E1")]
		public const string CloudSectionKey = "CloudSectionKey";

		[Token(Token = "0x40015E2")]
		public const string FogSectionKey = "FogSectionKey";

		[Token(Token = "0x40015E3")]
		public const string StarsBasicSectionKey = "StarsBasicSectionKey";

		[Token(Token = "0x40015E4")]
		public const string Star1SectionKey = "Star1SectionKey";

		[Token(Token = "0x40015E5")]
		public const string Star2SectionKey = "Star2SectionKey";

		[Token(Token = "0x40015E6")]
		public const string Star3SectionKey = "Star3SectionKey";

		[Token(Token = "0x40015E7")]
		public const string RainSectionKey = "RainSectionKey";

		[Token(Token = "0x40015E8")]
		public const string RainSplashSectionKey = "RainSplashSectionKey";

		[Token(Token = "0x40015E9")]
		public const string LightningSectionKey = "LightningSectionKey";

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x1C4D380", Offset = "0x1C4D380", VA = "0x1C4D380")]
		protected ProfileSectionKeys()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public abstract class ShaderKeywords
	{
		[Token(Token = "0x40015EA")]
		public const string Gradient = "GRADIENT_BACKGROUND";

		[Token(Token = "0x40015EB")]
		public const string VertexGradient = "VERTEX_GRADIENT_BACKGROUND";

		[Token(Token = "0x40015EC")]
		public const string Moon = "MOON";

		[Token(Token = "0x40015ED")]
		public const string MoonCustomTexture = "MOON_CUSTOM_TEXTURE";

		[Token(Token = "0x40015EE")]
		public const string MoonSpriteSheet = "MOON_SPRITE_SHEET";

		[Token(Token = "0x40015EF")]
		public const string MoonAlphaBlend = "MOON_ALPHA_BLEND";

		[Token(Token = "0x40015F0")]
		public const string MoonRotation = "MOON_ROTATION";

		[Token(Token = "0x40015F1")]
		public const string Sun = "SUN";

		[Token(Token = "0x40015F2")]
		public const string SunCustomTexture = "SUN_CUSTOM_TEXTURE";

		[Token(Token = "0x40015F3")]
		public const string SunSpriteSheet = "SUN_SPRITE_SHEET";

		[Token(Token = "0x40015F4")]
		public const string SunAlphaBlend = "SUN_ALPHA_BLEND";

		[Token(Token = "0x40015F5")]
		public const string SunRotation = "SUN_ROTATION";

		[Token(Token = "0x40015F6")]
		public const string Clouds = "CLOUDS";

		[Token(Token = "0x40015F7")]
		public const string NoiseClouds = "NOISE_CLOUDS";

		[Token(Token = "0x40015F8")]
		public const string CubemapClouds = "CUBEMAP_CLOUDS";

		[Token(Token = "0x40015F9")]
		public const string CubemapNormalClouds = "CUBEMAP_NORMAL_CLOUDS";

		[Token(Token = "0x40015FA")]
		public const string CubemapCloudTextureFormatRGB = "CUBEMAP_CLOUD_FORMAT_RGB";

		[Token(Token = "0x40015FB")]
		public const string CubemapCloudTextureFormatRGBA = "CUBEMAP_CLOUD_FORMAT_RGBA";

		[Token(Token = "0x40015FC")]
		public const string CubemapCloudDoubleLayer = "CUBEMAP_CLOUD_DOUBLE_LAYER";

		[Token(Token = "0x40015FD")]
		public const string CubemapNormalCloudDoubleLayer = "CUBEMAP_NORMAL_CLOUD_DOUBLE_LAYER";

		[Token(Token = "0x40015FE")]
		public const string CubemapCloudDoubleLayerCustomTexture = "CUBEMAP_CLOUD_DOUBLE_LAYER_CUSTOM_TEXTURE";

		[Token(Token = "0x40015FF")]
		public const string CubemapNormalCloudDoubleLayerCustomTexture = "CUBEMAP_NORMAL_CLOUD_DOUBLE_LAYER_CUSTOM_TEXTURE";

		[Token(Token = "0x4001600")]
		public const string Fog = "HORIZON_FOG";

		[Token(Token = "0x4001601")]
		public const string StarsBasic = "STARS_BASIC";

		[Token(Token = "0x4001602")]
		public const string StarLayer1 = "STAR_LAYER_1";

		[Token(Token = "0x4001603")]
		public const string StarLayer2 = "STAR_LAYER_2";

		[Token(Token = "0x4001604")]
		public const string StarLayer3 = "STAR_LAYER_3";

		[Token(Token = "0x4001605")]
		public const string StarLayer1CustomTexture = "STAR_LAYER_1_CUSTOM_TEXTURE";

		[Token(Token = "0x4001606")]
		public const string StarLayer2CustomTexture = "STAR_LAYER_2_CUSTOM_TEXTURE";

		[Token(Token = "0x4001607")]
		public const string StarLayer3CustomTexture = "STAR_LAYER_3_CUSTOM_TEXTURE";

		[Token(Token = "0x4001608")]
		public const string StarLayer1SpriteSheet = "STAR_LAYER_1_SPRITE_SHEET";

		[Token(Token = "0x4001609")]
		public const string StarLayer2SpriteSheet = "STAR_LAYER_2_SPRITE_SHEET";

		[Token(Token = "0x400160A")]
		public const string StarLayer3SpriteSheet = "STAR_LAYER_3_SPRITE_SHEET";

		[Token(Token = "0x400160B")]
		public const string RenderDebugPoints = "RENDER_DEBUG_POINTS";

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1C4F1F4", Offset = "0x1C4F1F4", VA = "0x1C4F1F4")]
		protected ShaderKeywords()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	public class BoolDictionary : SerializableDictionary<string, bool>
	{
		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1C4829C", Offset = "0x1C4829C", VA = "0x1C4829C")]
		public BoolDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class BoolGroupDictionary : SerializableDictionary<string, BoolKeyframeGroup>
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1C482EC", Offset = "0x1C482EC", VA = "0x1C482EC")]
		public BoolGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	public class ColorGroupDictionary : SerializableDictionary<string, ColorKeyframeGroup>
	{
		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1C48600", Offset = "0x1C48600", VA = "0x1C48600")]
		public ColorGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C4")]
	public class NumberGroupDictionary : SerializableDictionary<string, NumberKeyframeGroup>
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1C498C0", Offset = "0x1C498C0", VA = "0x1C498C0")]
		public NumberGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public class SpherePointGroupDictionary : SerializableDictionary<string, SpherePointKeyframeGroup>
	{
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1C49910", Offset = "0x1C49910", VA = "0x1C49910")]
		public SpherePointGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public class TextureGroupDictionary : SerializableDictionary<string, TextureKeyframeGroup>
	{
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x145A6FC", Offset = "0x145A6FC", VA = "0x145A6FC")]
		public TextureGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public abstract class BaseShaderDefinition : IProfileDefinition
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF32698", Offset = "0xF32698")]
		private string <shaderName>k__BackingField;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProfileGroupSection[] m_ProfileDefinitions;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ProfileFeatureSection[] m_ProfileFeatures;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, ProfileFeatureDefinition> m_KeyToFeature;

		[Token(Token = "0x17000234")]
		public string shaderName
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x1C46DFC", Offset = "0x1C46DFC", VA = "0x1C46DFC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B460", Offset = "0xF3B460")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x1C46E04", Offset = "0x1C46E04", VA = "0x1C46E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B470", Offset = "0xF3B470")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public ProfileGroupSection[] groups
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x1C46E0C", Offset = "0x1C46E0C", VA = "0x1C46E0C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public ProfileFeatureSection[] features
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x1C46E44", Offset = "0x1C46E44", VA = "0x1C46E44", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1C46E7C", Offset = "0x1C46E7C", VA = "0x1C46E7C", Slot = "7")]
		public ProfileFeatureDefinition GetFeatureDefinition(string featureKey)
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		protected abstract ProfileFeatureSection[] ProfileFeatureSection();

		[Token(Token = "0x600156D")]
		protected abstract ProfileGroupSection[] ProfileDefinitionTable();

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1C4708C", Offset = "0x1C4708C", VA = "0x1C4708C")]
		protected BaseShaderDefinition()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public interface IProfileDefinition
	{
		[Token(Token = "0x17000237")]
		string shaderName
		{
			[Token(Token = "0x600156F")]
			get;
		}

		[Token(Token = "0x17000238")]
		ProfileFeatureSection[] features
		{
			[Token(Token = "0x6001570")]
			get;
		}

		[Token(Token = "0x17000239")]
		ProfileGroupSection[] groups
		{
			[Token(Token = "0x6001571")]
			get;
		}

		[Token(Token = "0x6001572")]
		ProfileFeatureDefinition GetFeatureDefinition(string featureKey);
	}
	[Token(Token = "0x20003C9")]
	public class Standard3dShaderDefinition : BaseShaderDefinition
	{
		[Token(Token = "0x4001610")]
		public const float MaxStarSize = 0.2f;

		[Token(Token = "0x4001611")]
		public const float MaxStarDensity = 1f;

		[Token(Token = "0x4001612")]
		public const float MinEdgeFeathering = 0.0001f;

		[Token(Token = "0x4001613")]
		public const float MinStarFadeBegin = -0.999f;

		[Token(Token = "0x4001614")]
		public const float MaxSpriteItems = 100000f;

		[Token(Token = "0x4001615")]
		public const float MinRotationSpeed = -10f;

		[Token(Token = "0x4001616")]
		public const float MaxRotationSpeed = 10f;

		[Token(Token = "0x4001617")]
		public const float MaxCloudRotationSpeed = 0.5f;

		[Token(Token = "0x4001618")]
		public const float MaxHDRValue = 25f;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1C53F2C", Offset = "0x1C53F2C", VA = "0x1C53F2C")]
		public Standard3dShaderDefinition()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1C56060", Offset = "0x1C56060", VA = "0x1C56060", Slot = "8")]
		protected override ProfileFeatureSection[] ProfileFeatureSection()
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x1C576F8", Offset = "0x1C576F8", VA = "0x1C576F8", Slot = "9")]
		protected override ProfileGroupSection[] ProfileDefinitionTable()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2BEDC", Offset = "0xF2BEDC")]
	public class SkyProfile : ScriptableObject
	{
		[Token(Token = "0x4001619")]
		public const string DefaultShaderName = "Funly/Sky Studio/Skybox/3D Standard";

		[Token(Token = "0x400161A")]
		public const string DefaultLegacyShaderName = "Funly/Sky Studio/Skybox/3D Standard - Global Keywords";

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_SkyboxMaterial;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_ShaderName;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IProfileDefinition profileDefinition;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> timelineManagedKeys;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyframeGroupDictionary keyframeGroups;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BoolDictionary featureStatus;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LightningArtSet lightningArtSet;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RainSplashArtSet rainSplashArtSet;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D starLayer1DataTexture;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D starLayer2DataTexture;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D starLayer3DataTexture;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int m_ProfileVersion;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, ProfileGroupDefinition> m_KeyToGroupInfo;

		[Token(Token = "0x1700023A")]
		public Material skyboxMaterial
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x1C532A0", Offset = "0x1C532A0", VA = "0x1C532A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x1C532A8", Offset = "0x1C532A8", VA = "0x1C532A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public string shaderName
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x1C53404", Offset = "0x1C53404", VA = "0x1C53404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public ProfileGroupSection[] groupDefinitions
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x1C5340C", Offset = "0x1C5340C", VA = "0x1C5340C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public ProfileFeatureSection[] featureDefinitions
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x1C534CC", Offset = "0x1C534CC", VA = "0x1C534CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1C5358C", Offset = "0x1C5358C", VA = "0x1C5358C")]
		public float GetNumberPropertyValue(string propertyKey)
		{
			return default(float);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1C4AD14", Offset = "0x1C4AD14", VA = "0x1C4AD14")]
		public float GetNumberPropertyValue(string propertyKey, float timeOfDay)
		{
			return default(float);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1C53594", Offset = "0x1C53594", VA = "0x1C53594")]
		public Color GetColorPropertyValue(string propertyKey)
		{
			return default(Color);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1C4ADF0", Offset = "0x1C4ADF0", VA = "0x1C4ADF0")]
		public Color GetColorPropertyValue(string propertyKey, float timeOfDay)
		{
			return default(Color);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1C5359C", Offset = "0x1C5359C", VA = "0x1C5359C")]
		public Texture GetTexturePropertyValue(string propertyKey)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1C4DCE8", Offset = "0x1C4DCE8", VA = "0x1C4DCE8")]
		public Texture GetTexturePropertyValue(string propertyKey, float timeOfDay)
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1C535A4", Offset = "0x1C535A4", VA = "0x1C535A4")]
		public SpherePoint GetSpherePointPropertyValue(string propertyKey)
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1C535AC", Offset = "0x1C535AC", VA = "0x1C535AC")]
		public SpherePoint GetSpherePointPropertyValue(string propertyKey, float timeOfDay)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1C53920", Offset = "0x1C53920", VA = "0x1C53920")]
		public bool GetBoolPropertyValue(string propertyKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1C53928", Offset = "0x1C53928", VA = "0x1C53928")]
		public bool GetBoolPropertyValue(string propertyKey, float timeOfDay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1C53A04", Offset = "0x1C53A04", VA = "0x1C53A04")]
		public SkyProfile()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1C53B0C", Offset = "0x1C53B0C", VA = "0x1C53B0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1C53ACC", Offset = "0x1C53ACC", VA = "0x1C53ACC")]
		private void ReloadFullProfile()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1C533E0", Offset = "0x1C533E0", VA = "0x1C533E0")]
		private void ReloadDefinitions()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1C53ED4", Offset = "0x1C53ED4", VA = "0x1C53ED4")]
		private IProfileDefinition GetShaderInfoForMaterial(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1C53B10", Offset = "0x1C53B10", VA = "0x1C53B10")]
		public void MergeProfileWithDefinitions()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1C53F88", Offset = "0x1C53F88", VA = "0x1C53F88")]
		public void MergeGroupsWithDefinitions()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1C5491C", Offset = "0x1C5491C", VA = "0x1C5491C")]
		public Dictionary<string, ProfileGroupDefinition> GroupDefinitionDictionary()
		{
			return null;
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1C54A44", Offset = "0x1C54A44", VA = "0x1C54A44")]
		public ProfileGroupSection[] ProfileDefinitionTable()
		{
			return null;
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1C54630", Offset = "0x1C54630", VA = "0x1C54630")]
		private void AddNumericGroup(string propKey, string groupName, float min, float max, float value)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1C54558", Offset = "0x1C54558", VA = "0x1C54558")]
		private void AddColorGroup(string propKey, string groupName, Color color)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1C54700", Offset = "0x1C54700", VA = "0x1C54700")]
		private void AddTextureGroup(string propKey, string groupName, Texture2D texture)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1C547B8", Offset = "0x1C547B8", VA = "0x1C547B8")]
		private void AddSpherePointGroup(string propKey, string groupName, SpherePoint point)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1C54868", Offset = "0x1C54868", VA = "0x1C54868")]
		private void AddBooleanGroup(string propKey, string groupName, bool value)
		{
		}

		[Token(Token = "0x6001593")]
		public T GetGroup<T>(string propertyKey) where T : class
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1C54B88", Offset = "0x1C54B88", VA = "0x1C54B88")]
		public IKeyframeGroup GetGroup(string propertyKey)
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1C54BA0", Offset = "0x1C54BA0", VA = "0x1C54BA0")]
		public IKeyframeGroup GetGroupWithId(string groupId)
		{
			return null;
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1C54E98", Offset = "0x1C54E98", VA = "0x1C54E98")]
		public ProfileGroupSection[] GetProfileDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1C54E9C", Offset = "0x1C54E9C", VA = "0x1C54E9C")]
		public ProfileGroupSection GetSectionInfo(string sectionKey)
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x1C54F2C", Offset = "0x1C54F2C", VA = "0x1C54F2C")]
		public bool IsManagedByTimeline(string propertyKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x1C53C58", Offset = "0x1C53C58", VA = "0x1C53C58")]
		public void ValidateTimelineGroupKeys()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1C54F94", Offset = "0x1C54F94", VA = "0x1C54F94")]
		public List<ProfileGroupDefinition> GetGroupDefinitionsManagedByTimeline()
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1C5515C", Offset = "0x1C5515C", VA = "0x1C5515C")]
		public List<ProfileGroupDefinition> GetGroupDefinitionsNotManagedByTimeline()
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x1C550DC", Offset = "0x1C550DC", VA = "0x1C550DC")]
		public ProfileGroupDefinition GetGroupDefinitionForKey(string propertyKey)
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1C53B34", Offset = "0x1C53B34", VA = "0x1C53B34")]
		public void RebuildKeyToGroupInfoMapping()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1C5536C", Offset = "0x1C5536C", VA = "0x1C5536C")]
		public void TrimGroupToSingleKeyframe(string propertyKey)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1C552A4", Offset = "0x1C552A4", VA = "0x1C552A4")]
		public bool CanGroupBeOnTimeline(ProfileGroupDefinition definition)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x1C5437C", Offset = "0x1C5437C", VA = "0x1C5437C")]
		protected void MergeShaderKeywordsWithDefinitions()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1C49D24", Offset = "0x1C49D24", VA = "0x1C49D24")]
		public bool IsFeatureEnabled(string featureKey, bool recursive = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x1C5544C", Offset = "0x1C5544C", VA = "0x1C5544C")]
		public void SetFeatureEnabled(string featureKey, bool value)
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class SkyMaterialController
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Material _skyboxMaterial;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _skyMiddleColor;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _horizonColor;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32728", Offset = "0xF32728")]
		private float _gradientFadeBegin;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32768", Offset = "0xF32768")]
		private float _gradientFadeLength;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF327A8", Offset = "0xF327A8")]
		private float _skyMiddlePosition;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Cubemap _backgroundCubemap;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF327F8", Offset = "0xF327F8")]
		private float _starFadeBegin;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32838", Offset = "0xF32838")]
		private float _starFadeLength;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32878", Offset = "0xF32878")]
		private float _horizonDistanceScale;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Texture _starBasicCubemap;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _starBasicTwinkleSpeed;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _starBasicTwinkleAmount;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _starBasicOpacity;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color _starBasicTintColor;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float _starBasicExponent;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _starBasicIntensity;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture _starLayer1Texture;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Texture2D _starLayer1DataTexture;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Color _starLayer1Color;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32958", Offset = "0xF32958")]
		private float _starLayer1MaxRadius;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3299C", Offset = "0xF3299C")]
		private float _starLayer1TwinkleAmount;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF329DC", Offset = "0xF329DC")]
		private float _starLayer1TwinkleSpeed;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32A1C", Offset = "0xF32A1C")]
		private float _starLayer1RotationSpeed;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32A5C", Offset = "0xF32A5C")]
		private float _starLayer1EdgeFeathering;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32AA4", Offset = "0xF32AA4")]
		private float _starLayer1BloomFilterBoost;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Vector4 _starLayer1SpriteDimensions;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int _starLayer1SpriteItemCount;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32B04", Offset = "0xF32B04")]
		private float _starLayer1SpriteAnimationSpeed;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Texture _starLayer2Texture;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Texture2D _starLayer2DataTexture;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color _starLayer2Color;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32B74", Offset = "0xF32B74")]
		private float _starLayer2MaxRadius;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32BB8", Offset = "0xF32BB8")]
		private float _starLayer2TwinkleAmount;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32BF8", Offset = "0xF32BF8")]
		private float _starLayer2TwinkleSpeed;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32C38", Offset = "0xF32C38")]
		private float _starLayer2RotationSpeed;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32C78", Offset = "0xF32C78")]
		private float _starLayer2EdgeFeathering;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32CC0", Offset = "0xF32CC0")]
		private float _starLayer2BloomFilterBoost;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Vector4 _starLayer2SpriteDimensions;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private int _starLayer2SpriteItemCount;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32D20", Offset = "0xF32D20")]
		private float _starLayer2SpriteAnimationSpeed;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Texture _starLayer3Texture;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Texture2D _starLayer3DataTexture;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Color _starLayer3Color;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32D90", Offset = "0xF32D90")]
		private float _starLayer3MaxRadius;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32DD4", Offset = "0xF32DD4")]
		private float _starLayer3TwinkleAmount;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32E14", Offset = "0xF32E14")]
		private float _starLayer3TwinkleSpeed;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32E54", Offset = "0xF32E54")]
		private float _starLayer3RotationSpeed;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32E94", Offset = "0xF32E94")]
		private float _starLayer3EdgeFeathering;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32EDC", Offset = "0xF32EDC")]
		private float _starLayer3BloomFilterBoost;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Vector4 _starLayer3SpriteDimensions;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private int _starLayer3SpriteItemCount;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32F3C", Offset = "0xF32F3C")]
		private float _starLayer3SpriteAnimationSpeed;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Texture _moonTexture;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private float _moonRotationSpeed;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private Color _moonColor;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private Vector3 _moonDirection;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Matrix4x4 _moonWorldToLocalMatrix;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF32FCC", Offset = "0xF32FCC")]
		private float _moonSize;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3300C", Offset = "0xF3300C")]
		private float _moonEdgeFeathering;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33054", Offset = "0xF33054")]
		private float _moonBloomFilterBoost;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private Vector4 _moonSpriteDimensions;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private int _moonSpriteItemCount;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF330B4", Offset = "0xF330B4")]
		private float _moonSpriteAnimationSpeed;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Texture _sunTexture;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Color _sunColor;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private float _sunRotationSpeed;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		private Vector3 _sunDirection;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Matrix4x4 _sunWorldToLocalMatrix;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33144", Offset = "0xF33144")]
		private float _sunSize;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33184", Offset = "0xF33184")]
		private float _sunEdgeFeathering;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF331CC", Offset = "0xF331CC")]
		private float _sunBloomFilterBoost;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		private Vector4 _sunSpriteDimensions;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		private int _sunSpriteItemCount;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3322C", Offset = "0xF3322C")]
		private float _sunSpriteAnimationSpeed;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF3326C", Offset = "0xF3326C")]
		private float _cloudBegin;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private float _cloudTextureTiling;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[SerializeField]
		private Color _cloudColor;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private Texture _cloudTexture;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private Texture _artCloudCustomTexture;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		private float _cloudDensity;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private float _cloudSpeed;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private float _cloudDirection;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[SerializeField]
		private float _cloudHeight;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		private Color _cloudColor1;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private Color _cloudColor2;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private float _cloudFadePosition;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		[SerializeField]
		private float _cloudFadeAmount;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private Texture _cloudCubemap;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float _cloudCubemapRotationSpeed;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Texture _cloudCubemapDoubleLayerCustomTexture;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private float _cloudCubemapDoubleLayerRotationSpeed;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[SerializeField]
		private float _cloudCubemapDoubleLayerHeight;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Color _cloudCubemapDoubleLayerTintColor;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private Color _cloudCubemapTintColor;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private float _cloudCubemapHeight;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Texture _cloudCubemapNormalTexture;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private Color _cloudCubemapNormalLitColor;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private Color _cloudCubemapNormalShadowColor;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private float _cloudCubemapNormalRotationSpeed;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		[SerializeField]
		private float _cloudCubemapNormalHeight;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private float _cloudCubemapNormalAmbientItensity;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[SerializeField]
		private Texture _cloudCubemapNormalDoubleLayerCustomTexture;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private float _cloudCubemapNormalDoubleLayerRotationSpeed;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		[SerializeField]
		private float _cloudCubemapNormalDoubleLayerHeight;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private Color _cloudCubemapNormalDoubleLayerLitColor;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[SerializeField]
		private Color _cloudCubemapNormalDoubleLayerShadowColor;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private Vector3 _cloudCubemapNormalLightDirection;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[SerializeField]
		private Color _fogColor;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[SerializeField]
		private float _fogDensity;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[SerializeField]
		private float _fogHeight;

		[Token(Token = "0x1700023E")]
		public Material SkyboxMaterial
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x1C4F1FC", Offset = "0x1C4F1FC", VA = "0x1C4F1FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1C4F204", Offset = "0x1C4F204", VA = "0x1C4F204")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public Color SkyColor
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x1C4F214", Offset = "0x1C4F214", VA = "0x1C4F214")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x1C4F220", Offset = "0x1C4F220", VA = "0x1C4F220")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public Color SkyMiddleColor
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1C4F2B4", Offset = "0x1C4F2B4", VA = "0x1C4F2B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1C4F2C0", Offset = "0x1C4F2C0", VA = "0x1C4F2C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public Color HorizonColor
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x1C4F354", Offset = "0x1C4F354", VA = "0x1C4F354")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1C4F360", Offset = "0x1C4F360", VA = "0x1C4F360")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float GradientFadeBegin
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1C4F3F4", Offset = "0x1C4F3F4", VA = "0x1C4F3F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x1C4F3FC", Offset = "0x1C4F3FC", VA = "0x1C4F3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float GradientFadeLength
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x1C4F4C8", Offset = "0x1C4F4C8", VA = "0x1C4F4C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1C4F4D0", Offset = "0x1C4F4D0", VA = "0x1C4F4D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public float SkyMiddlePosition
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1C4F4D8", Offset = "0x1C4F4D8", VA = "0x1C4F4D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1C4F4E0", Offset = "0x1C4F4E0", VA = "0x1C4F4E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public Cubemap BackgroundCubemap
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x1C4F550", Offset = "0x1C4F550", VA = "0x1C4F550")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1C4F558", Offset = "0x1C4F558", VA = "0x1C4F558")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float StarFadeBegin
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1C4F5C8", Offset = "0x1C4F5C8", VA = "0x1C4F5C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x1C4F5D0", Offset = "0x1C4F5D0", VA = "0x1C4F5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public float StarFadeLength
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x1C4F69C", Offset = "0x1C4F69C", VA = "0x1C4F69C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1C4F6A4", Offset = "0x1C4F6A4", VA = "0x1C4F6A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public float HorizonDistanceScale
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1C4F6AC", Offset = "0x1C4F6AC", VA = "0x1C4F6AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1C4F6B4", Offset = "0x1C4F6B4", VA = "0x1C4F6B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Texture StarBasicCubemap
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x1C4F724", Offset = "0x1C4F724", VA = "0x1C4F724")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x1C4F72C", Offset = "0x1C4F72C", VA = "0x1C4F72C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float StarBasicTwinkleSpeed
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x1C4F79C", Offset = "0x1C4F79C", VA = "0x1C4F79C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x1C4F7A4", Offset = "0x1C4F7A4", VA = "0x1C4F7A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float StarBasicTwinkleAmount
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x1C4F814", Offset = "0x1C4F814", VA = "0x1C4F814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x1C4F81C", Offset = "0x1C4F81C", VA = "0x1C4F81C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float StarBasicOpacity
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x1C4F88C", Offset = "0x1C4F88C", VA = "0x1C4F88C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x1C4F894", Offset = "0x1C4F894", VA = "0x1C4F894")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public Color StarBasicTintColor
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x1C4F904", Offset = "0x1C4F904", VA = "0x1C4F904")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x1C4F910", Offset = "0x1C4F910", VA = "0x1C4F910")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float StarBasicExponent
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x1C4F9A4", Offset = "0x1C4F9A4", VA = "0x1C4F9A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x1C4F9AC", Offset = "0x1C4F9AC", VA = "0x1C4F9AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float StarBasicIntensity
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x1C4FA1C", Offset = "0x1C4FA1C", VA = "0x1C4FA1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x1C4FA24", Offset = "0x1C4FA24", VA = "0x1C4FA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public Texture StarLayer1Texture
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x1C4FA94", Offset = "0x1C4FA94", VA = "0x1C4FA94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x1C4FA9C", Offset = "0x1C4FA9C", VA = "0x1C4FA9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public Texture2D StarLayer1DataTexture
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1C4FB0C", Offset = "0x1C4FB0C", VA = "0x1C4FB0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x1C4FB14", Offset = "0x1C4FB14", VA = "0x1C4FB14")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Color StarLayer1Color
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x1C4FB84", Offset = "0x1C4FB84", VA = "0x1C4FB84")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1C4FB90", Offset = "0x1C4FB90", VA = "0x1C4FB90")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float StarLayer1MaxRadius
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1C4FC24", Offset = "0x1C4FC24", VA = "0x1C4FC24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x1C4FC2C", Offset = "0x1C4FC2C", VA = "0x1C4FC2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public float StarLayer1TwinkleAmount
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x1C4FC9C", Offset = "0x1C4FC9C", VA = "0x1C4FC9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x1C4FCA4", Offset = "0x1C4FCA4", VA = "0x1C4FCA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float StarLayer1TwinkleSpeed
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x1C4FD14", Offset = "0x1C4FD14", VA = "0x1C4FD14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x1C4FD1C", Offset = "0x1C4FD1C", VA = "0x1C4FD1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public float StarLayer1RotationSpeed
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x1C4FD8C", Offset = "0x1C4FD8C", VA = "0x1C4FD8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x1C4FD94", Offset = "0x1C4FD94", VA = "0x1C4FD94")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public float StarLayer1EdgeFeathering
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x1C4FE04", Offset = "0x1C4FE04", VA = "0x1C4FE04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x1C4FE0C", Offset = "0x1C4FE0C", VA = "0x1C4FE0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public float StarLayer1BloomFilterBoost
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x1C4FE7C", Offset = "0x1C4FE7C", VA = "0x1C4FE7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x1C4FE84", Offset = "0x1C4FE84", VA = "0x1C4FE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public int StarLayer1SpriteItemCount
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x1C4FFA0", Offset = "0x1C4FFA0", VA = "0x1C4FFA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x1C4FFA8", Offset = "0x1C4FFA8", VA = "0x1C4FFA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public float StarLayer1SpriteAnimationSpeed
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0x1C50018", Offset = "0x1C50018", VA = "0x1C50018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x1C50020", Offset = "0x1C50020", VA = "0x1C50020")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Texture StarLayer2Texture
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x1C50090", Offset = "0x1C50090", VA = "0x1C50090")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x1C50098", Offset = "0x1C50098", VA = "0x1C50098")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Texture2D StarLayer2DataTexture
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x1C50108", Offset = "0x1C50108", VA = "0x1C50108")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x1C50110", Offset = "0x1C50110", VA = "0x1C50110")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Color StarLayer2Color
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x1C50180", Offset = "0x1C50180", VA = "0x1C50180")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x1C50194", Offset = "0x1C50194", VA = "0x1C50194")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public float StarLayer2MaxRadius
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x1C50230", Offset = "0x1C50230", VA = "0x1C50230")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x1C50238", Offset = "0x1C50238", VA = "0x1C50238")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public float StarLayer2TwinkleAmount
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x1C502A8", Offset = "0x1C502A8", VA = "0x1C502A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x1C502B0", Offset = "0x1C502B0", VA = "0x1C502B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public float StarLayer2TwinkleSpeed
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x1C50320", Offset = "0x1C50320", VA = "0x1C50320")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x1C50328", Offset = "0x1C50328", VA = "0x1C50328")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public float StarLayer2RotationSpeed
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x1C50398", Offset = "0x1C50398", VA = "0x1C50398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x1C503A0", Offset = "0x1C503A0", VA = "0x1C503A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float StarLayer2EdgeFeathering
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0x1C50410", Offset = "0x1C50410", VA = "0x1C50410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0x1C50418", Offset = "0x1C50418", VA = "0x1C50418")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public float StarLayer2BloomFilterBoost
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x1C50488", Offset = "0x1C50488", VA = "0x1C50488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0x1C50490", Offset = "0x1C50490", VA = "0x1C50490")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public int StarLayer2SpriteItemCount
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x1C505B8", Offset = "0x1C505B8", VA = "0x1C505B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x1C505C0", Offset = "0x1C505C0", VA = "0x1C505C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float StarLayer2SpriteAnimationSpeed
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x1C50630", Offset = "0x1C50630", VA = "0x1C50630")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x1C50638", Offset = "0x1C50638", VA = "0x1C50638")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public Texture StarLayer3Texture
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x1C506A8", Offset = "0x1C506A8", VA = "0x1C506A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x1C506B0", Offset = "0x1C506B0", VA = "0x1C506B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public Texture2D StarLayer3DataTexture
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x1C50720", Offset = "0x1C50720", VA = "0x1C50720")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x1C50728", Offset = "0x1C50728", VA = "0x1C50728")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public Color StarLayer3Color
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x1C50798", Offset = "0x1C50798", VA = "0x1C50798")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x1C507AC", Offset = "0x1C507AC", VA = "0x1C507AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public float StarLayer3MaxRadius
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x1C50848", Offset = "0x1C50848", VA = "0x1C50848")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x1C50850", Offset = "0x1C50850", VA = "0x1C50850")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float StarLayer3TwinkleAmount
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x1C508C0", Offset = "0x1C508C0", VA = "0x1C508C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x1C508C8", Offset = "0x1C508C8", VA = "0x1C508C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float StarLayer3TwinkleSpeed
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0x1C50938", Offset = "0x1C50938", VA = "0x1C50938")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x1C50940", Offset = "0x1C50940", VA = "0x1C50940")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public float StarLayer3RotationSpeed
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x1C509B0", Offset = "0x1C509B0", VA = "0x1C509B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x1C509B8", Offset = "0x1C509B8", VA = "0x1C509B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public float StarLayer3EdgeFeathering
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x1C50A28", Offset = "0x1C50A28", VA = "0x1C50A28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x1C50A30", Offset = "0x1C50A30", VA = "0x1C50A30")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public float StarLayer3BloomFilterBoost
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x1C50AA0", Offset = "0x1C50AA0", VA = "0x1C50AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x1C50AA8", Offset = "0x1C50AA8", VA = "0x1C50AA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public int StarLayer3SpriteItemCount
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x1C50BD0", Offset = "0x1C50BD0", VA = "0x1C50BD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1C50BD8", Offset = "0x1C50BD8", VA = "0x1C50BD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public float StarLayer3SpriteAnimationSpeed
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x1C50C48", Offset = "0x1C50C48", VA = "0x1C50C48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x1C50C50", Offset = "0x1C50C50", VA = "0x1C50C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public Texture MoonTexture
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x1C50CC0", Offset = "0x1C50CC0", VA = "0x1C50CC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1C50CC8", Offset = "0x1C50CC8", VA = "0x1C50CC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float MoonRotationSpeed
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x1C50D38", Offset = "0x1C50D38", VA = "0x1C50D38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1C50D40", Offset = "0x1C50D40", VA = "0x1C50D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public Color MoonColor
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x1C50DB0", Offset = "0x1C50DB0", VA = "0x1C50DB0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x1C50DC4", Offset = "0x1C50DC4", VA = "0x1C50DC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public Vector3 MoonDirection
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x1C50E60", Offset = "0x1C50E60", VA = "0x1C50E60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001616")]
			[Address(RVA = "0x1C50E70", Offset = "0x1C50E70", VA = "0x1C50E70")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Matrix4x4 MoonWorldToLocalMatrix
		{
			[Token(Token = "0x6001617")]
			[Address(RVA = "0x1C50F4C", Offset = "0x1C50F4C", VA = "0x1C50F4C")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x6001618")]
			[Address(RVA = "0x1C50F78", Offset = "0x1C50F78", VA = "0x1C50F78")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public float MoonSize
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x1C51040", Offset = "0x1C51040", VA = "0x1C51040")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161A")]
			[Address(RVA = "0x1C51048", Offset = "0x1C51048", VA = "0x1C51048")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float MoonEdgeFeathering
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x1C510B8", Offset = "0x1C510B8", VA = "0x1C510B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x1C510C0", Offset = "0x1C510C0", VA = "0x1C510C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public float MoonBloomFilterBoost
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x1C51130", Offset = "0x1C51130", VA = "0x1C51130")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x1C51138", Offset = "0x1C51138", VA = "0x1C51138")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public int MoonSpriteItemCount
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x1C51260", Offset = "0x1C51260", VA = "0x1C51260")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0x1C51268", Offset = "0x1C51268", VA = "0x1C51268")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public float MoonSpriteAnimationSpeed
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x1C512D8", Offset = "0x1C512D8", VA = "0x1C512D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x1C512E0", Offset = "0x1C512E0", VA = "0x1C512E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public Texture SunTexture
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x1C51350", Offset = "0x1C51350", VA = "0x1C51350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x1C51358", Offset = "0x1C51358", VA = "0x1C51358")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public Color SunColor
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x1C513C8", Offset = "0x1C513C8", VA = "0x1C513C8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x1C513DC", Offset = "0x1C513DC", VA = "0x1C513DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public float SunRotationSpeed
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0x1C51478", Offset = "0x1C51478", VA = "0x1C51478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x1C51480", Offset = "0x1C51480", VA = "0x1C51480")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Vector3 SunDirection
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x1C514F0", Offset = "0x1C514F0", VA = "0x1C514F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0x1C51500", Offset = "0x1C51500", VA = "0x1C51500")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public Matrix4x4 SunWorldToLocalMatrix
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x1C515DC", Offset = "0x1C515DC", VA = "0x1C515DC")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0x1C51608", Offset = "0x1C51608", VA = "0x1C51608")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public float SunSize
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0x1C516D0", Offset = "0x1C516D0", VA = "0x1C516D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x1C516D8", Offset = "0x1C516D8", VA = "0x1C516D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public float SunEdgeFeathering
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0x1C51748", Offset = "0x1C51748", VA = "0x1C51748")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x1C51750", Offset = "0x1C51750", VA = "0x1C51750")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public float SunBloomFilterBoost
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0x1C517C0", Offset = "0x1C517C0", VA = "0x1C517C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x1C517C8", Offset = "0x1C517C8", VA = "0x1C517C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public int SunSpriteItemCount
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x1C518F0", Offset = "0x1C518F0", VA = "0x1C518F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x1C518F8", Offset = "0x1C518F8", VA = "0x1C518F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public float SunSpriteAnimationSpeed
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0x1C51968", Offset = "0x1C51968", VA = "0x1C51968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163A")]
			[Address(RVA = "0x1C51970", Offset = "0x1C51970", VA = "0x1C51970")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public float CloudBegin
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x1C519E0", Offset = "0x1C519E0", VA = "0x1C519E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x1C519E8", Offset = "0x1C519E8", VA = "0x1C519E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public float CloudTextureTiling
		{
			[Token(Token = "0x600163D")]
			[Address(RVA = "0x1C51A58", Offset = "0x1C51A58", VA = "0x1C51A58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x1C51A60", Offset = "0x1C51A60", VA = "0x1C51A60")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public Color CloudColor
		{
			[Token(Token = "0x600163F")]
			[Address(RVA = "0x1C51AD0", Offset = "0x1C51AD0", VA = "0x1C51AD0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001640")]
			[Address(RVA = "0x1C51AE4", Offset = "0x1C51AE4", VA = "0x1C51AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public Texture CloudTexture
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0x1C51B80", Offset = "0x1C51B80", VA = "0x1C51B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001642")]
			[Address(RVA = "0x1C51C08", Offset = "0x1C51C08", VA = "0x1C51C08")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public Texture ArtCloudCustomTexture
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x1C51C78", Offset = "0x1C51C78", VA = "0x1C51C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x1C51D00", Offset = "0x1C51D00", VA = "0x1C51D00")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public float CloudDensity
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x1C51D70", Offset = "0x1C51D70", VA = "0x1C51D70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001646")]
			[Address(RVA = "0x1C51D78", Offset = "0x1C51D78", VA = "0x1C51D78")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public float CloudSpeed
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x1C51DE8", Offset = "0x1C51DE8", VA = "0x1C51DE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x1C51DF0", Offset = "0x1C51DF0", VA = "0x1C51DF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public float CloudDirection
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x1C51E60", Offset = "0x1C51E60", VA = "0x1C51E60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x1C51E68", Offset = "0x1C51E68", VA = "0x1C51E68")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public float CloudHeight
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x1C51ED8", Offset = "0x1C51ED8", VA = "0x1C51ED8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x1C51EE0", Offset = "0x1C51EE0", VA = "0x1C51EE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public Color CloudColor1
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x1C51F50", Offset = "0x1C51F50", VA = "0x1C51F50")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600164E")]
			[Address(RVA = "0x1C51F64", Offset = "0x1C51F64", VA = "0x1C51F64")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public Color CloudColor2
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x1C52000", Offset = "0x1C52000", VA = "0x1C52000")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001650")]
			[Address(RVA = "0x1C52014", Offset = "0x1C52014", VA = "0x1C52014")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public float CloudFadePosition
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x1C520B0", Offset = "0x1C520B0", VA = "0x1C520B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x1C520B8", Offset = "0x1C520B8", VA = "0x1C520B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public float CloudFadeAmount
		{
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x1C52128", Offset = "0x1C52128", VA = "0x1C52128")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x1C52130", Offset = "0x1C52130", VA = "0x1C52130")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public Texture CloudCubemap
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0x1C521A0", Offset = "0x1C521A0", VA = "0x1C521A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001656")]
			[Address(RVA = "0x1C521A8", Offset = "0x1C521A8", VA = "0x1C521A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public float CloudCubemapRotationSpeed
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x1C52218", Offset = "0x1C52218", VA = "0x1C52218")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x1C52220", Offset = "0x1C52220", VA = "0x1C52220")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public Texture CloudCubemapDoubleLayerCustomTexture
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x1C52290", Offset = "0x1C52290", VA = "0x1C52290")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x1C52298", Offset = "0x1C52298", VA = "0x1C52298")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public float CloudCubemapDoubleLayerRotationSpeed
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x1C52308", Offset = "0x1C52308", VA = "0x1C52308")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x1C52310", Offset = "0x1C52310", VA = "0x1C52310")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public float CloudCubemapDoubleLayerHeight
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x1C52380", Offset = "0x1C52380", VA = "0x1C52380")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x1C52388", Offset = "0x1C52388", VA = "0x1C52388")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public Color CloudCubemapDoubleLayerTintColor
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x1C523F8", Offset = "0x1C523F8", VA = "0x1C523F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x1C5240C", Offset = "0x1C5240C", VA = "0x1C5240C")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public Color CloudCubemapTintColor
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x1C524A8", Offset = "0x1C524A8", VA = "0x1C524A8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x1C524BC", Offset = "0x1C524BC", VA = "0x1C524BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public float CloudCubemapHeight
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x1C52558", Offset = "0x1C52558", VA = "0x1C52558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x1C52560", Offset = "0x1C52560", VA = "0x1C52560")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public Texture CloudCubemapNormalTexture
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x1C525D0", Offset = "0x1C525D0", VA = "0x1C525D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x1C525D8", Offset = "0x1C525D8", VA = "0x1C525D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public Color CloudCubemapNormalLitColor
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x1C52648", Offset = "0x1C52648", VA = "0x1C52648")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x1C5265C", Offset = "0x1C5265C", VA = "0x1C5265C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public Color CloudCubemapNormalShadowColor
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x1C526F8", Offset = "0x1C526F8", VA = "0x1C526F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x1C5270C", Offset = "0x1C5270C", VA = "0x1C5270C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public float CloudCubemapNormalRotationSpeed
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x1C527A8", Offset = "0x1C527A8", VA = "0x1C527A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x1C527B0", Offset = "0x1C527B0", VA = "0x1C527B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public float CloudCubemapNormalHeight
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x1C52820", Offset = "0x1C52820", VA = "0x1C52820")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x1C52828", Offset = "0x1C52828", VA = "0x1C52828")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float CloudCubemapNormalAmbientIntensity
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x1C52898", Offset = "0x1C52898", VA = "0x1C52898")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x1C528A0", Offset = "0x1C528A0", VA = "0x1C528A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public Texture CloudCubemapNormalDoubleLayerCustomTexture
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x1C52910", Offset = "0x1C52910", VA = "0x1C52910")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x1C52918", Offset = "0x1C52918", VA = "0x1C52918")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public float CloudCubemapNormalDoubleLayerRotationSpeed
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x1C52988", Offset = "0x1C52988", VA = "0x1C52988")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x1C52990", Offset = "0x1C52990", VA = "0x1C52990")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public float CloudCubemapNormalDoubleLayerHeight
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x1C52A00", Offset = "0x1C52A00", VA = "0x1C52A00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x1C52A08", Offset = "0x1C52A08", VA = "0x1C52A08")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public Color CloudCubemapNormalDoubleLayerLitColor
		{
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x1C52A78", Offset = "0x1C52A78", VA = "0x1C52A78")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001678")]
			[Address(RVA = "0x1C52A8C", Offset = "0x1C52A8C", VA = "0x1C52A8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public Color CloudCubemapNormalDoubleLayerShadowColor
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0x1C52B28", Offset = "0x1C52B28", VA = "0x1C52B28")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600167A")]
			[Address(RVA = "0x1C52B3C", Offset = "0x1C52B3C", VA = "0x1C52B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public Vector3 CloudCubemapNormalLightDirection
		{
			[Token(Token = "0x600167B")]
			[Address(RVA = "0x1C52BD8", Offset = "0x1C52BD8", VA = "0x1C52BD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x1C52BE8", Offset = "0x1C52BE8", VA = "0x1C52BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public Color FogColor
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0x1C52CA4", Offset = "0x1C52CA4", VA = "0x1C52CA4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x1C52CB8", Offset = "0x1C52CB8", VA = "0x1C52CB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public float FogDensity
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x1C52D54", Offset = "0x1C52D54", VA = "0x1C52D54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x1C52D5C", Offset = "0x1C52D5C", VA = "0x1C52D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public float FogHeight
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0x1C52DCC", Offset = "0x1C52DCC", VA = "0x1C52DCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x1C52DD4", Offset = "0x1C52DD4", VA = "0x1C52DD4")]
			set
			{
			}
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1C4FEF4", Offset = "0x1C4FEF4", VA = "0x1C4FEF4")]
		public void SetStarLayer1SpriteDimensions(int columns, int rows)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1C4FF70", Offset = "0x1C4FF70", VA = "0x1C4FF70")]
		public Vector2 GetStarLayer1SpriteDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1C50500", Offset = "0x1C50500", VA = "0x1C50500")]
		public void SetStarLayer2SpriteDimensions(int columns, int rows)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1C50584", Offset = "0x1C50584", VA = "0x1C50584")]
		public Vector2 GetStarLayer2SpriteDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1C50B18", Offset = "0x1C50B18", VA = "0x1C50B18")]
		public void SetStarLayer3SpriteDimensions(int columns, int rows)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1C50B9C", Offset = "0x1C50B9C", VA = "0x1C50B9C")]
		public Vector2 GetStarLayer3SpriteDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x1C511A8", Offset = "0x1C511A8", VA = "0x1C511A8")]
		public void SetMoonSpriteDimensions(int columns, int rows)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x1C5122C", Offset = "0x1C5122C", VA = "0x1C5122C")]
		public Vector2 GetMoonSpriteDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1C51838", Offset = "0x1C51838", VA = "0x1C51838")]
		public void SetSunSpriteDimensions(int columns, int rows)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1C518BC", Offset = "0x1C518BC", VA = "0x1C518BC")]
		public Vector2 GetSunSpriteDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1C4F404", Offset = "0x1C4F404", VA = "0x1C4F404")]
		private void ApplyGradientValuesOnMaterial()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1C4F5D8", Offset = "0x1C4F5D8", VA = "0x1C4F5D8")]
		private void ApplyStarFadeValuesOnMaterial()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1C52E44", Offset = "0x1C52E44", VA = "0x1C52E44")]
		public SkyMaterialController()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[ExecuteInEditMode]
	public class TimeOfDayController : MonoBehaviour
	{
		[Token(Token = "0x20003CD")]
		public delegate void TimeOfDayDidChange(TimeOfDayController tc, float timeOfDay);

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF334CC", Offset = "0xF334CC")]
		private static TimeOfDayController <instance>k__BackingField;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF334DC", Offset = "0xF334DC")]
		[SerializeField]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33528", Offset = "0xF33528")]
		[SerializeField]
		private float m_SkyTime;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33574", Offset = "0xF33574")]
		public bool automaticTimeIncrement;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF335AC", Offset = "0xF335AC")]
		public bool copySkyProfile;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkyMaterialController m_SkyMaterialController;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF335E4", Offset = "0xF335E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF335E4", Offset = "0xF335E4")]
		public float automaticIncrementSpeed;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33638", Offset = "0xF33638")]
		public OrbitingBody sunOrbit;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33670", Offset = "0xF33670")]
		public OrbitingBody moonOrbit;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF336A8", Offset = "0xF336A8")]
		public WeatherController weatherController;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF336E0", Offset = "0xF336E0")]
		public bool updateGlobalIllumination;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_DidInitialUpdate;

		[Token(Token = "0x170002A9")]
		public static TimeOfDayController instance
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x145A93C", Offset = "0x145A93C", VA = "0x145A93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B480", Offset = "0xF3B480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x145A98C", Offset = "0x145A98C", VA = "0x145A98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B490", Offset = "0xF3B490")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public SkyProfile skyProfile
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x145A9E0", Offset = "0x145A9E0", VA = "0x145A9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x145A9E8", Offset = "0x145A9E8", VA = "0x145A9E8")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public float skyTime
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x145DB78", Offset = "0x145DB78", VA = "0x145DB78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x145DB80", Offset = "0x145DB80", VA = "0x145DB80")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public SkyMaterialController SkyMaterial
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x145DBF8", Offset = "0x145DBF8", VA = "0x145DBF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		public float timeOfDay
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x145DD48", Offset = "0x145DD48", VA = "0x145DD48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AE")]
		public int daysElapsed
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x145DD74", Offset = "0x145DD74", VA = "0x145DD74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000016")]
		public event TimeOfDayDidChange timeChangedCallback
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x145DC00", Offset = "0x145DC00", VA = "0x145DC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4A0", Offset = "0xF3B4A0")]
			add
			{
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x145DCA4", Offset = "0x145DCA4", VA = "0x145DCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4B0", Offset = "0xF3B4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x145DD98", Offset = "0x145DD98", VA = "0x145DD98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x145DDEC", Offset = "0x145DDEC", VA = "0x145DDEC")]
		private void OnEnabled()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x145DDF4", Offset = "0x145DDF4", VA = "0x145DDF4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x145DE4C", Offset = "0x145DE4C", VA = "0x145DE4C")]
		private void WarnInvalidSkySetup()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x145DEB8", Offset = "0x145DEB8", VA = "0x145DEB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x145E698", Offset = "0x145E698", VA = "0x145E698")]
		public void UpdateGlobalIllumination()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x145D96C", Offset = "0x145D96C", VA = "0x145D96C")]
		private void SynchronizeAllShaderKeywords()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x145E6A0", Offset = "0x145E6A0", VA = "0x145E6A0")]
		private void SynchronizedShaderKeyword(string featureKey, string shaderKeyword)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x145E808", Offset = "0x145E808", VA = "0x145E808")]
		private Vector3 GetPrimaryLightDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x145AAB8", Offset = "0x145AAB8", VA = "0x145AAB8")]
		public void UpdateSkyForCurrentTime()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x145ED60", Offset = "0x145ED60", VA = "0x145ED60")]
		public TimeOfDayController()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public abstract class ColorHelper
	{
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1C48650", Offset = "0x1C48650", VA = "0x1C48650")]
		public static Color ColorWithHex(uint hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1C48660", Offset = "0x1C48660", VA = "0x1C48660")]
		public static Color ColorWithHexAlpha(uint hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1C486D8", Offset = "0x1C486D8", VA = "0x1C486D8")]
		protected ColorHelper()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[ExecuteInEditMode]
	public class FollowCamera : MonoBehaviour
	{
		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera followCamera;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1C48A38", Offset = "0x1C48A38", VA = "0x1C48A38")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x1C48B4C", Offset = "0x1C48B4C", VA = "0x1C48B4C")]
		public FollowCamera()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class HelpInformation : MonoBehaviour
	{
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1C48BC4", Offset = "0x1C48BC4", VA = "0x1C48BC4")]
		public HelpInformation()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public interface ISkyModule
	{
		[Token(Token = "0x60016A6")]
		void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay);
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BF4C", Offset = "0xF2BF4C")]
	public class LoadOverheadDepthTexture : MonoBehaviour
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WeatherDepthCamera m_RainCamera;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RawImage m_Image;

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1C4B4A4", Offset = "0x1C4B4A4", VA = "0x1C4B4A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1C4B530", Offset = "0x1C4B530", VA = "0x1C4B530")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1C4B55C", Offset = "0x1C4B55C", VA = "0x1C4B55C")]
		public LoadOverheadDepthTexture()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2BFB0", Offset = "0xF2BFB0")]
	public class RenderCloudCubemap : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		public enum CubemapTextureFormat
		{
			[Token(Token = "0x40016AF")]
			RGBColor,
			[Token(Token = "0x40016B0")]
			RGBAColor,
			[Token(Token = "0x40016B1")]
			RGBALit
		}

		[Token(Token = "0x40016A9")]
		public const string kDefaultFilenamePrefix = "CloudCubemap";

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33728", Offset = "0xF33728")]
		public string filenamePrefix;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33760", Offset = "0xF33760")]
		public int faceWidth;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33798", Offset = "0xF33798")]
		public CubemapTextureFormat textureFormat;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool exportFaces;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1C4F020", Offset = "0x1C4F020", VA = "0x1C4F020")]
		public RenderCloudCubemap()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xF2C014", Offset = "0xF2C014")]
	public class KeyframeGroupDictionary : ISerializationCallbackReceiver, IEnumerable<string>, IEnumerable
	{
		[NonSerialized]
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, IKeyframeGroup> m_Groups;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ColorGroupDictionary m_ColorGroup;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NumberGroupDictionary m_NumberGroup;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextureGroupDictionary m_TextureGroup;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpherePointGroupDictionary m_SpherePointGroup;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolGroupDictionary m_BoolGroup;

		[Token(Token = "0x170002AF")]
		public IKeyframeGroup Item
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x1C48BCC", Offset = "0x1C48BCC", VA = "0x1C48BCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x1C48C34", Offset = "0x1C48C34", VA = "0x1C48C34")]
			set
			{
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1C48CA4", Offset = "0x1C48CA4", VA = "0x1C48CA4")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1C48D0C", Offset = "0x1C48D0C", VA = "0x1C48D0C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016AF")]
		public T GetGroup<T>(string propertyName) where T : class
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1C48D64", Offset = "0x1C48D64", VA = "0x1C48D64", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x1C490EC", Offset = "0x1C490EC", VA = "0x1C490EC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x1C4971C", Offset = "0x1C4971C", VA = "0x1C4971C", Slot = "6")]
		public IEnumerator<string> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1C497BC", Offset = "0x1C497BC", VA = "0x1C497BC", Slot = "7")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x1C497C0", Offset = "0x1C497C0", VA = "0x1C497C0")]
		public KeyframeGroupDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xF2C04C", Offset = "0xF2C04C")]
	public class SerializableDictionary<K, V> : ISerializationCallbackReceiver
	{
		[NonSerialized]
		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<K, V> dict;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public List<K> m_Keys;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public List<V> m_Values;

		[Token(Token = "0x170002B0")]
		public V Item
		{
			[Token(Token = "0x60016B6")]
			get
			{
				return (V)null;
			}
			[Token(Token = "0x60016B7")]
			set
			{
			}
		}

		[Token(Token = "0x60016B5")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016B8")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60016B9")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60016BA")]
		public SerializableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	public class SpherePoint
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float horizontalRotation;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float verticalRotation;

		[Token(Token = "0x40016BD")]
		public const float MinHorizontalRotation = -(float)Math.PI;

		[Token(Token = "0x40016BE")]
		public const float MaxHorizontalRotation = (float)Math.PI;

		[Token(Token = "0x40016BF")]
		public const float MinVerticalRotation = -(float)Math.PI / 2f;

		[Token(Token = "0x40016C0")]
		public const float MaxVerticalRotation = (float)Math.PI / 2f;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1C4C690", Offset = "0x1C4C690", VA = "0x1C4C690")]
		public SpherePoint(float horizontalRotation, float verticalRotation)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1C55500", Offset = "0x1C55500", VA = "0x1C55500")]
		public SpherePoint(Vector3 worldDirection)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x1C55664", Offset = "0x1C55664", VA = "0x1C55664")]
		public void SetFromWorldDirection(Vector3 worldDirection)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1C4C6C8", Offset = "0x1C4C6C8", VA = "0x1C4C6C8")]
		public Vector3 GetWorldDirection()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003D8")]
	public abstract class SphereUtility
	{
		[Token(Token = "0x40016C1")]
		private const float k_HalfPI = (float)Math.PI / 2f;

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1C55554", Offset = "0x1C55554", VA = "0x1C55554")]
		public static Vector2 DirectionToSphericalCoordinate(Vector3 direction)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1C55688", Offset = "0x1C55688", VA = "0x1C55688")]
		public static Vector3 SphericalCoordinateToDirection(Vector2 coord)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1C558E8", Offset = "0x1C558E8", VA = "0x1C558E8")]
		public static float RadiusAtHeight(float yPos)
		{
			return default(float);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1C55960", Offset = "0x1C55960", VA = "0x1C55960")]
		public static Vector3 SphericalToPoint(float yPosition, float radAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1C55A28", Offset = "0x1C55A28", VA = "0x1C55A28")]
		public static float RadAngleToPercent(float radAngle)
		{
			return default(float);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1C55A38", Offset = "0x1C55A38", VA = "0x1C55A38")]
		public static float PercentToRadAngle(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1C55A48", Offset = "0x1C55A48", VA = "0x1C55A48")]
		public static float HeightToPercent(float yValue)
		{
			return default(float);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1C55A58", Offset = "0x1C55A58", VA = "0x1C55A58")]
		public static float PercentToHeight(float hPercent)
		{
			return default(float);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x1C55AD0", Offset = "0x1C55AD0", VA = "0x1C55AD0")]
		public static float AngleToReachTarget(Vector2 point, float targetAngle)
		{
			return default(float);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x1C55858", Offset = "0x1C55858", VA = "0x1C55858")]
		public static float Atan2Positive(float y, float x)
		{
			return default(float);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1C55B0C", Offset = "0x1C55B0C", VA = "0x1C55B0C")]
		public static Vector3 RotateAroundXAxis(Vector3 point, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1C55C60", Offset = "0x1C55C60", VA = "0x1C55C60")]
		public static Vector3 RotateAroundYAxis(Vector3 point, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x1C55CCC", Offset = "0x1C55CCC", VA = "0x1C55CCC")]
		public static Vector3 RotatePoint(Vector3 point, float xAxisRotation, float yAxisRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1C55B78", Offset = "0x1C55B78", VA = "0x1C55B78")]
		public static Vector2 Rotate2d(Vector2 pos, float angle)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1C55CF4", Offset = "0x1C55CF4", VA = "0x1C55CF4")]
		public static Vector2 Matrix2x2Mult(Vector4 matrix, Vector2 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x1C55E00", Offset = "0x1C55E00", VA = "0x1C55E00")]
		public static void CalculateStarRotation(Vector3 star, out float xRotationAngle, out float yRotationAngle)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1C55F48", Offset = "0x1C55F48", VA = "0x1C55F48")]
		public static Vector2 ConvertUVToSphericalCoordinate(Vector2 uv)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1C56008", Offset = "0x1C56008", VA = "0x1C56008")]
		public static Vector2 ConvertSphericalCoordateToUV(Vector2 sphereCoord)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x1C56058", Offset = "0x1C56058", VA = "0x1C56058")]
		protected SphereUtility()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class SpriteSheetData
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int columns;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int rows;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frameCount;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int frameRate;

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1C481A4", Offset = "0x1C481A4", VA = "0x1C481A4")]
		public SpriteSheetData()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public abstract class BaseSpriteInstancedRenderer : MonoBehaviour
	{
		[Token(Token = "0x40016C6")]
		public const int kArrayMaxSprites = 1000;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33840", Offset = "0xF33840")]
		private int <maxSprites>k__BackingField;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33850", Offset = "0xF33850")]
		public Mesh modelMesh;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33888", Offset = "0xF33888")]
		public Material renderMaterial;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Queue<BaseSpriteItemData> m_Available;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected HashSet<BaseSpriteItemData> m_Active;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock m_PropertyBlock;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Matrix4x4[] m_ModelMatrices;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] m_StartTimes;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] m_EndTimes;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SpriteSheetData m_SpriteSheetLayout;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Texture m_SpriteTexture;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Color m_TintColor;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF338C0", Offset = "0xF338C0")]
		private Camera <m_ViewerCamera>k__BackingField;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Mesh m_DefaltModelMesh;

		[Token(Token = "0x170002B1")]
		public int maxSprites
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x1C47094", Offset = "0x1C47094", VA = "0x1C47094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4C0", Offset = "0xF3B4C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x1C4709C", Offset = "0x1C4709C", VA = "0x1C4709C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4D0", Offset = "0xF3B4D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		protected Camera m_ViewerCamera
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1C470A4", Offset = "0x1C470A4", VA = "0x1C470A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4E0", Offset = "0xF3B4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1C470AC", Offset = "0x1C470AC", VA = "0x1C470AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B4F0", Offset = "0xF3B4F0")]
			set
			{
			}
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x1C470B4", Offset = "0x1C470B4", VA = "0x1C470B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D8")]
		protected abstract Bounds CalculateMeshBounds();

		[Token(Token = "0x60016D9")]
		protected abstract BaseSpriteItemData CreateSpriteItemData();

		[Token(Token = "0x60016DA")]
		protected abstract bool IsRenderingEnabled();

		[Token(Token = "0x60016DB")]
		protected abstract int GetNextSpawnCount();

		[Token(Token = "0x60016DC")]
		protected abstract void CalculateSpriteTRS(BaseSpriteItemData data, out Vector3 spritePosition, out Quaternion spriteRotation, out Vector3 spriteScale);

		[Token(Token = "0x60016DD")]
		protected abstract void ConfigureSpriteItemData(BaseSpriteItemData data);

		[Token(Token = "0x60016DE")]
		protected abstract void PrepareDataArraysForRendering(int instanceId, BaseSpriteItemData data);

		[Token(Token = "0x60016DF")]
		protected abstract void PopulatePropertyBlockForRendering(ref MaterialPropertyBlock propertyBlock);

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1C47158", Offset = "0x1C47158", VA = "0x1C47158")]
		private BaseSpriteItemData DequeueNextSpriteItemData()
		{
			return null;
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x1C471F4", Offset = "0x1C471F4", VA = "0x1C471F4")]
		private void ReturnSpriteItemData(BaseSpriteItemData splash)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1C472A0", Offset = "0x1C472A0", VA = "0x1C472A0", Slot = "12")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1C472FC", Offset = "0x1C472FC", VA = "0x1C472FC")]
		private void GenerateNewSprites()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1C473E4", Offset = "0x1C473E4", VA = "0x1C473E4")]
		private void AdvanceAllSprites()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1C47550", Offset = "0x1C47550", VA = "0x1C47550")]
		private void RenderAllSprites()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1C47C28", Offset = "0x1C47C28", VA = "0x1C47C28")]
		protected Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1C47CF8", Offset = "0x1C47CF8", VA = "0x1C47CF8", Slot = "13")]
		protected virtual Mesh GenerateMesh()
		{
			return null;
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1C4809C", Offset = "0x1C4809C", VA = "0x1C4809C")]
		protected BaseSpriteInstancedRenderer()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class BaseSpriteItemData
	{
		[Token(Token = "0x20003DC")]
		public enum SpriteState
		{
			[Token(Token = "0x40016DD")]
			Unknown,
			[Token(Token = "0x40016DE")]
			NotStarted,
			[Token(Token = "0x40016DF")]
			Animating,
			[Token(Token = "0x40016E0")]
			Complete
		}

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteSheetData spriteSheetData;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF338D0", Offset = "0xF338D0")]
		private Matrix4x4 <modelMatrix>k__BackingField;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF338E0", Offset = "0xF338E0")]
		private SpriteState <state>k__BackingField;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF338F0", Offset = "0xF338F0")]
		private Vector3 <spritePosition>k__BackingField;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33900", Offset = "0xF33900")]
		private float <startTime>k__BackingField;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33910", Offset = "0xF33910")]
		private float <endTime>k__BackingField;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float delay;

		[Token(Token = "0x170002B3")]
		public Matrix4x4 modelMatrix
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x1C481AC", Offset = "0x1C481AC", VA = "0x1C481AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B500", Offset = "0xF3B500")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x1C481C8", Offset = "0x1C481C8", VA = "0x1C481C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B510", Offset = "0xF3B510")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public SpriteState state
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x1C481E4", Offset = "0x1C481E4", VA = "0x1C481E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B520", Offset = "0xF3B520")]
			get
			{
				return default(SpriteState);
			}
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1C481EC", Offset = "0x1C481EC", VA = "0x1C481EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B530", Offset = "0xF3B530")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public Vector3 spritePosition
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x1C481F4", Offset = "0x1C481F4", VA = "0x1C481F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B540", Offset = "0xF3B540")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x1C48200", Offset = "0x1C48200", VA = "0x1C48200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B550", Offset = "0xF3B550")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float startTime
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x1C4820C", Offset = "0x1C4820C", VA = "0x1C4820C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B560", Offset = "0xF3B560")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x1C48214", Offset = "0x1C48214", VA = "0x1C48214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B570", Offset = "0xF3B570")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float endTime
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x1C4821C", Offset = "0x1C4821C", VA = "0x1C4821C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B580", Offset = "0xF3B580")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x1C48224", Offset = "0x1C48224", VA = "0x1C48224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B590", Offset = "0xF3B590")]
			protected set
			{
			}
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1C4822C", Offset = "0x1C4822C", VA = "0x1C4822C")]
		public BaseSpriteItemData()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x1C47A74", Offset = "0x1C47A74", VA = "0x1C47A74")]
		public void SetTRSMatrix(Vector3 worldPosition, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x1C47B78", Offset = "0x1C47B78", VA = "0x1C47B78")]
		public void Start()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1C47BE4", Offset = "0x1C47BE4", VA = "0x1C47BE4")]
		public void Continue()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1C4728C", Offset = "0x1C4728C", VA = "0x1C4728C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1C48258", Offset = "0x1C48258", VA = "0x1C48258")]
		public static float CalculateStartTimeWithDelay(float delay)
		{
			return default(float);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1C48280", Offset = "0x1C48280", VA = "0x1C48280")]
		public static float CalculateEndTime(float startTime, int itemCount, int animationSpeed)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003DD")]
	public class LightningController : MonoBehaviour, ISkyModule
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_TimeOfDay;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LightningRenderer> m_LightningRenderers;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1C499BC", Offset = "0x1C499BC", VA = "0x1C499BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1C49B50", Offset = "0x1C49B50", VA = "0x1C49B50", Slot = "4")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1C49B5C", Offset = "0x1C49B5C", VA = "0x1C49B5C")]
		public void Update()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1C49A58", Offset = "0x1C49A58", VA = "0x1C49A58")]
		public void ClearLightningRenderers()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1C49F0C", Offset = "0x1C49F0C", VA = "0x1C49F0C")]
		public void CreateLightningRenderers()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1C4A168", Offset = "0x1C4A168", VA = "0x1C4A168")]
		public LightningController()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C084", Offset = "0xF2C084")]
	public class LightningRenderer : BaseSpriteInstancedRenderer
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LightningSpawnArea> m_SpawnAreas;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_LightningProbability;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_NextSpawnTime;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LightningArtItem m_Style;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_TimeOfDay;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_LightningIntensity;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_ThunderSoundDelay;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_SpawnCoolDown;

		[Token(Token = "0x40016EE")]
		private const float k_ProbabiltyCheckInterval = 0.5f;

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1C4A1D8", Offset = "0x1C4A1D8", VA = "0x1C4A1D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1C4A288", Offset = "0x1C4A288", VA = "0x1C4A288", Slot = "4")]
		protected override Bounds CalculateMeshBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1C4A360", Offset = "0x1C4A360", VA = "0x1C4A360", Slot = "5")]
		protected override BaseSpriteItemData CreateSpriteItemData()
		{
			return null;
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1C4A3C4", Offset = "0x1C4A3C4", VA = "0x1C4A3C4", Slot = "6")]
		protected override bool IsRenderingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x1C4A4A4", Offset = "0x1C4A4A4", VA = "0x1C4A4A4", Slot = "8")]
		protected override void CalculateSpriteTRS(BaseSpriteItemData data, out Vector3 spritePosition, out Quaternion spriteRotation, out Vector3 spriteScale)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x1C4A92C", Offset = "0x1C4A92C", VA = "0x1C4A92C", Slot = "9")]
		protected override void ConfigureSpriteItemData(BaseSpriteItemData data)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1C4A9B4", Offset = "0x1C4A9B4", VA = "0x1C4A9B4", Slot = "10")]
		protected override void PrepareDataArraysForRendering(int instanceId, BaseSpriteItemData data)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1C4A9B8", Offset = "0x1C4A9B8", VA = "0x1C4A9B8", Slot = "11")]
		protected override void PopulatePropertyBlockForRendering(ref MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1C4AA24", Offset = "0x1C4AA24", VA = "0x1C4AA24", Slot = "7")]
		protected override int GetNextSpawnCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1C4A02C", Offset = "0x1C4A02C", VA = "0x1C4A02C")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay, LightningArtItem artItem)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1C4AAA0", Offset = "0x1C4AAA0", VA = "0x1C4AAA0")]
		private void SyncDataFromSkyProfile()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1C4A6EC", Offset = "0x1C4A6EC", VA = "0x1C4A6EC")]
		private LightningSpawnArea GetRandomLightningSpawnArea()
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1C4AECC", Offset = "0x1C4AECC", VA = "0x1C4AECC")]
		private void PlayThunderBoltSound()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1C4AFA4", Offset = "0x1C4AFA4", VA = "0x1C4AFA4")]
		public static void AddSpawnArea(LightningSpawnArea area)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1C4B074", Offset = "0x1C4B074", VA = "0x1C4B074")]
		public static void RemoveSpawnArea(LightningSpawnArea area)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1C4A848", Offset = "0x1C4A848", VA = "0x1C4A848")]
		private Vector3 GetRandomWorldPositionInsideSpawnArea(LightningSpawnArea area)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1C4A80C", Offset = "0x1C4A80C", VA = "0x1C4A80C")]
		private float CalculateLightningBoltScaleForArea(LightningSpawnArea area)
		{
			return default(float);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1C4B144", Offset = "0x1C4B144", VA = "0x1C4B144")]
		public LightningRenderer()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class LightningSpawnArea : MonoBehaviour
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33920", Offset = "0xF33920")]
		public Vector3 lightningArea;

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x1C4B1BC", Offset = "0x1C4B1BC", VA = "0x1C4B1BC")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x1C4B378", Offset = "0x1C4B378", VA = "0x1C4B378")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x1C4B3DC", Offset = "0x1C4B3DC", VA = "0x1C4B3DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1C4B440", Offset = "0x1C4B440", VA = "0x1C4B440")]
		public LightningSpawnArea()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C0E8", Offset = "0xF2C0E8")]
	public class RainDownfallController : MonoBehaviour, ISkyModule
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer rainMeshRenderer;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material rainMaterial;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock m_PropertyBlock;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource m_RainAudioSource;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_TimeOfDay;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x1C4D388", Offset = "0x1C4D388", VA = "0x1C4D388")]
		public void SetWeatherEnclosure(WeatherEnclosure enclosure)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1C4DC58", Offset = "0x1C4DC58", VA = "0x1C4DC58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x1C4D568", Offset = "0x1C4D568", VA = "0x1C4D568", Slot = "4")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1C4DDC8", Offset = "0x1C4DDC8", VA = "0x1C4DDC8")]
		public RainDownfallController()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class RainSplashController : MonoBehaviour, ISkyModule
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_TimeOfDay;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RainSplashRenderer> m_SplashRenderers;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1C4DDE4", Offset = "0x1C4DDE4", VA = "0x1C4DDE4")]
		private void Start()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1C4DF78", Offset = "0x1C4DF78", VA = "0x1C4DF78", Slot = "4")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1C4DF84", Offset = "0x1C4DF84", VA = "0x1C4DF84")]
		private void Update()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1C4DE80", Offset = "0x1C4DE80", VA = "0x1C4DE80")]
		public void ClearSplashRenderers()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1C4E14C", Offset = "0x1C4E14C", VA = "0x1C4E14C")]
		public void CreateSplashRenderers()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1C4E320", Offset = "0x1C4E320", VA = "0x1C4E320")]
		public RainSplashController()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class RainSplashData : BaseSpriteItemData
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector2 depthTextureUV;

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1C4E390", Offset = "0x1C4E390", VA = "0x1C4E390")]
		public RainSplashData()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class RainSplashRenderer : BaseSpriteInstancedRenderer
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Camera m_DepthCamera;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] m_StartSplashYPositions;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] m_DepthUs;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] m_DepthVs;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_SplashAreaStart;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_SplashAreaLength;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_SplashScale;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_SplashScaleVarience;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_SplashItensity;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_SplashSurfaceOffset;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SkyProfile m_SkyProfile;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_TimeOfDay;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RainSplashArtItem m_Style;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Bounds m_Bounds;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1C4E3BC", Offset = "0x1C4E3BC", VA = "0x1C4E3BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1C4E4E4", Offset = "0x1C4E4E4", VA = "0x1C4E4E4", Slot = "4")]
		protected override Bounds CalculateMeshBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1C4E4F8", Offset = "0x1C4E4F8", VA = "0x1C4E4F8", Slot = "5")]
		protected override BaseSpriteItemData CreateSpriteItemData()
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1C4E55C", Offset = "0x1C4E55C", VA = "0x1C4E55C", Slot = "6")]
		protected override bool IsRenderingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1C4E670", Offset = "0x1C4E670", VA = "0x1C4E670", Slot = "7")]
		protected override int GetNextSpawnCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1C4E6CC", Offset = "0x1C4E6CC", VA = "0x1C4E6CC", Slot = "8")]
		protected override void CalculateSpriteTRS(BaseSpriteItemData data, out Vector3 spritePosition, out Quaternion spriteRotation, out Vector3 spriteScale)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1C4E7D0", Offset = "0x1C4E7D0", VA = "0x1C4E7D0", Slot = "9")]
		protected override void ConfigureSpriteItemData(BaseSpriteItemData data)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1C4E9A0", Offset = "0x1C4E9A0", VA = "0x1C4E9A0", Slot = "10")]
		protected override void PrepareDataArraysForRendering(int instanceId, BaseSpriteItemData data)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1C4EB1C", Offset = "0x1C4EB1C", VA = "0x1C4EB1C", Slot = "11")]
		protected override void PopulatePropertyBlockForRendering(ref MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1C4E26C", Offset = "0x1C4E26C", VA = "0x1C4E26C")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay, RainSplashArtItem style)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1C4EC08", Offset = "0x1C4EC08", VA = "0x1C4EC08")]
		private void SyncDataFromSkyProfile()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1C4E814", Offset = "0x1C4E814", VA = "0x1C4E814")]
		private Vector3 CreateWorldSplashPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1C4EEF8", Offset = "0x1C4EEF8", VA = "0x1C4EEF8")]
		public RainSplashRenderer()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C14C", Offset = "0xF2C14C")]
	public class WeatherDepthCamera : MonoBehaviour
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_DepthCamera;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33958", Offset = "0xF33958")]
		public Shader depthShader;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public RenderTexture overheadDepthTexture;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF339A0", Offset = "0xF339A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF339A0", Offset = "0xF339A0")]
		public int renderFrameInterval;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF339F8", Offset = "0xF339F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF339F8", Offset = "0xF339F8")]
		public int textureResolution;

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x145F364", Offset = "0x145F364", VA = "0x145F364")]
		private void Start()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x145F3CC", Offset = "0x145F3CC", VA = "0x145F3CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x145F43C", Offset = "0x145F43C", VA = "0x145F43C")]
		private void RenderOverheadCamera()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x145F640", Offset = "0x145F640", VA = "0x145F640")]
		private void PrepareRenderTexture()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x145F814", Offset = "0x145F814", VA = "0x145F814")]
		public WeatherDepthCamera()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class WeatherController : MonoBehaviour
	{
		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33A54", Offset = "0xF33A54")]
		private RainDownfallController <rainDownfallController>k__BackingField;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33A64", Offset = "0xF33A64")]
		private RainSplashController <rainSplashController>k__BackingField;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33A74", Offset = "0xF33A74")]
		private LightningController <lightningController>k__BackingField;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33A84", Offset = "0xF33A84")]
		private WeatherDepthCamera <weatherDepthCamera>k__BackingField;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WeatherEnclosure m_Enclosure;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer m_EnclosureMeshRenderer;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WeatherEnclosureDetector detector;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SkyProfile m_Profile;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_TimeOfDay;

		[Token(Token = "0x170002B8")]
		public RainDownfallController rainDownfallController
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x145EE2C", Offset = "0x145EE2C", VA = "0x145EE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5A0", Offset = "0xF3B5A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x145EE34", Offset = "0x145EE34", VA = "0x145EE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5B0", Offset = "0xF3B5B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public RainSplashController rainSplashController
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x145EE3C", Offset = "0x145EE3C", VA = "0x145EE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5C0", Offset = "0xF3B5C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x145EE44", Offset = "0x145EE44", VA = "0x145EE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5D0", Offset = "0xF3B5D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public LightningController lightningController
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x145EE4C", Offset = "0x145EE4C", VA = "0x145EE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5E0", Offset = "0xF3B5E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x145EE54", Offset = "0x145EE54", VA = "0x145EE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B5F0", Offset = "0xF3B5F0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public WeatherDepthCamera weatherDepthCamera
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x145EE5C", Offset = "0x145EE5C", VA = "0x145EE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B600", Offset = "0xF3B600")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x145EE64", Offset = "0x145EE64", VA = "0x145EE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B610", Offset = "0xF3B610")]
			protected set
			{
			}
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x145EE6C", Offset = "0x145EE6C", VA = "0x145EE6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x145EF28", Offset = "0x145EF28", VA = "0x145EF28")]
		private void Start()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x145EF2C", Offset = "0x145EF2C", VA = "0x145EF2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x145EE70", Offset = "0x145EE70", VA = "0x145EE70")]
		private void DiscoverWeatherControllers()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x145F070", Offset = "0x145F070", VA = "0x145F070")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x145E4B4", Offset = "0x145E4B4", VA = "0x145E4B4")]
		public void UpdateForTimeOfDay(SkyProfile skyProfile, float timeOfDay)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x145F168", Offset = "0x145F168", VA = "0x145F168")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x145F298", Offset = "0x145F298", VA = "0x145F298")]
		private void OnEnclosureDidChange(WeatherEnclosure enclosure)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x145F35C", Offset = "0x145F35C", VA = "0x145F35C")]
		public WeatherController()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C1B0", Offset = "0xF2C1B0")]
	public class WeatherEnclosure : MonoBehaviour
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 nearTextureTiling;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 farTextureTiling;

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x145F828", Offset = "0x145F828", VA = "0x145F828")]
		public WeatherEnclosure()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class WeatherEnclosureDetector : MonoBehaviour
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33A94", Offset = "0xF33A94")]
		public WeatherEnclosure mainEnclosure;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<WeatherEnclosure> triggeredEnclosures;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RainDownfallController rainController;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<WeatherEnclosure> enclosureChangedCallback;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x145F8EC", Offset = "0x145F8EC", VA = "0x145F8EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x145F9E0", Offset = "0x145F9E0", VA = "0x145F9E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x145F9E4", Offset = "0x145F9E4", VA = "0x145F9E4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x145FAFC", Offset = "0x145FAFC", VA = "0x145FAFC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x145F8F0", Offset = "0x145F8F0", VA = "0x145F8F0")]
		public void ApplyEnclosure()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x145FBF8", Offset = "0x145FBF8", VA = "0x145FBF8")]
		public WeatherEnclosureDetector()
		{
		}
	}
}
namespace VReview
{
	[Serializable]
	[Token(Token = "0x20003E8")]
	public struct DrinkDistributorParameters
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string drinkName;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float preparationTime;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float deliverTime;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material streamMat;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material containerMat;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip streamSound;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useStreamParticles;
	}
	[Token(Token = "0x20003E9")]
	public class DrinkDistributor : MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C214", Offset = "0xF2C214")]
		private sealed class <DeliverRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DrinkDistributor <>4__this;

			[Token(Token = "0x170002BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001757")]
				[Address(RVA = "0x17328EC", Offset = "0x17328EC", VA = "0x17328EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001759")]
				[Address(RVA = "0x1732954", Offset = "0x1732954", VA = "0x1732954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001754")]
			[Address(RVA = "0x173267C", Offset = "0x173267C", VA = "0x173267C")]
			[DebuggerHidden]
			public <DeliverRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x17326B0", Offset = "0x17326B0", VA = "0x17326B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x17326B4", Offset = "0x17326B4", VA = "0x17326B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x17328F4", Offset = "0x17328F4", VA = "0x17328F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int drinkType;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrinkDistributorParameters[] drinksParamters;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DrinkStream stream;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject containerPrefab;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform containerPosition;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isOn;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource audioSrc;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform containerDistributorPos;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject containerPrefabForDistributor;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject availableContainer;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isAddingNewContainer;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1731E60", Offset = "0x1731E60", VA = "0x1731E60")]
		private void Start()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x173215C", Offset = "0x173215C", VA = "0x173215C")]
		private void Update()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x173234C", Offset = "0x173234C", VA = "0x173234C")]
		private void SpawnContainerInMachine()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1732474", Offset = "0x1732474", VA = "0x1732474")]
		public void ActivateMachine()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x173260C", Offset = "0x173260C", VA = "0x173260C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B620", Offset = "0xF3B620")]
		private IEnumerator DeliverRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x17321E4", Offset = "0x17321E4", VA = "0x17321E4")]
		private void CheckDistributor()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x173200C", Offset = "0x173200C", VA = "0x173200C")]
		private void AddNewContainerInDistributor()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x17326A8", Offset = "0x17326A8", VA = "0x17326A8")]
		public DrinkDistributor()
		{
		}
	}
}
namespace Cook
{
	[Token(Token = "0x20003EB")]
	public class Door : NetworkBehaviour
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C224", Offset = "0xF2C224")]
		private sealed class <CloseDoorRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door <>4__this;

			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <nbStep>5__2;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <cnt>5__3;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001769")]
				[Address(RVA = "0x12FBA3C", Offset = "0x12FBA3C", VA = "0x12FBA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176B")]
				[Address(RVA = "0x12FBAA4", Offset = "0x12FBAA4", VA = "0x12FBAA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0x12FB340", Offset = "0x12FB340", VA = "0x12FB340")]
			[DebuggerHidden]
			public <CloseDoorRoutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x12FB85C", Offset = "0x12FB85C", VA = "0x12FB85C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0x12FB860", Offset = "0x12FB860", VA = "0x12FB860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0x12FBA44", Offset = "0x12FBA44", VA = "0x12FBA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C234", Offset = "0xF2C234")]
		private sealed class <OpenDoorRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door <>4__this;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <nbStep>5__2;

			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <cnt>5__3;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600176F")]
				[Address(RVA = "0x12FBC8C", Offset = "0x12FBC8C", VA = "0x12FBC8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001771")]
				[Address(RVA = "0x12FBCF4", Offset = "0x12FBCF4", VA = "0x12FBCF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0x12FB36C", Offset = "0x12FB36C", VA = "0x12FB36C")]
			[DebuggerHidden]
			public <OpenDoorRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0x12FBAAC", Offset = "0x12FBAAC", VA = "0x12FBAAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x12FBAB0", Offset = "0x12FBAB0", VA = "0x12FBAB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001770")]
			[Address(RVA = "0x12FBC94", Offset = "0x12FBC94", VA = "0x12FBC94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isOpen;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 axis;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationAngle;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject target;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip openAudio;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip closeAudio;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource audioSource;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isOpening;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool isClosing;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fadeTime;

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x12FB114", Offset = "0x12FB114", VA = "0x12FB114")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x12FB16C", Offset = "0x12FB16C", VA = "0x12FB16C")]
		private void Update()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x12FB170", Offset = "0x12FB170", VA = "0x12FB170")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x12FB21C", Offset = "0x12FB21C", VA = "0x12FB21C")]
		private void ToggleDoor()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x12FB260", Offset = "0x12FB260", VA = "0x12FB260")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B6D4", Offset = "0xF3B6D4")]
		private IEnumerator CloseDoorRoutine()
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x12FB2D0", Offset = "0x12FB2D0", VA = "0x12FB2D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B738", Offset = "0xF3B738")]
		private IEnumerator OpenDoorRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x12FB398", Offset = "0x12FB398", VA = "0x12FB398")]
		[ClientRpc]
		private void RpcPlayDoorSound(bool open)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x12FB4AC", Offset = "0x12FB4AC", VA = "0x12FB4AC")]
		public Door()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x12FB558", Offset = "0x12FB558", VA = "0x12FB558")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x12FB55C", Offset = "0x12FB55C", VA = "0x12FB55C")]
		private void UserCode_RpcPlayDoorSound(bool open)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x12FB64C", Offset = "0x12FB64C", VA = "0x12FB64C")]
		protected static void InvokeUserCode_RpcPlayDoorSound(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x12FB77C", Offset = "0x12FB77C", VA = "0x12FB77C")]
		static Door()
		{
		}
	}
}
namespace FSG.iOSKeychain
{
	[Token(Token = "0x20003EE")]
	public static class Keychain
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FSG.Utilities.Crypto mCryptoInstance;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x135DB98", Offset = "0x135DB98", VA = "0x135DB98")]
		static Keychain()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x135DC18", Offset = "0x135DC18", VA = "0x135DC18")]
		private static string GetPath(string key)
		{
			return null;
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x135DCB4", Offset = "0x135DCB4", VA = "0x135DCB4")]
		public static string GetValue(string key)
		{
			return null;
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x135DE70", Offset = "0x135DE70", VA = "0x135DE70")]
		public static void SetValue(string key, string value)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x135DFF4", Offset = "0x135DFF4", VA = "0x135DFF4")]
		public static void DeleteValue(string key)
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class KeychainDebug : MonoBehaviour
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string key;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string value;

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x135E124", Offset = "0x135E124", VA = "0x135E124")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x135E6B0", Offset = "0x135E6B0", VA = "0x135E6B0")]
		public KeychainDebug()
		{
		}
	}
}
namespace FSG.Utilities
{
	[Token(Token = "0x20003F0")]
	public sealed class Crypto
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object cryptLock;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string pw;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] salt;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Aes aes;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ICryptoTransform currentEncryptor;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICryptoTransform currentDecryptor;

		[Token(Token = "0x170002C2")]
		private ICryptoTransform encryptor
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x135D1E0", Offset = "0x135D1E0", VA = "0x135D1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		private ICryptoTransform decryptor
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x135D2C0", Offset = "0x135D2C0", VA = "0x135D2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x135D3A0", Offset = "0x135D3A0", VA = "0x135D3A0")]
		public Crypto(string pw, string salt)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x135D578", Offset = "0x135D578", VA = "0x135D578")]
		public byte[] Encrypt(byte[] input)
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x135D888", Offset = "0x135D888", VA = "0x135D888")]
		public byte[] Decrypt(byte[] input)
		{
			return null;
		}
	}
}
namespace UltimateClean
{
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C244", Offset = "0xF2C244")]
	public class ButtonSounds : MonoBehaviour
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip pressedSound;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip rolloverSound;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource audioSource;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x156BBDC", Offset = "0x156BBDC", VA = "0x156BBDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x156BC34", Offset = "0x156BC34", VA = "0x156BC34")]
		public void PlayPressedSound()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x156BC74", Offset = "0x156BC74", VA = "0x156BC74")]
		public void PlayRolloverSound()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x156BCB4", Offset = "0x156BCB4", VA = "0x156BCB4")]
		public ButtonSounds()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class CleanButton : Button
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ButtonSounds buttonSounds;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool pointerWasUp;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x156BCBC", Offset = "0x156BCBC", VA = "0x156BCBC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x156BD20", Offset = "0x156BD20", VA = "0x156BD20", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x156BDC8", Offset = "0x156BDC8", VA = "0x156BDC8", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x156BDD8", Offset = "0x156BDD8", VA = "0x156BDD8", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x156BE90", Offset = "0x156BE90", VA = "0x156BE90", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x156BE9C", Offset = "0x156BE9C", VA = "0x156BE9C")]
		public CleanButton()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C2A8", Offset = "0xF2C2A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C2A8", Offset = "0xF2C2A8")]
	public class FadeButton : CleanButton
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private FadeConfig config;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x156BEA4", Offset = "0x156BEA4", VA = "0x156BEA4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x156BF1C", Offset = "0x156BF1C", VA = "0x156BF1C", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x156BFF0", Offset = "0x156BFF0", VA = "0x156BFF0", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x156C0D0", Offset = "0x156C0D0", VA = "0x156C0D0", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x156C110", Offset = "0x156C110", VA = "0x156C110", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x156C150", Offset = "0x156C150", VA = "0x156C150")]
		public FadeButton()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class FadeConfig : MonoBehaviour
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeTime;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float onHoverAlpha;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float onClickAlpha;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x156C158", Offset = "0x156C158", VA = "0x156C158")]
		public FadeConfig()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2C334", Offset = "0xF2C334")]
	public class Gradient : BaseMeshEffect
	{
		[Token(Token = "0x20003F6")]
		public struct Matrix2x3
		{
			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m00;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m01;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float m02;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float m10;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m11;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m12;

			[Token(Token = "0x6001793")]
			[Address(RVA = "0x156C584", Offset = "0x156C584", VA = "0x156C584")]
			public Matrix2x3(float m00, float m01, float m02, float m10, float m11, float m12)
			{
			}

			[Token(Token = "0x6001794")]
			[Address(RVA = "0x156C52C", Offset = "0x156C52C", VA = "0x156C52C")]
			public static Vector2 operator *(Matrix2x3 m, Vector2 v)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Color1;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color Color2;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33ACC", Offset = "0xF33ACC")]
		public float Angle;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x156C178", Offset = "0x156C178", VA = "0x156C178", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x156C46C", Offset = "0x156C46C", VA = "0x156C46C")]
		private Matrix2x3 LocalPositionMatrix(Rect rect, Vector2 dir)
		{
			return default(Matrix2x3);
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x156C3C8", Offset = "0x156C3C8", VA = "0x156C3C8")]
		private Vector2 RotationDir(float angle)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x156C594", Offset = "0x156C594", VA = "0x156C594")]
		public Gradient()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class InfoPopup : MonoBehaviour
	{
		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x156C5E0", Offset = "0x156C5E0", VA = "0x156C5E0")]
		public void SetInfo(Sprite iconSprite, string iconText)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x156C62C", Offset = "0x156C62C", VA = "0x156C62C")]
		public InfoPopup()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class InfoPopupOpener : PopupOpener
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite iconSprite;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string iconText;

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x156C634", Offset = "0x156C634", VA = "0x156C634", Slot = "4")]
		public override void OpenPopup()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x156C7C4", Offset = "0x156C7C4", VA = "0x156C7C4")]
		public InfoPopupOpener()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class LoopableSelectionSlider : SelectionSlider
	{
		[Token(Token = "0x6001799")]
		[Address(RVA = "0x156C870", Offset = "0x156C870", VA = "0x156C870", Slot = "4")]
		public override void OnPreviousButtonPressed()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x156C9F8", Offset = "0x156C9F8", VA = "0x156C9F8", Slot = "5")]
		public override void OnNextButtonPressed()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x156CA68", Offset = "0x156CA68", VA = "0x156CA68")]
		public LoopableSelectionSlider()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class MessagesPopup : MonoBehaviour
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MoveLeft;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int MoveRight;

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x156CADC", Offset = "0x156CADC", VA = "0x156CADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x156CB34", Offset = "0x156CB34", VA = "0x156CB34")]
		public void OpenDetailedView()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x156CBB4", Offset = "0x156CBB4", VA = "0x156CBB4")]
		public void CloseDetailedView()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x156CC34", Offset = "0x156CC34", VA = "0x156CC34")]
		public MessagesPopup()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class NonLoopableSelectionSlider : SelectionSlider
	{
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x156D070", Offset = "0x156D070", VA = "0x156D070", Slot = "4")]
		public override void OnPreviousButtonPressed()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x156D084", Offset = "0x156D084", VA = "0x156D084", Slot = "5")]
		public override void OnNextButtonPressed()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x156D0F4", Offset = "0x156D0F4", VA = "0x156D0F4")]
		public NonLoopableSelectionSlider()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class Notification : MonoBehaviour
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C36C", Offset = "0xF2C36C")]
		private sealed class <RunNotificationSequence>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Notification <>4__this;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0x156D7E4", Offset = "0x156D7E4", VA = "0x156D7E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017AD")]
				[Address(RVA = "0x156D84C", Offset = "0x156D84C", VA = "0x156D84C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x156D62C", Offset = "0x156D62C", VA = "0x156D62C")]
			[DebuggerHidden]
			public <RunNotificationSequence>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x156D660", Offset = "0x156D660", VA = "0x156D660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x156D664", Offset = "0x156D664", VA = "0x156D664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x156D7EC", Offset = "0x156D7EC", VA = "0x156D7EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI titleLabel;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI messageLabel;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RuntimeAnimatorController popAnimator;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RuntimeAnimatorController fadeAnimator;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RuntimeAnimatorController shakeAnimator;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RuntimeAnimatorController slideLeftAnimator;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RuntimeAnimatorController slideRightAnimator;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RuntimeAnimatorController slideUpAnimator;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RuntimeAnimatorController slideDownAnimator;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action OnCompleted;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator animator;

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x156D0F8", Offset = "0x156D0F8", VA = "0x156D0F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x156D150", Offset = "0x156D150", VA = "0x156D150")]
		public void Launch(NotificationType type, NotificationPositionType position, float duration, string title, string message)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x156D5AC", Offset = "0x156D5AC", VA = "0x156D5AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B84C", Offset = "0xF3B84C")]
		private IEnumerator RunNotificationSequence(float duration)
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x156D658", Offset = "0x156D658", VA = "0x156D658")]
		public Notification()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class NotificationLauncher : MonoBehaviour
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Prefab;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas Canvas;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NotificationType Type;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public NotificationPositionType Position;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Duration;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Title;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Message;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NotificationQueue queue;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x156D854", Offset = "0x156D854", VA = "0x156D854")]
		private void Start()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x156D8C8", Offset = "0x156D8C8", VA = "0x156D8C8")]
		public void LaunchNotification()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x156DAD0", Offset = "0x156DAD0", VA = "0x156DAD0")]
		public NotificationLauncher()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public enum NotificationPositionType
	{
		[Token(Token = "0x4001780")]
		TopLeft,
		[Token(Token = "0x4001781")]
		TopMiddle,
		[Token(Token = "0x4001782")]
		TopRight,
		[Token(Token = "0x4001783")]
		BottomLeft,
		[Token(Token = "0x4001784")]
		BottomMiddle,
		[Token(Token = "0x4001785")]
		BottomRight
	}
	[Token(Token = "0x2000400")]
	public class NotificationQueue : MonoBehaviour
	{
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<QueuedNotification> pendingNotifications;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool notificationActive;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x156DAD8", Offset = "0x156DAD8", VA = "0x156DAD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x156DA08", Offset = "0x156DA08", VA = "0x156DA08")]
		public void EnqueueNotification(GameObject prefab, Canvas canvas, NotificationType type, NotificationPositionType position, float duration, string title, string message)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x156DC70", Offset = "0x156DC70", VA = "0x156DC70")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x156DE00", Offset = "0x156DE00", VA = "0x156DE00")]
		public NotificationQueue()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x156DE74", Offset = "0x156DE74", VA = "0x156DE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B900", Offset = "0xF3B900")]
		private void <Start>b__2_0(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x156DED4", Offset = "0x156DED4", VA = "0x156DED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3B910", Offset = "0xF3B910")]
		private void <Update>b__4_0()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public enum NotificationType
	{
		[Token(Token = "0x4001789")]
		Pop,
		[Token(Token = "0x400178A")]
		Fade,
		[Token(Token = "0x400178B")]
		Shake,
		[Token(Token = "0x400178C")]
		SlideLeft,
		[Token(Token = "0x400178D")]
		SlideRight,
		[Token(Token = "0x400178E")]
		SlideUp,
		[Token(Token = "0x400178F")]
		SlideDown
	}
	[Token(Token = "0x2000402")]
	public class Popup : MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C37C", Offset = "0xF2C37C")]
		private sealed class <RunPopupDestroy>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Popup <>4__this;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C0")]
				[Address(RVA = "0x156E5E0", Offset = "0x156E5E0", VA = "0x156E5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C2")]
				[Address(RVA = "0x156E648", Offset = "0x156E648", VA = "0x156E648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x156E454", Offset = "0x156E454", VA = "0x156E454")]
			[DebuggerHidden]
			public <RunPopupDestroy>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x156E4E8", Offset = "0x156E4E8", VA = "0x156E4E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x156E4EC", Offset = "0x156E4EC", VA = "0x156E4EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x156E5E8", Offset = "0x156E5E8", VA = "0x156E5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color backgroundColor;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float destroyTime;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_background;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x156DEDC", Offset = "0x156DEDC", VA = "0x156DEDC")]
		public void Open()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x156E230", Offset = "0x156E230", VA = "0x156E230")]
		public void Close()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x156E3E4", Offset = "0x156E3E4", VA = "0x156E3E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B920", Offset = "0xF3B920")]
		private IEnumerator RunPopupDestroy()
		{
			return null;
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x156DEE0", Offset = "0x156DEE0", VA = "0x156DEE0")]
		private void AddBackground()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x156E31C", Offset = "0x156E31C", VA = "0x156E31C")]
		private void RemoveBackground()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x156E480", Offset = "0x156E480", VA = "0x156E480")]
		public Popup()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class PopupOpener : MonoBehaviour
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject popupPrefab;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Canvas m_canvas;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected GameObject m_popup;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x156E650", Offset = "0x156E650", VA = "0x156E650")]
		protected void Start()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x156C6A0", Offset = "0x156C6A0", VA = "0x156C6A0", Slot = "4")]
		public virtual void OpenPopup()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x156C7CC", Offset = "0x156C7CC", VA = "0x156C7CC")]
		public PopupOpener()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C38C", Offset = "0xF2C38C")]
	public class ProgressBarAmountText : MonoBehaviour
	{
		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image progressBar;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Suffix;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI text;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x156E6C0", Offset = "0x156E6C0", VA = "0x156E6C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x156E718", Offset = "0x156E718", VA = "0x156E718")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x156E804", Offset = "0x156E804", VA = "0x156E804")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x156E734", Offset = "0x156E734", VA = "0x156E734")]
		private void SetAmountText(float value)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x156E820", Offset = "0x156E820", VA = "0x156E820")]
		public ProgressBarAmountText()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class ProgressBarAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C3F0", Offset = "0xF2C3F0")]
		private sealed class <Animate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressBarAnimation <>4__this;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D2")]
				[Address(RVA = "0x156EAD0", Offset = "0x156EAD0", VA = "0x156EAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D4")]
				[Address(RVA = "0x156EB38", Offset = "0x156EB38", VA = "0x156EB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x156E8DC", Offset = "0x156E8DC", VA = "0x156E8DC")]
			[DebuggerHidden]
			public <Animate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x156E918", Offset = "0x156E918", VA = "0x156E918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x156E91C", Offset = "0x156E91C", VA = "0x156E91C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x156EAD8", Offset = "0x156EAD8", VA = "0x156EAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image progressBar;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x156E828", Offset = "0x156E828", VA = "0x156E828")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x156E8D4", Offset = "0x156E8D4", VA = "0x156E8D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x156E864", Offset = "0x156E864", VA = "0x156E864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3B9D4", Offset = "0xF3B9D4")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x156E908", Offset = "0x156E908", VA = "0x156E908")]
		public ProgressBarAnimation()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class QueuedNotification
	{
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Prefab;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas Canvas;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NotificationType Type;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public NotificationPositionType Position;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Duration;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Title;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Message;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x156DC68", Offset = "0x156DC68", VA = "0x156DC68")]
		public QueuedNotification()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class SceneTransition : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string scene;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x156EB40", Offset = "0x156EB40", VA = "0x156EB40")]
		public void PerformTransition()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x156ECB8", Offset = "0x156ECB8", VA = "0x156ECB8")]
		public SceneTransition()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public abstract class SelectionSlider : MonoBehaviour
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FadeButton prevButton;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FadeButton nextButton;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TextMeshProUGUI optionLabel;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected TextMeshProUGUI optionNumberLabel;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> Options;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int currentIndex;

		[Token(Token = "0x170002CA")]
		public int Index
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x156ED28", Offset = "0x156ED28", VA = "0x156ED28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017D9")]
		public abstract void OnPreviousButtonPressed();

		[Token(Token = "0x60017DA")]
		public abstract void OnNextButtonPressed();

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x156ED30", Offset = "0x156ED30", VA = "0x156ED30", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x156C8DC", Offset = "0x156C8DC", VA = "0x156C8DC")]
		protected void SetCurrentOptionLabel()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x156ED34", Offset = "0x156ED34", VA = "0x156ED34")]
		public string GetCurrentOptionText()
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x156EDA4", Offset = "0x156EDA4", VA = "0x156EDA4")]
		public void SetCurrentOption(int index)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x156CA6C", Offset = "0x156CA6C", VA = "0x156CA6C")]
		protected SelectionSlider()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C400", Offset = "0xF2C400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2C400", Offset = "0xF2C400")]
	public class SlicedFilledImage : MaskableGraphic, ISerializationCallbackReceiver, ILayoutElement, ICanvasRaycastFilter
	{
		[Token(Token = "0x200040C")]
		private static class SetPropertyUtility
		{
			[Token(Token = "0x600180C")]
			public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
			{
				return default(bool);
			}

			[Token(Token = "0x600180D")]
			public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040D")]
		public enum FillDirection
		{
			[Token(Token = "0x40017C2")]
			Right,
			[Token(Token = "0x40017C3")]
			Left,
			[Token(Token = "0x40017C4")]
			Up,
			[Token(Token = "0x40017C5")]
			Down
		}

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] s_Vertices;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2[] s_UVs;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector2[] s_SlicedVertices;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector2[] s_SlicedUVs;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Sprite m_Sprite;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private FillDirection m_FillDirection;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33BEC", Offset = "0xF33BEC")]
		[SerializeField]
		private float m_FillAmount;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private bool m_FillCenter;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_PixelsPerUnitMultiplier;

		[NonSerialized]
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Sprite m_OverrideSprite;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33C4C", Offset = "0xF33C4C")]
		private float <alphaHitTestMinimumThreshold>k__BackingField;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool m_Tracked;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<SlicedFilledImage> m_TrackedTexturelessImages;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool s_Initialized;

		[Token(Token = "0x170002CB")]
		public Sprite sprite
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x156EE24", Offset = "0x156EE24", VA = "0x156EE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x156EE2C", Offset = "0x156EE2C", VA = "0x156EE2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public FillDirection fillDirection
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x156F08C", Offset = "0x156F08C", VA = "0x156F08C")]
			get
			{
				return default(FillDirection);
			}
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x156F094", Offset = "0x156F094", VA = "0x156F094")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public float fillAmount
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x156F11C", Offset = "0x156F11C", VA = "0x156F11C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x156F124", Offset = "0x156F124", VA = "0x156F124")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool fillCenter
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x156F1D8", Offset = "0x156F1D8", VA = "0x156F1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x156F1E0", Offset = "0x156F1E0", VA = "0x156F1E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public float pixelsPerUnitMultiplier
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x156F268", Offset = "0x156F268", VA = "0x156F268")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x156F270", Offset = "0x156F270", VA = "0x156F270")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public float pixelsPerUnit
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x156F2F4", Offset = "0x156F2F4", VA = "0x156F2F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D1")]
		public Sprite overrideSprite
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x156F49C", Offset = "0x156F49C", VA = "0x156F49C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x156F4A0", Offset = "0x156F4A0", VA = "0x156F4A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		private Sprite activeSprite
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x156F414", Offset = "0x156F414", VA = "0x156F414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public override Texture mainTexture
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x156F530", Offset = "0x156F530", VA = "0x156F530", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public bool hasBorder
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x156F6CC", Offset = "0x156F6CC", VA = "0x156F6CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D5")]
		public override Material material
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x156F798", Offset = "0x156F798", VA = "0x156F798", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x156F8F4", Offset = "0x156F8F4", VA = "0x156F8F4", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public float alphaHitTestMinimumThreshold
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x156F8FC", Offset = "0x156F8FC", VA = "0x156F8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3BA88", Offset = "0xF3BA88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x156F904", Offset = "0x156F904", VA = "0x156F904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3BA98", Offset = "0xF3BA98")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		private int UnityEngine.UI.ILayoutElement.layoutPriority
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1570CB8", Offset = "0x1570CB8", VA = "0x1570CB8", Slot = "75")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D8")]
		private float UnityEngine.UI.ILayoutElement.minWidth
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x1570CC0", Offset = "0x1570CC0", VA = "0x1570CC0", Slot = "69")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D9")]
		private float UnityEngine.UI.ILayoutElement.minHeight
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1570CC8", Offset = "0x1570CC8", VA = "0x1570CC8", Slot = "72")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DA")]
		private float UnityEngine.UI.ILayoutElement.flexibleWidth
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x1570CD0", Offset = "0x1570CD0", VA = "0x1570CD0", Slot = "71")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DB")]
		private float UnityEngine.UI.ILayoutElement.flexibleHeight
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1570CD8", Offset = "0x1570CD8", VA = "0x1570CD8", Slot = "74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		private float UnityEngine.UI.ILayoutElement.preferredWidth
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x1570CE0", Offset = "0x1570CE0", VA = "0x1570CE0", Slot = "70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DD")]
		private float UnityEngine.UI.ILayoutElement.preferredHeight
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1570D90", Offset = "0x1570D90", VA = "0x1570D90", Slot = "73")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x156F90C", Offset = "0x156F90C", VA = "0x156F90C")]
		protected SlicedFilledImage()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x156F948", Offset = "0x156F948", VA = "0x156F948", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x156F970", Offset = "0x156F970", VA = "0x156F970", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x156FA38", Offset = "0x156FA38", VA = "0x156FA38", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1570508", Offset = "0x1570508", VA = "0x1570508", Slot = "40")]
		protected override void UpdateMaterial()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x156FAEC", Offset = "0x156FAEC", VA = "0x156FAEC")]
		private void GenerateSlicedFilledSprite(VertexHelper vh)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1570AB8", Offset = "0x1570AB8", VA = "0x1570AB8")]
		private Vector4 GetAdjustedBorders(Vector4 border, Rect adjustedRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x157062C", Offset = "0x157062C", VA = "0x157062C")]
		private void GenerateFilledSprite(VertexHelper vh, Vector4 vertices, Vector4 uvs, float fillAmount)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1570E40", Offset = "0x1570E40", VA = "0x1570E40", Slot = "67")]
		private void UnityEngine.UI.ILayoutElement.CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1570E44", Offset = "0x1570E44", VA = "0x1570E44", Slot = "68")]
		private void UnityEngine.UI.ILayoutElement.CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1570E48", Offset = "0x1570E48", VA = "0x1570E48", Slot = "76")]
		private bool UnityEngine.ICanvasRaycastFilter.IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1571584", Offset = "0x1571584", VA = "0x1571584", Slot = "65")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1571588", Offset = "0x1571588", VA = "0x1571588", Slot = "66")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x156EEBC", Offset = "0x156EEBC", VA = "0x156EEBC")]
		private void TrackImage()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x156F9AC", Offset = "0x156F9AC", VA = "0x156F9AC")]
		private void UnTrackImage()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1571604", Offset = "0x1571604", VA = "0x1571604")]
		private static void RebuildImage(SpriteAtlas spriteAtlas)
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C48C", Offset = "0xF2C48C")]
	public class SliderAmountText : MonoBehaviour
	{
		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Suffix;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool WholeNumber;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI text;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1571848", Offset = "0x1571848", VA = "0x1571848")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x15718A0", Offset = "0x15718A0", VA = "0x15718A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1571A80", Offset = "0x1571A80", VA = "0x1571A80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1571B24", Offset = "0x1571B24", VA = "0x1571B24")]
		private void OnSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1571964", Offset = "0x1571964", VA = "0x1571964")]
		private void SetAmountText(float value)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1571B28", Offset = "0x1571B28", VA = "0x1571B28")]
		public SliderAmountText()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class SliderAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C4F0", Offset = "0xF2C4F0")]
		private sealed class <Animate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SliderAnimation <>4__this;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <ratio>5__2;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <multiplier>5__3;

			[Token(Token = "0x170002DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600181B")]
				[Address(RVA = "0x1572144", Offset = "0x1572144", VA = "0x1572144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600181D")]
				[Address(RVA = "0x15721AC", Offset = "0x15721AC", VA = "0x15721AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001818")]
			[Address(RVA = "0x1571C4C", Offset = "0x1571C4C", VA = "0x1571C4C")]
			[DebuggerHidden]
			public <Animate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0x1571CF4", Offset = "0x1571CF4", VA = "0x1571CF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600181A")]
			[Address(RVA = "0x1571CF8", Offset = "0x1571CF8", VA = "0x1571CF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600181C")]
			[Address(RVA = "0x157214C", Offset = "0x157214C", VA = "0x157214C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI text;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image image;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SlicedFilledImage slicedImage;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder strBuilder;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPercentage;

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1571B38", Offset = "0x1571B38", VA = "0x1571B38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1571C44", Offset = "0x1571C44", VA = "0x1571C44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1571BD4", Offset = "0x1571BD4", VA = "0x1571BD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BAA8", Offset = "0xF3BAA8")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1571C78", Offset = "0x1571C78", VA = "0x1571C78")]
		public SliderAnimation()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[ExecuteInEditMode]
	public class SliderColorSwap : MonoBehaviour
	{
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color EnabledColor;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color DisabledColor;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image Handle;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider slider;

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x15721B4", Offset = "0x15721B4", VA = "0x15721B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x157220C", Offset = "0x157220C", VA = "0x157220C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1572334", Offset = "0x1572334", VA = "0x1572334")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x15722D0", Offset = "0x15722D0", VA = "0x15722D0")]
		public void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x15723D8", Offset = "0x15723D8", VA = "0x15723D8")]
		public SliderColorSwap()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class SpriteSwapper : MonoBehaviour
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite enabledSprite;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite disabledSprite;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_swapped;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x15726D8", Offset = "0x15726D8", VA = "0x15726D8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x156CD54", Offset = "0x156CD54", VA = "0x156CD54")]
		public void SwapSprite()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1572730", Offset = "0x1572730", VA = "0x1572730")]
		public SpriteSwapper()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C510", Offset = "0xF2C510")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C510", Offset = "0xF2C510")]
	public class Switch : MonoBehaviour
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button button;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image bgEnabledImage;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image bgDisabledImage;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image handleEnabledImage;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image handleDisabledImage;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool switchEnabled;

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1572740", Offset = "0x1572740", VA = "0x1572740")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x15728BC", Offset = "0x15728BC", VA = "0x15728BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1572950", Offset = "0x1572950", VA = "0x1572950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x15729E4", Offset = "0x15729E4", VA = "0x15729E4")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1572B50", Offset = "0x1572B50", VA = "0x1572B50")]
		public bool IsToggled()
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1572B58", Offset = "0x1572B58", VA = "0x1572B58")]
		public Switch()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C59C", Offset = "0xF2C59C")]
	public class ToggleWithLabel : MonoBehaviour
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject onLabel;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject offLabel;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle toggle;

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1572B60", Offset = "0x1572B60", VA = "0x1572B60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1572C18", Offset = "0x1572C18", VA = "0x1572C18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1572CBC", Offset = "0x1572CBC", VA = "0x1572CBC")]
		public void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1572D08", Offset = "0x1572D08", VA = "0x1572D08")]
		public ToggleWithLabel()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class Tooltip : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject tooltip;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1572D10", Offset = "0x1572D10", VA = "0x1572D10", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1572DE4", Offset = "0x1572DE4", VA = "0x1572DE4", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1572EB8", Offset = "0x1572EB8", VA = "0x1572EB8")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class Transition : MonoBehaviour
	{
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C600", Offset = "0xF2C600")]
		private sealed class <RunFade>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color fadeColor;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transition <>4__this;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string level;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Image <image>5__2;

			[Token(Token = "0x40017F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__3;

			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <halfDuration>5__4;

			[Token(Token = "0x170002E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183B")]
				[Address(RVA = "0x15736DC", Offset = "0x15736DC", VA = "0x15736DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183D")]
				[Address(RVA = "0x1573744", Offset = "0x1573744", VA = "0x1573744", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0x1573090", Offset = "0x1573090", VA = "0x1573090")]
			[DebuggerHidden]
			public <RunFade>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001839")]
			[Address(RVA = "0x15730C4", Offset = "0x15730C4", VA = "0x15730C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0x15730C8", Offset = "0x15730C8", VA = "0x15730C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0x15736E4", Offset = "0x15736E4", VA = "0x15736E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject m_canvas;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject m_overlay;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1572ECC", Offset = "0x1572ECC", VA = "0x1572ECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x156EB58", Offset = "0x156EB58", VA = "0x156EB58")]
		public static void LoadLevel(string level, float duration, Color color)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1572FAC", Offset = "0x1572FAC", VA = "0x1572FAC")]
		private void StartFade(string level, float duration, Color fadeColor)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1572FD8", Offset = "0x1572FD8", VA = "0x1572FD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BB5C", Offset = "0xF3BB5C")]
		private IEnumerator RunFade(string level, float duration, Color fadeColor)
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x15730BC", Offset = "0x15730BC", VA = "0x15730BC")]
		public Transition()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class URLOpener : MonoBehaviour
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x157374C", Offset = "0x157374C", VA = "0x157374C")]
		public void OpenURL()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1573758", Offset = "0x1573758", VA = "0x1573758")]
		public URLOpener()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public static class Utils
	{
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C610", Offset = "0xF2C610")]
		private sealed class <FadeIn>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup group;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float alpha;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x40017FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <originalAlpha>5__3;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001845")]
				[Address(RVA = "0x15738FC", Offset = "0x15738FC", VA = "0x15738FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001847")]
				[Address(RVA = "0x1573964", Offset = "0x1573964", VA = "0x1573964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0x1573760", Offset = "0x1573760", VA = "0x1573760")]
			[DebuggerHidden]
			public <FadeIn>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001843")]
			[Address(RVA = "0x15737B8", Offset = "0x15737B8", VA = "0x15737B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0x15737BC", Offset = "0x15737BC", VA = "0x15737BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001846")]
			[Address(RVA = "0x1573904", Offset = "0x1573904", VA = "0x1573904", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C620", Offset = "0xF2C620")]
		private sealed class <FadeOut>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup group;

			[Token(Token = "0x40017FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float alpha;

			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <originalAlpha>5__3;

			[Token(Token = "0x170002E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600184B")]
				[Address(RVA = "0x1573AB0", Offset = "0x1573AB0", VA = "0x1573AB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600184D")]
				[Address(RVA = "0x1573B18", Offset = "0x1573B18", VA = "0x1573B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001848")]
			[Address(RVA = "0x157378C", Offset = "0x157378C", VA = "0x157378C")]
			[DebuggerHidden]
			public <FadeOut>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0x157396C", Offset = "0x157396C", VA = "0x157396C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1573970", Offset = "0x1573970", VA = "0x1573970", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184C")]
			[Address(RVA = "0x1573AB8", Offset = "0x1573AB8", VA = "0x1573AB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x156C04C", Offset = "0x156C04C", VA = "0x156C04C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BC10", Offset = "0xF3BC10")]
		public static IEnumerator FadeIn(CanvasGroup group, float alpha, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x156BF6C", Offset = "0x156BF6C", VA = "0x156BF6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BC74", Offset = "0xF3BC74")]
		public static IEnumerator FadeOut(CanvasGroup group, float alpha, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200041C")]
	public class BackgroundMusic : MonoBehaviour
	{
		[Token(Token = "0x200041D")]
		private enum Fade
		{
			[Token(Token = "0x4001806")]
			In,
			[Token(Token = "0x4001807")]
			Out
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C630", Offset = "0xF2C630")]
		private sealed class <FadeAudio>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Fade fadeType;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BackgroundMusic <>4__this;

			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <i>5__4;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <step>5__5;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001856")]
				[Address(RVA = "0x156BB6C", Offset = "0x156BB6C", VA = "0x156BB6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001858")]
				[Address(RVA = "0x156BBD4", Offset = "0x156BBD4", VA = "0x156BBD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001853")]
			[Address(RVA = "0x156B9D0", Offset = "0x156B9D0", VA = "0x156B9D0")]
			[DebuggerHidden]
			public <FadeAudio>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001854")]
			[Address(RVA = "0x156BA04", Offset = "0x156BA04", VA = "0x156BA04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0x156BA08", Offset = "0x156BA08", VA = "0x156BA08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0x156BB74", Offset = "0x156BB74", VA = "0x156BB74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BackgroundMusic Instance;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource m_audioSource;

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x156B6B4", Offset = "0x156B6B4", VA = "0x156B6B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x156B838", Offset = "0x156B838", VA = "0x156B838")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x156B94C", Offset = "0x156B94C", VA = "0x156B94C")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x156B8BC", Offset = "0x156B8BC", VA = "0x156B8BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BD78", Offset = "0xF3BD78")]
		private IEnumerator FadeAudio(float time, Fade fadeType)
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x156B9FC", Offset = "0x156B9FC", VA = "0x156B9FC")]
		public BackgroundMusic()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class InitialPlayerPrefs : MonoBehaviour
	{
		[Token(Token = "0x6001859")]
		[Address(RVA = "0x156C7D4", Offset = "0x156C7D4", VA = "0x156C7D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x156C868", Offset = "0x156C868", VA = "0x156C868")]
		public InitialPlayerPrefs()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class MusicButton : MonoBehaviour
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpriteSwapper m_spriteSwapper;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_on;

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x156CCC0", Offset = "0x156CCC0", VA = "0x156CCC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x156CDA0", Offset = "0x156CDA0", VA = "0x156CDA0")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x156CE4C", Offset = "0x156CE4C", VA = "0x156CE4C")]
		public void ToggleSprite()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x156CE74", Offset = "0x156CE74", VA = "0x156CE74")]
		public MusicButton()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class MusicManager : MonoBehaviour
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider m_musicSlider;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_musicButton;

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x156CE7C", Offset = "0x156CE7C", VA = "0x156CE7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x156CF24", Offset = "0x156CF24", VA = "0x156CF24")]
		public void SwitchMusic()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x156D068", Offset = "0x156D068", VA = "0x156D068")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class SoundButton : MonoBehaviour
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpriteSwapper m_spriteSwapper;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_on;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x15723E0", Offset = "0x15723E0", VA = "0x15723E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1572474", Offset = "0x1572474", VA = "0x1572474")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x15724EC", Offset = "0x15724EC", VA = "0x15724EC")]
		public void ToggleSprite()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1572514", Offset = "0x1572514", VA = "0x1572514")]
		public SoundButton()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class SoundManager : MonoBehaviour
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider m_soundSlider;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_soundButton;

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x157251C", Offset = "0x157251C", VA = "0x157251C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x15725C4", Offset = "0x15725C4", VA = "0x15725C4")]
		public void SwitchSound()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x15726D0", Offset = "0x15726D0", VA = "0x15726D0")]
		public SoundManager()
		{
		}
	}
}
namespace Smooth
{
	[Token(Token = "0x2000424")]
	public class MsgType
	{
		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short SmoothSyncFromServerToNonOwners;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short SmoothSyncFromOwnerToServer;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1209CD0", Offset = "0x1209CD0", VA = "0x1209CD0")]
		public MsgType()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public enum SyncMode
	{
		[Token(Token = "0x400181C")]
		XYZ,
		[Token(Token = "0x400181D")]
		XY,
		[Token(Token = "0x400181E")]
		XZ,
		[Token(Token = "0x400181F")]
		YZ,
		[Token(Token = "0x4001820")]
		X,
		[Token(Token = "0x4001821")]
		Y,
		[Token(Token = "0x4001822")]
		Z,
		[Token(Token = "0x4001823")]
		NONE
	}
	[Token(Token = "0x2000426")]
	public class SmoothSyncMirror : NetworkBehaviour
	{
		[Token(Token = "0x2000427")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x400188E")]
			None,
			[Token(Token = "0x400188F")]
			Limited,
			[Token(Token = "0x4001890")]
			Unlimited
		}

		[Token(Token = "0x2000428")]
		public enum TransformSource
		{
			[Token(Token = "0x4001892")]
			Owner,
			[Token(Token = "0x4001893")]
			Server
		}

		[Token(Token = "0x2000429")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x4001895")]
			Update,
			[Token(Token = "0x4001896")]
			FixedUpdate
		}

		[Token(Token = "0x200042A")]
		public delegate bool validateStateDelegate(StateMirror receivedState, StateMirror latestVerifiedState);

		[Token(Token = "0x200042B")]
		private enum RestState
		{
			[Token(Token = "0x4001898")]
			AT_REST,
			[Token(Token = "0x4001899")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x400189A")]
			MOVING
		}

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 linearVelocityCheat;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 angularVelocityCheat;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float interpolationBackTime;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float sendPositionThreshold;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float sendRotationThreshold;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float sendScaleThreshold;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float sendVelocityThreshold;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float receivedPositionThreshold;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float receivedRotationThreshold;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float snapPositionThreshold;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float snapRotationThreshold;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float snapScaleThreshold;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33C8C", Offset = "0xF33C8C")]
		public float positionLerpSpeed;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33CA4", Offset = "0xF33CA4")]
		public float rotationLerpSpeed;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33CBC", Offset = "0xF33CBC")]
		public float scaleLerpSpeed;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF33CD4", Offset = "0xF33CD4")]
		public float timeCorrectionSpeed;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float snapTimeThreshold;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public SyncMode syncPosition;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SyncMode syncRotation;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SyncMode syncScale;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SyncMode syncVelocity;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool isPositionCompressed;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool isRotationCompressed;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public bool isScaleCompressed;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public bool isVelocityCompressed;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool automaticallyResetTime;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF33CEC", Offset = "0xF33CEC")]
		private float <localTime>k__BackingField;

		[Token(Token = "0x4001847")]
		private const int maxTimePower = 12;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private readonly float maxLocalTime;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly float minTimePrecision;

		[NonSerialized]
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int localTimeResetIndicator;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isSmoothingAuthorityChanges;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public TransformSource transformSource;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float sendRate;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int networkChannel;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject childObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool isSyncingChild;

		[NonSerialized]
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private StateMirror latestValidatedState;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float maxPositionDifferenceForVelocitySyncing;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool useLocalTransformOnly;

		[NonSerialized]
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public StateMirror[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool hasRigidbody2D;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool dontLerp;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public NetworkIdentity netID;

		[NonSerialized]
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public int syncIndex;

		[NonSerialized]
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public SmoothSyncMirror[] childObjectSmoothSyncs;

		[NonSerialized]
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C3")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C6")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C7")]
		public bool sendAngularVelocity;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private StateMirror targetTempState;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private NetworkStateMirror sendingTempState;

		[NonSerialized]
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3 positionLastFrame;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Quaternion rotationLastFrame;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private int atRestThresholdCount;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private int samePositionCount;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private int sameRotationCount;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RestState restStatePosition;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private RestState restStateRotation;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private bool hadAuthorityLastFrame;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private StateMirror latestEndStateUsed;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private bool hasCachedNetID;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private NetworkIdentity cachedNetIdentity;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float _ownerTime;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private float latestAuthorityChangeZeroTime;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int previousReceivedOwnerInt;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public int ownerChangeIndicator;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public int receivedStatesCounter;

		[Token(Token = "0x170002E8")]
		public float localTime
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x1209D60", Offset = "0x1209D60", VA = "0x1209D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3BE2C", Offset = "0xF3BE2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x1209D68", Offset = "0x1209D68", VA = "0x1209D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3BE3C", Offset = "0xF3BE3C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public new NetworkIdentity netIdentity
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x1209D78", Offset = "0x1209D78", VA = "0x1209D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public bool hasAuthorityOrUnownedOnServer
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x1209DE8", Offset = "0x1209DE8", VA = "0x1209DE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EB")]
		public bool hasControl
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0x1209EDC", Offset = "0x1209EDC", VA = "0x1209EDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EC")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x120E1C0", Offset = "0x120E1C0", VA = "0x120E1C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002ED")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x120E1E8", Offset = "0x120E1E8", VA = "0x120E1E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x120E214", Offset = "0x120E214", VA = "0x120E214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EF")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x120E3DC", Offset = "0x120E3DC", VA = "0x120E3DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F0")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x120E404", Offset = "0x120E404", VA = "0x120E404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F1")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x120E430", Offset = "0x120E430", VA = "0x120E430")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x120E5C4", Offset = "0x120E5C4", VA = "0x120E5C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F3")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x120E5EC", Offset = "0x120E5EC", VA = "0x120E5EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F4")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x120E618", Offset = "0x120E618", VA = "0x120E618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x120F41C", Offset = "0x120F41C", VA = "0x120F41C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F6")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x120F444", Offset = "0x120F444", VA = "0x120F444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F7")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x120F470", Offset = "0x120F470", VA = "0x120F470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F8")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x120F4A0", Offset = "0x120F4A0", VA = "0x120F4A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x120F4C8", Offset = "0x120F4C8", VA = "0x120F4C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FA")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x120F4F4", Offset = "0x120F4F4", VA = "0x120F4F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FB")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x120C884", Offset = "0x120C884", VA = "0x120C884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x120C89C", Offset = "0x120C89C", VA = "0x120C89C")]
			set
			{
			}
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1209D70", Offset = "0x1209D70", VA = "0x1209D70")]
		public static bool validateState(StateMirror latestReceivedState, StateMirror latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1209FB4", Offset = "0x1209FB4", VA = "0x1209FB4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x120A574", Offset = "0x120A574", VA = "0x120A574")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x120A128", Offset = "0x120A128", VA = "0x120A128")]
		public void SetObjectToSync(GameObject childObjectToSync)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x120A604", Offset = "0x120A604", VA = "0x120A604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x120A83C", Offset = "0x120A83C", VA = "0x120A83C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x120A648", Offset = "0x120A648", VA = "0x120A648")]
		private void SmoothSyncUpdate()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x120C1D4", Offset = "0x120C1D4", VA = "0x120C1D4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x120C408", Offset = "0x120C408", VA = "0x120C408")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x120C4A4", Offset = "0x120C4A4", VA = "0x120C4A4")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x120C4B4", Offset = "0x120C4B4", VA = "0x120C4B4", Slot = "13")]
		public override void OnStartAuthority()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x120B380", Offset = "0x120B380", VA = "0x120B380")]
		public void ResetLocalTime()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x120C7B4", Offset = "0x120C7B4", VA = "0x120C7B4")]
		public void OnRemoteTimeReset()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x120A8A8", Offset = "0x120A8A8", VA = "0x120A8A8")]
		private void sendState()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x120A6C4", Offset = "0x120A6C4", VA = "0x120A6C4")]
		private void authorityChangeUpdate()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x120B5D0", Offset = "0x120B5D0", VA = "0x120B5D0")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x120D3D4", Offset = "0x120D3D4", VA = "0x120D3D4")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x120D70C", Offset = "0x120D70C", VA = "0x120D70C")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x120E69C", Offset = "0x120E69C", VA = "0x120E69C")]
		private void shouldTeleport(StateMirror start, ref StateMirror end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x120B184", Offset = "0x120B184", VA = "0x120B184")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x120B27C", Offset = "0x120B27C", VA = "0x120B27C")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x120E0FC", Offset = "0x120E0FC", VA = "0x120E0FC")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x120E244", Offset = "0x120E244", VA = "0x120E244")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x120E460", Offset = "0x120E460", VA = "0x120E460")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x120E648", Offset = "0x120E648", VA = "0x120E648")]
		public void setScale(Vector3 scale, bool isTeleporting)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x120B374", Offset = "0x120B374", VA = "0x120B374")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x120E7F0", Offset = "0x120E7F0", VA = "0x120E7F0")]
		public void addState(StateMirror state)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x120E7E4", Offset = "0x120E7E4", VA = "0x120E7E4")]
		public void stopLerping()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x120D3C0", Offset = "0x120D3C0", VA = "0x120D3C0")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x120E9D0", Offset = "0x120E9D0", VA = "0x120E9D0")]
		public void teleport()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x120C4DC", Offset = "0x120C4DC", VA = "0x120C4DC")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x120453C", Offset = "0x120453C", VA = "0x120453C")]
		public void teleportAnyObjectFromServer(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x120ED1C", Offset = "0x120ED1C", VA = "0x120ED1C")]
		[ClientRpc]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x120EB78", Offset = "0x120EB78", VA = "0x120EB78")]
		[Command]
		public void CmdTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x120E9D4", Offset = "0x120E9D4", VA = "0x120E9D4")]
		[ClientRpc]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x120EEA8", Offset = "0x120EEA8", VA = "0x120EEA8")]
		private void addTeleportState(StateMirror teleportState)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x120C7A8", Offset = "0x120C7A8", VA = "0x120C7A8")]
		public void forceStateSendNextFixedUpdate()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x120F18C", Offset = "0x120F18C", VA = "0x120F18C")]
		public static void AssignAuthorityCallback(NetworkConnection conn, NetworkIdentity theNetID, bool authorityState)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x120F374", Offset = "0x120F374", VA = "0x120F374", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x120F418", Offset = "0x120F418", VA = "0x120F418", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x120C2EC", Offset = "0x120C2EC", VA = "0x120C2EC")]
		public void registerClientHandlers()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x120C8C8", Offset = "0x120C8C8", VA = "0x120C8C8")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x120CA18", Offset = "0x120CA18", VA = "0x120CA18")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x120CB90", Offset = "0x120CB90", VA = "0x120CB90")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x120CCE0", Offset = "0x120CCE0", VA = "0x120CCE0")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x120CF1C", Offset = "0x120CF1C", VA = "0x120CF1C")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x120D130", Offset = "0x120D130", VA = "0x120D130")]
		[Server]
		private void SendStateToNonOwners(NetworkStateMirror state)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x120F524", Offset = "0x120F524", VA = "0x120F524")]
		private static void HandleSync(NetworkConnection conn, NetworkStateMirror networkState)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x120F6D8", Offset = "0x120F6D8", VA = "0x120F6D8")]
		public void checkIfOwnerHasChanged(StateMirror newState)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x120C8AC", Offset = "0x120C8AC", VA = "0x120C8AC")]
		public float GetNetworkSendInterval()
		{
			return default(float);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x120B430", Offset = "0x120B430", VA = "0x120B430")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x120F800", Offset = "0x120F800", VA = "0x120F800")]
		public SmoothSyncMirror()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x120F984", Offset = "0x120F984", VA = "0x120F984")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x120F988", Offset = "0x120F988", VA = "0x120F988")]
		public void UserCode_RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x120FAB4", Offset = "0x120FAB4", VA = "0x120FAB4")]
		protected static void InvokeUserCode_RpcNonServerOwnedTeleportFromServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x120FC64", Offset = "0x120FC64", VA = "0x120FC64")]
		public void UserCode_CmdTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x120FDC0", Offset = "0x120FDC0", VA = "0x120FDC0")]
		protected static void InvokeUserCode_CmdTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x120FFD8", Offset = "0x120FFD8", VA = "0x120FFD8")]
		public void UserCode_RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1210188", Offset = "0x1210188", VA = "0x1210188")]
		protected static void InvokeUserCode_RpcTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1210340", Offset = "0x1210340", VA = "0x1210340")]
		static SmoothSyncMirror()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class StateMirror
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float receivedTimestamp;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int localTimeResetIndicator;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x137DE64", Offset = "0x137DE64", VA = "0x137DE64")]
		public StateMirror()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x137DE6C", Offset = "0x137DE6C", VA = "0x137DE6C")]
		public StateMirror copyFromState(StateMirror state)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x137DEE0", Offset = "0x137DEE0", VA = "0x137DEE0")]
		public static StateMirror Lerp(StateMirror targetTempStateMirror, StateMirror start, StateMirror end, float t)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x137E0E8", Offset = "0x137E0E8", VA = "0x137E0E8")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x137E1C8", Offset = "0x137E1C8", VA = "0x137E1C8")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public struct NetworkStateMirror : NetworkMessage
	{
		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SmoothSyncMirror smoothSync;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public StateMirror state;

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1209D3C", Offset = "0x1209D3C", VA = "0x1209D3C")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x200042E")]
	public static class SyncProjectilesMessageFunctions
	{
		[Token(Token = "0x40018AF")]
		private const byte positionMask = 1;

		[Token(Token = "0x40018B0")]
		private const byte rotationMask = 2;

		[Token(Token = "0x40018B1")]
		private const byte scaleMask = 4;

		[Token(Token = "0x40018B2")]
		private const byte velocityMask = 8;

		[Token(Token = "0x40018B3")]
		private const byte angularVelocityMask = 16;

		[Token(Token = "0x40018B4")]
		private const byte atPositionalRestMask = 64;

		[Token(Token = "0x40018B5")]
		private const byte atRotationalRestMask = 128;

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x137E3A8", Offset = "0x137E3A8", VA = "0x137E3A8")]
		public static void Serialize(this NetworkWriter writer, NetworkStateMirror msg)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x137F2B4", Offset = "0x137F2B4", VA = "0x137F2B4")]
		public static NetworkStateMirror Deserialize(this NetworkReader reader)
		{
			return default(NetworkStateMirror);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x137F190", Offset = "0x137F190", VA = "0x137F190")]
		private static byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1380754", Offset = "0x1380754", VA = "0x1380754")]
		private static bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x138075C", Offset = "0x138075C", VA = "0x138075C")]
		private static bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1380764", Offset = "0x1380764", VA = "0x1380764")]
		private static bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x138076C", Offset = "0x138076C", VA = "0x138076C")]
		private static bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1380774", Offset = "0x1380774", VA = "0x1380774")]
		private static bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x138077C", Offset = "0x138077C", VA = "0x138077C")]
		private static bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1380784", Offset = "0x1380784", VA = "0x1380784")]
		private static bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Serializable]
	[Token(Token = "0x200042F")]
	public struct Half : IComparable, IFormattable, IConvertible, IComparable<Half>, IEquatable<Half>
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xF33CFC", Offset = "0xF33CFC")]
		public ushort internalValue;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Half Epsilon;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly Half MaxValue;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Half MinValue;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly Half NaN;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Half NegativeInfinity;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly Half PositiveInfinity;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x138C188", Offset = "0x138C188", VA = "0x138C188")]
		public Half(float value)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x138C300", Offset = "0x138C300", VA = "0x138C300")]
		public Half(int value)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x138C308", Offset = "0x138C308", VA = "0x138C308")]
		public Half(long value)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x138C310", Offset = "0x138C310", VA = "0x138C310")]
		public Half(double value)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x138C318", Offset = "0x138C318", VA = "0x138C318")]
		public Half(decimal value)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x138C39C", Offset = "0x138C39C", VA = "0x138C39C")]
		public Half(uint value)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x138C3A8", Offset = "0x138C3A8", VA = "0x138C3A8")]
		public Half(ulong value)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x138C3B4", Offset = "0x138C3B4", VA = "0x138C3B4")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x138C48C", Offset = "0x138C48C", VA = "0x138C48C")]
		public static Half Add(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x138C5AC", Offset = "0x138C5AC", VA = "0x138C5AC")]
		public static Half Subtract(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x138C6CC", Offset = "0x138C6CC", VA = "0x138C6CC")]
		public static Half Multiply(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x138C7EC", Offset = "0x138C7EC", VA = "0x138C7EC")]
		public static Half Divide(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x138C90C", Offset = "0x138C90C", VA = "0x138C90C")]
		public static Half operator +(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x138C420", Offset = "0x138C420", VA = "0x138C420")]
		public static Half operator -(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x138C97C", Offset = "0x138C97C", VA = "0x138C97C")]
		public static Half operator ++(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x138CA90", Offset = "0x138CA90", VA = "0x138CA90")]
		public static Half operator --(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x138C508", Offset = "0x138C508", VA = "0x138C508")]
		public static Half operator +(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x138C628", Offset = "0x138C628", VA = "0x138C628")]
		public static Half operator -(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x138C748", Offset = "0x138C748", VA = "0x138C748")]
		public static Half operator *(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x138C868", Offset = "0x138C868", VA = "0x138C868")]
		public static Half operator /(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x138CB18", Offset = "0x138CB18", VA = "0x138CB18")]
		public static bool operator ==(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x138CC10", Offset = "0x138CC10", VA = "0x138CC10")]
		public static bool operator !=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x138CC20", Offset = "0x138CC20", VA = "0x138CC20")]
		public static bool operator <(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x138CCB0", Offset = "0x138CCB0", VA = "0x138CCB0")]
		public static bool operator >(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x138CD40", Offset = "0x138CD40", VA = "0x138CD40")]
		public static bool operator <=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x138CDF8", Offset = "0x138CDF8", VA = "0x138CDF8")]
		public static bool operator >=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x138CEB0", Offset = "0x138CEB0", VA = "0x138CEB0")]
		public static implicit operator Half(byte value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x138CEE0", Offset = "0x138CEE0", VA = "0x138CEE0")]
		public static implicit operator Half(short value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x138CF10", Offset = "0x138CF10", VA = "0x138CF10")]
		public static implicit operator Half(char value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x138CF40", Offset = "0x138CF40", VA = "0x138CF40")]
		public static implicit operator Half(int value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x138CF6C", Offset = "0x138CF6C", VA = "0x138CF6C")]
		public static implicit operator Half(long value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x138CA68", Offset = "0x138CA68", VA = "0x138CA68")]
		public static explicit operator Half(float value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x138CF98", Offset = "0x138CF98", VA = "0x138CF98")]
		public static explicit operator Half(double value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x138CFC4", Offset = "0x138CFC4", VA = "0x138CFC4")]
		public static explicit operator Half(decimal value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x138D050", Offset = "0x138D050", VA = "0x138D050")]
		public static explicit operator byte(Half value)
		{
			return default(byte);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x138D0C4", Offset = "0x138D0C4", VA = "0x138D0C4")]
		public static explicit operator char(Half value)
		{
			return default(char);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x138D138", Offset = "0x138D138", VA = "0x138D138")]
		public static explicit operator short(Half value)
		{
			return default(short);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x138D1BC", Offset = "0x138D1BC", VA = "0x138D1BC")]
		public static explicit operator int(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x138D240", Offset = "0x138D240", VA = "0x138D240")]
		public static explicit operator long(Half value)
		{
			return default(long);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x138CA04", Offset = "0x138CA04", VA = "0x138CA04")]
		public static implicit operator float(Half value)
		{
			return default(float);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x138D3A0", Offset = "0x138D3A0", VA = "0x138D3A0")]
		public static implicit operator double(Half value)
		{
			return default(double);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x138D40C", Offset = "0x138D40C", VA = "0x138D40C")]
		public static explicit operator decimal(Half value)
		{
			return default(decimal);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x138D4A8", Offset = "0x138D4A8", VA = "0x138D4A8")]
		public static implicit operator Half(sbyte value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x138D4D8", Offset = "0x138D4D8", VA = "0x138D4D8")]
		public static implicit operator Half(ushort value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x138D508", Offset = "0x138D508", VA = "0x138D508")]
		public static implicit operator Half(uint value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x138D538", Offset = "0x138D538", VA = "0x138D538")]
		public static implicit operator Half(ulong value)
		{
			return default(Half);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x138D568", Offset = "0x138D568", VA = "0x138D568")]
		public static explicit operator sbyte(Half value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x138D5EC", Offset = "0x138D5EC", VA = "0x138D5EC")]
		public static explicit operator ushort(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x138D660", Offset = "0x138D660", VA = "0x138D660")]
		public static explicit operator uint(Half value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x138D6D8", Offset = "0x138D6D8", VA = "0x138D6D8")]
		public static explicit operator ulong(Half value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x138D750", Offset = "0x138D750", VA = "0x138D750", Slot = "23")]
		public int CompareTo(Half other)
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x138D894", Offset = "0x138D894", VA = "0x138D894", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x138D95C", Offset = "0x138D95C", VA = "0x138D95C", Slot = "24")]
		public bool Equals(Half other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x138DA40", Offset = "0x138DA40", VA = "0x138DA40", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x138DB40", Offset = "0x138DB40", VA = "0x138DB40", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x138DB48", Offset = "0x138DB48", VA = "0x138DB48")]
		public TypeCode GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x138DB50", Offset = "0x138DB50", VA = "0x138DB50")]
		public static byte[] GetBytes(Half value)
		{
			return null;
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x138DBB8", Offset = "0x138DBB8", VA = "0x138DBB8")]
		public static ushort GetBits(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x138DBBC", Offset = "0x138DBBC", VA = "0x138DBBC")]
		public static Half ToHalf(byte[] value, int startIndex)
		{
			return default(Half);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x138DC64", Offset = "0x138DC64", VA = "0x138DC64")]
		public static Half ToHalf(ushort bits)
		{
			return default(Half);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x138DC6C", Offset = "0x138DC6C", VA = "0x138DC6C")]
		public static int Sign(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x138DDBC", Offset = "0x138DDBC", VA = "0x138DDBC")]
		public static Half Abs(Half value)
		{
			return default(Half);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x138DE8C", Offset = "0x138DE8C", VA = "0x138DE8C")]
		public static Half Max(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x138DF10", Offset = "0x138DF10", VA = "0x138DF10")]
		public static Half Min(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x138CBA0", Offset = "0x138CBA0", VA = "0x138CBA0")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x138DFA8", Offset = "0x138DFA8", VA = "0x138DFA8")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x138E02C", Offset = "0x138E02C", VA = "0x138E02C")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x138E0B0", Offset = "0x138E0B0", VA = "0x138E0B0")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x138E134", Offset = "0x138E134", VA = "0x138E134")]
		public static Half Parse(string value)
		{
			return default(Half);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x138E1EC", Offset = "0x138E1EC", VA = "0x138E1EC")]
		public static Half Parse(string value, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x138E290", Offset = "0x138E290", VA = "0x138E290")]
		public static Half Parse(string value, NumberStyles style)
		{
			return default(Half);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x138E360", Offset = "0x138E360", VA = "0x138E360")]
		public static Half Parse(string value, NumberStyles style, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x138E404", Offset = "0x138E404", VA = "0x138E404")]
		public static bool TryParse(string value, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x138E4C4", Offset = "0x138E4C4", VA = "0x138E4C4")]
		public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x138E59C", Offset = "0x138E59C", VA = "0x138E59C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x138E650", Offset = "0x138E650", VA = "0x138E650")]
		public string ToString(IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x138E6E0", Offset = "0x138E6E0", VA = "0x138E6E0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x138E79C", Offset = "0x138E79C", VA = "0x138E79C", Slot = "5")]
		public string ToString(string format, IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x138E83C", Offset = "0x138E83C", VA = "0x138E83C", Slot = "17")]
		private float System.IConvertible.ToSingle(IFormatProvider provider)
		{
			return default(float);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x138E8A4", Offset = "0x138E8A4", VA = "0x138E8A4", Slot = "6")]
		private TypeCode System.IConvertible.GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x138E8AC", Offset = "0x138E8AC", VA = "0x138E8AC", Slot = "7")]
		private bool System.IConvertible.ToBoolean(IFormatProvider provider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x138E94C", Offset = "0x138E94C", VA = "0x138E94C", Slot = "10")]
		private byte System.IConvertible.ToByte(IFormatProvider provider)
		{
			return default(byte);
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x138E9EC", Offset = "0x138E9EC", VA = "0x138E9EC", Slot = "8")]
		private char System.IConvertible.ToChar(IFormatProvider provider)
		{
			return default(char);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x138EAAC", Offset = "0x138EAAC", VA = "0x138EAAC", Slot = "20")]
		private DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x138EB6C", Offset = "0x138EB6C", VA = "0x138EB6C", Slot = "19")]
		private decimal System.IConvertible.ToDecimal(IFormatProvider provider)
		{
			return default(decimal);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x138EC0C", Offset = "0x138EC0C", VA = "0x138EC0C", Slot = "18")]
		private double System.IConvertible.ToDouble(IFormatProvider provider)
		{
			return default(double);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x138ECAC", Offset = "0x138ECAC", VA = "0x138ECAC", Slot = "11")]
		private short System.IConvertible.ToInt16(IFormatProvider provider)
		{
			return default(short);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x138ED4C", Offset = "0x138ED4C", VA = "0x138ED4C", Slot = "13")]
		private int System.IConvertible.ToInt32(IFormatProvider provider)
		{
			return default(int);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x138EDEC", Offset = "0x138EDEC", VA = "0x138EDEC", Slot = "15")]
		private long System.IConvertible.ToInt64(IFormatProvider provider)
		{
			return default(long);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x138EE8C", Offset = "0x138EE8C", VA = "0x138EE8C", Slot = "9")]
		private sbyte System.IConvertible.ToSByte(IFormatProvider provider)
		{
			return default(sbyte);
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x138EF2C", Offset = "0x138EF2C", VA = "0x138EF2C", Slot = "21")]
		private string System.IConvertible.ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x138F000", Offset = "0x138F000", VA = "0x138F000", Slot = "22")]
		private object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x138F0D4", Offset = "0x138F0D4", VA = "0x138F0D4", Slot = "12")]
		private ushort System.IConvertible.ToUInt16(IFormatProvider provider)
		{
			return default(ushort);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x138F174", Offset = "0x138F174", VA = "0x138F174", Slot = "14")]
		private uint System.IConvertible.ToUInt32(IFormatProvider provider)
		{
			return default(uint);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x138F214", Offset = "0x138F214", VA = "0x138F214", Slot = "16")]
		private ulong System.IConvertible.ToUInt64(IFormatProvider provider)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000430")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x2000431")]
		private struct UIntFloat
		{
			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x138F354", Offset = "0x138F354", VA = "0x138F354")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x138F3D0", Offset = "0x138F3D0", VA = "0x138F3D0")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x138F444", Offset = "0x138F444", VA = "0x138F444")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x138F474", Offset = "0x138F474", VA = "0x138F474")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x138F58C", Offset = "0x138F58C", VA = "0x138F58C")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x138F684", Offset = "0x138F684", VA = "0x138F684")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x138F750", Offset = "0x138F750", VA = "0x138F750")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x138F8A0", Offset = "0x138F8A0", VA = "0x138F8A0")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x138D2C4", Offset = "0x138D2C4", VA = "0x138D2C4")]
		public static float HalfToSingle(Half half)
		{
			return default(float);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x138C200", Offset = "0x138C200", VA = "0x138C200")]
		public static Half SingleToHalf(float single)
		{
			return default(Half);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1380794", Offset = "0x1380794", VA = "0x1380794")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x137F1E4", Offset = "0x137F1E4", VA = "0x137F1E4")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x138C914", Offset = "0x138C914", VA = "0x138C914")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x138DE28", Offset = "0x138DE28", VA = "0x138DE28")]
		public static Half Abs(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x138DF94", Offset = "0x138DF94", VA = "0x138DF94")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x138E018", Offset = "0x138E018", VA = "0x138E018")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x138E120", Offset = "0x138E120", VA = "0x138E120")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x138E09C", Offset = "0x138E09C", VA = "0x138E09C")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}
	}
}
namespace Mirror
{
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2C650", Offset = "0xF2C650")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C650", Offset = "0xF2C650")]
	public class NobleRoomManager : NobleNetworkManager
	{
		[Token(Token = "0x2000433")]
		public struct PendingPlayer
		{
			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkConnection conn;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject roomPlayer;
		}

		[Serializable]
		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C6B0", Offset = "0xF2C6B0")]
		private sealed class <>c
		{
			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<int, NetworkConnectionToClient>, bool> <>9__13_0;

			[Token(Token = "0x6001973")]
			[Address(RVA = "0x12A41BC", Offset = "0x12A41BC", VA = "0x12A41BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0x12A41C4", Offset = "0x12A41C4", VA = "0x12A41C4")]
			internal bool <CheckReadyToBegin>b__13_0(KeyValuePair<int, NetworkConnectionToClient> conn)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF33D10", Offset = "0xF33D10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF33D10", Offset = "0xF33D10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33D10", Offset = "0xF33D10")]
		internal bool showRoomGUI;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF33DA4", Offset = "0xF33DA4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33DA4", Offset = "0xF33DA4")]
		private int minPlayers;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF33E14", Offset = "0xF33E14")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33E14", Offset = "0xF33E14")]
		protected NobleRoomPlayer roomPlayerPrefab;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Scene]
		public string RoomScene;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Scene]
		public string GameplayScene;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xF33EA4", Offset = "0xF33EA4")]
		public List<PendingPlayer> pendingPlayers;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF33EDC", Offset = "0xF33EDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33EDC", Offset = "0xF33EDC")]
		public bool allPlayersReady;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33F3C", Offset = "0xF33F3C")]
		public List<NobleRoomPlayer> roomSlots;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x12A18F0", Offset = "0x12A18F0", VA = "0x12A18F0", Slot = "4")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x12A1A60", Offset = "0x12A1A60", VA = "0x12A1A60")]
		internal void ReadyStatusChanged()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x12A1D84", Offset = "0x12A1D84", VA = "0x12A1D84", Slot = "14")]
		public override void OnServerReady(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x12A1F30", Offset = "0x12A1F30", VA = "0x12A1F30")]
		private void SceneLoadedForPlayer(NetworkConnection conn, GameObject roomPlayer)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x12A1BC4", Offset = "0x12A1BC4", VA = "0x12A1BC4")]
		public void CheckReadyToBegin()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x12A2384", Offset = "0x12A2384", VA = "0x12A2384")]
		private void CallOnClientEnterRoom()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x12A24E0", Offset = "0x12A24E0", VA = "0x12A24E0")]
		private void CallOnClientExitRoom()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x12A263C", Offset = "0x12A263C", VA = "0x12A263C", Slot = "12")]
		public override void OnServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x12A2798", Offset = "0x12A2798", VA = "0x12A2798", Slot = "13")]
		public override void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x12A2D6C", Offset = "0x12A2D6C", VA = "0x12A2D6C", Slot = "15")]
		public override void OnServerAddPlayer(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x12A2C48", Offset = "0x12A2C48", VA = "0x12A2C48")]
		public void RecalculateRoomPlayerIndices()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x12A31B8", Offset = "0x12A31B8", VA = "0x12A31B8", Slot = "11")]
		public override void ServerChangeScene(string newSceneName)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x12A3454", Offset = "0x12A3454", VA = "0x12A3454", Slot = "18")]
		public override void OnServerSceneChanged(string sceneName)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x12A3598", Offset = "0x12A3598", VA = "0x12A3598", Slot = "26")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x12A388C", Offset = "0x12A388C", VA = "0x12A388C", Slot = "25")]
		public override void OnStartHost()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x12A389C", Offset = "0x12A389C", VA = "0x12A389C", Slot = "28")]
		public override void OnStopServer()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x12A3908", Offset = "0x12A3908", VA = "0x12A3908", Slot = "30")]
		public override void OnStopHost()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x12A3918", Offset = "0x12A3918", VA = "0x12A3918", Slot = "27")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x12A3B04", Offset = "0x12A3B04", VA = "0x12A3B04", Slot = "19")]
		public override void OnClientConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x12A3B48", Offset = "0x12A3B48", VA = "0x12A3B48", Slot = "20")]
		public override void OnClientDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x12A3BBC", Offset = "0x12A3BBC", VA = "0x12A3BBC", Slot = "29")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x12A3C30", Offset = "0x12A3C30", VA = "0x12A3C30", Slot = "24")]
		public override void OnClientSceneChanged(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x12A3D14", Offset = "0x12A3D14", VA = "0x12A3D14", Slot = "35")]
		public virtual void OnRoomStartHost()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x12A3D18", Offset = "0x12A3D18", VA = "0x12A3D18", Slot = "36")]
		public virtual void OnRoomStopHost()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x12A3D1C", Offset = "0x12A3D1C", VA = "0x12A3D1C", Slot = "37")]
		public virtual void OnRoomStartServer()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x12A3D20", Offset = "0x12A3D20", VA = "0x12A3D20", Slot = "38")]
		public virtual void OnRoomStopServer()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x12A3D24", Offset = "0x12A3D24", VA = "0x12A3D24", Slot = "39")]
		public virtual void OnRoomServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x12A3D28", Offset = "0x12A3D28", VA = "0x12A3D28", Slot = "40")]
		public virtual void OnRoomServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x12A3D2C", Offset = "0x12A3D2C", VA = "0x12A3D2C", Slot = "41")]
		public virtual void OnRoomServerSceneChanged(string sceneName)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x12A3D30", Offset = "0x12A3D30", VA = "0x12A3D30", Slot = "42")]
		public virtual GameObject OnRoomServerCreateRoomPlayer(NetworkConnection conn)
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x12A3D38", Offset = "0x12A3D38", VA = "0x12A3D38", Slot = "43")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xF3BEAC", Offset = "0xF3BEAC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xF3BEAC", Offset = "0xF3BEAC")]
		public virtual GameObject OnRoomServerCreateGamePlayer(NetworkConnection conn)
		{
			return null;
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x12A3D40", Offset = "0x12A3D40", VA = "0x12A3D40", Slot = "44")]
		public virtual GameObject OnRoomServerCreateGamePlayer(NetworkConnection conn, GameObject roomPlayer)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x12A3D48", Offset = "0x12A3D48", VA = "0x12A3D48", Slot = "45")]
		public virtual void OnRoomServerAddPlayer(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x12A3D50", Offset = "0x12A3D50", VA = "0x12A3D50", Slot = "46")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xF3BF00", Offset = "0xF3BF00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xF3BF00", Offset = "0xF3BF00")]
		public virtual bool OnRoomServerSceneLoadedForPlayer(GameObject roomPlayer, GameObject gamePlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x12A3D58", Offset = "0x12A3D58", VA = "0x12A3D58", Slot = "47")]
		public virtual bool OnRoomServerSceneLoadedForPlayer(NetworkConnection conn, GameObject roomPlayer, GameObject gamePlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x12A3D60", Offset = "0x12A3D60", VA = "0x12A3D60", Slot = "48")]
		public virtual void OnRoomServerPlayersReady()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x12A3D70", Offset = "0x12A3D70", VA = "0x12A3D70", Slot = "49")]
		public virtual void OnRoomClientEnter()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x12A3D74", Offset = "0x12A3D74", VA = "0x12A3D74", Slot = "50")]
		public virtual void OnRoomClientExit()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x12A3D78", Offset = "0x12A3D78", VA = "0x12A3D78", Slot = "51")]
		public virtual void OnRoomClientConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x12A3D7C", Offset = "0x12A3D7C", VA = "0x12A3D7C", Slot = "52")]
		public virtual void OnRoomClientDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x12A3D80", Offset = "0x12A3D80", VA = "0x12A3D80", Slot = "53")]
		public virtual void OnRoomStartClient()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x12A3D84", Offset = "0x12A3D84", VA = "0x12A3D84", Slot = "54")]
		public virtual void OnRoomStopClient()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x12A3D88", Offset = "0x12A3D88", VA = "0x12A3D88", Slot = "55")]
		public virtual void OnRoomClientSceneChanged(NetworkConnection conn)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x12A3D8C", Offset = "0x12A3D8C", VA = "0x12A3D8C", Slot = "56")]
		public virtual void OnRoomClientAddPlayerFailed()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x12A3D90", Offset = "0x12A3D90", VA = "0x12A3D90", Slot = "57")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x12A402C", Offset = "0x12A402C", VA = "0x12A402C")]
		public NobleRoomManager()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xF2C6C0", Offset = "0xF2C6C0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C6C0", Offset = "0xF2C6C0")]
	public class NobleRoomPlayer : NetworkBehaviour
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33F74", Offset = "0xF33F74")]
		public bool showRoomGUI;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF33FAC", Offset = "0xF33FAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF33FAC", Offset = "0xF33FAC")]
		[SyncVar]
		public bool readyToBegin;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34034", Offset = "0xF34034")]
		[SyncVar]
		public int index;

		[Token(Token = "0x170002FC")]
		public bool NetworkreadyToBegin
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x12A4BF0", Offset = "0x12A4BF0", VA = "0x12A4BF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x12A2B28", Offset = "0x12A2B28", VA = "0x12A2B28")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public int Networkindex
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x12A4BF8", Offset = "0x12A4BF8", VA = "0x12A4BF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x12A311C", Offset = "0x12A311C", VA = "0x12A311C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x12A4248", Offset = "0x12A4248", VA = "0x12A4248")]
		public void Start()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x12A43F0", Offset = "0x12A43F0", VA = "0x12A43F0")]
		[Command]
		public void CmdChangeReadyState(bool readyState)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x12A4504", Offset = "0x12A4504", VA = "0x12A4504")]
		private void ReadyStateChanged(bool _, bool newReadyState)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x12A451C", Offset = "0x12A451C", VA = "0x12A451C", Slot = "15")]
		public virtual void OnClientEnterRoom()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x12A4520", Offset = "0x12A4520", VA = "0x12A4520", Slot = "16")]
		public virtual void OnClientExitRoom()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x12A4524", Offset = "0x12A4524", VA = "0x12A4524", Slot = "17")]
		public virtual void OnClientReady(bool readyState)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x12A4528", Offset = "0x12A4528", VA = "0x12A4528", Slot = "18")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x12A46A8", Offset = "0x12A46A8", VA = "0x12A46A8")]
		private void DrawPlayerReadyState()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x12A49D4", Offset = "0x12A49D4", VA = "0x12A49D4")]
		private void DrawPlayerReadyButton()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x12A4B7C", Offset = "0x12A4B7C", VA = "0x12A4B7C")]
		public NobleRoomPlayer()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x12A4BEC", Offset = "0x12A4BEC", VA = "0x12A4BEC")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x12A4C00", Offset = "0x12A4C00", VA = "0x12A4C00")]
		public void UserCode_CmdChangeReadyState(bool readyState)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x12A4D50", Offset = "0x12A4D50", VA = "0x12A4D50")]
		protected static void InvokeUserCode_CmdChangeReadyState(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x12A4EC0", Offset = "0x12A4EC0", VA = "0x12A4EC0")]
		static NobleRoomPlayer()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x12A4FA4", Offset = "0x12A4FA4", VA = "0x12A4FA4", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x12A5108", Offset = "0x12A5108", VA = "0x12A5108", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
}
namespace NobleConnect
{
	[Token(Token = "0x2000436")]
	public class NobleConnectSettings : ScriptableObject
	{
		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34080", Offset = "0xF34080")]
		public string gameID;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ushort relayServerPort;

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x12B62A8", Offset = "0x12B62A8", VA = "0x12B62A8")]
		public NobleConnectSettings()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class UnityLogger
	{
		[Token(Token = "0x600198A")]
		[Address(RVA = "0x12B62B8", Offset = "0x12B62B8", VA = "0x12B62B8")]
		public static void Init()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x12B63BC", Offset = "0x12B63BC", VA = "0x12B63BC")]
		public UnityLogger()
		{
		}
	}
}
namespace NobleConnect.Mirror
{
	[Token(Token = "0x2000438")]
	public class GUILabelFromText : MonoBehaviour
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset textFile;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D textBackground;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 position;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string text;

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x12B0018", Offset = "0x12B0018", VA = "0x12B0018")]
		private void Start()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x12B004C", Offset = "0x12B004C", VA = "0x12B004C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x12B0334", Offset = "0x12B0334", VA = "0x12B0334")]
		public GUILabelFromText()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class NobleClient
	{
		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C730", Offset = "0xF2C730")]
		private sealed class <>c__DisplayClass45_0<T> where T : struct, NetworkMessage
		{
			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NobleClient <>4__this;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<NetworkConnection, T> handler;

			[Token(Token = "0x60019B4")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60019B5")]
			internal void <RegisterHandler>b__0(NetworkConnection conn, ConnectMessage msg)
			{
			}

			[Token(Token = "0x60019B6")]
			internal void <RegisterHandler>b__1(NetworkConnection conn, DisconnectMessage msg)
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C740", Offset = "0xF2C740")]
		private sealed class <>c__DisplayClass46_0<T> where T : struct, NetworkMessage
		{
			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NobleClient <>4__this;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> handler;

			[Token(Token = "0x60019B7")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60019B8")]
			internal void <RegisterHandler>b__0(NetworkConnection conn, ConnectMessage msg)
			{
			}

			[Token(Token = "0x60019B9")]
			internal void <RegisterHandler>b__1(NetworkConnection conn, DisconnectMessage msg)
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C750", Offset = "0xF2C750")]
		private sealed class <>c__DisplayClass47_0<T> where T : struct, NetworkMessage
		{
			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NobleClient <>4__this;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<NetworkConnection, T> handler;

			[Token(Token = "0x60019BA")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60019BB")]
			internal void <ReplaceHandler>b__0(NetworkConnection conn, ConnectMessage msg)
			{
			}

			[Token(Token = "0x60019BC")]
			internal void <ReplaceHandler>b__1(NetworkConnection conn, DisconnectMessage msg)
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C760", Offset = "0xF2C760")]
		private sealed class <>c__DisplayClass48_0<T> where T : struct, NetworkMessage
		{
			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NobleClient <>4__this;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> handler;

			[Token(Token = "0x60019BD")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60019BE")]
			internal void <ReplaceHandler>b__0(NetworkConnection conn, ConnectMessage msg)
			{
			}

			[Token(Token = "0x60019BF")]
			internal void <ReplaceHandler>b__1(NetworkConnection conn, DisconnectMessage msg)
			{
			}
		}

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConnectionType _latestConnectionType;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isConnecting;

		[Token(Token = "0x40018DC")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must download and install a UDP transport in order to use Mirror with NobleConnect.\nI recommend LiteNet: https://github.com/MirrorNetworking/LiteNetLibTransport/";

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool ForceRelayOnly;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<string> onFatalError;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint hostBridgeEndPoint;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Peer baseClient;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IceConfig nobleConfig;

		[Token(Token = "0x170002FE")]
		public ConnectionType latestConnectionType
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x12B033C", Offset = "0x12B033C", VA = "0x12B033C")]
			get
			{
				return default(ConnectionType);
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x12B0358", Offset = "0x12B0358", VA = "0x12B0358")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public NetworkConnection connection
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x12B16CC", Offset = "0x12B16CC", VA = "0x12B16CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public bool active
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x12B1770", Offset = "0x12B1770", VA = "0x12B1770")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		public bool isConnected
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x12B0DA8", Offset = "0x12B0DA8", VA = "0x12B0DA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000302")]
		public bool isLocalClient
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x12B17D0", Offset = "0x12B17D0", VA = "0x12B17D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x12B0360", Offset = "0x12B0360", VA = "0x12B0360")]
		public NobleClient(GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string> onFatalError, int relayLifetime = 60, int relayRefreshTime = 30, float allocationResendTimeout = 0.1f, int maxAllocationResends = 8)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x12B0838", Offset = "0x12B0838", VA = "0x12B0838")]
		public NobleClient()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x12B08A8", Offset = "0x12B08A8", VA = "0x12B08A8")]
		public NobleClient(string relayServerAddress, [Optional] Action<string> onFatalError, int relayLifetime = 60, int relayRefreshTime = 30, float allocationResendTimeout = 0.1f, int maxAllocationResends = 8)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x12B0B64", Offset = "0x12B0B64", VA = "0x12B0B64")]
		public void PrepareToConnect()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x12B0B94", Offset = "0x12B0B94", VA = "0x12B0B94")]
		public void Update()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x12B0BAC", Offset = "0x12B0BAC", VA = "0x12B0BAC")]
		public void Connect(string hostIP, ushort hostPort, bool isLANOnly = false)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x12B0C6C", Offset = "0x12B0C6C", VA = "0x12B0C6C")]
		public void Connect(IPEndPoint hostEndPoint, bool isLANOnly = false)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x12B0E08", Offset = "0x12B0E08", VA = "0x12B0E08")]
		public void SetConnectPort(ushort port)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x12B104C", Offset = "0x12B104C", VA = "0x12B104C")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x12B10D8", Offset = "0x12B10D8", VA = "0x12B10D8")]
		public void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x12B1164", Offset = "0x12B1164", VA = "0x12B1164")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x12B0648", Offset = "0x12B0648", VA = "0x12B0648")]
		private void Init()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x12B116C", Offset = "0x12B116C", VA = "0x12B116C")]
		private void CancelConnection()
		{
		}

		[Token(Token = "0x600199E")]
		public bool InvokeHandler<T>(T msg, int channelId) where T : struct, NetworkMessage
		{
			return default(bool);
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x12B11F4", Offset = "0x12B11F4", VA = "0x12B11F4")]
		internal bool InvokeHandler(int msgType, NetworkReader reader, int channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x12B14CC", Offset = "0x12B14CC", VA = "0x12B14CC")]
		private void OnFatalError(string errorString)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x12B1598", Offset = "0x12B1598", VA = "0x12B1598")]
		private void OnReadyToConnect(IPEndPoint bridgeEndPoint, IPEndPoint bridgeEndPointIPv6)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x12B1688", Offset = "0x12B1688", VA = "0x12B1688")]
		private void OnClientConnect(NetworkConnection conn, ConnectMessage message)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x12B16B0", Offset = "0x12B16B0", VA = "0x12B16B0")]
		private void OnClientDisconnect(NetworkConnection conn, DisconnectMessage message)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x12B1830", Offset = "0x12B1830", VA = "0x12B1830")]
		public void Connect(string address)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x12B1898", Offset = "0x12B1898", VA = "0x12B1898")]
		public void Connect(Uri uri)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x12B1900", Offset = "0x12B1900", VA = "0x12B1900")]
		public void ConnectHost()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x12B1960", Offset = "0x12B1960", VA = "0x12B1960")]
		public void ConnectLocalServer()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x12B19C0", Offset = "0x12B19C0", VA = "0x12B19C0")]
		public void DisconnectLocalServer()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x12B1A20", Offset = "0x12B1A20", VA = "0x12B1A20")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60019AE")]
		public void Send<T>(T message, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x60019AF")]
		public void RegisterHandler<T>(Action<NetworkConnection, T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x60019B0")]
		public void RegisterHandler<T>(Action<T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x60019B1")]
		public void ReplaceHandler<T>(Action<NetworkConnection, T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x60019B2")]
		public void ReplaceHandler<T>(Action<T> handler, bool requireAuthentication = true) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x60019B3")]
		public bool UnregisterHandler<T>() where T : struct, NetworkMessage
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200043E")]
	public class NobleNetworkManager : NetworkManager
	{
		[Serializable]
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C770", Offset = "0xF2C770")]
		private sealed class <>c
		{
			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__20_0;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<string> <>9__21_0;

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x12B4350", Offset = "0x12B4350", VA = "0x12B4350")]
			public <>c()
			{
			}

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x12B4358", Offset = "0x12B4358", VA = "0x12B4358")]
			internal bool <Awake>b__20_0(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x12B43AC", Offset = "0x12B43AC", VA = "0x12B43AC")]
			internal bool <Start>b__21_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C780", Offset = "0xF2C780")]
		private sealed class <CleanUpStoppedServer>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E6")]
				[Address(RVA = "0x12B45DC", Offset = "0x12B45DC", VA = "0x12B45DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E8")]
				[Address(RVA = "0x12B4644", Offset = "0x12B4644", VA = "0x12B4644", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x12B3940", Offset = "0x12B3940", VA = "0x12B3940")]
			[DebuggerHidden]
			public <CleanUpStoppedServer>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x12B4520", Offset = "0x12B4520", VA = "0x12B4520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x12B4524", Offset = "0x12B4524", VA = "0x12B4524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x12B45E4", Offset = "0x12B45E4", VA = "0x12B45E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C790", Offset = "0xF2C790")]
		private sealed class <CleanUpStoppedClient>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NobleNetworkManager <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019EC")]
				[Address(RVA = "0x12B44B0", Offset = "0x12B44B0", VA = "0x12B44B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019EE")]
				[Address(RVA = "0x12B4518", Offset = "0x12B4518", VA = "0x12B4518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x12B3A14", Offset = "0x12B3A14", VA = "0x12B3A14")]
			[DebuggerHidden]
			public <CleanUpStoppedClient>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x12B4400", Offset = "0x12B4400", VA = "0x12B4400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x12B4404", Offset = "0x12B4404", VA = "0x12B4404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x12B44B8", Offset = "0x12B44B8", VA = "0x12B44B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C7A0", Offset = "0xF2C7A0")]
		private sealed class <StopClientAfterDelay>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NobleNetworkManager <>4__this;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkConnection conn;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019F2")]
				[Address(RVA = "0x12B4738", Offset = "0x12B4738", VA = "0x12B4738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019F4")]
				[Address(RVA = "0x12B47A0", Offset = "0x12B47A0", VA = "0x12B47A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x12B3F6C", Offset = "0x12B3F6C", VA = "0x12B3F6C")]
			[DebuggerHidden]
			public <StopClientAfterDelay>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x12B464C", Offset = "0x12B464C", VA = "0x12B464C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x12B4650", Offset = "0x12B4650", VA = "0x12B4650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x12B4740", Offset = "0x12B4740", VA = "0x12B4740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NobleClient client;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int networkPort;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF340C8", Offset = "0xF340C8")]
		public GeographicRegion region;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34100", Offset = "0xF34100")]
		public bool forceRelayConnection;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Logger.Level logLevel;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int relayRefreshTime;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float relayRefreshTimeout;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int maxRelayRefreshAttempts;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int relayLifetime;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MethodInfo registerClientMessagesMethod;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PropertyInfo modeProperty;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MethodInfo initSingletonMethod;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private UnityAction<NetworkConnection> onClientAuthenticated;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action<NetworkConnection, ConnectMessage> onClientConnectInternal;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action<NetworkConnection, DisconnectMessage> onClientDisconnectInternal;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool isDisconnecting;

		[Token(Token = "0x40018FA")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must download and install a UDP transport in order to use Mirror with NobleConnect.\nI recommend LiteNet: https://github.com/MirrorNetworking/LiteNetLibTransport/";

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool isLANOnly;

		[Token(Token = "0x17000303")]
		public IPEndPoint HostEndPoint
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x12B1A80", Offset = "0x12B1A80", VA = "0x12B1A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x12B1BAC", Offset = "0x12B1BAC", VA = "0x12B1BAC", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x12B2144", Offset = "0x12B2144", VA = "0x12B2144", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x12B23F0", Offset = "0x12B23F0", VA = "0x12B23F0", Slot = "31")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x12B25F0", Offset = "0x12B25F0", VA = "0x12B25F0")]
		public void InitClient()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x12B233C", Offset = "0x12B233C", VA = "0x12B233C")]
		public new void StartClient()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x12B26E0", Offset = "0x12B26E0", VA = "0x12B26E0")]
		public void StartClient(IPEndPoint hostEndPoint)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x12B29CC", Offset = "0x12B29CC", VA = "0x12B29CC")]
		public void StartClientLANOnly()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x12B2A7C", Offset = "0x12B2A7C", VA = "0x12B2A7C")]
		public void StartClientLANOnly(IPEndPoint hostEndPoint)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x12B2C08", Offset = "0x12B2C08", VA = "0x12B2C08", Slot = "32")]
		public new virtual void StartHost()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x12B2EE0", Offset = "0x12B2EE0", VA = "0x12B2EE0")]
		public void StartHostLANOnly()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x12B2EF0", Offset = "0x12B2EF0", VA = "0x12B2EF0")]
		public new void StartServer()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x12B2F84", Offset = "0x12B2F84", VA = "0x12B2F84")]
		public void StartServerLANonly()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x12B2554", Offset = "0x12B2554", VA = "0x12B2554")]
		public new void StopClient()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x12B291C", Offset = "0x12B291C", VA = "0x12B291C")]
		public void RegisterClientHandlers()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x12A3678", Offset = "0x12A3678", VA = "0x12A3678", Slot = "26")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x12B3280", Offset = "0x12B3280", VA = "0x12B3280")]
		public void OnStartServerLANOnly()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x12B33BC", Offset = "0x12B33BC", VA = "0x12B33BC")]
		public IPAddress GetALANAddress()
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x12B38A4", Offset = "0x12B38A4", VA = "0x12B38A4", Slot = "33")]
		public virtual void OnFatalError(string error)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x12B38AC", Offset = "0x12B38AC", VA = "0x12B38AC", Slot = "28")]
		public override void OnStopServer()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x12B38E0", Offset = "0x12B38E0", VA = "0x12B38E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BF60", Offset = "0xF3BF60")]
		private IEnumerator CleanUpStoppedServer()
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x12B396C", Offset = "0x12B396C", VA = "0x12B396C", Slot = "29")]
		public override void OnStopClient()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x12B39A4", Offset = "0x12B39A4", VA = "0x12B39A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3BFC4", Offset = "0xF3BFC4")]
		private IEnumerator CleanUpStoppedClient()
		{
			return null;
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x12A2718", Offset = "0x12A2718", VA = "0x12A2718", Slot = "12")]
		public override void OnServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x12A3B90", Offset = "0x12A3B90", VA = "0x12A3B90", Slot = "20")]
		public override void OnClientDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x12B3EF0", Offset = "0x12B3EF0", VA = "0x12B3EF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D028", Offset = "0xF3D028")]
		private IEnumerator StopClientAfterDelay(NetworkConnection conn)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x12A2CEC", Offset = "0x12A2CEC", VA = "0x12A2CEC", Slot = "13")]
		public override void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x12B4100", Offset = "0x12B4100", VA = "0x12B4100", Slot = "34")]
		public virtual void OnServerPrepared(string hostAddress, ushort hostPort)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x12B4104", Offset = "0x12B4104", VA = "0x12B4104", Slot = "10")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x12A40CC", Offset = "0x12A40CC", VA = "0x12A40CC")]
		public NobleNetworkManager()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x12B42E4", Offset = "0x12B42E4", VA = "0x12B42E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D08C", Offset = "0xF3D08C")]
		[DebuggerHidden]
		private void <>n__0(NetworkConnection conn)
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class NobleServer
	{
		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C7B0", Offset = "0xF2C7B0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<NetworkConnection, ConnectMessage> handler;

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x12B535C", Offset = "0x12B535C", VA = "0x12B535C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x12B6178", Offset = "0x12B6178", VA = "0x12B6178")]
			internal void <RegisterHandler>b__0(NetworkConnection conn, ConnectMessage msg)
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C7C0", Offset = "0xF2C7C0")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<NetworkConnection, DisconnectMessage> handler;

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x12B5440", Offset = "0x12B5440", VA = "0x12B5440")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x12B6210", Offset = "0x12B6210", VA = "0x12B6210")]
			internal void <RegisterHandler>b__0(NetworkConnection conn, DisconnectMessage msg)
			{
			}
		}

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IPEndPoint LocalHostEndPoint;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float allocationResendTimeout;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int maxAllocationResends;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int relayLifetime;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int relayRefreshTime;

		[Token(Token = "0x400190D")]
		private const string TRANSPORT_WARNING_MESSAGE = "You must download and install a UDP transport in order to use Mirror with NobleConnect.\nI recommend LiteNet: https://github.com/MirrorNetworking/LiteNetLibTransport/";

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Peer baseServer;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action<string> onFatalError;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<NetworkConnection, IPEndPoint> endPointByConnection;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IceConfig nobleConfig;

		[Token(Token = "0x1700030A")]
		public static IPEndPoint HostEndPoint
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x12B1ADC", Offset = "0x12B1ADC", VA = "0x12B1ADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x12B47A8", Offset = "0x12B47A8", VA = "0x12B47A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public static NetworkConnection localConnection
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x12B56A0", Offset = "0x12B56A0", VA = "0x12B56A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public static Dictionary<int, NetworkConnectionToClient> connections
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x12B5744", Offset = "0x12B5744", VA = "0x12B5744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public static bool dontListen
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x12B57AC", Offset = "0x12B57AC", VA = "0x12B57AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x12B5814", Offset = "0x12B5814", VA = "0x12B5814")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public static bool active
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x12B0290", Offset = "0x12B0290", VA = "0x12B0290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030F")]
		public static bool localClientActive
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x12B5884", Offset = "0x12B5884", VA = "0x12B5884")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x12B31B8", Offset = "0x12B31B8", VA = "0x12B31B8")]
		public static void InitializeHosting(int listenPort, GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x12B4D54", Offset = "0x12B4D54", VA = "0x12B4D54")]
		public static void InitializeHosting(int listenPort, string relayServerAddress, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x12B4814", Offset = "0x12B4814", VA = "0x12B4814")]
		private static void _Init(int listenPort, string relayServerAddress, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x12B24A8", Offset = "0x12B24A8", VA = "0x12B24A8")]
		public static void Update()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x12B4DE8", Offset = "0x12B4DE8", VA = "0x12B4DE8")]
		public static void Listen(int port = 0, GeographicRegion region = GeographicRegion.AUTO, [Optional] Action<string, ushort> onPrepared, [Optional] Action<string> onFatalError, bool forceRelayOnly = false)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x12B503C", Offset = "0x12B503C", VA = "0x12B503C")]
		public static void SetListenPort(ushort port)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x12B2F94", Offset = "0x12B2F94", VA = "0x12B2F94")]
		public static ushort GetTransportPort()
		{
			return default(ushort);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x12B2C9C", Offset = "0x12B2C9C", VA = "0x12B2C9C")]
		public static void SetTransportPort(ushort port)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x12B5280", Offset = "0x12B5280", VA = "0x12B5280")]
		public static void RegisterHandler(Action<NetworkConnection, ConnectMessage> handler, bool requireAuthentication = true)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x12B5364", Offset = "0x12B5364", VA = "0x12B5364")]
		public static void RegisterHandler(Action<NetworkConnection, DisconnectMessage> handler, bool requireAuthentication = true)
		{
		}

		[Token(Token = "0x6001A01")]
		public static void UnregisterHandler<T>() where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x12B5448", Offset = "0x12B5448", VA = "0x12B5448")]
		public static void ClearHandlers()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x12B4238", Offset = "0x12B4238", VA = "0x12B4238")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x12B54A8", Offset = "0x12B54A8", VA = "0x12B54A8")]
		private static void OnServerConnect(NetworkConnection conn, ConnectMessage message)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x12B3A40", Offset = "0x12B3A40", VA = "0x12B3A40")]
		public static void OnServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x12B550C", Offset = "0x12B550C", VA = "0x12B550C")]
		private static void OnServerDisconnect(NetworkConnection conn, DisconnectMessage message)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x12B3F98", Offset = "0x12B3F98", VA = "0x12B3F98")]
		public static void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x12B5570", Offset = "0x12B5570", VA = "0x12B5570")]
		private static void OnFatalError(string errorString)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x12B58E4", Offset = "0x12B58E4", VA = "0x12B58E4")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001A10")]
		public static void SendToAll<T>(T msg, int channelId = 0, bool sendToReadyOnly = false) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6001A11")]
		public static void SendToReady<T>(NetworkIdentity identity, T msg, bool includeSelf = true, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6001A12")]
		public static void SendToReady<T>(NetworkIdentity identity, T msg, int channelId = 0) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x12B5944", Offset = "0x12B5944", VA = "0x12B5944")]
		public static void DisconnectAll()
		{
		}

		[Token(Token = "0x6001A14")]
		public static void SendToClientOfPlayer<T>(NetworkIdentity player, T msg) where T : struct, NetworkMessage
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x12B59A4", Offset = "0x12B59A4", VA = "0x12B59A4")]
		public static bool ReplacePlayerForConnection(NetworkConnection conn, GameObject player, Guid assetId, bool keepAuthority = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x12A2304", Offset = "0x12A2304", VA = "0x12A2304")]
		public static bool ReplacePlayerForConnection(NetworkConnection conn, GameObject player, bool keepAuthority = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x12B5A3C", Offset = "0x12B5A3C", VA = "0x12B5A3C")]
		public static bool AddPlayerForConnection(NetworkConnection conn, GameObject player, Guid assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x12A30A4", Offset = "0x12A30A4", VA = "0x12A30A4")]
		public static bool AddPlayerForConnection(NetworkConnection conn, GameObject player)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x12B5ACC", Offset = "0x12B5ACC", VA = "0x12B5ACC")]
		public static void SetClientReady(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x12B5B34", Offset = "0x12B5B34", VA = "0x12B5B34")]
		public static void SetAllClientsNotReady()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x12B5B94", Offset = "0x12B5B94", VA = "0x12B5B94")]
		public static void SetClientNotReady(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x12B5BFC", Offset = "0x12B5BFC", VA = "0x12B5BFC")]
		public static void DestroyPlayerForConnection(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x12B5C64", Offset = "0x12B5C64", VA = "0x12B5C64")]
		public static void Spawn(GameObject obj)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x12B5CD0", Offset = "0x12B5CD0", VA = "0x12B5CD0")]
		public static void Spawn(GameObject obj, GameObject player)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x12B5D48", Offset = "0x12B5D48", VA = "0x12B5D48")]
		public static void Spawn(GameObject obj, NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x12B5DC0", Offset = "0x12B5DC0", VA = "0x12B5DC0")]
		public static void Spawn(GameObject obj, Guid assetId, NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x12B5E50", Offset = "0x12B5E50", VA = "0x12B5E50")]
		public static void Spawn(GameObject obj, Guid assetId)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x12B5ED4", Offset = "0x12B5ED4", VA = "0x12B5ED4")]
		public static void Destroy(GameObject obj)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x12B5F3C", Offset = "0x12B5F3C", VA = "0x12B5F3C")]
		public static void UnSpawn(GameObject obj)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x12B5FA4", Offset = "0x12B5FA4", VA = "0x12B5FA4")]
		public static NetworkIdentity FindLocalObject(uint netId)
		{
			return null;
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x12B6028", Offset = "0x12B6028", VA = "0x12B6028")]
		public static bool SpawnObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x12B6088", Offset = "0x12B6088", VA = "0x12B6088")]
		public NobleServer()
		{
		}
	}
}
namespace HighlightPlus
{
	[Token(Token = "0x2000446")]
	public delegate bool OnObjectHighlightStartEvent(GameObject obj);
	[Token(Token = "0x2000447")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x2000448")]
	public delegate bool OnRendererHighlightEvent(Renderer renderer);
	[Token(Token = "0x2000449")]
	public enum SeeThroughMode
	{
		[Token(Token = "0x4001915")]
		WhenHighlighted,
		[Token(Token = "0x4001916")]
		AlwaysWhenOccluded,
		[Token(Token = "0x4001917")]
		Never
	}
	[Token(Token = "0x200044A")]
	public enum QualityLevel
	{
		[Token(Token = "0x4001919")]
		Fastest,
		[Token(Token = "0x400191A")]
		High,
		[Token(Token = "0x400191B")]
		Highest
	}
	[Token(Token = "0x200044B")]
	public enum TargetOptions
	{
		[Token(Token = "0x400191D")]
		Children,
		[Token(Token = "0x400191E")]
		OnlyThisObject,
		[Token(Token = "0x400191F")]
		RootToChildren,
		[Token(Token = "0x4001920")]
		LayerInScene,
		[Token(Token = "0x4001921")]
		LayerInChildren
	}
	[Token(Token = "0x200044C")]
	public enum Visibility
	{
		[Token(Token = "0x4001923")]
		Normal,
		[Token(Token = "0x4001924")]
		AlwaysOnTop,
		[Token(Token = "0x4001925")]
		OnlyWhenOccluded
	}
	[Serializable]
	[Token(Token = "0x200044D")]
	public struct GlowPassData
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float alpha;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;
	}
	[Token(Token = "0x200044E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C7D0", Offset = "0xF2C7D0")]
	public class HighlightEffect : MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		private struct ModelMaterials
		{
			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool render;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bakedTransform;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentPosition;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentRotation;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 currentScale;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool renderWasVisibleDuringSetup;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh mesh;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh originalMesh;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Renderer renderer;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool skinnedMesh;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material[] fxMatMask;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Material[] fxMatSolidColor;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Material[] fxMatSeeThrough;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Material[] fxMatOverlay;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Material[] fxMatInnerGlow;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Matrix4x4 renderingMatrix;
		}

		[Token(Token = "0x2000450")]
		private enum FadingState
		{
			[Token(Token = "0x40019B5")]
			FadingOut = -1,
			[Token(Token = "0x40019B6")]
			NoFading,
			[Token(Token = "0x40019B7")]
			FadingIn
		}

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2C81C", Offset = "0xF2C81C")]
		private sealed class <OverlayOneShotAnimator>d__161 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightEffect <>4__this;

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color color;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startTime>5__2;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__3;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WaitForEndOfFrame <ef>5__4;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6A")]
				[Address(RVA = "0x146E590", Offset = "0x146E590", VA = "0x146E590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0x146E5F8", Offset = "0x146E5F8", VA = "0x146E5F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x146E07C", Offset = "0x146E07C", VA = "0x146E07C")]
			[DebuggerHidden]
			public <OverlayOneShotAnimator>d__161(int <>1__state)
			{
			}

			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x146E45C", Offset = "0x146E45C", VA = "0x146E45C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x146E460", Offset = "0x146E460", VA = "0x146E460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x146E598", Offset = "0x146E598", VA = "0x146E598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightProfile profile;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34138", Offset = "0xF34138")]
		public bool profileSync;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool previewInEditor;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TargetOptions effectGroup;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34170", Offset = "0xF34170")]
		public float alphaCutOff;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullBackFaces;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34188", Offset = "0xF34188")]
		public bool ignoreObjectVisibility;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF341C0", Offset = "0xF341C0")]
		public bool reflectionProbes;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF341F8", Offset = "0xF341F8")]
		public bool ignore;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInDuration;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeOutDuration;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool flipY;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool constantWidth;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34240", Offset = "0xF34240")]
		public float overlay;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color overlayColor;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34258", Offset = "0xF34258")]
		public float overlayMinIntensity;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34270", Offset = "0xF34270")]
		public float overlayBlending;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34288", Offset = "0xF34288")]
		public float outline;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color outlineColor;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float outlineWidth;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF342A0", Offset = "0xF342A0")]
		public int outlineDownsampling;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool outlineBlitDebug;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF342B8", Offset = "0xF342B8")]
		public float glow;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float glowWidth;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF342D0", Offset = "0xF342D0")]
		public int glowDownsampling;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color glowHQColor;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool glowDithering;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float glowMagicNumber1;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float glowMagicNumber2;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glowAnimationSpeed;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Visibility glowVisibility;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool glowOptimalBlit;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool glowBlitDebug;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF342E8", Offset = "0xF342E8")]
		public float innerGlow;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34300", Offset = "0xF34300")]
		public float innerGlowWidth;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color innerGlowColor;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool targetFX;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color targetFXColor;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform targetFXCenter;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float targetFXInitialScale;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float targetFXEndScale;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float targetFXStayDuration;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34348", Offset = "0xF34348")]
		public float seeThroughIntensity;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34360", Offset = "0xF34360")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34378", Offset = "0xF34378")]
		public float seeThroughNoise;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private ModelMaterials[] rms;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private int rmsCount;

		[NonSerialized]
		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform target;

		[NonSerialized]
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float highlightStartTime;

		[Token(Token = "0x400196B")]
		private const string SKW_ALPHACLIP = "HP_ALPHACLIP";

		[Token(Token = "0x400196C")]
		private const string UNIFORM_CUTOFF = "_CutOff";

		[Token(Token = "0x400196D")]
		private const float TAU = 0.70711f;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fxMatMask;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material fxMatSolidColor;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material fxMatSeeThrough;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material fxMatOverlay;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material fxMatGlow;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material fxMatInnerGlow;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material fxMatOutline;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Material fxMatTarget;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Material fxMatComposeGlow;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Material fxMatComposeOutline;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Material fxMatBlurGlow;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Material fxMatBlurOutline;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector3[] offsets;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fadeStartTime;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private FadingState fading;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private CommandBuffer cbMask;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private CommandBuffer cbSeeThrough;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CommandBuffer cbGlow;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private CommandBuffer cbOutline;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private CommandBuffer cbOverlay;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private CommandBuffer cbInnerGlow;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private CommandBuffer cbSmoothBlend;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int[] mipGlowBuffers;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private int[] mipOutlineBuffers;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int glowRT;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private int outlineRT;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mesh quadMesh;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int sourceRT;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Matrix4x4 quadGlowMatrix;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Matrix4x4 quadOutlineMatrix;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private Vector3[] corners;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private RenderTextureDescriptor sourceDesc;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private Color debugColor;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Color blackColor;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private Visibility lastOutlineVisibility;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private List<Renderer> tempRR;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3[] newNormals;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int[] matches;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Vector3, int> vv;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private bool overlayOneShotRunning;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
		private bool currentHighlighted;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Color overlayOneShotCurrentColor;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private float overlayOneShotCurrentAnimationSpeed;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private float overlayOneShotCurrentOverlay;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float overlayOneShotCurrentOuterGlow;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float overlayOneShotCurrentInnerGlow;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private float overlayOneShotCurrentOutline;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private float overlayOneShotCurrentSeeThroughIntensity;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Coroutine overlayOneShotCo;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<HighlightSeeThroughOccluder> occluders;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<Camera, int> occludersFrameCount;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static CommandBuffer cbOccluder;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Material fxMatOccluder;

		[Token(Token = "0x17000310")]
		public bool highlighted
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0x1464D58", Offset = "0x1464D58", VA = "0x1464D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x1464D60", Offset = "0x1464D60", VA = "0x1464D60")]
			set
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x1464A70", Offset = "0x1464A70", VA = "0x1464A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D1B4", Offset = "0xF3D1B4")]
			add
			{
			}
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x1464F68", Offset = "0x1464F68", VA = "0x1464F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D1C4", Offset = "0xF3D1C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x1465010", Offset = "0x1465010", VA = "0x1465010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D1D4", Offset = "0xF3D1D4")]
			add
			{
			}
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x14650B8", Offset = "0x14650B8", VA = "0x14650B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D1E4", Offset = "0xF3D1E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event OnRendererHighlightEvent OnRendererHighlightStart
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x1465160", Offset = "0x1465160", VA = "0x1465160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D1F4", Offset = "0xF3D1F4")]
			add
			{
			}
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x1465208", Offset = "0x1465208", VA = "0x1465208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D204", Offset = "0xF3D204")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x14652B0", Offset = "0x14652B0", VA = "0x14652B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x14669B8", Offset = "0x14669B8", VA = "0x14669B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x146785C", Offset = "0x146785C", VA = "0x146785C")]
		private void SRPAfterCameraRenders(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x146A0DC", Offset = "0x146A0DC", VA = "0x146A0DC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x146A0E0", Offset = "0x146A0E0", VA = "0x146A0E0")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x146A10C", Offset = "0x146A10C", VA = "0x146A10C")]
		public void ProfileLoad(HighlightProfile profile)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x146A1AC", Offset = "0x146A1AC", VA = "0x146A1AC")]
		public void ProfileReload()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x146A240", Offset = "0x146A240", VA = "0x146A240")]
		public void ProfileSaveChanges(HighlightProfile profile)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x146A468", Offset = "0x146A468", VA = "0x146A468")]
		public void ProfileSaveChanges()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x146A4FC", Offset = "0x146A4FC", VA = "0x146A4FC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1467904", Offset = "0x1467904", VA = "0x1467904")]
		private void DoOnRenderObject(Camera cam)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x146B0E0", Offset = "0x146B0E0", VA = "0x146B0E0")]
		private bool ComputeSmoothQuadMatrix(Camera cam, Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x146C578", Offset = "0x146C578", VA = "0x146C578")]
		private void BuildMatrix(Camera cam, Vector3 scrMin, Vector3 scrMax, int border, ref Matrix4x4 quadMatrix)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x146B624", Offset = "0x146B624", VA = "0x146B624")]
		private void SmoothGlow(Camera cam, int sourceRT, int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x146BBA0", Offset = "0x146BBA0", VA = "0x146BBA0")]
		private void SmoothOutline(Camera cam, int sourceRT, int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x146BEE4", Offset = "0x146BEE4", VA = "0x146BEE4")]
		private void ComposeSmoothBlend(Visibility smoothGlowVisibility, Visibility smoothOutlineVisibility)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x146C828", Offset = "0x146C828", VA = "0x146C828")]
		private void InitMaterial(ref Material material, string shaderName)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x146C994", Offset = "0x146C994", VA = "0x146C994")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1464D68", Offset = "0x1464D68", VA = "0x1464D68")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1465FB0", Offset = "0x1465FB0", VA = "0x1465FB0")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x146CE10", Offset = "0x146CE10", VA = "0x146CE10")]
		private Renderer[] FindRenderersWithLayerInScene(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x146CFA0", Offset = "0x146CFA0", VA = "0x146CFA0")]
		private Renderer[] FindRenderersWithLayerInChildren(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x1465E18", Offset = "0x1465E18", VA = "0x1465E18")]
		private void CheckGeometrySupportDependencies()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x146D4B8", Offset = "0x146D4B8", VA = "0x146D4B8")]
		private void CheckCommandBuffers()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x146DED4", Offset = "0x146DED4", VA = "0x146DED4")]
		private void CheckBlurCommandBuffer()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x146D69C", Offset = "0x146D69C", VA = "0x146D69C")]
		private Material[] Fork(Material mat, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x146A9BC", Offset = "0x146A9BC", VA = "0x146A9BC")]
		private void BakeTransform(int objIndex, bool duplicateMesh)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x1466A5C", Offset = "0x1466A5C", VA = "0x1466A5C")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x146C808", Offset = "0x146C808", VA = "0x146C808")]
		private int GetZTestValue(Visibility param)
		{
			return default(int);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x14658C4", Offset = "0x14658C4", VA = "0x14658C4")]
		private void BuildQuad()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x146D7FC", Offset = "0x146D7FC", VA = "0x146D7FC")]
		private void AverageNormals(int objIndex)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x1464C50", Offset = "0x1464C50", VA = "0x1464C50")]
		public void OverlayOneShot(Color color, float duration)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x146DFD4", Offset = "0x146DFD4", VA = "0x146DFD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D214", Offset = "0xF3D214")]
		private IEnumerator OverlayOneShotAnimator(Color color, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x146DF64", Offset = "0x146DF64", VA = "0x146DF64")]
		private void OverlayOneShotEnd()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x146E0A8", Offset = "0x146E0A8", VA = "0x146E0A8")]
		public static void RegisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x146E178", Offset = "0x146E178", VA = "0x146E178")]
		public static void UnregisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x146A534", Offset = "0x146A534", VA = "0x146A534")]
		public void RenderOccluders()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x146E248", Offset = "0x146E248", VA = "0x146E248")]
		public HighlightEffect()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C82C", Offset = "0xF2C82C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C82C", Offset = "0xF2C82C")]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HighlightEffect baseEffect;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HighlightEffect currentEffect;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentObject;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x146E600", Offset = "0x146E600", VA = "0x146E600")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x146E864", Offset = "0x146E864", VA = "0x146E864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x146EA24", Offset = "0x146EA24", VA = "0x146EA24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x146E86C", Offset = "0x146E86C", VA = "0x146E86C")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x146E7B4", Offset = "0x146E7B4", VA = "0x146E7B4")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x146EC4C", Offset = "0x146EC4C", VA = "0x146EC4C")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2C8B4", Offset = "0xF2C8B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C8B4", Offset = "0xF2C8B4")]
	public class HighlightProfile : ScriptableObject
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetOptions effectGroup;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34400", Offset = "0xF34400")]
		public float alphaCutOff;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cullBackFaces;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInDuration;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeOutDuration;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34418", Offset = "0xF34418")]
		public float overlay;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color overlayColor;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34430", Offset = "0xF34430")]
		public float overlayMinIntensity;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34448", Offset = "0xF34448")]
		public float overlayBlending;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34460", Offset = "0xF34460")]
		public float outline;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color outlineColor;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float outlineWidth;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Visibility outlineVisibility;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34478", Offset = "0xF34478")]
		public float glow;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float glowWidth;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public QualityLevel glowQuality;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color glowHQColor;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool glowDithering;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float glowMagicNumber1;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float glowMagicNumber2;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float glowAnimationSpeed;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Visibility glowVisibility;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34490", Offset = "0xF34490")]
		public float innerGlow;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF344A8", Offset = "0xF344A8")]
		public float innerGlowWidth;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color innerGlowColor;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool targetFX;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color targetFXColor;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float targetFXInitialScale;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float targetFXEndScale;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float targetFXStayDuration;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF344C0", Offset = "0xF344C0")]
		public float seeThroughIntensity;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF344D8", Offset = "0xF344D8")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color seeThroughTintColor;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF344F0", Offset = "0xF344F0")]
		public float seeThroughNoise;

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x1465C80", Offset = "0x1465C80", VA = "0x1465C80")]
		public void Load(HighlightEffect effect)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x146A2E0", Offset = "0x146A2E0", VA = "0x146A2E0")]
		public void Save(HighlightEffect effect)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x146EC80", Offset = "0x146EC80", VA = "0x146EC80")]
		private GlowPassData[] GetGlowPassesCopy(GlowPassData[] glowPasses)
		{
			return null;
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x146ED70", Offset = "0x146ED70", VA = "0x146ED70")]
		public HighlightProfile()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public struct MeshData
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshCount;
	}
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C934", Offset = "0xF2C934")]
	[ExecuteInEditMode]
	public class HighlightSeeThroughOccluder : MonoBehaviour
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshData[] meshData;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Renderer> rr;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x146EEB0", Offset = "0x146EEB0", VA = "0x146EEB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x146EEF8", Offset = "0x146EEF8", VA = "0x146EEF8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x146F2E8", Offset = "0x146F2E8", VA = "0x146F2E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x146F34C", Offset = "0x146F34C", VA = "0x146F34C")]
		public HighlightSeeThroughOccluder()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public enum TriggerMode
	{
		[Token(Token = "0x40019F6")]
		ColliderEventsOnlyOnThisObject,
		[Token(Token = "0x40019F7")]
		RaycastOnThisObjectAndChildren
	}
	[Token(Token = "0x2000457")]
	public enum RayCastSource
	{
		[Token(Token = "0x40019F9")]
		MousePosition,
		[Token(Token = "0x40019FA")]
		CameraDirection
	}
	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2C980", Offset = "0xF2C980")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2C980", Offset = "0xF2C980")]
	[ExecuteInEditMode]
	public class HighlightTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CA18", Offset = "0xF2CA18")]
		private sealed class <DoRayCast>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger <>4__this;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A88")]
				[Address(RVA = "0x146FCB4", Offset = "0x146FCB4", VA = "0x146FCB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A8A")]
				[Address(RVA = "0x146FD1C", Offset = "0x146FD1C", VA = "0x146FD1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x146F6C8", Offset = "0x146F6C8", VA = "0x146F6C8")]
			[DebuggerHidden]
			public <DoRayCast>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x146F97C", Offset = "0x146F97C", VA = "0x146F97C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x146F980", Offset = "0x146F980", VA = "0x146F980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x146FCBC", Offset = "0x146FCBC", VA = "0x146FCBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34508", Offset = "0xF34508")]
		public TriggerMode triggerMode;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x40019FE")]
		private const int MAX_RAYCAST_HITS = 100;

		[NonSerialized]
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider[] colliders;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider currentCollider;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] hits;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x146F354", Offset = "0x146F354", VA = "0x146F354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x146F3FC", Offset = "0x146F3FC", VA = "0x146F3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x146F658", Offset = "0x146F658", VA = "0x146F658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D2C8", Offset = "0xF3D2C8")]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x146F6F4", Offset = "0x146F6F4", VA = "0x146F6F4")]
		private void SwitchCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x146F8A8", Offset = "0x146F8A8", VA = "0x146F8A8")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x146F8EC", Offset = "0x146F8EC", VA = "0x146F8EC")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x146F930", Offset = "0x146F930", VA = "0x146F930")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x146F78C", Offset = "0x146F78C", VA = "0x146F78C")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x146F358", Offset = "0x146F358", VA = "0x146F358")]
		public void Init()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x146F974", Offset = "0x146F974", VA = "0x146F974")]
		public HighlightTrigger()
		{
		}
	}
}
namespace HighlightPlus.Demos
{
	[Token(Token = "0x200045A")]
	public class SphereHighlightEventExample : MonoBehaviour
	{
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HighlightEffect effect;

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x14649CC", Offset = "0x14649CC", VA = "0x14649CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x1464B18", Offset = "0x1464B18", VA = "0x1464B18")]
		private bool ValidateHighlightObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1464B20", Offset = "0x1464B20", VA = "0x1464B20")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1464B8C", Offset = "0x1464B8C", VA = "0x1464B8C")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1464BF8", Offset = "0x1464BF8", VA = "0x1464BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1464D50", Offset = "0x1464D50", VA = "0x1464D50")]
		public SphereHighlightEventExample()
		{
		}
	}
}
namespace Dissonance.Integrations.MirrorIgnorance
{
	[Token(Token = "0x200045B")]
	public class MirrorIgnoranceClient : BaseClient<MirrorIgnoranceServer, MirrorIgnoranceClient, MirrorConn>
	{
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly MirrorIgnoranceCommsNetwork _network;

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1358368", Offset = "0x1358368", VA = "0x1358368")]
		public MirrorIgnoranceClient([NotNull] MirrorIgnoranceCommsNetwork network)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x1358440", Offset = "0x1358440", VA = "0x1358440", Slot = "8")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x1358518", Offset = "0x1358518", VA = "0x1358518", Slot = "9")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x13585F0", Offset = "0x13585F0", VA = "0x13585F0")]
		private void OnMessageReceived(NetworkConnection source, DissonanceNetworkMessage msg)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x13586A0", Offset = "0x13586A0", VA = "0x13586A0", Slot = "11")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x13586A4", Offset = "0x13586A4", VA = "0x13586A4", Slot = "12")]
		protected override void SendReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1358824", Offset = "0x1358824", VA = "0x1358824", Slot = "13")]
		protected override void SendUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1358704", Offset = "0x1358704", VA = "0x1358704")]
		private bool Send(ArraySegment<byte> packet, byte channel)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xF2CA28", Offset = "0xF2CA28")]
	public class MirrorIgnoranceCommsNetwork : BaseCommsNetwork<MirrorIgnoranceServer, MirrorIgnoranceClient, MirrorConn, Unit, Unit>
	{
		[Serializable]
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CA60", Offset = "0xF2CA60")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<byte[]> <>9__11_0;

			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x1359574", Offset = "0x1359574", VA = "0x1359574")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x135957C", Offset = "0x135957C", VA = "0x135957C")]
			internal byte[] <.ctor>b__11_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4001A07")]
		internal const byte ReliableSequencedChannel = 0;

		[Token(Token = "0x4001A08")]
		internal const byte UnreliableChannel = 1;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ConcurrentPool<byte[]> _loopbackBuffers;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly List<ArraySegment<byte>> _loopbackQueue;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1358964", Offset = "0x1358964", VA = "0x1358964", Slot = "32")]
		protected override MirrorIgnoranceServer CreateServer(Unit details)
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x1358AC0", Offset = "0x1358AC0", VA = "0x1358AC0", Slot = "33")]
		protected override MirrorIgnoranceClient CreateClient(Unit details)
		{
			return null;
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1358B20", Offset = "0x1358B20", VA = "0x1358B20", Slot = "35")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x13590BC", Offset = "0x13590BC", VA = "0x13590BC", Slot = "34")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1359178", Offset = "0x1359178", VA = "0x1359178")]
		internal bool PreprocessPacketToClient(ArraySegment<byte> packet, MirrorConn destination)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x135882C", Offset = "0x135882C", VA = "0x135882C")]
		internal bool PreprocessPacketToServer(ArraySegment<byte> packet)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1359310", Offset = "0x1359310", VA = "0x1359310")]
		internal static void NullMessageReceivedHandler(NetworkConnection source, DissonanceNetworkMessage msg)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x13593C8", Offset = "0x13593C8", VA = "0x13593C8")]
		public MirrorIgnoranceCommsNetwork()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public struct MirrorConn : IEquatable<MirrorConn>
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly NetworkConnection Connection;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x1358258", Offset = "0x1358258", VA = "0x1358258")]
		public MirrorConn(NetworkConnection connection)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x1358260", Offset = "0x1358260", VA = "0x1358260", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x1358280", Offset = "0x1358280", VA = "0x1358280", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x13582A0", Offset = "0x13582A0", VA = "0x13582A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x1358348", Offset = "0x1358348", VA = "0x1358348", Slot = "4")]
		public bool Equals(MirrorConn other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045F")]
	internal static class DissonanceNetworkMessageExtensions
	{
		[Serializable]
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CA80", Offset = "0xF2CA80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x1358204", Offset = "0x1358204", VA = "0x1358204")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x135820C", Offset = "0x135820C", VA = "0x135820C")]
			internal byte[] <.cctor>b__4_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4001A0E")]
		internal const int BufferLength = 1024;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly ConcurrentPool<byte[]> SerializationBuffers;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x1357E8C", Offset = "0x1357E8C", VA = "0x1357E8C")]
		public static void Serialize([NotNull] this NetworkWriter writer, DissonanceNetworkMessage value)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1357F70", Offset = "0x1357F70", VA = "0x1357F70")]
		public static DissonanceNetworkMessage Deserialize([NotNull] this NetworkReader reader)
		{
			return default(DissonanceNetworkMessage);
		}
	}
	[Token(Token = "0x2000461")]
	internal struct DissonanceNetworkMessage : NetworkMessage, IDisposable
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ArraySegment<byte> Data;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x1357C74", Offset = "0x1357C74", VA = "0x1357C74")]
		public DissonanceNetworkMessage(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1357D2C", Offset = "0x1357D2C", VA = "0x1357D2C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CA90", Offset = "0xF2CA90")]
	public class MirrorIgnorancePlayer : NetworkBehaviour, IDissonancePlayer
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DissonanceComms _comms;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF34540", Offset = "0xF34540")]
		private bool <IsTracking>k__BackingField;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SyncVar]
		private string _playerId;

		[Token(Token = "0x17000315")]
		public bool IsTracking
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x13595C8", Offset = "0x13595C8", VA = "0x13595C8", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D39C", Offset = "0xF3D39C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x13595D0", Offset = "0x13595D0", VA = "0x13595D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D3AC", Offset = "0xF3D3AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public string PlayerId
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x13595DC", Offset = "0x13595DC", VA = "0x13595DC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public Vector3 Position
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0x13595E4", Offset = "0x13595E4", VA = "0x13595E4", Slot = "16")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000318")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x1359608", Offset = "0x1359608", VA = "0x1359608", Slot = "17")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000319")]
		public NetworkPlayerType Type
		{
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x135962C", Offset = "0x135962C", VA = "0x135962C", Slot = "18")]
			get
			{
				return default(NetworkPlayerType);
			}
		}

		[Token(Token = "0x1700031A")]
		public string Network_playerId
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x135A120", Offset = "0x135A120", VA = "0x135A120")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x1359B18", Offset = "0x1359B18", VA = "0x1359B18")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x13596DC", Offset = "0x13596DC", VA = "0x13596DC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x13597B8", Offset = "0x13597B8", VA = "0x13597B8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x135982C", Offset = "0x135982C", VA = "0x135982C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x1359940", Offset = "0x1359940", VA = "0x1359940", Slot = "12")]
		public override void OnStartLocalPlayer()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x1359AB0", Offset = "0x1359AB0", VA = "0x1359AB0")]
		private void SetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x1359DD0", Offset = "0x1359DD0", VA = "0x1359DD0", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1359CBC", Offset = "0x1359CBC", VA = "0x1359CBC")]
		[Command]
		private void CmdSetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1359E14", Offset = "0x1359E14", VA = "0x1359E14")]
		[ClientRpc]
		private void RpcSetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x1359BB4", Offset = "0x1359BB4", VA = "0x1359BB4")]
		private void StartTracking()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x135983C", Offset = "0x135983C", VA = "0x135983C")]
		private void StopTracking()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1359F28", Offset = "0x1359F28", VA = "0x1359F28")]
		public MirrorIgnorancePlayer()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x1359F90", Offset = "0x1359F90", VA = "0x1359F90")]
		static MirrorIgnorancePlayer()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x135A11C", Offset = "0x135A11C", VA = "0x135A11C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x135A128", Offset = "0x135A128", VA = "0x135A128")]
		private void UserCode_CmdSetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x135A154", Offset = "0x135A154", VA = "0x135A154")]
		protected static void InvokeUserCode_CmdSetPlayerName(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x135A2D4", Offset = "0x135A2D4", VA = "0x135A2D4")]
		private void UserCode_RpcSetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x135A314", Offset = "0x135A314", VA = "0x135A314")]
		protected static void InvokeUserCode_RpcSetPlayerName(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x135A468", Offset = "0x135A468", VA = "0x135A468", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x135A55C", Offset = "0x135A55C", VA = "0x135A55C", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class MirrorIgnoranceServer : BaseServer<MirrorIgnoranceServer, MirrorIgnoranceClient, MirrorConn>
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[NotNull]
		private readonly MirrorIgnoranceCommsNetwork _network;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<NetworkConnection> _addedConnections;

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x13589C4", Offset = "0x13589C4", VA = "0x13589C4")]
		public MirrorIgnoranceServer([NotNull] MirrorIgnoranceCommsNetwork network)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x135A638", Offset = "0x135A638", VA = "0x135A638", Slot = "9")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x135A6F4", Offset = "0x135A6F4", VA = "0x135A6F4")]
		private void OnMessageReceived(NetworkConnection source, DissonanceNetworkMessage msg)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x135A7B4", Offset = "0x135A7B4", VA = "0x135A7B4", Slot = "17")]
		protected override void AddClient([NotNull] ClientInfo<MirrorConn> client)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x135A864", Offset = "0x135A864", VA = "0x135A864", Slot = "10")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x135A920", Offset = "0x135A920", VA = "0x135A920", Slot = "16")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x135A924", Offset = "0x135A924", VA = "0x135A924", Slot = "11")]
		public override ServerState Update()
		{
			return default(ServerState);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x135AA40", Offset = "0x135AA40", VA = "0x135AA40")]
		private static bool IsConnected([NotNull] NetworkConnection conn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x135AAE0", Offset = "0x135AAE0", VA = "0x135AAE0", Slot = "12")]
		protected override void SendReliable(MirrorConn connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x135AC78", Offset = "0x135AC78", VA = "0x135AC78", Slot = "13")]
		protected override void SendUnreliable(MirrorConn connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x135AB88", Offset = "0x135AB88", VA = "0x135AB88")]
		private bool Send(ArraySegment<byte> packet, MirrorConn connection, byte channel)
		{
			return default(bool);
		}
	}
}
namespace Dissonance.Integrations.MirrorIgnorance.Demo
{
	[Token(Token = "0x2000464")]
	public class MirrorIgnorancePlayerController : NetworkBehaviour
	{
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x135796C", Offset = "0x135796C", VA = "0x135796C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x1357B98", Offset = "0x1357B98", VA = "0x1357B98")]
		public MirrorIgnorancePlayerController()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1357C00", Offset = "0x1357C00", VA = "0x1357C00")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x2000465")]
	internal class MirrorNetworkManagerDemo : NetworkManager
	{
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1357C04", Offset = "0x1357C04", VA = "0x1357C04", Slot = "13")]
		public override void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1357C0C", Offset = "0x1357C0C", VA = "0x1357C0C")]
		public MirrorNetworkManagerDemo()
		{
		}
	}
}
namespace RotaryHeart.Lib
{
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2CAF4", Offset = "0xF2CAF4")]
	public class DataBaseExample : ScriptableObject
	{
		[Token(Token = "0x2000467")]
		public enum EnumExample
		{
			[Token(Token = "0x4001A2C")]
			None,
			[Token(Token = "0x4001A2D")]
			Value1,
			[Token(Token = "0x4001A2E")]
			Value2,
			[Token(Token = "0x4001A2F")]
			Value3,
			[Token(Token = "0x4001A30")]
			Value4,
			[Token(Token = "0x4001A31")]
			Value5,
			[Token(Token = "0x4001A32")]
			Value6
		}

		[Serializable]
		[Token(Token = "0x2000468")]
		public class ChildTest
		{
			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color myChildColor;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool myChildBool;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Gradient test;

			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x11FEE3C", Offset = "0x11FEE3C", VA = "0x11FEE3C")]
			public ChildTest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000469")]
		public class ClassTest
		{
			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float test;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string test2;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion quat;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ChildTest[] childTest;

			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x11FEE44", Offset = "0x11FEE44", VA = "0x11FEE44")]
			public ClassTest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046A")]
		public class ArrayTest
		{
			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] myArray;

			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0x11FEDC4", Offset = "0x11FEDC4", VA = "0x11FEDC4")]
			public ArrayTest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046B")]
		public class AdvancedGenericClass
		{
			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xF34704", Offset = "0xF34704")]
			public float value;

			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x11FEC64", Offset = "0x11FEC64", VA = "0x11FEC64")]
			public bool Equals(AdvancedGenericClass other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x11FEC94", Offset = "0x11FEC94", VA = "0x11FEC94", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x11FEDB0", Offset = "0x11FEDB0", VA = "0x11FEDB0", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0x11FEDBC", Offset = "0x11FEDBC", VA = "0x11FEDBC")]
			public AdvancedGenericClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046C")]
		public class Generic_String : SerializableDictionaryBase<ClassTest, string>
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x11FF07C", Offset = "0x11FF07C", VA = "0x11FF07C")]
			public Generic_String()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046D")]
		public class Generic_Generic : SerializableDictionaryBase<ClassTest, ClassTest>
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x11FF00C", Offset = "0x11FF00C", VA = "0x11FF00C")]
			public Generic_Generic()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046E")]
		public class C_Int : SerializableDictionaryBase<char, int>
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x11FEDCC", Offset = "0x11FEDCC", VA = "0x11FEDCC")]
			public C_Int()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046F")]
		public class G_Int : SerializableDictionaryBase<UnityEngine.Gradient, int>
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x11FEF9C", Offset = "0x11FEF9C", VA = "0x11FEF9C")]
			public G_Int()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000470")]
		public class I_GO : SerializableDictionaryBase<int, GameObject>
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x11FF0EC", Offset = "0x11FF0EC", VA = "0x11FF0EC")]
			public I_GO()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000471")]
		public class GO_I : SerializableDictionaryBase<GameObject, int>
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x11FEEBC", Offset = "0x11FEEBC", VA = "0x11FEEBC")]
			public GO_I()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000472")]
		public class S_GO : SerializableDictionaryBase<string, GameObject>
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x11FF38C", Offset = "0x11FF38C", VA = "0x11FF38C")]
			public S_GO()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		public class GO_S : SerializableDictionaryBase<GameObject, string>
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0x11FEF2C", Offset = "0x11FEF2C", VA = "0x11FEF2C")]
			public GO_S()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000474")]
		public class S_Mat : SerializableDictionaryBase<string, Material>
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x11FF46C", Offset = "0x11FF46C", VA = "0x11FF46C")]
			public S_Mat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000475")]
		public class Mat_S : SerializableDictionaryBase<Material, string>
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x11FF23C", Offset = "0x11FF23C", VA = "0x11FF23C")]
			public Mat_S()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000476")]
		public class S_AC : SerializableDictionaryBase<string, AudioClip>
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x11FF31C", Offset = "0x11FF31C", VA = "0x11FF31C")]
			public S_AC()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000477")]
		public class AC_S : SerializableDictionaryBase<AudioClip, string>
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x11FEB84", Offset = "0x11FEB84", VA = "0x11FEB84")]
			public AC_S()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000478")]
		public class S_Sprite : SerializableDictionaryBase<string, Sprite>
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x11FF4DC", Offset = "0x11FF4DC", VA = "0x11FF4DC")]
			public S_Sprite()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000479")]
		public class V3_Q : SerializableDictionaryBase<Vector3, Quaternion>
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x11FF54C", Offset = "0x11FF54C", VA = "0x11FF54C")]
			public V3_Q()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047A")]
		public class Q_V3 : SerializableDictionaryBase<Quaternion, Vector3>
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x11FF2AC", Offset = "0x11FF2AC", VA = "0x11FF2AC")]
			public Q_V3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047B")]
		public class S_GenericDictionary : SerializableDictionaryBase<string, ClassTest>
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x11FF3FC", Offset = "0x11FF3FC", VA = "0x11FF3FC")]
			public S_GenericDictionary()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047C")]
		public class I_GenericDictionary : SerializableDictionaryBase<int, ClassTest>
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x11FF15C", Offset = "0x11FF15C", VA = "0x11FF15C")]
			public I_GenericDictionary()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047D")]
		public class Int_IntArray : SerializableDictionaryBase<int, ArrayTest>
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x11FF1CC", Offset = "0x11FF1CC", VA = "0x11FF1CC")]
			public Int_IntArray()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047E")]
		public class Enum_String : SerializableDictionaryBase<EnumExample, string>
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x11FEE4C", Offset = "0x11FEE4C", VA = "0x11FEE4C")]
			public Enum_String()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047F")]
		public class AdvanGeneric_String : SerializableDictionaryBase<AdvancedGenericClass, string>
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x11FEBF4", Offset = "0x11FEBF4", VA = "0x11FEBF4")]
			public AdvanGeneric_String()
			{
			}
		}

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Generic_String _genericString;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Generic_Generic _genericGeneric;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "IDAttribute", RVA = "0xF34590", Offset = "0xF34590")]
		private S_GenericDictionary _stringGeneric;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private I_GenericDictionary _intGeneric;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private I_GO _intGameobject;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GO_I _gameobjectInt;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private S_GO _stringGameobject;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GO_S _gameobjectString;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private S_Mat _stringMaterial;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Mat_S _materialString;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private V3_Q _vector3Quaternion;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Q_V3 _quaternionVector3;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private S_AC _stringAudioClip;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AC_S _audioClipString;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private C_Int _charInt;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private G_Int _gradientInt;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Int_IntArray _intArray;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Enum_String _enumString;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[DrawKeyAsProperty]
		private AdvanGeneric_String _advancedGenericKey;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x11FEB7C", Offset = "0x11FEB7C", VA = "0x11FEB7C")]
		public DataBaseExample()
		{
		}
	}
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xF2CB40", Offset = "0xF2CB40")]
	public class NestedDB : ScriptableObject
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "IDAttribute", RVA = "0xF34720", Offset = "0xF34720")]
		public MainDict nested;

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x11FF6A4", Offset = "0x11FF6A4", VA = "0x11FF6A4")]
		public NestedDB()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000481")]
	public class Example
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QueryTriggerInteraction enumVal;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NestedDict nestedData;

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x11FF5BC", Offset = "0x11FF5BC", VA = "0x11FF5BC")]
		public Example()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class NestedExample
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color color;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Nested2Dict deepNested;

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x11FF71C", Offset = "0x11FF71C", VA = "0x11FF71C")]
		public NestedExample()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000483")]
	public class MainDict : SerializableDictionaryBase<string, Example>
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x11FF5C4", Offset = "0x11FF5C4", VA = "0x11FF5C4")]
		public MainDict()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000484")]
	public class NestedDict : SerializableDictionaryBase<int, NestedExample>
	{
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x11FF6AC", Offset = "0x11FF6AC", VA = "0x11FF6AC")]
		public NestedDict()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000485")]
	public class Nested2Dict : SerializableDictionaryBase<QueryTriggerInteraction, string>
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x11FF634", Offset = "0x11FF634", VA = "0x11FF634")]
		public Nested2Dict()
		{
		}
	}
}
namespace RotaryHeart.Lib.SerializableDictionary
{
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xF2CB8C", Offset = "0xF2CB8C")]
	public class DrawKeyAsPropertyAttribute : Attribute
	{
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x11FF724", Offset = "0x11FF724", VA = "0x11FF724")]
		public DrawKeyAsPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xF2CBA0", Offset = "0xF2CBA0")]
	public class IDAttribute : Attribute
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _id;

		[Token(Token = "0x1700031B")]
		public string Id
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0x11FF734", Offset = "0x11FF734", VA = "0x11FF734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x11FF73C", Offset = "0x11FF73C", VA = "0x11FF73C")]
		public IDAttribute(string id)
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class RequiredReferences : ScriptableObject
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _gameObject;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _audioClip;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _sprite;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture _texture;

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x11FF770", Offset = "0x11FF770", VA = "0x11FF770")]
		public RequiredReferences()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public class ReorderableList
	{
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x11FF768", Offset = "0x11FF768", VA = "0x11FF768")]
		public ReorderableList()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public abstract class DrawableDictionary
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public ReorderableList reorderableList;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public RequiredReferences reqReferences;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isExpanded;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x11FF72C", Offset = "0x11FF72C", VA = "0x11FF72C")]
		protected DrawableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xF2CBB4", Offset = "0xF2CBB4")]
	public class SerializableDictionaryBase<TKey, TValue> : DrawableDictionary, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> _dict;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<TKey, TValue> _staticEmptyDict;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _keyValues;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _keys;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TValue> _values;

		[Token(Token = "0x1700031C")]
		public TValue Item
		{
			[Token(Token = "0x6001B09")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6001B0A")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x6001B0B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x6001B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public int Count
		{
			[Token(Token = "0x6001B0D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
		{
			[Token(Token = "0x6001B0E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B04")]
		public void CopyFrom(IDictionary<TKey, TValue> src)
		{
		}

		[Token(Token = "0x6001B05")]
		public void CopyFrom(object src)
		{
		}

		[Token(Token = "0x6001B06")]
		public void CopyTo(IDictionary<TKey, TValue> dest)
		{
		}

		[Token(Token = "0x6001B07")]
		public Dictionary<TKey, TValue> Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		public bool ContainsValue(TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0F")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001B10")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B11")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B12")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B13")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6001B15")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001B17")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		public Dictionary<TKey, TValue>.Enumerator GetEnumerator()
		{
			return default(Dictionary<TKey, TValue>.Enumerator);
		}

		[Token(Token = "0x6001B19")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B1B")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001B1C")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001B1D")]
		public SerializableDictionaryBase()
		{
		}
	}
}
namespace Windows
{
	[Token(Token = "0x200048C")]
	public class ConsoleInput
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inputString;

		[Token(Token = "0x1400001A")]
		public event Action<string> OnInputText
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x1C22BC0", Offset = "0x1C22BC0", VA = "0x1C22BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D3DC", Offset = "0xF3D3DC")]
			add
			{
			}
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x1C22C64", Offset = "0x1C22C64", VA = "0x1C22C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3D3EC", Offset = "0xF3D3EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x1C22D08", Offset = "0x1C22D08", VA = "0x1C22D08")]
		public void ClearLine()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1C22DB0", Offset = "0x1C22DB0", VA = "0x1C22DB0")]
		public void RedrawInputLine()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1C22E6C", Offset = "0x1C22E6C", VA = "0x1C22E6C")]
		internal void OnBackspace()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1C22EC0", Offset = "0x1C22EC0", VA = "0x1C22EC0")]
		internal void OnEscape()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1C22F14", Offset = "0x1C22F14", VA = "0x1C22F14")]
		internal void OnEnter()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x1C22FD4", Offset = "0x1C22FD4", VA = "0x1C22FD4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1C230E4", Offset = "0x1C230E4", VA = "0x1C230E4")]
		public ConsoleInput()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class ConsoleWindow
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextWriter oldOutput;

		[Token(Token = "0x4001A58")]
		private const int STD_OUTPUT_HANDLE = -11;

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1C2313C", Offset = "0x1C2313C", VA = "0x1C2313C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1C23554", Offset = "0x1C23554", VA = "0x1C23554")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1C23648", Offset = "0x1C23648", VA = "0x1C23648")]
		public void SetTitle(string strName)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1C233BC", Offset = "0x1C233BC", VA = "0x1C233BC")]
		private static extern bool AttachConsole(uint dwProcessId);

		[PreserveSig]
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1C2344C", Offset = "0x1C2344C", VA = "0x1C2344C")]
		private static extern bool AllocConsole();

		[PreserveSig]
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1C235C4", Offset = "0x1C235C4", VA = "0x1C235C4")]
		private static extern bool FreeConsole();

		[PreserveSig]
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1C234CC", Offset = "0x1C234CC", VA = "0x1C234CC")]
		private static extern IntPtr GetStdHandle(int nStdHandle);

		[PreserveSig]
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1C23650", Offset = "0x1C23650", VA = "0x1C23650")]
		private static extern bool SetConsoleTitle(string lpConsoleTitle);

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1C236EC", Offset = "0x1C236EC", VA = "0x1C236EC")]
		public ConsoleWindow()
		{
		}
	}
}
namespace VoxelArena
{
	[Token(Token = "0x200048E")]
	public class AvatarSelection : MonoBehaviour
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerScript player;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mirror;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MirroredAvatar mirrorAvatar;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentSkinId;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3483C", Offset = "0xF3483C")]
		public Camera mirrorCamera;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject arrows;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject errorObj;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34874", Offset = "0xF34874")]
		public int avatarSelectionLayer;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1735F10", Offset = "0x1735F10", VA = "0x1735F10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1736034", Offset = "0x1736034", VA = "0x1736034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x17362F4", Offset = "0x17362F4", VA = "0x17362F4")]
		public void NextSkin(int way)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1736404", Offset = "0x1736404", VA = "0x1736404")]
		public void RandomSkin()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x173650C", Offset = "0x173650C", VA = "0x173650C")]
		public AvatarSelection()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class MirroredAvatar : MonoBehaviour
	{
		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF348AC", Offset = "0xF348AC")]
		public GameObject[] objectsToMirror;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF348E4", Offset = "0xF348E4")]
		public int mirrorWorldLayer;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isActivated;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] mirroredObjects;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject mirroredObjectsHolder;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] listOfObjectToActivateInMirror;

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x12124A0", Offset = "0x12124A0", VA = "0x12124A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x12125E8", Offset = "0x12125E8", VA = "0x12125E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x12125EC", Offset = "0x12125EC", VA = "0x12125EC")]
		private void InstantiateClone()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1212EEC", Offset = "0x1212EEC", VA = "0x1212EEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1212F24", Offset = "0x1212F24", VA = "0x1212F24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1212CF8", Offset = "0x1212CF8", VA = "0x1212CF8")]
		public void DeleteMirrorInstance()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1212F28", Offset = "0x1212F28", VA = "0x1212F28")]
		public void SetObjectsNameToActivate(string[] names)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1212DF0", Offset = "0x1212DF0", VA = "0x1212DF0")]
		private void EnabledMirroredObject(string objectName)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1212F3C", Offset = "0x1212F3C", VA = "0x1212F3C")]
		public MirroredAvatar()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public static class AudioFading
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CBEC", Offset = "0xF2CBEC")]
		private sealed class <FadeOut>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioSource audioSource;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float FadeTime;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <StartTime>5__2;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startVolume>5__3;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B45")]
				[Address(RVA = "0x1735EA0", Offset = "0x1735EA0", VA = "0x1735EA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B47")]
				[Address(RVA = "0x1735F08", Offset = "0x1735F08", VA = "0x1735F08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x17359BC", Offset = "0x17359BC", VA = "0x17359BC")]
			[DebuggerHidden]
			public <FadeOut>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x1735CD0", Offset = "0x1735CD0", VA = "0x1735CD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x1735CD4", Offset = "0x1735CD4", VA = "0x1735CD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x1735EA8", Offset = "0x1735EA8", VA = "0x1735EA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CBFC", Offset = "0xF2CBFC")]
		private sealed class <FadeIn>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioSource audioSource;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float FadeTime;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <StartTime>5__2;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endVolume>5__3;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B4B")]
				[Address(RVA = "0x1735C60", Offset = "0x1735C60", VA = "0x1735C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B4D")]
				[Address(RVA = "0x1735CC8", Offset = "0x1735CC8", VA = "0x1735CC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x1735A68", Offset = "0x1735A68", VA = "0x1735A68")]
			[DebuggerHidden]
			public <FadeIn>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x1735A98", Offset = "0x1735A98", VA = "0x1735A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x1735A9C", Offset = "0x1735A9C", VA = "0x1735A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x1735C68", Offset = "0x1735C68", VA = "0x1735C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isFadingIn;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool isFadingOut;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x173593C", Offset = "0x173593C", VA = "0x173593C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D3FC", Offset = "0xF3D3FC")]
		public static IEnumerator FadeOut(AudioSource audioSource, float FadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x17359E8", Offset = "0x17359E8", VA = "0x17359E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D460", Offset = "0xF3D460")]
		public static IEnumerator FadeIn(AudioSource audioSource, float FadeTime)
		{
			return null;
		}
	}
	[Token(Token = "0x2000493")]
	public class AnimatedButton : MonoBehaviour
	{
		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CC0C", Offset = "0xF2CC0C")]
		private sealed class <WaitEndAnimation>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimatedButton <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B61")]
				[Address(RVA = "0x1734D68", Offset = "0x1734D68", VA = "0x1734D68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B63")]
				[Address(RVA = "0x1734DD0", Offset = "0x1734DD0", VA = "0x1734DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x1734AE8", Offset = "0x1734AE8", VA = "0x1734AE8")]
			[DebuggerHidden]
			public <WaitEndAnimation>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x1734C98", Offset = "0x1734C98", VA = "0x1734C98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x1734C9C", Offset = "0x1734C9C", VA = "0x1734C9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x1734D70", Offset = "0x1734D70", VA = "0x1734D70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int HAPTIC_DURATION;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private byte HAPTIC_INTENSITY;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float debounceTime;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lastButtonPressedTime;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAnimationInProgress;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isPressed;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool isActivated;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string buttonName;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3492C", Offset = "0xF3492C")]
		public Renderer[] enabledRenderers;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer[] disabledRenderers;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34964", Offset = "0xF34964")]
		public UnityEvent actionWhenClicked;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool debugAction;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3499C", Offset = "0xF3499C")]
		public GameObject[] objectsToCheckInUnscaledTime;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isCheckIndependtlyFromTimeScale;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool[] currentHandsForUnscaled;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF349D4", Offset = "0xF349D4")]
		public bool isRenameButtonForNetwork;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool isTwoStateButton;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float animationTime;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34A0C", Offset = "0xF34A0C")]
		public bool isAnimateItself;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isNetworkButton;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1733A48", Offset = "0x1733A48", VA = "0x1733A48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x1733B5C", Offset = "0x1733B5C", VA = "0x1733B5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1733C5C", Offset = "0x1733C5C", VA = "0x1733C5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1733D24", Offset = "0x1733D24", VA = "0x1733D24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x173439C", Offset = "0x173439C", VA = "0x173439C")]
		private void ResetHands()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x17344CC", Offset = "0x17344CC", VA = "0x17344CC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x17346E4", Offset = "0x17346E4", VA = "0x17346E4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1734654", Offset = "0x1734654", VA = "0x1734654")]
		private bool IndexFingerPressingMe(GameObject gob)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x173493C", Offset = "0x173493C", VA = "0x173493C")]
		private void PressInButton()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1734804", Offset = "0x1734804", VA = "0x1734804")]
		private void ReleaseButton()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1734A78", Offset = "0x1734A78", VA = "0x1734A78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D564", Offset = "0xF3D564")]
		private IEnumerator WaitEndAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1734134", Offset = "0x1734134", VA = "0x1734134")]
		public void AskButtonPressed(GameObject collider)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1734B14", Offset = "0x1734B14", VA = "0x1734B14")]
		public void ButtonPressed()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1734B98", Offset = "0x1734B98", VA = "0x1734B98")]
		public void ApticPressingButton(string handName)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1734C38", Offset = "0x1734C38", VA = "0x1734C38")]
		public void SetState(bool pressed)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1734C5C", Offset = "0x1734C5C", VA = "0x1734C5C")]
		public AnimatedButton()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class ButtonsManager : NetworkBehaviour
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float TIME_BETWEEN_BUTTON_SOUND;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int APTIC_DURATION;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte APTIC_INTENSITY;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string textField;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastSoundTime;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxNumberOfCharacters;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string ValidateButtonName;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float minimalTimeIntervalBetweenPresses;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lastPressTime;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public PanelButtonsManager panelManager;

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1737770", Offset = "0x1737770", VA = "0x1737770")]
		public void ButtonPressed(string buttonName)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x1737904", Offset = "0x1737904", VA = "0x1737904")]
		public string GetTextInput()
		{
			return null;
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x173790C", Offset = "0x173790C", VA = "0x173790C")]
		public void ApticPressingButton(string handName)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1737A7C", Offset = "0x1737A7C", VA = "0x1737A7C")]
		public void PlayPressButtonSound(AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1737AE0", Offset = "0x1737AE0", VA = "0x1737AE0")]
		public ButtonsManager()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1737B8C", Offset = "0x1737B8C", VA = "0x1737B8C")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class IndexFinger : MonoBehaviour
	{
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x12114D4", Offset = "0x12114D4", VA = "0x12114D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x12115FC", Offset = "0x12115FC", VA = "0x12115FC")]
		public IndexFinger()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class PanelButtonsManager : NetworkBehaviour
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SyncVar]
		public string currentEntry;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string expectedResult;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string unlockObjectName;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string unlockFunctionName;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool propagateMessageToAllClients;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TextMeshProUGUI screenOutput;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ButtonsManager buttonManagerChild;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool doneUnlocked;

		[Token(Token = "0x17000327")]
		public string NetworkcurrentEntry
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x1222680", Offset = "0x1222680", VA = "0x1222680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x1222578", Offset = "0x1222578", VA = "0x1222578")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1221CDC", Offset = "0x1221CDC", VA = "0x1221CDC")]
		public bool ProcessInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1222300", Offset = "0x1222300", VA = "0x1222300")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x12223F4", Offset = "0x12223F4", VA = "0x12223F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1222324", Offset = "0x1222324", VA = "0x1222324")]
		private void FindNecessaryChildren()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1222520", Offset = "0x1222520", VA = "0x1222520")]
		private void UpdateScreen()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x1222614", Offset = "0x1222614", VA = "0x1222614")]
		public PanelButtonsManager()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x122267C", Offset = "0x122267C", VA = "0x122267C")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1222688", Offset = "0x1222688", VA = "0x1222688", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x122277C", Offset = "0x122277C", VA = "0x122277C", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class PressButton : MonoBehaviour
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject skinButton;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject pressedButtonObject;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ButtonsManager parentButtonManager;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string buttonName;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x152D608", Offset = "0x152D608", VA = "0x152D608")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x152D8F4", Offset = "0x152D8F4", VA = "0x152D8F4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x152DBE4", Offset = "0x152DBE4", VA = "0x152DBE4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x152D69C", Offset = "0x152D69C", VA = "0x152D69C")]
		private void FindButtonsManager()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x152DA6C", Offset = "0x152DA6C", VA = "0x152DA6C")]
		private bool IndexFingerPressingMe(GameObject gob)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x152D850", Offset = "0x152D850", VA = "0x152D850")]
		private void ActivePressedButton(bool buttonState)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x152DAF8", Offset = "0x152DAF8", VA = "0x152DAF8")]
		private void PressSkinButton(bool buttonState)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x152DD04", Offset = "0x152DD04", VA = "0x152DD04")]
		public PressButton()
		{
		}
	}
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CC1C", Offset = "0xF2CC1C")]
	public class SimpleButton : MonoBehaviour
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int HAPTIC_DURATION;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private byte HAPTIC_INTENSITY;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent clickedAction;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audio;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34A64", Offset = "0xF34A64")]
		public bool isCheckIndependtlyFromTimeScale;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool prevCollisionCheck;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] objectsToCheckInUnscaledTime;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF34A9C", Offset = "0xF34A9C")]
		public string colliderTag;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minDelayBetweenClicks;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastClick;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float movementAmplitude;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 movementAxis;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool checkOnlyHeadset;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x15339E0", Offset = "0x15339E0", VA = "0x15339E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1533A80", Offset = "0x1533A80", VA = "0x1533A80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1533EE8", Offset = "0x1533EE8", VA = "0x1533EE8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1533C78", Offset = "0x1533C78", VA = "0x1533C78")]
		private void Action()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1534260", Offset = "0x1534260", VA = "0x1534260")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1533E4C", Offset = "0x1533E4C", VA = "0x1533E4C")]
		private void ApticPressingButton(string handName)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1534620", Offset = "0x1534620", VA = "0x1534620")]
		public SimpleButton()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class StandaloneButton : NetworkBehaviour
	{
		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject skinButton;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject pressedButtonObject;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string actionReceiverName;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string actionReceiverFunction;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int actionReceiverParam;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool stayPressed;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource audioSource;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float TIME_BETWEEN_BUTTON_SOUND;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int APTIC_DURATION;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private byte APTIC_INTENSITY;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastSoundTime;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isCurrentlyPressed;

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1534648", Offset = "0x1534648", VA = "0x1534648")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x15347C4", Offset = "0x15347C4", VA = "0x15347C4")]
		public void ApticPressingButton(string handName)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1534934", Offset = "0x1534934", VA = "0x1534934")]
		public void PlayPressButtonSound(AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1534998", Offset = "0x1534998", VA = "0x1534998")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1534D30", Offset = "0x1534D30", VA = "0x1534D30")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1534EF8", Offset = "0x1534EF8", VA = "0x1534EF8")]
		public void SetGenericButtonState(int value)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1534B9C", Offset = "0x1534B9C", VA = "0x1534B9C")]
		private bool IndexFingerPressingMe(GameObject gob)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x15346BC", Offset = "0x15346BC", VA = "0x15346BC")]
		private void ActivePressedButton(bool buttonState)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1534C28", Offset = "0x1534C28", VA = "0x1534C28")]
		private void PressSkinButton(bool buttonState)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1534F2C", Offset = "0x1534F2C", VA = "0x1534F2C")]
		public StandaloneButton()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1534FA8", Offset = "0x1534FA8", VA = "0x1534FA8")]
		private void MirrorProcessed()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class BroadCastCamera : MonoBehaviour
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Camera cam;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34AD4", Offset = "0xF34AD4")]
		public GameObject[] pos;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float posSwapInterval;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34B0C", Offset = "0xF34B0C")]
		public GameObject ui;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject helpText;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isForceHideUI;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34B44", Offset = "0xF34B44")]
		public KeyCode hideUIKey;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode autoSwitchCameraKey;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KeyCode freeModekey;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode helpKey;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject[] playersHeads;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected PlayerScript[] playersScripts;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int currentPos;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int currentPlayer;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float lastSwapTime;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool isShowingPlayerCamera;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		protected bool mustHidePlayerCamera;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		protected bool isAutoSwitchCamera;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		protected bool isFreeCam;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool isUseCustomPositions;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mainSpeed;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float add;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float shiftAdd;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float maxShift;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float camSens;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastMouse;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float totalRun;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x1736524", Offset = "0x1736524", VA = "0x1736524", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x173682C", Offset = "0x173682C", VA = "0x173682C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1737060", Offset = "0x1737060", VA = "0x1737060")]
		public bool IsShowingPlayerCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1737068", Offset = "0x1737068", VA = "0x1737068")]
		public void EnableShowPlayer(bool value)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x173708C", Offset = "0x173708C", VA = "0x173708C")]
		protected void FindPlayers()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1736A10", Offset = "0x1736A10", VA = "0x1736A10")]
		protected void ManageKeyboard()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1736860", Offset = "0x1736860", VA = "0x1736860")]
		protected void ManageSwapCamera()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1736624", Offset = "0x1736624", VA = "0x1736624")]
		public void RefreshCamPosition()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1737204", Offset = "0x1737204", VA = "0x1737204", Slot = "6")]
		public virtual void SetCamOnPlayer(PlayerScript playerScript)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1736C54", Offset = "0x1736C54", VA = "0x1736C54")]
		protected void ManageFreeCam()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1737394", Offset = "0x1737394", VA = "0x1737394")]
		private Vector3 GetFreeCamInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x17376E0", Offset = "0x17376E0", VA = "0x17376E0")]
		public BroadCastCamera()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class GameManager : NetworkBehaviour
	{
		[Token(Token = "0x200049D")]
		protected enum ArenaGameState
		{
			[Token(Token = "0x4001AE6")]
			LOBBY,
			[Token(Token = "0x4001AE7")]
			INGAME,
			[Token(Token = "0x4001AE8")]
			ENDLOBBY
		}

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CC80", Offset = "0xF2CC80")]
		private sealed class <LoadSceneRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool doFading;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string scene;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BBF")]
				[Address(RVA = "0x1740314", Offset = "0x1740314", VA = "0x1740314", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC1")]
				[Address(RVA = "0x174037C", Offset = "0x174037C", VA = "0x174037C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x173F6D4", Offset = "0x173F6D4", VA = "0x173F6D4")]
			[DebuggerHidden]
			public <LoadSceneRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x17400D8", Offset = "0x17400D8", VA = "0x17400D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x17400DC", Offset = "0x17400DC", VA = "0x17400DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x174031C", Offset = "0x174031C", VA = "0x174031C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ArenaGameState arenaCurrentState;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34B7C", Offset = "0xF34B7C")]
		public float gameLenght;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SyncVar]
		public float timer;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected PlayerScript player;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private QuestMove questMove;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34BC4", Offset = "0xF34BC4")]
		public AudioSource cheatModeAudio;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool cheatModeEnabled;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float cheatButtonTime;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34BFC", Offset = "0xF34BFC")]
		public TranslationManager.Language editorLanguage;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool isPaused;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool isLevelLoading;

		[Token(Token = "0x17000328")]
		public float Networktimer
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x173F854", Offset = "0x173F854", VA = "0x173F854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x173F85C", Offset = "0x173F85C", VA = "0x173F85C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x173E8B4", Offset = "0x173E8B4", VA = "0x173E8B4", Slot = "15")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x173EC70", Offset = "0x173EC70", VA = "0x173EC70", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x173F0D4", Offset = "0x173F0D4", VA = "0x173F0D4")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x173F2FC", Offset = "0x173F2FC", VA = "0x173F2FC", Slot = "17")]
		protected virtual void StartGameOnServer()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x173F300", Offset = "0x173F300", VA = "0x173F300", Slot = "18")]
		protected virtual void AppOptionOnServer()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x173F21C", Offset = "0x173F21C", VA = "0x173F21C")]
		[ClientRpc]
		private void RpcStartGame()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x173F36C", Offset = "0x173F36C", VA = "0x173F36C", Slot = "19")]
		protected virtual void StartGameOnClient()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x173F370", Offset = "0x173F370", VA = "0x173F370")]
		private void StopGame()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x173F524", Offset = "0x173F524", VA = "0x173F524", Slot = "20")]
		protected virtual void StopGameOnServer()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x173F444", Offset = "0x173F444", VA = "0x173F444")]
		[ClientRpc]
		private void RpcStopGame()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x173F528", Offset = "0x173F528", VA = "0x173F528", Slot = "21")]
		protected virtual void StopGameOnClient()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x173F52C", Offset = "0x173F52C", VA = "0x173F52C")]
		public void SwitchPauseGame()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x173F554", Offset = "0x173F554", VA = "0x173F554")]
		public bool IsGamePaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x173EE9C", Offset = "0x173EE9C", VA = "0x173EE9C")]
		private void ManageCheatMode()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x173F55C", Offset = "0x173F55C", VA = "0x173F55C")]
		protected void SetGameInfoString(string gameInfo)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x173F640", Offset = "0x173F640", VA = "0x173F640")]
		public bool IsLevelLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x173F648", Offset = "0x173F648", VA = "0x173F648")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D638", Offset = "0xF3D638")]
		public IEnumerator LoadSceneRoutine(string scene, bool doFading = true)
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x173F700", Offset = "0x173F700", VA = "0x173F700")]
		[ClientRpc]
		private void RpcFadeOut()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x173F7E0", Offset = "0x173F7E0", VA = "0x173F7E0")]
		public GameManager()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x173F850", Offset = "0x173F850", VA = "0x173F850")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x173F8F8", Offset = "0x173F8F8", VA = "0x173F8F8")]
		private void UserCode_RpcStartGame()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x173F92C", Offset = "0x173F92C", VA = "0x173F92C")]
		protected static void InvokeUserCode_RpcStartGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x173FA30", Offset = "0x173FA30", VA = "0x173FA30")]
		private void UserCode_RpcStopGame()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x173FA64", Offset = "0x173FA64", VA = "0x173FA64")]
		protected static void InvokeUserCode_RpcStopGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x173FB68", Offset = "0x173FB68", VA = "0x173FB68")]
		private void UserCode_RpcFadeOut()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x173FC88", Offset = "0x173FC88", VA = "0x173FC88")]
		protected static void InvokeUserCode_RpcFadeOut(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x173FD74", Offset = "0x173FD74", VA = "0x173FD74")]
		static GameManager()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x173FF04", Offset = "0x173FF04", VA = "0x173FF04", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1740000", Offset = "0x1740000", VA = "0x1740000", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class GameTypeSelector : Singleton<GameTypeSelector>
	{
		[Token(Token = "0x20004A0")]
		public enum GameType
		{
			[Token(Token = "0x4001B02")]
			STORE,
			[Token(Token = "0x4001B03")]
			LBE
		}

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CC90", Offset = "0xF2CC90")]
		private sealed class <NotValidatedEndProcedure>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameTypeSelector <>4__this;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private InfoMessage <info>5__2;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD0")]
				[Address(RVA = "0x174198C", Offset = "0x174198C", VA = "0x174198C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD2")]
				[Address(RVA = "0x17419F4", Offset = "0x17419F4", VA = "0x17419F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x1741764", Offset = "0x1741764", VA = "0x1741764")]
			[DebuggerHidden]
			public <NotValidatedEndProcedure>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x17417E8", Offset = "0x17417E8", VA = "0x17417E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x17417EC", Offset = "0x17417EC", VA = "0x17417EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x1741994", Offset = "0x1741994", VA = "0x1741994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34C34", Offset = "0xF34C34")]
		public GameType gameType;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isDemo;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isDeveloperBuild;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool isMultiplayer;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool isSpectator;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool isSpringboardVR;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[HideInInspector]
		public bool isSynthesisVR;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34CAC", Offset = "0xF34CAC")]
		public GameObject dissonnanceObjectPrefab;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject dissonnanceObject;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NetworkInit netInit;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BroadCastCamera spectatorCamera;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34CF4", Offset = "0xF34CF4")]
		public GameObject infoMessagePrefab;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool shouldQuit;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34D2C", Offset = "0xF34D2C")]
		public bool isStoreAutoConnect;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool isStoreServerAPlayer;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34D64", Offset = "0xF34D64")]
		public bool forceEditorAsHostInLBE;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool forceEditorAsClientInLBE;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool forceEditorAsSpectatorInLBE;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject synthesisVRPrefab;

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1740384", Offset = "0x1740384", VA = "0x1740384", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x17403D4", Offset = "0x17403D4", VA = "0x17403D4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1740AD8", Offset = "0x1740AD8", VA = "0x1740AD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1740AEC", Offset = "0x1740AEC", VA = "0x1740AEC")]
		private void HeadsetTypeReceived(string error, string type)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x17414B8", Offset = "0x17414B8", VA = "0x17414B8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1740794", Offset = "0x1740794", VA = "0x1740794")]
		public void InitSceneObjects()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1740940", Offset = "0x1740940", VA = "0x1740940")]
		private void DisplaySpectatorCamera(bool display)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x17414BC", Offset = "0x17414BC", VA = "0x17414BC")]
		private void InitInfoMessage()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x17416B0", Offset = "0x17416B0", VA = "0x17416B0")]
		public void DestroyChat()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1741448", Offset = "0x1741448", VA = "0x1741448")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D6FC", Offset = "0xF3D6FC")]
		private IEnumerator NotValidatedEndProcedure()
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x1741790", Offset = "0x1741790", VA = "0x1741790")]
		public GameTypeSelector()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public enum HeadsetType
	{
		[Token(Token = "0x4001B09")]
		NONE,
		[Token(Token = "0x4001B0A")]
		OVR,
		[Token(Token = "0x4001B0B")]
		STEAMVR,
		[Token(Token = "0x4001B0C")]
		MOBILE,
		[Token(Token = "0x4001B0D")]
		PICO,
		[Token(Token = "0x4001B0E")]
		DESKTOP,
		[Token(Token = "0x4001B0F")]
		QIYU
	}
	[Token(Token = "0x20004A3")]
	public class HeadsetPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HeadsetType headsetType;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HeadsetType type;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static GameObject playerRef;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameObject headRef;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static GameObject leftHandRef;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static GameObject rightHandRef;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static GameObject rightLaserRef;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static GameObject leftLaserRef;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ScreenFade screenFadeRef;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject player;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject head;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected GameObject leftHand;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected GameObject rightHand;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GameObject leftLaser;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected GameObject rightLaser;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScreenFade screenFade;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Camera targetCameraForUI;

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1743200", Offset = "0x1743200", VA = "0x1743200", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1742BE8", Offset = "0x1742BE8", VA = "0x1742BE8")]
		public void SetTrackingType(TrackingType trackingType)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1743514", Offset = "0x1743514", VA = "0x1743514")]
		public HeadsetPlayer()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public enum TrackingType
	{
		[Token(Token = "0x4001B22")]
		EYE,
		[Token(Token = "0x4001B23")]
		FLOOR,
		[Token(Token = "0x4001B24")]
		STAGE
	}
	[Token(Token = "0x20004A5")]
	public class HeadsetManager : MonoBehaviour
	{
		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CCA0", Offset = "0xF2CCA0")]
		private sealed class <StartXRCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeadsetManager <>4__this;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0x1743190", Offset = "0x1743190", VA = "0x1743190", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE3")]
				[Address(RVA = "0x17431F8", Offset = "0x17431F8", VA = "0x17431F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x1742E84", Offset = "0x1742E84", VA = "0x1742E84")]
			[DebuggerHidden]
			public <StartXRCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x1742EC0", Offset = "0x1742EC0", VA = "0x1742EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x1742EC4", Offset = "0x1742EC4", VA = "0x1742EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x1743198", Offset = "0x1743198", VA = "0x1743198", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34DFC", Offset = "0xF34DFC")]
		public GameObject OVRPrefab;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject steamVRPrefab;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject desktopPrefab;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject mobileAndroidPrefab;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject mobileiOSPrefab;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject picoPrefab;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject qiyuPrefab;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34E34", Offset = "0xF34E34")]
		public GameObject debugPrefab;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34E6C", Offset = "0xF34E6C")]
		public Transform startPosition;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isActivatedOnWindows;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isHeadsetActivated;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool isTeleportDisabled;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public TrackingType trackingType;

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1742350", Offset = "0x1742350", VA = "0x1742350")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x17429E0", Offset = "0x17429E0", VA = "0x17429E0")]
		private void InstantiateHeadset(GameObject obj)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x17428E0", Offset = "0x17428E0", VA = "0x17428E0")]
		public bool isVRCommandLine(string pattern)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x174298C", Offset = "0x174298C", VA = "0x174298C")]
		public void StartXR()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1742CBC", Offset = "0x1742CBC", VA = "0x1742CBC")]
		public void StopXR()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1742E14", Offset = "0x1742E14", VA = "0x1742E14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D7B0", Offset = "0xF3D7B0")]
		private IEnumerator StartXRCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1742EB0", Offset = "0x1742EB0", VA = "0x1742EB0")]
		public HeadsetManager()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class DesktopGrab : MonoBehaviour
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRGrabber grabber;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider currentCollider;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isGrabbing;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isMoving;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkGrabbableScript currentGrabbale;

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x173DFA8", Offset = "0x173DFA8", VA = "0x173DFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x173E038", Offset = "0x173E038", VA = "0x173E038")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x173E2E8", Offset = "0x173E2E8", VA = "0x173E2E8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x173E39C", Offset = "0x173E39C", VA = "0x173E39C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x173E44C", Offset = "0x173E44C", VA = "0x173E44C")]
		public DesktopGrab()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CCB0", Offset = "0xF2CCB0")]
	public class GameHand : MonoBehaviour
	{
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRHandAnimation currentVRHand;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerScript player;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentSkinId;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isLeftHand;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isGrabbing;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x173E454", Offset = "0x173E454", VA = "0x173E454")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x173E4AC", Offset = "0x173E4AC", VA = "0x173E4AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x173E4B4", Offset = "0x173E4B4", VA = "0x173E4B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x173437C", Offset = "0x173437C", VA = "0x173437C")]
		public void SetIsNearClickArea(bool value)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x173E6E4", Offset = "0x173E6E4", VA = "0x173E6E4")]
		public GameHand()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class GameHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftHandObject;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightHandObject;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftControllerObject;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject rightControllerObject;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastCheckTime;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x173E6FC", Offset = "0x173E6FC", VA = "0x173E6FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x173E724", Offset = "0x173E724", VA = "0x173E724")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x173E8AC", Offset = "0x173E8AC", VA = "0x173E8AC")]
		public GameHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class GrabEmulator : MonoBehaviour
	{
		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode grabKey;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRGrabber grabber;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRGrabbable grabScript;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider col;

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x17419FC", Offset = "0x17419FC", VA = "0x17419FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1741A6C", Offset = "0x1741A6C", VA = "0x1741A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1741BE0", Offset = "0x1741BE0", VA = "0x1741BE0")]
		public GrabEmulator()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CD14", Offset = "0xF2CD14")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CD14", Offset = "0xF2CD14")]
	public class GrabbableToTarget : OVRGrabbable
	{
		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string expectedAnchorTag;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float expectedAnchorDistance;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool isKinematicOnRelease;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool mustAttachToAnchor;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool mustAttachToParent;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform expectedAnchorPosition;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform prevParent;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerScript player;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1741BE8", Offset = "0x1741BE8", VA = "0x1741BE8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1741C2C", Offset = "0x1741C2C", VA = "0x1741C2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1741DFC", Offset = "0x1741DFC", VA = "0x1741DFC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1741F04", Offset = "0x1741F04", VA = "0x1741F04", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x17422D8", Offset = "0x17422D8", VA = "0x17422D8")]
		public GrabbableToTarget()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class QuestMove : MonoBehaviour
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Head;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool noPitch;

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x152EAF4", Offset = "0x152EAF4", VA = "0x152EAF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x152EAF8", Offset = "0x152EAF8", VA = "0x152EAF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x152EC88", Offset = "0x152EC88", VA = "0x152EC88")]
		public QuestMove()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public enum QuestMoveDisplacementType
	{
		[Token(Token = "0x4001B55")]
		None,
		[Token(Token = "0x4001B56")]
		Smooth,
		[Token(Token = "0x4001B57")]
		Teleport,
		[Token(Token = "0x4001B58")]
		TeleportFree
	}
	[Token(Token = "0x20004AE")]
	public class QuestMoveSolo : MonoBehaviour
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Head;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool noPitch;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 limitInMeter;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform roomCenter;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Teleport[] teleportScript;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Teleport[] freeTeleportScript;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TeleportNode[] teleportNodes;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject tunellingObject;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useTunneling;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject leftHand;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OVRGrabber leftGrabber;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject rightHand;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OVRGrabber rightGrabber;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public QuestMoveDisplacementType displacementType;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private QuestMoveDisplacementType previousDisplacementType;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool allowJoystickRotation;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isSeated;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float angularRotation;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float joystickTreshold;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float moveJoystickTreshold;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float seatedOffset;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool doneLeftRotation;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool doneRightRotation;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x152EC98", Offset = "0x152EC98", VA = "0x152EC98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x152EE08", Offset = "0x152EE08", VA = "0x152EE08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x15309AC", Offset = "0x15309AC", VA = "0x15309AC")]
		public QuestMoveSolo()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34EA4", Offset = "0xF34EA4")]
		public VRInputManager.Hand hand;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float axisTreshold;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isKeepHeadOffset;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isStraight;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float angle;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float strength;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject freeTeleportMarkerPrefab;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layersToConsiderInRaycast;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LineRenderer aimLineRenderer;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color TeleportFreePossible;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color TeleportFreeImpossible;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask TeleportLayer;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LayerMask TeleportDetectorLayer;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int TeleportLayerID;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int TeleportDetectorLayerID;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float MaxDistanceScan;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool isDisplayed;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool wasAiming;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform aimedTransform;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 aimedPosition;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isDisabled;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Vector3> vertexList;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int maxVertexcount;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 velocity;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 groundPos;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 lastNormal;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float vertexDelta;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool groundDetected;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject freeTeleportMarker;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool debugIsActivated;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x153099C", Offset = "0x153099C", VA = "0x153099C")]
		public void Activate(bool value)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1535078", Offset = "0x1535078", VA = "0x1535078")]
		public void SearchForTeleport()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x15357FC", Offset = "0x15357FC", VA = "0x15357FC")]
		public void SearchForFreeTeleport()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1536174", Offset = "0x1536174", VA = "0x1536174")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1536310", Offset = "0x1536310", VA = "0x1536310")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x1536320", Offset = "0x1536320", VA = "0x1536320")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class TeleportNode : MonoBehaviour
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minVisibleDistance;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxVisibleDistance;

		[Token(Token = "0x4001B91")]
		public const float DeactivateDelay = 0.3f;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject player;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform partToRotateTowardsPlayer;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider[] colliderComponent;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer[] visual;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color normalColor;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color selectedColor;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool prevIsVisible;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool currentActivatedState;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastActivationTime;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x15363CC", Offset = "0x15363CC", VA = "0x15363CC")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x15364F0", Offset = "0x15364F0", VA = "0x15364F0")]
		public void SetColor(Color c)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x15365D0", Offset = "0x15365D0", VA = "0x15365D0")]
		public void SetMeshVisible(bool value)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1536694", Offset = "0x1536694", VA = "0x1536694")]
		public bool CheckVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1535744", Offset = "0x1535744", VA = "0x1535744")]
		public void SetActivated(bool value)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x15367C0", Offset = "0x15367C0", VA = "0x15367C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x15368A8", Offset = "0x15368A8", VA = "0x15368A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1536934", Offset = "0x1536934", VA = "0x1536934")]
		public TeleportNode()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class VRInputManager : Singleton<VRInputManager>
	{
		[Token(Token = "0x20004B2")]
		public enum InputType
		{
			[Token(Token = "0x4001BA7")]
			BUTTON,
			[Token(Token = "0x4001BA8")]
			AXIS1D,
			[Token(Token = "0x4001BA9")]
			AXIS2D,
			[Token(Token = "0x4001BAA")]
			HOVER
		}

		[Token(Token = "0x20004B3")]
		public enum Hand
		{
			[Token(Token = "0x4001BAC")]
			LEFT,
			[Token(Token = "0x4001BAD")]
			RIGHT,
			[Token(Token = "0x4001BAE")]
			ANY
		}

		[Serializable]
		[Token(Token = "0x20004B4")]
		private class Action
		{
			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputType type;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputKeyboard inputKeyboard;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputMouse inputMouse;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputOVR inputOVR;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InputSteam inputSteam;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputPico inputPico;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public InputQiyu inputQiyu;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool upStateRightHand;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool downStateRightHand;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
			public bool lastStateRightHand;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
			public bool upStateLeftHand;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool downStateLeftHand;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool lastStateLeftHand;

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x153B9C4", Offset = "0x153B9C4", VA = "0x153B9C4")]
			public Action()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B5")]
		private class Input
		{
			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isActive;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public InputType type;

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x153B9CC", Offset = "0x153B9CC", VA = "0x153B9CC")]
			public Input()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		private class InputKeyboard : Input
		{
			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode key;

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x153B9D4", Offset = "0x153B9D4", VA = "0x153B9D4")]
			public InputKeyboard()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B7")]
		private class InputMouse : Input
		{
			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axis;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string axis2;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int button;

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x153B9DC", Offset = "0x153B9DC", VA = "0x153B9DC")]
			public InputMouse()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B8")]
		private class InputOVR : Input
		{
			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRInput.Button button;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OVRInput.Axis1D axis;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVRInput.Axis2D axis2d;

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x153B9EC", Offset = "0x153B9EC", VA = "0x153B9EC")]
			public InputOVR()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		private class InputSteam : Input
		{
			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SteamVR_Action_Boolean buttonAction;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Action_Single axisAction;

			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SteamVR_Action_Vector2 axis2DAction;

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x153BA04", Offset = "0x153BA04", VA = "0x153BA04")]
			public InputSteam()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		private class InputPico : Input
		{
			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRInput.Button button;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OVRInput.Axis1D axis;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVRInput.Axis2D axis2d;

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x153B9F4", Offset = "0x153B9F4", VA = "0x153B9F4")]
			public InputPico()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BB")]
		private class InputQiyu : Input
		{
			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QiyuInput.VirtualButton button;

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x153B9FC", Offset = "0x153B9FC", VA = "0x153B9FC")]
			public InputQiyu()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		private class ActionDictionnary : SerializableDictionaryBase<string, Action>
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x153B808", Offset = "0x153B808", VA = "0x153B808")]
			public ActionDictionnary()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CDA0", Offset = "0xF2CDA0")]
		private sealed class <StopOculusVibration>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public OVRInput.Controller controller;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C34")]
				[Address(RVA = "0x153B954", Offset = "0x153B954", VA = "0x153B954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C36")]
				[Address(RVA = "0x153B9BC", Offset = "0x153B9BC", VA = "0x153B9BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1539D34", Offset = "0x1539D34", VA = "0x1539D34")]
			[DebuggerHidden]
			public <StopOculusVibration>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x153B878", Offset = "0x153B878", VA = "0x153B878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x153B87C", Offset = "0x153B87C", VA = "0x153B87C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x153B95C", Offset = "0x153B95C", VA = "0x153B95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ActionDictionnary actionDico;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float axis1DThreshold;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion rightHandAnchorOffsetRotation;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion leftHandAnchorOffsetRotation;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 rightHandAnchorOffsetPosition;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 leftHandAnchorOffsetPosition;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OVRGrabber rightOVRGrabber;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OVRGrabber leftOVRGrabber;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InputDevice contrllerR;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InputDevice headController;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InputDevice contrllerL;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x15382B4", Offset = "0x15382B4", VA = "0x15382B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x15389A4", Offset = "0x15389A4", VA = "0x15389A4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x15385D8", Offset = "0x15385D8", VA = "0x15385D8")]
		private void InitGrabbers()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x15389A8", Offset = "0x15389A8", VA = "0x15389A8")]
		private bool CheckAction(InputType type, string action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1538BF4", Offset = "0x1538BF4", VA = "0x1538BF4")]
		private bool CheckAction(string action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1538CBC", Offset = "0x1538CBC", VA = "0x1538CBC")]
		private float GetPicoAxis1D(Hand hand, OVRInput.Axis1D axis)
		{
			return default(float);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1538EC4", Offset = "0x1538EC4", VA = "0x1538EC4")]
		private Vector2 GetPicoAxis2D(Hand hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1538FA8", Offset = "0x1538FA8", VA = "0x1538FA8")]
		private bool GetPicoButton(Hand hand, OVRInput.Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1539184", Offset = "0x1539184", VA = "0x1539184")]
		public float GetAxis1D(string action, Hand hand = Hand.ANY)
		{
			return default(float);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x15302E0", Offset = "0x15302E0", VA = "0x15302E0")]
		public Vector2 GetAxis2D(string action, Hand hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x152FDF8", Offset = "0x152FDF8", VA = "0x152FDF8")]
		public bool GetButton(string action, Hand hand = Hand.ANY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1539AC4", Offset = "0x1539AC4", VA = "0x1539AC4")]
		public bool GetButtonUp(string action, Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1539BBC", Offset = "0x1539BBC", VA = "0x1539BBC")]
		public bool GetButtonDown(string action, Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1539CB4", Offset = "0x1539CB4", VA = "0x1539CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D864", Offset = "0xF3D864")]
		private IEnumerator StopOculusVibration(OVRInput.Controller controller, float time)
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1534354", Offset = "0x1534354", VA = "0x1534354")]
		public void Vibrate(Hand hand, float time, float intensity)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1539D7C", Offset = "0x1539D7C", VA = "0x1539D7C")]
		public Vector3 GetControllerLinearVelocity(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x153A9DC", Offset = "0x153A9DC", VA = "0x153A9DC")]
		public Vector3 GetControllerAngularVelocity(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1539874", Offset = "0x1539874", VA = "0x1539874")]
		private OVRInput.Controller GetOVRController(Hand hand)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x15398A0", Offset = "0x15398A0", VA = "0x15398A0")]
		private SteamVR_Input_Sources GetSteamController(Hand hand)
		{
			return default(SteamVR_Input_Sources);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x15398BC", Offset = "0x15398BC", VA = "0x15398BC")]
		private InputFeatureUsage<bool> GetXRButtonFromQiyuButton(QiyuInput.VirtualButton button)
		{
			return default(InputFeatureUsage<bool>);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1539A2C", Offset = "0x1539A2C", VA = "0x1539A2C")]
		private InputFeatureUsage<float> GetXRAxis1DFromQiyuButton(QiyuInput.VirtualButton button)
		{
			return default(InputFeatureUsage<float>);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x153A9B4", Offset = "0x153A9B4", VA = "0x153A9B4")]
		private InputDevice GetQiyuCtrler(Hand hand)
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1539D60", Offset = "0x1539D60", VA = "0x1539D60")]
		private QiyuInput.Controller GetQiyuController(Hand hand)
		{
			return default(QiyuInput.Controller);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x1534000", Offset = "0x1534000", VA = "0x1534000")]
		public bool CheckIfObjectIsFromHeadsetPlayer(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x152FCE0", Offset = "0x152FCE0", VA = "0x152FCE0")]
		public bool IsActionActive(string action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x153B608", Offset = "0x153B608", VA = "0x153B608")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x153B794", Offset = "0x153B794", VA = "0x153B794")]
		public VRInputManager()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class VoxelArenaInputModule : OVRInputModule
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float lastAxis;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float threshold;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string action;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool useClickFromOutside;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool pressedFromOutside;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		public bool releasedFromOutside;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x153CA84", Offset = "0x153CA84", VA = "0x153CA84")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x153CBE4", Offset = "0x153CBE4", VA = "0x153CBE4", Slot = "31")]
		protected override PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x153CD24", Offset = "0x153CD24", VA = "0x153CD24")]
		public VoxelArenaInputModule()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ChatIndicator : MonoBehaviour
	{
		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CDB0", Offset = "0xF2CDB0")]
		private sealed class <FindPlayerState>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChatIndicator <>4__this;

			[Token(Token = "0x17000332")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C43")]
				[Address(RVA = "0x17381E0", Offset = "0x17381E0", VA = "0x17381E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000333")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C45")]
				[Address(RVA = "0x1738248", Offset = "0x1738248", VA = "0x1738248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x1737E40", Offset = "0x1737E40", VA = "0x1737E40")]
			[DebuggerHidden]
			public <FindPlayerState>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x1737FF8", Offset = "0x1737FF8", VA = "0x1737FF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x1737FFC", Offset = "0x1737FFC", VA = "0x1737FFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x17381E8", Offset = "0x17381E8", VA = "0x17381E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject indicatorPrefab;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject attachTo;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 attachOffset;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _indicator;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _intensity;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDissonancePlayer _player;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VoicePlayerState _state;

		[Token(Token = "0x17000331")]
		private bool IsSpeaking
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x1737B90", Offset = "0x1737B90", VA = "0x1737B90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1737C70", Offset = "0x1737C70", VA = "0x1737C70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1737DD0", Offset = "0x1737DD0", VA = "0x1737DD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D918", Offset = "0xF3D918")]
		private IEnumerator FindPlayerState()
		{
			return null;
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1737E6C", Offset = "0x1737E6C", VA = "0x1737E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1737F8C", Offset = "0x1737F8C", VA = "0x1737F8C")]
		private static void UpdateChildTransform([NotNull] Transform transform, float intensity)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1737FF0", Offset = "0x1737FF0", VA = "0x1737FF0")]
		public ChatIndicator()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class HttpAPI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C2")]
		public struct UpdateData
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isLoading;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool isInLobby;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool isInEndLobby;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool isGameSessionOpened;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isReadyToStart;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool isNeedRefresh;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string gameInfo;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameIndex;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string gameVersion;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int elapsedTime;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string[] gamesList;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] gamesPlayerCount;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HeadsetData[] headsets;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string[] playersColors;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool useVoiceChat;
		}

		[Token(Token = "0x20004C3")]
		private enum Task
		{
			[Token(Token = "0x4001C0F")]
			STARTGAME,
			[Token(Token = "0x4001C10")]
			STOPGAME,
			[Token(Token = "0x4001C11")]
			LOADGAME,
			[Token(Token = "0x4001C12")]
			REFRESHPAGE,
			[Token(Token = "0x4001C13")]
			SETPLAYERID,
			[Token(Token = "0x4001C14")]
			IDENTIFYHEADSET,
			[Token(Token = "0x4001C15")]
			SETCAMERAONHEADSET,
			[Token(Token = "0x4001C16")]
			APPOPTION,
			[Token(Token = "0x4001C17")]
			SETPLAYERNAME,
			[Token(Token = "0x4001C18")]
			STARTVOICECHAT,
			[Token(Token = "0x4001C19")]
			STOPVOICECHAT
		}

		[Token(Token = "0x20004C4")]
		public delegate void SetPlayerId(string serial, int playerId);

		[Token(Token = "0x20004C5")]
		public delegate void SetPlayerName(string serial, string playerName);

		[Token(Token = "0x20004C6")]
		public delegate void SetCameraOn(string serial);

		[Token(Token = "0x20004C7")]
		public delegate void IdentifyHeadset(string serial);

		[Token(Token = "0x20004C8")]
		public delegate void LoadGameDelegate(string serial, string game, string gameIdForClients);

		[Token(Token = "0x20004C9")]
		public delegate void StartGameDelegate();

		[Token(Token = "0x20004CA")]
		public delegate void StopGameDelegate();

		[Token(Token = "0x20004CB")]
		public delegate void AppOptionDelegate();

		[Token(Token = "0x20004CC")]
		public delegate void SetVoiceChatActiveDelegate(bool active);

		[Token(Token = "0x20004CD")]
		private enum AuthentificationState
		{
			[Token(Token = "0x4001C1B")]
			ASK,
			[Token(Token = "0x4001C1C")]
			CHECK,
			[Token(Token = "0x4001C1D")]
			AUTHENTIFIED
		}

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CDC0", Offset = "0xF2CDC0")]
		private sealed class <CopyAPIFiles>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HttpAPI <>4__this;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <copyAPIFiles>5__2;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <versionFile>5__3;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <versionFileTmp>5__4;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <www>5__5;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <zipFilePath>5__6;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <destFolder>5__7;

			[Token(Token = "0x17000334")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C87")]
				[Address(RVA = "0x1748D64", Offset = "0x1748D64", VA = "0x1748D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C89")]
				[Address(RVA = "0x1748DCC", Offset = "0x1748DCC", VA = "0x1748DCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x17438E8", Offset = "0x17438E8", VA = "0x17438E8")]
			[DebuggerHidden]
			public <CopyAPIFiles>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x17483D4", Offset = "0x17483D4", VA = "0x17483D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x17483D8", Offset = "0x17483D8", VA = "0x17483D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x1748D6C", Offset = "0x1748D6C", VA = "0x1748D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CDD0", Offset = "0xF2CDD0")]
		private sealed class <InitListener>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HttpAPI <>4__this;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <connecOK>5__2;

			[Token(Token = "0x17000336")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C8D")]
				[Address(RVA = "0x17490D0", Offset = "0x17490D0", VA = "0x17490D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8F")]
				[Address(RVA = "0x1749138", Offset = "0x1749138", VA = "0x1749138", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x1743914", Offset = "0x1743914", VA = "0x1743914")]
			[DebuggerHidden]
			public <InitListener>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x1748DD4", Offset = "0x1748DD4", VA = "0x1748DD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1748DD8", Offset = "0x1748DD8", VA = "0x1748DD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x17490D8", Offset = "0x17490D8", VA = "0x17490D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<string, string> _mimeTypeMappings;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HttpListener listener;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread listenerThread;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetPlayerId setPlayerId;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SetPlayerName setPlayerName;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SetCameraOn setCameraOn;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IdentifyHeadset identifyHeadset;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LoadGameDelegate loadGame;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public StartGameDelegate startGame;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StopGameDelegate stopGame;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AppOptionDelegate appOption;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SetVoiceChatActiveDelegate setVoiceChatActive;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34EEC", Offset = "0xF34EEC")]
		public string port;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string securisedPort;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isDebug;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string persistentDataPath;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string streamingAssetsPath;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34F24", Offset = "0xF34F24")]
		[SerializeField]
		private UpdateData currentData;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string[] gamesIdListOnAndroid;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Task> tasks;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int nextGameId;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int playerIdForSetPlayerId;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string newPlayerName;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string serialForAction;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string lastGameLoaded;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string lastGameLoadedAndroidId;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static HttpAPI singleton;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool stopListenerThread;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Dictionary<string, DateTime> authentificationTimes;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Dictionary<string, AuthentificationState> authentifications;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1743520", Offset = "0x1743520", VA = "0x1743520")]
		private void InitializeSingleton()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1743644", Offset = "0x1743644", VA = "0x1743644")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1743648", Offset = "0x1743648", VA = "0x1743648")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x174370C", Offset = "0x174370C", VA = "0x174370C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1743808", Offset = "0x1743808", VA = "0x1743808")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3D9CC", Offset = "0xF3D9CC")]
		private IEnumerator CopyAPIFiles()
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1743878", Offset = "0x1743878", VA = "0x1743878")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DA30", Offset = "0xF3DA30")]
		private IEnumerator InitListener()
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1743940", Offset = "0x1743940", VA = "0x1743940")]
		private void Init()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1743C7C", Offset = "0x1743C7C", VA = "0x1743C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1743CA4", Offset = "0x1743CA4", VA = "0x1743CA4")]
		private void ProcessTasks()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1745A58", Offset = "0x1745A58", VA = "0x1745A58")]
		private void AskRefreshPage()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1745A64", Offset = "0x1745A64", VA = "0x1745A64")]
		private void startListener()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x1745B98", Offset = "0x1745B98", VA = "0x1745B98")]
		private void ListenerCallback(IAsyncResult result)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1747394", Offset = "0x1747394", VA = "0x1747394")]
		public string GetAndroidIdForGameName(string game)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1747484", Offset = "0x1747484", VA = "0x1747484")]
		public string GetGameNameFromAndroidId(string gameId)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x173F0C0", Offset = "0x173F0C0", VA = "0x173F0C0")]
		public void SetIsInLobby(bool inLobby, bool inEndLobby)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x173F0B8", Offset = "0x173F0B8", VA = "0x173F0B8")]
		public void UpdateElapsedTime(int time)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x173F638", Offset = "0x173F638", VA = "0x173F638")]
		public void UpdateGameInfoForPlayer(string info)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1747574", Offset = "0x1747574", VA = "0x1747574")]
		public void UpdateHeadsetData(HeadsetData[] data)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x174757C", Offset = "0x174757C", VA = "0x174757C")]
		public void UpdateGameVersion(string version)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1747584", Offset = "0x1747584", VA = "0x1747584")]
		private static string HexConverter(Color c)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x17476A8", Offset = "0x17476A8", VA = "0x17476A8")]
		private static string RGBConverter(Color c)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x17478B0", Offset = "0x17478B0", VA = "0x17478B0")]
		public void UpdatePlayersColors(Color[] colors)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1747A04", Offset = "0x1747A04", VA = "0x1747A04")]
		public void SetVoiceChatActive(bool isActive)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1747A10", Offset = "0x1747A10", VA = "0x1747A10")]
		public void SetIsLoading(bool isLoading)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1747A1C", Offset = "0x1747A1C", VA = "0x1747A1C")]
		public HttpAPI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D0")]
	public class TargetSlot
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider slotTrigger;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetPosition;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string slotReachedGameObjectName;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string slotReachedFunctionName;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource slotReachedSound;

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1535020", Offset = "0x1535020", VA = "0x1535020")]
		public TargetSlot()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xF2CDE0", Offset = "0xF2CDE0")]
	public class NetworkGrabbableScript : OVRGrabbable
	{
		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE44", Offset = "0xF2CE44")]
		private sealed class <DisableNetworkUpdates>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkGrabbableScript <>4__this;

			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private NetworkTransform <scriptNT>5__2;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SmoothSyncMirror <scriptSmooth>5__3;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA0")]
				[Address(RVA = "0x1216F68", Offset = "0x1216F68", VA = "0x1216F68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA2")]
				[Address(RVA = "0x1216FD0", Offset = "0x1216FD0", VA = "0x1216FD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1215660", Offset = "0x1215660", VA = "0x1215660")]
			[DebuggerHidden]
			public <DisableNetworkUpdates>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1216D60", Offset = "0x1216D60", VA = "0x1216D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x1216D64", Offset = "0x1216D64", VA = "0x1216D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x1216F70", Offset = "0x1216F70", VA = "0x1216F70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool takeAuthorityForDebug;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool releaseAuthorityForDebug;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform localGripPoint;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerScript player;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isKinematicOnRelease;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool initialIsKinematicOnRelease;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool doneGrabKinematicValue;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34F80", Offset = "0xF34F80")]
		public TargetSlot[] target;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool mustAttachToTarget;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int currentTargetID;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<int> currentTarget;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVRGrabber currentHand;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isGrabDesactivated;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1215048", Offset = "0x1215048", VA = "0x1215048")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x12155E0", Offset = "0x12155E0", VA = "0x12155E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DB34", Offset = "0xF3DB34")]
		private IEnumerator DisableNetworkUpdates(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x121568C", Offset = "0x121568C", VA = "0x121568C")]
		public void SetAttachToTarget(int value)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1215704", Offset = "0x1215704", VA = "0x1215704")]
		public void doAttachToTarget(int targetId)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1215880", Offset = "0x1215880", VA = "0x1215880", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1215EE4", Offset = "0x1215EE4", VA = "0x1215EE4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x121536C", Offset = "0x121536C", VA = "0x121536C")]
		private void AskAuthority()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x12154D0", Offset = "0x12154D0", VA = "0x12154D0")]
		private void ReleaseAuthority(Vector3 linearVelocity, Vector3 angularVelocity, bool forceKinematicOnRelease)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1216A50", Offset = "0x1216A50", VA = "0x1216A50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1216B98", Offset = "0x1216B98", VA = "0x1216B98")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1216CE0", Offset = "0x1216CE0", VA = "0x1216CE0")]
		private void SetGrabPoints(Collider[] colliders)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1216CE8", Offset = "0x1216CE8", VA = "0x1216CE8")]
		public NetworkGrabbableScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D3")]
	public class HeadsetData
	{
		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isOnline;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int playerId;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] position;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] rotation;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string currentGame;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string currentGameAndroidId;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string currentVersion;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string hostName;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool headsetDetectsUser;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int headsetBatteryPercent;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string headsetBatteryStatus;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int volume;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int leftControllerBattery;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isLeftControllerPresent;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int rightControllerBattery;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool isRightControllerPresent;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string osVersion;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string serial;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isIDSetted;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string playerName;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public DateTime lastPingTime;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isSpectator;

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x17422E0", Offset = "0x17422E0", VA = "0x17422E0")]
		public HeadsetData()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class NetworkInit : Singleton<NetworkInit>
	{
		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE54", Offset = "0xF2CE54")]
		private sealed class <LoadGameOnServerRoutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string game;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkInit <>4__this;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string gameIdForClients;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDB")]
				[Address(RVA = "0x121F704", Offset = "0x121F704", VA = "0x121F704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDD")]
				[Address(RVA = "0x121F76C", Offset = "0x121F76C", VA = "0x121F76C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x121CE84", Offset = "0x121CE84", VA = "0x121CE84")]
			[DebuggerHidden]
			public <LoadGameOnServerRoutine>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x121F458", Offset = "0x121F458", VA = "0x121F458", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x121F45C", Offset = "0x121F45C", VA = "0x121F45C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x121F70C", Offset = "0x121F70C", VA = "0x121F70C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE64", Offset = "0xF2CE64")]
		private sealed class <ReinitNetworkRoutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkInit <>4__this;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE1")]
				[Address(RVA = "0x121F9A8", Offset = "0x121F9A8", VA = "0x121F9A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE3")]
				[Address(RVA = "0x121FA10", Offset = "0x121FA10", VA = "0x121FA10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x121DA4C", Offset = "0x121DA4C", VA = "0x121DA4C")]
			[DebuggerHidden]
			public <ReinitNetworkRoutine>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x121F8F8", Offset = "0x121F8F8", VA = "0x121F8F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x121F8FC", Offset = "0x121F8FC", VA = "0x121F8FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x121F9B0", Offset = "0x121F9B0", VA = "0x121F9B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE74", Offset = "0xF2CE74")]
		private sealed class <JoinStoreHostRoutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkInit <>4__this;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string ip;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int port;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private InfoMessage <message>5__2;

			[Token(Token = "0x1700033E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE7")]
				[Address(RVA = "0x121F3E8", Offset = "0x121F3E8", VA = "0x121F3E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE9")]
				[Address(RVA = "0x121F450", Offset = "0x121F450", VA = "0x121F450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x121DB28", Offset = "0x121DB28", VA = "0x121DB28")]
			[DebuggerHidden]
			public <JoinStoreHostRoutine>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x121EC38", Offset = "0x121EC38", VA = "0x121EC38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x121EC3C", Offset = "0x121EC3C", VA = "0x121EC3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x121F3F0", Offset = "0x121F3F0", VA = "0x121F3F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE84", Offset = "0xF2CE84")]
		private sealed class <RelaunchAsHostRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isUserAsked;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string infoText;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NetworkInit <>4__this;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private InfoMessage <message>5__2;

			[Token(Token = "0x17000340")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0x1220148", Offset = "0x1220148", VA = "0x1220148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000341")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0x12201B0", Offset = "0x12201B0", VA = "0x12201B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x121DC70", Offset = "0x121DC70", VA = "0x121DC70")]
			[DebuggerHidden]
			public <RelaunchAsHostRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x121FA18", Offset = "0x121FA18", VA = "0x121FA18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x121FA1C", Offset = "0x121FA1C", VA = "0x121FA1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1220150", Offset = "0x1220150", VA = "0x1220150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CE94", Offset = "0xF2CE94")]
		private sealed class <LoadNewGameRoutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkInit <>4__this;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string game;

			[Token(Token = "0x17000342")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF3")]
				[Address(RVA = "0x121F888", Offset = "0x121F888", VA = "0x121F888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0x121F8F0", Offset = "0x121F8F0", VA = "0x121F8F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x121DF7C", Offset = "0x121DF7C", VA = "0x121DF7C")]
			[DebuggerHidden]
			public <LoadNewGameRoutine>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x121F774", Offset = "0x121F774", VA = "0x121F774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x121F778", Offset = "0x121F778", VA = "0x121F778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x121F890", Offset = "0x121F890", VA = "0x121F890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34FB8", Offset = "0xF34FB8")]
		public int maxNbPlayers;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] playersColors;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkDiscovery lanDiscovery;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isClient;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isServer;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float lastConnectedTimeServer;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float lastConnectedTimeClient;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool forceLAN;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF34FF0", Offset = "0xF34FF0")]
		private static bool useVoiceChat;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF35028", Offset = "0xF35028")]
		public VoxelGameSessionDatabase serverDirectory;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string serverAddress;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int serverPort;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35060", Offset = "0xF35060")]
		public bool forceServer;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool forceClient;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool serverAPlayer;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool useNetworkDiscovery;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string startSceneName;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool manageDisconnectionInStore;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35098", Offset = "0xF35098")]
		private PlayerScript player;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private QuestInfo questInfo;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public ScreenFade screenFade;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF350E0", Offset = "0xF350E0")]
		public int timeBeforeReloadIfNoConnection;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastSentStateServer;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float lastSentStateClient;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string appIdentifier;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string appVersion;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string newGameToLoad;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isNeedingReload;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isPlayIdentificationSound;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HttpAPI http;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private protected float lastPingReceivedByClient;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<string, HeadsetData> headsets;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Dictionary<string, PlayerScript> players;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<string, int> playersIdsStore;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource managementAudioSource;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip identifyAudioClip;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string managementClientHostName;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool isVerbose;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private VoxelArenaNobleNetworkManager networkManager;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1216FD8", Offset = "0x1216FD8", VA = "0x1216FD8")]
		private void ProcessCommandLineArguments()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x1217528", Offset = "0x1217528", VA = "0x1217528", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x1217578", Offset = "0x1217578", VA = "0x1217578", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x1217BB8", Offset = "0x1217BB8", VA = "0x1217BB8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x1217610", Offset = "0x1217610", VA = "0x1217610")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x1217D68", Offset = "0x1217D68", VA = "0x1217D68")]
		private void LaunchConnection()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x1218414", Offset = "0x1218414", VA = "0x1218414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1218418", Offset = "0x1218418", VA = "0x1218418")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x12188B4", Offset = "0x12188B4", VA = "0x12188B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x121B8CC", Offset = "0x121B8CC", VA = "0x121B8CC")]
		private void UpdateNbPlayers()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1217D78", Offset = "0x1217D78", VA = "0x1217D78")]
		protected void StartServer()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x12181CC", Offset = "0x12181CC", VA = "0x12181CC")]
		protected void StartClient()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x121BBC8", Offset = "0x121BBC8", VA = "0x121BBC8")]
		public void RegisterNetworkMessages()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x121BFE4", Offset = "0x121BFE4", VA = "0x121BFE4")]
		public void UnregisterNetworkMessages()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x121BA68", Offset = "0x121BA68", VA = "0x121BA68")]
		private void InitGameClient()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x121C0B4", Offset = "0x121C0B4", VA = "0x121C0B4")]
		public void InitServerDirectory(string hostIP, int hostPort)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x121BE04", Offset = "0x121BE04", VA = "0x121BE04")]
		public void TryToConnect()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x121C298", Offset = "0x121C298", VA = "0x121C298")]
		public static bool PingHost(string nameOrAddress)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x121C410", Offset = "0x121C410", VA = "0x121C410")]
		public void OnDiscoveredServer(ServerResponse info)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x121C63C", Offset = "0x121C63C", VA = "0x121C63C")]
		private void ChangePlayerId(string serial, int playerId)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x121ADB8", Offset = "0x121ADB8", VA = "0x121ADB8")]
		private void SetPlayerIdOnServer(string serial, int playerId)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x121B6E0", Offset = "0x121B6E0", VA = "0x121B6E0")]
		private void ChangePlayerName(string serial, string name)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x121C960", Offset = "0x121C960", VA = "0x121C960")]
		private void IdentifyHeadset(string serial)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x121CAB4", Offset = "0x121CAB4", VA = "0x121CAB4")]
		private void SetCamOnPlayer(string serial)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x121CB6C", Offset = "0x121CB6C", VA = "0x121CB6C")]
		private void LoadGameOnServer(string serial, string game, string gameIdForClients)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x121CE00", Offset = "0x121CE00", VA = "0x121CE00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DBE8", Offset = "0xF3DBE8")]
		private IEnumerator LoadGameOnServerRoutine(string serial, string game, string gameIdForClients)
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x121CEB0", Offset = "0x121CEB0", VA = "0x121CEB0")]
		private void SetVoiceChatActiveOnServer(bool active)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x121D088", Offset = "0x121D088", VA = "0x121D088")]
		private void ReceivedCurrentGameFromPlayer(NetworkConnection conn, NetworkData.CurrentGameData data)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x121D724", Offset = "0x121D724", VA = "0x121D724")]
		private void ReceivedPingFromPlayer(NetworkConnection conn, NetworkData.PingData data)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x121D7E8", Offset = "0x121D7E8", VA = "0x121D7E8")]
		public void ReceivedUpdateHeadsetInfo(NetworkConnection conn, NetworkData.HeadSetData data)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x12184A8", Offset = "0x12184A8", VA = "0x12184A8")]
		public void StopNetwork()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x121A930", Offset = "0x121A930", VA = "0x121A930")]
		public void ReinitNetwork()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x121D9DC", Offset = "0x121D9DC", VA = "0x121D9DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DC4C", Offset = "0xF3DC4C")]
		private IEnumerator ReinitNetworkRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x121B990", Offset = "0x121B990", VA = "0x121B990")]
		public void RestartScene()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x121DA78", Offset = "0x121DA78", VA = "0x121DA78")]
		public void JoinStoreHost(string ip, int port)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x121DAA4", Offset = "0x121DAA4", VA = "0x121DAA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DCB0", Offset = "0xF3DCB0")]
		public IEnumerator JoinStoreHostRoutine(string ip, int port)
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x121DB54", Offset = "0x121DB54", VA = "0x121DB54")]
		public void RelaunchAsHost()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x121DBB8", Offset = "0x121DBB8", VA = "0x121DBB8")]
		public void RelaunchAsHost(bool isUserAsked, string infoText = "[MULTI_CLIENT_CONNECTIONLOST]")
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x121DBE8", Offset = "0x121DBE8", VA = "0x121DBE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DD14", Offset = "0xF3DD14")]
		public IEnumerator RelaunchAsHostRoutine(bool isUserAsked, string infoText)
		{
			return null;
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x121DC9C", Offset = "0x121DC9C", VA = "0x121DC9C")]
		protected void PingReceivedFromServer(NetworkConnection conn, NetworkData.PingData data)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x121DCCC", Offset = "0x121DCCC", VA = "0x121DCCC")]
		protected void AskLoadNewGameOnClient(NetworkConnection conn, NetworkData.LoadGameData data)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x121DF00", Offset = "0x121DF00", VA = "0x121DF00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3DD78", Offset = "0xF3DD78")]
		private IEnumerator LoadNewGameRoutine(string game)
		{
			return null;
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x121A9B8", Offset = "0x121A9B8", VA = "0x121A9B8")]
		private void LoadNewGame()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x121E530", Offset = "0x121E530", VA = "0x121E530")]
		public void LaunchGameOnDesktop(string game, string commandLineParams = "")
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x121DFA8", Offset = "0x121DFA8", VA = "0x121DFA8")]
		private void LaunchAPK(string identifier, string arguments = "")
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x121E828", Offset = "0x121E828", VA = "0x121E828")]
		protected void AskIdentifyOnClient(NetworkConnection conn, NetworkData.IdentifyHeadsetData data)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x121E8B8", Offset = "0x121E8B8", VA = "0x121E8B8")]
		public void SendUpdateHeadsetInfoToServer(string serial, int headsetBattPercent, string headsetBattStatus, int volume, int lCtrlBattPercent, int rCtrlBattPercent, bool isLeftPresent, bool isRightPresent, string os, bool detectsUser, int playerId)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x121AA74", Offset = "0x121AA74", VA = "0x121AA74")]
		public int GetNbPlayers()
		{
			return default(int);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x121EA14", Offset = "0x121EA14", VA = "0x121EA14")]
		public List<PlayerScript> GetPlayers()
		{
			return null;
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1217CE0", Offset = "0x1217CE0", VA = "0x1217CE0")]
		public void SetLobbyScene()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x121EA7C", Offset = "0x121EA7C", VA = "0x121EA7C")]
		public NetworkInit()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class PlayerScript : NetworkBehaviour
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SyncVar]
		public int playerID;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SyncVar]
		public string headsetSerial;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SyncVar]
		public string playerName;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SyncVar]
		public bool isVoiceChatActive;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AttachToObjectPosition[] attachScriptToDisableOnServer;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Renderer[] rendererToDisableOnLocalPlayer;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Color[] possibleColor;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SyncVar]
		public bool isSpectator;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject headSkins;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject bodySkins;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject rightHandSkin;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject leftHandSkin;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ColorizeAllRenderers colorize;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ColorizeAllRenderers colorizeHeadset;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Transform> headSkinsList;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Transform> bodySkinsList;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<Transform> rightHandSkinList;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Transform> leftHandSkinList;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Transform> rightHandSkinOVRList;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Transform> leftHandSkinOVRList;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SyncVar]
		public int skin;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool isInitDone;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public FacePlayer[] facePlayers;

		[Token(Token = "0x17000344")]
		public int NetworkplayerID
		{
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x122AEB8", Offset = "0x122AEB8", VA = "0x122AEB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1228E48", Offset = "0x1228E48", VA = "0x1228E48")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public string NetworkheadsetSerial
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x122AEC0", Offset = "0x122AEC0", VA = "0x122AEC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x122AEC8", Offset = "0x122AEC8", VA = "0x122AEC8")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public string NetworkplayerName
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x122AF64", Offset = "0x122AF64", VA = "0x122AF64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x121C83C", Offset = "0x121C83C", VA = "0x121C83C")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public bool NetworkisVoiceChatActive
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x122AF6C", Offset = "0x122AF6C", VA = "0x122AF6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x121ACA0", Offset = "0x121ACA0", VA = "0x121ACA0")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public bool NetworkisSpectator
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x122AF74", Offset = "0x122AF74", VA = "0x122AF74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x1228C68", Offset = "0x1228C68", VA = "0x1228C68")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public int Networkskin
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x122AF7C", Offset = "0x122AF7C", VA = "0x122AF7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x121B024", Offset = "0x121B024", VA = "0x121B024")]
			[param: In]
			set
			{
			}
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x1225B3C", Offset = "0x1225B3C", VA = "0x1225B3C", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1225B40", Offset = "0x1225B40", VA = "0x1225B40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1228028", Offset = "0x1228028", VA = "0x1228028", Slot = "16")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x122802C", Offset = "0x122802C", VA = "0x122802C", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1228A50", Offset = "0x1228A50", VA = "0x1228A50")]
		[Command]
		public void CmdSetPlayerName(string newName)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1228B64", Offset = "0x1228B64", VA = "0x1228B64", Slot = "17")]
		public virtual void ChangePlayerName(string oldName, string newName)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1228924", Offset = "0x1228924", VA = "0x1228924")]
		public void ChangeVoiceChatState(bool oldValue, bool active)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1228B68", Offset = "0x1228B68", VA = "0x1228B68")]
		public void SetSpectator(bool oldValue, bool value)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1228D80", Offset = "0x1228D80", VA = "0x1228D80", Slot = "18")]
		public virtual void SetPlayerID(int oldId, int id)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1227DB8", Offset = "0x1227DB8", VA = "0x1227DB8")]
		private void GetPossibleColors()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1227E5C", Offset = "0x1227E5C", VA = "0x1227E5C")]
		public void InitColorizeScripts()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1228F6C", Offset = "0x1228F6C", VA = "0x1228F6C")]
		private void ApplyColors()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1215280", Offset = "0x1215280", VA = "0x1215280")]
		public static PlayerScript GetLocalPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1229154", Offset = "0x1229154", VA = "0x1229154")]
		public static Color GetLocalPlayerColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x12291EC", Offset = "0x12291EC", VA = "0x12291EC")]
		public static PlayerScript GetPlayerFromId(int id)
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x12292BC", Offset = "0x12292BC", VA = "0x12292BC")]
		public static int GetNumberOfPlayers()
		{
			return default(int);
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x121AB88", Offset = "0x121AB88", VA = "0x121AB88")]
		public static PlayerScript[] GetAllPlayers()
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x121B134", Offset = "0x121B134", VA = "0x121B134")]
		public void ChangeSkin(int oldSkin, int newSkin)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x12277E0", Offset = "0x12277E0", VA = "0x12277E0")]
		private void HideSkins()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1229388", Offset = "0x1229388", VA = "0x1229388")]
		public void ShowHideHead(bool show)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x12294F0", Offset = "0x12294F0", VA = "0x12294F0")]
		public void ShowHideBody(bool show)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1225B74", Offset = "0x1225B74", VA = "0x1225B74")]
		private void FindSkins()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x12295E0", Offset = "0x12295E0", VA = "0x12295E0")]
		[Command]
		public void CmdNextSkin(int way)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x12296F4", Offset = "0x12296F4", VA = "0x12296F4")]
		[Command]
		public void CmdRandomSkin()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1228810", Offset = "0x1228810", VA = "0x1228810")]
		[Command]
		public void CmdSetSkin(int newSkin)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x12297D4", Offset = "0x12297D4", VA = "0x12297D4")]
		public GameObject GetHeadSkin()
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x122984C", Offset = "0x122984C", VA = "0x122984C")]
		public GameObject GetBodySkin()
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x12298C4", Offset = "0x12298C4", VA = "0x12298C4")]
		public GameObject GetHandRSkin()
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1229948", Offset = "0x1229948", VA = "0x1229948")]
		public GameObject GetHandLSkin()
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x12299CC", Offset = "0x12299CC", VA = "0x12299CC")]
		public GameObject GetHandOVRLSkin()
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1229ADC", Offset = "0x1229ADC", VA = "0x1229ADC")]
		public GameObject GetHandOVRRSkin()
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1216700", Offset = "0x1216700", VA = "0x1216700")]
		public static void ChangeAuhorityOnTransforms(GameObject obj, bool clientHasAutority)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x12285E8", Offset = "0x12285E8", VA = "0x12285E8")]
		[Command]
		public void CmdSetSpectatorOnly(bool value)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x12286FC", Offset = "0x12286FC", VA = "0x12286FC")]
		[Command]
		public void CmdSetSerial(string serial)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x12167B4", Offset = "0x12167B4", VA = "0x12167B4")]
		[Command]
		public void CmdAskAuthorityOnGrabbable(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1229BEC", Offset = "0x1229BEC", VA = "0x1229BEC")]
		[TargetRpc]
		public void TargetObjetIsReleased(NetworkConnection target, NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x12168C8", Offset = "0x12168C8", VA = "0x12168C8")]
		[Command]
		public void CmdReleaseAuthorityOnGrabbable(NetworkIdentity identity, Vector3 linearVelocity, Vector3 angularVelocity, bool isKine)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1229D04", Offset = "0x1229D04", VA = "0x1229D04")]
		[Command]
		public void CmdAskAuthority(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1229E18", Offset = "0x1229E18", VA = "0x1229E18")]
		[Command]
		public void CmdReleaseAuthority(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1216438", Offset = "0x1216438", VA = "0x1216438")]
		[Command]
		public void CmdForcePositionOnServer(NetworkIdentity identity, Vector3 newPos, Quaternion newRot)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x12165BC", Offset = "0x12165BC", VA = "0x12165BC")]
		[Command]
		public void CmdPropagateMessage(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1229F2C", Offset = "0x1229F2C", VA = "0x1229F2C")]
		[Command]
		public void CmdPropagateMessageFloat(string gameObjectName, string methodName, float value)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x12221BC", Offset = "0x12221BC", VA = "0x12221BC")]
		[ClientRpc]
		public void RpcPropagateMessage(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1222078", Offset = "0x1222078", VA = "0x1222078")]
		[Command]
		public void CmdPropagateMessageReplicateToClients(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x122A070", Offset = "0x122A070", VA = "0x122A070")]
		[Command]
		public void CmdPropagateMessageReplicateToClientsObj(string gameObjectName, string methodName, GameObject value)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x122A1B4", Offset = "0x122A1B4", VA = "0x122A1B4")]
		[Command]
		public void CmdPropagateMessageOnlyReplicateToClients(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x122A2F8", Offset = "0x122A2F8", VA = "0x122A2F8")]
		[Command]
		public void CmdPropagateMessageString(string gameObjectName, string methodName, string value)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x122A43C", Offset = "0x122A43C", VA = "0x122A43C")]
		[ClientRpc]
		public void RpcPropagateMessage2Int(string gameObjectName, string methodName, Vector2Int value)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x122A580", Offset = "0x122A580", VA = "0x122A580")]
		[Command]
		public void CmdPropagateMessage2Int(string gameObjectName, string methodName, Vector2Int value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x122A6D8", Offset = "0x122A6D8", VA = "0x122A6D8")]
		[ClientRpc]
		public void RpcPropagateMessage3Int(string gameObjectName, string methodName, Vector3Int value)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x122A824", Offset = "0x122A824", VA = "0x122A824")]
		[ClientRpc]
		public void RpcPropagateMessageVector3(string gameObjectName, string methodName, Vector3 value)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x122A980", Offset = "0x122A980", VA = "0x122A980")]
		[Command]
		public void CmdPropagateMessage3Int(string gameObjectName, string methodName, Vector3Int value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x122AAE8", Offset = "0x122AAE8", VA = "0x122AAE8")]
		[Command]
		public void CmdPropagateMessageVector3(string gameObjectName, string methodName, Vector3 value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x122AC60", Offset = "0x122AC60", VA = "0x122AC60")]
		[ClientRpc]
		public void RpcPropagateMessageObj(string gameObjectName, string methodName, GameObject value)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x122ADA4", Offset = "0x122ADA4", VA = "0x122ADA4")]
		public PlayerScript()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x122AEB4", Offset = "0x122AEB4", VA = "0x122AEB4")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x122AF84", Offset = "0x122AF84", VA = "0x122AF84")]
		public void UserCode_CmdSetPlayerName(string newName)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x122AFFC", Offset = "0x122AFFC", VA = "0x122AFFC")]
		protected static void InvokeUserCode_CmdSetPlayerName(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x122B170", Offset = "0x122B170", VA = "0x122B170")]
		public void UserCode_CmdNextSkin(int way)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x122B2E4", Offset = "0x122B2E4", VA = "0x122B2E4")]
		protected static void InvokeUserCode_CmdNextSkin(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x122B458", Offset = "0x122B458", VA = "0x122B458")]
		public void UserCode_CmdRandomSkin()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x122B504", Offset = "0x122B504", VA = "0x122B504")]
		protected static void InvokeUserCode_CmdRandomSkin(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x122B640", Offset = "0x122B640", VA = "0x122B640")]
		public void UserCode_CmdSetSkin(int newSkin)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x122B700", Offset = "0x122B700", VA = "0x122B700")]
		protected static void InvokeUserCode_CmdSetSkin(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x122B874", Offset = "0x122B874", VA = "0x122B874")]
		public void UserCode_CmdSetSpectatorOnly(bool value)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x122B87C", Offset = "0x122B87C", VA = "0x122B87C")]
		protected static void InvokeUserCode_CmdSetSpectatorOnly(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x122B9EC", Offset = "0x122B9EC", VA = "0x122B9EC")]
		public void UserCode_CmdSetSerial(string serial)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x122B9F0", Offset = "0x122B9F0", VA = "0x122B9F0")]
		protected static void InvokeUserCode_CmdSetSerial(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x122BB64", Offset = "0x122BB64", VA = "0x122BB64")]
		public void UserCode_CmdAskAuthorityOnGrabbable(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x122BD88", Offset = "0x122BD88", VA = "0x122BD88")]
		protected static void InvokeUserCode_CmdAskAuthorityOnGrabbable(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x122BEFC", Offset = "0x122BEFC", VA = "0x122BEFC")]
		public void UserCode_TargetObjetIsReleased(NetworkConnection target, NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x122C05C", Offset = "0x122C05C", VA = "0x122C05C")]
		protected static void InvokeUserCode_TargetObjetIsReleased(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x122C1F8", Offset = "0x122C1F8", VA = "0x122C1F8")]
		public void UserCode_CmdReleaseAuthorityOnGrabbable(NetworkIdentity identity, Vector3 linearVelocity, Vector3 angularVelocity, bool isKine)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x122C50C", Offset = "0x122C50C", VA = "0x122C50C")]
		protected static void InvokeUserCode_CmdReleaseAuthorityOnGrabbable(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x122C6FC", Offset = "0x122C6FC", VA = "0x122C6FC")]
		public void UserCode_CmdAskAuthority(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x122C848", Offset = "0x122C848", VA = "0x122C848")]
		protected static void InvokeUserCode_CmdAskAuthority(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x122C9BC", Offset = "0x122C9BC", VA = "0x122C9BC")]
		public void UserCode_CmdReleaseAuthority(NetworkIdentity identity)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x122CB0C", Offset = "0x122CB0C", VA = "0x122CB0C")]
		protected static void InvokeUserCode_CmdReleaseAuthority(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x122CC80", Offset = "0x122CC80", VA = "0x122CC80")]
		public void UserCode_CmdForcePositionOnServer(NetworkIdentity identity, Vector3 newPos, Quaternion newRot)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x122CDF4", Offset = "0x122CDF4", VA = "0x122CDF4")]
		protected static void InvokeUserCode_CmdForcePositionOnServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x122CFCC", Offset = "0x122CFCC", VA = "0x122CFCC")]
		public void UserCode_CmdPropagateMessage(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x122D248", Offset = "0x122D248", VA = "0x122D248")]
		protected static void InvokeUserCode_CmdPropagateMessage(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x122D3E0", Offset = "0x122D3E0", VA = "0x122D3E0")]
		public void UserCode_CmdPropagateMessageFloat(string gameObjectName, string methodName, float value)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x122D664", Offset = "0x122D664", VA = "0x122D664")]
		protected static void InvokeUserCode_CmdPropagateMessageFloat(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x122D7F8", Offset = "0x122D7F8", VA = "0x122D7F8")]
		public void UserCode_RpcPropagateMessage(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x122DA74", Offset = "0x122DA74", VA = "0x122DA74")]
		protected static void InvokeUserCode_RpcPropagateMessage(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x122DBCC", Offset = "0x122DBCC", VA = "0x122DBCC")]
		public void UserCode_CmdPropagateMessageReplicateToClients(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x122DE7C", Offset = "0x122DE7C", VA = "0x122DE7C")]
		protected static void InvokeUserCode_CmdPropagateMessageReplicateToClients(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x122E014", Offset = "0x122E014", VA = "0x122E014")]
		public void UserCode_CmdPropagateMessageReplicateToClientsObj(string gameObjectName, string methodName, GameObject value)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x122E2A0", Offset = "0x122E2A0", VA = "0x122E2A0")]
		protected static void InvokeUserCode_CmdPropagateMessageReplicateToClientsObj(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x122E438", Offset = "0x122E438", VA = "0x122E438")]
		public void UserCode_CmdPropagateMessageOnlyReplicateToClients(string gameObjectName, string methodName, int value)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x122E5E0", Offset = "0x122E5E0", VA = "0x122E5E0")]
		protected static void InvokeUserCode_CmdPropagateMessageOnlyReplicateToClients(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x122E778", Offset = "0x122E778", VA = "0x122E778")]
		public void UserCode_CmdPropagateMessageString(string gameObjectName, string methodName, string value)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x122E9E4", Offset = "0x122E9E4", VA = "0x122E9E4")]
		protected static void InvokeUserCode_CmdPropagateMessageString(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x122EB7C", Offset = "0x122EB7C", VA = "0x122EB7C")]
		public void UserCode_RpcPropagateMessage2Int(string gameObjectName, string methodName, Vector2Int value)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x122ED10", Offset = "0x122ED10", VA = "0x122ED10")]
		protected static void InvokeUserCode_RpcPropagateMessage2Int(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x122EE64", Offset = "0x122EE64", VA = "0x122EE64")]
		public void UserCode_CmdPropagateMessage2Int(string gameObjectName, string methodName, Vector2Int value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x122F26C", Offset = "0x122F26C", VA = "0x122F26C")]
		protected static void InvokeUserCode_CmdPropagateMessage2Int(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x122F424", Offset = "0x122F424", VA = "0x122F424")]
		public void UserCode_RpcPropagateMessage3Int(string gameObjectName, string methodName, Vector3Int value)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x122F5C8", Offset = "0x122F5C8", VA = "0x122F5C8")]
		protected static void InvokeUserCode_RpcPropagateMessage3Int(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x122F724", Offset = "0x122F724", VA = "0x122F724")]
		public void UserCode_RpcPropagateMessageVector3(string gameObjectName, string methodName, Vector3 value)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x122F8D4", Offset = "0x122F8D4", VA = "0x122F8D4")]
		protected static void InvokeUserCode_RpcPropagateMessageVector3(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x122FA24", Offset = "0x122FA24", VA = "0x122FA24")]
		public void UserCode_CmdPropagateMessage3Int(string gameObjectName, string methodName, Vector3Int value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x122FD68", Offset = "0x122FD68", VA = "0x122FD68")]
		protected static void InvokeUserCode_CmdPropagateMessage3Int(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x122FF28", Offset = "0x122FF28", VA = "0x122FF28")]
		public void UserCode_CmdPropagateMessageVector3(string gameObjectName, string methodName, Vector3 value, bool propagateToClients)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x123027C", Offset = "0x123027C", VA = "0x123027C")]
		protected static void InvokeUserCode_CmdPropagateMessageVector3(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x1230450", Offset = "0x1230450", VA = "0x1230450")]
		public void UserCode_RpcPropagateMessageObj(string gameObjectName, string methodName, GameObject value)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x12305DC", Offset = "0x12305DC", VA = "0x12305DC")]
		protected static void InvokeUserCode_RpcPropagateMessageObj(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1230730", Offset = "0x1230730", VA = "0x1230730")]
		static PlayerScript()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x123109C", Offset = "0x123109C", VA = "0x123109C", Slot = "6")]
		public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x1231338", Offset = "0x1231338", VA = "0x1231338", Slot = "7")]
		public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class VoxelArenaNobleNetworkManager : NobleNetworkManager
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UnityEvent clientIsDisconnected;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityEvent serverIsReady;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityEvent errorOccured;

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x153CD84", Offset = "0x153CD84", VA = "0x153CD84", Slot = "19")]
		public override void OnClientConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x153CE5C", Offset = "0x153CE5C", VA = "0x153CE5C", Slot = "20")]
		public override void OnClientDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x153CF08", Offset = "0x153CF08", VA = "0x153CF08", Slot = "12")]
		public override void OnServerConnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x153CF94", Offset = "0x153CF94", VA = "0x153CF94", Slot = "13")]
		public override void OnServerDisconnect(NetworkConnection conn)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x153D020", Offset = "0x153D020", VA = "0x153D020", Slot = "34")]
		public override void OnServerPrepared(string hostAddress, ushort hostPort)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x153D21C", Offset = "0x153D21C", VA = "0x153D21C", Slot = "32")]
		public override void StartHost()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x153D340", Offset = "0x153D340", VA = "0x153D340", Slot = "33")]
		public override void OnFatalError(string error)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x153D3F4", Offset = "0x153D3F4", VA = "0x153D3F4")]
		public VoxelArenaNobleNetworkManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DC")]
	public class ServerInfo
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ip;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string app;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string password;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int users;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxUsers;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dev;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int sessionId;

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x15339D8", Offset = "0x15339D8", VA = "0x15339D8")]
		public ServerInfo()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class VoxelGameSessionDatabase : MonoBehaviour
	{
		[Token(Token = "0x20004DE")]
		public delegate void ServersUpdated();

		[Token(Token = "0x20004DF")]
		public delegate void ActivationCodeResult(string result);

		[Token(Token = "0x20004E0")]
		public delegate void HeadsetTypeReceived(string error, string type);

		[Token(Token = "0x20004E1")]
		public delegate void ServerToConnectReceived(string error, string server);

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CEA4", Offset = "0xF2CEA4")]
		private sealed class <GetServerIdRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelGameSessionDatabase <>4__this;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700034A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9B")]
				[Address(RVA = "0x153EC14", Offset = "0x153EC14", VA = "0x153EC14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D9D")]
				[Address(RVA = "0x153EC7C", Offset = "0x153EC7C", VA = "0x153EC7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x153D5D8", Offset = "0x153D5D8", VA = "0x153D5D8")]
			[DebuggerHidden]
			public <GetServerIdRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x153E6C4", Offset = "0x153E6C4", VA = "0x153E6C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x153E7A0", Offset = "0x153E7A0", VA = "0x153E7A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x153E6E0", Offset = "0x153E6E0", VA = "0x153E6E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x153EC1C", Offset = "0x153EC1C", VA = "0x153EC1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CEB4", Offset = "0xF2CEB4")]
		private sealed class <SendInfoToWebServerRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelGameSessionDatabase <>4__this;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700034C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA2")]
				[Address(RVA = "0x153F158", Offset = "0x153F158", VA = "0x153F158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA4")]
				[Address(RVA = "0x153F1C0", Offset = "0x153F1C0", VA = "0x153F1C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x153D604", Offset = "0x153D604", VA = "0x153D604")]
			[DebuggerHidden]
			public <SendInfoToWebServerRoutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x153EC84", Offset = "0x153EC84", VA = "0x153EC84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x153ED60", Offset = "0x153ED60", VA = "0x153ED60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x153ECA0", Offset = "0x153ECA0", VA = "0x153ECA0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x153F160", Offset = "0x153F160", VA = "0x153F160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CEC4", Offset = "0xF2CEC4")]
		private sealed class <AskHeadsetTypeRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string serial;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoxelGameSessionDatabase <>4__this;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700034E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA9")]
				[Address(RVA = "0x153E654", Offset = "0x153E654", VA = "0x153E654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAB")]
				[Address(RVA = "0x153E6BC", Offset = "0x153E6BC", VA = "0x153E6BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x153D6D8", Offset = "0x153D6D8", VA = "0x153D6D8")]
			[DebuggerHidden]
			public <AskHeadsetTypeRoutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x153DF78", Offset = "0x153DF78", VA = "0x153DF78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x153E054", Offset = "0x153E054", VA = "0x153E054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x153DF94", Offset = "0x153DF94", VA = "0x153DF94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x153E65C", Offset = "0x153E65C", VA = "0x153E65C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CED4", Offset = "0xF2CED4")]
		private sealed class <AddPlaySessionRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string game;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nbPlayers;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VoxelGameSessionDatabase <>4__this;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000350")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x153DF08", Offset = "0x153DF08", VA = "0x153DF08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000351")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB2")]
				[Address(RVA = "0x153DF70", Offset = "0x153DF70", VA = "0x153DF70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x153D844", Offset = "0x153D844", VA = "0x153D844")]
			[DebuggerHidden]
			public <AddPlaySessionRoutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x153DA58", Offset = "0x153DA58", VA = "0x153DA58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x153DB34", Offset = "0x153DB34", VA = "0x153DB34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x153DA74", Offset = "0x153DA74", VA = "0x153DA74")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x153DF10", Offset = "0x153DF10", VA = "0x153DF10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CEE4", Offset = "0xF2CEE4")]
		private sealed class <SetPlaySessionStopRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelGameSessionDatabase <>4__this;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000352")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB7")]
				[Address(RVA = "0x153F6A8", Offset = "0x153F6A8", VA = "0x153F6A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000353")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0x153F710", Offset = "0x153F710", VA = "0x153F710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x153D9B4", Offset = "0x153D9B4", VA = "0x153D9B4")]
			[DebuggerHidden]
			public <SetPlaySessionStopRoutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x153F1C8", Offset = "0x153F1C8", VA = "0x153F1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x153F2A4", Offset = "0x153F2A4", VA = "0x153F2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x153F1E4", Offset = "0x153F1E4", VA = "0x153F1E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x153F6B0", Offset = "0x153F6B0", VA = "0x153F6B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ServersUpdated serversUpdated;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivationCodeResult activationCodeResult;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetTypeReceived headsetTypeReceived;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ServerToConnectReceived serverToConnectReceived;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35264", Offset = "0xF35264")]
		public string url;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3529C", Offset = "0xF3529C")]
		public ServerInfo[] servers;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF352D4", Offset = "0xF352D4")]
		public static int sessionID;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string app;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string sessionName;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string password;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int maxUsers;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int users;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string hostIP;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string hostIPLan;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int hostPort;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool stopFindServerRoutine;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastNumAvailableServers;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int currentPlaySession;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int serverId;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool isUpdatingInfoOnInternetWebServer;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float lastUpdateTime;

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x153D3FC", Offset = "0x153D3FC", VA = "0x153D3FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x153D494", Offset = "0x153D494", VA = "0x153D494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x153D49C", Offset = "0x153D49C", VA = "0x153D49C")]
		public void StartUpdateServerInfo()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x153D460", Offset = "0x153D460", VA = "0x153D460")]
		public void UpdateServerInfo()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x153D4F8", Offset = "0x153D4F8", VA = "0x153D4F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E10C", Offset = "0xF3E10C")]
		private IEnumerator GetServerIdRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x153D568", Offset = "0x153D568", VA = "0x153D568")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E170", Offset = "0xF3E170")]
		private IEnumerator SendInfoToWebServerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x153D630", Offset = "0x153D630", VA = "0x153D630")]
		public void AskHeadsetType(string serial)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x153D65C", Offset = "0x153D65C", VA = "0x153D65C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E1D4", Offset = "0xF3E1D4")]
		private IEnumerator AskHeadsetTypeRoutine(string serial)
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x153D704", Offset = "0x153D704", VA = "0x153D704")]
		public void AddPlaySession(string game, int nbPlayers)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x153D7BC", Offset = "0x153D7BC", VA = "0x153D7BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E238", Offset = "0xF3E238")]
		private IEnumerator AddPlaySessionRoutine(string game, int nbPlayers)
		{
			return null;
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x153D870", Offset = "0x153D870", VA = "0x153D870")]
		public void SetPlaySessionStop()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x153D944", Offset = "0x153D944", VA = "0x153D944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E29C", Offset = "0xF3E29C")]
		private IEnumerator SetPlaySessionStopRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x153D9E0", Offset = "0x153D9E0", VA = "0x153D9E0")]
		public VoxelGameSessionDatabase()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class VoxelStoreGameSessionDatabase : Singleton<VoxelStoreGameSessionDatabase>
	{
		[Serializable]
		[Token(Token = "0x20004E8")]
		private class Session
		{
			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DateTime date;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int levelId;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int score;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isCompleted;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool isMulti;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int type;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nbPlayers;

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x1C1F900", Offset = "0x1C1F900", VA = "0x1C1F900")]
			public Session()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E9")]
		public class HostInfo
		{
			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string identifier;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ip;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int port;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string game;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string password;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int users;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int maxUsers;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int version;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isInLobby;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string type;

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x1C1EBB8", Offset = "0x1C1EBB8", VA = "0x1C1EBB8")]
			public HostInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EA")]
		public class LeaderboardInfo
		{
			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rank;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int playerId;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string playerName;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int levelScore;

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int type;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Platform platform;

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x1C1F080", Offset = "0x1C1F080", VA = "0x1C1F080")]
			public LeaderboardInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		public class RankInfo
		{
			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rank;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int numberOfPlayers;

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x1C1F130", Offset = "0x1C1F130", VA = "0x1C1F130")]
			public RankInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EC")]
		public class WeeklyInfo
		{
			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string level;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int type;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string weekStart;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string rewardString;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<int> rewards;

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x1C1F950", Offset = "0x1C1F950", VA = "0x1C1F950")]
			public WeeklyInfo()
			{
			}
		}

		[Token(Token = "0x20004ED")]
		public enum SortOrder
		{
			[Token(Token = "0x4001D36")]
			DESC,
			[Token(Token = "0x4001D37")]
			ASC
		}

		[Token(Token = "0x20004EE")]
		public enum Platform
		{
			[Token(Token = "0x4001D39")]
			OVR_ANDROID,
			[Token(Token = "0x4001D3A")]
			OVR_WINDOWS,
			[Token(Token = "0x4001D3B")]
			STEAMVR,
			[Token(Token = "0x4001D3C")]
			DEV,
			[Token(Token = "0x4001D3D")]
			SPRINGBOARDVR,
			[Token(Token = "0x4001D3E")]
			SYNTHESISVR,
			[Token(Token = "0x4001D3F")]
			PICO,
			[Token(Token = "0x4001D40")]
			MOBILE_IOS,
			[Token(Token = "0x4001D41")]
			MOBILE_ANDROID,
			[Token(Token = "0x4001D42")]
			STEAM,
			[Token(Token = "0x4001D43")]
			QIYU
		}

		[Token(Token = "0x20004EF")]
		public delegate void AdTextUpdateDelegate(string text, bool useDefault);

		[Token(Token = "0x20004F0")]
		public delegate void HostAddErrorDelegate();

		[Token(Token = "0x20004F1")]
		public delegate void FindHostDelegate(string ip);

		[Token(Token = "0x20004F2")]
		public delegate void HostsUpdated(bool error);

		[Token(Token = "0x20004F3")]
		public delegate void LeaderBoardUpdated(LeaderboardInfo[] score);

		[Token(Token = "0x20004F4")]
		public delegate void LeaderBoardUpdatedWedekly(LeaderboardInfo[] score);

		[Token(Token = "0x20004F5")]
		public delegate void RankInfoUpdated(int rank, int numberOfPlayers);

		[Token(Token = "0x20004F6")]
		public delegate void RankInfoUpdatedWeekly(int rank, int numberOfPlayers);

		[Token(Token = "0x20004F7")]
		public delegate void ReceivedNotifications(NotificationInfo[] notifs);

		[Token(Token = "0x20004F8")]
		public delegate void NotificationReadDone(int notifId);

		[Token(Token = "0x20004F9")]
		public delegate void GetWeekly(WeeklyInfo levelInfo, int offset);

		[Token(Token = "0x20004FA")]
		public delegate void GetWeeklyScore(int score);

		[Token(Token = "0x20004FB")]
		public delegate void GetWeeklyError(int offset);

		[Token(Token = "0x20004FC")]
		public delegate void GetServerTime();

		[Token(Token = "0x20004FD")]
		public delegate void SessionSent();

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CEF4", Offset = "0xF2CEF4")]
		private sealed class <SendSessionsRoutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E31")]
				[Address(RVA = "0x1C1CD84", Offset = "0x1C1CD84", VA = "0x1C1CD84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E33")]
				[Address(RVA = "0x1C1CDEC", Offset = "0x1C1CDEC", VA = "0x1C1CDEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x1C1CC44", Offset = "0x1C1CC44", VA = "0x1C1CC44")]
			[DebuggerHidden]
			public <SendSessionsRoutine>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x1C1CC70", Offset = "0x1C1CC70", VA = "0x1C1CC70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x1C1CC74", Offset = "0x1C1CC74", VA = "0x1C1CC74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x1C1CD8C", Offset = "0x1C1CD8C", VA = "0x1C1CD8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF04", Offset = "0xF2CF04")]
		private sealed class <AddHostRoutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E38")]
				[Address(RVA = "0x1542720", Offset = "0x1542720", VA = "0x1542720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0x1542788", Offset = "0x1542788", VA = "0x1542788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x154164C", Offset = "0x154164C", VA = "0x154164C")]
			[DebuggerHidden]
			public <AddHostRoutine>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x1542074", Offset = "0x1542074", VA = "0x1542074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x1542150", Offset = "0x1542150", VA = "0x1542150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x1542090", Offset = "0x1542090", VA = "0x1542090")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x1542728", Offset = "0x1542728", VA = "0x1542728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF14", Offset = "0xF2CF14")]
		private sealed class <UpdateHostRoutine>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3E")]
				[Address(RVA = "0x1C1D790", Offset = "0x1C1D790", VA = "0x1C1D790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0x1C1D7F8", Offset = "0x1C1D7F8", VA = "0x1C1D7F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x1C1D590", Offset = "0x1C1D590", VA = "0x1C1D590")]
			[DebuggerHidden]
			public <UpdateHostRoutine>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x1C1D5BC", Offset = "0x1C1D5BC", VA = "0x1C1D5BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x1C1D5C0", Offset = "0x1C1D5C0", VA = "0x1C1D5C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x1C1D798", Offset = "0x1C1D798", VA = "0x1C1D798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF24", Offset = "0xF2CF24")]
		private sealed class <RemoveHostRoutine>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool quitAfter;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0x1C1B1E0", Offset = "0x1C1B1E0", VA = "0x1C1B1E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0x1C1B248", Offset = "0x1C1B248", VA = "0x1C1B248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x1C1AD60", Offset = "0x1C1AD60", VA = "0x1C1AD60")]
			[DebuggerHidden]
			public <RemoveHostRoutine>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x1C1AD8C", Offset = "0x1C1AD8C", VA = "0x1C1AD8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x1C1AE68", Offset = "0x1C1AE68", VA = "0x1C1AE68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x1C1ADA8", Offset = "0x1C1ADA8", VA = "0x1C1ADA8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x1C1B1E8", Offset = "0x1C1B1E8", VA = "0x1C1B1E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF34", Offset = "0xF2CF34")]
		private sealed class <SendGlobalScoreToWebServerRoutine>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0x1C1BE58", Offset = "0x1C1BE58", VA = "0x1C1BE58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0x1C1BEC0", Offset = "0x1C1BEC0", VA = "0x1C1BEC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x1C1B7C4", Offset = "0x1C1B7C4", VA = "0x1C1B7C4")]
			[DebuggerHidden]
			public <SendGlobalScoreToWebServerRoutine>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x1C1B7F0", Offset = "0x1C1B7F0", VA = "0x1C1B7F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x1C1B8CC", Offset = "0x1C1B8CC", VA = "0x1C1B8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x1C1B80C", Offset = "0x1C1B80C", VA = "0x1C1B80C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x1C1BE60", Offset = "0x1C1BE60", VA = "0x1C1BE60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF44", Offset = "0xF2CF44")]
		private sealed class <SendSessionInfoToWebServerRoutine>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Session session;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E53")]
				[Address(RVA = "0x1C1CBD4", Offset = "0x1C1CBD4", VA = "0x1C1CBD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E55")]
				[Address(RVA = "0x1C1CC3C", Offset = "0x1C1CC3C", VA = "0x1C1CC3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x1C1BEC8", Offset = "0x1C1BEC8", VA = "0x1C1BEC8")]
			[DebuggerHidden]
			public <SendSessionInfoToWebServerRoutine>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x1C1BEF4", Offset = "0x1C1BEF4", VA = "0x1C1BEF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x1C1BFD0", Offset = "0x1C1BFD0", VA = "0x1C1BFD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x1C1BF10", Offset = "0x1C1BF10", VA = "0x1C1BF10")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x1C1CBDC", Offset = "0x1C1CBDC", VA = "0x1C1CBDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF54", Offset = "0xF2CF54")]
		private sealed class <GetPlayerId>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <loop>5__2;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap3;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0x154394C", Offset = "0x154394C", VA = "0x154394C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5C")]
				[Address(RVA = "0x15439B4", Offset = "0x15439B4", VA = "0x15439B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x1541764", Offset = "0x1541764", VA = "0x1541764")]
			[DebuggerHidden]
			public <GetPlayerId>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x1543240", Offset = "0x1543240", VA = "0x1543240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x154331C", Offset = "0x154331C", VA = "0x154331C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x154325C", Offset = "0x154325C", VA = "0x154325C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x1543954", Offset = "0x1543954", VA = "0x1543954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF64", Offset = "0xF2CF64")]
		private sealed class <GetAdText>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <loop>5__2;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <dataReceived>5__3;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__4;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap4;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E61")]
				[Address(RVA = "0x1542C54", Offset = "0x1542C54", VA = "0x1542C54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0x1542CBC", Offset = "0x1542CBC", VA = "0x1542CBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x1541790", Offset = "0x1541790", VA = "0x1541790")]
			[DebuggerHidden]
			public <GetAdText>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x1542790", Offset = "0x1542790", VA = "0x1542790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x154286C", Offset = "0x154286C", VA = "0x154286C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x15427AC", Offset = "0x15427AC", VA = "0x15427AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x1542C5C", Offset = "0x1542C5C", VA = "0x1542C5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF74", Offset = "0xF2CF74")]
		private sealed class <UpdateListOfServersRoutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E67")]
				[Address(RVA = "0x1C1DDEC", Offset = "0x1C1DDEC", VA = "0x1C1DDEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E69")]
				[Address(RVA = "0x1C1DE54", Offset = "0x1C1DE54", VA = "0x1C1DE54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x1C1D800", Offset = "0x1C1D800", VA = "0x1C1D800")]
			[DebuggerHidden]
			public <UpdateListOfServersRoutine>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x1C1D82C", Offset = "0x1C1D82C", VA = "0x1C1D82C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x1C1D830", Offset = "0x1C1D830", VA = "0x1C1D830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x1C1DDF4", Offset = "0x1C1DDF4", VA = "0x1C1DDF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF84", Offset = "0xF2CF84")]
		private sealed class <GetPlayerScoresLeaderboard>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool platformSpecific;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int fromRank;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int toRank;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6D")]
				[Address(RVA = "0x1C18FF8", Offset = "0x1C18FF8", VA = "0x1C18FF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0x1C19060", Offset = "0x1C19060", VA = "0x1C19060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x1C18810", Offset = "0x1C18810", VA = "0x1C18810")]
			[DebuggerHidden]
			public <GetPlayerScoresLeaderboard>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x1C1883C", Offset = "0x1C1883C", VA = "0x1C1883C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x1C18840", Offset = "0x1C18840", VA = "0x1C18840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x1C19000", Offset = "0x1C19000", VA = "0x1C19000", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CF94", Offset = "0xF2CF94")]
		private sealed class <GetPlayerRankAndNumberOfPlayers>d__98 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool platformSpecific;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E73")]
				[Address(RVA = "0x1543E60", Offset = "0x1543E60", VA = "0x1543E60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0x1543EC8", Offset = "0x1543EC8", VA = "0x1543EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x1541948", Offset = "0x1541948", VA = "0x1541948")]
			[DebuggerHidden]
			public <GetPlayerRankAndNumberOfPlayers>d__98(int <>1__state)
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x15439BC", Offset = "0x15439BC", VA = "0x15439BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x15439C0", Offset = "0x15439C0", VA = "0x15439C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x1543E68", Offset = "0x1543E68", VA = "0x1543E68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFA4", Offset = "0xF2CFA4")]
		private sealed class <GetPlayerScoresLevelLeaderboard>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool platformSpecific;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int level;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int fromRank;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int toRank;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int type;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int typeMask;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isMulti;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E79")]
				[Address(RVA = "0x1C197EC", Offset = "0x1C197EC", VA = "0x1C197EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7B")]
				[Address(RVA = "0x1C19854", Offset = "0x1C19854", VA = "0x1C19854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x1C19068", Offset = "0x1C19068", VA = "0x1C19068")]
			[DebuggerHidden]
			public <GetPlayerScoresLevelLeaderboard>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x1C19094", Offset = "0x1C19094", VA = "0x1C19094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x1C19098", Offset = "0x1C19098", VA = "0x1C19098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1C197F4", Offset = "0x1C197F4", VA = "0x1C197F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFB4", Offset = "0xF2CFB4")]
		private sealed class <GetPlayerRankAndNumberOfPlayersForLevel>d__102 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool platformSpecific;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int level;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int type;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int typeMask;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isMulti;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7F")]
				[Address(RVA = "0x1C17514", Offset = "0x1C17514", VA = "0x1C17514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E81")]
				[Address(RVA = "0x1C1757C", Offset = "0x1C1757C", VA = "0x1C1757C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x1C16AC0", Offset = "0x1C16AC0", VA = "0x1C16AC0")]
			[DebuggerHidden]
			public <GetPlayerRankAndNumberOfPlayersForLevel>d__102(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1C16AEC", Offset = "0x1C16AEC", VA = "0x1C16AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x1C16AF0", Offset = "0x1C16AF0", VA = "0x1C16AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1C1751C", Offset = "0x1C1751C", VA = "0x1C1751C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFC4", Offset = "0xF2CFC4")]
		private sealed class <GetNotificationsRoutine>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E86")]
				[Address(RVA = "0x15431D0", Offset = "0x15431D0", VA = "0x15431D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0x1543238", Offset = "0x1543238", VA = "0x1543238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x1541B78", Offset = "0x1541B78", VA = "0x1541B78")]
			[DebuggerHidden]
			public <GetNotificationsRoutine>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1542CC4", Offset = "0x1542CC4", VA = "0x1542CC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x1542DA0", Offset = "0x1542DA0", VA = "0x1542DA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1542CE0", Offset = "0x1542CE0", VA = "0x1542CE0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x15431D8", Offset = "0x15431D8", VA = "0x15431D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFD4", Offset = "0xF2CFD4")]
		private sealed class <SetNotificationReadRoutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int notifId;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0x1C1D520", Offset = "0x1C1D520", VA = "0x1C1D520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8F")]
				[Address(RVA = "0x1C1D588", Offset = "0x1C1D588", VA = "0x1C1D588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x1C1CDF4", Offset = "0x1C1CDF4", VA = "0x1C1CDF4")]
			[DebuggerHidden]
			public <SetNotificationReadRoutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x1C1CE20", Offset = "0x1C1CE20", VA = "0x1C1CE20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x1C1CEFC", Offset = "0x1C1CEFC", VA = "0x1C1CEFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x1C1CE3C", Offset = "0x1C1CE3C", VA = "0x1C1CE3C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x1C1D528", Offset = "0x1C1D528", VA = "0x1C1D528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFE4", Offset = "0xF2CFE4")]
		private sealed class <GetWeeklydRoutine>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int weekOffset;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0x1C1ACF0", Offset = "0x1C1ACF0", VA = "0x1C1ACF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E96")]
				[Address(RVA = "0x1C1AD58", Offset = "0x1C1AD58", VA = "0x1C1AD58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x1C1A06C", Offset = "0x1C1A06C", VA = "0x1C1A06C")]
			[DebuggerHidden]
			public <GetWeeklydRoutine>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x1C1A098", Offset = "0x1C1A098", VA = "0x1C1A098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x1C1A174", Offset = "0x1C1A174", VA = "0x1C1A174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x1C1A0B4", Offset = "0x1C1A0B4", VA = "0x1C1A0B4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x1C1ACF8", Offset = "0x1C1ACF8", VA = "0x1C1ACF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2CFF4", Offset = "0xF2CFF4")]
		private sealed class <GetPlayerScoresLevelWeeklyLeaderboard>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool platformSpecific;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int level;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int weekOffset;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int fromRank;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int toRank;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int type;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int typeMask;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isMulti;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0x1C19FFC", Offset = "0x1C19FFC", VA = "0x1C19FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0x1C1A064", Offset = "0x1C1A064", VA = "0x1C1A064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x1C1985C", Offset = "0x1C1985C", VA = "0x1C1985C")]
			[DebuggerHidden]
			public <GetPlayerScoresLevelWeeklyLeaderboard>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x1C19888", Offset = "0x1C19888", VA = "0x1C19888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x1C1988C", Offset = "0x1C1988C", VA = "0x1C1988C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x1C1A004", Offset = "0x1C1A004", VA = "0x1C1A004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D004", Offset = "0xF2D004")]
		private sealed class <GetPlayerRankAndNumberOfPlayersForWeeklyLevel>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool platformSpecific;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int weekOffset;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int type;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int typeMask;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isMulti;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public SortOrder sortOrder;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA0")]
				[Address(RVA = "0x1C17DBC", Offset = "0x1C17DBC", VA = "0x1C17DBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0x1C17E24", Offset = "0x1C17E24", VA = "0x1C17E24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x1C17584", Offset = "0x1C17584", VA = "0x1C17584")]
			[DebuggerHidden]
			public <GetPlayerRankAndNumberOfPlayersForWeeklyLevel>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x1C175B0", Offset = "0x1C175B0", VA = "0x1C175B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x1C175B4", Offset = "0x1C175B4", VA = "0x1C175B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x1C17DC4", Offset = "0x1C17DC4", VA = "0x1C17DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D014", Offset = "0xF2D014")]
		private sealed class <GetPlayerScoreLevelWeekly>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool platformSpecific;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int weekOffset;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int type;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int typeMask;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isMulti;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA6")]
				[Address(RVA = "0x1C187A0", Offset = "0x1C187A0", VA = "0x1C187A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA8")]
				[Address(RVA = "0x1C18808", Offset = "0x1C18808", VA = "0x1C18808", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x1C17E2C", Offset = "0x1C17E2C", VA = "0x1C17E2C")]
			[DebuggerHidden]
			public <GetPlayerScoreLevelWeekly>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x1C17E58", Offset = "0x1C17E58", VA = "0x1C17E58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x1C17E5C", Offset = "0x1C17E5C", VA = "0x1C17E5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x1C187A8", Offset = "0x1C187A8", VA = "0x1C187A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D024", Offset = "0xF2D024")]
		private sealed class <RequestTimeRoutine>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoxelStoreGameSessionDatabase <>4__this;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAC")]
				[Address(RVA = "0x1C1B754", Offset = "0x1C1B754", VA = "0x1C1B754", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0x1C1B7BC", Offset = "0x1C1B7BC", VA = "0x1C1B7BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x1C1B250", Offset = "0x1C1B250", VA = "0x1C1B250")]
			[DebuggerHidden]
			public <RequestTimeRoutine>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x1C1B27C", Offset = "0x1C1B27C", VA = "0x1C1B27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x1C1B280", Offset = "0x1C1B280", VA = "0x1C1B280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x1C1B75C", Offset = "0x1C1B75C", VA = "0x1C1B75C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdTextUpdateDelegate adTextDelegate;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HostAddErrorDelegate hostAddErrorDelegate;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FindHostDelegate findHost;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HostsUpdated hostsUpdated;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LeaderBoardUpdated leaderboardUpdated;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LeaderBoardUpdated leaderboardUpdatedWeekly;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RankInfoUpdated rankInfoUpdated;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RankInfoUpdated rankInfoUpdatedWeekly;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReceivedNotifications receivedNotifications;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public NotificationReadDone notificationReadDone;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GetWeekly getWeeklyInfo;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GetWeeklyScore getWeeklyScore;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GetWeeklyError getWeeklyError;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DateTime serverTime;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GetServerTime getServerTime;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SessionSent sessionSent;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3532C", Offset = "0xF3532C")]
		public bool usePlatformManager;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35364", Offset = "0xF35364")]
		public string mainUrl;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string backupUrl;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string url;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3539C", Offset = "0xF3539C")]
		[SerializeField]
		private int playerId;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string deviceId;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string game;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string version;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int globalScore;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		public Platform platform;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35438", Offset = "0xF35438")]
		[SerializeField]
		private List<Session> sessions;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Session currentSession;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine updateHostRoutine;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool forceUpdateHostNextFrame;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool stop;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool isSendingSession;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int hostMaxPlayers;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int hostNbPlayers;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool stopFindServerRoutine;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int lastNumAvailableHosts;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private HostInfo[] hosts;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private LeaderboardInfo[] leaderboard;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RankInfo[] rankInfo;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private HostInfo currentHostInfo;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool isSendingSessions;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string usernameWithoutPlatform;

		[Token(Token = "0x17000354")]
		public int PlayerId
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x1540A58", Offset = "0x1540A58", VA = "0x1540A58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x15401C0", Offset = "0x15401C0", VA = "0x15401C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1540870", Offset = "0x1540870", VA = "0x1540870")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x15408BC", Offset = "0x15408BC", VA = "0x15408BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x15408C4", Offset = "0x15408C4", VA = "0x15408C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x15408D0", Offset = "0x15408D0", VA = "0x15408D0")]
		private void OnUserAuthenticatedInPlatform()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x154098C", Offset = "0x154098C", VA = "0x154098C")]
		private bool WantsToQuit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1540A60", Offset = "0x1540A60", VA = "0x1540A60")]
		public bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1540A70", Offset = "0x1540A70", VA = "0x1540A70")]
		private void StartSessionSend()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1540B84", Offset = "0x1540B84", VA = "0x1540B84")]
		public void AddSession(int levelId, int type, bool isMulti = false)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1540E8C", Offset = "0x1540E8C", VA = "0x1540E8C")]
		public void AddScoreToCurrentSession(int score, int nbPlayers = 1)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1540FCC", Offset = "0x1540FCC", VA = "0x1540FCC")]
		public void UpdateGlobalScore(int score)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x15410D8", Offset = "0x15410D8", VA = "0x15410D8")]
		public void GetNotifications()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x15411D0", Offset = "0x15411D0", VA = "0x15411D0")]
		public void SetNotificationRead(int notifId)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x15412EC", Offset = "0x15412EC", VA = "0x15412EC")]
		public void AddHost(string ip, int port, string serverName, string password)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x15413C0", Offset = "0x15413C0", VA = "0x15413C0")]
		public void RemoveHost()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x15413F0", Offset = "0x15413F0", VA = "0x15413F0")]
		public void UpdateHostsList()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x154148C", Offset = "0x154148C", VA = "0x154148C")]
		public int GetHostNumbers()
		{
			return default(int);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1541494", Offset = "0x1541494", VA = "0x1541494")]
		public HostInfo[] GetHosts()
		{
			return null;
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x154149C", Offset = "0x154149C", VA = "0x154149C")]
		public LeaderboardInfo[] GetLeaderboard()
		{
			return null;
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1540B14", Offset = "0x1540B14", VA = "0x1540B14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E490", Offset = "0xF3E490")]
		private IEnumerator SendSessionsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x15414A4", Offset = "0x15414A4", VA = "0x15414A4")]
		private int GetHash(string str)
		{
			return default(int);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1541350", Offset = "0x1541350", VA = "0x1541350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E4F4", Offset = "0xF3E4F4")]
		private IEnumerator AddHostRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1541678", Offset = "0x1541678", VA = "0x1541678")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E558", Offset = "0xF3E558")]
		private IEnumerator UpdateHostRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x15409D4", Offset = "0x15409D4", VA = "0x15409D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E5BC", Offset = "0xF3E5BC")]
		private IEnumerator RemoveHostRoutine(bool quitAfter)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1541068", Offset = "0x1541068", VA = "0x1541068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E620", Offset = "0xF3E620")]
		private IEnumerator SendGlobalScoreToWebServerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x15416E8", Offset = "0x15416E8", VA = "0x15416E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E684", Offset = "0xF3E684")]
		private IEnumerator SendSessionInfoToWebServerRoutine(Session session)
		{
			return null;
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1540790", Offset = "0x1540790", VA = "0x1540790")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E6E8", Offset = "0xF3E6E8")]
		private IEnumerator GetPlayerId()
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1540800", Offset = "0x1540800", VA = "0x1540800")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E74C", Offset = "0xF3E74C")]
		private IEnumerator GetAdText()
		{
			return null;
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x154141C", Offset = "0x154141C", VA = "0x154141C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E7B0", Offset = "0xF3E7B0")]
		private IEnumerator UpdateListOfServersRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x15417BC", Offset = "0x15417BC", VA = "0x15417BC")]
		public void RequestPlayerScoresLeaderboard(int fromRank, int toRank, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x15417EC", Offset = "0x15417EC", VA = "0x15417EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E814", Offset = "0xF3E814")]
		private IEnumerator GetPlayerScoresLeaderboard(int fromRank, int toRank, bool platformSpecific, SortOrder sortOrder)
		{
			return null;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x154188C", Offset = "0x154188C", VA = "0x154188C")]
		public void RequestPlayerRankAndNumberOfPlayers(bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x15418BC", Offset = "0x15418BC", VA = "0x15418BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E878", Offset = "0xF3E878")]
		private IEnumerator GetPlayerRankAndNumberOfPlayers(bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC)
		{
			return null;
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1541974", Offset = "0x1541974", VA = "0x1541974")]
		public void RequestPlayerScoresLevelLeaderboard(int fromRank, int toRank, int level, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x15419B8", Offset = "0x15419B8", VA = "0x15419B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E8DC", Offset = "0xF3E8DC")]
		private IEnumerator GetPlayerScoresLevelLeaderboard(int fromRank, int toRank, int level, int type, bool isMulti, bool platformSpecific, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1541A88", Offset = "0x1541A88", VA = "0x1541A88")]
		public void RequestPlayerRankAndNumberOfPlayersForLevel(int level, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1541ABC", Offset = "0x1541ABC", VA = "0x1541ABC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E940", Offset = "0xF3E940")]
		private IEnumerator GetPlayerRankAndNumberOfPlayersForLevel(int level, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1541160", Offset = "0x1541160", VA = "0x1541160")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3E9A4", Offset = "0xF3E9A4")]
		private IEnumerator GetNotificationsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x154126C", Offset = "0x154126C", VA = "0x154126C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EA08", Offset = "0xF3EA08")]
		private IEnumerator SetNotificationReadRoutine(int notifId)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1541BA4", Offset = "0x1541BA4", VA = "0x1541BA4")]
		public void GetWeeklyRequest(int weekOffset)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1541BD0", Offset = "0x1541BD0", VA = "0x1541BD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EA6C", Offset = "0xF3EA6C")]
		private IEnumerator GetWeeklydRoutine(int weekOffset)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1541C50", Offset = "0x1541C50", VA = "0x1541C50")]
		public void RequestPlayerScoresLevelWeeklyLeaderboard(int weekOffset, int fromRank, int toRank, int level, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1541C9C", Offset = "0x1541C9C", VA = "0x1541C9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EAD0", Offset = "0xF3EAD0")]
		private IEnumerator GetPlayerScoresLevelWeeklyLeaderboard(int weekOffset, int fromRank, int toRank, int level, int type, bool isMulti, bool platformSpecific, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1541D70", Offset = "0x1541D70", VA = "0x1541D70")]
		public void RequestPlayerRankAndNumberOfPlayersForWeeklyLevel(int weekOffset, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1541DA4", Offset = "0x1541DA4", VA = "0x1541DA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EB34", Offset = "0xF3EB34")]
		private IEnumerator GetPlayerRankAndNumberOfPlayersForWeeklyLevel(int weekOffset, int type, bool isMulti, bool platformSpecific = false, SortOrder sortOrder = SortOrder.DESC, int typeMask = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1541E60", Offset = "0x1541E60", VA = "0x1541E60")]
		public void RequestPlayerScoreLevelWeekly(int weekOffset, int level, int type, bool isMulti, bool platformSpecific = false, int typeMask = -1)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1541E94", Offset = "0x1541E94", VA = "0x1541E94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EB98", Offset = "0xF3EB98")]
		private IEnumerator GetPlayerScoreLevelWeekly(int weekOffset, int level, int type, bool isMulti, bool platformSpecific, int typeMask = -1)
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1541F48", Offset = "0x1541F48", VA = "0x1541F48")]
		public void RequestTime()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1541F74", Offset = "0x1541F74", VA = "0x1541F74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3EBFC", Offset = "0xF3EBFC")]
		private IEnumerator RequestTimeRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1541FE4", Offset = "0x1541FE4", VA = "0x1541FE4")]
		public VoxelStoreGameSessionDatabase()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class MobilePlatformManagerGoogle : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D034", Offset = "0xF2D034")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__7_0;

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x12132D4", Offset = "0x12132D4", VA = "0x12132D4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x12132DC", Offset = "0x12132DC", VA = "0x12132DC")]
			internal void <ReportScore>b__7_0(bool success)
			{
			}
		}

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformManager.OnLeaderboardRefreshDelegate OnLeaderboardUpdated;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformManager.OnCloudStorageAvailableDelegate OnCloudStorageAvailable;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ILeaderboard leaderboard;

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1212F44", Offset = "0x1212F44", VA = "0x1212F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x1212F48", Offset = "0x1212F48", VA = "0x1212F48")]
		public void Authenticate()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1212F4C", Offset = "0x1212F4C", VA = "0x1212F4C")]
		public void LoadLeaderboardScore(string leaderboardName, int topCount)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x1212F50", Offset = "0x1212F50", VA = "0x1212F50")]
		public void ReportScore(string leaderboardID, long score)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x1213190", Offset = "0x1213190", VA = "0x1213190")]
		public void ShowLeaderboardUI()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x1213204", Offset = "0x1213204", VA = "0x1213204")]
		public void CloudSetFloat(string parameterName, float parameterValue)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1213208", Offset = "0x1213208", VA = "0x1213208")]
		public void CloudSetString(string parameterName, string parameterValue)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x121320C", Offset = "0x121320C", VA = "0x121320C")]
		public void CloudSetInt(string parameterName, int parameterValue)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x1213210", Offset = "0x1213210", VA = "0x1213210")]
		public int CloudGetInt(string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1213218", Offset = "0x1213218", VA = "0x1213218")]
		public string CloudGetString(string parameterName)
		{
			return null;
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1213260", Offset = "0x1213260", VA = "0x1213260")]
		public float CloudGetFloat(string parameterName)
		{
			return default(float);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x1213268", Offset = "0x1213268", VA = "0x1213268")]
		public MobilePlatformManagerGoogle()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class MobilePlatformManagerIOS : MonoBehaviour
	{
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D044", Offset = "0xF2D044")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MobilePlatformManagerIOS <>4__this;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int topCount;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string leaderboardName;

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1213608", Offset = "0x1213608", VA = "0x1213608")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x1214560", Offset = "0x1214560", VA = "0x1214560")]
			internal void <LoadLeaderboardScore>b__0(bool result)
			{
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D054", Offset = "0xF2D054")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] hiscorePlayerName;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] hiscoreValue;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] hiscoreRank;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x1214A78", Offset = "0x1214A78", VA = "0x1214A78")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x1214A80", Offset = "0x1214A80", VA = "0x1214A80")]
			internal void <LoadLeaderboardScore>b__1(IUserProfile[] profiles)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D064", Offset = "0xF2D064")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__6_0;

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x12144D4", Offset = "0x12144D4", VA = "0x12144D4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x12144DC", Offset = "0x12144DC", VA = "0x12144DC")]
			internal void <ReportScore>b__6_0(bool success)
			{
			}
		}

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformManager.OnLeaderboardRefreshDelegate OnLeaderboardUpdated;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformManager.OnCloudStorageAvailableDelegate OnCloudStorageAvailable;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ILeaderboard leaderboard;

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x1213360", Offset = "0x1213360", VA = "0x1213360")]
		public void Authenticate()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x121345C", Offset = "0x121345C", VA = "0x121345C")]
		public void LoadLeaderboardScore(string leaderboardName, int topCount)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1213610", Offset = "0x1213610", VA = "0x1213610")]
		public void ReportScore(string leaderboardID, long score)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1213850", Offset = "0x1213850", VA = "0x1213850")]
		public void ShowLeaderboardUI()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x12138C4", Offset = "0x12138C4", VA = "0x12138C4")]
		public void CloudSetFloat(string parameterName, float parameterValue)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x12138C8", Offset = "0x12138C8", VA = "0x12138C8")]
		public void CloudSetString(string parameterName, string parameterValue)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x12138CC", Offset = "0x12138CC", VA = "0x12138CC")]
		public void CloudSetInt(string parameterName, int parameterValue)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x12138D0", Offset = "0x12138D0", VA = "0x12138D0")]
		public int CloudGetInt(string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x12138D8", Offset = "0x12138D8", VA = "0x12138D8")]
		public string CloudGetString(string parameterName)
		{
			return null;
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x1213920", Offset = "0x1213920", VA = "0x1213920")]
		public float CloudGetFloat(string parameterName)
		{
			return default(float);
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x1213928", Offset = "0x1213928", VA = "0x1213928")]
		public MobilePlatformManagerIOS()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x1213930", Offset = "0x1213930", VA = "0x1213930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2A0", Offset = "0xF3F2A0")]
		private void <Authenticate>b__4_0(bool success)
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class OVRPlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong m_myID;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_myOculusID;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_myOculusDisplayName;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool performEntitlementCheck;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformManager.OnLeaderboardRefreshDelegate OnLeaderboardUpdated;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PlatformManager.OnCloudStorageAvailableDelegate OnCloudStorageAvailable;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool coreInitialized;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public new string name;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string OculusLeaderboardName;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int TopCount;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> m_highScores;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isHMDMounted;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool bPause;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float pauseTimeScale;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private INIParser syncIniParser;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string syncIniFolder;

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x12201B8", Offset = "0x12201B8", VA = "0x12201B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x1220334", Offset = "0x1220334", VA = "0x1220334")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x122033C", Offset = "0x122033C", VA = "0x122033C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x1220488", Offset = "0x1220488", VA = "0x1220488")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1220494", Offset = "0x1220494", VA = "0x1220494")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x122049C", Offset = "0x122049C", VA = "0x122049C")]
		public void checkEntitlement()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x1220534", Offset = "0x1220534", VA = "0x1220534")]
		private void IsEntitledCallback(Oculus.Platform.Message msg)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1220790", Offset = "0x1220790", VA = "0x1220790")]
		private void GetLoggedInUserCallback(Oculus.Platform.Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x12206E4", Offset = "0x12206E4", VA = "0x12206E4")]
		public static void TerminateWithError(Oculus.Platform.Message msg)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x12209F8", Offset = "0x12209F8", VA = "0x12209F8")]
		public void onHighScoreLeaderboard(SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x1220F2C", Offset = "0x1220F2C", VA = "0x1220F2C")]
		public void SubmitHiscore(string name, uint value)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x1220FF8", Offset = "0x1220FF8", VA = "0x1220FF8")]
		public void QueryHighScoreLeaderboard(string platformLeaderboardName, PlatformManager.LeaderBoardFilter filter)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x122110C", Offset = "0x122110C", VA = "0x122110C")]
		private void HighestScoreGetEntriesCallback(Oculus.Platform.Message<Oculus.Platform.Models.LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x12215EC", Offset = "0x12215EC", VA = "0x12215EC")]
		private void GotIniPathCallback(Oculus.Platform.Message msg)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x1221744", Offset = "0x1221744", VA = "0x1221744")]
		private void TryOpenCloudIniFile()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x1221928", Offset = "0x1221928", VA = "0x1221928")]
		public void CloudSetFloat(string parameterName, float parameterValue)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x12219BC", Offset = "0x12219BC", VA = "0x12219BC")]
		public void CloudSetString(string parameterName, string parameterValue)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x1221A44", Offset = "0x1221A44", VA = "0x1221A44")]
		public void CloudSetInt(string parameterName, int parameterValue)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x1221ACC", Offset = "0x1221ACC", VA = "0x1221ACC")]
		public int CloudGetInt(string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x1221B54", Offset = "0x1221B54", VA = "0x1221B54")]
		public string CloudGetString(string parameterName)
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x1221BE4", Offset = "0x1221BE4", VA = "0x1221BE4")]
		public float CloudGetFloat(string parameterName)
		{
			return default(float);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x1221C70", Offset = "0x1221C70", VA = "0x1221C70")]
		public OVRPlatformManager()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class PicoPlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool performEntitlementCheck;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isHMDMounted;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool bPause;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float pauseTimeScale;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1222858", Offset = "0x1222858", VA = "0x1222858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x122294C", Offset = "0x122294C", VA = "0x122294C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1222954", Offset = "0x1222954", VA = "0x1222954")]
		public void SetUserName(string userName)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1222968", Offset = "0x1222968", VA = "0x1222968")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x12229C8", Offset = "0x12229C8", VA = "0x12229C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1222ADC", Offset = "0x1222ADC", VA = "0x1222ADC")]
		public PicoPlatformManager()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x1222AEC", Offset = "0x1222AEC", VA = "0x1222AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2B0", Offset = "0xF3F2B0")]
		private void <Awake>b__5_0(Pico.Platform.Message<Pico.Platform.PlatformInitializeResult> m)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1222D4C", Offset = "0x1222D4C", VA = "0x1222D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2C0", Offset = "0xF3F2C0")]
		private void <Awake>b__5_1(Pico.Platform.Message<Pico.Platform.Models.User> msg)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051A")]
	public class LeaderBoard
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string OculusID;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SteamVRID;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string iOSID;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string GooglePlayID;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SteamID;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string QiyuID;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int displayCount;

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x12116D4", Offset = "0x12116D4", VA = "0x12116D4")]
		public LeaderBoard()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class PlatformManager : Singleton<PlatformManager>
	{
		[Token(Token = "0x200051C")]
		public enum LeaderBoardFilter
		{
			[Token(Token = "0x4001E19")]
			NONE,
			[Token(Token = "0x4001E1A")]
			FRIENDS
		}

		[Token(Token = "0x200051D")]
		public delegate void OnUserAuthenticatedDelegate(string playerID, string playerName);

		[Token(Token = "0x200051E")]
		public delegate void OnLeaderboardRefreshDelegate(string name, string[] playerName, int[] playerScore, int[] playerRank);

		[Token(Token = "0x200051F")]
		public delegate void OnCloudStorageAvailableDelegate(bool isAvailable);

		[Token(Token = "0x2000520")]
		public delegate void PlatformOnUserAuthenticatedDelegate();

		[Token(Token = "0x2000521")]
		public delegate void PlatformLeaderboardUpdateDelegate(string leaderboardName);

		[Token(Token = "0x2000522")]
		public delegate void PlatformCloudStorageIsAvailable(bool isAvailable);

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35494", Offset = "0xF35494")]
		private bool OculusSupport;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool SteamVRSupport;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint steamAppID;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool SteamSupport;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool iOSSupport;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool GooglePlaySupport;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool QiyuSupport;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool PicoSupport;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool initializeOnStart;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF354CC", Offset = "0xF354CC")]
		public string userID;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userName;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isAuthenticated;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool performEntitlementCheck;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformOnUserAuthenticatedDelegate onUserAuthenticated;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF35504", Offset = "0xF35504")]
		public LeaderBoard[] leaderboard;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PlatformLeaderboardUpdateDelegate onLeaderboardUpdated;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string lastLeaderboardQueried;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string[] lastLeaderboardQueryPlayerName;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int[] lastLeaderboardQueryPlayerValue;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] lastLeaderboardQueryPlayerRank;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3553C", Offset = "0xF3553C")]
		public bool isCloudStorageAvailable;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PlatformCloudStorageIsAvailable onCloudStorageAvailable;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private OVRPlatformManager ovrPlatformManager;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SteamPlatformManager steamPlatformManager;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PicoPlatformManager picoPlatformManager;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private QiyuPlatformManager qiyuPlatformManager;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MobilePlatformManagerIOS mobilePlatformManagerIOS;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MobilePlatformManagerGoogle mobilePlatformManagerGoogle;

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1222FE8", Offset = "0x1222FE8", VA = "0x1222FE8")]
		public void OnCloudStorageAvailable(bool isAvailable)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1223320", Offset = "0x1223320", VA = "0x1223320")]
		public void OnUserAuthenticated(string playerID, string playerName)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1223618", Offset = "0x1223618", VA = "0x1223618")]
		public void OnLeaderboardRefresh(string name, string[] playerName, int[] playerScore, int[] playerRank)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1223CD0", Offset = "0x1223CD0", VA = "0x1223CD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x12240D4", Offset = "0x12240D4", VA = "0x12240D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1223FE8", Offset = "0x1223FE8", VA = "0x1223FE8")]
		public void InitializePlatform()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x12240D8", Offset = "0x12240D8", VA = "0x12240D8")]
		private void InitializeForOculus()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1224234", Offset = "0x1224234", VA = "0x1224234")]
		private void InitializeForSteam()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x122437C", Offset = "0x122437C", VA = "0x122437C")]
		private void InitializeForPico()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x122445C", Offset = "0x122445C", VA = "0x122445C")]
		private void InitializeForQiyu()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x122468C", Offset = "0x122468C", VA = "0x122468C")]
		private void InitializeForMobileGoogle()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x122453C", Offset = "0x122453C", VA = "0x122453C")]
		private void InitializeForMobileIOS()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x1224800", Offset = "0x1224800", VA = "0x1224800")]
		private void InitializeForDesktop()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x1224804", Offset = "0x1224804", VA = "0x1224804")]
		public void CloudSetFloat(string parameterName, float parameterValue)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1224858", Offset = "0x1224858", VA = "0x1224858")]
		public void CloudSetString(string parameterName, string parameterValue)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x12248AC", Offset = "0x12248AC", VA = "0x12248AC")]
		public void CloudSetInt(string parameterName, int parameterValue)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x1224900", Offset = "0x1224900", VA = "0x1224900")]
		public int CloudGetInt(string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1224964", Offset = "0x1224964", VA = "0x1224964")]
		public string CloudGetString(string parameterName)
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1224A4C", Offset = "0x1224A4C", VA = "0x1224A4C")]
		public float CloudGetFloat(string parameterName)
		{
			return default(float);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1224AB0", Offset = "0x1224AB0", VA = "0x1224AB0")]
		public int GetLeaderboardID(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1224B40", Offset = "0x1224B40", VA = "0x1224B40")]
		public void RequestLeaderboardUpdate(string leaderboardName, LeaderBoardFilter filter = LeaderBoardFilter.NONE)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1224C70", Offset = "0x1224C70", VA = "0x1224C70")]
		private void RequestLeaderboardUpdateForOculus(string leaderboardName, LeaderBoardFilter filter)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1224DD0", Offset = "0x1224DD0", VA = "0x1224DD0")]
		private void RequestLeaderboardUpdateForSteam(string leaderboardName, LeaderBoardFilter filter, bool isSteamVR)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1224F4C", Offset = "0x1224F4C", VA = "0x1224F4C")]
		private void RequestLeaderboardUpdateForIOS(string leaderboardName, LeaderBoardFilter filter)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1225060", Offset = "0x1225060", VA = "0x1225060")]
		private void RequestLeaderboardUpdateForGooglePlay(string leaderboardName, LeaderBoardFilter filter)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1225158", Offset = "0x1225158", VA = "0x1225158")]
		public void InitializeLeaderboards()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x122515C", Offset = "0x122515C", VA = "0x122515C")]
		public void ShowNativeLeaderboardUI()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x12251BC", Offset = "0x12251BC", VA = "0x12251BC")]
		public void SubmitScore(string leaderboardName, int score)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x12253EC", Offset = "0x12253EC", VA = "0x12253EC")]
		private void SubmitScoreForOculus(string leaderboardName, int score)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x12254F8", Offset = "0x12254F8", VA = "0x12254F8")]
		private void SubmitScoreForSteam(string leaderboardName, int score, bool isSteamVR)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1225680", Offset = "0x1225680", VA = "0x1225680")]
		private void SubmitScoreForIOS(string leaderboardName, int score)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1225788", Offset = "0x1225788", VA = "0x1225788")]
		private void SubmitScoreForGooglePlay(string leaderboardName, int score)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x1225890", Offset = "0x1225890", VA = "0x1225890")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class QiyuPlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string appId;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string devId;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string appSecret;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string signKey;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool performEntitlementCheck;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isHMDMounted;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool bPause;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float pauseTimeScale;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool shouldQuit;

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x152DD0C", Offset = "0x152DD0C", VA = "0x152DD0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x152DD10", Offset = "0x152DD10", VA = "0x152DD10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x152DE10", Offset = "0x152DE10", VA = "0x152DE10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x152DE14", Offset = "0x152DE14", VA = "0x152DE14")]
		private void Login()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x152DF74", Offset = "0x152DF74", VA = "0x152DF74")]
		public QiyuPlatformManager()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x152E004", Offset = "0x152E004", VA = "0x152E004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2D0", Offset = "0xF3F2D0")]
		private void <Start>b__11_0(object[] ret)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x152E100", Offset = "0x152E100", VA = "0x152E100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2E0", Offset = "0xF3F2E0")]
		private void <Login>b__13_0(QiyuPlugin.MessageResult<QiyuPlugin.QiyuAccountInfo> msg)
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class SteamPlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000525")]
		private enum LeaderboardAction
		{
			[Token(Token = "0x4001E37")]
			DOWNLOAD,
			[Token(Token = "0x4001E38")]
			UPLOAD
		}

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string userId;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string userName;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint appId;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlatformManager.OnUserAuthenticatedDelegate OnUserAuthenticated;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlatformManager.OnLeaderboardRefreshDelegate OnLeaderboardUpdated;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlatformManager.OnCloudStorageAvailableDelegate OnCloudStorageAvailable;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LeaderboardAction currentLeaderboardAction;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentScoreToUpload;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string leaderboardName;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlatformManager.LeaderBoardFilter leaderboardFilter;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int leaderboardfromRank;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int leaderboardNbData;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isHMDMounted;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool bPause;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float pauseTimeScale;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private INIParser syncIniParser;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string syncIniFolder;

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x1534FAC", Offset = "0x1534FAC", VA = "0x1534FAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1534FB4", Offset = "0x1534FB4", VA = "0x1534FB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1534FB8", Offset = "0x1534FB8", VA = "0x1534FB8")]
		public void SubmitHiscore(string name, uint value)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1534FBC", Offset = "0x1534FBC", VA = "0x1534FBC")]
		public void QueryHighScoreLeaderboard(string platformLeaderboardName, PlatformManager.LeaderBoardFilter filter, int nbData)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1534FC0", Offset = "0x1534FC0", VA = "0x1534FC0")]
		public SteamPlatformManager()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class ScreenFade : MonoBehaviour
	{
		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D074", Offset = "0xF2D074")]
		private sealed class <Fade>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startDelay;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFade <>4__this;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float startAlpha;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float endAlpha;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700037E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F46")]
				[Address(RVA = "0x1532DE4", Offset = "0x1532DE4", VA = "0x1532DE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F48")]
				[Address(RVA = "0x1532E4C", Offset = "0x1532E4C", VA = "0x1532E4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x1532BC8", Offset = "0x1532BC8", VA = "0x1532BC8")]
			[DebuggerHidden]
			public <Fade>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x1532C68", Offset = "0x1532C68", VA = "0x1532C68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x1532C6C", Offset = "0x1532C6C", VA = "0x1532C6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x1532DEC", Offset = "0x1532DEC", VA = "0x1532DEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF35594", Offset = "0xF35594")]
		public float fadeTime;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF355CC", Offset = "0xF355CC")]
		public Color fadeColor;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool fadeOnStart;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool startFaded;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int renderQueue;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float uiFadeAlpha;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer fadeRenderer;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter fadeMesh;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fadeMaterial;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isFading;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF35604", Offset = "0xF35604")]
		private float <currentAlpha>k__BackingField;

		[Token(Token = "0x1700037D")]
		public float currentAlpha
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x15321E0", Offset = "0x15321E0", VA = "0x15321E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F2F0", Offset = "0xF3F2F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x15321E8", Offset = "0x15321E8", VA = "0x15321E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F300", Offset = "0xF3F300")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x15321F0", Offset = "0x15321F0", VA = "0x15321F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x15326A0", Offset = "0x15326A0", VA = "0x15326A0")]
		public void FadeOut(float delayBeforeFadeOut = 0f)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x153276C", Offset = "0x153276C", VA = "0x153276C")]
		public void FadeIn(float delayBeforeFadeIn = 0f)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x15327A4", Offset = "0x15327A4", VA = "0x15327A4")]
		private void OnLevelFinishedLoading(int level)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x15327DC", Offset = "0x15327DC", VA = "0x15327DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1532840", Offset = "0x1532840", VA = "0x1532840")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1532854", Offset = "0x1532854", VA = "0x1532854")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x15329B8", Offset = "0x15329B8", VA = "0x15329B8")]
		public void SetUIFade(float level)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1532698", Offset = "0x1532698", VA = "0x1532698")]
		public void SetFadeLevel(float level)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x15326D8", Offset = "0x15326D8", VA = "0x15326D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3F310", Offset = "0xF3F310")]
		private IEnumerator Fade(float startAlpha, float endAlpha, float startDelay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1532A38", Offset = "0x1532A38", VA = "0x1532A38")]
		private void SetMaterialAlpha()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1532BF4", Offset = "0x1532BF4", VA = "0x1532BF4")]
		public ScreenFade()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject uiHelpersToInstantiate;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LaserPointer.LaserBeamBehavior laserBeamBehavior;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material laserMaterial;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 menuOffset;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isEmulateAndroidBehaviour;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool isHideAtStart;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool isUIScreenSpaceOnWindows;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer lp;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRCameraRig rig;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject uiHelperObj;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OVRInputModule input;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera oculusCamera;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CameraClearFlags initialCamClearFlag;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color initialCameraColor;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int initialCameraLayer;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isUsingCullingMask;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool isAutoPositionning;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x153BA0C", Offset = "0x153BA0C", VA = "0x153BA0C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x153BA44", Offset = "0x153BA44", VA = "0x153BA44")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x153BD0C", Offset = "0x153BD0C", VA = "0x153BD0C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x153BD10", Offset = "0x153BD10", VA = "0x153BD10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x153BAE8", Offset = "0x153BAE8", VA = "0x153BAE8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x153BDAC", Offset = "0x153BDAC", VA = "0x153BDAC")]
		private void InitWithInput()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x153C1A0", Offset = "0x153C1A0", VA = "0x153C1A0")]
		public void Show()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x153C520", Offset = "0x153C520", VA = "0x153C520")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x153C68C", Offset = "0x153C68C", VA = "0x153C68C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x153C470", Offset = "0x153C470", VA = "0x153C470")]
		public void ToggleLaserPointer(bool isOn)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x153CA70", Offset = "0x153CA70", VA = "0x153CA70")]
		public VRUIController()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class AssignMeshDisabling : MonoBehaviour
	{
		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D084", Offset = "0xF2D084")]
		private sealed class <AssignMeshDisablingRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssignMeshDisabling <>4__this;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private MeshRenderer[] <go>5__2;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000380")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F5C")]
				[Address(RVA = "0x17358CC", Offset = "0x17358CC", VA = "0x17358CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000381")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F5E")]
				[Address(RVA = "0x1735934", Offset = "0x1735934", VA = "0x1735934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x1735634", Offset = "0x1735634", VA = "0x1735634")]
			[DebuggerHidden]
			public <AssignMeshDisablingRoutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x1735678", Offset = "0x1735678", VA = "0x1735678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x173567C", Offset = "0x173567C", VA = "0x173567C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x17358D4", Offset = "0x17358D4", VA = "0x17358D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layersToApply;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float disappearFactor;

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1735540", Offset = "0x1735540", VA = "0x1735540")]
		public static bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1735598", Offset = "0x1735598", VA = "0x1735598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x17355C4", Offset = "0x17355C4", VA = "0x17355C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xF3F3C4", Offset = "0xF3F3C4")]
		private IEnumerator AssignMeshDisablingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1735660", Offset = "0x1735660", VA = "0x1735660")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1735664", Offset = "0x1735664", VA = "0x1735664")]
		public AssignMeshDisabling()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class ColorizeAllRenderers : MonoBehaviour
	{
		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xF35614", Offset = "0xF35614")]
		public string materialNameToColorize;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer[] renderers;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color currentColor;

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1738250", Offset = "0x1738250", VA = "0x1738250")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1738254", Offset = "0x1738254", VA = "0x1738254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1738258", Offset = "0x1738258", VA = "0x1738258")]
		private void Init()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x17382B4", Offset = "0x17382B4", VA = "0x17382B4")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1738484", Offset = "0x1738484", VA = "0x1738484")]
		public ColorizeAllRenderers()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class Config
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isConfigRead;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, int> idsFromSerials;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, string> namesFromSerials;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, int> skinIdFromSerials;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<string, string> gameIds;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<string, int> gamePlayerCount;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string operatorLogin;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string operatorPassword;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int snapshotInterval;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static bool isSnapshotActivated;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int spectatorTargetDisplay;

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x17384DC", Offset = "0x17384DC", VA = "0x17384DC")]
		private static void ReadCfg()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x17392B4", Offset = "0x17392B4", VA = "0x17392B4")]
		private static void WriteCfg()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x17399D8", Offset = "0x17399D8", VA = "0x17399D8")]
		public static int GetIdFromSerial(string serial)
		{
			return default(int);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x1739AEC", Offset = "0x1739AEC", VA = "0x1739AEC")]
		public static string GetNameFromSerial(string serial)
		{
			return null;
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1739C04", Offset = "0x1739C04", VA = "0x1739C04")]
		public static int GetSkinFromSerial(string serial)
		{
			return default(int);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1739D18", Offset = "0x1739D18", VA = "0x1739D18")]
		public static void SetIdToSerial(string serial, int id)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1739DF0", Offset = "0x1739DF0", VA = "0x1739DF0")]
		public static void SetNameToSerial(string serial, string name)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1739EC8", Offset = "0x1739EC8", VA = "0x1739EC8")]
		public static void SetSkinToSerial(string serial, int skin)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1739FA0", Offset = "0x1739FA0", VA = "0x1739FA0")]
		public static string GetOperatorLogin()
		{
			return null;
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x173A048", Offset = "0x173A048", VA = "0x173A048")]
		public static string GetOperatorPassword()
		{
			return null;
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x173A0F0", Offset = "0x173A0F0", VA = "0x173A0F0")]
		public static bool IsSnapshotActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x173A198", Offset = "0x173A198", VA = "0x173A198")]
		public static int GetSnapshotInterval()
		{
			return default(int);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x173A240", Offset = "0x173A240", VA = "0x173A240")]
		public static int GetSpectatorTargetDisplay()
		{
			return default(int);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x173A2E8", Offset = "0x173A2E8", VA = "0x173A2E8")]
		public static string[] GetGamesIds()
		{
			return null;
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x173A674", Offset = "0x173A674", VA = "0x173A674")]
		public static string[] GetGamesAndroidIds()
		{
			return null;
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x173A40C", Offset = "0x173A40C", VA = "0x173A40C")]
		private static void InitGamesList()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x173A798", Offset = "0x173A798", VA = "0x173A798")]
		public static int[] GetGamesMaxPlayerCounts()
		{
			return null;
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x173A8BC", Offset = "0x173A8BC", VA = "0x173A8BC")]
		public static string GenerateConfigArguments()
		{
			return null;
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x173B010", Offset = "0x173B010", VA = "0x173B010")]
		public static void GetConfigFromArguments(string arguments)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x173BCA0", Offset = "0x173BCA0", VA = "0x173BCA0")]
		public Config()
		{
		}
	}
	[Token(Token = "0x200052D")]
	internal class Crypto
	{
		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string passPhrase;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string saltValue;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string hashAlgorithm;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int passwordIterations;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string initVector;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int keySize;

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x173D930", Offset = "0x173D930", VA = "0x173D930")]
		public static string Encrypt(string data)
		{
			return null;
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x173DC08", Offset = "0x173DC08", VA = "0x173DC08")]
		public static string Decrypt(string data)
		{
			return null;
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x173DEEC", Offset = "0x173DEEC", VA = "0x173DEEC")]
		public Crypto()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class LicenseChecker
	{
		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x12116DC", Offset = "0x12116DC", VA = "0x12116DC")]
		public static bool Check(string file = "")
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x12119E0", Offset = "0x12119E0", VA = "0x12119E0")]
		public static string FindLicenseFile(string directory)
		{
			return null;
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1211F58", Offset = "0x1211F58", VA = "0x1211F58")]
		public static int MachineCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x12120A4", Offset = "0x12120A4", VA = "0x12120A4")]
		public static void WriteRequestLicenseForApp(string path)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x1211AA8", Offset = "0x1211AA8", VA = "0x1211AA8")]
		private static string GetAppName()
		{
			return null;
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x1211C28", Offset = "0x1211C28", VA = "0x1211C28")]
		private static long GetSize()
		{
			return default(long);
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x1212148", Offset = "0x1212148", VA = "0x1212148")]
		public LicenseChecker()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class MeshDisablingBasedOnDistance : MonoBehaviour
	{
		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer localMeshRenderer;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera mainCamera;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frameValue;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int frameCount;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float disappearFactor;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float compute;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distance;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 origin;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 extents;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1212158", Offset = "0x1212158", VA = "0x1212158")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x1212284", Offset = "0x1212284", VA = "0x1212284")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x121248C", Offset = "0x121248C", VA = "0x121248C")]
		public MeshDisablingBasedOnDistance()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class QuestInfo : MonoBehaviour
	{
		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerScript player;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastInfoSent;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkInit network;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string serial;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string version;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isInit;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x152E340", Offset = "0x152E340", VA = "0x152E340")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x152E3F8", Offset = "0x152E3F8", VA = "0x152E3F8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x152E73C", Offset = "0x152E73C", VA = "0x152E73C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x152EA94", Offset = "0x152EA94", VA = "0x152EA94")]
		public string GetSerial()
		{
			return null;
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x152EA9C", Offset = "0x152EA9C", VA = "0x152EA9C")]
		public QuestInfo()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class RecalibrationWithGuardian : MonoBehaviour
	{
		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRBoundary.BoundaryType m_boundaryType;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ApplyToTarget;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform centerEye;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform trackingSpace;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject gameRoomObject;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject gameRoomRefObject;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject wallsObject;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject selectedBoundariesPoint1;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject selectedBoundariesPoint2;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material wallsMaterial;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool applicationInitialization;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Vector3> playingAreaCorners;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float lastestAngleAdjustment;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 closestPointLeft;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 closestPointRight;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 crossingPoint;

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x15309D4", Offset = "0x15309D4", VA = "0x15309D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x1530A68", Offset = "0x1530A68", VA = "0x1530A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1530BA0", Offset = "0x1530BA0", VA = "0x1530BA0")]
		private void GetGuardianZone()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x15311E8", Offset = "0x15311E8", VA = "0x15311E8")]
		private void GetTheClosestPoints()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1531430", Offset = "0x1531430", VA = "0x1531430")]
		private void GetMoreFarCorners()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x1530B9C", Offset = "0x1530B9C", VA = "0x1530B9C")]
		private void PlayerAdjustment()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1531A30", Offset = "0x1531A30", VA = "0x1531A30")]
		private void AngleAdjustment()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1531BC8", Offset = "0x1531BC8", VA = "0x1531BC8")]
		private void PositionAdjustment()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x1531D30", Offset = "0x1531D30", VA = "0x1531D30")]
		public void DisplayHelpers(bool display)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x1530DFC", Offset = "0x1530DFC", VA = "0x1530DFC")]
		private void DrawPlayAreaBoundaries()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x1531E00", Offset = "0x1531E00", VA = "0x1531E00")]
		private void DrawMeshBetweenTwoCorners(Mesh mesh, Vector3 corner1, Vector3 corner2)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1532164", Offset = "0x1532164", VA = "0x1532164")]
		public RecalibrationWithGuardian()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x15321DC", Offset = "0x15321DC", VA = "0x15321DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF3F478", Offset = "0xF3F478")]
		private void <Start>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class ScreenRecorder : MonoBehaviour
	{
		[Token(Token = "0x2000533")]
		public enum Format
		{
			[Token(Token = "0x4001EA5")]
			RAW,
			[Token(Token = "0x4001EA6")]
			JPG,
			[Token(Token = "0x4001EA7")]
			PNG,
			[Token(Token = "0x4001EA8")]
			PPM
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xF2D094", Offset = "0xF2D094")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] fileHeader;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] fileData;

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x1533870", Offset = "0x1533870", VA = "0x1533870")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x153389C", Offset = "0x153389C", VA = "0x153389C")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int captureWidth;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int captureHeight;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera camera;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] hideGameObjects;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool optimizeForManyScreenshots;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Format format;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string folder;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rect rect;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture renderTexture;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D screenShot;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int counter;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool captureScreenshot;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool captureVideo;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1532E54", Offset = "0x1532E54", VA = "0x1532E54")]
		private string uniqueFilename(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1533288", Offset = "0x1533288", VA = "0x1533288")]
		public void Init(int interval)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1533320", Offset = "0x1533320", VA = "0x1533320")]
		public void CaptureScreenshot()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x153332C", Offset = "0x153332C", VA = "0x153332C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1533878", Offset = "0x1533878", VA = "0x1533878")]
		public ScreenRecorder()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class Tunnelling : MonoBehaviour
	{
		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform referenceObject;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer tunnelVisual;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useInFixUpdate;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speedForNoVignetting;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedForFullVignetting;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float noVignetteSize;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fullVignetteSize;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 initialScale;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float smoothingFactor;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentScale;

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1536950", Offset = "0x1536950", VA = "0x1536950")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1536A34", Offset = "0x1536A34", VA = "0x1536A34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1536CEC", Offset = "0x1536CEC", VA = "0x1536CEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1536A44", Offset = "0x1536A44", VA = "0x1536A44")]
		private void UpdateTunneling()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1536CFC", Offset = "0x1536CFC", VA = "0x1536CFC")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class CookBroadCastCamera : BroadCastCamera
	{
		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public OrbitCamera orbitCamera;

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x173D610", Offset = "0x173D610", VA = "0x173D610", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x173D6B4", Offset = "0x173D6B4", VA = "0x173D6B4", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x173D758", Offset = "0x173D758", VA = "0x173D758")]
		private void ManageSwapCameraCustom()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x173D92C", Offset = "0x173D92C", VA = "0x173D92C")]
		public CookBroadCastCamera()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class ArrowHint : MonoBehaviour
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject playerHead;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject leftArrowHint;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject rightArrowHint;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float arrowFovInDegrees;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF3565C", Offset = "0xF3565C")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Dictionary<string, Transform> users;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ArrowHint arrowHintInstance;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool blockDico;

		[Token(Token = "0x17000382")]
		public static ArrowHint instance
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x1732D34", Offset = "0x1732D34", VA = "0x1732D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1734DD8", Offset = "0x1734DD8", VA = "0x1734DD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1734E6C", Offset = "0x1734E6C", VA = "0x1734E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1732E00", Offset = "0x1732E00", VA = "0x1732E00")]
		public void Activate(string userName, Transform newTarget)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1735164", Offset = "0x1735164", VA = "0x1735164")]
		public void Desactivate(string userName)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1734E70", Offset = "0x1734E70", VA = "0x1734E70")]
		public void ManageHintArrows()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x17354C8", Offset = "0x17354C8", VA = "0x17354C8")]
		public ArrowHint()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class InputUIManager : MonoBehaviour
	{
		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xF356B8", Offset = "0xF356B8")]
		public TMP_InputField inputField;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text errorText;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRUIController vrUI;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject keyboard;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiPanel;

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1211604", Offset = "0x1211604", VA = "0x1211604")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1211608", Offset = "0x1211608", VA = "0x1211608")]
		public void Show()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1211674", Offset = "0x1211674", VA = "0x1211674")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x12116C8", Offset = "0x12116C8", VA = "0x12116C8")]
		public void OnValidateInput()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x12116CC", Offset = "0x12116CC", VA = "0x12116CC")]
		public InputUIManager()
		{
		}
	}
}
namespace VoxelArena.Cook
{
	[Token(Token = "0x2000539")]
	public class PressButton : MonoBehaviour
	{
		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int HAPTIC_DURATION;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private byte HAPTIC_INTENSITY;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject skinButton;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject pressedButtonObject;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float pressMagnitude;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 pressDirection;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer[] enabledRenderers;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] disabledRenderers;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string buttonName;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent actionWhenClicked;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float debounceTime;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastButtonPressedTime;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isPressed;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool isCheckIndependtlyFromTimeScale;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] objectsToCheckInUnscaledTime;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool[] currentHandsForUnscaled;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isActivated;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool debugAction;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool isNetworkButton;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool isRenameButtonForNetwork;

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x173C46C", Offset = "0x173C46C", VA = "0x173C46C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x173C570", Offset = "0x173C570", VA = "0x173C570")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x173C670", Offset = "0x173C670", VA = "0x173C670")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x173C738", Offset = "0x173C738", VA = "0x173C738")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x173CDA4", Offset = "0x173CDA4", VA = "0x173CDA4")]
		private void ResetHands()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x173CED4", Offset = "0x173CED4", VA = "0x173CED4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x173D0EC", Offset = "0x173D0EC", VA = "0x173D0EC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x173D05C", Offset = "0x173D05C", VA = "0x173D05C")]
		private bool IndexFingerPressingMe(GameObject gob)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x173D304", Offset = "0x173D304", VA = "0x173D304")]
		private void ActivePressedButton()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x173D3B0", Offset = "0x173D3B0", VA = "0x173D3B0")]
		private void PressInButton()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x173D204", Offset = "0x173D204", VA = "0x173D204")]
		private void ReleaseButton()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x173CB48", Offset = "0x173CB48", VA = "0x173CB48")]
		public void AskButtonPressed(GameObject collider)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x173D4BC", Offset = "0x173D4BC", VA = "0x173D4BC")]
		public void ButtonPressed()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x173D548", Offset = "0x173D548", VA = "0x173D548")]
		public void ApticPressingButton(string handName)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x173D5E8", Offset = "0x173D5E8", VA = "0x173D5E8")]
		public PressButton()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class LocalGuardianBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenFade fader;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer gridMesh;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 gridAppearDistance;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 gridAppearFadeDistance;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 fadeAppearDistance;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 fadeAppearFadeDistance;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float fadeLevel;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float gridFadeLevel;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color gridColor;

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x173BDC8", Offset = "0x173BDC8", VA = "0x173BDC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x173BECC", Offset = "0x173BECC", VA = "0x173BECC")]
		public void Relocate()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x173C0B8", Offset = "0x173C0B8", VA = "0x173C0B8")]
		public void ClearFader()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x173C0D8", Offset = "0x173C0D8", VA = "0x173C0D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x173C34C", Offset = "0x173C34C", VA = "0x173C34C")]
		public LocalGuardianBehaviour()
		{
		}
	}
}
namespace VoxelArena.Utils
{
	[Token(Token = "0x200053B")]
	public class ApplicationUtil
	{
		[Token(Token = "0x17000383")]
		public static RuntimePlatform platform
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x1536DD4", Offset = "0x1536DD4", VA = "0x1536DD4")]
			get
			{
				return default(RuntimePlatform);
			}
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1536DDC", Offset = "0x1536DDC", VA = "0x1536DDC")]
		public static string GetProductNameWithoutVersion()
		{
			return null;
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x15331FC", Offset = "0x15331FC", VA = "0x15331FC")]
		public static string GetProductNameWithoutVersionAndSpecialCharacters()
		{
			return null;
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1536E74", Offset = "0x1536E74", VA = "0x1536E74")]
		public static string GetAppVersion()
		{
			return null;
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1536E7C", Offset = "0x1536E7C", VA = "0x1536E7C")]
		public static int GetAppVersionInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x152E494", Offset = "0x152E494", VA = "0x152E494")]
		public static string GetHeadsetSerial()
		{
			return null;
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1536FC0", Offset = "0x1536FC0", VA = "0x1536FC0")]
		public ApplicationUtil()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public static class ExternalProcess
	{
		[Token(Token = "0x200053D")]
		[Flags]
		private enum ProcessAccessRights : uint
		{
			[Token(Token = "0x4001EE4")]
			PROCESS_CREATE_PROCESS = 0x80u,
			[Token(Token = "0x4001EE5")]
			PROCESS_CREATE_THREAD = 2u,
			[Token(Token = "0x4001EE6")]
			PROCESS_DUP_HANDLE = 0x40u,
			[Token(Token = "0x4001EE7")]
			PROCESS_QUERY_INFORMATION = 0x400u,
			[Token(Token = "0x4001EE8")]
			PROCESS_QUERY_LIMITED_INFORMATION = 0x1000u,
			[Token(Token = "0x4001EE9")]
			PROCESS_SET_INFORMATION = 0x200u,
			[Token(Token = "0x4001EEA")]
			PROCESS_SET_QUOTA = 0x100u,
			[Token(Token = "0x4001EEB")]
			PROCESS_SUSPEND_RESUME = 0x800u,
			[Token(Token = "0x4001EEC")]
			PROCESS_TERMINATE = 1u,
			[Token(Token = "0x4001EED")]
			PROCESS_VM_OPERATION = 8u,
			[Token(Token = "0x4001EEE")]
			PROCESS_VM_READ = 0x10u,
			[Token(Token = "0x4001EEF")]
			PROCESS_VM_WRITE = 0x20u,
			[Token(Token = "0x4001EF0")]
			DELETE = 0x10000u,
			[Token(Token = "0x4001EF1")]
			READ_CONTROL = 0x20000u,
			[Token(Token = "0x4001EF2")]
			SYNCHRONIZE = 0x100000u,
			[Token(Token = "0x4001EF3")]
			WRITE_DAC = 0x40000u,
			[Token(Token = "0x4001EF4")]
			WRITE_OWNER = 0x80000u,
			[Token(Token = "0x4001EF5")]
			STANDARD_RIGHTS_REQUIRED = 0xF0000u,
			[Token(Token = "0x4001EF6")]
			PROCESS_ALL_ACCESS = 0x1F0FFFu
		}

		[Token(Token = "0x200053E")]
		private struct PROCESS_INFORMATION
		{
			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal IntPtr hProcess;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal IntPtr hThread;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal uint dwProcessId;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal uint dwThreadId;
		}

		[Token(Token = "0x200053F")]
		private struct STARTUPINFO
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal uint cb;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal IntPtr lpReserved;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal IntPtr lpDesktop;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal IntPtr lpTitle;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal uint dwX;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal uint dwY;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal uint dwXSize;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal uint dwYSize;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal uint dwXCountChars;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal uint dwYCountChars;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal uint dwFillAttribute;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal uint dwFlags;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal ushort wShowWindow;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			internal ushort cbReserved2;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal IntPtr lpReserved2;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal IntPtr hStdInput;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal IntPtr hStdOutput;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal IntPtr hStdError;
		}

		[Token(Token = "0x2000540")]
		[Flags]
		private enum ProcessCreationFlags : uint
		{
			[Token(Token = "0x4001F0E")]
			NONE = 0u,
			[Token(Token = "0x4001F0F")]
			CREATE_BREAKAWAY_FROM_JOB = 0x1000000u,
			[Token(Token = "0x4001F10")]
			CREATE_DEFAULT_ERROR_MODE = 0x4000000u,
			[Token(Token = "0x4001F11")]
			CREATE_NEW_CONSOLE = 0x10u,
			[Token(Token = "0x4001F12")]
			CREATE_NEW_PROCESS_GROUP = 0x200u,
			[Token(Token = "0x4001F13")]
			CREATE_NO_WINDOW = 0x8000000u,
			[Token(Token = "0x4001F14")]
			CREATE_PROTECTED_PROCESS = 0x40000u,
			[Token(Token = "0x4001F15")]
			CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x2000000u,
			[Token(Token = "0x4001F16")]
			CREATE_SECURE_PROCESS = 0x400000u,
			[Token(Token = "0x4001F17")]
			CREATE_SEPARATE_WOW_VDM = 0x800u,
			[Token(Token = "0x4001F18")]
			CREATE_SHARED_WOW_VDM = 0x1000u,
			[Token(Token = "0x4001F19")]
			CREATE_SUSPENDED = 4u,
			[Token(Token = "0x4001F1A")]
			CREATE_UNICODE_ENVIRONMENT = 0x400u,
			[Token(Token = "0x4001F1B")]
			DEBUG_ONLY_THIS_PROCESS = 2u,
			[Token(Token = "0x4001F1C")]
			DEBUG_PROCESS = 1u,
			[Token(Token = "0x4001F1D")]
			DETACHED_PROCESS = 8u,
			[Token(Token = "0x4001F1E")]
			EXTENDED_STARTUPINFO_PRESENT = 0x80000u,
			[Token(Token = "0x4001F1F")]
			INHERIT_PARENT_AFFINITY = 0x10000u
		}

		[PreserveSig]
		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1536FC8", Offset = "0x1536FC8", VA = "0x1536FC8")]
		private static extern bool CreateProcessW(string lpApplicationName, [In] string lpCommandLine, IntPtr procSecAttrs, IntPtr threadSecAttrs, bool bInheritHandles, ProcessCreationFlags dwCreationFlags, IntPtr lpEnvironment, string lpCurrentDirectory, ref STARTUPINFO lpStartupInfo, ref PROCESS_INFORMATION lpProcessInformation);

		[PreserveSig]
		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x15370D4", Offset = "0x15370D4", VA = "0x15370D4")]
		private static extern bool CloseHandle(IntPtr hObject);

		[PreserveSig]
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1537164", Offset = "0x1537164", VA = "0x1537164")]
		private static extern bool TerminateProcess(IntPtr processHandle, uint exitCode);

		[PreserveSig]
		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1537200", Offset = "0x1537200", VA = "0x1537200")]
		private static extern IntPtr OpenProcess(ProcessAccessRights access, bool inherit, uint processId);

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x15372A0", Offset = "0x15372A0", VA = "0x15372A0")]
		public static uint Start(string path, string dir, bool hidden = false)
		{
			return default(uint);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x15373E8", Offset = "0x15373E8", VA = "0x15373E8")]
		public static int KillProcess(uint pid)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000541")]
	public class LayersUtils
	{
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x153759C", Offset = "0x153759C", VA = "0x153759C")]
		public static void SetLayerRecursively(GameObject obj, int newLayer)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x153763C", Offset = "0x153763C", VA = "0x153763C")]
		public static int LayermaskToLayer(LayerMask layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x153768C", Offset = "0x153768C", VA = "0x153768C")]
		public static void RemoveLayer(GameObject obj, int layer)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1537860", Offset = "0x1537860", VA = "0x1537860")]
		public static void RemoveLayerInCullingMask(Camera cam, int layer)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x15378A4", Offset = "0x15378A4", VA = "0x15378A4")]
		public LayersUtils()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class Animation
	{
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1536D20", Offset = "0x1536D20", VA = "0x1536D20")]
		public static bool AnimatorIsPlaying(Animator animator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1536DCC", Offset = "0x1536DCC", VA = "0x1536DCC")]
		public Animation()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class GameObjects
	{
		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x15374A8", Offset = "0x15374A8", VA = "0x15374A8")]
		public static GameObject FindObjectInGrandChildren(GameObject origin, string nameSearched)
		{
			return null;
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1537594", Offset = "0x1537594", VA = "0x1537594")]
		public GameObjects()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class Network
	{
		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x15378AC", Offset = "0x15378AC", VA = "0x15378AC")]
		public static string GetLocalIPAddress()
		{
			return null;
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1537994", Offset = "0x1537994", VA = "0x1537994")]
		private static string GetHtmlFromUri(string resource)
		{
			return null;
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1537E3C", Offset = "0x1537E3C", VA = "0x1537E3C")]
		public static bool CheckInternet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1537ED0", Offset = "0x1537ED0", VA = "0x1537ED0")]
		public Network()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class UI
	{
		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x15381A0", Offset = "0x15381A0", VA = "0x15381A0")]
		public static Vector2 GetScrollRectSnapToPosition(ScrollRect instance, RectTransform child)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x15382AC", Offset = "0x15382AC", VA = "0x15382AC")]
		public UI()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class Time
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1537ED8", Offset = "0x1537ED8", VA = "0x1537ED8")]
		public static string SecondsToString(float time, bool withMs = false)
		{
			return null;
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1538050", Offset = "0x1538050", VA = "0x1538050")]
		public static string CurrentTimeToString(bool withMs = false)
		{
			return null;
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x1538198", Offset = "0x1538198", VA = "0x1538198")]
		public Time()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public enum NavigationType
	{
		[Token(Token = "0x4001F21")]
		STAND,
		[Token(Token = "0x4001F22")]
		SEAT,
		[Token(Token = "0x4001F23")]
		ROOM
	}
}
namespace VoxelArena.ManagementNetwork
{
	[Token(Token = "0x2000548")]
	public class NetworkData
	{
		[Token(Token = "0x2000549")]
		public enum MessageType
		{
			[Token(Token = "0x4001F25")]
			LoadGame,
			[Token(Token = "0x4001F26")]
			CurrentGame,
			[Token(Token = "0x4001F27")]
			HeadSet,
			[Token(Token = "0x4001F28")]
			Ping,
			[Token(Token = "0x4001F29")]
			HeadsetIdentification
		}

		[Serializable]
		[Token(Token = "0x200054A")]
		public struct IdentifyHeadsetData : NetworkMessage
		{
			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string serial;
		}

		[Serializable]
		[Token(Token = "0x200054B")]
		public struct LoadGameData : NetworkMessage
		{
			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string gameDesktop;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string game;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string serial;
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		public struct CurrentGameData : NetworkMessage
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string serial;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string game;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string version;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isDesktop;
		}

		[Serializable]
		[Token(Token = "0x200054D")]
		public struct HeadSetData : NetworkMessage
		{
			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int playerId;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int headsetBattPercent;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string headsetBattStatus;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int volume;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int lCtrlBattPercent;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int rCtrlBattPercent;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isLCtrlPresent;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool isRCtrlPresent;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string os;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool detectsUser;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string hostName;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string serial;
		}

		[Token(Token = "0x200054E")]
		public struct PingData : NetworkMessage
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string serial;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float time;
		}

		[Token(Token = "0x6001FE8")]
		public static byte[] getBytesFromData<T>(T str)
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		public static void GetDataFromBytes<T>(byte[] arr, ref T str)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1212150", Offset = "0x1212150", VA = "0x1212150")]
		public NetworkData()
		{
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x2000555")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x11D7DE4", Offset = "0x11D7DE4", VA = "0x11D7DE4")]
		public static ErrorMessage _Read_Mirror.ErrorMessage(NetworkReader reader)
		{
			return default(ErrorMessage);
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x11D7E54", Offset = "0x11D7E54", VA = "0x11D7E54")]
		public static void _Write_Mirror.ErrorMessage(NetworkWriter writer, ErrorMessage value)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x11D7ECC", Offset = "0x11D7ECC", VA = "0x11D7ECC")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x11D7ED4", Offset = "0x11D7ED4", VA = "0x11D7ED4")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x11D7ED8", Offset = "0x11D7ED8", VA = "0x11D7ED8")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x11D7EE0", Offset = "0x11D7EE0", VA = "0x11D7EE0")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x11D7EE4", Offset = "0x11D7EE4", VA = "0x11D7EE4")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x11D7EEC", Offset = "0x11D7EEC", VA = "0x11D7EEC")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x11D7EF0", Offset = "0x11D7EF0", VA = "0x11D7EF0")]
		public static DisconnectMessage _Read_Mirror.DisconnectMessage(NetworkReader reader)
		{
			return default(DisconnectMessage);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x11D7EF8", Offset = "0x11D7EF8", VA = "0x11D7EF8")]
		public static void _Write_Mirror.DisconnectMessage(NetworkWriter writer, DisconnectMessage value)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x11D7EFC", Offset = "0x11D7EFC", VA = "0x11D7EFC")]
		public static ConnectMessage _Read_Mirror.ConnectMessage(NetworkReader reader)
		{
			return default(ConnectMessage);
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x11D7F04", Offset = "0x11D7F04", VA = "0x11D7F04")]
		public static void _Write_Mirror.ConnectMessage(NetworkWriter writer, ConnectMessage value)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x11D7F08", Offset = "0x11D7F08", VA = "0x11D7F08")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x11D7FA8", Offset = "0x11D7FA8", VA = "0x11D7FA8")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x11D8010", Offset = "0x11D8010", VA = "0x11D8010")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x11D80AC", Offset = "0x11D80AC", VA = "0x11D80AC")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x11D8124", Offset = "0x11D8124", VA = "0x11D8124")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x11D81E0", Offset = "0x11D81E0", VA = "0x11D81E0")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x11D828C", Offset = "0x11D828C", VA = "0x11D828C")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x11D8348", Offset = "0x11D8348", VA = "0x11D8348")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x11D83F4", Offset = "0x11D83F4", VA = "0x11D83F4")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x11D857C", Offset = "0x11D857C", VA = "0x11D857C")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x11D8694", Offset = "0x11D8694", VA = "0x11D8694")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x11D869C", Offset = "0x11D869C", VA = "0x11D869C")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x11D86A0", Offset = "0x11D86A0", VA = "0x11D86A0")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x11D86A8", Offset = "0x11D86A8", VA = "0x11D86A8")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x11D86AC", Offset = "0x11D86AC", VA = "0x11D86AC")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x11D871C", Offset = "0x11D871C", VA = "0x11D871C")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x11D8794", Offset = "0x11D8794", VA = "0x11D8794")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x11D8804", Offset = "0x11D8804", VA = "0x11D8804")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x11D887C", Offset = "0x11D887C", VA = "0x11D887C")]
		public static UpdateVarsMessage _Read_Mirror.UpdateVarsMessage(NetworkReader reader)
		{
			return default(UpdateVarsMessage);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x11D890C", Offset = "0x11D890C", VA = "0x11D890C")]
		public static void _Write_Mirror.UpdateVarsMessage(NetworkWriter writer, UpdateVarsMessage value)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x11D8998", Offset = "0x11D8998", VA = "0x11D8998")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x11D8A00", Offset = "0x11D8A00", VA = "0x11D8A00")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x11D8A78", Offset = "0x11D8A78", VA = "0x11D8A78")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x11D8B04", Offset = "0x11D8B04", VA = "0x11D8B04")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x11D8B90", Offset = "0x11D8B90", VA = "0x11D8B90")]
		public static NetworkData.IdentifyHeadsetData _Read_VoxelArena.ManagementNetwork.NetworkData/IdentifyHeadsetData(NetworkReader reader)
		{
			return default(NetworkData.IdentifyHeadsetData);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x11D8BF8", Offset = "0x11D8BF8", VA = "0x11D8BF8")]
		public static void _Write_VoxelArena.ManagementNetwork.NetworkData/IdentifyHeadsetData(NetworkWriter writer, NetworkData.IdentifyHeadsetData value)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x11D8C70", Offset = "0x11D8C70", VA = "0x11D8C70")]
		public static NetworkData.LoadGameData _Read_VoxelArena.ManagementNetwork.NetworkData/LoadGameData(NetworkReader reader)
		{
			return default(NetworkData.LoadGameData);
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x11D8D10", Offset = "0x11D8D10", VA = "0x11D8D10")]
		public static void _Write_VoxelArena.ManagementNetwork.NetworkData/LoadGameData(NetworkWriter writer, NetworkData.LoadGameData value)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x11D8DAC", Offset = "0x11D8DAC", VA = "0x11D8DAC")]
		public static NetworkData.CurrentGameData _Read_VoxelArena.ManagementNetwork.NetworkData/CurrentGameData(NetworkReader reader)
		{
			return default(NetworkData.CurrentGameData);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x11D8E90", Offset = "0x11D8E90", VA = "0x11D8E90")]
		public static void _Write_VoxelArena.ManagementNetwork.NetworkData/CurrentGameData(NetworkWriter writer, NetworkData.CurrentGameData value)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x11D8F44", Offset = "0x11D8F44", VA = "0x11D8F44")]
		public static NetworkData.HeadSetData _Read_VoxelArena.ManagementNetwork.NetworkData/HeadSetData(NetworkReader reader)
		{
			return default(NetworkData.HeadSetData);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x11D90E4", Offset = "0x11D90E4", VA = "0x11D90E4")]
		public static void _Write_VoxelArena.ManagementNetwork.NetworkData/HeadSetData(NetworkWriter writer, NetworkData.HeadSetData value)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x11D9228", Offset = "0x11D9228", VA = "0x11D9228")]
		public static NetworkData.PingData _Read_VoxelArena.ManagementNetwork.NetworkData/PingData(NetworkReader reader)
		{
			return default(NetworkData.PingData);
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x11D92AC", Offset = "0x11D92AC", VA = "0x11D92AC")]
		public static void _Write_VoxelArena.ManagementNetwork.NetworkData/PingData(NetworkWriter writer, NetworkData.PingData value)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x11D9338", Offset = "0x11D9338", VA = "0x11D9338")]
		public static NetworkVariable _Read_NetworkVariable(NetworkReader reader)
		{
			return default(NetworkVariable);
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x11D9414", Offset = "0x11D9414", VA = "0x11D9414")]
		public static void _Write_NetworkVariable(NetworkWriter writer, NetworkVariable value)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x11D94C8", Offset = "0x11D94C8", VA = "0x11D94C8")]
		public static void _Write_UnityEngine.KeyCode(NetworkWriter writer, KeyCode value)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x11D9540", Offset = "0x11D9540", VA = "0x11D9540")]
		public static KeyCode _Read_UnityEngine.KeyCode(NetworkReader reader)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x11D95A8", Offset = "0x11D95A8", VA = "0x11D95A8")]
		public static void _Write_RandomizeClient/VoiceType(NetworkWriter writer, RandomizeClient.VoiceType value)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x11D9620", Offset = "0x11D9620", VA = "0x11D9620")]
		public static RandomizeClient.VoiceType _Read_RandomizeClient/VoiceType(NetworkReader reader)
		{
			return default(RandomizeClient.VoiceType);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x11D9688", Offset = "0x11D9688", VA = "0x11D9688")]
		public static void _Write_Client/State(NetworkWriter writer, Client.State value)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x11D9700", Offset = "0x11D9700", VA = "0x11D9700")]
		public static Client.State _Read_Client/State(NetworkReader reader)
		{
			return default(Client.State);
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x11D9768", Offset = "0x11D9768", VA = "0x11D9768")]
		public static void _Write_OvenDoor/State(NetworkWriter writer, OvenDoor.State value)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x11D97E0", Offset = "0x11D97E0", VA = "0x11D97E0")]
		public static OvenDoor.State _Read_OvenDoor/State(NetworkReader reader)
		{
			return default(OvenDoor.State);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x11D9848", Offset = "0x11D9848", VA = "0x11D9848")]
		public static void _Write_PasteDispenser/State(NetworkWriter writer, PasteDispenser.State value)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x11D98C0", Offset = "0x11D98C0", VA = "0x11D98C0")]
		public static PasteDispenser.State _Read_PasteDispenser/State(NetworkReader reader)
		{
			return default(PasteDispenser.State);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x11D9928", Offset = "0x11D9928", VA = "0x11D9928")]
		public static void _Write_CookManager/GameState(NetworkWriter writer, CookManager.GameState value)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x11D99A0", Offset = "0x11D99A0", VA = "0x11D99A0")]
		public static CookManager.GameState _Read_CookManager/GameState(NetworkReader reader)
		{
			return default(CookManager.GameState);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x11D9A08", Offset = "0x11D9A08", VA = "0x11D9A08")]
		public static MultiplayerInfoDisplay.PlayerInfo _Read_MultiplayerInfoDisplay/PlayerInfo(NetworkReader reader)
		{
			return default(MultiplayerInfoDisplay.PlayerInfo);
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x11D9ACC", Offset = "0x11D9ACC", VA = "0x11D9ACC")]
		public static void _Write_MultiplayerInfoDisplay/PlayerInfo(NetworkWriter writer, MultiplayerInfoDisplay.PlayerInfo value)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x11D9B7C", Offset = "0x11D9B7C", VA = "0x11D9B7C")]
		public static void _Write_VoxelArena.HeadsetType(NetworkWriter writer, HeadsetType value)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x11D9BF4", Offset = "0x11D9BF4", VA = "0x11D9BF4")]
		public static HeadsetType _Read_VoxelArena.HeadsetType(NetworkReader reader)
		{
			return default(HeadsetType);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x11D9C5C", Offset = "0x11D9C5C", VA = "0x11D9C5C")]
		public static void _Write_FoodBox/DoorAction(NetworkWriter writer, FoodBox.DoorAction value)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x11D9CD4", Offset = "0x11D9CD4", VA = "0x11D9CD4")]
		public static FoodBox.DoorAction _Read_FoodBox/DoorAction(NetworkReader reader)
		{
			return default(FoodBox.DoorAction);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x11D9D3C", Offset = "0x11D9D3C", VA = "0x11D9D3C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xF3F488", Offset = "0xF3F488")]
		public static void InitReadWriters()
		{
		}
	}
}
