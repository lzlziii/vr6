using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using CSCore.DSP;
using Google.Apis.Auth.OAuth2;
using Google.Apis.Auth.OAuth2.Requests;
using Google.Apis.Auth.OAuth2.Responses;
using Google.Apis.Download;
using Google.Apis.Drive.v3;
using Google.Apis.Drive.v3.Data;
using Google.Apis.PeopleService.v1.Data;
using Google.Apis.Upload;
using Google.Apis.Util.Store;
using ICSharpCode.SharpZipLib.Zip;
using Il2CppDummyDll;
using Ionic.Zip;
using JetBrains.Annotations;
using MIConvexHull;
using Microsoft.CodeAnalysis;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using ODS;
using Reaktion;
using TMPro;
using TiltBrush;
using TiltBrushToolkit;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Layouts;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000004")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0x16B3EAC", Offset = "0x16B3EAC", VA = "0x16B3EAC")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsUnmanagedAttribute : Attribute
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x16B3EB4", Offset = "0x16B3EB4", VA = "0x16B3EB4")]
		public IsUnmanagedAttribute()
		{
		}
	}
}
[Token(Token = "0x2000006")]
public class ApiMainThreadObserver : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	public enum StatusTypes
	{
		[Token(Token = "0x400000C")]
		Dormant,
		[Token(Token = "0x400000D")]
		Requested,
		[Token(Token = "0x400000E")]
		Ready
	}

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ApiMainThreadObserver m_Instance;

	[NonSerialized]
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StatusTypes m_Status;

	[NonSerialized]
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 SpectatorCamPosition;

	[NonSerialized]
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 SpectatorCamTargetPosition;

	[NonSerialized]
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion SpectatorCamRotation;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform SpectatorCamTarget;

	[Token(Token = "0x17000005")]
	public static ApiMainThreadObserver Instance
	{
		[Token(Token = "0x6000010")]
		[Address(RVA = "0x16B3F08", Offset = "0x16B3F08", VA = "0x16B3F08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x16B3EBC", Offset = "0x16B3EBC", VA = "0x16B3EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x16B3F50", Offset = "0x16B3F50", VA = "0x16B3F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x16B4008", Offset = "0x16B4008", VA = "0x16B4008")]
	public ApiMainThreadObserver()
	{
	}
}
[Token(Token = "0x2000008")]
public class BakedMeshOutline : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float m_OffsetOverride;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x16B4010", Offset = "0x16B4010", VA = "0x16B4010")]
	public void Bake(Color baseMeshColor, Color outlineColor, float offset)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x16B45A8", Offset = "0x16B45A8", VA = "0x16B45A8")]
	public BakedMeshOutline()
	{
	}
}
[Token(Token = "0x2000009")]
public class ProfileDisplay : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text m_Fps;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text m_FrameTime;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Smoothing;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_SmothedFrameTime;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, int> m_histBuckets;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_histTotal;

	[Token(Token = "0x17000006")]
	public static ProfileDisplay Instance
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0x16B45B8", Offset = "0x16B45B8", VA = "0x16B45B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000016")]
		[Address(RVA = "0x16B4600", Offset = "0x16B4600", VA = "0x16B4600")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x16B464C", Offset = "0x16B464C", VA = "0x16B464C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x16B4698", Offset = "0x16B4698", VA = "0x16B4698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x16B471C", Offset = "0x16B471C", VA = "0x16B471C")]
	private string BuildHistogram()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x16B4CEC", Offset = "0x16B4CEC", VA = "0x16B4CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x16B52F8", Offset = "0x16B52F8", VA = "0x16B52F8")]
	public ProfileDisplay()
	{
	}
}
[Token(Token = "0x200000B")]
[DisplayStringFormat("{padButton}+{axisToModify}")]
public class VivePadButtonComposite : InputBindingComposite<float>
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[InputControl(layout = "Button")]
	public int padButton;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[InputControl(layout = "Axis")]
	public int axisToModify;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x16B53C0", Offset = "0x16B53C0", VA = "0x16B53C0", Slot = "10")]
	public override float ReadValue(ref InputBindingCompositeContext context)
	{
		return default(float);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x16B5478", Offset = "0x16B5478", VA = "0x16B5478", Slot = "8")]
	public override float EvaluateMagnitude(ref InputBindingCompositeContext context)
	{
		return default(float);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x16B5460", Offset = "0x16B5460", VA = "0x16B5460")]
	private bool isWithinRange(float value, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x16B5484", Offset = "0x16B5484", VA = "0x16B5484")]
	static VivePadButtonComposite()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x16B5500", Offset = "0x16B5500", VA = "0x16B5500")]
	[RuntimeInitializeOnLoadMethod]
	private static void Init()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x16B5504", Offset = "0x16B5504", VA = "0x16B5504")]
	public VivePadButtonComposite()
	{
	}
}
[Token(Token = "0x200000C")]
[DisplayStringFormat("{axis}")]
public class PicoFakeTouchStickComposite : InputBindingComposite<float>
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[InputControl(layout = "Vector2")]
	public int axis;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x16B554C", Offset = "0x16B554C", VA = "0x16B554C", Slot = "10")]
	public override float ReadValue(ref InputBindingCompositeContext context)
	{
		return default(float);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x16B561C", Offset = "0x16B561C", VA = "0x16B561C", Slot = "8")]
	public override float EvaluateMagnitude(ref InputBindingCompositeContext context)
	{
		return default(float);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x16B5628", Offset = "0x16B5628", VA = "0x16B5628")]
	static PicoFakeTouchStickComposite()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x16B56A4", Offset = "0x16B56A4", VA = "0x16B56A4")]
	[RuntimeInitializeOnLoadMethod]
	private static void Init()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x16B56A8", Offset = "0x16B56A8", VA = "0x16B56A8")]
	public PicoFakeTouchStickComposite()
	{
	}
}
[Token(Token = "0x200000D")]
public class MobileBloom : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader m_bloomShader;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_xMult;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_yMult;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_xOff;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_yOff;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve m_BackgroundBrightnessToBloom;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_AlwaysOn;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_OverrideDividors;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[] m_bloomMaterial;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Pose m_PreviousPose;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int m_width;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_height;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_xOffset;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int m_yOffset;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[] m_dividors;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RenderTexture[] m_savedBloom;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CommandBuffer[] m_MakeBloom;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CommandBuffer[] m_DisplayBloom;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_Eye;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Camera m_Camera;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_BloomAmount;

	[Token(Token = "0x17000007")]
	public float BloomAmount
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x16B56F0", Offset = "0x16B56F0", VA = "0x16B56F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x16B56F8", Offset = "0x16B56F8", VA = "0x16B56F8")]
		set
		{
		}
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x16B5700", Offset = "0x16B5700", VA = "0x16B5700")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x16B5920", Offset = "0x16B5920", VA = "0x16B5920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x16B5A50", Offset = "0x16B5A50", VA = "0x16B5A50")]
	private void InitializeBloom(int qualityLevel)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x16B6C28", Offset = "0x16B6C28", VA = "0x16B6C28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x16B6D64", Offset = "0x16B6D64", VA = "0x16B6D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x16B5F70", Offset = "0x16B5F70", VA = "0x16B5F70")]
	private CommandBuffer CreateBloom(int eye)
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x16B67F8", Offset = "0x16B67F8", VA = "0x16B67F8")]
	private CommandBuffer DisplayBloom(int eye)
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x16B73CC", Offset = "0x16B73CC", VA = "0x16B73CC")]
	public MobileBloom()
	{
	}
}
[Token(Token = "0x200000F")]
[CreateAssetMenu(fileName = "Secrets", menuName = "Secrets Config")]
public class SecretsConfig : ScriptableObject
{
	[Token(Token = "0x2000010")]
	public enum Service
	{
		[Token(Token = "0x4000037")]
		Google,
		[Token(Token = "0x4000038")]
		Sketchfab,
		[Token(Token = "0x4000039")]
		Oculus,
		[Token(Token = "0x400003A")]
		OculusMobile,
		[Token(Token = "0x400003B")]
		Pimax
	}

	[Serializable]
	[Token(Token = "0x2000011")]
	public class ServiceAuthData
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Service Service;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ApiKey;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ClientId;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ClientSecret;

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x16B75D4", Offset = "0x16B75D4", VA = "0x16B75D4")]
		public ServiceAuthData()
		{
		}
	}

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ServiceAuthData[] Secrets;

	[Token(Token = "0x17000008")]
	public ServiceAuthData this[Service service]
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x16B74EC", Offset = "0x16B74EC", VA = "0x16B74EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x16B75CC", Offset = "0x16B75CC", VA = "0x16B75CC")]
	public SecretsConfig()
	{
	}
}
[Token(Token = "0x2000013")]
public class SimpleRotationScript : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_Speed;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x16B7600", Offset = "0x16B7600", VA = "0x16B7600")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x16B7698", Offset = "0x16B7698", VA = "0x16B7698")]
	public SimpleRotationScript()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class SnapGrid3D : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public static class ShaderParam
	{
		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Color;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int Pointer;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int CanvasOrigin;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int GridCount;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int GridInterval;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int LineWidth;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int LineLength;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int CanvasToWorldMatrix;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int WorldToCanvasMatrix;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int CanvasScale;
	}

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3Int gridCount;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gridInterval;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lineLength;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lineWidth;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform toolTransform;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform canvasTransform;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x16B76A0", Offset = "0x16B76A0", VA = "0x16B76A0")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x16B7B04", Offset = "0x16B7B04", VA = "0x16B7B04")]
	public SnapGrid3D()
	{
	}
}
[Token(Token = "0x2000016")]
internal static class AndroidUtils
{
	[Token(Token = "0x6000040")]
	[Address(RVA = "0x16B7DA0", Offset = "0x16B7DA0", VA = "0x16B7DA0")]
	public static AndroidJavaObject GetContext()
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x16B7E64", Offset = "0x16B7E64", VA = "0x16B7E64")]
	public static int GetVersionCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x16B80FC", Offset = "0x16B80FC", VA = "0x16B80FC")]
	public static string GetVersionName()
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x16B83A8", Offset = "0x16B83A8", VA = "0x16B83A8")]
	public static string GetPackageName()
	{
		return null;
	}
}
[Token(Token = "0x2000017")]
public class BoundsDouble
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double[] min;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double[] max;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inited;

	[Token(Token = "0x17000009")]
	public bool Empty
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x16B8E60", Offset = "0x16B8E60", VA = "0x16B8E60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public double[] Min
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x16B8E70", Offset = "0x16B8E70", VA = "0x16B8E70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public double[] Max
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x16B8E78", Offset = "0x16B8E78", VA = "0x16B8E78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x16B84A8", Offset = "0x16B84A8", VA = "0x16B84A8")]
	public BoundsDouble()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x16B8510", Offset = "0x16B8510", VA = "0x16B8510")]
	public BoundsDouble(BoundsDouble b)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x16B8610", Offset = "0x16B8610", VA = "0x16B8610")]
	public BoundsDouble(double[] min, double[] max)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x16B8744", Offset = "0x16B8744", VA = "0x16B8744")]
	public BoundsDouble(Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x16B8860", Offset = "0x16B8860", VA = "0x16B8860")]
	public void Encapsulate(BoundsDouble b)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x16B8B2C", Offset = "0x16B8B2C", VA = "0x16B8B2C")]
	public void Rotate(Matrix4x4 m)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x16B8DBC", Offset = "0x16B8DBC", VA = "0x16B8DBC")]
	public void Translate(double x, double y, double z)
	{
	}
}
[Token(Token = "0x2000018")]
public sealed class GlTF_Accessor : GlTF_ReferencedObject
{
	[Token(Token = "0x2000019")]
	public enum Type
	{
		[Token(Token = "0x4000065")]
		SCALAR,
		[Token(Token = "0x4000066")]
		VEC2,
		[Token(Token = "0x4000067")]
		VEC3,
		[Token(Token = "0x4000068")]
		VEC4
	}

	[Token(Token = "0x200001A")]
	public enum ComponentType
	{
		[Token(Token = "0x400006A")]
		BYTE = 5120,
		[Token(Token = "0x400006B")]
		UNSIGNED_BYTE = 5121,
		[Token(Token = "0x400006C")]
		SHORT = 5122,
		[Token(Token = "0x400006D")]
		USHORT = 5123,
		[Token(Token = "0x400006E")]
		UNSIGNED_INT = 5125,
		[Token(Token = "0x400006F")]
		FLOAT = 5126
	}

	[Token(Token = "0x200001C")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__46 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Accessor <>4__this;

		[Token(Token = "0x17000013")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000071")]
			[Address(RVA = "0x16BB808", Offset = "0x16BB808", VA = "0x16BB808", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0x16BB850", Offset = "0x16BB850", VA = "0x16BB850", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x16BAB2C", Offset = "0x16BAB2C", VA = "0x16BAB2C")]
		[DebuggerHidden]
		public <IterReferences>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x16BB644", Offset = "0x16BB644", VA = "0x16BB644", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x16BB648", Offset = "0x16BB648", VA = "0x16BB648", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x16BB810", Offset = "0x16BB810", VA = "0x16BB810", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x16BB858", Offset = "0x16BB858", VA = "0x16BB858", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x16BB8FC", Offset = "0x16BB8FC", VA = "0x16BB8FC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly GlTF_BufferView bufferView;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int byteStride;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public readonly Type type;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly ComponentType componentType;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly bool m_normalized;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int? count;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private long? byteOffset;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_haveMinMax;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector4 maxFloat;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector4 minFloat;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int minInt;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int maxInt;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GlTF_Accessor m_clonedFrom;

	[Token(Token = "0x1700000C")]
	private GlTF_Accessor Ancestor
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x16B92AC", Offset = "0x16B92AC", VA = "0x16B92AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public int Count
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x16B92C0", Offset = "0x16B92C0", VA = "0x16B92C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000E")]
	public long ByteOffset
	{
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x16B931C", Offset = "0x16B931C", VA = "0x16B931C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector4 MaxFloat
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x16B9378", Offset = "0x16B9378", VA = "0x16B9378")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000010")]
	public Vector4 MinFloat
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x16B93A0", Offset = "0x16B93A0", VA = "0x16B93A0")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000011")]
	public int MinInt
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x16B93C8", Offset = "0x16B93C8", VA = "0x16B93C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000012")]
	public int MaxInt
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x16B93EC", Offset = "0x16B93EC", VA = "0x16B93EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x16B8E80", Offset = "0x16B8E80", VA = "0x16B8E80")]
	private static int GetSize(ComponentType t)
	{
		return default(int);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x16B8F34", Offset = "0x16B8F34", VA = "0x16B8F34")]
	private static int GetNumComponents(Type t)
	{
		return default(int);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x16B8FC4", Offset = "0x16B8FC4", VA = "0x16B8FC4")]
	public static Type GetTypeForNumComponents(int size)
	{
		return default(Type);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x16B9058", Offset = "0x16B9058", VA = "0x16B9058")]
	public static GlTF_Accessor CloneWithDifferentType(GlTF_Globals G, GlTF_Accessor fromAccessor, Type newType)
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x16B9158", Offset = "0x16B9158", VA = "0x16B9158")]
	private GlTF_Accessor(GlTF_Globals G, GlTF_Accessor fromAccessor, Type newType)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x16B94D8", Offset = "0x16B94D8", VA = "0x16B94D8")]
	public GlTF_Accessor(GlTF_Globals globals, string n, Type t, ComponentType c, GlTF_BufferView bufferView, bool isNonVertexAttributeAccessor, bool normalized)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x16B9418", Offset = "0x16B9418", VA = "0x16B9418")]
	private void SanityCheckBufferViewStride()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x16B95A0", Offset = "0x16B95A0", VA = "0x16B95A0")]
	public static string GetNameFromObject(ObjectName o, string name)
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x16B962C", Offset = "0x16B962C", VA = "0x16B962C")]
	private void InitMinMaxInt()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x16B9644", Offset = "0x16B9644", VA = "0x16B9644")]
	private void InitMinMaxFloat()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16B9664", Offset = "0x16B9664", VA = "0x16B9664")]
	private void RequireType(Type t, ComponentType c)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x16B982C", Offset = "0x16B982C", VA = "0x16B982C")]
	public void Populate(List<Color32> colorList)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x16B9A54", Offset = "0x16B9A54", VA = "0x16B9A54")]
	public void PopulateUshort(int[] vs)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x16B9CE0", Offset = "0x16B9CE0", VA = "0x16B9CE0")]
	public void Populate(List<Vector2> v2s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x16B9FB0", Offset = "0x16B9FB0", VA = "0x16B9FB0")]
	public void Populate(List<Vector3> v3s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x16BA294", Offset = "0x16BA294", VA = "0x16BA294")]
	public void Populate(List<Vector4> v4s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x16BA580", Offset = "0x16BA580", VA = "0x16BA580")]
	private void WriteNamedTypedValue(string name, int i, Vector4 fs)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x16BAAB4", Offset = "0x16BAAB4", VA = "0x16BAAB4", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__46))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x16BAB60", Offset = "0x16BAB60", VA = "0x16BAB60", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200001D")]
public class GlTF_AmbientLight : GlTF_Light
{
	[Token(Token = "0x6000076")]
	[Address(RVA = "0x16BB900", Offset = "0x16BB900", VA = "0x16BB900")]
	public GlTF_AmbientLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x16BB910", Offset = "0x16BB910", VA = "0x16BB910", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x200001E")]
public sealed class GlTF_AnimSampler : GlTF_Writer
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string input;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string interpolation;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string output;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x16BBBCC", Offset = "0x16BBBCC", VA = "0x16BBBCC")]
	public GlTF_AnimSampler(GlTF_Globals globals, string n, string o)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x16BBC88", Offset = "0x16BBC88", VA = "0x16BBC88")]
	public void Write()
	{
	}
}
[Token(Token = "0x200001F")]
public sealed class GlTF_Attributes
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly GlTF_VertexLayout m_layout;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public readonly GlTF_Accessor normalAccessor;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public readonly GlTF_Accessor colorAccessor;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public readonly GlTF_Accessor tangentAccessor;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public readonly GlTF_Accessor positionAccessor;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public readonly GlTF_Accessor texCoord0Accessor;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public readonly GlTF_Accessor texCoord1Accessor;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public readonly GlTF_Accessor texCoord2Accessor;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public readonly GlTF_Accessor texCoord3Accessor;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly Dictionary<string, GlTF_Accessor> m_accessors;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x16BBEE4", Offset = "0x16BBEE4", VA = "0x16BBEE4")]
	public GlTF_Attributes(GlTF_Globals G, ObjectName meshName, GlTF_VertexLayout layout)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x16BC690", Offset = "0x16BC690", VA = "0x16BC690")]
	private void PopulateUv(int channel, GeometryPool pool, GlTF_Accessor accessor, GeometryPool.Semantic semantic)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x16BC9C4", Offset = "0x16BC9C4", VA = "0x16BC9C4")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x16BCAAC", Offset = "0x16BCAAC", VA = "0x16BCAAC")]
	public void WriteAsNamedJObject(GlTF_Globals G, string name)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x16BD11C", Offset = "0x16BD11C", VA = "0x16BD11C")]
	public IEnumerable<GlTF_ReferencedObject> IterReferences(GlTF_Globals G)
	{
		return null;
	}
}
[Token(Token = "0x2000024")]
public sealed class GlTF_Buffer : GlTF_ReferencedObject
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000015")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0x16BD7C4", Offset = "0x16BD7C4", VA = "0x16BD7C4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x16BD80C", Offset = "0x16BD80C", VA = "0x16BD80C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x16BD5D0", Offset = "0x16BD5D0", VA = "0x16BD5D0")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x16BD7A8", Offset = "0x16BD7A8", VA = "0x16BD7A8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0x16BD7AC", Offset = "0x16BD7AC", VA = "0x16BD7AC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x16BD7CC", Offset = "0x16BD7CC", VA = "0x16BD7CC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x16BD814", Offset = "0x16BD814", VA = "0x16BD814", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x16BD8AC", Offset = "0x16BD8AC", VA = "0x16BD8AC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_uri;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long? m_byteLength;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x16BD490", Offset = "0x16BD490", VA = "0x16BD490")]
	public GlTF_Buffer(GlTF_Globals globals, [CanBeNull] string uri)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x16BD560", Offset = "0x16BD560", VA = "0x16BD560", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__3))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x16BD604", Offset = "0x16BD604", VA = "0x16BD604", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000026")]
public sealed class GlTF_BufferView : GlTF_ReferencedObject, IDisposable
{
	[Token(Token = "0x2000028")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__20 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_BufferView <>4__this;

		[Token(Token = "0x17000018")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0x16BDFCC", Offset = "0x16BDFCC", VA = "0x16BDFCC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A4")]
			[Address(RVA = "0x16BE014", Offset = "0x16BE014", VA = "0x16BE014", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x16BDCD4", Offset = "0x16BDCD4", VA = "0x16BDCD4")]
		[DebuggerHidden]
		public <IterReferences>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x16BDF68", Offset = "0x16BDF68", VA = "0x16BDF68", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x16BDF6C", Offset = "0x16BDF6C", VA = "0x16BDF6C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x16BDFD4", Offset = "0x16BDFD4", VA = "0x16BDFD4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x16BE01C", Offset = "0x16BE01C", VA = "0x16BE01C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x16BE0C0", Offset = "0x16BE0C0", VA = "0x16BE0C0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000094")]
	public const int kTarget_ARRAY_BUFFER = 34962;

	[Token(Token = "0x4000095")]
	public const int kTarget_ELEMENT_ARRAY_BUFFER = 34963;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long byteLength;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long? byteOffset;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly int target;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Stream stream;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string streamFileName;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int? m_byteStride;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int? m_packedSize;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GlTF_Buffer m_buffer;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SketchBinaryWriter m_binaryWriter;

	[Token(Token = "0x17000017")]
	public long currentOffset
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x16BDA64", Offset = "0x16BDA64", VA = "0x16BDA64")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x16BD8B0", Offset = "0x16BD8B0", VA = "0x16BD8B0")]
	public static GlTF_BufferView Create(GlTF_Globals G, string name, int target = 34962)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x16BD99C", Offset = "0x16BD99C", VA = "0x16BD99C")]
	private GlTF_BufferView(GlTF_Globals globals, string n, int t)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x16BDA6C", Offset = "0x16BDA6C", VA = "0x16BDA6C")]
	public void EnableFileStream()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x16BDB70", Offset = "0x16BDB70", VA = "0x16BDB70", Slot = "6")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000097")]
	public void FastPopulate<T>(T[] data, int count) where T : struct
	{
	}

	[Token(Token = "0x6000098")]
	public void FastPopulate<T>(List<T> data) where T : struct
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x16B9BA0", Offset = "0x16B9BA0", VA = "0x16B9BA0")]
	public void PopulateUshort(int[] vs)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x16BDC5C", Offset = "0x16BDC5C", VA = "0x16BDC5C", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__20))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x16BDD08", Offset = "0x16BDD08", VA = "0x16BDD08", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000029")]
public abstract class GlTF_Camera : GlTF_ReferencedObject
{
	[Token(Token = "0x200002A")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__4 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x1700001A")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x16BE198", Offset = "0x16BE198", VA = "0x16BE198", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B0")]
			[Address(RVA = "0x16BE1E0", Offset = "0x16BE1E0", VA = "0x16BE1E0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x16BE148", Offset = "0x16BE148", VA = "0x16BE148")]
		[DebuggerHidden]
		public <IterReferences>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x16BE17C", Offset = "0x16BE17C", VA = "0x16BE17C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x16BE180", Offset = "0x16BE180", VA = "0x16BE180", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x16BE1A0", Offset = "0x16BE1A0", VA = "0x16BE1A0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x16BE1E8", Offset = "0x16BE1E8", VA = "0x16BE1E8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x16BE280", Offset = "0x16BE280", VA = "0x16BE280", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string type;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x16BE0C4", Offset = "0x16BE0C4", VA = "0x16BE0C4")]
	public GlTF_Camera(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x16BE0CC", Offset = "0x16BE0CC", VA = "0x16BE0CC", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x60000A9")]
	public abstract void WriteCamera();

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x16BE0D8", Offset = "0x16BE0D8", VA = "0x16BE0D8", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__4))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}
}
[Token(Token = "0x200002B")]
public sealed class GlTF_Channel : GlTF_Writer
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_AnimSampler sampler;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GlTF_Target target;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x16BE284", Offset = "0x16BE284", VA = "0x16BE284")]
	public GlTF_Channel(GlTF_Globals globals, string ch, GlTF_AnimSampler s)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x16BE364", Offset = "0x16BE364", VA = "0x16BE364")]
	public void Write()
	{
	}
}
[Token(Token = "0x200002C")]
public abstract class GlTF_ColorOrTexture : GlTF_Writer
{
	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x16BE4F4", Offset = "0x16BE4F4", VA = "0x16BE4F4")]
	public GlTF_ColorOrTexture(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x16BE4FC", Offset = "0x16BE4FC", VA = "0x16BE4FC")]
	public GlTF_ColorOrTexture(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60000B7")]
	public abstract void WriteColorOrTexture();
}
[Token(Token = "0x200002D")]
public sealed class GlTF_ColorRGB : GlTF_Writer
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x16BE524", Offset = "0x16BE524", VA = "0x16BE524")]
	public GlTF_ColorRGB(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x16BE54C", Offset = "0x16BE54C", VA = "0x16BE54C")]
	public GlTF_ColorRGB(GlTF_Globals globals, Color c)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x16BE58C", Offset = "0x16BE58C", VA = "0x16BE58C")]
	public GlTF_ColorRGB(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x16BB928", Offset = "0x16BB928", VA = "0x16BB928")]
	public void Write()
	{
	}
}
[Token(Token = "0x200002E")]
public sealed class GlTF_ColorRGBA : GlTF_Writer
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x16BE5DC", Offset = "0x16BE5DC", VA = "0x16BE5DC")]
	public GlTF_ColorRGBA(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x16BE604", Offset = "0x16BE604", VA = "0x16BE604")]
	public GlTF_ColorRGBA(GlTF_Globals globals, Color c)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x16BE644", Offset = "0x16BE644", VA = "0x16BE644")]
	public GlTF_ColorRGBA(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x16BE694", Offset = "0x16BE694", VA = "0x16BE694")]
	public void Write()
	{
	}
}
[Token(Token = "0x200002F")]
public class GlTF_DirectionalLight : GlTF_Light
{
	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x16BE99C", Offset = "0x16BE99C", VA = "0x16BE99C")]
	public GlTF_DirectionalLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x16BE9A4", Offset = "0x16BE9A4", VA = "0x16BE9A4", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x2000030")]
public abstract class GlTF_FloatArray : GlTF_Writer
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] items;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int minItems;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxItems;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x16BE9BC", Offset = "0x16BE9BC", VA = "0x16BE9BC")]
	public GlTF_FloatArray(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x16BE9C4", Offset = "0x16BE9C4", VA = "0x16BE9C4")]
	public GlTF_FloatArray(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x16BE9EC", Offset = "0x16BE9EC", VA = "0x16BE9EC")]
	protected void WriteValsAsNamedArray()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x16BEB04", Offset = "0x16BEB04", VA = "0x16BEB04")]
	protected void WriteVals()
	{
	}
}
[Token(Token = "0x2000031")]
public class GlTF_FloatArray4 : GlTF_FloatArray
{
	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x16BEBF4", Offset = "0x16BEBF4", VA = "0x16BEBF4")]
	public GlTF_FloatArray4(GlTF_Globals globals)
	{
	}
}
[Token(Token = "0x2000032")]
public sealed class GlTF_Globals : IDisposable
{
	[Token(Token = "0x40000B0")]
	private const int B3DM_HEADER_SIZE = 24;

	[Token(Token = "0x40000B1")]
	private const int kGlbHeaderSize = 20;

	[Token(Token = "0x40000B2")]
	private const uint kFourCC_glTF = 1179937895u;

	[Token(Token = "0x40000B3")]
	private const uint kFourCC_JSON = 1313821514u;

	[Token(Token = "0x40000B4")]
	private const uint kFourCC_BIN_ = 5130562u;

	[Token(Token = "0x40000B5")]
	private const uint kFourCC_b3dm = 1835283298u;

	[Token(Token = "0x40000B6")]
	public const string kTiltBrushMaterialExtensionName = "GOOGLE_tilt_brush_material";

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StreamWriter jsonWriter;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BinaryWriter binWriter;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_outputFileName;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string binFileName;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int indent;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool binary;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool b3dm;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int m_gltfVersion;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly GlTF_BufferView m_scalarUshortElementArrayBv;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly GlTF_BufferView m_stride4Bv;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly GlTF_BufferView m_stride8Bv;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public readonly GlTF_BufferView m_stride12Bv;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly GlTF_BufferView m_stride16Bv;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public readonly List<GlTF_BufferView> bufferViews;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly List<GlTF_Camera> cameras;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public readonly List<GlTF_Mesh> meshes;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public readonly List<GlTF_Accessor> accessors;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public readonly Dictionary<string, GlTF_Node> nodes;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public readonly Dictionary<IExportableMaterial, GlTF_Material> materials;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public readonly Dictionary<string, GlTF_Sampler> samplers;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public readonly Dictionary<string, GlTF_Texture> textures;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public readonly Dictionary<string, GlTF_Image> imagesByFileRefUri;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public readonly Dictionary<string, GlTF_Technique> techniques;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public readonly List<GlTF_Program> programs;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public readonly List<GlTF_Shader> shaders;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public readonly Dictionary<string, object> extras;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public readonly double[] RTCCenter;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<string> m_exportedFiles;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string copyright;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string generator;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private byte[] copyBuffer;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<ExportFileReference> m_exportedFileReferences;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ExportFileReference.DisambiguationContext m_disambiguationContext;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private HashSet<string> m_materialPresentationNames;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public readonly string temporaryDirectory;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Dictionary<string, GlTF_ReferencedObject> m_nameToObject;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HashSet<GlTF_ReferencedObject> m_emittedRefs;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly bool[] firsts;

	[Token(Token = "0x1700001C")]
	public bool Gltf2
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x16B9590", Offset = "0x16B9590", VA = "0x16B9590")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public bool GltfCompatibilityMode
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x16BC330", Offset = "0x16BC330", VA = "0x16BC330")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public bool UseTiltBrushMaterialExtension
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x16BEC84", Offset = "0x16BEC84", VA = "0x16BEC84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	public string Copyright
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x16BEC94", Offset = "0x16BEC94", VA = "0x16BEC94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x16BED2C", Offset = "0x16BED2C", VA = "0x16BED2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public string Generator
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x16BED34", Offset = "0x16BED34", VA = "0x16BED34")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x16BED80", Offset = "0x16BED80", VA = "0x16BED80")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public string GltfVersion
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x16BED88", Offset = "0x16BED88", VA = "0x16BED88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public IEnumerable<string> ExportedFiles
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x16BEDFC", Offset = "0x16BEDFC", VA = "0x16BEDFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public GlTF_Globals CNI
	{
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x16BAF0C", Offset = "0x16BAF0C", VA = "0x16BAF0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x16BECE0", Offset = "0x16BECE0", VA = "0x16BECE0")]
	private static string OrUnknown(string str)
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x16BEE04", Offset = "0x16BEE04", VA = "0x16BEE04")]
	public GlTF_Globals(string temporaryDirectory, int gltfVersion)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x16BF524", Offset = "0x16BF524", VA = "0x16BF524")]
	public void EnableFileStream()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x16BF674", Offset = "0x16BF674", VA = "0x16BF674", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x16BB270", Offset = "0x16BB270", VA = "0x16BB270")]
	public void Indent()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x16BCEFC", Offset = "0x16BCEFC", VA = "0x16BCEFC")]
	public void WriteKeyAndIndentIn(string key, string delimiter)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x16BD0B8", Offset = "0x16BD0B8", VA = "0x16BD0B8")]
	public void NewlineAndIndentOut(string delimiter)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x16BF8C4", Offset = "0x16BF8C4", VA = "0x16BF8C4")]
	public void IndentIn()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x16BB6A8", Offset = "0x16BB6A8", VA = "0x16BB6A8")]
	public GlTF_ReferencedObject Lookup(GlTF_ReferencedObject gltfObject)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x16BF914", Offset = "0x16BF914", VA = "0x16BF914")]
	private int LookupIndex(GlTF_ReferencedObject gltfObject)
	{
		return default(int);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x16BFA1C", Offset = "0x16BFA1C", VA = "0x16BFA1C")]
	public string SerializeReference(GlTF_ReferencedObject gltfObject)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	public T Lookup<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	public (int, T) LookupIndex<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return default((int, T));
	}

	[Token(Token = "0x60000DE")]
	public string SerializeReference<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x16BF904", Offset = "0x16BF904", VA = "0x16BF904")]
	public void IndentOut()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x16BFAD8", Offset = "0x16BFAD8", VA = "0x16BFAD8")]
	public void CommaStart()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x16BB1C4", Offset = "0x16BB1C4", VA = "0x16BB1C4")]
	public void CommaNL()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x16BFB0C", Offset = "0x16BFB0C", VA = "0x16BFB0C")]
	public void OpenFiles(string filepath)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x16BF884", Offset = "0x16BF884", VA = "0x16BF884")]
	public void CloseFiles()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x16BFE50", Offset = "0x16BFE50", VA = "0x16BFE50")]
	private void WriteTopLevel(Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph, HashSet<GlTF_ReferencedObject> used, string name, IReadOnlyCollection<GlTF_ReferencedObject> collection)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x16BFF94", Offset = "0x16BFF94", VA = "0x16BFF94")]
	private void WriteTopLevelImpl(Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph, string key, IReadOnlyCollection<GlTF_ReferencedObject> objs)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x16C0998", Offset = "0x16C0998", VA = "0x16C0998")]
	private static IEnumerable<string> SetSub(HashSet<GlTF_ReferencedObject> lhs, HashSet<GlTF_ReferencedObject> rhs)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	public void WriteNamedJArray<T>(string name, IEnumerable<T> col, Action<T> writer)
	{
	}

	[Token(Token = "0x60000E8")]
	public void WriteNamedJObject<T>(string name, IEnumerable<T> col, Action<T> writer)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x16C0AFC", Offset = "0x16C0AFC", VA = "0x16C0AFC")]
	public void WriteNamedJObject(string name, IEnumerable<(string, string)> col)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x16C0E40", Offset = "0x16C0E40", VA = "0x16C0E40")]
	public void WriteNamedObject(string name, object value)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x16C100C", Offset = "0x16C100C", VA = "0x16C100C")]
	public void WriteNamedFile(string name, ExportFileReference value)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x16BB2F0", Offset = "0x16BB2F0", VA = "0x16BB2F0")]
	public void WriteNamedString(string name, string value)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x16BB030", Offset = "0x16BB030", VA = "0x16BB030")]
	public void WriteNamedInt(string name, long value)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x16BB0E8", Offset = "0x16BB0E8", VA = "0x16BB0E8")]
	public void WriteNamedBool(string name, bool value)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x16C180C", Offset = "0x16C180C", VA = "0x16C180C")]
	public void WriteNamedFloat(string name, float value)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x16BAF2C", Offset = "0x16BAF2C", VA = "0x16BAF2C")]
	public void WriteNamedReference(string key, GlTF_ReferencedObject gltfObject)
	{
	}

	[Token(Token = "0x60000F1")]
	public void WriteNamedReference<T>(string key, string objectName) where T : GlTF_ReferencedObject
	{
	}

	[Token(Token = "0x60000F2")]
	private void SanityCheckDictionary<T>(Dictionary<string, T> collection) where T : GlTF_ReferencedObject
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x16C18C4", Offset = "0x16C18C4", VA = "0x16C18C4")]
	private void UpdateNameToObject(IEnumerable<GlTF_ReferencedObject> collection)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x16C1EDC", Offset = "0x16C1EDC", VA = "0x16C1EDC")]
	private static HashSet<GlTF_ReferencedObject> TransitiveClosure(IEnumerable<GlTF_ReferencedObject> roots, Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph)
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x16C2420", Offset = "0x16C2420", VA = "0x16C2420")]
	private void AssignIndicesToMarkedObjects(IEnumerable<GlTF_ReferencedObject> collection, HashSet<GlTF_ReferencedObject> marked)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x16C2784", Offset = "0x16C2784", VA = "0x16C2784")]
	public void Write()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x16C1114", Offset = "0x16C1114", VA = "0x16C1114")]
	private void AddExportedFile(ExportFileReference fileReference)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x16C478C", Offset = "0x16C478C", VA = "0x16C478C")]
	private void CopyToAndDispose(GlTF_BufferView source, BinaryWriter destination)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x16C4804", Offset = "0x16C4804", VA = "0x16C4804")]
	private static void CopyTo(Stream source, BinaryWriter destination, long numBytes, byte[] buffer)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x16C48FC", Offset = "0x16C48FC", VA = "0x16C48FC")]
	public GlTF_BufferView GetBufferView(GlTF_Accessor.Type type, GlTF_Accessor.ComponentType c)
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x16BC340", Offset = "0x16BC340", VA = "0x16BC340")]
	public GlTF_Accessor CreateAccessor(string n, GlTF_Accessor.Type t, GlTF_Accessor.ComponentType c, bool isNonVertexAttributeAccessor = false, bool normalized = false)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x16C4A28", Offset = "0x16C4A28", VA = "0x16C4A28")]
	public GlTF_Material CreateMaterial(string meshNamespace, IExportableMaterial exportableMaterial)
	{
		return null;
	}
}
[Token(Token = "0x2000035")]
public sealed class GlTF_Image : GlTF_ReferencedObject
{
	[Token(Token = "0x2000036")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000024")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600010F")]
			[Address(RVA = "0x16C51D4", Offset = "0x16C51D4", VA = "0x16C51D4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0x16C521C", Offset = "0x16C521C", VA = "0x16C521C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x16C510C", Offset = "0x16C510C", VA = "0x16C510C")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x16C51B8", Offset = "0x16C51B8", VA = "0x16C51B8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x16C51BC", Offset = "0x16C51BC", VA = "0x16C51BC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x16C51DC", Offset = "0x16C51DC", VA = "0x16C51DC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x16C5224", Offset = "0x16C5224", VA = "0x16C5224", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x16C52BC", Offset = "0x16C52BC", VA = "0x16C52BC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly ExportFileReference uri;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x16C4EB0", Offset = "0x16C4EB0", VA = "0x16C4EB0")]
	public static GlTF_Image LookupOrCreate(GlTF_Globals G, ExportFileReference fileRef, [Optional] string proposedName)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x16C506C", Offset = "0x16C506C", VA = "0x16C506C")]
	private GlTF_Image(GlTF_Globals globals, string name, ExportFileReference fileRef)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x16C509C", Offset = "0x16C509C", VA = "0x16C509C", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__3))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x16C5140", Offset = "0x16C5140", VA = "0x16C5140", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class GlTF_Light : GlTF_Writer
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_ColorRGB color;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string type;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x16BB908", Offset = "0x16BB908", VA = "0x16BB908")]
	public GlTF_Light(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000115")]
	protected abstract void WriteLight();
}
[Token(Token = "0x2000038")]
public sealed class GlTF_Material : GlTF_ReferencedObject
{
	[Token(Token = "0x2000039")]
	public abstract class KeyValue
	{
		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x6000123")]
		public abstract void Write(GlTF_Globals G);

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x16C5DE0", Offset = "0x16C5DE0", VA = "0x16C5DE0")]
		public void Write(GlTF_Globals G, string writtenKey)
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x16C6654", Offset = "0x16C6654", VA = "0x16C6654")]
		protected KeyValue()
		{
		}
	}

	[Token(Token = "0x200003A")]
	public class ColorKV : KeyValue
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x16C665C", Offset = "0x16C665C", VA = "0x16C665C", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x16C6904", Offset = "0x16C6904", VA = "0x16C6904")]
		public ColorKV()
		{
		}
	}

	[Token(Token = "0x200003B")]
	public class VectorKV : KeyValue
	{
		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector4 vector;

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x16C690C", Offset = "0x16C690C", VA = "0x16C690C", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x16C6BB4", Offset = "0x16C6BB4", VA = "0x16C6BB4")]
		public VectorKV()
		{
		}
	}

	[Token(Token = "0x200003C")]
	public class FloatKV : KeyValue
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x16C6BBC", Offset = "0x16C6BBC", VA = "0x16C6BBC", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x16C6C6C", Offset = "0x16C6C6C", VA = "0x16C6C6C")]
		public FloatKV()
		{
		}
	}

	[Token(Token = "0x200003D")]
	public class TextureKV : KeyValue
	{
		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly GlTF_Texture m_texture;

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x16C6C74", Offset = "0x16C6C74", VA = "0x16C6C74")]
		public TextureKV(string key, GlTF_Texture texture)
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x16C6CA0", Offset = "0x16C6CA0", VA = "0x16C6CA0", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private struct <>c__DisplayClass19_0
	{
		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, KeyValue> valuesByName;
	}

	[Token(Token = "0x2000040")]
	[CompilerGenerated]
	private sealed class <IterReferencesWithNulls>d__19 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Material <>4__this;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass19_0 <>8__1;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<KeyValue>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000026")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000137")]
			[Address(RVA = "0x16C7234", Offset = "0x16C7234", VA = "0x16C7234", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000139")]
			[Address(RVA = "0x16C727C", Offset = "0x16C727C", VA = "0x16C727C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x16C553C", Offset = "0x16C553C", VA = "0x16C553C")]
		[DebuggerHidden]
		public <IterReferencesWithNulls>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x16C6D68", Offset = "0x16C6D68", VA = "0x16C6D68", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x16C6D84", Offset = "0x16C6D84", VA = "0x16C6D84", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x16C71E4", Offset = "0x16C71E4", VA = "0x16C71E4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x16C723C", Offset = "0x16C723C", VA = "0x16C723C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x16C7284", Offset = "0x16C7284", VA = "0x16C7284", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x16C7328", Offset = "0x16C7328", VA = "0x16C7328", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40000EB")]
	private const string kBaseColorFactor = "BaseColorFactor";

	[Token(Token = "0x40000EC")]
	private const string kBaseColorTex = "BaseColorTex";

	[Token(Token = "0x40000ED")]
	private const string kMainTex = "MainTex";

	[Token(Token = "0x40000EE")]
	private const string kBumpMap = "BumpMap";

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string instanceTechniqueName;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GlTF_ColorOrTexture ambient;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GlTF_ColorOrTexture diffuse;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shininess;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GlTF_ColorOrTexture specular;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<KeyValue> values;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly IExportableMaterial ExportableMaterial;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x16C52C0", Offset = "0x16C52C0", VA = "0x16C52C0")]
	public static string GetNameFromObject(IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x16C4B74", Offset = "0x16C4B74", VA = "0x16C4B74")]
	public GlTF_Material(GlTF_Globals globals, IExportableMaterial exportableMaterial)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x16C53B8", Offset = "0x16C53B8", VA = "0x16C53B8", Slot = "4")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x16C54C4", Offset = "0x16C54C4", VA = "0x16C54C4")]
	[IteratorStateMachine(typeof(<IterReferencesWithNulls>d__19))]
	private IEnumerable<GlTF_ReferencedObject> IterReferencesWithNulls()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x16C5570", Offset = "0x16C5570", VA = "0x16C5570")]
	private bool HasDynamicExportableMaterialPbr(Dictionary<string, KeyValue> valuesByName)
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x16C55D8", Offset = "0x16C55D8", VA = "0x16C55D8")]
	private void WriteDynamicExportableMaterialAsPbr(Dictionary<string, KeyValue> valuesByName)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x16C58E4", Offset = "0x16C58E4", VA = "0x16C58E4")]
	private bool HasBrushDescriptorPbr(Dictionary<string, KeyValue> valuesByName)
	{
		return default(bool);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x16C5984", Offset = "0x16C5984", VA = "0x16C5984")]
	private void WriteBrushDescriptorAsPbr(Dictionary<string, KeyValue> valuesByName)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x16C5E64", Offset = "0x16C5E64", VA = "0x16C5E64", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x16C64B0", Offset = "0x16C64B0", VA = "0x16C64B0")]
	private static string ConvertAlphaMode(ExportableMaterialBlendMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x16C5838", Offset = "0x16C5838", VA = "0x16C5838")]
	private void MaybeWrite(Dictionary<string, KeyValue> values, string key, string writtenKey)
	{
	}
}
[Token(Token = "0x2000041")]
public class GlTF_MaterialColor : GlTF_ColorOrTexture
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_ColorRGBA color;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x16C732C", Offset = "0x16C732C", VA = "0x16C732C")]
	public GlTF_MaterialColor(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x16C73E0", Offset = "0x16C73E0", VA = "0x16C73E0", Slot = "4")]
	public override void WriteColorOrTexture()
	{
	}
}
[Token(Token = "0x2000042")]
public class GlTF_MaterialTexture : GlTF_ColorOrTexture
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_Texture texture;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x16C73F8", Offset = "0x16C73F8", VA = "0x16C73F8")]
	public GlTF_MaterialTexture(GlTF_Globals globals, string n, GlTF_Texture t)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x16C7424", Offset = "0x16C7424", VA = "0x16C7424", Slot = "4")]
	public override void WriteColorOrTexture()
	{
	}
}
[Token(Token = "0x2000043")]
public class GlTF_Matrix : GlTF_FloatArray
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly Matrix4x4 unityMatrix;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x16C75E8", Offset = "0x16C75E8", VA = "0x16C75E8")]
	public GlTF_Matrix(GlTF_Globals globals, Matrix4x4 m)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x16C77A0", Offset = "0x16C77A0", VA = "0x16C77A0")]
	public void WriteMatrix()
	{
	}
}
[Token(Token = "0x2000044")]
public sealed class GlTF_Mesh : GlTF_ReferencedObject
{
	[Token(Token = "0x2000045")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__4 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Mesh <>4__this;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Primitive>.Enumerator <>7__wrap1;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator<GlTF_ReferencedObject> <>7__wrap2;

		[Token(Token = "0x17000028")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0x16C84CC", Offset = "0x16C84CC", VA = "0x16C84CC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0x16C8514", Offset = "0x16C8514", VA = "0x16C8514", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x16C7A94", Offset = "0x16C7A94", VA = "0x16C7A94")]
		[DebuggerHidden]
		public <IterReferences>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x16C7F00", Offset = "0x16C7F00", VA = "0x16C7F00", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x16C7FB8", Offset = "0x16C7FB8", VA = "0x16C7FB8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x16C847C", Offset = "0x16C847C", VA = "0x16C847C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x16C83CC", Offset = "0x16C83CC", VA = "0x16C83CC")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x16C84D4", Offset = "0x16C84D4", VA = "0x16C84D4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x16C851C", Offset = "0x16C851C", VA = "0x16C851C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x16C85C0", Offset = "0x16C85C0", VA = "0x16C85C0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GlTF_Primitive> primitives;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x16C77A4", Offset = "0x16C77A4", VA = "0x16C77A4")]
	public GlTF_Mesh(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x16C7834", Offset = "0x16C7834", VA = "0x16C7834")]
	public static string GetNameFromObject(ObjectName o)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x16C7898", Offset = "0x16C7898", VA = "0x16C7898")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x16C7A1C", Offset = "0x16C7A1C", VA = "0x16C7A1C", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__4))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x16C7AC8", Offset = "0x16C7AC8", VA = "0x16C7AC8", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000046")]
public sealed class GlTF_Node : GlTF_ReferencedObject
{
	[Token(Token = "0x2000047")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__14 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Node <>4__this;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Node>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700002A")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x16C94E0", Offset = "0x16C94E0", VA = "0x16C94E0", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x16C9528", Offset = "0x16C9528", VA = "0x16C9528", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x16C8BFC", Offset = "0x16C8BFC", VA = "0x16C8BFC")]
		[DebuggerHidden]
		public <IterReferences>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x16C9200", Offset = "0x16C9200", VA = "0x16C9200", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x16C921C", Offset = "0x16C921C", VA = "0x16C921C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x16C9490", Offset = "0x16C9490", VA = "0x16C9490")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x16C94E8", Offset = "0x16C94E8", VA = "0x16C94E8", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x16C9530", Offset = "0x16C9530", VA = "0x16C9530", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x16C95D4", Offset = "0x16C95D4", VA = "0x16C95D4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GlTF_Node> m_children;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string cameraName;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string lightNameThatDoesNothing;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GlTF_Mesh m_mesh;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GlTF_Matrix matrix;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GlTF_Rotation rotation;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GlTF_Scale scale;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GlTF_Translation translation;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly GlTF_Node Parent;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x16C85C4", Offset = "0x16C85C4", VA = "0x16C85C4")]
	public static string GetNameFromObject(ObjectName o)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x16C8628", Offset = "0x16C8628", VA = "0x16C8628")]
	public static GlTF_Node Create(GlTF_Globals globals, string desiredName, Matrix4x4 mat, GlTF_Node parent)
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x16C899C", Offset = "0x16C899C", VA = "0x16C899C")]
	public static GlTF_Node GetOrCreate(GlTF_Globals globals, ObjectName o, Matrix4x4 mat, GlTF_Node parent, out bool created)
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x16C8748", Offset = "0x16C8748", VA = "0x16C8748")]
	private static GlTF_Node GetOrCreate(GlTF_Globals globals, string name, Matrix4x4 mat, GlTF_Node parent, out bool created)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x16C8A00", Offset = "0x16C8A00", VA = "0x16C8A00")]
	private GlTF_Node(GlTF_Globals globals, string name, Matrix4x4 mat, GlTF_Node parent)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x16C8B84", Offset = "0x16C8B84", VA = "0x16C8B84", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__14))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x16C8C30", Offset = "0x16C8C30", VA = "0x16C8C30", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000048")]
public class GlTF_Perspective : GlTF_Camera
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float aspect_ratio;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yfov;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float zfar;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float znear;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x16C95D8", Offset = "0x16C95D8", VA = "0x16C95D8")]
	public GlTF_Perspective(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x16C963C", Offset = "0x16C963C", VA = "0x16C963C", Slot = "6")]
	public override void WriteCamera()
	{
	}
}
[Token(Token = "0x2000049")]
public class GlTF_PointLight : GlTF_Light
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float constantAttenuation;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float linearAttenuation;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float quadraticAttenuation;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x16C994C", Offset = "0x16C994C", VA = "0x16C994C")]
	public GlTF_PointLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x16C99B8", Offset = "0x16C99B8", VA = "0x16C99B8", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x200004A")]
public sealed class GlTF_Primitive
{
	[Token(Token = "0x200004B")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__6 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Primitive <>4__this;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GlTF_Globals G;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GlTF_Globals <>3__G;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator<GlTF_ReferencedObject> <>7__wrap1;

		[Token(Token = "0x1700002C")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600016F")]
			[Address(RVA = "0x16CA014", Offset = "0x16CA014", VA = "0x16CA014", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000171")]
			[Address(RVA = "0x16CA05C", Offset = "0x16CA05C", VA = "0x16CA05C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x16C9B94", Offset = "0x16C9B94", VA = "0x16C9B94")]
		[DebuggerHidden]
		public <IterReferences>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x16C9BC8", Offset = "0x16C9BC8", VA = "0x16C9BC8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x16C9BE4", Offset = "0x16C9BE4", VA = "0x16C9BE4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x16C9F64", Offset = "0x16C9F64", VA = "0x16C9F64")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x16CA01C", Offset = "0x16CA01C", VA = "0x16CA01C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x16CA064", Offset = "0x16CA064", VA = "0x16CA064", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x16CA110", Offset = "0x16CA110", VA = "0x16CA110", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000125")]
	private const int kPrimitiveMode_Triangles = 4;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly GlTF_Attributes attributes;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GlTF_Accessor indices;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string materialName;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x16C9B6C", Offset = "0x16C9B6C", VA = "0x16C9B6C")]
	public GlTF_Primitive(GlTF_Attributes attributes)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x16C79B0", Offset = "0x16C79B0", VA = "0x16C79B0")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x16C8344", Offset = "0x16C8344", VA = "0x16C8344")]
	[IteratorStateMachine(typeof(<IterReferences>d__6))]
	public IEnumerable<GlTF_ReferencedObject> IterReferences(GlTF_Globals G)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x16C7D70", Offset = "0x16C7D70", VA = "0x16C7D70")]
	public void WriteAsUnnamedJObject(GlTF_Globals G)
	{
	}
}
[Token(Token = "0x200004C")]
public sealed class GlTF_Program : GlTF_ReferencedObject
{
	[Token(Token = "0x200004D")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__5 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Program <>4__this;

		[Token(Token = "0x1700002E")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x16CA634", Offset = "0x16CA634", VA = "0x16CA634", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0x16CA67C", Offset = "0x16CA67C", VA = "0x16CA67C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x16CA32C", Offset = "0x16CA32C", VA = "0x16CA32C")]
		[DebuggerHidden]
		public <IterReferences>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x16CA570", Offset = "0x16CA570", VA = "0x16CA570", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x16CA574", Offset = "0x16CA574", VA = "0x16CA574", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x16CA63C", Offset = "0x16CA63C", VA = "0x16CA63C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x16CA684", Offset = "0x16CA684", VA = "0x16CA684", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x16CA728", Offset = "0x16CA728", VA = "0x16CA728", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> attributes;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string vertexShader;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string fragmentShader;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x16CA114", Offset = "0x16CA114", VA = "0x16CA114")]
	public GlTF_Program(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x16CA1BC", Offset = "0x16CA1BC", VA = "0x16CA1BC")]
	public static string GetNameFromObject(IExportableMaterial iem)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x16CA2B4", Offset = "0x16CA2B4", VA = "0x16CA2B4", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__5))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x16CA360", Offset = "0x16CA360", VA = "0x16CA360", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200004E")]
public abstract class GlTF_ReferencedObject : GlTF_Writer
{
	[Token(Token = "0x17000030")]
	public int? Index
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x16CA72C", Offset = "0x16CA72C", VA = "0x16CA72C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x16CA734", Offset = "0x16CA734", VA = "0x16CA734")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public string PresentationNameOverride
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x16CA73C", Offset = "0x16CA73C", VA = "0x16CA73C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x16CA744", Offset = "0x16CA744", VA = "0x16CA744")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string PresentationName
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x16C6528", Offset = "0x16C6528", VA = "0x16C6528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x16B9410", Offset = "0x16B9410", VA = "0x16B9410")]
	public GlTF_ReferencedObject(GlTF_Globals g)
	{
	}

	[Token(Token = "0x6000187")]
	public abstract IEnumerable<GlTF_ReferencedObject> IterReferences();

	[Token(Token = "0x6000188")]
	public abstract void WriteTopLevel();

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x16BAE7C", Offset = "0x16BAE7C", VA = "0x16BAE7C")]
	public void BeginGltfObject()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x16BB4DC", Offset = "0x16BB4DC", VA = "0x16BB4DC")]
	public void EndGltfObject()
	{
	}
}
[Token(Token = "0x200004F")]
public class GlTF_Rotation : GlTF_FloatArray4
{
	[Token(Token = "0x600018B")]
	[Address(RVA = "0x16CA74C", Offset = "0x16CA74C", VA = "0x16CA74C")]
	public GlTF_Rotation(GlTF_Globals globals, Quaternion q)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x16C914C", Offset = "0x16C914C", VA = "0x16C914C")]
	public void WriteRotation()
	{
	}
}
[Token(Token = "0x2000050")]
public sealed class GlTF_Sampler : GlTF_ReferencedObject
{
	[Token(Token = "0x2000051")]
	public enum MagFilter
	{
		[Token(Token = "0x400013D")]
		NEAREST = 9728,
		[Token(Token = "0x400013E")]
		LINEAR
	}

	[Token(Token = "0x2000052")]
	public enum MinFilter
	{
		[Token(Token = "0x4000140")]
		NEAREST = 9728,
		[Token(Token = "0x4000141")]
		LINEAR = 9729,
		[Token(Token = "0x4000142")]
		NEAREST_MIPMAP_NEAREST = 9984,
		[Token(Token = "0x4000143")]
		LINEAR_MIPMAP_NEAREST = 9985,
		[Token(Token = "0x4000144")]
		NEAREST_MIPMAP_LINEAR = 9986,
		[Token(Token = "0x4000145")]
		LINEAR_MIPMAP_LINEAR = 9987
	}

	[Token(Token = "0x2000053")]
	public enum Wrap
	{
		[Token(Token = "0x4000147")]
		CLAMP_TO_EDGE = 33071,
		[Token(Token = "0x4000148")]
		MIRRORED_REPEAT = 33648,
		[Token(Token = "0x4000149")]
		REPEAT = 10497
	}

	[Token(Token = "0x2000054")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__8 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000033")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000194")]
			[Address(RVA = "0x14DBC28", Offset = "0x14DBC28", VA = "0x14DBC28", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000196")]
			[Address(RVA = "0x14DBC70", Offset = "0x14DBC70", VA = "0x14DBC70", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x14DB95C", Offset = "0x14DB95C", VA = "0x14DB95C")]
		[DebuggerHidden]
		public <IterReferences>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x14DBC0C", Offset = "0x14DBC0C", VA = "0x14DBC0C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x14DBC10", Offset = "0x14DBC10", VA = "0x14DBC10", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x14DBC30", Offset = "0x14DBC30", VA = "0x14DBC30", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x14DBC78", Offset = "0x14DBC78", VA = "0x14DBC78", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x14DBD10", Offset = "0x14DBD10", VA = "0x14DBD10", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly MagFilter magFilter;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly MinFilter minFilter;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Wrap wrap;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x14DB58C", Offset = "0x14DB58C", VA = "0x14DB58C")]
	public static GlTF_Sampler LookupOrCreate(GlTF_Globals G, MagFilter magFilter, MinFilter minFilter, Wrap wrap = Wrap.REPEAT)
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x14DB8A8", Offset = "0x14DB8A8", VA = "0x14DB8A8")]
	private GlTF_Sampler(GlTF_Globals globals, string name, MagFilter magFilter, MinFilter minFilter, Wrap wrap)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x14DB8EC", Offset = "0x14DB8EC", VA = "0x14DB8EC", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__8))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x14DB990", Offset = "0x14DB990", VA = "0x14DB990", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000055")]
public class GlTF_Scale : GlTF_Vector3
{
	[Token(Token = "0x6000199")]
	[Address(RVA = "0x14DBD14", Offset = "0x14DBD14", VA = "0x14DBD14")]
	public GlTF_Scale(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x14DBE14", Offset = "0x14DBE14", VA = "0x14DBE14")]
	public GlTF_Scale(GlTF_Globals globals, Vector3 v)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x14DBEC8", Offset = "0x14DBEC8", VA = "0x14DBEC8")]
	public void WriteScale()
	{
	}
}
[Token(Token = "0x2000056")]
public sealed class GlTF_Scene : GlTF_ReferencedObject
{
	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Scene <>4__this;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Node>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000035")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001A5")]
			[Address(RVA = "0x14DC6FC", Offset = "0x14DC6FC", VA = "0x14DC6FC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0x14DC744", Offset = "0x14DC744", VA = "0x14DC744", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x14DC250", Offset = "0x14DC250", VA = "0x14DC250")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x14DC4C8", Offset = "0x14DC4C8", VA = "0x14DC4C8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x14DC4E4", Offset = "0x14DC4E4", VA = "0x14DC4E4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x14DC6AC", Offset = "0x14DC6AC", VA = "0x14DC6AC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x14DC704", Offset = "0x14DC704", VA = "0x14DC704", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x14DC74C", Offset = "0x14DC74C", VA = "0x14DC74C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x14DC7F0", Offset = "0x14DC7F0", VA = "0x14DC7F0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GlTF_Node> m_nodes;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, object> m_extras;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x14DBF80", Offset = "0x14DBF80", VA = "0x14DBF80")]
	public GlTF_Scene(GlTF_Globals globals, string name, IEnumerable<GlTF_Node> nodes, Dictionary<string, object> extras)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x14DC1D8", Offset = "0x14DC1D8", VA = "0x14DC1D8", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__3))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x14DC284", Offset = "0x14DC284", VA = "0x14DC284", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000058")]
public sealed class GlTF_Shader : GlTF_ReferencedObject
{
	[Token(Token = "0x2000059")]
	public enum Type
	{
		[Token(Token = "0x4000157")]
		Vertex,
		[Token(Token = "0x4000158")]
		Fragment
	}

	[Token(Token = "0x200005A")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__5 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000037")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001B2")]
			[Address(RVA = "0x14DCAEC", Offset = "0x14DCAEC", VA = "0x14DCAEC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B4")]
			[Address(RVA = "0x14DCB34", Offset = "0x14DCB34", VA = "0x14DCB34", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x14DC9A8", Offset = "0x14DC9A8", VA = "0x14DC9A8")]
		[DebuggerHidden]
		public <IterReferences>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x14DCAD0", Offset = "0x14DCAD0", VA = "0x14DCAD0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x14DCAD4", Offset = "0x14DCAD4", VA = "0x14DCAD4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x14DCAF4", Offset = "0x14DCAF4", VA = "0x14DCAF4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x14DCB3C", Offset = "0x14DCB3C", VA = "0x14DCB3C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x14DCBD4", Offset = "0x14DCBD4", VA = "0x14DCBD4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Type type;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExportFileReference uri;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x14DC7F4", Offset = "0x14DC7F4", VA = "0x14DC7F4")]
	public static string GetNameFromObject(IExportableMaterial iem, Type type)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x14DC930", Offset = "0x14DC930", VA = "0x14DC930")]
	public GlTF_Shader(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x14DC938", Offset = "0x14DC938", VA = "0x14DC938", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__5))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x14DC9DC", Offset = "0x14DC9DC", VA = "0x14DC9DC", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x14DCAB0", Offset = "0x14DCAB0", VA = "0x14DCAB0")]
	private int TypeStr()
	{
		return default(int);
	}
}
[Token(Token = "0x200005B")]
public class GlTF_SpotLight : GlTF_Light
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float constantAttenuation;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fallOffAngle;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fallOffExponent;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float linearAttenuation;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float quadraticAttenuation;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x14DCBD8", Offset = "0x14DCBD8", VA = "0x14DCBD8")]
	public GlTF_SpotLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x14DCC48", Offset = "0x14DCC48", VA = "0x14DCC48", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x200005C")]
public sealed class GlTF_Target : GlTF_Writer
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string id;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string path;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x14DCED8", Offset = "0x14DCED8", VA = "0x14DCED8")]
	public GlTF_Target(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x14DCF28", Offset = "0x14DCF28", VA = "0x14DCF28")]
	public void Write()
	{
	}
}
[Token(Token = "0x200005D")]
public sealed class GlTF_Technique : GlTF_ReferencedObject
{
	[Token(Token = "0x200005E")]
	public enum Type
	{
		[Token(Token = "0x4000169")]
		FLOAT = 5126,
		[Token(Token = "0x400016A")]
		FLOAT_VEC2 = 35664,
		[Token(Token = "0x400016B")]
		FLOAT_VEC3 = 35665,
		[Token(Token = "0x400016C")]
		FLOAT_VEC4 = 35666,
		[Token(Token = "0x400016D")]
		FLOAT_MAT3 = 35675,
		[Token(Token = "0x400016E")]
		FLOAT_MAT4 = 35676,
		[Token(Token = "0x400016F")]
		SAMPLER_2D = 35678
	}

	[Token(Token = "0x200005F")]
	public enum Enable
	{
		[Token(Token = "0x4000171")]
		BLEND = 3042,
		[Token(Token = "0x4000172")]
		CULL_FACE = 2884,
		[Token(Token = "0x4000173")]
		DEPTH_TEST = 2929,
		[Token(Token = "0x4000174")]
		POLYGON_OFFSET_FILL = 32823,
		[Token(Token = "0x4000175")]
		SAMPLE_ALPHA_TO_COVERAGE = 32926,
		[Token(Token = "0x4000176")]
		SCISSOR_TEST = 3089
	}

	[Serializable]
	[Token(Token = "0x2000060")]
	public enum Semantic
	{
		[Token(Token = "0x4000178")]
		UNKNOWN,
		[Token(Token = "0x4000179")]
		POSITION,
		[Token(Token = "0x400017A")]
		NORMAL,
		[Token(Token = "0x400017B")]
		TANGENT,
		[Token(Token = "0x400017C")]
		COLOR,
		[Token(Token = "0x400017D")]
		TEXCOORD_0,
		[Token(Token = "0x400017E")]
		TEXCOORD_1,
		[Token(Token = "0x400017F")]
		TEXCOORD_2,
		[Token(Token = "0x4000180")]
		TEXCOORD_3,
		[Token(Token = "0x4000181")]
		MODELVIEW,
		[Token(Token = "0x4000182")]
		PROJECTION,
		[Token(Token = "0x4000183")]
		MODELVIEWINVERSETRANSPOSE,
		[Token(Token = "0x4000184")]
		CESIUM_RTC_MODELVIEW
	}

	[Token(Token = "0x2000061")]
	public class Parameter
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Semantic semantic;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlTF_Node node;

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x14DD82C", Offset = "0x14DD82C", VA = "0x14DD82C")]
		public Parameter()
		{
		}
	}

	[Token(Token = "0x2000062")]
	public class Attribute
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string param;

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x14DEBBC", Offset = "0x14DEBBC", VA = "0x14DEBBC")]
		public Attribute()
		{
		}
	}

	[Token(Token = "0x2000063")]
	public class Uniform
	{
		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string param;

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x14DD834", Offset = "0x14DD834", VA = "0x14DD834")]
		public Uniform()
		{
		}
	}

	[Token(Token = "0x2000064")]
	public class States
	{
		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Enable> enable;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, Value> functions;

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x14DD35C", Offset = "0x14DD35C", VA = "0x14DD35C")]
		public States()
		{
		}
	}

	[Token(Token = "0x2000065")]
	public sealed class Value : GlTF_Writer
	{
		[Token(Token = "0x2000066")]
		public enum Type
		{
			[Token(Token = "0x4000199")]
			Unknown,
			[Token(Token = "0x400019A")]
			Bool,
			[Token(Token = "0x400019B")]
			Int,
			[Token(Token = "0x400019C")]
			Float,
			[Token(Token = "0x400019D")]
			Color,
			[Token(Token = "0x400019E")]
			Vector2,
			[Token(Token = "0x400019F")]
			Vector4,
			[Token(Token = "0x40001A0")]
			IntArr,
			[Token(Token = "0x40001A1")]
			BoolArr
		}

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool boolValue;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int intValue;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float floatValue;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color colorValue;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 vector2Value;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector4 vector4Value;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] intArrValue;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool[] boolArrvalue;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Type type;

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x14DEBC4", Offset = "0x14DEBC4", VA = "0x14DEBC4")]
		public Value(GlTF_Globals globals, bool value)
		{
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x14DEBFC", Offset = "0x14DEBFC", VA = "0x14DEBFC")]
		public Value(GlTF_Globals globals, int value)
		{
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x14DEC34", Offset = "0x14DEC34", VA = "0x14DEC34")]
		public Value(GlTF_Globals globals, float value)
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x14DEC74", Offset = "0x14DEC74", VA = "0x14DEC74")]
		public Value(GlTF_Globals globals, Color value)
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x14DECCC", Offset = "0x14DECCC", VA = "0x14DECCC")]
		public Value(GlTF_Globals globals, Vector2 value)
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x14DED10", Offset = "0x14DED10", VA = "0x14DED10")]
		public Value(GlTF_Globals globals, Vector4 value)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x14DED68", Offset = "0x14DED68", VA = "0x14DED68")]
		public Value(GlTF_Globals globals, int[] value)
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x14DEDA0", Offset = "0x14DEDA0", VA = "0x14DEDA0")]
		public Value(GlTF_Globals globals, bool[] value)
		{
		}

		[Token(Token = "0x60001CC")]
		private void WriteArr<T>(T arr) where T : ArrayList
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x14DE56C", Offset = "0x14DE56C", VA = "0x14DE56C")]
		public void Write()
		{
		}
	}

	[Token(Token = "0x2000067")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__16 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Technique <>4__this;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Parameter>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000039")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x14DF088", Offset = "0x14DF088", VA = "0x14DF088", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x14DF0D0", Offset = "0x14DF0D0", VA = "0x14DF0D0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x14DD8B4", Offset = "0x14DD8B4", VA = "0x14DD8B4")]
		[DebuggerHidden]
		public <IterReferences>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x14DEDD8", Offset = "0x14DEDD8", VA = "0x14DEDD8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x14DEDF4", Offset = "0x14DEDF4", VA = "0x14DEDF4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x14DF038", Offset = "0x14DF038", VA = "0x14DF038")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x14DF090", Offset = "0x14DF090", VA = "0x14DF090", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x14DF0D8", Offset = "0x14DF0D8", VA = "0x14DF0D8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x14DF17C", Offset = "0x14DF17C", VA = "0x14DF17C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string program;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Attribute> attributes;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Parameter> parameters;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Uniform> uniforms;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public States states;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x14DD124", Offset = "0x14DD124", VA = "0x14DD124")]
	public static string GetNameFromObject(IExportableMaterial iem)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x14DD21C", Offset = "0x14DD21C", VA = "0x14DD21C")]
	public GlTF_Technique(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x14DD3D8", Offset = "0x14DD3D8", VA = "0x14DD3D8")]
	public void AddDefaultUniforms(bool rtc)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x14DD83C", Offset = "0x14DD83C", VA = "0x14DD83C", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__16))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x14DD8E8", Offset = "0x14DD8E8", VA = "0x14DD8E8", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000068")]
public sealed class GlTF_Texture : GlTF_ReferencedObject
{
	[Token(Token = "0x2000069")]
	[CompilerGenerated]
	private sealed class <IterReferences>d__8 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Texture <>4__this;

		[Token(Token = "0x1700003B")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x14DF65C", Offset = "0x14DF65C", VA = "0x14DF65C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x14DF6A4", Offset = "0x14DF6A4", VA = "0x14DF6A4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x14DF3D0", Offset = "0x14DF3D0", VA = "0x14DF3D0")]
		[DebuggerHidden]
		public <IterReferences>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x14DF5C0", Offset = "0x14DF5C0", VA = "0x14DF5C0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x14DF5C4", Offset = "0x14DF5C4", VA = "0x14DF5C4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x14DF664", Offset = "0x14DF664", VA = "0x14DF664", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x14DF6AC", Offset = "0x14DF6AC", VA = "0x14DF6AC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x14DF750", Offset = "0x14DF750", VA = "0x14DF750", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int format;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int internalFormat;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly GlTF_Sampler sampler;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly GlTF_Image source;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int target;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int tType;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x14DF180", Offset = "0x14DF180", VA = "0x14DF180")]
	public static GlTF_Texture LookupOrCreate(GlTF_Globals G, GlTF_Image img, GlTF_Sampler sampler, [Optional] string proposedName)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x14DF304", Offset = "0x14DF304", VA = "0x14DF304")]
	private GlTF_Texture(GlTF_Globals globals, string name, GlTF_Image source, GlTF_Sampler sampler)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x14DF358", Offset = "0x14DF358", VA = "0x14DF358", Slot = "4")]
	[IteratorStateMachine(typeof(<IterReferences>d__8))]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x14DF404", Offset = "0x14DF404", VA = "0x14DF404", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200006A")]
public class GlTF_Translation : GlTF_Vector3
{
	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x14DF754", Offset = "0x14DF754", VA = "0x14DF754")]
	public GlTF_Translation(GlTF_Globals globals, Vector3 v)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x14DF808", Offset = "0x14DF808", VA = "0x14DF808")]
	public void WriteTranslation()
	{
	}
}
[Token(Token = "0x200006B")]
public class GlTF_Vector3 : GlTF_FloatArray
{
	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x14DBDA0", Offset = "0x14DBDA0", VA = "0x14DBDA0")]
	public GlTF_Vector3(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x14DF8C0", Offset = "0x14DF8C0", VA = "0x14DF8C0")]
	public GlTF_Vector3(GlTF_Globals globals, Vector3 v)
	{
	}
}
[Token(Token = "0x200006C")]
public class GlTF_Writer
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GlTF_Globals m_globals;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x1700003D")]
	public GlTF_Globals G
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x14DFA94", Offset = "0x14DFA94", VA = "0x14DFA94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public StreamWriter jsonWriter
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x14DBBF0", Offset = "0x14DBBF0", VA = "0x14DBBF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x14DF980", Offset = "0x14DF980", VA = "0x14DF980")]
	public static GlTF_Technique GetTechnique(GlTF_Globals G, IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x14DF9E4", Offset = "0x14DF9E4", VA = "0x14DF9E4")]
	public static GlTF_Technique CreateTechnique(GlTF_Globals G, IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x14DCF00", Offset = "0x14DCF00", VA = "0x14DCF00")]
	public GlTF_Writer(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x14DBBD4", Offset = "0x14DBBD4", VA = "0x14DBBD4")]
	public void Indent()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x14DD0EC", Offset = "0x14DD0EC", VA = "0x14DD0EC")]
	public void IndentIn()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x14DD108", Offset = "0x14DD108", VA = "0x14DD108")]
	public void IndentOut()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x14DE550", Offset = "0x14DE550", VA = "0x14DE550")]
	public void CommaNL()
	{
	}
}
[Token(Token = "0x200006D")]
public class GltfTextureScale
{
	[Token(Token = "0x200006E")]
	public class ThreadData
	{
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x14DFEBC", Offset = "0x14DFEBC", VA = "0x14DFEBC")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Mutex mutex;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x14DFA9C", Offset = "0x14DFA9C", VA = "0x14DFA9C")]
	public static void Point(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x14DFEB4", Offset = "0x14DFEB4", VA = "0x14DFEB4")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x14DFAA4", Offset = "0x14DFAA4", VA = "0x14DFAA4")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x14DFEE8", Offset = "0x14DFEE8", VA = "0x14DFEE8")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x14E0120", Offset = "0x14E0120", VA = "0x14E0120")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x14E02D0", Offset = "0x14E02D0", VA = "0x14E02D0")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x14E0308", Offset = "0x14E0308", VA = "0x14E0308")]
	public GltfTextureScale()
	{
	}
}
[Token(Token = "0x200006F")]
public sealed class GlTF_ScriptableExporter : IDisposable
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<IExportableMaterial, GlTF_Technique.States> m_techniqueStates;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GlTF_Globals m_globals;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_outPath;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GeometryPool, GlTF_Mesh> m_meshCache;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CultureInfo m_previousCulture;

	[Token(Token = "0x1700003F")]
	public HashSet<string> ExportedFiles
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x14E07B0", Offset = "0x14E07B0", VA = "0x14E07B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x14E07B8", Offset = "0x14E07B8", VA = "0x14E07B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public int NumTris
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x14E07C0", Offset = "0x14E07C0", VA = "0x14E07C0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x14E07C8", Offset = "0x14E07C8", VA = "0x14E07C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public GlTF_Globals G
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x14E07D0", Offset = "0x14E07D0", VA = "0x14E07D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public bool AllowHttpUri
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x14E07D8", Offset = "0x14E07D8", VA = "0x14E07D8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x14E07E0", Offset = "0x14E07E0", VA = "0x14E07E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x14E0310", Offset = "0x14E0310", VA = "0x14E0310")]
	private static Renderer GetRenderer(Transform tr)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x14E03D0", Offset = "0x14E03D0", VA = "0x14E03D0")]
	private static Mesh GetMesh(Transform tr)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x14E05E4", Offset = "0x14E05E4", VA = "0x14E05E4")]
	private static void AddAttribute(string name, GlTF_Technique.Type type, GlTF_Technique.Semantic semantic, GlTF_Technique tech)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x14E07EC", Offset = "0x14E07EC", VA = "0x14E07EC")]
	public GlTF_ScriptableExporter(string temporaryDirectory, int gltfVersion)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x14E0980", Offset = "0x14E0980", VA = "0x14E0980", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x14E09C8", Offset = "0x14E09C8", VA = "0x14E09C8")]
	public void BeginExport(string outPath)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x14E0A5C", Offset = "0x14E0A5C", VA = "0x14E0A5C")]
	public void SetMetadata(string generator, string copyright)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x14E0A78", Offset = "0x14E0A78", VA = "0x14E0A78")]
	public string[] EndExport()
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x14E0F14", Offset = "0x14E0F14", VA = "0x14E0F14")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, float value)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x14E1254", Offset = "0x14E1254", VA = "0x14E1254")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, Color value)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x14E13B0", Offset = "0x14E13B0", VA = "0x14E13B0")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, Vector4 value)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x14E150C", Offset = "0x14E150C", VA = "0x14E150C")]
	public void ExportAmbientLight(IExportableMaterial exportableMaterial, Color color)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x14E167C", Offset = "0x14E167C", VA = "0x14E167C")]
	public void ExportLight(ExportUtils.LightPayload payload, IExportableMaterial exportableMaterial)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x14E18E0", Offset = "0x14E18E0", VA = "0x14E18E0")]
	public GlTF_Node ExportMeshPayload(ExportUtils.SceneStatePayload payload, ExportUtils.BaseMeshPayload meshPayload, [CanBeNull] GlTF_Node parent, [Optional] Matrix4x4? localXf)
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x14E1A20", Offset = "0x14E1A20", VA = "0x14E1A20")]
	private GlTF_Node ExportMeshPayload_NoMaterial(ExportUtils.BaseMeshPayload mesh, [CanBeNull] GlTF_Node parent, [Optional] Matrix4x4? localXf)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x14E1D9C", Offset = "0x14E1D9C", VA = "0x14E1D9C")]
	private void ExportMaterial(ExportUtils.SceneStatePayload payload, string meshNamespace, IExportableMaterial exportableMaterial, GlTF_Attributes hack)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x14E388C", Offset = "0x14E388C", VA = "0x14E388C")]
	private ExportFileReference CreateExportFileReferenceFromHttp(string httpUri)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x14E3C78", Offset = "0x14E3C78", VA = "0x14E3C78")]
	private static string HostedUriToLocalFilename(string httpUri)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x14E3718", Offset = "0x14E3718", VA = "0x14E3718")]
	private void AddLights(IExportableMaterial exportableMaterial, ExportUtils.SceneStatePayload payload)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x14E30BC", Offset = "0x14E30BC", VA = "0x14E30BC")]
	public void AddMaterialWithDependencies(IExportableMaterial exportableMaterial, string meshNamespace, GlTF_Attributes hack)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x14E3A08", Offset = "0x14E3A08", VA = "0x14E3A08")]
	public void AddTextureToMaterial(IExportableMaterial exportableMaterial, string texParam, ExportFileReference fileRef)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x14E1058", Offset = "0x14E1058", VA = "0x14E1058")]
	private void AddUniform(IExportableMaterial exportableMaterial, string name, GlTF_Technique.Type type, GlTF_Technique.Semantic semantic, [Optional] GlTF_Node node)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x14E3D40", Offset = "0x14E3D40", VA = "0x14E3D40")]
	private void AddAllAttributes(GlTF_Technique tech, IExportableMaterial exportableMaterial, GlTF_Attributes mesh)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x14E2E94", Offset = "0x14E2E94", VA = "0x14E2E94")]
	private void AddMeshDependencies(ObjectName meshName, IExportableMaterial exportableMaterial, GlTF_Mesh gltfMesh, GlTF_VertexLayout gltfLayout)
	{
	}
}
[Token(Token = "0x2000070")]
public struct GlTF_VertexLayout : IEquatable<GlTF_VertexLayout>
{
	[Token(Token = "0x2000071")]
	public struct AttributeInfo : IEquatable<AttributeInfo>
	{
		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly GlTF_Technique.Type techniqueType;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly GlTF_Accessor.Type accessorType;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly GlTF_Accessor.ComponentType accessorComponentType;

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x14E42E4", Offset = "0x14E42E4", VA = "0x14E42E4")]
		public AttributeInfo(GlTF_Accessor.Type accessorType, GlTF_Accessor.ComponentType accessorComponentType)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x14E4468", Offset = "0x14E4468", VA = "0x14E4468", Slot = "4")]
		public bool Equals(AttributeInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x14E46A0", Offset = "0x14E46A0", VA = "0x14E46A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x14E464C", Offset = "0x14E464C", VA = "0x14E464C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x14E4738", Offset = "0x14E4738", VA = "0x14E4738")]
		public static bool operator ==(AttributeInfo left, AttributeInfo right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x14E4768", Offset = "0x14E4768", VA = "0x14E4768")]
		public static bool operator !=(AttributeInfo left, AttributeInfo right)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly GeometryPool.VertexLayout m_tbLayout;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int m_texcoord0Size;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int m_texcoord1Size;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int m_texcoord2Size;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int m_texcoord3Size;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public readonly AttributeInfo PositionInfo;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly AttributeInfo? NormalInfo;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly AttributeInfo? ColorInfo;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly AttributeInfo? TangentInfo;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool PackVertexIdIntoTexcoord1W;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x14E2C78", Offset = "0x14E2C78", VA = "0x14E2C78")]
	public GlTF_VertexLayout(GlTF_Globals G, GeometryPool.VertexLayout tbLayout)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x14E41A8", Offset = "0x14E41A8", VA = "0x14E41A8")]
	public int GetTexcoordSize(int texcoord)
	{
		return default(int);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x14E4244", Offset = "0x14E4244", VA = "0x14E4244")]
	public AttributeInfo? GetTexcoordInfo(int texcoord)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x14E4358", Offset = "0x14E4358", VA = "0x14E4358", Slot = "4")]
	public bool Equals(GlTF_VertexLayout other)
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x14E449C", Offset = "0x14E449C", VA = "0x14E449C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x14E452C", Offset = "0x14E452C", VA = "0x14E452C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x14E466C", Offset = "0x14E466C", VA = "0x14E466C")]
	public static bool operator ==(GlTF_VertexLayout left, GlTF_VertexLayout right)
	{
		return default(bool);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x14E4170", Offset = "0x14E4170", VA = "0x14E4170")]
	public static bool operator !=(GlTF_VertexLayout left, GlTF_VertexLayout right)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000072")]
public class ObjectName
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string m_name;

	[Token(Token = "0x17000043")]
	public string Name
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x14E4798", Offset = "0x14E4798", VA = "0x14E4798")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x14E47A0", Offset = "0x14E47A0", VA = "0x14E47A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x14E18B8", Offset = "0x14E18B8", VA = "0x14E18B8")]
	public ObjectName(string name)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x14E47A8", Offset = "0x14E47A8", VA = "0x14E47A8")]
	public string ToGltf1Name()
	{
		return null;
	}
}
[Token(Token = "0x2000073")]
public static class GvrAudio
{
	[Token(Token = "0x2000074")]
	public enum Quality
	{
		[Token(Token = "0x40001EE")]
		Stereo,
		[Token(Token = "0x40001EF")]
		Low,
		[Token(Token = "0x40001F0")]
		High
	}

	[Token(Token = "0x2000075")]
	public enum SpatializerData
	{
		[Token(Token = "0x40001F2")]
		Id,
		[Token(Token = "0x40001F3")]
		Type,
		[Token(Token = "0x40001F4")]
		NumChannels,
		[Token(Token = "0x40001F5")]
		ChannelSet,
		[Token(Token = "0x40001F6")]
		Gain,
		[Token(Token = "0x40001F7")]
		DistanceAttenuation,
		[Token(Token = "0x40001F8")]
		MinDistance,
		[Token(Token = "0x40001F9")]
		ZeroOutput
	}

	[Token(Token = "0x2000076")]
	public enum SpatializerType
	{
		[Token(Token = "0x40001FB")]
		Source,
		[Token(Token = "0x40001FC")]
		Soundfield
	}

	[Token(Token = "0x2000077")]
	private struct RoomProperties
	{
		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sampleRate;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numChannels;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int framesPerBuffer;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x40001D8")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x40001D9")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x40001DA")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x40001DB")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x40001DC")]
	public const float minGainDb = -24f;

	[Token(Token = "0x40001DD")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x40001DE")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x40001DF")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x40001E0")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x40001E1")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x40001E2")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x40001E3")]
	public const int numFoaChannels = 4;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static Bounds bounds;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static List<GvrAudioRoom> enabledRooms;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static bool initialized;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static Transform listenerTransform;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static int occlusionMaskValue;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x40001EC")]
	private const string pluginName = "audioplugingvrunity";

	[Token(Token = "0x17000044")]
	public static int SampleRate
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x14E4864", Offset = "0x14E4864", VA = "0x14E4864")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000045")]
	public static int NumChannels
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x14E48BC", Offset = "0x14E48BC", VA = "0x14E48BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000046")]
	public static int FramesPerBuffer
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x14E4914", Offset = "0x14E4914", VA = "0x14E4914")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x14E496C", Offset = "0x14E496C", VA = "0x14E496C")]
	public static void Initialize(GvrAudioListener listener, Quality quality)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x14E4C74", Offset = "0x14E4C74", VA = "0x14E4C74")]
	public static void Shutdown(GvrAudioListener listener)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x14E4E04", Offset = "0x14E4E04", VA = "0x14E4E04")]
	public static void UpdateAudioListener(float globalGainDb, LayerMask occlusionMask)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x14E4F4C", Offset = "0x14E4F4C", VA = "0x14E4F4C")]
	public static int CreateAudioSoundfield()
	{
		return default(int);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x14E5044", Offset = "0x14E5044", VA = "0x14E5044")]
	public static void UpdateAudioSoundfield(int id, GvrAudioSoundfield soundfield)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x14E5168", Offset = "0x14E5168", VA = "0x14E5168")]
	public static int CreateAudioSource(bool hrtfEnabled)
	{
		return default(int);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x14E5264", Offset = "0x14E5264", VA = "0x14E5264")]
	public static void DestroyAudioSource(int id)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x14E535C", Offset = "0x14E535C", VA = "0x14E535C")]
	public static void UpdateAudioSource(int id, GvrAudioSource source, float currentOcclusion)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x14E55E4", Offset = "0x14E55E4", VA = "0x14E55E4")]
	public static void UpdateAudioRoom(GvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x14E5AC4", Offset = "0x14E5AC4", VA = "0x14E5AC4")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x14E4EC0", Offset = "0x14E4EC0", VA = "0x14E4EC0")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x14E5D6C", Offset = "0x14E5D6C", VA = "0x14E5D6C")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x14E5E84", Offset = "0x14E5E84", VA = "0x14E5E84")]
	public static bool IsListenerInsideRoom(GvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x14E604C", Offset = "0x14E604C", VA = "0x14E604C")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x14E58D8", Offset = "0x14E58D8", VA = "0x14E58D8")]
	private static RoomProperties GetRoomProperties(GvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[PreserveSig]
	[Token(Token = "0x600023B")]
	[Address(RVA = "0x14E4ED4", Offset = "0x14E4ED4", VA = "0x14E4ED4")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x600023C")]
	[Address(RVA = "0x14E4FC8", Offset = "0x14E4FC8", VA = "0x14E4FC8")]
	private static extern int CreateSoundfield(int numChannels);

	[PreserveSig]
	[Token(Token = "0x600023D")]
	[Address(RVA = "0x14E51E8", Offset = "0x14E51E8", VA = "0x14E51E8")]
	private static extern int CreateSoundObject(bool enableHrtf);

	[PreserveSig]
	[Token(Token = "0x600023E")]
	[Address(RVA = "0x14E52E0", Offset = "0x14E52E0", VA = "0x14E52E0")]
	private static extern void DestroySource(int sourceId);

	[PreserveSig]
	[Token(Token = "0x600023F")]
	[Address(RVA = "0x14E50E4", Offset = "0x14E50E4", VA = "0x14E50E4")]
	private static extern void SetSourceBypassRoomEffects(int sourceId, bool bypassRoomEffects);

	[PreserveSig]
	[Token(Token = "0x6000240")]
	[Address(RVA = "0x14E5430", Offset = "0x14E5430", VA = "0x14E5430")]
	private static extern void SetSourceDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x6000241")]
	[Address(RVA = "0x14E54C4", Offset = "0x14E54C4", VA = "0x14E54C4")]
	private static extern void SetSourceListenerDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x6000242")]
	[Address(RVA = "0x14E5558", Offset = "0x14E5558", VA = "0x14E5558")]
	private static extern void SetSourceOcclusionIntensity(int sourceId, float intensity);

	[PreserveSig]
	[Token(Token = "0x6000243")]
	[Address(RVA = "0x14E5A48", Offset = "0x14E5A48", VA = "0x14E5A48")]
	private static extern void SetRoomProperties(IntPtr roomProperties);

	[PreserveSig]
	[Token(Token = "0x6000244")]
	[Address(RVA = "0x14E4BD8", Offset = "0x14E4BD8", VA = "0x14E4BD8")]
	private static extern void Initialize(int quality, int sampleRate, int numChannels, int framesPerBuffer);

	[PreserveSig]
	[Token(Token = "0x6000245")]
	[Address(RVA = "0x14E4DA0", Offset = "0x14E4DA0", VA = "0x14E4DA0")]
	private static extern void Shutdown();
}
[Token(Token = "0x2000078")]
[AddComponentMenu("GoogleVR/Audio/GvrAudioListener")]
public class GvrAudioListener : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float globalGainDb;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask occlusionMask;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GvrAudio.Quality quality;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x14E64B8", Offset = "0x14E64B8", VA = "0x14E64B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x14E6514", Offset = "0x14E6514", VA = "0x14E6514")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x14E657C", Offset = "0x14E657C", VA = "0x14E657C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x14E65D0", Offset = "0x14E65D0", VA = "0x14E65D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x14E6638", Offset = "0x14E6638", VA = "0x14E6638")]
	public GvrAudioListener()
	{
	}
}
[Token(Token = "0x2000079")]
[AddComponentMenu("GoogleVR/Audio/GvrAudioRoom")]
public class GvrAudioRoom : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4000220")]
		Transparent,
		[Token(Token = "0x4000221")]
		AcousticCeilingTiles,
		[Token(Token = "0x4000222")]
		BrickBare,
		[Token(Token = "0x4000223")]
		BrickPainted,
		[Token(Token = "0x4000224")]
		ConcreteBlockCoarse,
		[Token(Token = "0x4000225")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000226")]
		CurtainHeavy,
		[Token(Token = "0x4000227")]
		FiberglassInsulation,
		[Token(Token = "0x4000228")]
		GlassThin,
		[Token(Token = "0x4000229")]
		GlassThick,
		[Token(Token = "0x400022A")]
		Grass,
		[Token(Token = "0x400022B")]
		LinoleumOnConcrete,
		[Token(Token = "0x400022C")]
		Marble,
		[Token(Token = "0x400022D")]
		Metal,
		[Token(Token = "0x400022E")]
		ParquetOnConcrete,
		[Token(Token = "0x400022F")]
		PlasterRough,
		[Token(Token = "0x4000230")]
		PlasterSmooth,
		[Token(Token = "0x4000231")]
		PlywoodPanel,
		[Token(Token = "0x4000232")]
		PolishedConcreteOrTile,
		[Token(Token = "0x4000233")]
		Sheetrock,
		[Token(Token = "0x4000234")]
		WaterOrIceSurface,
		[Token(Token = "0x4000235")]
		WoodCeiling,
		[Token(Token = "0x4000236")]
		WoodPanel
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x14E6664", Offset = "0x14E6664", VA = "0x14E6664")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x14E66C4", Offset = "0x14E66C4", VA = "0x14E66C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x14E671C", Offset = "0x14E671C", VA = "0x14E671C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x14E677C", Offset = "0x14E677C", VA = "0x14E677C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x14E6848", Offset = "0x14E6848", VA = "0x14E6848")]
	public GvrAudioRoom()
	{
	}
}
[Token(Token = "0x200007B")]
[AddComponentMenu("GoogleVR/Audio/GvrAudioSoundfield")]
public class GvrAudioSoundfield : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gainDb;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnAwake;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip soundfieldClip0102;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip soundfieldClip0304;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool soundfieldLoop;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool soundfieldMute;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(-3f, 3f)]
	[SerializeField]
	private float soundfieldPitch;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 256f)]
	[SerializeField]
	private int soundfieldPriority;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	[SerializeField]
	private float soundfieldSpatialBlend;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 5f)]
	[SerializeField]
	private float soundfieldDopplerLevel;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[SerializeField]
	private float soundfieldVolume;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioRolloffMode soundfieldRolloffMode;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float soundfieldMaxDistance;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float soundfieldMinDistance;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int id;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPaused;

	[Token(Token = "0x17000047")]
	public AudioClip clip0102
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x14E68C8", Offset = "0x14E68C8", VA = "0x14E68C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x14E68D0", Offset = "0x14E68D0", VA = "0x14E68D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public AudioClip clip0304
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x14E6910", Offset = "0x14E6910", VA = "0x14E6910")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x14E6918", Offset = "0x14E6918", VA = "0x14E6918")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool isPlaying
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x14E695C", Offset = "0x14E695C", VA = "0x14E695C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public bool loop
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x14E699C", Offset = "0x14E699C", VA = "0x14E699C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x14E69A4", Offset = "0x14E69A4", VA = "0x14E69A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public bool mute
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x14E6A10", Offset = "0x14E6A10", VA = "0x14E6A10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x14E6A18", Offset = "0x14E6A18", VA = "0x14E6A18")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float pitch
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x14E6A84", Offset = "0x14E6A84", VA = "0x14E6A84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x14E6A8C", Offset = "0x14E6A8C", VA = "0x14E6A8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int priority
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x14E6AF4", Offset = "0x14E6AF4", VA = "0x14E6AF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x14E6AFC", Offset = "0x14E6AFC", VA = "0x14E6AFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float spatialBlend
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x14E6B64", Offset = "0x14E6B64", VA = "0x14E6B64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x14E6B6C", Offset = "0x14E6B6C", VA = "0x14E6B6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float dopplerLevel
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x14E6BD4", Offset = "0x14E6BD4", VA = "0x14E6BD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x14E6BDC", Offset = "0x14E6BDC", VA = "0x14E6BDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float time
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x14E6C44", Offset = "0x14E6C44", VA = "0x14E6C44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x14E6C84", Offset = "0x14E6C84", VA = "0x14E6C84")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public int timeSamples
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x14E6CF4", Offset = "0x14E6CF4", VA = "0x14E6CF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x14E6D34", Offset = "0x14E6D34", VA = "0x14E6D34")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float volume
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x14E6D9C", Offset = "0x14E6D9C", VA = "0x14E6D9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x14E6DA4", Offset = "0x14E6DA4", VA = "0x14E6DA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x14E6E0C", Offset = "0x14E6E0C", VA = "0x14E6E0C")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x14E6E14", Offset = "0x14E6E14", VA = "0x14E6E14")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float maxDistance
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x14E6ED8", Offset = "0x14E6ED8", VA = "0x14E6ED8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x14E6EE0", Offset = "0x14E6EE0", VA = "0x14E6EE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float minDistance
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x14E6F6C", Offset = "0x14E6F6C", VA = "0x14E6F6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x14E6F74", Offset = "0x14E6F74", VA = "0x14E6F74")]
		set
		{
		}
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x14E6FF4", Offset = "0x14E6FF4", VA = "0x14E6FF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x14E7520", Offset = "0x14E7520", VA = "0x14E7520")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x14E76B0", Offset = "0x14E76B0", VA = "0x14E76B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x14E76E4", Offset = "0x14E76E4", VA = "0x14E76E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x14E77B8", Offset = "0x14E77B8", VA = "0x14E77B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x14E786C", Offset = "0x14E786C", VA = "0x14E786C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x14E7944", Offset = "0x14E7944", VA = "0x14E7944")]
	private void Update()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x14E7878", Offset = "0x14E7878", VA = "0x14E7878")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x14E7694", Offset = "0x14E7694", VA = "0x14E7694")]
	public void Play()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x14E7B7C", Offset = "0x14E7B7C", VA = "0x14E7B7C")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x14E7A90", Offset = "0x14E7A90", VA = "0x14E7A90")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x14E7BAC", Offset = "0x14E7BAC", VA = "0x14E7BAC")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x14E7C1C", Offset = "0x14E7C1C", VA = "0x14E7C1C")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x14E774C", Offset = "0x14E774C", VA = "0x14E774C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x14E78E0", Offset = "0x14E78E0", VA = "0x14E78E0")]
	public void UnPause()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x14E75BC", Offset = "0x14E75BC", VA = "0x14E75BC")]
	private bool InitializeSoundfield()
	{
		return default(bool);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x14E7C8C", Offset = "0x14E7C8C", VA = "0x14E7C8C")]
	private void ShutdownSoundfield()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x14E7D38", Offset = "0x14E7D38", VA = "0x14E7D38")]
	private void InitializeChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x14E7E58", Offset = "0x14E7E58", VA = "0x14E7E58")]
	private void ShutdownChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x14E7EA4", Offset = "0x14E7EA4", VA = "0x14E7EA4")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x14E7488", Offset = "0x14E7488", VA = "0x14E7488")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x14E7EA8", Offset = "0x14E7EA8", VA = "0x14E7EA8")]
	public GvrAudioSoundfield()
	{
	}
}
[Token(Token = "0x200007C")]
[AddComponentMenu("GoogleVR/Audio/GvrAudioSource")]
public class GvrAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bypassRoomEffects;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float directivityAlpha;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float directivitySharpness;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gainDb;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool occlusionEnabled;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool playOnAwake;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool disableOnStop;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip sourceClip;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool sourceLoop;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool sourceMute;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[Range(-3f, 3f)]
	private float sourcePitch;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Range(0f, 256f)]
	private int sourcePriority;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[Range(0f, 1f)]
	private float sourceSpatialBlend;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 5f)]
	[SerializeField]
	private float sourceDopplerLevel;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 360f)]
	[SerializeField]
	private float sourceSpread;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private AudioRolloffMode sourceRolloffMode;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float sourceMaxDistance;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float sourceMinDistance;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool hrtfEnabled;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int id;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentOcclusion;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPaused;

	[Token(Token = "0x17000056")]
	public AudioClip clip
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x14E7EE4", Offset = "0x14E7EE4", VA = "0x14E7EE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x14E7EEC", Offset = "0x14E7EEC", VA = "0x14E7EEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool isPlaying
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x14E7F88", Offset = "0x14E7F88", VA = "0x14E7F88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public bool loop
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x14E8010", Offset = "0x14E8010", VA = "0x14E8010")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x14E8018", Offset = "0x14E8018", VA = "0x14E8018")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public bool mute
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x14E80B4", Offset = "0x14E80B4", VA = "0x14E80B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x14E80BC", Offset = "0x14E80BC", VA = "0x14E80BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float pitch
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x14E8158", Offset = "0x14E8158", VA = "0x14E8158")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x14E8160", Offset = "0x14E8160", VA = "0x14E8160")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int priority
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x14E81FC", Offset = "0x14E81FC", VA = "0x14E81FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x14E8204", Offset = "0x14E8204", VA = "0x14E8204")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public float spatialBlend
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x14E82A0", Offset = "0x14E82A0", VA = "0x14E82A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0x14E82A8", Offset = "0x14E82A8", VA = "0x14E82A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public float dopplerLevel
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x14E8344", Offset = "0x14E8344", VA = "0x14E8344")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x14E834C", Offset = "0x14E834C", VA = "0x14E834C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public float spread
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x14E83E8", Offset = "0x14E83E8", VA = "0x14E83E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x14E83F0", Offset = "0x14E83F0", VA = "0x14E83F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public float time
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x14E848C", Offset = "0x14E848C", VA = "0x14E848C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000296")]
		[Address(RVA = "0x14E8514", Offset = "0x14E8514", VA = "0x14E8514")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public int timeSamples
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x14E85AC", Offset = "0x14E85AC", VA = "0x14E85AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x14E8634", Offset = "0x14E8634", VA = "0x14E8634")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float volume
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x14E86CC", Offset = "0x14E86CC", VA = "0x14E86CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x14E86D4", Offset = "0x14E86D4", VA = "0x14E86D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x14E8770", Offset = "0x14E8770", VA = "0x14E8770")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x14E8778", Offset = "0x14E8778", VA = "0x14E8778")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public float maxDistance
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x14E8850", Offset = "0x14E8850", VA = "0x14E8850")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x14E8858", Offset = "0x14E8858", VA = "0x14E8858")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public float minDistance
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x14E8918", Offset = "0x14E8918", VA = "0x14E8918")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x14E8920", Offset = "0x14E8920", VA = "0x14E8920")]
		set
		{
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x14E89D4", Offset = "0x14E89D4", VA = "0x14E89D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x14E8CC0", Offset = "0x14E8CC0", VA = "0x14E8CC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x14E8F5C", Offset = "0x14E8F5C", VA = "0x14E8F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x14E8F88", Offset = "0x14E8F88", VA = "0x14E8F88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x14E903C", Offset = "0x14E903C", VA = "0x14E903C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x14E9098", Offset = "0x14E9098", VA = "0x14E9098")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x14E91B0", Offset = "0x14E91B0", VA = "0x14E91B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x14E9324", Offset = "0x14E9324", VA = "0x14E9324")]
	public void GetOutputData(float[] samples, int channel)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x14E93C4", Offset = "0x14E93C4", VA = "0x14E93C4")]
	public void GetSpectrumData(float[] samples, int channel, FFTWindow window)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x14E90A4", Offset = "0x14E90A4", VA = "0x14E90A4")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x14E8E84", Offset = "0x14E8E84", VA = "0x14E8E84")]
	public void Play()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x14E9478", Offset = "0x14E9478", VA = "0x14E9478")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x14E9564", Offset = "0x14E9564", VA = "0x14E9564")]
	public void PlayOneShot(AudioClip clip)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x14E956C", Offset = "0x14E956C", VA = "0x14E956C")]
	public void PlayOneShot(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x14E966C", Offset = "0x14E966C", VA = "0x14E966C")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x14E9758", Offset = "0x14E9758", VA = "0x14E9758")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x14E97F0", Offset = "0x14E97F0", VA = "0x14E97F0")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x14E8FB0", Offset = "0x14E8FB0", VA = "0x14E8FB0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x14E9130", Offset = "0x14E9130", VA = "0x14E9130")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x14E8D14", Offset = "0x14E8D14", VA = "0x14E8D14")]
	private bool InitializeSource()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x14E9888", Offset = "0x14E9888", VA = "0x14E9888")]
	private void ShutdownSource()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x14E993C", Offset = "0x14E993C", VA = "0x14E993C")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x14E8C28", Offset = "0x14E8C28", VA = "0x14E8C28")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x14E9940", Offset = "0x14E9940", VA = "0x14E9940")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x14E9A60", Offset = "0x14E9A60", VA = "0x14E9A60")]
	private void DrawDirectivityGizmo(Transform target, float alpha, float sharpness, int resolution)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x14E9E18", Offset = "0x14E9E18", VA = "0x14E9E18")]
	public GvrAudioSource()
	{
	}
}
[Token(Token = "0x200007D")]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Sonic Ether/SE Natural Bloom and Dirty Lens")]
[RequireComponent(typeof(Camera))]
public class SENaturalBloomAndDirtyLens : MonoBehaviour
{
	[Token(Token = "0x200007E")]
	public enum DepthBlendFunction
	{
		[Token(Token = "0x4000276")]
		Exponential,
		[Token(Token = "0x4000277")]
		ExponentialSquared
	}

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSupported;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float blurSize;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera cam;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 0.4f)]
	public float bloomIntensity;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float bloomScatterFactor;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float lensDirtScatterFactor;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 0.95f)]
	public float lensDirtIntensity;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D lensDirtTexture;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool inputIsHDR;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool lowQuality;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool depthBlending;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public DepthBlendFunction depthBlendFunction;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float depthBlendFactor;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float maxDepthBlendFactor;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float depthScatterFactor;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x14E9E64", Offset = "0x14E9E64", VA = "0x14E9E64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x14E9F5C", Offset = "0x14E9F5C", VA = "0x14E9F5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x14E9FE8", Offset = "0x14E9FE8", VA = "0x14E9FE8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x14EA6F0", Offset = "0x14EA6F0", VA = "0x14EA6F0")]
	public SENaturalBloomAndDirtyLens()
	{
	}
}
[Token(Token = "0x200007F")]
[ExecuteInEditMode]
public class FXAA : MonoBehaviour
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x14EA720", Offset = "0x14EA720", VA = "0x14EA720")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x14EA834", Offset = "0x14EA834", VA = "0x14EA834")]
	public FXAA()
	{
	}
}
[Token(Token = "0x2000080")]
[ExecuteInEditMode]
public class TiltShift : MonoBehaviour
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x14EA83C", Offset = "0x14EA83C", VA = "0x14EA83C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x14EA950", Offset = "0x14EA950", VA = "0x14EA950")]
	public TiltShift()
	{
	}
}
namespace uGIF
{
	[Token(Token = "0x2000081")]
	public class GIFEncoder
	{
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useGlobalColorTable;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color32? transparent;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int repeat;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int dispose;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int quality;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int delay;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int width;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int height;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int transIndex;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool started;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MemoryStream ms;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color32[] pixels;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte[] indexedPixels;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte[] prevIndexedPixels;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int colorDepth;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private byte[] colorTab;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] usedEntry;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int palSize;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool firstFrame;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NeuQuant nq;

		[Token(Token = "0x17000065")]
		public float FPS
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x14EA958", Offset = "0x14EA958", VA = "0x14EA958")]
			set
			{
			}
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x14EAA48", Offset = "0x14EAA48", VA = "0x14EAA48")]
		public void AddFrame(Image im)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x14EB27C", Offset = "0x14EB27C", VA = "0x14EB27C")]
		public void Finish()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x14EB338", Offset = "0x14EB338", VA = "0x14EB338")]
		public void Start(MemoryStream os)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x14EAB68", Offset = "0x14EAB68", VA = "0x14EAB68")]
		private void RemapPixels()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x14EB914", Offset = "0x14EB914", VA = "0x14EB914")]
		private int FindClosest(Color32 c)
		{
			return default(int);
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x14EB030", Offset = "0x14EB030", VA = "0x14EB030")]
		private void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x14EB18C", Offset = "0x14EB18C", VA = "0x14EB18C")]
		private void WriteImageDesc()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x14EADD8", Offset = "0x14EADD8", VA = "0x14EADD8")]
		private void WriteLSD()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x14EAF30", Offset = "0x14EAF30", VA = "0x14EAF30")]
		private void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x14EAEA8", Offset = "0x14EAEA8", VA = "0x14EAEA8")]
		private void WritePalette()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x14EB204", Offset = "0x14EB204", VA = "0x14EB204")]
		private void WritePixels()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x14EBA18", Offset = "0x14EBA18", VA = "0x14EBA18")]
		private void WriteShort(int value)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x14EB3E0", Offset = "0x14EB3E0", VA = "0x14EB3E0")]
		private void WriteString(string s)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x14EBCFC", Offset = "0x14EBCFC", VA = "0x14EBCFC")]
		public GIFEncoder()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public class Image
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int width;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int height;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] pixels;

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x14EBD74", Offset = "0x14EBD74", VA = "0x14EBD74")]
		public Image(Texture2D f)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x14EBDD8", Offset = "0x14EBDD8", VA = "0x14EBDD8")]
		public Image(Image image)
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x14EBE6C", Offset = "0x14EBE6C", VA = "0x14EBE6C")]
		public Image(int width, int height)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x14EBEDC", Offset = "0x14EBEDC", VA = "0x14EBEDC")]
		public Image(int width, int height, Color32[] pixels)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x14EBF18", Offset = "0x14EBF18", VA = "0x14EBF18")]
		public void DrawImage(Image image, int i, int i2)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x14EBF58", Offset = "0x14EBF58", VA = "0x14EBF58")]
		public Color32 GetPixel(int tw, int th)
		{
			return default(Color32);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x14EBF90", Offset = "0x14EBF90", VA = "0x14EBF90")]
		public void Flip()
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x14EC060", Offset = "0x14EC060", VA = "0x14EC060")]
		public void Resize(int scale)
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x14EC170", Offset = "0x14EC170", VA = "0x14EC170")]
		public void ResizeBilinear(int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x14EC564", Offset = "0x14EC564", VA = "0x14EC564")]
		private Color32 ColorLerpUnclamped(Color A, Color B, float P)
		{
			return default(Color32);
		}
	}
	[Token(Token = "0x2000083")]
	public class LZWEncoder
	{
		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x14EBACC", Offset = "0x14EBACC", VA = "0x14EBACC")]
		public LZWEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x14EC87C", Offset = "0x14EC87C", VA = "0x14EC87C")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x14EC980", Offset = "0x14EC980", VA = "0x14EC980")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x14EC9C4", Offset = "0x14EC9C4", VA = "0x14EC9C4")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x14ECB5C", Offset = "0x14ECB5C", VA = "0x14ECB5C")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x14EBC44", Offset = "0x14EBC44", VA = "0x14EBC44")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x14EC8D0", Offset = "0x14EC8D0", VA = "0x14EC8D0")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x14ECDE0", Offset = "0x14ECDE0", VA = "0x14ECDE0")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x14ECDF0", Offset = "0x14ECDF0", VA = "0x14ECDF0")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x14ECA14", Offset = "0x14ECA14", VA = "0x14ECA14")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x2000084")]
	public class NeuQuant
	{
		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int netsize;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int prime1;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int prime2;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int prime3;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int prime4;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int minpicturebytes;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int maxnetpos;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int netbiasshift;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int ncycles;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int intbiasshift;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int intbias;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int gammashift;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int gamma;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int betashift;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int beta;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly int betagamma;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly int initrad;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static readonly int radiusbiasshift;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int radiusbias;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static readonly int initradius;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int radiusdec;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static readonly int alphabiasshift;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly int initalpha;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int alphadec;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static readonly int radbiasshift;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly int radbias;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static readonly int alpharadbshift;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly int alpharadbias;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color32[] thepicture;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lengthcount;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int samplefac;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[][] network;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] netindex;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] bias;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] freq;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] radpower;

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x14EB46C", Offset = "0x14EB46C", VA = "0x14EB46C")]
		public NeuQuant(Color32[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x14ECEE0", Offset = "0x14ECEE0", VA = "0x14ECEE0")]
		private byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x14ED150", Offset = "0x14ED150", VA = "0x14ED150")]
		private void Inxbuild()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x14ED424", Offset = "0x14ED424", VA = "0x14ED424")]
		private void Learn()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x14EB6DC", Offset = "0x14EB6DC", VA = "0x14EB6DC")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x14EB6B4", Offset = "0x14EB6B4", VA = "0x14EB6B4")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x14EDF24", Offset = "0x14EDF24", VA = "0x14EDF24")]
		private void Unbiasnet()
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x14EDC8C", Offset = "0x14EDC8C", VA = "0x14EDC8C")]
		private void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x14EDB78", Offset = "0x14EDB78", VA = "0x14EDB78")]
		private void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x14ED8E0", Offset = "0x14ED8E0", VA = "0x14ED8E0")]
		private int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace ODS
{
	[Token(Token = "0x2000085")]
	public class HybridCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000086")]
		public enum OdsRendererType
		{
			[Token(Token = "0x40002E7")]
			Slice,
			[Token(Token = "0x40002E8")]
			StereoCubemap,
			[Token(Token = "0x40002E9")]
			Count
		}

		[Token(Token = "0x2000087")]
		[CompilerGenerated]
		private sealed class <Render>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HybridCamera <>4__this;

			[Token(Token = "0x40002ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform node;

			[Token(Token = "0x40002EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <renderCameraObject>5__2;

			[Token(Token = "0x40002EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ParticleSystemRenderer[] <renderers>5__3;

			[Token(Token = "0x40002F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <origRotation>5__4;

			[Token(Token = "0x1700006B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000306")]
				[Address(RVA = "0x179BEE8", Offset = "0x179BEE8", VA = "0x179BEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000308")]
				[Address(RVA = "0x179BF30", Offset = "0x179BF30", VA = "0x179BF30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000303")]
			[Address(RVA = "0x179B640", Offset = "0x179B640", VA = "0x179B640")]
			[DebuggerHidden]
			public <Render>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000304")]
			[Address(RVA = "0x179B668", Offset = "0x179B668", VA = "0x179B668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000305")]
			[Address(RVA = "0x179B66C", Offset = "0x179B66C", VA = "0x179B66C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000307")]
			[Address(RVA = "0x179BEF0", Offset = "0x179BEF0", VA = "0x179BEF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002CC")]
		private const int MaxRenders = 1000;

		[Token(Token = "0x40002CD")]
		private const int MaxImageWidth = 6000;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interPupillaryDistance;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int imageWidth;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastImageWidth;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int imageHeight;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int eyeImageWidth;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool vr180;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool lastvr180;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OdsRendererType rendererType;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private OdsRendererType lastRendererType;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float particleScaleFactor;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bloomRadius;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastBloomRadius;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool HDR;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool opaqueBackground;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RenderTexture stitched;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderTexture bloomed;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RenderTexture finalImage;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D returnImage;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string outputFolder;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string basename;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int frameCount;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isRendering;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OdsRenderer odsRenderer;

		[Token(Token = "0x17000066")]
		public bool IsRendering
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x14EE0F0", Offset = "0x14EE0F0", VA = "0x14EE0F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000067")]
		public bool CollapseIpd
		{
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0x14EE0F8", Offset = "0x14EE0F8", VA = "0x14EE0F8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0x14EE100", Offset = "0x14EE100", VA = "0x14EE100")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public int FrameCount
		{
			[Token(Token = "0x60002F5")]
			[Address(RVA = "0x14EE10C", Offset = "0x14EE10C", VA = "0x14EE10C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000069")]
		public Texture2D Image
		{
			[Token(Token = "0x60002F6")]
			[Address(RVA = "0x14EE114", Offset = "0x14EE114", VA = "0x14EE114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public RenderTexture FinalImage
		{
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x14EE11C", Offset = "0x14EE11C", VA = "0x14EE11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x14EE124", Offset = "0x14EE124", VA = "0x14EE124")]
		public void SetOdsRendererType(OdsRendererType type)
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x14EE21C", Offset = "0x14EE21C", VA = "0x14EE21C")]
		public void EnableVr180(bool enable)
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x14EE248", Offset = "0x14EE248", VA = "0x14EE248")]
		private void SetupTextures()
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x14EE460", Offset = "0x14EE460", VA = "0x14EE460")]
		public void Awake()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x14EE5B8", Offset = "0x14EE5B8", VA = "0x14EE5B8")]
		[IteratorStateMachine(typeof(<Render>d__42))]
		public IEnumerator Render(Transform node)
		{
			return null;
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x14EE62C", Offset = "0x14EE62C", VA = "0x14EE62C")]
		public void RenderAll(Transform node)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x14EE64C", Offset = "0x14EE64C", VA = "0x14EE64C")]
		private void SbsComposite(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x14EE8C4", Offset = "0x14EE8C4", VA = "0x14EE8C4")]
		private void StackedComposite(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x14EEA64", Offset = "0x14EEA64", VA = "0x14EEA64")]
		private void StackedBloomAndComposite(RenderTexture src, RenderTexture dst, MonoBehaviour behavior, MethodInfo renderImageMethod)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x14EED14", Offset = "0x14EED14", VA = "0x14EED14")]
		private void SbsBloomAndComposite(RenderTexture src, RenderTexture dst, MonoBehaviour behavior, MethodInfo renderImageMethod)
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x14EF264", Offset = "0x14EF264", VA = "0x14EF264")]
		public HybridCamera()
		{
		}
	}
	[Token(Token = "0x2000088")]
	public class OdsRenderer
	{
		[Token(Token = "0x2000089")]
		[CompilerGenerated]
		private sealed class <Render>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700006D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000312")]
				[Address(RVA = "0x179C020", Offset = "0x179C020", VA = "0x179C020", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700006E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000314")]
				[Address(RVA = "0x179C068", Offset = "0x179C068", VA = "0x179C068", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600030F")]
			[Address(RVA = "0x179BFB8", Offset = "0x179BFB8", VA = "0x179BFB8")]
			[DebuggerHidden]
			public <Render>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000310")]
			[Address(RVA = "0x179BFE8", Offset = "0x179BFE8", VA = "0x179BFE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000311")]
			[Address(RVA = "0x179BFEC", Offset = "0x179BFEC", VA = "0x179BFEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000313")]
			[Address(RVA = "0x179C028", Offset = "0x179C028", VA = "0x179C028", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int imageWidth;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int eyeImageWidth;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int bloomRadius;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool vr180;

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x179BF38", Offset = "0x179BF38", VA = "0x179BF38", Slot = "4")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x179BF3C", Offset = "0x179BF3C", VA = "0x179BF3C", Slot = "5")]
		public virtual void SetVr180(bool enable)
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x179BF48", Offset = "0x179BF48", VA = "0x179BF48", Slot = "6")]
		public virtual void SetWidth(int width, int eyeWidth, int bloomRad)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x179BF54", Offset = "0x179BF54", VA = "0x179BF54", Slot = "7")]
		public virtual void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x179BF58", Offset = "0x179BF58", VA = "0x179BF58", Slot = "8")]
		[IteratorStateMachine(typeof(<Render>d__8))]
		public virtual IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x179BFE0", Offset = "0x179BFE0", VA = "0x179BFE0")]
		public OdsRenderer()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class OdsSlice : OdsRenderer
	{
		[Token(Token = "0x200008B")]
		private enum Eye
		{
			[Token(Token = "0x40002FA")]
			Right,
			[Token(Token = "0x40002FB")]
			Left
		}

		[Token(Token = "0x200008C")]
		private enum Hemisphere
		{
			[Token(Token = "0x40002FD")]
			Top,
			[Token(Token = "0x40002FE")]
			Bottom
		}

		[Token(Token = "0x200008D")]
		[CompilerGenerated]
		private sealed class <Render>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OdsSlice <>4__this;

			[Token(Token = "0x4000302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Camera renderCamera;

			[Token(Token = "0x4000303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform node;

			[Token(Token = "0x4000304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ipd;

			[Token(Token = "0x4000305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool CollapseIpd;

			[Token(Token = "0x4000306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int MaxRenders;

			[Token(Token = "0x4000307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RenderTexture output;

			[Token(Token = "0x4000308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <dTheta>5__2;

			[Token(Token = "0x4000309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector4 <rectXform>5__3;

			[Token(Token = "0x400030A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <rotation>5__4;

			[Token(Token = "0x400030B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <odsCameraPos>5__5;

			[Token(Token = "0x400030C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector4 <shaderEyeOffset>5__6;

			[Token(Token = "0x400030D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <rangeEnd>5__7;

			[Token(Token = "0x400030E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <angleOffset>5__8;

			[Token(Token = "0x400030F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <eye>5__9;

			[Token(Token = "0x4000310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float <eyeOffset>5__10;

			[Token(Token = "0x4000311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <hemisphere>5__11;

			[Token(Token = "0x4000312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float <phi>5__12;

			[Token(Token = "0x4000313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <i>5__13;

			[Token(Token = "0x1700006F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600031C")]
				[Address(RVA = "0x179C9BC", Offset = "0x179C9BC", VA = "0x179C9BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000070")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600031E")]
				[Address(RVA = "0x179CA04", Offset = "0x179CA04", VA = "0x179CA04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000319")]
			[Address(RVA = "0x179C254", Offset = "0x179C254", VA = "0x179C254")]
			[DebuggerHidden]
			public <Render>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600031A")]
			[Address(RVA = "0x179C284", Offset = "0x179C284", VA = "0x179C284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600031B")]
			[Address(RVA = "0x179C288", Offset = "0x179C288", VA = "0x179C288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600031D")]
			[Address(RVA = "0x179C9C4", Offset = "0x179C9C4", VA = "0x179C9C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture cameraTexture;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material warp;

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x179C070", Offset = "0x179C070", VA = "0x179C070", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x179C0F0", Offset = "0x179C0F0", VA = "0x179C0F0", Slot = "7")]
		public override void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x179C19C", Offset = "0x179C19C", VA = "0x179C19C", Slot = "8")]
		[IteratorStateMachine(typeof(<Render>d__6))]
		public override IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x179C27C", Offset = "0x179C27C", VA = "0x179C27C")]
		public OdsSlice()
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class OdsStereoCubemap : OdsRenderer
	{
		[Token(Token = "0x200008F")]
		[CompilerGenerated]
		private sealed class <Render>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400031A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OdsStereoCubemap <>4__this;

			[Token(Token = "0x400031B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float ipd;

			[Token(Token = "0x400031C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Camera renderCamera;

			[Token(Token = "0x400031D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int MaxRenders;

			[Token(Token = "0x400031E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RenderTexture output;

			[Token(Token = "0x400031F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float[] <ipdScale>5__2;

			[Token(Token = "0x4000320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RenderTexture[] <outputs>5__3;

			[Token(Token = "0x4000321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4 <shaderEyeOffset>5__4;

			[Token(Token = "0x4000322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <eye>5__5;

			[Token(Token = "0x4000323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <face>5__6;

			[Token(Token = "0x17000071")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000328")]
				[Address(RVA = "0x179D560", Offset = "0x179D560", VA = "0x179D560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000072")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600032A")]
				[Address(RVA = "0x179D5A8", Offset = "0x179D5A8", VA = "0x179D5A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000325")]
			[Address(RVA = "0x179CD88", Offset = "0x179CD88", VA = "0x179CD88")]
			[DebuggerHidden]
			public <Render>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000326")]
			[Address(RVA = "0x179D1A8", Offset = "0x179D1A8", VA = "0x179D1A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000327")]
			[Address(RVA = "0x179D1AC", Offset = "0x179D1AC", VA = "0x179D1AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000329")]
			[Address(RVA = "0x179D568", Offset = "0x179D568", VA = "0x179D568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000314")]
		private const float c_cubemapMipBias = -0.5f;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material cubeToODS_material;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture cubemapLt;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture cubemapRt;

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x179CA0C", Offset = "0x179CA0C", VA = "0x179CA0C", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x179CAD0", Offset = "0x179CAD0", VA = "0x179CAD0", Slot = "7")]
		public override void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x179CCE8", Offset = "0x179CCE8", VA = "0x179CCE8", Slot = "8")]
		[IteratorStateMachine(typeof(<Render>d__6))]
		public override IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x179CDB0", Offset = "0x179CDB0", VA = "0x179CDB0")]
		private void renderToEye(int face, Camera camera, RenderTexture cubemap)
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x179CE60", Offset = "0x179CE60", VA = "0x179CE60")]
		private void convertCubemapToODS(RenderTexture odsImage, Quaternion orientation)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x179D1A0", Offset = "0x179D1A0", VA = "0x179D1A0")]
		public OdsStereoCubemap()
		{
		}
	}
}
namespace TiltBrushToolkit
{
	[Token(Token = "0x2000090")]
	public class GlbError : Exception
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x179D5B0", Offset = "0x179D5B0", VA = "0x179D5B0")]
		public GlbError(string message)
		{
		}
	}
	[Token(Token = "0x2000091")]
	public static class GlbParser
	{
		[Token(Token = "0x2000092")]
		public struct Range
		{
			[Token(Token = "0x4000327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long start;

			[Token(Token = "0x4000328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long length;
		}

		[Token(Token = "0x4000324")]
		private const uint kFourCC_glTF = 1179937895u;

		[Token(Token = "0x4000325")]
		private const uint kFourCC_JSON = 1313821514u;

		[Token(Token = "0x4000326")]
		private const uint kFourCC_BIN_ = 5130562u;

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x179D618", Offset = "0x179D618", VA = "0x179D618")]
		private static void Err(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x179D668", Offset = "0x179D668", VA = "0x179D668")]
		public static Range GetJsonChunk(string glbPath)
		{
			return default(Range);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x179DB88", Offset = "0x179DB88", VA = "0x179DB88")]
		public static string GetJsonChunkAsString(string glbPath)
		{
			return null;
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x179DDC0", Offset = "0x179DDC0", VA = "0x179DDC0")]
		public static Range GetBinChunk(string glbPath)
		{
			return default(Range);
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x179E424", Offset = "0x179E424", VA = "0x179E424")]
		public static uint? GetGlbVersion(string glbPath)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000093")]
	public sealed class Gltf1Root : GltfRootBase
	{
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, Gltf1Buffer> buffers;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Gltf1Accessor> accessors;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<string, Gltf1BufferView> bufferViews;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, Gltf1Mesh> meshes;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<string, Gltf1Shader> shaders;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, Gltf1Program> programs;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, Gltf1Technique> techniques;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<string, Gltf1Image> images;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<string, Gltf1Texture> textures;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, Gltf1Material> materials;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dictionary<string, Gltf1Node> nodes;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Dictionary<string, Gltf1Scene> scenes;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string scene;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool disposed;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[JsonIgnore]
		public Gltf1Scene scenePtr;

		[Token(Token = "0x17000073")]
		public override GltfSceneBase ScenePtr
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x179E634", Offset = "0x179E634", VA = "0x179E634", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public override IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0x179E63C", Offset = "0x179E63C", VA = "0x179E63C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public override IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x6000333")]
			[Address(RVA = "0x179E6CC", Offset = "0x179E6CC", VA = "0x179E6CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public override IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x179E75C", Offset = "0x179E75C", VA = "0x179E75C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		public override IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0x179E7EC", Offset = "0x179E7EC", VA = "0x179E7EC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x179E87C", Offset = "0x179E87C", VA = "0x179E87C", Slot = "11")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x179EA60", Offset = "0x179EA60", VA = "0x179EA60", Slot = "10")]
		public override void Dereference(bool isGlb, [Optional] IUriLoader uriLoader)
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x17A0240", Offset = "0x17A0240", VA = "0x17A0240")]
		public Gltf1Root()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000095")]
	public class Gltf1Buffer : GltfBufferBase
	{
		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x17A0464", Offset = "0x17A0464", VA = "0x17A0464")]
		public Gltf1Buffer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000096")]
	public class Gltf1Accessor : GltfAccessorBase
	{
		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string bufferView;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf1BufferView bufferViewPtr;

		[Token(Token = "0x17000078")]
		public override GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x6000341")]
			[Address(RVA = "0x17A0474", Offset = "0x17A0474", VA = "0x17A0474", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x17A047C", Offset = "0x17A047C", VA = "0x17A047C")]
		public Gltf1Accessor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000097")]
	public class Gltf1BufferView : GltfBufferViewBase
	{
		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buffer;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Buffer bufferPtr;

		[Token(Token = "0x17000079")]
		public override GltfBufferBase BufferPtr
		{
			[Token(Token = "0x6000343")]
			[Address(RVA = "0x17A048C", Offset = "0x17A048C", VA = "0x17A048C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x17A0494", Offset = "0x17A0494", VA = "0x17A0494")]
		public Gltf1BufferView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000098")]
	public class Gltf1Primitive : GltfPrimitiveBase
	{
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> attributes;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string indices;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string material;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Dictionary<string, Gltf1Accessor> attributePtrs;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf1Accessor indicesPtr;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[JsonIgnore]
		public Gltf1Material materialPtr;

		[Token(Token = "0x1700007A")]
		public override GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x6000345")]
			[Address(RVA = "0x17A04A4", Offset = "0x17A04A4", VA = "0x17A04A4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public override GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0x17A04AC", Offset = "0x17A04AC", VA = "0x17A04AC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x17A04B4", Offset = "0x17A04B4", VA = "0x17A04B4", Slot = "6")]
		public override GltfAccessorBase GetAttributePtr(string attributeName)
		{
			return null;
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x17A050C", Offset = "0x17A050C", VA = "0x17A050C", Slot = "7")]
		public override void ReplaceAttribute(string original, string replacement)
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x17A0640", Offset = "0x17A0640", VA = "0x17A0640", Slot = "8")]
		public override HashSet<string> GetAttributeNames()
		{
			return null;
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x17A06E4", Offset = "0x17A06E4", VA = "0x17A06E4")]
		public Gltf1Primitive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000099")]
	public class Gltf1Shader
	{
		[Token(Token = "0x4000348")]
		public const int kFragmentShader = 35632;

		[Token(Token = "0x4000349")]
		public const int kVertexShader = 35633;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uri;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x17A0704", Offset = "0x17A0704", VA = "0x17A0704")]
		public Gltf1Shader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009A")]
	public class Gltf1Program
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string vertexShader;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fragmentShader;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Shader vertexShaderPtr;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Shader fragmentShaderPtr;

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x17A070C", Offset = "0x17A070C", VA = "0x17A070C")]
		public Gltf1Program()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009B")]
	public class Gltf1Technique
	{
		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string program;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Program programPtr;

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x17A0714", Offset = "0x17A0714", VA = "0x17A0714")]
		public Gltf1Technique()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009C")]
	public class Gltf1Image : GltfImageBase
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x17A071C", Offset = "0x17A071C", VA = "0x17A071C")]
		public Gltf1Image()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009D")]
	public class Gltf1Texture : GltfTextureBase
	{
		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string source;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Image sourcePtr;

		[Token(Token = "0x1700007C")]
		public override object GltfId
		{
			[Token(Token = "0x600034F")]
			[Address(RVA = "0x17A072C", Offset = "0x17A072C", VA = "0x17A072C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public override GltfImageBase SourcePtr
		{
			[Token(Token = "0x6000350")]
			[Address(RVA = "0x17A0734", Offset = "0x17A0734", VA = "0x17A0734", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x17A073C", Offset = "0x17A073C", VA = "0x17A073C")]
		public Gltf1Texture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009E")]
	public class TiltBrushGltf1PbrValues
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color? BaseColorFactor;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float? MetallicFactor;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float? RoughnessFactor;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string BaseColorTex;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf1Texture BaseColorTexPtr;

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x17A074C", Offset = "0x17A074C", VA = "0x17A074C")]
		public TiltBrushGltf1PbrValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009F")]
	public class Gltf1Material : GltfMaterialBase
	{
		[Token(Token = "0x20000A0")]
		[CompilerGenerated]
		private sealed class <get_ReferencedTextures>d__7 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x4000365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Material <>4__this;

			[Token(Token = "0x17000080")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x6000359")]
				[Address(RVA = "0x17A0894", Offset = "0x17A0894", VA = "0x17A0894", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000081")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600035B")]
				[Address(RVA = "0x17A08DC", Offset = "0x17A08DC", VA = "0x17A08DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000356")]
			[Address(RVA = "0x17A07E4", Offset = "0x17A07E4", VA = "0x17A07E4")]
			[DebuggerHidden]
			public <get_ReferencedTextures>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000357")]
			[Address(RVA = "0x17A0828", Offset = "0x17A0828", VA = "0x17A0828", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000358")]
			[Address(RVA = "0x17A082C", Offset = "0x17A082C", VA = "0x17A082C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600035A")]
			[Address(RVA = "0x17A089C", Offset = "0x17A089C", VA = "0x17A089C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600035C")]
			[Address(RVA = "0x17A08E4", Offset = "0x17A08E4", VA = "0x17A08E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600035D")]
			[Address(RVA = "0x17A0988", Offset = "0x17A0988", VA = "0x17A0988", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string technique;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltBrushGltf1PbrValues values;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Technique techniquePtr;

		[Token(Token = "0x1700007E")]
		public override Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x6000353")]
			[Address(RVA = "0x17A0754", Offset = "0x17A0754", VA = "0x17A0754", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		public override IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x6000354")]
			[Address(RVA = "0x17A076C", Offset = "0x17A076C", VA = "0x17A076C", Slot = "5")]
			[IteratorStateMachine(typeof(<get_ReferencedTextures>d__7))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x17A0818", Offset = "0x17A0818", VA = "0x17A0818")]
		public Gltf1Material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A1")]
	public class Gltf1Mesh : GltfMeshBase
	{
		[Token(Token = "0x20000A2")]
		[CompilerGenerated]
		private sealed class <get_Primitives>d__3 : IEnumerable<GltfPrimitiveBase>, IEnumerable, IEnumerator<GltfPrimitiveBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400036A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfPrimitiveBase <>2__current;

			[Token(Token = "0x400036B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400036C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Mesh <>4__this;

			[Token(Token = "0x400036D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Primitive>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000084")]
			private GltfPrimitiveBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfPrimitiveBase>.Current
			{
				[Token(Token = "0x6000366")]
				[Address(RVA = "0x17A0CE8", Offset = "0x17A0CE8", VA = "0x17A0CE8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000085")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000368")]
				[Address(RVA = "0x17A0D30", Offset = "0x17A0D30", VA = "0x17A0D30", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000362")]
			[Address(RVA = "0x17A0A04", Offset = "0x17A0A04", VA = "0x17A0A04")]
			[DebuggerHidden]
			public <get_Primitives>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000363")]
			[Address(RVA = "0x17A0AE8", Offset = "0x17A0AE8", VA = "0x17A0AE8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000364")]
			[Address(RVA = "0x17A0B04", Offset = "0x17A0B04", VA = "0x17A0B04", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000365")]
			[Address(RVA = "0x17A0C98", Offset = "0x17A0C98", VA = "0x17A0C98")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000367")]
			[Address(RVA = "0x17A0CF0", Offset = "0x17A0CF0", VA = "0x17A0CF0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000369")]
			[Address(RVA = "0x17A0D38", Offset = "0x17A0D38", VA = "0x17A0D38", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfPrimitiveBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfPrimitiveBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600036A")]
			[Address(RVA = "0x17A0DDC", Offset = "0x17A0DDC", VA = "0x17A0DDC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Gltf1Primitive> primitives;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x17000082")]
		public override IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0x17A098C", Offset = "0x17A098C", VA = "0x17A098C", Slot = "4")]
			[IteratorStateMachine(typeof(<get_Primitives>d__3))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public override int PrimitiveCount
		{
			[Token(Token = "0x600035F")]
			[Address(RVA = "0x17A0A38", Offset = "0x17A0A38", VA = "0x17A0A38", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x17A0A80", Offset = "0x17A0A80", VA = "0x17A0A80", Slot = "6")]
		public override GltfPrimitiveBase GetPrimitiveAt(int i)
		{
			return null;
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x17A0AD8", Offset = "0x17A0AD8", VA = "0x17A0AD8")]
		public Gltf1Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A3")]
	public class Gltf1Node : GltfNodeBase
	{
		[Token(Token = "0x20000A4")]
		[CompilerGenerated]
		private sealed class <get_Children>d__8 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x4000375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Node <>4__this;

			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000088")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x6000372")]
				[Address(RVA = "0x17A1160", Offset = "0x17A1160", VA = "0x17A1160", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000089")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000374")]
				[Address(RVA = "0x17A11A8", Offset = "0x17A11A8", VA = "0x17A11A8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600036E")]
			[Address(RVA = "0x17A0F20", Offset = "0x17A0F20", VA = "0x17A0F20")]
			[DebuggerHidden]
			public <get_Children>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600036F")]
			[Address(RVA = "0x17A0F64", Offset = "0x17A0F64", VA = "0x17A0F64", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000370")]
			[Address(RVA = "0x17A0F80", Offset = "0x17A0F80", VA = "0x17A0F80", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000371")]
			[Address(RVA = "0x17A1110", Offset = "0x17A1110", VA = "0x17A1110")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000373")]
			[Address(RVA = "0x17A1168", Offset = "0x17A1168", VA = "0x17A1168", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000375")]
			[Address(RVA = "0x17A11B0", Offset = "0x17A11B0", VA = "0x17A11B0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000376")]
			[Address(RVA = "0x17A1254", Offset = "0x17A1254", VA = "0x17A1254", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> children;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> meshes;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[JsonIgnore]
		public List<Gltf1Mesh> meshPtrs;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[JsonIgnore]
		public List<Gltf1Node> childPtrs;

		[Token(Token = "0x17000086")]
		public override GltfMeshBase Mesh
		{
			[Token(Token = "0x600036B")]
			[Address(RVA = "0x17A0DE0", Offset = "0x17A0DE0", VA = "0x17A0DE0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		public override IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x600036C")]
			[Address(RVA = "0x17A0EA8", Offset = "0x17A0EA8", VA = "0x17A0EA8", Slot = "5")]
			[IteratorStateMachine(typeof(<get_Children>d__8))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x17A0F54", Offset = "0x17A0F54", VA = "0x17A0F54")]
		public Gltf1Node()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A5")]
	public class Gltf1Scene : GltfSceneBase
	{
		[Token(Token = "0x20000A6")]
		[CompilerGenerated]
		private sealed class <get_Nodes>d__4 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400037B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400037C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x400037D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400037E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Scene <>4__this;

			[Token(Token = "0x400037F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700008B")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x600037D")]
				[Address(RVA = "0x17A1514", Offset = "0x17A1514", VA = "0x17A1514", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600037F")]
				[Address(RVA = "0x17A155C", Offset = "0x17A155C", VA = "0x17A155C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000379")]
			[Address(RVA = "0x17A12D0", Offset = "0x17A12D0", VA = "0x17A12D0")]
			[DebuggerHidden]
			public <get_Nodes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600037A")]
			[Address(RVA = "0x17A1314", Offset = "0x17A1314", VA = "0x17A1314", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600037B")]
			[Address(RVA = "0x17A1330", Offset = "0x17A1330", VA = "0x17A1330", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600037C")]
			[Address(RVA = "0x17A14C4", Offset = "0x17A14C4", VA = "0x17A14C4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600037E")]
			[Address(RVA = "0x17A151C", Offset = "0x17A151C", VA = "0x17A151C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000380")]
			[Address(RVA = "0x17A1564", Offset = "0x17A1564", VA = "0x17A1564", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000381")]
			[Address(RVA = "0x17A1608", Offset = "0x17A1608", VA = "0x17A1608", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> nodes;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public List<Gltf1Node> nodePtrs;

		[Token(Token = "0x1700008A")]
		public override IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0x17A1258", Offset = "0x17A1258", VA = "0x17A1258", Slot = "4")]
			[IteratorStateMachine(typeof(<get_Nodes>d__4))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x17A1304", Offset = "0x17A1304", VA = "0x17A1304")]
		public Gltf1Scene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A7")]
	public class GOOGLE_tilt_brush_material
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x17A160C", Offset = "0x17A160C", VA = "0x17A160C")]
		public GOOGLE_tilt_brush_material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public sealed class Gltf2Root : GltfRootBase
	{
		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Gltf2Buffer> buffers;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Gltf2Accessor> accessors;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Gltf2BufferView> bufferViews;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Gltf2Mesh> meshes;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Gltf2Material> materials;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Gltf2Node> nodes;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Gltf2Scene> scenes;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Gltf2Texture> textures;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Gltf2Image> images;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int scene;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool disposed;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[JsonIgnore]
		public Gltf2Scene scenePtr;

		[Token(Token = "0x1700008D")]
		public override GltfSceneBase ScenePtr
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x17A1614", Offset = "0x17A1614", VA = "0x17A1614", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public override IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x17A161C", Offset = "0x17A161C", VA = "0x17A161C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public override IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x17A1690", Offset = "0x17A1690", VA = "0x17A1690", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public override IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x17A1704", Offset = "0x17A1704", VA = "0x17A1704", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public override IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x17A1778", Offset = "0x17A1778", VA = "0x17A1778", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x17A17EC", Offset = "0x17A17EC", VA = "0x17A17EC", Slot = "11")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x17A19A8", Offset = "0x17A19A8", VA = "0x17A19A8", Slot = "10")]
		public override void Dereference(bool isGlb, [Optional] IUriLoader uriLoader)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x17A2524", Offset = "0x17A2524", VA = "0x17A2524")]
		private void DereferenceTextureInfo(Gltf2Material.TextureInfo texInfo)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x17A2588", Offset = "0x17A2588", VA = "0x17A2588")]
		public Gltf2Root()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public class Gltf2Buffer : GltfBufferBase
	{
		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x17A274C", Offset = "0x17A274C", VA = "0x17A274C")]
		public Gltf2Buffer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AB")]
	public class Gltf2Accessor : GltfAccessorBase
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int bufferView;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf2BufferView bufferViewPtr;

		[Token(Token = "0x17000092")]
		public override GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x6000393")]
			[Address(RVA = "0x17A2754", Offset = "0x17A2754", VA = "0x17A2754", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x17A275C", Offset = "0x17A275C", VA = "0x17A275C")]
		public Gltf2Accessor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AC")]
	public class Gltf2BufferView : GltfBufferViewBase
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int buffer;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf2Buffer bufferPtr;

		[Token(Token = "0x17000093")]
		public override GltfBufferBase BufferPtr
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x17A2764", Offset = "0x17A2764", VA = "0x17A2764", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x17A276C", Offset = "0x17A276C", VA = "0x17A276C")]
		public Gltf2BufferView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AD")]
	public class Gltf2Primitive : GltfPrimitiveBase
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, int> attributes;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int indices;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int material;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[JsonIgnore]
		public Dictionary<string, Gltf2Accessor> attributePtrs;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf2Accessor indicesPtr;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf2Material materialPtr;

		[Token(Token = "0x17000094")]
		public override GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x17A2774", Offset = "0x17A2774", VA = "0x17A2774", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		public override GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0x17A277C", Offset = "0x17A277C", VA = "0x17A277C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x17A2784", Offset = "0x17A2784", VA = "0x17A2784", Slot = "6")]
		public override GltfAccessorBase GetAttributePtr(string attributeName)
		{
			return null;
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x17A27DC", Offset = "0x17A27DC", VA = "0x17A27DC", Slot = "7")]
		public override void ReplaceAttribute(string original, string replacement)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x17A2910", Offset = "0x17A2910", VA = "0x17A2910", Slot = "8")]
		public override HashSet<string> GetAttributeNames()
		{
			return null;
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x17A29B4", Offset = "0x17A29B4", VA = "0x17A29B4")]
		public Gltf2Primitive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AE")]
	public class Gltf2Material : GltfMaterialBase
	{
		[Serializable]
		[Token(Token = "0x20000AF")]
		public class Extensions
		{
			[Token(Token = "0x40003A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GOOGLE_tilt_brush_material GOOGLE_tilt_brush_material;

			[Token(Token = "0x40003A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KHR_materials_pbrSpecularGlossiness KHR_materials_pbrSpecularGlossiness;

			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x17A2B2C", Offset = "0x17A2B2C", VA = "0x17A2B2C")]
			public Extensions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000B0")]
		public class PbrMetallicRoughness
		{
			[Token(Token = "0x40003AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color baseColorFactor;

			[Token(Token = "0x40003AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float metallicFactor;

			[Token(Token = "0x40003AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float roughnessFactor;

			[Token(Token = "0x40003AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextureInfo baseColorTexture;

			[Token(Token = "0x40003AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextureInfo metallicRoughnessTexture;

			[Token(Token = "0x60003A2")]
			[Address(RVA = "0x17A2B34", Offset = "0x17A2B34", VA = "0x17A2B34")]
			public PbrMetallicRoughness()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000B1")]
		public class KHR_materials_pbrSpecularGlossiness
		{
			[Token(Token = "0x40003AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color diffuseFactor;

			[Token(Token = "0x40003B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureInfo diffuseTexture;

			[Token(Token = "0x40003B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float glossinessFactor;

			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x17A2B4C", Offset = "0x17A2B4C", VA = "0x17A2B4C")]
			public KHR_materials_pbrSpecularGlossiness()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000B2")]
		public class TextureInfo
		{
			[Token(Token = "0x40003B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40003B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int texCoord;

			[Token(Token = "0x40003B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[JsonIgnore]
			public GltfTextureBase texture;

			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x17A2B64", Offset = "0x17A2B64", VA = "0x17A2B64")]
			public TextureInfo()
			{
			}
		}

		[Token(Token = "0x20000B3")]
		[CompilerGenerated]
		private sealed class <get_TextureInfos>d__8 : IEnumerable<TextureInfo>, IEnumerable, IEnumerator<TextureInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TextureInfo <>2__current;

			[Token(Token = "0x40003B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Material <>4__this;

			[Token(Token = "0x17000099")]
			private TextureInfo System.Collections.Generic.IEnumerator<TiltBrushToolkit.Gltf2Material.TextureInfo>.Current
			{
				[Token(Token = "0x60003A8")]
				[Address(RVA = "0x17A2C60", Offset = "0x17A2C60", VA = "0x17A2C60", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003AA")]
				[Address(RVA = "0x17A2CA8", Offset = "0x17A2CA8", VA = "0x17A2CA8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x17A2A44", Offset = "0x17A2A44", VA = "0x17A2A44")]
			[DebuggerHidden]
			public <get_TextureInfos>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x17A2B6C", Offset = "0x17A2B6C", VA = "0x17A2B6C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003A7")]
			[Address(RVA = "0x17A2B70", Offset = "0x17A2B70", VA = "0x17A2B70", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x17A2C68", Offset = "0x17A2C68", VA = "0x17A2C68", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x17A2CB0", Offset = "0x17A2CB0", VA = "0x17A2CB0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TextureInfo> System.Collections.Generic.IEnumerable<TiltBrushToolkit.Gltf2Material.TextureInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x17A2D54", Offset = "0x17A2D54", VA = "0x17A2D54", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000B4")]
		[CompilerGenerated]
		private sealed class <get_ReferencedTextures>d__10 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x40003BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Material <>4__this;

			[Token(Token = "0x40003BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<TextureInfo> <>7__wrap1;

			[Token(Token = "0x1700009B")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x60003B1")]
				[Address(RVA = "0x17A30E4", Offset = "0x17A30E4", VA = "0x17A30E4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003B3")]
				[Address(RVA = "0x17A312C", Offset = "0x17A312C", VA = "0x17A312C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x17A2AF0", Offset = "0x17A2AF0", VA = "0x17A2AF0")]
			[DebuggerHidden]
			public <get_ReferencedTextures>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x17A2D58", Offset = "0x17A2D58", VA = "0x17A2D58", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x17A2D74", Offset = "0x17A2D74", VA = "0x17A2D74", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x17A3034", Offset = "0x17A3034", VA = "0x17A3034")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x17A30EC", Offset = "0x17A30EC", VA = "0x17A30EC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003B4")]
			[Address(RVA = "0x17A3134", Offset = "0x17A3134", VA = "0x17A3134", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x17A31D8", Offset = "0x17A31D8", VA = "0x17A31D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400039C")]
		public const string kAlphaModeOpaque = "OPAQUE";

		[Token(Token = "0x400039D")]
		public const string kAlphaModeMask = "MASK";

		[Token(Token = "0x400039E")]
		public const string kAlphaModeBlend = "BLEND";

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PbrMetallicRoughness pbrMetallicRoughness;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureInfo normalTexture;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextureInfo emissiveTexture;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 emissiveFactor;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string alphaMode;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool doubleSided;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Extensions extensions;

		[Token(Token = "0x17000096")]
		public override Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x17A29C4", Offset = "0x17A29C4", VA = "0x17A29C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private IEnumerable<TextureInfo> TextureInfos
		{
			[Token(Token = "0x600039E")]
			[Address(RVA = "0x17A29CC", Offset = "0x17A29CC", VA = "0x17A29CC")]
			[IteratorStateMachine(typeof(<get_TextureInfos>d__8))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public override IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0x17A2A78", Offset = "0x17A2A78", VA = "0x17A2A78", Slot = "5")]
			[IteratorStateMachine(typeof(<get_ReferencedTextures>d__10))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x17A2B24", Offset = "0x17A2B24", VA = "0x17A2B24")]
		public Gltf2Material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B5")]
	public class Gltf2Texture : GltfTextureBase
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int source;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public Gltf2Image sourcePtr;

		[Token(Token = "0x1700009D")]
		public override object GltfId
		{
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0x17A31DC", Offset = "0x17A31DC", VA = "0x17A31DC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		public override GltfImageBase SourcePtr
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0x17A3238", Offset = "0x17A3238", VA = "0x17A3238", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x17A3240", Offset = "0x17A3240", VA = "0x17A3240")]
		public Gltf2Texture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B6")]
	public class Gltf2Image : GltfImageBase
	{
		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mimeType;

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x17A3248", Offset = "0x17A3248", VA = "0x17A3248")]
		public Gltf2Image()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B7")]
	public class Gltf2Mesh : GltfMeshBase
	{
		[Token(Token = "0x20000B8")]
		[CompilerGenerated]
		private sealed class <get_Primitives>d__3 : IEnumerable<GltfPrimitiveBase>, IEnumerable, IEnumerator<GltfPrimitiveBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfPrimitiveBase <>2__current;

			[Token(Token = "0x40003C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Mesh <>4__this;

			[Token(Token = "0x40003CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Primitive>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000A1")]
			private GltfPrimitiveBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfPrimitiveBase>.Current
			{
				[Token(Token = "0x60003C2")]
				[Address(RVA = "0x17A35A4", Offset = "0x17A35A4", VA = "0x17A35A4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003C4")]
				[Address(RVA = "0x17A35EC", Offset = "0x17A35EC", VA = "0x17A35EC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x17A32C8", Offset = "0x17A32C8", VA = "0x17A32C8")]
			[DebuggerHidden]
			public <get_Primitives>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60003BF")]
			[Address(RVA = "0x17A33A4", Offset = "0x17A33A4", VA = "0x17A33A4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003C0")]
			[Address(RVA = "0x17A33C0", Offset = "0x17A33C0", VA = "0x17A33C0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x17A3554", Offset = "0x17A3554", VA = "0x17A3554")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x17A35AC", Offset = "0x17A35AC", VA = "0x17A35AC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x17A35F4", Offset = "0x17A35F4", VA = "0x17A35F4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfPrimitiveBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfPrimitiveBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003C6")]
			[Address(RVA = "0x17A3698", Offset = "0x17A3698", VA = "0x17A3698", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Gltf2Primitive> primitives;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x1700009F")]
		public override IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0x17A3250", Offset = "0x17A3250", VA = "0x17A3250", Slot = "4")]
			[IteratorStateMachine(typeof(<get_Primitives>d__3))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		public override int PrimitiveCount
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0x17A32FC", Offset = "0x17A32FC", VA = "0x17A32FC", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x17A3344", Offset = "0x17A3344", VA = "0x17A3344", Slot = "6")]
		public override GltfPrimitiveBase GetPrimitiveAt(int i)
		{
			return null;
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x17A339C", Offset = "0x17A339C", VA = "0x17A339C")]
		public Gltf2Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class Gltf2Node : GltfNodeBase
	{
		[Token(Token = "0x20000BA")]
		[CompilerGenerated]
		private sealed class <get_Children>d__8 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x40003D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Node <>4__this;

			[Token(Token = "0x40003D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000A5")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x60003CE")]
				[Address(RVA = "0x17A395C", Offset = "0x17A395C", VA = "0x17A395C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003D0")]
				[Address(RVA = "0x17A39A4", Offset = "0x17A39A4", VA = "0x17A39A4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x17A371C", Offset = "0x17A371C", VA = "0x17A371C")]
			[DebuggerHidden]
			public <get_Children>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x17A3760", Offset = "0x17A3760", VA = "0x17A3760", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003CC")]
			[Address(RVA = "0x17A377C", Offset = "0x17A377C", VA = "0x17A377C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003CD")]
			[Address(RVA = "0x17A390C", Offset = "0x17A390C", VA = "0x17A390C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003CF")]
			[Address(RVA = "0x17A3964", Offset = "0x17A3964", VA = "0x17A3964", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x17A39AC", Offset = "0x17A39AC", VA = "0x17A39AC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003D2")]
			[Address(RVA = "0x17A3A50", Offset = "0x17A3A50", VA = "0x17A3A50", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> children;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int mesh;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[JsonIgnore]
		public Gltf2Mesh meshPtr;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[JsonIgnore]
		public List<Gltf2Node> childPtrs;

		[Token(Token = "0x170000A3")]
		public override GltfMeshBase Mesh
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x17A369C", Offset = "0x17A369C", VA = "0x17A369C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public override IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x17A36A4", Offset = "0x17A36A4", VA = "0x17A36A4", Slot = "5")]
			[IteratorStateMachine(typeof(<get_Children>d__8))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x17A3750", Offset = "0x17A3750", VA = "0x17A3750")]
		public Gltf2Node()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class Gltf2Scene : GltfSceneBase
	{
		[Token(Token = "0x20000BC")]
		[CompilerGenerated]
		private sealed class <get_Nodes>d__4 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x40003DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Scene <>4__this;

			[Token(Token = "0x40003DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000A8")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x60003D9")]
				[Address(RVA = "0x17A3D08", Offset = "0x17A3D08", VA = "0x17A3D08", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003DB")]
				[Address(RVA = "0x17A3D50", Offset = "0x17A3D50", VA = "0x17A3D50", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x17A3ACC", Offset = "0x17A3ACC", VA = "0x17A3ACC")]
			[DebuggerHidden]
			public <get_Nodes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x17A3B08", Offset = "0x17A3B08", VA = "0x17A3B08", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x17A3B24", Offset = "0x17A3B24", VA = "0x17A3B24", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x17A3CB8", Offset = "0x17A3CB8", VA = "0x17A3CB8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x17A3D10", Offset = "0x17A3D10", VA = "0x17A3D10", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x17A3D58", Offset = "0x17A3D58", VA = "0x17A3D58", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003DD")]
			[Address(RVA = "0x17A3DFC", Offset = "0x17A3DFC", VA = "0x17A3DFC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> nodes;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public List<Gltf2Node> nodePtrs;

		[Token(Token = "0x170000A7")]
		public override IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0x17A3A54", Offset = "0x17A3A54", VA = "0x17A3A54", Slot = "4")]
			[IteratorStateMachine(typeof(<get_Nodes>d__4))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x17A3B00", Offset = "0x17A3B00", VA = "0x17A3B00")]
		public Gltf2Scene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BD")]
	public struct GltfImportOptions
	{
		[Token(Token = "0x20000BE")]
		public enum RescalingMode
		{
			[Token(Token = "0x40003E3")]
			CONVERT,
			[Token(Token = "0x40003E4")]
			FIT
		}

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AxisConvention? axisConventionOverride;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RescalingMode rescalingMode;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scaleFactor;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float desiredSize;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool recenter;

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x17A3E00", Offset = "0x17A3E00", VA = "0x17A3E00")]
		public static GltfImportOptions Default()
		{
			return default(GltfImportOptions);
		}
	}
	[Token(Token = "0x20000BF")]
	public class GltfMaterialConverter
	{
		[Token(Token = "0x20000C0")]
		public struct UnityMaterial
		{
			[Token(Token = "0x40003E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x40003EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material template;

			[Token(Token = "0x40003EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor exportableMaterial;
		}

		[Token(Token = "0x20000C1")]
		[CompilerGenerated]
		private sealed class <NecessaryTextures>d__6 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x40003EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfRootBase root;

			[Token(Token = "0x40003F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfRootBase <>3__root;

			[Token(Token = "0x40003F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<GltfMaterialBase> <>7__wrap1;

			[Token(Token = "0x40003F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<GltfTextureBase> <>7__wrap2;

			[Token(Token = "0x170000AA")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x60003F6")]
				[Address(RVA = "0x17A618C", Offset = "0x17A618C", VA = "0x17A618C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003F8")]
				[Address(RVA = "0x17A61D4", Offset = "0x17A61D4", VA = "0x17A61D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x17A3EF4", Offset = "0x17A3EF4", VA = "0x17A3EF4")]
			[DebuggerHidden]
			public <NecessaryTextures>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x17A5AD0", Offset = "0x17A5AD0", VA = "0x17A5AD0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x17A5B88", Offset = "0x17A5B88", VA = "0x17A5B88", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x17A60DC", Offset = "0x17A60DC", VA = "0x17A60DC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x17A602C", Offset = "0x17A602C", VA = "0x17A602C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x17A6194", Offset = "0x17A6194", VA = "0x17A6194", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x17A61DC", Offset = "0x17A61DC", VA = "0x17A61DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x17A6280", Offset = "0x17A6280", VA = "0x17A6280", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000C2")]
		[CompilerGenerated]
		private sealed class <LoadTexturesCoroutine>d__7 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40003F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40003F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfRootBase root;

			[Token(Token = "0x40003F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfRootBase <>3__root;

			[Token(Token = "0x40003F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader loader;

			[Token(Token = "0x40003F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__loader;

			[Token(Token = "0x40003FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Texture2D> loaded;

			[Token(Token = "0x40003FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Texture2D> <>3__loaded;

			[Token(Token = "0x40003FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<GltfTextureBase> <>7__wrap1;

			[Token(Token = "0x40003FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GltfTextureBase <gltfTexture>5__3;

			[Token(Token = "0x40003FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private IEnumerator <>7__wrap3;

			[Token(Token = "0x170000AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000400")]
				[Address(RVA = "0x17A6EB4", Offset = "0x17A6EB4", VA = "0x17A6EB4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000402")]
				[Address(RVA = "0x17A6EFC", Offset = "0x17A6EFC", VA = "0x17A6EFC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x17A3FB8", Offset = "0x17A3FB8", VA = "0x17A3FB8")]
			[DebuggerHidden]
			public <LoadTexturesCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x17A6284", Offset = "0x17A6284", VA = "0x17A6284", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x17A633C", Offset = "0x17A633C", VA = "0x17A633C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x17A6E04", Offset = "0x17A6E04", VA = "0x17A6E04")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x17A6D48", Offset = "0x17A6D48", VA = "0x17A6D48")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000401")]
			[Address(RVA = "0x17A6EBC", Offset = "0x17A6EBC", VA = "0x17A6EBC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000403")]
			[Address(RVA = "0x17A6F04", Offset = "0x17A6F04", VA = "0x17A6F04", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000404")]
			[Address(RVA = "0x17A6FB8", Offset = "0x17A6FB8", VA = "0x17A6FB8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000C3")]
		[CompilerGenerated]
		private sealed class <ConvertTextureCoroutine>d__17 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfTextureBase gltfTexture;

			[Token(Token = "0x4000403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfTextureBase <>3__gltfTexture;

			[Token(Token = "0x4000404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader loader;

			[Token(Token = "0x4000405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__loader;

			[Token(Token = "0x4000406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <tex>5__2;

			[Token(Token = "0x4000407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RawImage <data>5__3;

			[Token(Token = "0x170000AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000408")]
				[Address(RVA = "0x17A77B8", Offset = "0x17A77B8", VA = "0x17A77B8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600040A")]
				[Address(RVA = "0x17A7800", Offset = "0x17A7800", VA = "0x17A7800", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000405")]
			[Address(RVA = "0x17A56A4", Offset = "0x17A56A4", VA = "0x17A56A4")]
			[DebuggerHidden]
			public <ConvertTextureCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000406")]
			[Address(RVA = "0x17A6FBC", Offset = "0x17A6FBC", VA = "0x17A6FBC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000407")]
			[Address(RVA = "0x17A6FC0", Offset = "0x17A6FC0", VA = "0x17A6FC0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000409")]
			[Address(RVA = "0x17A77C0", Offset = "0x17A77C0", VA = "0x17A77C0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600040B")]
			[Address(RVA = "0x17A7808", Offset = "0x17A7808", VA = "0x17A7808", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600040C")]
			[Address(RVA = "0x17A78B4", Offset = "0x17A78B4", VA = "0x17A78B4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex kTiltBrushMaterialRegex;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Regex kTiltBrushShaderRegex;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Material> m_newMaterials;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GltfMaterialBase, UnityMaterial> m_getMaterialMemo;

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x17A3E28", Offset = "0x17A3E28", VA = "0x17A3E28")]
		private static bool IsTiltBrushHostedUri(string uri)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x17A3E7C", Offset = "0x17A3E7C", VA = "0x17A3E7C")]
		[IteratorStateMachine(typeof(<NecessaryTextures>d__6))]
		public static IEnumerable<GltfTextureBase> NecessaryTextures(GltfRootBase root)
		{
			return null;
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x17A3F28", Offset = "0x17A3F28", VA = "0x17A3F28")]
		[IteratorStateMachine(typeof(<LoadTexturesCoroutine>d__7))]
		public static IEnumerable LoadTexturesCoroutine(GltfRootBase root, IUriLoader loader, List<Texture2D> loaded)
		{
			return null;
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x17A3FEC", Offset = "0x17A3FEC", VA = "0x17A3FEC")]
		public UnityMaterial? GetMaterial(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x17A48FC", Offset = "0x17A48FC", VA = "0x17A48FC")]
		public List<Material> GetGeneratedMaterials()
		{
			return null;
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x17A4978", Offset = "0x17A4978", VA = "0x17A4978")]
		private static bool IsGlobalMaterial(GltfMaterialBase gltfMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x17A4308", Offset = "0x17A4308", VA = "0x17A4308")]
		private static UnityMaterial? LookUpGlobalMaterial(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x17A4740", Offset = "0x17A4740", VA = "0x17A4740")]
		private UnityMaterial? ConvertGltfMaterial(GltfMaterialBase gltfMat)
		{
			return null;
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x17A4B4C", Offset = "0x17A4B4C", VA = "0x17A4B4C")]
		private UnityMaterial? ConvertGltf1Material(Gltf1Material gltfMat)
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x17A4EA8", Offset = "0x17A4EA8", VA = "0x17A4EA8")]
		private UnityMaterial? ConvertGltf2Material(Gltf2Material gltfMat)
		{
			return null;
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x17A530C", Offset = "0x17A530C", VA = "0x17A530C")]
		private UnityMaterial CreateNewPbrMaterial(TbtSettings.PbrMaterialInfo pbrInfo, string gltfMatName, Gltf2Material.PbrMetallicRoughness pbr)
		{
			return default(UnityMaterial);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x17A5550", Offset = "0x17A5550", VA = "0x17A5550")]
		private static string SanitizeName(string uri)
		{
			return null;
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x17A561C", Offset = "0x17A561C", VA = "0x17A561C")]
		[IteratorStateMachine(typeof(<ConvertTextureCoroutine>d__17))]
		private static IEnumerable ConvertTextureCoroutine(GltfTextureBase gltfTexture, IUriLoader loader)
		{
			return null;
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x17A49F4", Offset = "0x17A49F4", VA = "0x17A49F4")]
		private static Guid ParseGuidFromMaterial(GltfMaterialBase gltfMaterial)
		{
			return default(Guid);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x17A51F0", Offset = "0x17A51F0", VA = "0x17A51F0")]
		private static Guid ParseGuidFromShader(Gltf1Material material)
		{
			return default(Guid);
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x17A56D8", Offset = "0x17A56D8", VA = "0x17A56D8")]
		public static BrushDescriptor LookupBrushDescriptor(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x17A5944", Offset = "0x17A5944", VA = "0x17A5944")]
		public GltfMaterialConverter()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public enum GltfSchemaVersion
	{
		[Token(Token = "0x4000409")]
		GLTF1,
		[Token(Token = "0x400040A")]
		GLTF2
	}
	[Token(Token = "0x20000C5")]
	public class BadJson : Exception
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x17A78B8", Offset = "0x17A78B8", VA = "0x17A78B8")]
		public BadJson(string message)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x17A7920", Offset = "0x17A7920", VA = "0x17A7920")]
		public BadJson(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x17A79A4", Offset = "0x17A79A4", VA = "0x17A79A4")]
		public BadJson(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class JsonVectorConverter : JsonConverter
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x17A7A38", Offset = "0x17A7A38", VA = "0x17A7A38", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x17A7BAC", Offset = "0x17A7BAC", VA = "0x17A7BAC")]
		private static float ReadFloat(JsonReader reader)
		{
			return default(float);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x17A7CBC", Offset = "0x17A7CBC", VA = "0x17A7CBC", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x17A813C", Offset = "0x17A813C", VA = "0x17A813C", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x17A817C", Offset = "0x17A817C", VA = "0x17A817C")]
		public JsonVectorConverter()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class GltfJsonContractResolver : DefaultContractResolver
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x17A8184", Offset = "0x17A8184", VA = "0x17A8184", Slot = "18")]
		protected override JsonContract CreateContract(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x17A838C", Offset = "0x17A838C", VA = "0x17A838C")]
		public GltfJsonContractResolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C8")]
	public class GltfAsset
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, string> extensions;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string copyright;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string generator;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool premultipliedAlpha;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string version;

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x17A83E4", Offset = "0x17A83E4", VA = "0x17A83E4")]
		public GltfAsset()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class MeshPrecursor
	{
		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] colors;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32[] colors32;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Array[] uvSets;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] triangles;

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x17A83EC", Offset = "0x17A83EC", VA = "0x17A83EC")]
		public MeshPrecursor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CA")]
	public abstract class GltfRootBase : IDisposable
	{
		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GltfAsset asset;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public Version? tiltBrushVersion;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[JsonIgnore]
		public Version? blocksVersion;

		[Token(Token = "0x170000B0")]
		public abstract GltfSceneBase ScenePtr
		{
			[Token(Token = "0x6000419")]
			get;
		}

		[Token(Token = "0x170000B1")]
		public abstract IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x600041A")]
			get;
		}

		[Token(Token = "0x170000B2")]
		public abstract IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x600041B")]
			get;
		}

		[Token(Token = "0x170000B3")]
		public abstract IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x600041C")]
			get;
		}

		[Token(Token = "0x170000B4")]
		public abstract IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x600041D")]
			get;
		}

		[Token(Token = "0x600041E")]
		public abstract void Dereference(bool isGlb, [Optional] IUriLoader uriLoader);

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x17A8444", Offset = "0x17A8444", VA = "0x17A8444", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x179EA5C", Offset = "0x179EA5C", VA = "0x179EA5C", Slot = "11")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x17A0248", Offset = "0x17A0248", VA = "0x17A0248")]
		protected GltfRootBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CB")]
	public abstract class GltfBufferBase
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long byteLength;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uri;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public IBufferReader data;

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x17A046C", Offset = "0x17A046C", VA = "0x17A046C")]
		protected GltfBufferBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CC")]
	public abstract class GltfAccessorBase
	{
		[Serializable]
		[Token(Token = "0x20000CD")]
		public enum ComponentType
		{
			[Token(Token = "0x4000426")]
			BYTE = 5120,
			[Token(Token = "0x4000427")]
			UNSIGNED_BYTE = 5121,
			[Token(Token = "0x4000428")]
			SHORT = 5122,
			[Token(Token = "0x4000429")]
			UNSIGNED_SHORT = 5123,
			[Token(Token = "0x400042A")]
			UNSIGNED_INT = 5125,
			[Token(Token = "0x400042B")]
			FLOAT = 5126
		}

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int byteOffset;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int byteStride;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComponentType componentType;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int count;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> max;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> min;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string type;

		[Token(Token = "0x170000B5")]
		public abstract GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x6000423")]
			get;
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x17A0484", Offset = "0x17A0484", VA = "0x17A0484")]
		protected GltfAccessorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CE")]
	public abstract class GltfBufferViewBase
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int byteLength;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int byteOffset;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int target;

		[Token(Token = "0x170000B6")]
		public abstract GltfBufferBase BufferPtr
		{
			[Token(Token = "0x6000425")]
			get;
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x17A049C", Offset = "0x17A049C", VA = "0x17A049C")]
		protected GltfBufferViewBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CF")]
	public abstract class GltfPrimitiveBase
	{
		[Serializable]
		[Token(Token = "0x20000D0")]
		public enum Mode
		{
			[Token(Token = "0x4000433")]
			TRIANGLES = 4
		}

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public List<MeshPrecursor> precursorMeshes;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public List<Mesh> unityMeshes;

		[Token(Token = "0x170000B7")]
		public abstract GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x6000427")]
			get;
		}

		[Token(Token = "0x170000B8")]
		public abstract GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x6000428")]
			get;
		}

		[Token(Token = "0x6000429")]
		public abstract GltfAccessorBase GetAttributePtr(string attributeName);

		[Token(Token = "0x600042A")]
		public abstract void ReplaceAttribute(string original, string replacement);

		[Token(Token = "0x600042B")]
		public abstract HashSet<string> GetAttributeNames();

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x17A06F4", Offset = "0x17A06F4", VA = "0x17A06F4")]
		protected GltfPrimitiveBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D1")]
	public abstract class GltfImageBase
	{
		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public RawImage data;

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x17A0724", Offset = "0x17A0724", VA = "0x17A0724")]
		protected GltfImageBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public abstract class GltfTextureBase
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public Texture2D unityTexture;

		[Token(Token = "0x170000B9")]
		public abstract object GltfId
		{
			[Token(Token = "0x600042E")]
			get;
		}

		[Token(Token = "0x170000BA")]
		public abstract GltfImageBase SourcePtr
		{
			[Token(Token = "0x600042F")]
			get;
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x17A0744", Offset = "0x17A0744", VA = "0x17A0744")]
		protected GltfTextureBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D3")]
	public abstract class GltfMaterialBase
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x170000BB")]
		public abstract Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x6000431")]
			get;
		}

		[Token(Token = "0x170000BC")]
		public abstract IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x6000432")]
			get;
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x17A0820", Offset = "0x17A0820", VA = "0x17A0820")]
		protected GltfMaterialBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public abstract class GltfMeshBase
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x170000BD")]
		public abstract IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x6000434")]
			get;
		}

		[Token(Token = "0x170000BE")]
		public abstract int PrimitiveCount
		{
			[Token(Token = "0x6000435")]
			get;
		}

		[Token(Token = "0x6000436")]
		public abstract GltfPrimitiveBase GetPrimitiveAt(int i);

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x17A0AE0", Offset = "0x17A0AE0", VA = "0x17A0AE0")]
		protected GltfMeshBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D5")]
	public abstract class GltfNodeBase
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4? matrix;

		[Token(Token = "0x170000BF")]
		public abstract GltfMeshBase Mesh
		{
			[Token(Token = "0x6000438")]
			get;
		}

		[Token(Token = "0x170000C0")]
		public abstract IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x6000439")]
			get;
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x17A0F5C", Offset = "0x17A0F5C", VA = "0x17A0F5C")]
		protected GltfNodeBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D6")]
	public abstract class GltfSceneBase
	{
		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x170000C1")]
		public abstract IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x600043B")]
			get;
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x17A130C", Offset = "0x17A130C", VA = "0x17A130C")]
		protected GltfSceneBase()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class RawImage
	{
		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32[] colorData;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int colorWidth;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int colorHeight;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureFormat format;

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x17A84B0", Offset = "0x17A84B0", VA = "0x17A84B0")]
		public RawImage()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public interface IBufferReader : IDisposable
	{
		[Token(Token = "0x600043E")]
		void Read(IntPtr destination, int readStart, int readSize);

		[Token(Token = "0x600043F")]
		void Read(byte[] destination, int destinationOffset, int readStart, int readSize);

		[Token(Token = "0x6000440")]
		long GetContentLength();
	}
	[Token(Token = "0x20000D9")]
	public interface IUriLoader
	{
		[Token(Token = "0x6000441")]
		IBufferReader Load(string uri);

		[Token(Token = "0x6000442")]
		bool CanLoadImages();

		[Token(Token = "0x6000443")]
		RawImage LoadAsImage(string uri);
	}
	[Token(Token = "0x20000DA")]
	public class Reader : IBufferReader, IDisposable
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] data;

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x17A84B8", Offset = "0x17A84B8", VA = "0x17A84B8")]
		public Reader(byte[] data)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x17A84E0", Offset = "0x17A84E0", VA = "0x17A84E0", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x17A84E4", Offset = "0x17A84E4", VA = "0x17A84E4", Slot = "4")]
		public void Read(IntPtr destination, int readStart, int readSize)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x17A8568", Offset = "0x17A8568", VA = "0x17A8568", Slot = "5")]
		public void Read(byte[] dest, int destOffset, int readStart, int readSize)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x17A8584", Offset = "0x17A8584", VA = "0x17A8584", Slot = "6")]
		public long GetContentLength()
		{
			return default(long);
		}
	}
	[Token(Token = "0x20000DB")]
	public class BufferedStreamLoader : IUriLoader
	{
		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string glbPath;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string uriBase;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int bufferSize;

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x17A85A0", Offset = "0x17A85A0", VA = "0x17A85A0")]
		public BufferedStreamLoader(string glbPath, string uriBase, int bufferSize = 4096)
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x17A85DC", Offset = "0x17A85DC", VA = "0x17A85DC", Slot = "4")]
		public IBufferReader Load(string uri)
		{
			return null;
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x17A8798", Offset = "0x17A8798", VA = "0x17A8798", Slot = "5")]
		public bool CanLoadImages()
		{
			return default(bool);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x17A87A0", Offset = "0x17A87A0", VA = "0x17A87A0", Slot = "6")]
		public RawImage LoadAsImage(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DC")]
	internal sealed class BufferedStreamReader : IBufferReader, IDisposable
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream stream;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] tempBuffer;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long contentLength;

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x17A871C", Offset = "0x17A871C", VA = "0x17A871C")]
		public BufferedStreamReader(Stream stream, int bufferSize, long contentLength)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x17A87E0", Offset = "0x17A87E0", VA = "0x17A87E0", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x17A87F4", Offset = "0x17A87F4", VA = "0x17A87F4", Slot = "4")]
		public void Read(IntPtr destination, int readStart, int readSize)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x17A8954", Offset = "0x17A8954", VA = "0x17A8954", Slot = "5")]
		public void Read(byte[] dest, int destOffset, int readStart, int readSize)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x17A89EC", Offset = "0x17A89EC", VA = "0x17A89EC", Slot = "6")]
		public long GetContentLength()
		{
			return default(long);
		}
	}
	[Token(Token = "0x20000DD")]
	public interface IImportMaterialCollector
	{
		[Token(Token = "0x6000452")]
		void Add(GltfMaterialConverter.UnityMaterial unityMaterial, GltfMaterialBase gltfMaterial);
	}
	[Token(Token = "0x20000DE")]
	public static class ImportGltf
	{
		[Token(Token = "0x20000DF")]
		public class GltfImportResult
		{
			[Token(Token = "0x400044D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x400044E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Mesh> meshes;

			[Token(Token = "0x400044F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Material> materials;

			[Token(Token = "0x4000450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Texture2D> textures;

			[Token(Token = "0x4000451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IImportMaterialCollector materialCollector;

			[Token(Token = "0x600047C")]
			[Address(RVA = "0x17AD63C", Offset = "0x17AD63C", VA = "0x17AD63C")]
			public GltfImportResult()
			{
			}
		}

		[Token(Token = "0x20000E0")]
		public sealed class ImportState : IDisposable
		{
			[Token(Token = "0x4000452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal readonly Matrix4x4 gltfFromUnity;

			[Token(Token = "0x4000453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal readonly Matrix4x4 unityFromGltf;

			[Token(Token = "0x4000454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal GltfRootBase root;

			[Token(Token = "0x4000455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal GltfSceneBase desiredScene;

			[Token(Token = "0x4000456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal float scaleFactor;

			[Token(Token = "0x4000457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			internal float nodeScaleFactor;

			[Token(Token = "0x4000458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal Vector3 translation;

			[Token(Token = "0x600047D")]
			[Address(RVA = "0x17AB464", Offset = "0x17AB464", VA = "0x17AB464")]
			internal ImportState(AxisConvention axes)
			{
			}

			[Token(Token = "0x600047E")]
			[Address(RVA = "0x17B1380", Offset = "0x17B1380", VA = "0x17B1380", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20000E1")]
		public class GltfFileInfo : IDisposable
		{
			[Token(Token = "0x170000C2")]
			public string Path
			{
				[Token(Token = "0x600047F")]
				[Address(RVA = "0x17B1390", Offset = "0x17B1390", VA = "0x17B1390")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000480")]
				[Address(RVA = "0x17B1398", Offset = "0x17B1398", VA = "0x17B1398")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170000C3")]
			public GltfSchemaVersion Version
			{
				[Token(Token = "0x6000481")]
				[Address(RVA = "0x17B13A0", Offset = "0x17B13A0", VA = "0x17B13A0")]
				[CompilerGenerated]
				get
				{
					return default(GltfSchemaVersion);
				}
				[Token(Token = "0x6000482")]
				[Address(RVA = "0x17B13A8", Offset = "0x17B13A8", VA = "0x17B13A8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170000C4")]
			public bool IsGlb
			{
				[Token(Token = "0x6000483")]
				[Address(RVA = "0x17B13B0", Offset = "0x17B13B0", VA = "0x17B13B0")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000484")]
				[Address(RVA = "0x17B13B8", Offset = "0x17B13B8", VA = "0x17B13B8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170000C5")]
			public TextReader Reader
			{
				[Token(Token = "0x6000485")]
				[Address(RVA = "0x17B13C4", Offset = "0x17B13C4", VA = "0x17B13C4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000486")]
				[Address(RVA = "0x17B13CC", Offset = "0x17B13CC", VA = "0x17B13CC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6000487")]
			[Address(RVA = "0x17AB014", Offset = "0x17AB014", VA = "0x17AB014")]
			public GltfFileInfo(string path)
			{
			}

			[Token(Token = "0x6000488")]
			[Address(RVA = "0x17B13D4", Offset = "0x17B13D4", VA = "0x17B13D4", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000E2")]
		private class Gltf1Or2
		{
			[Token(Token = "0x400045D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GltfAsset asset;

			[Token(Token = "0x6000489")]
			[Address(RVA = "0x17B13E8", Offset = "0x17B13E8", VA = "0x17B13E8")]
			public Gltf1Or2()
			{
			}
		}

		[Token(Token = "0x20000E3")]
		private struct MeshSubset
		{
			[Token(Token = "0x400045E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntRange vertices;

			[Token(Token = "0x400045F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntRange triangles;
		}

		[Token(Token = "0x20000E4")]
		private enum ColorSpace
		{
			[Token(Token = "0x4000461")]
			Unknown,
			[Token(Token = "0x4000462")]
			Srgb,
			[Token(Token = "0x4000463")]
			Linear
		}

		[Token(Token = "0x20000E6")]
		[CompilerGenerated]
		private sealed class <CreateGameObjectsFromNodes>d__23 : IEnumerable<Null>, IEnumerable, IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400046A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400046B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400046C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ImportState state;

			[Token(Token = "0x400046D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ImportState <>3__state;

			[Token(Token = "0x400046E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader uriLoader;

			[Token(Token = "0x400046F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__uriLoader;

			[Token(Token = "0x4000470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GltfImportResult result;

			[Token(Token = "0x4000471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<Texture2D> <loaded>5__2;

			[Token(Token = "0x4000473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GltfMaterialConverter <matConverter>5__3;

			[Token(Token = "0x4000474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Transform <rootTransform>5__4;

			[Token(Token = "0x4000475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private IEnumerator <>7__wrap4;

			[Token(Token = "0x4000476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private IEnumerator<GltfNodeBase> <>7__wrap5;

			[Token(Token = "0x170000C6")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6000496")]
				[Address(RVA = "0x17B22F8", Offset = "0x17B22F8", VA = "0x17B22F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000498")]
				[Address(RVA = "0x17B2340", Offset = "0x17B2340", VA = "0x17B2340", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000490")]
			[Address(RVA = "0x17AD6D4", Offset = "0x17AD6D4", VA = "0x17AD6D4")]
			[DebuggerHidden]
			public <CreateGameObjectsFromNodes>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000491")]
			[Address(RVA = "0x17B1518", Offset = "0x17B1518", VA = "0x17B1518", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000492")]
			[Address(RVA = "0x17B15DC", Offset = "0x17B15DC", VA = "0x17B15DC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000493")]
			[Address(RVA = "0x17B20D0", Offset = "0x17B20D0", VA = "0x17B20D0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000494")]
			[Address(RVA = "0x17B2248", Offset = "0x17B2248", VA = "0x17B2248")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000495")]
			[Address(RVA = "0x17B218C", Offset = "0x17B218C", VA = "0x17B218C")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6000497")]
			[Address(RVA = "0x17B2300", Offset = "0x17B2300", VA = "0x17B2300", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000499")]
			[Address(RVA = "0x17B2348", Offset = "0x17B2348", VA = "0x17B2348", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Null> System.Collections.Generic.IEnumerable<TiltBrush.Null>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600049A")]
			[Address(RVA = "0x17B23FC", Offset = "0x17B23FC", VA = "0x17B23FC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000E7")]
		[CompilerGenerated]
		private sealed class <CreateGameObjectsFromNode>d__24 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400047A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfNodeBase node;

			[Token(Token = "0x400047B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfNodeBase <>3__node;

			[Token(Token = "0x400047C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform parent;

			[Token(Token = "0x400047D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform <>3__parent;

			[Token(Token = "0x400047E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ImportState state;

			[Token(Token = "0x400047F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ImportState <>3__state;

			[Token(Token = "0x4000480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 translationToApply;

			[Token(Token = "0x4000481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 <>3__translationToApply;

			[Token(Token = "0x4000482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private GltfImportResult result;

			[Token(Token = "0x4000483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private GltfMaterialConverter matConverter;

			[Token(Token = "0x4000485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GltfMaterialConverter <>3__matConverter;

			[Token(Token = "0x4000486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private GameObject <obj>5__2;

			[Token(Token = "0x4000487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IEnumerator <>7__wrap2;

			[Token(Token = "0x4000488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private IEnumerator<GltfNodeBase> <>7__wrap3;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004A1")]
				[Address(RVA = "0x17B3264", Offset = "0x17B3264", VA = "0x17B3264", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004A3")]
				[Address(RVA = "0x17B32AC", Offset = "0x17B32AC", VA = "0x17B32AC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600049B")]
			[Address(RVA = "0x17AD7D4", Offset = "0x17AD7D4", VA = "0x17AD7D4")]
			[DebuggerHidden]
			public <CreateGameObjectsFromNode>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600049C")]
			[Address(RVA = "0x17B2400", Offset = "0x17B2400", VA = "0x17B2400", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600049D")]
			[Address(RVA = "0x17B24C4", Offset = "0x17B24C4", VA = "0x17B24C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600049E")]
			[Address(RVA = "0x17B303C", Offset = "0x17B303C", VA = "0x17B303C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600049F")]
			[Address(RVA = "0x17B31B4", Offset = "0x17B31B4", VA = "0x17B31B4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60004A0")]
			[Address(RVA = "0x17B30F8", Offset = "0x17B30F8", VA = "0x17B30F8")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x17B326C", Offset = "0x17B326C", VA = "0x17B326C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x17B32B4", Offset = "0x17B32B4", VA = "0x17B32B4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60004A5")]
			[Address(RVA = "0x17B3388", Offset = "0x17B3388", VA = "0x17B3388", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000E8")]
		[CompilerGenerated]
		private sealed class <CreateGameObjectsFromMesh>d__25 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfMeshBase mesh;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfMeshBase <>3__mesh;

			[Token(Token = "0x400048E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GltfMaterialConverter matConverter;

			[Token(Token = "0x400048F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GltfMaterialConverter <>3__matConverter;

			[Token(Token = "0x4000490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GltfImportResult result;

			[Token(Token = "0x4000491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool allowMeshInParent;

			[Token(Token = "0x4000493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool <>3__allowMeshInParent;

			[Token(Token = "0x4000494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform parent;

			[Token(Token = "0x4000495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform <>3__parent;

			[Token(Token = "0x4000496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <iP>5__2;

			[Token(Token = "0x4000497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private GltfPrimitiveBase <prim>5__3;

			[Token(Token = "0x4000498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private GltfMaterialConverter.UnityMaterial? <unityMaterial>5__4;

			[Token(Token = "0x4000499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private string <primName>5__5;

			[Token(Token = "0x400049A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <iM>5__6;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004A9")]
				[Address(RVA = "0xF04788", Offset = "0xF04788", VA = "0xF04788", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004AB")]
				[Address(RVA = "0xF047D0", Offset = "0xF047D0", VA = "0xF047D0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004A6")]
			[Address(RVA = "0xF03EA0", Offset = "0xF03EA0", VA = "0xF03EA0")]
			[DebuggerHidden]
			public <CreateGameObjectsFromMesh>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60004A7")]
			[Address(RVA = "0xF03ED4", Offset = "0xF03ED4", VA = "0xF03ED4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004A8")]
			[Address(RVA = "0xF03ED8", Offset = "0xF03ED8", VA = "0xF03ED8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xF04790", Offset = "0xF04790", VA = "0xF04790", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xF047D8", Offset = "0xF047D8", VA = "0xF047D8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60004AD")]
			[Address(RVA = "0xF0489C", Offset = "0xF0489C", VA = "0xF0489C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20000E9")]
		[CompilerGenerated]
		private sealed class <GenerateMeshSubsets>d__28 : IEnumerable<MeshSubset>, IEnumerable, IEnumerator<MeshSubset>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400049B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400049C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private MeshSubset <>2__current;

			[Token(Token = "0x400049D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400049E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int numVerts;

			[Token(Token = "0x400049F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int <>3__numVerts;

			[Token(Token = "0x40004A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int maxSubsetVerts;

			[Token(Token = "0x40004A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__maxSubsetVerts;

			[Token(Token = "0x40004A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ushort[] triangles;

			[Token(Token = "0x40004A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ushort[] <>3__triangles;

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <iTri>5__3;

			[Token(Token = "0x170000CC")]
			private MeshSubset System.Collections.Generic.IEnumerator<TiltBrushToolkit.ImportGltf.MeshSubset>.Current
			{
				[Token(Token = "0x60004B1")]
				[Address(RVA = "0xF04DA4", Offset = "0xF04DA4", VA = "0xF04DA4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(MeshSubset);
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004B3")]
				[Address(RVA = "0xF04DF4", Offset = "0xF04DF4", VA = "0xF04DF4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xF048A0", Offset = "0xF048A0", VA = "0xF048A0")]
			[DebuggerHidden]
			public <GenerateMeshSubsets>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60004AF")]
			[Address(RVA = "0xF048D4", Offset = "0xF048D4", VA = "0xF048D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004B0")]
			[Address(RVA = "0xF048D8", Offset = "0xF048D8", VA = "0xF048D8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004B2")]
			[Address(RVA = "0xF04DB4", Offset = "0xF04DB4", VA = "0xF04DB4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60004B4")]
			[Address(RVA = "0xF04E50", Offset = "0xF04E50", VA = "0xF04E50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MeshSubset> System.Collections.Generic.IEnumerable<TiltBrushToolkit.ImportGltf.MeshSubset>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60004B5")]
			[Address(RVA = "0xF04F04", Offset = "0xF04F04", VA = "0xF04F04", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000447")]
		private const float MIN_BOUNDING_BOX_SIZE_FOR_SIZE_FIT = 0.001f;

		[Token(Token = "0x4000448")]
		private const float MIN_VALID_NORMAL_SQRMAGNITUDE = float.Epsilon;

		[Token(Token = "0x4000449")]
		private const string kTookitAttributePrefix = "_TB_UNITY_";

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializer kSerializer;

		[Token(Token = "0x400044B")]
		private const int kUnityMeshMaxVerts = 65534;

		[Token(Token = "0x400044C")]
		private const float kExtremeSizeMeters = 371f;

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x17A89F4", Offset = "0x17A89F4", VA = "0x17A89F4")]
		public static GltfImportResult Import(string gltfOrGlbPath, IUriLoader uriLoader, IImportMaterialCollector materialCollector, GltfImportOptions options)
		{
			return null;
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x17AA724", Offset = "0x17AA724", VA = "0x17AA724")]
		private static GltfRootBase DeserializeGltfRoot(GltfSchemaVersion gltfVersion, JsonTextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x17AACD0", Offset = "0x17AACD0", VA = "0x17AACD0")]
		private static void SanityCheckImportOptions(GltfImportOptions options)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x17AAD74", Offset = "0x17AAD74", VA = "0x17AAD74")]
		private static void CheckCompatibility(GltfRootBase root, string versionKey, Version currentVersion)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x17A8E98", Offset = "0x17A8E98", VA = "0x17A8E98")]
		public static ImportState BeginImport(string gltfOrGlbPath, IUriLoader uriLoader, GltfImportOptions options)
		{
			return null;
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x17AB96C", Offset = "0x17AB96C", VA = "0x17AB96C")]
		private static void ComputeScaleFactor(GltfImportOptions options, Bounds boundsInGltfSpace, out float directScaleFactor, out float nodeScaleFactor)
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x17AB1C4", Offset = "0x17AB1C4", VA = "0x17AB1C4")]
		private static bool GetTiltBrushVersion(string generatorString, out Version version)
		{
			return default(bool);
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x17AB2E4", Offset = "0x17AB2E4", VA = "0x17AB2E4")]
		private static bool GetBlocksVersion(string generatorString, out Version version)
		{
			return default(bool);
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x17ABBF0", Offset = "0x17ABBF0", VA = "0x17ABBF0")]
		private static void CreateMeshPrecursorsFromScene(ImportState state)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x17ABFF0", Offset = "0x17ABFF0", VA = "0x17ABFF0")]
		private static void CreateMeshPrecursorsFromNode(ImportState state, GltfNodeBase node)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x17AC358", Offset = "0x17AC358", VA = "0x17AC358")]
		private static void CreateMeshPrecursorsFromMesh(ImportState state, GltfMeshBase mesh)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x17ABF10", Offset = "0x17ABF10", VA = "0x17ABF10")]
		private static bool ComputeScaleFactorToFit(Bounds bounds, float desiredSize, out float scaleFactor)
		{
			return default(bool);
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x17AA5E0", Offset = "0x17AA5E0", VA = "0x17AA5E0")]
		public static GltfImportResult EndImport(ImportState state, IUriLoader uriLoader, IImportMaterialCollector materialCollector, out IEnumerable<Null> meshCreator)
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x17AD644", Offset = "0x17AD644", VA = "0x17AD644")]
		[IteratorStateMachine(typeof(<CreateGameObjectsFromNodes>d__23))]
		private static IEnumerable<Null> CreateGameObjectsFromNodes(ImportState state, GltfImportResult result, IUriLoader uriLoader)
		{
			return null;
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x17AD708", Offset = "0x17AD708", VA = "0x17AD708")]
		[IteratorStateMachine(typeof(<CreateGameObjectsFromNode>d__24))]
		private static IEnumerable CreateGameObjectsFromNode(ImportState state, Transform parent, GltfNodeBase node, GltfImportResult result, GltfMaterialConverter matConverter, Vector3 translationToApply)
		{
			return null;
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x17AD808", Offset = "0x17AD808", VA = "0x17AD808")]
		[IteratorStateMachine(typeof(<CreateGameObjectsFromMesh>d__25))]
		private static IEnumerable CreateGameObjectsFromMesh(Transform parent, GltfMeshBase mesh, GltfImportResult result, GltfMaterialConverter matConverter, bool allowMeshInParent)
		{
			return null;
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x17AD8A4", Offset = "0x17AD8A4", VA = "0x17AD8A4")]
		private static Mesh UnityFromPrecursor(MeshPrecursor precursor)
		{
			return null;
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x17ADCF4", Offset = "0x17ADCF4", VA = "0x17ADCF4")]
		[IteratorStateMachine(typeof(<GenerateMeshSubsets>d__28))]
		private static IEnumerable<MeshSubset> GenerateMeshSubsets(ushort[] triangles, int numVerts, int maxSubsetVerts = 65534)
		{
			return null;
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x17ADD74", Offset = "0x17ADD74", VA = "0x17ADD74")]
		private static Matrix4x4 ChangeBasisAndApplyScale(Matrix4x4 gltfMatrix, float scaleFactor, Matrix4x4 unityFromGltf, Matrix4x4 gltfFromUnity)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x17ADEB4", Offset = "0x17ADEB4", VA = "0x17ADEB4")]
		private static void ChangeUvBasis(Array data, GeometryPool.Semantic semantic)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x17AE084", Offset = "0x17AE084", VA = "0x17AE084")]
		private static void ChangeBasisAndApplyScale(Array data, GeometryPool.Semantic semantic, float scaleFactor, Matrix4x4 basisChange)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x17AC690", Offset = "0x17AC690", VA = "0x17AC690")]
		private static List<MeshPrecursor> CreateMeshPrecursorsFromPrimitive(ImportState state, GltfPrimitiveBase prim)
		{
			return null;
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x17AECAC", Offset = "0x17AECAC", VA = "0x17AECAC")]
		private static void StoreDataInMesh(ImportState state, GltfMaterialBase material, string semantic, Array data, MeshPrecursor mesh)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x17AEC20", Offset = "0x17AEC20", VA = "0x17AEC20")]
		private static Array PadArrayToSize(Array array, int size)
		{
			return null;
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x17AF810", Offset = "0x17AF810", VA = "0x17AF810")]
		private static void FixInvalidNormals(MeshPrecursor mesh)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x17AF728", Offset = "0x17AF728", VA = "0x17AF728")]
		private static GeometryPool.Semantic GetNormalSemantic(ImportState state, GltfMaterialBase material)
		{
			return default(GeometryPool.Semantic);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x17AFCA4", Offset = "0x17AFCA4", VA = "0x17AFCA4")]
		private static GeometryPool.Semantic GetTexcoordSemantic(ImportState state, GltfMaterialBase material, int uvChannel)
		{
			return default(GeometryPool.Semantic);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x17AE644", Offset = "0x17AE644", VA = "0x17AE644")]
		private static bool TryGetDataAsArray(GltfAccessorBase accessor, IntRange eltRange, string semantic, out Array result)
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x17AE524", Offset = "0x17AE524", VA = "0x17AE524")]
		private static Array GetDataAsArray(GltfAccessorBase accessor, IntRange eltRange, string semantic)
		{
			return null;
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x17AFF3C", Offset = "0x17AFF3C", VA = "0x17AFF3C")]
		private static void ReadAccessorData(GltfAccessorBase accessor, IntRange eltRange, int elementLength, IntPtr destination)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x17ADA04", Offset = "0x17ADA04", VA = "0x17ADA04")]
		private static void GenericSetUv(Mesh mesh, int channel, Array array)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x17AFBFC", Offset = "0x17AFBFC", VA = "0x17AFBFC")]
		private static ColorSpace GetDesiredColorSpace(GltfRootBase root)
		{
			return default(ColorSpace);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x17AFC50", Offset = "0x17AFC50", VA = "0x17AFC50")]
		private static ColorSpace GetActualColorSpace(GltfRootBase root)
		{
			return default(ColorSpace);
		}

		[Token(Token = "0x6000474")]
		private static T ListPop<T>(List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x17AA934", Offset = "0x17AA934", VA = "0x17AA934")]
		private static void PostProcessRemoveMultipleMeshes(Gltf1Root root)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x17AB59C", Offset = "0x17AB59C", VA = "0x17AB59C")]
		public static Bounds? ComputeSceneBoundingBoxInGltfSpace(GltfSceneBase scene, bool approximate)
		{
			return null;
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x17B01A8", Offset = "0x17B01A8", VA = "0x17B01A8")]
		private static void EncapsulateNodeInBoundingBox(Matrix4x4 rootFromParent, GltfNodeBase node, bool approximate, ref Bounds? bounds)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x17B0FC4", Offset = "0x17B0FC4", VA = "0x17B0FC4")]
		private static Bounds Transform(Matrix4x4 m, Bounds b)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x17B0940", Offset = "0x17B0940", VA = "0x17B0940")]
		private static void EncapsulatePrimInBoundingBoxApproximate(Matrix4x4 rootFromNode, GltfPrimitiveBase prim, ref Bounds? bounds)
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x17B0C68", Offset = "0x17B0C68", VA = "0x17B0C68")]
		private static void EncapsulatePrimInBoundingBoxExact(Matrix4x4 rootFromNode, GltfPrimitiveBase prim, ref Bounds? bounds)
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public struct IntRange
	{
		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;

		[Token(Token = "0x170000CE")]
		public int Size
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xF04D98", Offset = "0xF04D98", VA = "0xF04D98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xF04D04", Offset = "0xF04D04", VA = "0xF04D04")]
		public static IntRange Union(IntRange? a, IntRange b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xF04F34", Offset = "0xF04F34", VA = "0xF04F34")]
		public static IntRange Union(IntRange a, IntRange? b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xF04FC8", Offset = "0xF04FC8", VA = "0xF04FC8")]
		public static IntRange? Union(IntRange? a, IntRange? b)
		{
			return null;
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xF04F08", Offset = "0xF04F08", VA = "0xF04F08")]
		public static IntRange Union(IntRange a, IntRange b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xF05124", Offset = "0xF05124", VA = "0xF05124")]
		public static bool operator ==(IntRange lhs, IntRange rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xF05144", Offset = "0xF05144", VA = "0xF05144")]
		public static bool operator !=(IntRange lhs, IntRange rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xF05164", Offset = "0xF05164", VA = "0xF05164", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xF051E8", Offset = "0xF051E8", VA = "0xF051E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xF0521C", Offset = "0xF0521C", VA = "0xF0521C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000EB")]
	public static class MathUtils
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xF052BC", Offset = "0xF052BC", VA = "0xF052BC")]
		public static void DecomposeToTrs(Matrix4x4 m, out Vector3 translation, out Quaternion rotation, out Vector3 scale)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xF054D4", Offset = "0xF054D4", VA = "0xF054D4")]
		private static bool ExactlyEquals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xF054FC", Offset = "0xF054FC", VA = "0xF054FC")]
		private static Vector3 CalculateNormalToUnitDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xF05784", Offset = "0xF05784", VA = "0xF05784")]
		public static Vector3 CalculateNormal(Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000EC")]
	public class SubStream : Stream
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream m_baseStream;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly long m_start;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly long m_length;

		[Token(Token = "0x170000CF")]
		public override bool CanRead
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xF05EF8", Offset = "0xF05EF8", VA = "0xF05EF8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public override bool CanSeek
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xF05F00", Offset = "0xF05F00", VA = "0xF05F00", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D1")]
		public override bool CanWrite
		{
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0xF05F08", Offset = "0xF05F08", VA = "0xF05F08", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D2")]
		public override long Length
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xF05F10", Offset = "0xF05F10", VA = "0xF05F10", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170000D3")]
		public override long Position
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xF05F18", Offset = "0xF05F18", VA = "0xF05F18", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xF05F98", Offset = "0xF05F98", VA = "0xF05F98", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xF05B2C", Offset = "0xF05B2C", VA = "0xF05B2C")]
		private static int Min(int val, long max)
		{
			return default(int);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xF05B3C", Offset = "0xF05B3C", VA = "0xF05B3C")]
		public SubStream(Stream baseStream, long start, long length)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xF05D08", Offset = "0xF05D08", VA = "0xF05D08", Slot = "21")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xF05D30", Offset = "0xF05D30", VA = "0xF05D30", Slot = "22")]
		public override void Flush()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xF05D34", Offset = "0xF05D34", VA = "0xF05D34", Slot = "34")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xF05DB8", Offset = "0xF05DB8", VA = "0xF05DB8", Slot = "32")]
		public override long Seek(long offset, SeekOrigin seekOrigin)
		{
			return default(long);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xF05E78", Offset = "0xF05E78", VA = "0xF05E78", Slot = "33")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xF05EB8", Offset = "0xF05EB8", VA = "0xF05EB8", Slot = "37")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class TbtSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20000EE")]
		public struct PbrMaterialInfo
		{
			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BrushDescriptor descriptor;
		}

		[Serializable]
		[Token(Token = "0x20000EF")]
		private struct SurfaceShaderMaterial
		{
			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string shaderUrl;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material material;

			[Token(Token = "0x40004B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor descriptor;

			[Token(Token = "0x170000D7")]
			internal Material Material
			{
				[Token(Token = "0x60004D8")]
				[Address(RVA = "0xF063DC", Offset = "0xF063DC", VA = "0xF063DC")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x40004AB")]
		private const string kAssetName = "TiltBrushToolkitSettings";

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TbtSettings sm_Instance;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PbrMaterialInfo m_PbrOpaqueSingleSided;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PbrMaterialInfo m_PbrOpaqueDoubleSided;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PbrMaterialInfo m_PbrBlendSingleSided;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PbrMaterialInfo m_PbrBlendDoubleSided;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SurfaceShaderMaterial[] m_SurfaceShaderMaterials;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, GltfMaterialConverter.UnityMaterial> m_SurfaceShaderMaterialLookup;

		[Token(Token = "0x170000D4")]
		public static TbtSettings Instance
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0xF06018", Offset = "0xF06018", VA = "0xF06018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public static Version TbtVersion
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xF060F0", Offset = "0xF060F0", VA = "0xF060F0")]
			get
			{
				return default(Version);
			}
		}

		[Token(Token = "0x170000D6")]
		public static Version PtVersion
		{
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0xF061A4", Offset = "0xF061A4", VA = "0xF061A4")]
			get
			{
				return default(Version);
			}
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xF060F8", Offset = "0xF060F8", VA = "0xF060F8")]
		public bool TryGetBrush(Guid guid, out BrushDescriptor desc)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xF061AC", Offset = "0xF061AC", VA = "0xF061AC")]
		public GltfMaterialConverter.UnityMaterial? LookupSurfaceShaderMaterial(string url)
		{
			return null;
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xF063D4", Offset = "0xF063D4", VA = "0xF063D4")]
		public TbtSettings()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public struct Version
	{
		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int major;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minor;

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xF06518", Offset = "0xF06518", VA = "0xF06518")]
		public static Version Parse(string value)
		{
			return default(Version);
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xF06668", Offset = "0xF06668", VA = "0xF06668")]
		public static bool operator <(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xF06688", Offset = "0xF06688", VA = "0xF06688")]
		public static bool operator <=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xF066E8", Offset = "0xF066E8", VA = "0xF066E8")]
		public static bool operator >=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xF06728", Offset = "0xF06728", VA = "0xF06728")]
		public static bool operator >(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xF066C8", Offset = "0xF066C8", VA = "0xF066C8")]
		public static bool operator ==(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xF06748", Offset = "0xF06748", VA = "0xF06748")]
		public static bool operator !=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xF06768", Offset = "0xF06768", VA = "0xF06768", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xF06808", Offset = "0xF06808", VA = "0xF06808", Slot = "0")]
		public override bool Equals(object rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xF0689C", Offset = "0xF0689C", VA = "0xF0689C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace Simplex
{
	[Token(Token = "0x20000F2")]
	public class Noise
	{
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int seed;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] permOriginal;

		[Token(Token = "0x170000D8")]
		public static int Seed
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0xF07AC8", Offset = "0xF07AC8", VA = "0xF07AC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0xF07B20", Offset = "0xF07B20", VA = "0xF07B20")]
			set
			{
			}
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xF068A4", Offset = "0xF068A4", VA = "0xF068A4")]
		public static float[] Calc1D(int width, float scale)
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xF06AD8", Offset = "0xF06AD8", VA = "0xF06AD8")]
		public static float[,] Calc2D(int width, int height, float scale)
		{
			return null;
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xF06FE4", Offset = "0xF06FE4", VA = "0xF06FE4")]
		public static float[,,] Calc3D(int width, int height, int length, float scale)
		{
			return null;
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xF07854", Offset = "0xF07854", VA = "0xF07854")]
		public static float CalcPixel1D(int x, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xF078CC", Offset = "0xF078CC", VA = "0xF078CC")]
		public static float CalcPixel2D(int x, int y, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xF07958", Offset = "0xF07958", VA = "0xF07958")]
		public static float CalcPixel3D(int x, int y, int z, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xF079F0", Offset = "0xF079F0", VA = "0xF079F0")]
		static Noise()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xF06990", Offset = "0xF06990", VA = "0xF06990")]
		internal static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xF06C20", Offset = "0xF06C20", VA = "0xF06C20")]
		internal static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xF07180", Offset = "0xF07180", VA = "0xF07180")]
		internal static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF07C5C", Offset = "0xF07C5C", VA = "0xF07C5C")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xF07CA8", Offset = "0xF07CA8", VA = "0xF07CA8")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xF07C84", Offset = "0xF07C84", VA = "0xF07C84")]
		private static float grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xF07CBC", Offset = "0xF07CBC", VA = "0xF07CBC")]
		private static float grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xF07CF0", Offset = "0xF07CF0", VA = "0xF07CF0")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xF07D38", Offset = "0xF07D38", VA = "0xF07D38")]
		private static float grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xF07D84", Offset = "0xF07D84", VA = "0xF07D84")]
		public Noise()
		{
		}
	}
}
namespace Reaktion
{
	[Token(Token = "0x20000F3")]
	[AddComponentMenu("Reaktion/Gear/Animator Gear")]
	public class AnimatorGear : MonoBehaviour
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier speed;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Trigger trigger;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string triggerName;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xF07D8C", Offset = "0xF07D8C", VA = "0xF07D8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xF07E08", Offset = "0xF07E08", VA = "0xF07E08")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xF08014", Offset = "0xF08014", VA = "0xF08014")]
		public AnimatorGear()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	[AddComponentMenu("Reaktion/Gear/Camera Gear")]
	public class CameraGear : MonoBehaviour
	{
		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier fieldOfView;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier viewportWidth;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier viewportHeight;

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xF0801C", Offset = "0xF0801C", VA = "0xF0801C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xF08070", Offset = "0xF08070", VA = "0xF08070")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xF08228", Offset = "0xF08228", VA = "0xF08228")]
		public CameraGear()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	[AddComponentMenu("Reaktion/Gear/Constant Motion Gear")]
	public class ConstantMotionGear : MonoBehaviour
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier position;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier rotation;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConstantMotion motion;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xF08324", Offset = "0xF08324", VA = "0xF08324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xF083A0", Offset = "0xF083A0", VA = "0xF083A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xF0842C", Offset = "0xF0842C", VA = "0xF0842C")]
		public ConstantMotionGear()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	[AddComponentMenu("Reaktion/Gear/Generic Curve Gear")]
	public class GenericCurveGear : MonoBehaviour
	{
		[Token(Token = "0x20000F7")]
		public enum OptionType
		{
			[Token(Token = "0x40004D7")]
			Bool,
			[Token(Token = "0x40004D8")]
			Int,
			[Token(Token = "0x40004D9")]
			Float,
			[Token(Token = "0x40004DA")]
			Vector
		}

		[Serializable]
		[Token(Token = "0x20000F8")]
		public class BoolEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0xF08690", Offset = "0xF08690", VA = "0xF08690")]
			public BoolEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000F9")]
		public class IntEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000507")]
			[Address(RVA = "0xF086D8", Offset = "0xF086D8", VA = "0xF086D8")]
			public IntEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FA")]
		public class FloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0xF08720", Offset = "0xF08720", VA = "0xF08720")]
			public FloatEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FB")]
		public class VectorEvent : UnityEvent<Vector3>
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xF08768", Offset = "0xF08768", VA = "0xF08768")]
			public VectorEvent()
			{
			}
		}

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OptionType optionType;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve curve;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 origin;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 direction;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BoolEvent boolTarget;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntEvent intTarget;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatEvent floatTarget;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VectorEvent vectorTarget;

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xF08464", Offset = "0xF08464", VA = "0xF08464")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xF084B8", Offset = "0xF084B8", VA = "0xF084B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xF0860C", Offset = "0xF0860C", VA = "0xF0860C")]
		public GenericCurveGear()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	[AddComponentMenu("Reaktion/Gear/Generic Gradient Gear")]
	public class GenericGradientGear : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000FD")]
		public class ColorEvent : UnityEvent<Color>
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0xF088B0", Offset = "0xF088B0", VA = "0xF088B0")]
			public ColorEvent()
			{
			}
		}

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorEvent target;

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xF087B0", Offset = "0xF087B0", VA = "0xF087B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xF08884", Offset = "0xF08884", VA = "0xF08884")]
		private void Update()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xF08810", Offset = "0xF08810", VA = "0xF08810")]
		private void UpdateTarget(float param)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xF088A8", Offset = "0xF088A8", VA = "0xF088A8")]
		public GenericGradientGear()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[AddComponentMenu("Reaktion/Gear/Generic Trigger Gear")]
	public class GenericTriggerGear : MonoBehaviour
	{
		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float threshold;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float interval;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent target;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float previousOutput;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float triggerTimer;

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xF088F8", Offset = "0xF088F8", VA = "0xF088F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xF0894C", Offset = "0xF0894C", VA = "0xF0894C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xF089D4", Offset = "0xF089D4", VA = "0xF089D4")]
		public GenericTriggerGear()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	[AddComponentMenu("Reaktion/Gear/Global Setting Gear")]
	public class GlobalSettingGear : MonoBehaviour
	{
		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve timeScaleCurve;

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xF089E8", Offset = "0xF089E8", VA = "0xF089E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xF089F4", Offset = "0xF089F4", VA = "0xF089F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xF08A48", Offset = "0xF08A48", VA = "0xF08A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xF08A80", Offset = "0xF08A80", VA = "0xF08A80")]
		public GlobalSettingGear()
		{
		}
	}
	[Token(Token = "0x2000100")]
	[AddComponentMenu("Reaktion/Gear/Jitter Motion Gear")]
	public class JitterMotionGear : MonoBehaviour
	{
		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier positionFrequency;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier rotationFrequency;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier positionAmount;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modifier rotationAmount;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JitterMotion jitter;

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xF08AB8", Offset = "0xF08AB8", VA = "0xF08AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xF08B34", Offset = "0xF08B34", VA = "0xF08B34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xF08BF8", Offset = "0xF08BF8", VA = "0xF08BF8")]
		public JitterMotionGear()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[AddComponentMenu("Reaktion/Gear/Light Gear")]
	public class LightGear : MonoBehaviour
	{
		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier intensity;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enableColor;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableBeatAccumulatedColor;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float accumulatedColorRate;

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xF08C60", Offset = "0xF08C60", VA = "0xF08C60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xF08DE8", Offset = "0xF08DE8", VA = "0xF08DE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xF08CC4", Offset = "0xF08CC4", VA = "0xF08CC4")]
		private void UpdateLight(float param, float param2)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xF08EE8", Offset = "0xF08EE8", VA = "0xF08EE8")]
		public LightGear()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AddComponentMenu("Reaktion/Gear/Material Gear")]
	public class MaterialGear : MonoBehaviour
	{
		[Token(Token = "0x2000103")]
		public enum TargetType
		{
			[Token(Token = "0x4000500")]
			Color,
			[Token(Token = "0x4000501")]
			Float,
			[Token(Token = "0x4000502")]
			Vector,
			[Token(Token = "0x4000503")]
			Texture
		}

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int materialIndex;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string targetName;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetType targetType;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float threshold;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient colorGradient;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float colorGradientMultiplier;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve floatCurve;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector4 vectorFrom;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector4 vectorTo;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture textureLow;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture textureHigh;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material material;

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xF08EF0", Offset = "0xF08EF0", VA = "0xF08EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xF090F0", Offset = "0xF090F0", VA = "0xF090F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xF08FB4", Offset = "0xF08FB4", VA = "0xF08FB4")]
		private void UpdateMaterial(float param)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xF09114", Offset = "0xF09114", VA = "0xF09114")]
		public MaterialGear()
		{
		}
	}
	[Token(Token = "0x2000104")]
	[AddComponentMenu("Reaktion/Gear/Particle System Gear")]
	public class ParticleSystemGear : MonoBehaviour
	{
		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trigger burst;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstNumber;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier emissionRate;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modifier size;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] tempArray;

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xF091EC", Offset = "0xF091EC", VA = "0xF091EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xF09240", Offset = "0xF09240", VA = "0xF09240")]
		private void Update()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xF0935C", Offset = "0xF0935C", VA = "0xF0935C")]
		private void ResizeParticles(float newSize)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xF094B0", Offset = "0xF094B0", VA = "0xF094B0")]
		public ParticleSystemGear()
		{
		}
	}
	[Token(Token = "0x2000105")]
	[AddComponentMenu("Reaktion/Gear/Spawner Gear")]
	public class SpawnerGear : MonoBehaviour
	{
		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trigger burst;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstNumber;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier spawnRate;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Spawner spawner;

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xF094F0", Offset = "0xF094F0", VA = "0xF094F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xF0956C", Offset = "0xF0956C", VA = "0xF0956C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xF0963C", Offset = "0xF0963C", VA = "0xF0963C")]
		public SpawnerGear()
		{
		}
	}
	[Token(Token = "0x2000106")]
	[AddComponentMenu("Reaktion/Gear/Transform Gear")]
	public class TransformGear : MonoBehaviour
	{
		[Token(Token = "0x2000107")]
		public enum TransformMode
		{
			[Token(Token = "0x4000518")]
			Off,
			[Token(Token = "0x4000519")]
			XAxis,
			[Token(Token = "0x400051A")]
			YAxis,
			[Token(Token = "0x400051B")]
			ZAxis,
			[Token(Token = "0x400051C")]
			Arbitrary,
			[Token(Token = "0x400051D")]
			Random
		}

		[Serializable]
		[Token(Token = "0x2000108")]
		public class TransformElement
		{
			[Token(Token = "0x400051E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x400051F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float min;

			[Token(Token = "0x4000520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float max;

			[Token(Token = "0x4000521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve curve;

			[Token(Token = "0x4000522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x4000523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float randomness;

			[Token(Token = "0x4000524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 randomVector;

			[Token(Token = "0x4000525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float randomScalar;

			[Token(Token = "0x170000D9")]
			public Vector3 Vector
			{
				[Token(Token = "0x600052D")]
				[Address(RVA = "0xF09B20", Offset = "0xF09B20", VA = "0xF09B20")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600052C")]
			[Address(RVA = "0xF09730", Offset = "0xF09730", VA = "0xF09730")]
			public void Initialize()
			{
			}

			[Token(Token = "0x600052E")]
			[Address(RVA = "0xF09C78", Offset = "0xF09C78", VA = "0xF09C78")]
			public float GetScalar(float x)
			{
				return default(float);
			}

			[Token(Token = "0x600052F")]
			[Address(RVA = "0xF09DD4", Offset = "0xF09DD4", VA = "0xF09DD4")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement position;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformElement rotation;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TransformElement scale;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool addInitialValue;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion initialRotation;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initialScale;

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xF0966C", Offset = "0xF0966C", VA = "0xF0966C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xF0975C", Offset = "0xF0975C", VA = "0xF0975C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xF097CC", Offset = "0xF097CC", VA = "0xF097CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xF09CE4", Offset = "0xF09CE4", VA = "0xF09CE4")]
		public TransformGear()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[AddComponentMenu("Reaktion/Injector/Audio Injector")]
	public class AudioInjector : InjectorBase
	{
		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool mute;

		[Token(Token = "0x4000527")]
		private const float zeroOffset = 1.5849E-13f;

		[Token(Token = "0x4000528")]
		private const float refLevel = 0.70710677f;

		[Token(Token = "0x4000529")]
		private const float minDB = -60f;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float squareSum;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int sampleCount;

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xF09E58", Offset = "0xF09E58", VA = "0xF09E58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xF09EB8", Offset = "0xF09EB8", VA = "0xF09EB8")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xF09F40", Offset = "0xF09F40", VA = "0xF09F40")]
		public AudioInjector()
		{
		}
	}
	[Token(Token = "0x200010A")]
	[AddComponentMenu("Reaktion/Injector/System Audio Injector")]
	public class SystemAudioInjector : InjectorBase
	{
		[Token(Token = "0x400052C")]
		private const float zeroOffset = 1.5849E-13f;

		[Token(Token = "0x400052D")]
		private const float refLevel = 0.70710677f;

		[Token(Token = "0x400052E")]
		private const float minDB = -60f;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float squareSum;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sampleCount;

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xF09F68", Offset = "0xF09F68", VA = "0xF09F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xF09FC8", Offset = "0xF09FC8", VA = "0xF09FC8")]
		public void ProcessAudio(float[] data)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xF0A034", Offset = "0xF0A034", VA = "0xF0A034")]
		public SystemAudioInjector()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class GenericLinkBase
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xF0A044", Offset = "0xF0A044", VA = "0xF0A044")]
		public GenericLinkBase()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class GenericLink<T> : GenericLinkBase where T : UnityEngine.Component
	{
		[Token(Token = "0x200010D")]
		public enum Mode
		{
			[Token(Token = "0x4000538")]
			Null,
			[Token(Token = "0x4000539")]
			Automatic,
			[Token(Token = "0x400053A")]
			ByReference,
			[Token(Token = "0x400053B")]
			ByName
		}

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Mode _mode;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _reference;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _forceUpdate;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MonoBehaviour master;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _linkedObject;

		[Token(Token = "0x170000DA")]
		public Mode mode
		{
			[Token(Token = "0x6000537")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000538")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public T reference
		{
			[Token(Token = "0x6000539")]
			get
			{
				return null;
			}
			[Token(Token = "0x600053A")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public string name
		{
			[Token(Token = "0x600053B")]
			get
			{
				return null;
			}
			[Token(Token = "0x600053C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public T linkedObject
		{
			[Token(Token = "0x600053D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053E")]
		public void Initialize(MonoBehaviour master)
		{
		}

		[Token(Token = "0x600053F")]
		public void Update()
		{
		}

		[Token(Token = "0x6000540")]
		private T FindLinkedObject()
		{
			return null;
		}

		[Token(Token = "0x6000541")]
		public GenericLink()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class InjectorBase : MonoBehaviour
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float dbLevel;

		[Token(Token = "0x170000DE")]
		public float DbLevel
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0xF0A04C", Offset = "0xF0A04C", VA = "0xF0A04C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xF09F58", Offset = "0xF09F58", VA = "0xF09F58")]
		public InjectorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010F")]
	public class InjectorLink : GenericLink<InjectorBase>
	{
		[Token(Token = "0x170000DF")]
		public float DbLevel
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xF0A054", Offset = "0xF0A054", VA = "0xF0A054")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xF0A108", Offset = "0xF0A108", VA = "0xF0A108")]
		public InjectorLink()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000110")]
	public class Modifier
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xF07F44", Offset = "0xF07F44", VA = "0xF07F44")]
		public float Evaluate(float i)
		{
			return default(float);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xF0828C", Offset = "0xF0828C", VA = "0xF0828C")]
		public static Modifier Linear(float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xF0A150", Offset = "0xF0A150", VA = "0xF0A150")]
		public Modifier()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public static class Perlin
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] perm;

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xF0A18C", Offset = "0xF0A18C", VA = "0xF0A18C")]
		public static float Noise(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xF0A360", Offset = "0xF0A360", VA = "0xF0A360")]
		public static float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xF0A63C", Offset = "0xF0A63C", VA = "0xF0A63C")]
		public static float Noise(Vector2 coord)
		{
			return default(float);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xF0A6A0", Offset = "0xF0A6A0", VA = "0xF0A6A0")]
		public static float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xF0AB60", Offset = "0xF0AB60", VA = "0xF0AB60")]
		public static float Noise(Vector3 coord)
		{
			return default(float);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xF0ABD4", Offset = "0xF0ABD4", VA = "0xF0ABD4")]
		public static float Fbm(float x, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xF0AC78", Offset = "0xF0AC78", VA = "0xF0AC78")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xF0AD30", Offset = "0xF0AD30", VA = "0xF0AD30")]
		public static float Fbm(Vector3 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xF0A290", Offset = "0xF0A290", VA = "0xF0A290")]
		private static float Fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xF0A350", Offset = "0xF0A350", VA = "0xF0A350")]
		private static float Lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xF0A2BC", Offset = "0xF0A2BC", VA = "0xF0A2BC")]
		private static float Grad(int i, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF0A594", Offset = "0xF0A594", VA = "0xF0A594")]
		private static float Grad(int i, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xF0AA84", Offset = "0xF0AA84", VA = "0xF0AA84")]
		private static float Grad(int i, float x, float y, float z)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000112")]
	public class ReaktorLink : GenericLink<Reaktor>
	{
		[Token(Token = "0x170000E0")]
		public float Output
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xF07E98", Offset = "0xF07E98", VA = "0xF07E98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E1")]
		public float OutputAccumulated
		{
			[Token(Token = "0x6000558")]
			[Address(RVA = "0xF08E3C", Offset = "0xF08E3C", VA = "0xF08E3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xF0AE88", Offset = "0xF0AE88", VA = "0xF0AE88")]
		public ReaktorLink()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000113")]
	public class Remote
	{
		[Token(Token = "0x2000114")]
		public enum Control
		{
			[Token(Token = "0x4000548")]
			Off,
			[Token(Token = "0x4000549")]
			InputAxis
		}

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Control _control;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _inputAxis;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve _curve;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _defaultLevel;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _level;

		[Token(Token = "0x170000E2")]
		public float level
		{
			[Token(Token = "0x600055A")]
			[Address(RVA = "0xF0AED0", Offset = "0xF0AED0", VA = "0xF0AED0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xF0AED8", Offset = "0xF0AED8", VA = "0xF0AED8")]
		public void Reset(float defaultLevel)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xF0AEE0", Offset = "0xF0AEE0", VA = "0xF0AEE0")]
		public void Update()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xF0AF40", Offset = "0xF0AF40", VA = "0xF0AF40")]
		public Remote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class Trigger
	{
		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float threshold;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interval;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float previous;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timer;

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xF07F94", Offset = "0xF07F94", VA = "0xF07F94")]
		public bool Update(float current)
		{
			return default(bool);
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xF0AFAC", Offset = "0xF0AFAC", VA = "0xF0AFAC")]
		public Trigger()
		{
		}
	}
	[Token(Token = "0x2000116")]
	[AddComponentMenu("Reaktion/Reaktor/Reaktor")]
	public class Reaktor : MonoBehaviour
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InjectorLink injector;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve audioCurve;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Remote gain;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Remote offset;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sensitivity;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float decaySpeed;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showAudioOptions;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float headroom;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float dynamicRange;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lowerBound;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float falldown;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float output;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float outputAccumulated;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float outputDb;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float peak;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float rawInput;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fakeInput;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int activeInstanceCount;

		[Token(Token = "0x170000E3")]
		public float Output
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0xF0AFC0", Offset = "0xF0AFC0", VA = "0xF0AFC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E4")]
		public float Peak
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0xF0AFC8", Offset = "0xF0AFC8", VA = "0xF0AFC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E5")]
		public float RawInput
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0xF0AFD0", Offset = "0xF0AFD0", VA = "0xF0AFD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E6")]
		public float Gain
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0xF0AFD8", Offset = "0xF0AFD8", VA = "0xF0AFD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E7")]
		public float Offset
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xF0AFF4", Offset = "0xF0AFF4", VA = "0xF0AFF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E8")]
		public float Override
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0xF0B010", Offset = "0xF0B010", VA = "0xF0B010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000566")]
			[Address(RVA = "0xF0B02C", Offset = "0xF0B02C", VA = "0xF0B02C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public bool IsOverridden
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0xF0B034", Offset = "0xF0B034", VA = "0xF0B034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public bool Bang
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0xF0B044", Offset = "0xF0B044", VA = "0xF0B044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xF0B058", Offset = "0xF0B058", VA = "0xF0B058")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public static int ActiveInstanceCount
		{
			[Token(Token = "0x600056A")]
			[Address(RVA = "0xF0B080", Offset = "0xF0B080", VA = "0xF0B080")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xF0B0C8", Offset = "0xF0B0C8", VA = "0xF0B0C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xF0B164", Offset = "0xF0B164", VA = "0xF0B164")]
		private void Update()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xF0B304", Offset = "0xF0B304", VA = "0xF0B304")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xF0B354", Offset = "0xF0B354", VA = "0xF0B354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xF0B3A4", Offset = "0xF0B3A4", VA = "0xF0B3A4")]
		public void StopOverride()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xF0B3B0", Offset = "0xF0B3B0", VA = "0xF0B3B0")]
		public Reaktor()
		{
		}
	}
	[Token(Token = "0x2000117")]
	[AddComponentMenu("Reaktion/Utility/Band Pass Filter")]
	public class BandPassFilter : MonoBehaviour
	{
		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float cutoff;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 10f)]
		public float q;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float vF;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float vD;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float vZ1;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float vZ2;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float vZ3;

		[Token(Token = "0x170000EC")]
		public float CutoffFrequency
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0xF0B404", Offset = "0xF0B404", VA = "0xF0B404")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xF0B434", Offset = "0xF0B434", VA = "0xF0B434")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xF0B438", Offset = "0xF0B438", VA = "0xF0B438")]
		private void Update()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xF0B4CC", Offset = "0xF0B4CC", VA = "0xF0B4CC")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xF0B590", Offset = "0xF0B590", VA = "0xF0B590")]
		public BandPassFilter()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class ConstantMotion : MonoBehaviour
	{
		[Token(Token = "0x2000119")]
		public enum TransformMode
		{
			[Token(Token = "0x400056C")]
			Off,
			[Token(Token = "0x400056D")]
			XAxis,
			[Token(Token = "0x400056E")]
			YAxis,
			[Token(Token = "0x400056F")]
			ZAxis,
			[Token(Token = "0x4000570")]
			Arbitrary,
			[Token(Token = "0x4000571")]
			Random
		}

		[Serializable]
		[Token(Token = "0x200011A")]
		public class TransformElement
		{
			[Token(Token = "0x4000572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x4000573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float velocity;

			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x4000575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float randomness;

			[Token(Token = "0x4000576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 randomVector;

			[Token(Token = "0x4000577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float randomScalar;

			[Token(Token = "0x170000ED")]
			public Vector3 Vector
			{
				[Token(Token = "0x600057A")]
				[Address(RVA = "0xF0B998", Offset = "0xF0B998", VA = "0xF0B998")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000EE")]
			public float Delta
			{
				[Token(Token = "0x600057B")]
				[Address(RVA = "0xF0BAF0", Offset = "0xF0BAF0", VA = "0xF0BAF0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000579")]
			[Address(RVA = "0xF0B608", Offset = "0xF0B608", VA = "0xF0B608")]
			public void Initialize()
			{
			}

			[Token(Token = "0x600057C")]
			[Address(RVA = "0xF0BBB8", Offset = "0xF0BBB8", VA = "0xF0BBB8")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformElement position;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement rotation;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useLocalCoordinate;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xF0B5A4", Offset = "0xF0B5A4", VA = "0xF0B5A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xF0B634", Offset = "0xF0B634", VA = "0xF0B634")]
		private void Update()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xF0BB2C", Offset = "0xF0BB2C", VA = "0xF0BB2C")]
		public ConstantMotion()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[AddComponentMenu("Reaktion/Utility/Generic Audio Input")]
	public class GenericAudioInput : MonoBehaviour
	{
		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x170000EF")]
		public float estimatedLatency
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xF0BC20", Offset = "0xF0BC20", VA = "0xF0BC20")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600057E")]
			[Address(RVA = "0xF0BC28", Offset = "0xF0BC28", VA = "0xF0BC28")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xF0BC30", Offset = "0xF0BC30", VA = "0xF0BC30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xF0BCB4", Offset = "0xF0BCB4", VA = "0xF0BCB4")]
		private void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xF0BCB0", Offset = "0xF0BCB0", VA = "0xF0BCB0")]
		private void StartInput()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xF0BCB8", Offset = "0xF0BCB8", VA = "0xF0BCB8")]
		public GenericAudioInput()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class JitterMotion : MonoBehaviour
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionFrequency;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationFrequency;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float positionAmount;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationAmount;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 positionComponents;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotationComponents;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int positionOctave;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int rotationOctave;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timePosition;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeRotation;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2[] noiseVectors;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion initialRotation;

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xF0BCC0", Offset = "0xF0BCC0", VA = "0xF0BCC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xF0BDF0", Offset = "0xF0BDF0", VA = "0xF0BDF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xF0C0EC", Offset = "0xF0C0EC", VA = "0xF0C0EC")]
		private static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xF0C1A8", Offset = "0xF0C1A8", VA = "0xF0C1A8")]
		public JitterMotion()
		{
		}
	}
	[Token(Token = "0x200011D")]
	[RequireComponent(typeof(ParticleSystem))]
	[AddComponentMenu("Reaktion/Utility/Object Particle System")]
	public class ObjectParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxParticles;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject[] pool;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xF0C228", Offset = "0xF0C228", VA = "0xF0C228")]
		private void Start()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xF0C3A0", Offset = "0xF0C3A0", VA = "0xF0C3A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xF0C6F0", Offset = "0xF0C6F0", VA = "0xF0C6F0")]
		public ObjectParticleSystem()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AddComponentMenu("Reaktion/Utility/Planter")]
	public class Planter : MonoBehaviour
	{
		[Token(Token = "0x200011F")]
		public enum DistributionMode
		{
			[Token(Token = "0x4000598")]
			Single,
			[Token(Token = "0x4000599")]
			Random,
			[Token(Token = "0x400059A")]
			Grid
		}

		[Token(Token = "0x2000120")]
		public enum RotationMode
		{
			[Token(Token = "0x400059C")]
			Keep,
			[Token(Token = "0x400059D")]
			Planter,
			[Token(Token = "0x400059E")]
			Random
		}

		[Token(Token = "0x2000121")]
		public enum IntervalMode
		{
			[Token(Token = "0x40005A0")]
			Distance,
			[Token(Token = "0x40005A1")]
			Time
		}

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] prefabs;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public DistributionMode distributionMode;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 _distributionRange;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _gridSpace;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntervalMode intervalMode;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _interval;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<GameObject> objectPool;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float intervalCounter;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion previousRotation;

		[Token(Token = "0x170000F0")]
		public int maxObjects
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xF0C700", Offset = "0xF0C700", VA = "0xF0C700")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xF0C710", Offset = "0xF0C710", VA = "0xF0C710")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Vector2 distributionRange
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0xF0C718", Offset = "0xF0C718", VA = "0xF0C718")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xF0C778", Offset = "0xF0C778", VA = "0xF0C778")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public float gridSpace
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xF0C780", Offset = "0xF0C780", VA = "0xF0C780")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600058F")]
			[Address(RVA = "0xF0C794", Offset = "0xF0C794", VA = "0xF0C794")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float interval
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0xF0C79C", Offset = "0xF0C79C", VA = "0xF0C79C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xF0C7B0", Offset = "0xF0C7B0", VA = "0xF0C7B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xF0C7B8", Offset = "0xF0C7B8", VA = "0xF0C7B8")]
		private void PutInstance(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xF0CA10", Offset = "0xF0CA10", VA = "0xF0CA10")]
		private void PlantAlongGrid(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xF0CCD4", Offset = "0xF0CCD4", VA = "0xF0CCD4")]
		private void PlantRandom(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xF0CE74", Offset = "0xF0CE74", VA = "0xF0CE74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xF0CEE8", Offset = "0xF0CEE8", VA = "0xF0CEE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xF0CF38", Offset = "0xF0CF38", VA = "0xF0CF38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xF0D28C", Offset = "0xF0D28C", VA = "0xF0D28C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xF0D384", Offset = "0xF0D384", VA = "0xF0D384")]
		public Planter()
		{
		}
	}
	[Token(Token = "0x2000122")]
	[AddComponentMenu("Reaktion/Utility/Self Destruction")]
	public class SelfDestruction : MonoBehaviour
	{
		[Token(Token = "0x2000123")]
		public enum ConditionType
		{
			[Token(Token = "0x40005AE")]
			Distance,
			[Token(Token = "0x40005AF")]
			Bounds,
			[Token(Token = "0x40005B0")]
			Time,
			[Token(Token = "0x40005B1")]
			ParticleSystem
		}

		[Token(Token = "0x2000124")]
		public enum ReferenceType
		{
			[Token(Token = "0x40005B3")]
			Origin,
			[Token(Token = "0x40005B4")]
			Point,
			[Token(Token = "0x40005B5")]
			InitialPosition,
			[Token(Token = "0x40005B6")]
			GameObject,
			[Token(Token = "0x40005B7")]
			GameObjectName
		}

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConditionType conditionType;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ReferenceType referenceType;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Bounds bounds;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float lifetime;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 referencePoint;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject referenceObject;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string referenceName;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timer;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 initialPoint;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject referenceObjectCache;

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xF0D3AC", Offset = "0xF0D3AC", VA = "0xF0D3AC")]
		private Vector3 GetReferencePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xF0D554", Offset = "0xF0D554", VA = "0xF0D554")]
		private bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xF0D758", Offset = "0xF0D758", VA = "0xF0D758")]
		private void Start()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xF0D788", Offset = "0xF0D788", VA = "0xF0D788")]
		private void Update()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xF0D7B4", Offset = "0xF0D7B4", VA = "0xF0D7B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xF0D838", Offset = "0xF0D838", VA = "0xF0D838")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xF0D908", Offset = "0xF0D908", VA = "0xF0D908")]
		public SelfDestruction()
		{
		}
	}
	[Token(Token = "0x2000125")]
	[AddComponentMenu("Reaktion/Utility/Spawner")]
	public class Spawner : MonoBehaviour
	{
		[Token(Token = "0x2000126")]
		public enum Distribution
		{
			[Token(Token = "0x40005C5")]
			InSphere,
			[Token(Token = "0x40005C6")]
			InBox,
			[Token(Token = "0x40005C7")]
			AtPoints
		}

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] prefabs;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnRate;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spawnRateRandomness;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Distribution distribution;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sphereRadius;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 boxSize;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] spawnPoints;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool randomRotation;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform parent;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float randomValue;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timer;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int spawnPointIndex;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xF0D9B0", Offset = "0xF0D9B0", VA = "0xF0D9B0")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xF09604", Offset = "0xF09604", VA = "0xF09604")]
		public void Spawn(int count)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xF0DDAC", Offset = "0xF0DDAC", VA = "0xF0DDAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xF0DE48", Offset = "0xF0DE48", VA = "0xF0DE48")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xF0E060", Offset = "0xF0E060", VA = "0xF0E060")]
		public Spawner()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class TurbulentMotion : MonoBehaviour
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float density;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 linearFlow;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 displacement;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 scale;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float coeffDisplacement;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float coeffRotation;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float coeffScale;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useLocalCoordinate;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 initialPosition;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion initialRotation;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 initialScale;

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xF0E068", Offset = "0xF0E068", VA = "0xF0E068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xF0E874", Offset = "0xF0E874", VA = "0xF0E874")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xF0E114", Offset = "0xF0E114", VA = "0xF0E114")]
		private void ApplyTransform()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xF0E878", Offset = "0xF0E878", VA = "0xF0E878")]
		public TurbulentMotion()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class VariableMotion : MonoBehaviour
	{
		[Token(Token = "0x2000129")]
		public enum TransformMode
		{
			[Token(Token = "0x40005DD")]
			Off,
			[Token(Token = "0x40005DE")]
			XAxis,
			[Token(Token = "0x40005DF")]
			YAxis,
			[Token(Token = "0x40005E0")]
			ZAxis,
			[Token(Token = "0x40005E1")]
			Arbitrary,
			[Token(Token = "0x40005E2")]
			Random
		}

		[Serializable]
		[Token(Token = "0x200012A")]
		public class TransformElement
		{
			[Token(Token = "0x40005E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x40005E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve curve;

			[Token(Token = "0x40005E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float amplitude;

			[Token(Token = "0x40005E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float speed;

			[Token(Token = "0x40005E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x40005E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float randomness;

			[Token(Token = "0x40005E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 randomVector;

			[Token(Token = "0x40005EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float randomAmplitude;

			[Token(Token = "0x40005EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float time;

			[Token(Token = "0x170000F4")]
			public Vector3 Vector
			{
				[Token(Token = "0x60005B0")]
				[Address(RVA = "0xF0EB28", Offset = "0xF0EB28", VA = "0xF0EB28")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F5")]
			public float Scalar
			{
				[Token(Token = "0x60005B2")]
				[Address(RVA = "0xF0EC80", Offset = "0xF0EC80", VA = "0xF0EC80")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60005AF")]
			[Address(RVA = "0xF0EAF8", Offset = "0xF0EAF8", VA = "0xF0EAF8")]
			public void Initialize()
			{
			}

			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xF0F25C", Offset = "0xF0F25C", VA = "0xF0F25C")]
			public void Step()
			{
			}

			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xF0F390", Offset = "0xF0F390", VA = "0xF0F390")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformElement position;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement rotation;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformElement scale;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useLocalCoordinate;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool useDifferentials;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 previousPosition;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion previousRotation;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialScale;

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xF0E9B0", Offset = "0xF0E9B0", VA = "0xF0E9B0")]
		public void Rewind()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xF0F1C4", Offset = "0xF0F1C4", VA = "0xF0F1C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xF0F1C8", Offset = "0xF0F1C8", VA = "0xF0F1C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF0ECCC", Offset = "0xF0ECCC", VA = "0xF0ECCC")]
		private void ApplyTransform()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF0F290", Offset = "0xF0F290", VA = "0xF0F290")]
		public VariableMotion()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x200012B")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x40005ED")]
		NONE = 0u,
		[Token(Token = "0x40005EE")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x40005EF")]
		STAGE = 2u,
		[Token(Token = "0x40005F0")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x40005F1")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x200012C")]
	[AddComponentMenu("LIV/LIV")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200012D")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400060C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400060D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400060E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005DE")]
				[Address(RVA = "0xF1085C", Offset = "0xF1085C", VA = "0xF1085C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005E0")]
				[Address(RVA = "0xF108A4", Offset = "0xF108A4", VA = "0xF108A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005DB")]
			[Address(RVA = "0xF0FE10", Offset = "0xF0FE10", VA = "0xF0FE10")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60005DC")]
			[Address(RVA = "0xF106BC", Offset = "0xF106BC", VA = "0xF106BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005DD")]
			[Address(RVA = "0xF106C0", Offset = "0xF106C0", VA = "0xF106C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005DF")]
			[Address(RVA = "0xF10864", Offset = "0xF10864", VA = "0xF10864", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		private Transform _stage;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		[SerializeField]
		[FormerlySerializedAs("StageTransform")]
		private Transform _stageTransform;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[FormerlySerializedAs("HMDCamera")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		private Camera _HMDCamera;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Tooltip("Camera prefab for customized rendering.")]
		[FormerlySerializedAs("MRCameraPrefab")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[FormerlySerializedAs("DisableStandardAssets")]
		[SerializeField]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		private bool _disableStandardAssets;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[FormerlySerializedAs("ExcludeBehaviours")]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170000F6")]
		public Transform stage
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xF0F414", Offset = "0xF0F414", VA = "0xF0F414")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xF0F4A4", Offset = "0xF0F4A4", VA = "0xF0F4A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xF0F59C", Offset = "0xF0F59C", VA = "0xF0F59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xF0F5A0", Offset = "0xF0F5A0", VA = "0xF0F5A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xF0F5A4", Offset = "0xF0F5A4", VA = "0xF0F5A4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000F9")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xF0F69C", Offset = "0xF0F69C", VA = "0xF0F69C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000FA")]
		public Transform stageTransform
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xF0F794", Offset = "0xF0F794", VA = "0xF0F794")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0xF0F79C", Offset = "0xF0F79C", VA = "0xF0F79C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public Camera HMDCamera
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xF0F7A4", Offset = "0xF0F7A4", VA = "0xF0F7A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0xF0F7AC", Offset = "0xF0F7AC", VA = "0xF0F7AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0xF0F8A4", Offset = "0xF0F8A4", VA = "0xF0F8A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0xF0F8AC", Offset = "0xF0F8AC", VA = "0xF0F8AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0xF0F93C", Offset = "0xF0F93C", VA = "0xF0F93C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0xF0F944", Offset = "0xF0F944", VA = "0xF0F944")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0xF0F950", Offset = "0xF0F950", VA = "0xF0F950")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0xF0F958", Offset = "0xF0F958", VA = "0xF0F958")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0xF0F960", Offset = "0xF0F960", VA = "0xF0F960")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xF0F968", Offset = "0xF0F968", VA = "0xF0F968")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0xF0F9A0", Offset = "0xF0F9A0", VA = "0xF0F9A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0xF0F9A8", Offset = "0xF0F9A8", VA = "0xF0F9A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool isValid
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0xF0F9B4", Offset = "0xF0F9B4", VA = "0xF0F9B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public bool isActive
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xF0FB14", Offset = "0xF0FB14", VA = "0xF0FB14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000103")]
		private bool _isReady
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0xF0FB1C", Offset = "0xF0FB1C", VA = "0xF0FB1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public SDKRender render
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xF0FC28", Offset = "0xF0FC28", VA = "0xF0FC28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xF0FC30", Offset = "0xF0FC30", VA = "0xF0FC30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xF0FC80", Offset = "0xF0FC80", VA = "0xF0FC80")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xF0FDA0", Offset = "0xF0FDA0", VA = "0xF0FDA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xF0FDA8", Offset = "0xF0FDA8", VA = "0xF0FDA8")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xF0FC3C", Offset = "0xF0FC3C", VA = "0xF0FC3C")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xF0FE38", Offset = "0xF0FE38", VA = "0xF0FE38")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xF0FE44", Offset = "0xF0FE44", VA = "0xF0FE44")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xF0FEF0", Offset = "0xF0FEF0", VA = "0xF0FEF0")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xF100F4", Offset = "0xF100F4", VA = "0xF100F4")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xF101CC", Offset = "0xF101CC", VA = "0xF101CC")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xF10164", Offset = "0xF10164", VA = "0xF10164")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xF101A8", Offset = "0xF101A8", VA = "0xF101A8")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xF0FFA4", Offset = "0xF0FFA4", VA = "0xF0FFA4")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xF0FC98", Offset = "0xF0FC98", VA = "0xF0FC98")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xF104FC", Offset = "0xF104FC", VA = "0xF104FC")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public static class SDKBridge
	{
		[Token(Token = "0x200012F")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4000616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4000617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4000618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000107")]
		public static bool IsActive
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xF0FB90", Offset = "0xF0FB90", VA = "0xF0FB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xF108AC", Offset = "0xF108AC", VA = "0xF108AC")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xF108B4", Offset = "0xF108B4", VA = "0xF108B4")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xF108BC", Offset = "0xF108BC", VA = "0xF108BC")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xF108C4", Offset = "0xF108C4", VA = "0xF108C4")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xF108CC", Offset = "0xF108CC", VA = "0xF108CC")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xF108D4", Offset = "0xF108D4", VA = "0xF108D4")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xF1091C", Offset = "0xF1091C", VA = "0xF1091C")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xF10964", Offset = "0xF10964", VA = "0xF10964")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xF1096C", Offset = "0xF1096C", VA = "0xF1096C")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xF10974", Offset = "0xF10974", VA = "0xF10974")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xF109BC", Offset = "0xF109BC", VA = "0xF109BC")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xF10A04", Offset = "0xF10A04", VA = "0xF10A04")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xF10A4C", Offset = "0xF10A4C", VA = "0xF10A4C")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xF10A54", Offset = "0xF10A54", VA = "0xF10A54")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xF10AD8", Offset = "0xF10AD8", VA = "0xF10AD8")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xF10BD4", Offset = "0xF10BD4", VA = "0xF10BD4")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xF10C94", Offset = "0xF10C94", VA = "0xF10C94")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xF10CF0", Offset = "0xF10CF0", VA = "0xF10CF0")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xF10D4C", Offset = "0xF10D4C", VA = "0xF10D4C")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xF1030C", Offset = "0xF1030C", VA = "0xF1030C")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x60005F6")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F7")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005F8")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F9")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60005FA")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xF10DFC", Offset = "0xF10DFC", VA = "0xF10DFC")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xF110D0", Offset = "0xF110D0", VA = "0xF110D0")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xF11298", Offset = "0xF11298", VA = "0xF11298")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xF113C8", Offset = "0xF113C8", VA = "0xF113C8")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xF11530", Offset = "0xF11530", VA = "0xF11530")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xF115D0", Offset = "0xF115D0", VA = "0xF115D0")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000130")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x17000108")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0xF11958", Offset = "0xF11958", VA = "0xF11958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000109")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xF119A4", Offset = "0xF119A4", VA = "0xF119A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0xF119B4", Offset = "0xF119B4", VA = "0xF119B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010B")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0xF11A58", Offset = "0xF11A58", VA = "0xF11A58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xF11B10", Offset = "0xF11B10", VA = "0xF11B10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010D")]
		public LIV liv
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0xF140F8", Offset = "0xF140F8", VA = "0xF140F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0xF14100", Offset = "0xF14100", VA = "0xF14100")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x1700010F")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0xF14110", Offset = "0xF14110", VA = "0xF14110")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000110")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6000614")]
			[Address(RVA = "0xF14120", Offset = "0xF14120", VA = "0xF14120")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000111")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0xF14128", Offset = "0xF14128", VA = "0xF14128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public Camera cameraReference
		{
			[Token(Token = "0x6000616")]
			[Address(RVA = "0xF13E84", Offset = "0xF13E84", VA = "0xF13E84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0xF14130", Offset = "0xF14130", VA = "0xF14130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public Transform stage
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0xF1414C", Offset = "0xF1414C", VA = "0xF1414C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xF14164", Offset = "0xF14164", VA = "0xF14164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0xF14180", Offset = "0xF14180", VA = "0xF14180")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000117")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0xF139E8", Offset = "0xF139E8", VA = "0xF139E8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000118")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0xF13AAC", Offset = "0xF13AAC", VA = "0xF13AAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000119")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xF13D70", Offset = "0xF13D70", VA = "0xF13D70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011A")]
		public bool canSetPose
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0xF14278", Offset = "0xF14278", VA = "0xF14278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xF117B8", Offset = "0xF117B8", VA = "0xF117B8")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xF118BC", Offset = "0xF118BC", VA = "0xF118BC")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xF101EC", Offset = "0xF101EC", VA = "0xF101EC")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xF10790", Offset = "0xF10790", VA = "0xF10790")]
		public void Render()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xF12734", Offset = "0xF12734", VA = "0xF12734")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xF12A64", Offset = "0xF12A64", VA = "0xF12A64")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xF13474", Offset = "0xF13474", VA = "0xF13474")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xF11B94", Offset = "0xF11B94", VA = "0xF11B94")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xF13F10", Offset = "0xF13F10", VA = "0xF13F10")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xF102C4", Offset = "0xF102C4", VA = "0xF102C4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xF14298", Offset = "0xF14298", VA = "0xF14298")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xF14588", Offset = "0xF14588", VA = "0xF14588")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xF1471C", Offset = "0xF1471C", VA = "0xF1471C")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xF14794", Offset = "0xF14794", VA = "0xF14794")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xF14094", Offset = "0xF14094", VA = "0xF14094")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xF122A8", Offset = "0xF122A8", VA = "0xF122A8")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xF12300", Offset = "0xF12300", VA = "0xF12300")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xF126FC", Offset = "0xF126FC", VA = "0xF126FC")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xF139B0", Offset = "0xF139B0", VA = "0xF139B0")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xF13B54", Offset = "0xF13B54", VA = "0xF13B54")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xF13CB0", Offset = "0xF13CB0", VA = "0xF13CB0")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xF13DD0", Offset = "0xF13DD0", VA = "0xF13DD0")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xF13E08", Offset = "0xF13E08", VA = "0xF13E08")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xF14934", Offset = "0xF14934", VA = "0xF14934")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xF149CC", Offset = "0xF149CC", VA = "0xF149CC")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xF14A64", Offset = "0xF14A64", VA = "0xF14A64")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xF14AFC", Offset = "0xF14AFC", VA = "0xF14AFC")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xF1243C", Offset = "0xF1243C", VA = "0xF1243C")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xF13B8C", Offset = "0xF13B8C", VA = "0xF13B8C")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x2000131")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x400063A")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x400063B")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400063C")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400063D")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400063E")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400063F")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4000640")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4000641")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4000642")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4000643")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4000644")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xF13ACC", Offset = "0xF13ACC", VA = "0xF13ACC")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xF13D2C", Offset = "0xF13D2C", VA = "0xF13D2C")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xF13D8C", Offset = "0xF13D8C", VA = "0xF13D8C")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xF13E40", Offset = "0xF13E40", VA = "0xF13E40")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xF13B10", Offset = "0xF13B10", VA = "0xF13B10")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xF13CE8", Offset = "0xF13CE8", VA = "0xF13CE8")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public struct SDKConstants
	{
		[Token(Token = "0x4000645")]
		public const string SDK_ID = "LSBAQRQ61KGJX6TX6INTQEWQWVQL5GEN";

		[Token(Token = "0x4000646")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4000647")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000133")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4000649")]
		NONE = 0,
		[Token(Token = "0x400064A")]
		GAME = 63
	}
	[Token(Token = "0x2000134")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x400064C")]
		NONE = 0uL,
		[Token(Token = "0x400064D")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x400064E")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x400064F")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4000650")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4000651")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4000652")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4000653")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4000654")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4000655")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4000656")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4000657")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000135")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4000659")]
		UNDEFINED = 0u,
		[Token(Token = "0x400065A")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x400065B")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x400065C")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000136")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x400065E")]
		UNDEFINED,
		[Token(Token = "0x400065F")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000137")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4000661")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000662")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000138")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4000664")]
		UNDEFINED,
		[Token(Token = "0x4000665")]
		RAW,
		[Token(Token = "0x4000666")]
		DIRECTX,
		[Token(Token = "0x4000667")]
		OPENGL,
		[Token(Token = "0x4000668")]
		VULKAN,
		[Token(Token = "0x4000669")]
		METAL
	}
	[Token(Token = "0x2000139")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x400066B")]
		UNDEFINED,
		[Token(Token = "0x400066C")]
		LINEAR,
		[Token(Token = "0x400066D")]
		SRGB
	}
	[Token(Token = "0x200013A")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x400066F")]
		UNDEFINED,
		[Token(Token = "0x4000670")]
		FORWARD,
		[Token(Token = "0x4000671")]
		DEFERRED,
		[Token(Token = "0x4000672")]
		VERTEX_LIT,
		[Token(Token = "0x4000673")]
		UNIVERSAL,
		[Token(Token = "0x4000674")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x200013B")]
	public struct SDKResolution
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700011B")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0xF117B0", Offset = "0xF117B0", VA = "0xF117B0")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xF14C5C", Offset = "0xF14C5C", VA = "0xF14C5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public struct SDKVector3
	{
		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700011C")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xF14CFC", Offset = "0xF14CFC", VA = "0xF14CFC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700011D")]
		public static SDKVector3 one
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0xF14D0C", Offset = "0xF14D0C", VA = "0xF14D0C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700011E")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xF14D1C", Offset = "0xF14D1C", VA = "0xF14D1C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700011F")]
		public static SDKVector3 up
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xF14D2C", Offset = "0xF14D2C", VA = "0xF14D2C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000120")]
		public static SDKVector3 right
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xF14D3C", Offset = "0xF14D3C", VA = "0xF14D3C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xF14D4C", Offset = "0xF14D4C", VA = "0xF14D4C")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xF14580", Offset = "0xF14580", VA = "0xF14580")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xF14D50", Offset = "0xF14D50", VA = "0xF14D50")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xF14D60", Offset = "0xF14D60", VA = "0xF14D60")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xF14D70", Offset = "0xF14D70", VA = "0xF14D70")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xF14D80", Offset = "0xF14D80", VA = "0xF14D80")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xF14D90", Offset = "0xF14D90", VA = "0xF14D90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000121")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0xF14E54", Offset = "0xF14E54", VA = "0xF14E54")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xF14E68", Offset = "0xF14E68", VA = "0xF14E68")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xF14584", Offset = "0xF14584", VA = "0xF14584")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xF14E6C", Offset = "0xF14E6C", VA = "0xF14E6C")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xF14F20", Offset = "0xF14F20", VA = "0xF14F20")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xF14F94", Offset = "0xF14F94", VA = "0xF14F94")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xF15038", Offset = "0xF15038", VA = "0xF15038", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000122")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xC14C94", Offset = "0xC14C94", VA = "0xC14C94")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xC14CC0", Offset = "0xC14CC0", VA = "0xC14CC0")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xC14D04", Offset = "0xC14D04", VA = "0xC14D04")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xC14D48", Offset = "0xC14D48", VA = "0xC14D48")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xC14DF4", Offset = "0xC14DF4", VA = "0xC14DF4")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xC14F00", Offset = "0xC14F00", VA = "0xC14F00")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xC14F58", Offset = "0xC14F58", VA = "0xC14F58")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xC14F94", Offset = "0xC14F94", VA = "0xC14F94")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xC15028", Offset = "0xC15028", VA = "0xC15028")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xC15054", Offset = "0xC15054", VA = "0xC15054")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xC15138", Offset = "0xC15138", VA = "0xC15138", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public struct SDKPlane
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000123")]
		public static SDKPlane empty
		{
			[Token(Token = "0x600065A")]
			[Address(RVA = "0xC15648", Offset = "0xC15648", VA = "0xC15648")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xC155E4", Offset = "0xC155E4", VA = "0xC155E4")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xC15678", Offset = "0xC15678", VA = "0xC15678", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000140")]
	public struct SDKPriority
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000124")]
		public static SDKPriority empty
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0xC1573C", Offset = "0xC1573C", VA = "0xC1573C")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xC15748", Offset = "0xC15748", VA = "0xC15748", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000141")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000125")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x600065E")]
			[Address(RVA = "0xC159B4", Offset = "0xC159B4", VA = "0xC159B4")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xC15A34", Offset = "0xC15A34", VA = "0xC15A34", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000142")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000126")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xC15C78", Offset = "0xC15C78", VA = "0xC15C78")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xC15EB8", Offset = "0xC15EB8", VA = "0xC15EB8")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xC15EC8", Offset = "0xC15EC8", VA = "0xC15EC8")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xC15EDC", Offset = "0xC15EDC", VA = "0xC15EDC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000127")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0xC16210", Offset = "0xC16210", VA = "0xC16210")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xC16318", Offset = "0xC16318", VA = "0xC16318", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000144")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000128")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0xC16254", Offset = "0xC16254", VA = "0xC16254")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC163DC", Offset = "0xC163DC", VA = "0xC163DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public struct SDKTexture
	{
		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000129")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0xC16620", Offset = "0xC16620", VA = "0xC16620")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xC1667C", Offset = "0xC1667C", VA = "0xC1667C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public struct SDKTransform
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700012A")]
		public static SDKTransform empty
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0xC15E40", Offset = "0xC15E40", VA = "0xC15E40")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xC16A20", Offset = "0xC16A20", VA = "0xC16A20", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700012B")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0xC15E0C", Offset = "0xC15E0C", VA = "0xC15E0C")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC16B08", Offset = "0xC16B08", VA = "0xC16B08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000148")]
	public struct SDKControllerState
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700012C")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0xC16CE4", Offset = "0xC16CE4", VA = "0xC16CE4")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xC16E8C", Offset = "0xC16E8C", VA = "0xC16E8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public struct SDKPose
	{
		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x1700012D")]
		public static SDKPose empty
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0xC15D5C", Offset = "0xC15D5C", VA = "0xC15D5C")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xC171F4", Offset = "0xC171F4", VA = "0xC171F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200014A")]
	public static class SDKUtils
	{
		[Token(Token = "0x1700012E")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6000674")]
			[Address(RVA = "0xC17940", Offset = "0xC17940", VA = "0xC17940")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xC1746C", Offset = "0xC1746C", VA = "0xC1746C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xC17928", Offset = "0xC17928", VA = "0xC17928")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC1796C", Offset = "0xC1796C", VA = "0xC1796C")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC179F8", Offset = "0xC179F8", VA = "0xC179F8")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xC17A18", Offset = "0xC17A18", VA = "0xC17A18")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xC17A7C", Offset = "0xC17A7C", VA = "0xC17A7C")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xC17A88", Offset = "0xC17A88", VA = "0xC17A88")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xC17A9C", Offset = "0xC17A9C", VA = "0xC17A9C")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xC17C88", Offset = "0xC17C88", VA = "0xC17C88")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xC1800C", Offset = "0xC1800C", VA = "0xC1800C")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xC17B24", Offset = "0xC17B24", VA = "0xC17B24")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xC18258", Offset = "0xC18258", VA = "0xC18258")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x600067F")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6000680")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xC184A4", Offset = "0xC184A4", VA = "0xC184A4")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC18614", Offset = "0xC18614", VA = "0xC18614")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC186A8", Offset = "0xC186A8", VA = "0xC186A8")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC187D0", Offset = "0xC187D0", VA = "0xC187D0")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xC18964", Offset = "0xC18964", VA = "0xC18964")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC18970", Offset = "0xC18970", VA = "0xC18970")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xC18AE0", Offset = "0xC18AE0", VA = "0xC18AE0")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xC18B68", Offset = "0xC18B68", VA = "0xC18B68")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x200014B")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	[AddComponentMenu("Kino Image Effects/Vignette")]
	public class Vignette : MonoBehaviour
	{
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _falloff;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ChromaticAberration;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_material;

		[Token(Token = "0x1700012F")]
		public float intensity
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xC18DF4", Offset = "0xC18DF4", VA = "0xC18DF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600068A")]
			[Address(RVA = "0xC18DFC", Offset = "0xC18DFC", VA = "0xC18DFC")]
			set
			{
			}
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xC18E04", Offset = "0xC18E04", VA = "0xC18E04")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC18F3C", Offset = "0xC18F3C", VA = "0xC18F3C")]
		public Vignette()
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200014C")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x40006D7")]
		Array = 1,
		[Token(Token = "0x40006D8")]
		Class,
		[Token(Token = "0x40006D9")]
		Value,
		[Token(Token = "0x40006DA")]
		IntValue,
		[Token(Token = "0x40006DB")]
		DoubleValue,
		[Token(Token = "0x40006DC")]
		BoolValue,
		[Token(Token = "0x40006DD")]
		FloatValue
	}
	[Token(Token = "0x200014D")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200014E")]
		[CompilerGenerated]
		private sealed class <get_Children>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700013D")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60006C6")]
				[Address(RVA = "0xC1B2BC", Offset = "0xC1B2BC", VA = "0xC1B2BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006C8")]
				[Address(RVA = "0xC1B304", Offset = "0xC1B304", VA = "0xC1B304", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006C3")]
			[Address(RVA = "0xC1909C", Offset = "0xC1909C", VA = "0xC1909C")]
			[DebuggerHidden]
			public <get_Children>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60006C4")]
			[Address(RVA = "0xC1B2A0", Offset = "0xC1B2A0", VA = "0xC1B2A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006C5")]
			[Address(RVA = "0xC1B2A4", Offset = "0xC1B2A4", VA = "0xC1B2A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006C7")]
			[Address(RVA = "0xC1B2C4", Offset = "0xC1B2C4", VA = "0xC1B2C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60006C9")]
			[Address(RVA = "0xC1B30C", Offset = "0xC1B30C", VA = "0xC1B30C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60006CA")]
			[Address(RVA = "0xC1B3A4", Offset = "0xC1B3A4", VA = "0xC1B3A4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200014F")]
		[CompilerGenerated]
		private sealed class <get_DeepChildren>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40006E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40006E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40006E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40006E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700013F")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60006D0")]
				[Address(RVA = "0xC1B9F4", Offset = "0xC1B9F4", VA = "0xC1B9F4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006D2")]
				[Address(RVA = "0xC1BA3C", Offset = "0xC1BA3C", VA = "0xC1BA3C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006CB")]
			[Address(RVA = "0xC19148", Offset = "0xC19148", VA = "0xC19148")]
			[DebuggerHidden]
			public <get_DeepChildren>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60006CC")]
			[Address(RVA = "0xC1B3A8", Offset = "0xC1B3A8", VA = "0xC1B3A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006CD")]
			[Address(RVA = "0xC1B460", Offset = "0xC1B460", VA = "0xC1B460", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006CE")]
			[Address(RVA = "0xC1B944", Offset = "0xC1B944", VA = "0xC1B944")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xC1B894", Offset = "0xC1B894", VA = "0xC1B894")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60006D1")]
			[Address(RVA = "0xC1B9FC", Offset = "0xC1B9FC", VA = "0xC1B9FC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xC1BA44", Offset = "0xC1BA44", VA = "0xC1BA44", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xC1BAE8", Offset = "0xC1BAE8", VA = "0xC1BAE8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public virtual JSONNode this[int aIndex]
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xC18F50", Offset = "0xC18F50", VA = "0xC18F50", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xC18F58", Offset = "0xC18F58", VA = "0xC18F58", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public virtual JSONNode this[string aKey]
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xC18F5C", Offset = "0xC18F5C", VA = "0xC18F5C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xC18F64", Offset = "0xC18F64", VA = "0xC18F64", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public virtual string Value
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xC18F68", Offset = "0xC18F68", VA = "0xC18F68", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xC18FA8", Offset = "0xC18FA8", VA = "0xC18FA8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public virtual int Count
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xC18FAC", Offset = "0xC18FAC", VA = "0xC18FAC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000134")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0xC1902C", Offset = "0xC1902C", VA = "0xC1902C", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Children>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0xC190D0", Offset = "0xC190D0", VA = "0xC190D0")]
			[IteratorStateMachine(typeof(<get_DeepChildren>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public virtual JSONBinaryTag Tag
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0xC191FC", Offset = "0xC191FC", VA = "0xC191FC", Slot = "19")]
			[CompilerGenerated]
			get
			{
				return default(JSONBinaryTag);
			}
			[Token(Token = "0x600069F")]
			[Address(RVA = "0xC19204", Offset = "0xC19204", VA = "0xC19204", Slot = "20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public virtual int AsInt
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0xC1920C", Offset = "0xC1920C", VA = "0xC1920C", Slot = "21")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006A1")]
			[Address(RVA = "0xC19240", Offset = "0xC19240", VA = "0xC19240", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0xC19294", Offset = "0xC19294", VA = "0xC19294", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0xC192CC", Offset = "0xC192CC", VA = "0xC192CC", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0xC19320", Offset = "0xC19320", VA = "0xC19320", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0xC19358", Offset = "0xC19358", VA = "0xC19358", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0xC193AC", Offset = "0xC193AC", VA = "0xC193AC", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0xC19464", Offset = "0xC19464", VA = "0xC19464", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0xC194F4", Offset = "0xC194F4", VA = "0xC194F4", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0xC1956C", Offset = "0xC1956C", VA = "0xC1956C", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC18F4C", Offset = "0xC18F4C", VA = "0xC18F4C", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xC18FB4", Offset = "0xC18FB4", VA = "0xC18FB4", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xC19014", Offset = "0xC19014", VA = "0xC19014", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xC1901C", Offset = "0xC1901C", VA = "0xC1901C", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xC19024", Offset = "0xC19024", VA = "0xC19024", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xC1917C", Offset = "0xC1917C", VA = "0xC1917C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xC191BC", Offset = "0xC191BC", VA = "0xC191BC", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		public abstract string ToJSON(int prefix);

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xC195E4", Offset = "0xC195E4", VA = "0xC195E4")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xC1969C", Offset = "0xC1969C", VA = "0xC1969C")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xC196D8", Offset = "0xC196D8", VA = "0xC196D8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xC19760", Offset = "0xC19760", VA = "0xC19760")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xC19778", Offset = "0xC19778", VA = "0xC19778", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xC19784", Offset = "0xC19784", VA = "0xC19784", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xC1978C", Offset = "0xC1978C", VA = "0xC1978C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xC19958", Offset = "0xC19958", VA = "0xC19958")]
		private static JSONData Numberize(string token)
		{
			return null;
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xC19C20", Offset = "0xC19C20", VA = "0xC19C20")]
		private static void AddElement(JSONNode ctx, string token, string tokenName, bool tokenIsString)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xC19D44", Offset = "0xC19D44", VA = "0xC19D44")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xC1A488", Offset = "0xC1A488", VA = "0xC1A488", Slot = "31")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xC1A48C", Offset = "0xC1A48C", VA = "0xC1A48C")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xC1A50C", Offset = "0xC1A50C", VA = "0xC1A50C")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xC1A55C", Offset = "0xC1A55C", VA = "0xC1A55C")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xC1A5AC", Offset = "0xC1A5AC", VA = "0xC1A5AC")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xC1A5FC", Offset = "0xC1A5FC", VA = "0xC1A5FC")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xC1A7CC", Offset = "0xC1A7CC", VA = "0xC1A7CC")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xC1A9CC", Offset = "0xC1A9CC", VA = "0xC1A9CC")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xC1ADE4", Offset = "0xC1ADE4", VA = "0xC1ADE4")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xC1AE34", Offset = "0xC1AE34", VA = "0xC1AE34")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xC1AE84", Offset = "0xC1AE84", VA = "0xC1AE84")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xC1AED4", Offset = "0xC1AED4", VA = "0xC1AED4")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xC1B068", Offset = "0xC1B068", VA = "0xC1B068")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xC1B1E4", Offset = "0xC1B1E4", VA = "0xC1B1E4")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xC1B298", Offset = "0xC1B298", VA = "0xC1B298")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000151")]
		[CompilerGenerated]
		private sealed class <get_Children>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000145")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60006E8")]
				[Address(RVA = "0xC1CB10", Offset = "0xC1CB10", VA = "0xC1CB10", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006EA")]
				[Address(RVA = "0xC1CB58", Offset = "0xC1CB58", VA = "0xC1CB58", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006E4")]
			[Address(RVA = "0xC1C058", Offset = "0xC1C058", VA = "0xC1C058")]
			[DebuggerHidden]
			public <get_Children>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60006E5")]
			[Address(RVA = "0xC1C910", Offset = "0xC1C910", VA = "0xC1C910", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006E6")]
			[Address(RVA = "0xC1C92C", Offset = "0xC1C92C", VA = "0xC1C92C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xC1CAC0", Offset = "0xC1CAC0", VA = "0xC1CAC0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60006E9")]
			[Address(RVA = "0xC1CB18", Offset = "0xC1CB18", VA = "0xC1CB18", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xC1CB60", Offset = "0xC1CB60", VA = "0xC1CB60", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xC1CC04", Offset = "0xC1CC04", VA = "0xC1CC04", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000152")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006F1")]
				[Address(RVA = "0xC1CE08", Offset = "0xC1CE08", VA = "0xC1CE08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006F3")]
				[Address(RVA = "0xC1CE50", Offset = "0xC1CE50", VA = "0xC1CE50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006ED")]
			[Address(RVA = "0xC1C0F4", Offset = "0xC1C0F4", VA = "0xC1C0F4")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xC1CC08", Offset = "0xC1CC08", VA = "0xC1CC08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xC1CC24", Offset = "0xC1CC24", VA = "0xC1CC24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xC1CDB8", Offset = "0xC1CDB8", VA = "0xC1CDB8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xC1CE10", Offset = "0xC1CE10", VA = "0xC1CE10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000141")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xC1BAEC", Offset = "0xC1BAEC", VA = "0xC1BAEC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0xC1BBC8", Offset = "0xC1BBC8", VA = "0xC1BBC8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xC1BCD0", Offset = "0xC1BCD0", VA = "0xC1BCD0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0xC1BD34", Offset = "0xC1BD34", VA = "0xC1BD34", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public override int Count
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xC1BDDC", Offset = "0xC1BDDC", VA = "0xC1BDDC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000144")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0xC1BFE0", Offset = "0xC1BFE0", VA = "0xC1BFE0", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Children>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xC1BE24", Offset = "0xC1BE24", VA = "0xC1BE24", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xC1BECC", Offset = "0xC1BECC", VA = "0xC1BECC", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xC1BF80", Offset = "0xC1BF80", VA = "0xC1BF80", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xC1C08C", Offset = "0xC1C08C", VA = "0xC1C08C", Slot = "32")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__14))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xC1C11C", Offset = "0xC1C11C", VA = "0xC1C11C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xC1C334", Offset = "0xC1C334", VA = "0xC1C334", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xC1C5B4", Offset = "0xC1C5B4", VA = "0xC1C5B4", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC1C834", Offset = "0xC1C834", VA = "0xC1C834", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC1A40C", Offset = "0xC1A40C", VA = "0xC1A40C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000155")]
		[CompilerGenerated]
		private sealed class <get_Children>d__16 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40006F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40006F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x40006F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700014E")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600070B")]
				[Address(RVA = "0xC1E738", Offset = "0xC1E738", VA = "0xC1E738", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600070D")]
				[Address(RVA = "0xC1E780", Offset = "0xC1E780", VA = "0xC1E780", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000707")]
			[Address(RVA = "0xC1D6DC", Offset = "0xC1D6DC", VA = "0xC1D6DC")]
			[DebuggerHidden]
			public <get_Children>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000708")]
			[Address(RVA = "0xC1E524", Offset = "0xC1E524", VA = "0xC1E524", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000709")]
			[Address(RVA = "0xC1E540", Offset = "0xC1E540", VA = "0xC1E540", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600070A")]
			[Address(RVA = "0xC1E6E8", Offset = "0xC1E6E8", VA = "0xC1E6E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600070C")]
			[Address(RVA = "0xC1E740", Offset = "0xC1E740", VA = "0xC1E740", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0xC1E788", Offset = "0xC1E788", VA = "0xC1E788", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600070F")]
			[Address(RVA = "0xC1E82C", Offset = "0xC1E82C", VA = "0xC1E82C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000156")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x40006FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000150")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000714")]
				[Address(RVA = "0xC1EA70", Offset = "0xC1EA70", VA = "0xC1EA70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000151")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000716")]
				[Address(RVA = "0xC1EAB8", Offset = "0xC1EAB8", VA = "0xC1EAB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000710")]
			[Address(RVA = "0xC1D778", Offset = "0xC1D778", VA = "0xC1D778")]
			[DebuggerHidden]
			public <GetEnumerator>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000711")]
			[Address(RVA = "0xC1E830", Offset = "0xC1E830", VA = "0xC1E830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000712")]
			[Address(RVA = "0xC1E84C", Offset = "0xC1E84C", VA = "0xC1E84C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000713")]
			[Address(RVA = "0xC1EA20", Offset = "0xC1EA20", VA = "0xC1EA20")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000715")]
			[Address(RVA = "0xC1EA78", Offset = "0xC1EA78", VA = "0xC1EA78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000149")]
		public Dictionary<string, JSONNode> Dict
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0xC1CE58", Offset = "0xC1CE58", VA = "0xC1CE58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0xC1CE60", Offset = "0xC1CE60", VA = "0xC1CE60", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0xC1CF50", Offset = "0xC1CF50", VA = "0xC1CF50", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0xC1D01C", Offset = "0xC1D01C", VA = "0xC1D01C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0xC1D0BC", Offset = "0xC1D0BC", VA = "0xC1D0BC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public override int Count
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0xC1D198", Offset = "0xC1D198", VA = "0xC1D198", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014D")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0xC1D664", Offset = "0xC1D664", VA = "0xC1D664", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Children>d__16))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xC1D1E8", Offset = "0xC1D1E8", VA = "0xC1D1E8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xC1D2FC", Offset = "0xC1D2FC", VA = "0xC1D2FC", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xC1D3C0", Offset = "0xC1D3C0", VA = "0xC1D3C0", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xC1D49C", Offset = "0xC1D49C", VA = "0xC1D49C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xC1D710", Offset = "0xC1D710", VA = "0xC1D710", Slot = "32")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__17))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xC1D7A0", Offset = "0xC1D7A0", VA = "0xC1D7A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xC1DB88", Offset = "0xC1DB88", VA = "0xC1DB88", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xC1DFF4", Offset = "0xC1DFF4", VA = "0xC1DFF4", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xC1E2C0", Offset = "0xC1E2C0", VA = "0xC1E2C0", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xC1A390", Offset = "0xC1A390", VA = "0xC1A390")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Data;

		[Token(Token = "0x17000152")]
		public override string Value
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0xC1EAC0", Offset = "0xC1EAC0", VA = "0xC1EAC0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xC1EAC8", Offset = "0xC1EAC8", VA = "0xC1EAC8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xC19660", Offset = "0xC19660", VA = "0xC19660")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xC1AD94", Offset = "0xC1AD94", VA = "0xC1AD94")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xC19B80", Offset = "0xC19B80", VA = "0xC19B80")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xC19BD0", Offset = "0xC19BD0", VA = "0xC19BD0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xC19B30", Offset = "0xC19B30", VA = "0xC19B30")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xC1EAE0", Offset = "0xC1EAE0", VA = "0xC1EAE0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xC1EB38", Offset = "0xC1EB38", VA = "0xC1EB38", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xC1EB90", Offset = "0xC1EB90", VA = "0xC1EB90", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xC1ECC8", Offset = "0xC1ECC8", VA = "0xC1ECC8", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000158")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JSONNode m_Node;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_Key;

		[Token(Token = "0x17000153")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0xC1EFF4", Offset = "0xC1EFF4", VA = "0xC1EFF4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xC1F058", Offset = "0xC1F058", VA = "0xC1F058", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xC1F0D8", Offset = "0xC1F0D8", VA = "0xC1F0D8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xC1F148", Offset = "0xC1F148", VA = "0xC1F148", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public override int AsInt
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xC1F3E8", Offset = "0xC1F3E8", VA = "0xC1F3E8", Slot = "21")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xC1F484", Offset = "0xC1F484", VA = "0xC1F484", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public override float AsFloat
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xC1F524", Offset = "0xC1F524", VA = "0xC1F524", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xC1F5C0", Offset = "0xC1F5C0", VA = "0xC1F5C0", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public override double AsDouble
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xC1F660", Offset = "0xC1F660", VA = "0xC1F660", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xC1F6FC", Offset = "0xC1F6FC", VA = "0xC1F6FC", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public override bool AsBool
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xC1F79C", Offset = "0xC1F79C", VA = "0xC1F79C", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xC1F838", Offset = "0xC1F838", VA = "0xC1F838", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xC1F8D8", Offset = "0xC1F8D8", VA = "0xC1F8D8", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xC1F940", Offset = "0xC1F940", VA = "0xC1F940", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xC1BBA0", Offset = "0xC1BBA0", VA = "0xC1BBA0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xC1CF24", Offset = "0xC1CF24", VA = "0xC1CF24")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC1EFA0", Offset = "0xC1EFA0", VA = "0xC1EFA0")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC1F1D0", Offset = "0xC1F1D0", VA = "0xC1F1D0", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xC1F250", Offset = "0xC1F250", VA = "0xC1F250", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xC1F2D8", Offset = "0xC1F2D8", VA = "0xC1F2D8")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xC1F2F0", Offset = "0xC1F2F0", VA = "0xC1F2F0")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xC1F308", Offset = "0xC1F308", VA = "0xC1F308", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xC1F320", Offset = "0xC1F320", VA = "0xC1F320", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xC1F328", Offset = "0xC1F328", VA = "0xC1F328", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC1F368", Offset = "0xC1F368", VA = "0xC1F368", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xC1F3A8", Offset = "0xC1F3A8", VA = "0xC1F3A8", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public static class JSON
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0xC1F9A8", Offset = "0xC1F9A8", VA = "0xC1F9A8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace TiltBrush
{
	[Token(Token = "0x200015A")]
	[ExecuteInEditMode]
	internal class TestPackInt : MonoBehaviour
	{
		[Token(Token = "0x4000700")]
		private const int kSelfContainedTest = 0;

		[Token(Token = "0x4000701")]
		private const int kTwoPassTestPack = 1;

		[Token(Token = "0x4000702")]
		private const int kTwoPassTestUnpackAndCheck = 2;

		[Token(Token = "0x4000703")]
		private const int kRenderUvPass = 3;

		[Token(Token = "0x4000704")]
		private const int kCopyPass = 4;

		[Token(Token = "0x4000705")]
		private const int kUnpackRepack = 5;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_runCount;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material sm_copyTextureMat;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_testMaterial;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_debugRt;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xC1F9AC", Offset = "0xC1F9AC", VA = "0xC1F9AC")]
		private static void MyBlit(Texture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xC1FA10", Offset = "0xC1FA10", VA = "0xC1FA10")]
		private static void MyBlit(Texture source, RenderTexture destination, Material mat, int pass)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xC1FC10", Offset = "0xC1FC10", VA = "0xC1FC10")]
		private static Color32[] GetColors(RenderTexture rt)
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xC1FE28", Offset = "0xC1FE28", VA = "0xC1FE28")]
		private static void WriteTextureToDisk(RenderTexture rt, string name)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xC200F4", Offset = "0xC200F4", VA = "0xC200F4")]
		private static void CheckAllGreen(RenderTexture rt, RenderTexture output)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC205E8", Offset = "0xC205E8", VA = "0xC205E8")]
		private static RenderTexture GetTemporaryTarget()
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xC2067C", Offset = "0xC2067C", VA = "0xC2067C")]
		public static void RunTests(Material testMaterial, RenderTexture output)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC20D28", Offset = "0xC20D28", VA = "0xC20D28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xC20E54", Offset = "0xC20E54", VA = "0xC20E54")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xC210EC", Offset = "0xC210EC", VA = "0xC210EC")]
		public TestPackInt()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]
	public class ApiEndpoint : Attribute
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MethodInfo methodInfo;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object instance;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParameterInfo[] parameterInfo;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_Endpoint;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_Description;

		[Token(Token = "0x1700015B")]
		public virtual string Endpoint
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xC21120", Offset = "0xC21120", VA = "0xC21120", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public string Description
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xC21128", Offset = "0xC21128", VA = "0xC21128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xC210F4", Offset = "0xC210F4", VA = "0xC210F4")]
		public ApiEndpoint(string endpoint, string description)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xC21130", Offset = "0xC21130", VA = "0xC21130")]
		public Dictionary<string, string> ParamsAsDict()
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xC21250", Offset = "0xC21250", VA = "0xC21250")]
		public object Invoke(object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC21278", Offset = "0xC21278", VA = "0xC21278")]
		public object[] DecodeParams(string commandValue)
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class ApiManager : MonoBehaviour
	{
		[Token(Token = "0x200015E")]
		private class EnqueuedApiCommand
		{
			[Token(Token = "0x400072C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Guid m_Handle;

			[Token(Token = "0x400072D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string m_Command;

			[Token(Token = "0x400072E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string m_Parameters;

			[Token(Token = "0x1700015F")]
			public Guid Handle
			{
				[Token(Token = "0x6000778")]
				[Address(RVA = "0xC28EB8", Offset = "0xC28EB8", VA = "0xC28EB8")]
				get
				{
					return default(Guid);
				}
			}

			[Token(Token = "0x17000160")]
			public string Command
			{
				[Token(Token = "0x6000779")]
				[Address(RVA = "0xC28EC4", Offset = "0xC28EC4", VA = "0xC28EC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000161")]
			public string Parameters
			{
				[Token(Token = "0x600077A")]
				[Address(RVA = "0xC28ECC", Offset = "0xC28ECC", VA = "0xC28ECC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600077B")]
			[Address(RVA = "0xC23A70", Offset = "0xC23A70", VA = "0xC23A70")]
			public EnqueuedApiCommand(string command, string parameters)
			{
			}
		}

		[Token(Token = "0x2000160")]
		[CompilerGenerated]
		private sealed class <GetRequest>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uri;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600078B")]
				[Address(RVA = "0xC29470", Offset = "0xC29470", VA = "0xC29470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600078D")]
				[Address(RVA = "0xC294B8", Offset = "0xC294B8", VA = "0xC294B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000787")]
			[Address(RVA = "0xC27B00", Offset = "0xC27B00", VA = "0xC27B00")]
			[DebuggerHidden]
			public <GetRequest>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6000788")]
			[Address(RVA = "0xC29298", Offset = "0xC29298", VA = "0xC29298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000789")]
			[Address(RVA = "0xC292B4", Offset = "0xC292B4", VA = "0xC292B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600078A")]
			[Address(RVA = "0xC293C0", Offset = "0xC293C0", VA = "0xC293C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600078C")]
			[Address(RVA = "0xC29478", Offset = "0xC29478", VA = "0xC29478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000161")]
		[CompilerGenerated]
		private sealed class <PostRequest>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400073E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uri;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> formData;

			[Token(Token = "0x4000741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000792")]
				[Address(RVA = "0xC29698", Offset = "0xC29698", VA = "0xC29698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000794")]
				[Address(RVA = "0xC296E0", Offset = "0xC296E0", VA = "0xC296E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600078E")]
			[Address(RVA = "0xC27B28", Offset = "0xC27B28", VA = "0xC27B28")]
			[DebuggerHidden]
			public <PostRequest>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x600078F")]
			[Address(RVA = "0xC294C0", Offset = "0xC294C0", VA = "0xC294C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000790")]
			[Address(RVA = "0xC294DC", Offset = "0xC294DC", VA = "0xC294DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000791")]
			[Address(RVA = "0xC295E8", Offset = "0xC295E8", VA = "0xC295E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000793")]
			[Address(RVA = "0xC296A0", Offset = "0xC296A0", VA = "0xC296A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000162")]
		[CompilerGenerated]
		private sealed class <ScreenCap>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ApiManager <>4__this;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000798")]
				[Address(RVA = "0xC2994C", Offset = "0xC2994C", VA = "0xC2994C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600079A")]
				[Address(RVA = "0xC29994", Offset = "0xC29994", VA = "0xC29994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000795")]
			[Address(RVA = "0xC27DB8", Offset = "0xC27DB8", VA = "0xC27DB8")]
			[DebuggerHidden]
			public <ScreenCap>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6000796")]
			[Address(RVA = "0xC296E8", Offset = "0xC296E8", VA = "0xC296E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000797")]
			[Address(RVA = "0xC296EC", Offset = "0xC296EC", VA = "0xC296EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000799")]
			[Address(RVA = "0xC29954", Offset = "0xC29954", VA = "0xC29954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000163")]
		[CompilerGenerated]
		private sealed class <SpawnModelCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetId;

			[Token(Token = "0x4000748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string reason;

			[Token(Token = "0x4000749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Model <model>5__2;

			[Token(Token = "0x17000168")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600079E")]
				[Address(RVA = "0xC29D28", Offset = "0xC29D28", VA = "0xC29D28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007A0")]
				[Address(RVA = "0xC29D70", Offset = "0xC29D70", VA = "0xC29D70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600079B")]
			[Address(RVA = "0xC282DC", Offset = "0xC282DC", VA = "0xC282DC")]
			[DebuggerHidden]
			public <SpawnModelCoroutine>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600079C")]
			[Address(RVA = "0xC2999C", Offset = "0xC2999C", VA = "0xC2999C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600079D")]
			[Address(RVA = "0xC299A0", Offset = "0xC299A0", VA = "0xC299A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600079F")]
			[Address(RVA = "0xC29D30", Offset = "0xC29D30", VA = "0xC29D30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000713")]
		private const string ROOT_API_URL = "/api/v1";

		[Token(Token = "0x4000714")]
		private const string BASE_USER_SCRIPTS_URL = "/scripts";

		[Token(Token = "0x4000715")]
		private const string BASE_EXAMPLE_SCRIPTS_URL = "/examplescripts";

		[Token(Token = "0x4000716")]
		private const string BASE_HTML = "<!doctype html><html lang='en'>\n<head><meta charset='UTF-8'></head>\n<body>{0}</body></html>";

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FileSystemWatcher m_FileWatcher;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_UserScriptsPath;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue m_RequestedCommandQueue;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, string> m_CommandStatuses;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue m_OutgoingCommandQueue;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Uri> m_OutgoingApiListeners;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ApiManager m_Instance;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, ApiEndpoint> endpoints;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte[] CameraViewPng;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool cameraViewRequested;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool cameraViewGenerated;

		[NonSerialized]
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 BrushOrigin;

		[NonSerialized]
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion BrushInitialRotation;

		[NonSerialized]
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 BrushPosition;

		[NonSerialized]
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Quaternion BrushRotation;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool ForcePaintingOn;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, string> m_UserScripts;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, string> m_ExampleScripts;

		[NonSerialized]
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Stack<(Vector3, Quaternion)> BrushTransformStack;

		[NonSerialized]
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Dictionary<string, string> CommandExamples;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string m_startupScriptName;

		[Token(Token = "0x1700015D")]
		public static ApiManager Instance
		{
			[Token(Token = "0x6000751")]
			[Address(RVA = "0xC21A88", Offset = "0xC21A88", VA = "0xC21A88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public bool HasOutgoingListeners
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xC27360", Offset = "0xC27360", VA = "0xC27360")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC21AD0", Offset = "0xC21AD0", VA = "0xC21AD0")]
		public string UserScriptsPath()
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC21AD8", Offset = "0xC21AD8", VA = "0xC21AD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xC2381C", Offset = "0xC2381C", VA = "0xC2381C")]
		public void ResetBrushTransform()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC23838", Offset = "0xC23838", VA = "0xC23838")]
		public void RunStartupScript(App.AppState oldState, App.AppState newState)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC23928", Offset = "0xC23928", VA = "0xC23928")]
		private EnqueuedApiCommand EnqueueCommand(string commandString)
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC23AA8", Offset = "0xC23AA8", VA = "0xC23AA8")]
		private void OnScriptsDirectoryChanged(object sender, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC23CF8", Offset = "0xC23CF8", VA = "0xC23CF8")]
		private string InfoCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC254D4", Offset = "0xC254D4", VA = "0xC254D4")]
		private string getCommandExample(string key)
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC23400", Offset = "0xC23400", VA = "0xC23400")]
		private void PopulateExampleScripts()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC236AC", Offset = "0xC236AC", VA = "0xC236AC")]
		private void PopulateUserScripts()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC23B1C", Offset = "0xC23B1C", VA = "0xC23B1C")]
		private void RegisterUserScript(FileInfo file)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC22AE8", Offset = "0xC22AE8", VA = "0xC22AE8")]
		private void PopulateApi()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xC25590", Offset = "0xC25590", VA = "0xC25590")]
		private string InvokeEndpoint(EnqueuedApiCommand command)
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xC256B0", Offset = "0xC256B0", VA = "0xC256B0")]
		[ContextMenu("Log Api Commands")]
		public void LogCommandsList()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC24F94", Offset = "0xC24F94", VA = "0xC24F94")]
		private Dictionary<string, (string, string)> ListApiCommandsAsStrings()
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xC24CD0", Offset = "0xC24CD0", VA = "0xC24CD0")]
		private Dictionary<string, object> ListApiCommands()
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xC25AB0", Offset = "0xC25AB0", VA = "0xC25AB0")]
		private string UserScriptsCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xC2641C", Offset = "0xC2641C", VA = "0xC2641C")]
		private string ExampleScriptsCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xC25F90", Offset = "0xC25F90", VA = "0xC25F90")]
		private string ScriptTemplateSubstitution(string html)
		{
			return null;
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xC268B8", Offset = "0xC268B8", VA = "0xC268B8")]
		private string ApiCommandCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xC27014", Offset = "0xC27014", VA = "0xC27014")]
		private string HandleApiQuery(string commandString)
		{
			return null;
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC273B4", Offset = "0xC273B4", VA = "0xC273B4")]
		public void EnqueueOutgoingCommands(List<KeyValuePair<string, string>> commands)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC2756C", Offset = "0xC2756C", VA = "0xC2756C")]
		public void AddOutgoingCommandListener(Uri uri)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC27688", Offset = "0xC27688", VA = "0xC27688")]
		private void OutgoingApiCommand()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC27A24", Offset = "0xC27A24", VA = "0xC27A24")]
		[IteratorStateMachine(typeof(<GetRequest>d__54))]
		private IEnumerator GetRequest(string uri)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC27A8C", Offset = "0xC27A8C", VA = "0xC27A8C")]
		[IteratorStateMachine(typeof(<PostRequest>d__55))]
		private IEnumerator PostRequest(string uri, Dictionary<string, string> formData)
		{
			return null;
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC27B50", Offset = "0xC27B50", VA = "0xC27B50")]
		private bool HandleApiCommand()
		{
			return default(bool);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC27D00", Offset = "0xC27D00", VA = "0xC27D00")]
		private void Update()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC27D50", Offset = "0xC27D50", VA = "0xC27D50")]
		[IteratorStateMachine(typeof(<ScreenCap>d__58))]
		private IEnumerator ScreenCap()
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC27DE0", Offset = "0xC27DE0", VA = "0xC27DE0")]
		public static void FlipTextureVertically(Texture2D original)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC27D20", Offset = "0xC27D20", VA = "0xC27D20")]
		private void UpdateCameraView()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC27F0C", Offset = "0xC27F0C", VA = "0xC27F0C")]
		private HttpListenerContext CameraViewCallback(HttpListenerContext ctx)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC2818C", Offset = "0xC2818C", VA = "0xC2818C")]
		public void LoadPolyModel(string assetId)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC28264", Offset = "0xC28264", VA = "0xC28264")]
		public void LoadPolyModel(Uri uri)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC281F0", Offset = "0xC281F0", VA = "0xC281F0")]
		[IteratorStateMachine(typeof(<SpawnModelCoroutine>d__64))]
		private static IEnumerator SpawnModelCoroutine(string assetId, string reason)
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC28304", Offset = "0xC28304", VA = "0xC28304")]
		public void HandleStrokeListeners(IEnumerable<PointerManager.ControlPoint> controlPoints, Guid guid, Color color, float size)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC28D54", Offset = "0xC28D54", VA = "0xC28D54")]
		public ApiManager()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class ApiMethods
	{
		[Token(Token = "0x2000165")]
		private enum Axis
		{
			[Token(Token = "0x400074B")]
			X,
			[Token(Token = "0x400074C")]
			Y,
			[Token(Token = "0x400074D")]
			Z
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xC29D78", Offset = "0xC29D78", VA = "0xC29D78")]
		[ApiEndpoint("draw.paths", "Draws a series of paths at the current brush position [[[x1,y1,z1],[x2,y2,z2], etc...]]. Does not move the brush position")]
		public static void DrawPaths(string jsonString)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xC29E98", Offset = "0xC29E98", VA = "0xC29E98")]
		[ApiEndpoint("draw.path", "Draws a path at the current brush position [x1,y1,z1],[x2,y2,z2], etc.... Does not move the brush position")]
		public static void DrawPath(string jsonString)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xC29FB8", Offset = "0xC29FB8", VA = "0xC29FB8")]
		[ApiEndpoint("draw.stroke", "Draws an exact brush stroke as recorded in another app")]
		public static void DrawStroke(string jsonString)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xC2A0C0", Offset = "0xC2A0C0", VA = "0xC2A0C0")]
		[ApiEndpoint("draw.polygon", "Draws a polygon at the current brush position. Does not move the brush position")]
		public static void DrawPolygon(int sides, float radius, float angle)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xC2A2BC", Offset = "0xC2A2BC", VA = "0xC2A2BC")]
		[ApiEndpoint("draw.text", "Draws the characters supplied at the current brush position")]
		public static void Text(string text)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xC2A3DC", Offset = "0xC2A3DC", VA = "0xC2A3DC")]
		[ApiEndpoint("draw.svg", "Draws the path supplied as an SVG Path string at the current brush position")]
		public static void SvgPath(string svgPathString)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xC2A4F4", Offset = "0xC2A4F4", VA = "0xC2A4F4")]
		[ApiEndpoint("brush.type", "Changes the brush. brushType can either be the brush name or it's guid. brushes are listed in the /help screen")]
		public static void Brush(string brushType)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xC2A8BC", Offset = "0xC2A8BC", VA = "0xC2A8BC")]
		[ApiEndpoint("color.add.hsv", "Adds the supplied values to the current color. Values are hue, saturation and value")]
		public static void AddColorHSV(Vector3 hsv)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xC2A99C", Offset = "0xC2A99C", VA = "0xC2A99C")]
		[ApiEndpoint("color.add.rgb", "Adds the supplied values to the current color. Values are red green and blue")]
		public static void AddColorRGB(Vector3 rgb)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xC2AA04", Offset = "0xC2AA04", VA = "0xC2AA04")]
		[ApiEndpoint("color.set.rgb", "Sets the current color. Values are hue, saturation and value")]
		public static void SetColorRGB(Vector3 rgb)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xC2AA54", Offset = "0xC2AA54", VA = "0xC2AA54")]
		[ApiEndpoint("color.set.hsv", "Sets the current color. Values are red, green and blue")]
		public static void SetColorHSV(Vector3 hsv)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xC2AAB4", Offset = "0xC2AAB4", VA = "0xC2AAB4")]
		[ApiEndpoint("color.set.html", "Sets the current color. colorString can either be a hex value or a css color name.")]
		public static void SetColorHTML(string color)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xC2AC78", Offset = "0xC2AC78", VA = "0xC2AC78")]
		[ApiEndpoint("brush.size.set", "Sets the current brush size")]
		public static void BrushSizeSet(float size)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xC2ACE8", Offset = "0xC2ACE8", VA = "0xC2ACE8")]
		[ApiEndpoint("brush.size.add", "Changes the current brush size by 'amount'")]
		public static void BrushSizeAdd(float amount)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xC2AD68", Offset = "0xC2AD68", VA = "0xC2AD68")]
		[ApiEndpoint("draw.camerapath", "Draws along a camera path with the current brush settings")]
		public static void DrawCameraPath(int index)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xC2B1E8", Offset = "0xC2B1E8", VA = "0xC2B1E8")]
		[ApiEndpoint("save.overwrite", "Save the current scene overwriting the last save if it exists")]
		public static void SaveOverwrite()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xC2B25C", Offset = "0xC2B25C", VA = "0xC2B25C")]
		[ApiEndpoint("save.new", "Saves the current scene in a new slot")]
		public static void SaveNew()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xC2B2D0", Offset = "0xC2B2D0", VA = "0xC2B2D0")]
		[ApiEndpoint("export.all", "Exports all the scenes in the users's sketch folder")]
		public static void ExportAll()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xC2B344", Offset = "0xC2B344", VA = "0xC2B344")]
		[ApiEndpoint("drafting.visible", "Shows all strokes made with the drafting brush fully opaque")]
		public static void DraftingVisible()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xC2B3B8", Offset = "0xC2B3B8", VA = "0xC2B3B8")]
		[ApiEndpoint("drafting.transparent", "Shows all strokes made with the drafting brush semi-transparent")]
		public static void DraftingTransparent()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xC2B42C", Offset = "0xC2B42C", VA = "0xC2B42C")]
		[ApiEndpoint("drafting.hidden", "Hides all strokes made with the drafting brush")]
		public static void DraftingHidden()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xC2B4A0", Offset = "0xC2B4A0", VA = "0xC2B4A0")]
		[ApiEndpoint("load.user", "Loads the sketch from the user's sketch folder given an index (0 being most recent)")]
		public static void LoadUser(int slot)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xC2B518", Offset = "0xC2B518", VA = "0xC2B518")]
		[ApiEndpoint("load.curated", "Loads the sketch in the given slot number from the curated sketch list")]
		public static void LoadCurated(int slot)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xC2B590", Offset = "0xC2B590", VA = "0xC2B590")]
		[ApiEndpoint("load.liked", "Loads the sketch in the given slot number from the user's liked sketches")]
		public static void LoadLiked(int slot)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xC2B608", Offset = "0xC2B608", VA = "0xC2B608")]
		[ApiEndpoint("load.drive", "Loads the sketch in the given slot number from the user's Google Drive")]
		public static void LoadDrive(int slot)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xC2B680", Offset = "0xC2B680", VA = "0xC2B680")]
		[ApiEndpoint("load.named", "Loads the sketch with the given name from the user's sketch folder")]
		public static void LoadNamedFile(string filename)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xC2B740", Offset = "0xC2B740", VA = "0xC2B740")]
		[ApiEndpoint("merge.named", "Loads the sketch with the given name from the user's sketch folder")]
		public static void MergeNamedFile(string filename)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xC2B800", Offset = "0xC2B800", VA = "0xC2B800")]
		[ApiEndpoint("new", "Clears the current sketch")]
		public static void NewSketch()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xC2B874", Offset = "0xC2B874", VA = "0xC2B874")]
		[ApiEndpoint("symmetry.mirror", "Sets the symmetry mode to 'mirror'")]
		public static void SymmetryPlane()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xC2B8E8", Offset = "0xC2B8E8", VA = "0xC2B8E8")]
		[ApiEndpoint("symmetry.doublemirror", "Sets the symmetry mode to 'double mirror'")]
		public static void SymmetryFour()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xC2B95C", Offset = "0xC2B95C", VA = "0xC2B95C")]
		[ApiEndpoint("twohandeded.toggle", "Toggles painting with both hands at once")]
		public static void SymmetryTwoHanded()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC2B9D0", Offset = "0xC2B9D0", VA = "0xC2B9D0")]
		[ApiEndpoint("straightedge.toggle", "Toggles the straight edge tool on or off")]
		public static void StraightEdge()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC2BA44", Offset = "0xC2BA44", VA = "0xC2BA44")]
		[ApiEndpoint("autoorient.toggle", "Toggles autoorientate on or off")]
		public static void AutoOrient()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC2BAB8", Offset = "0xC2BAB8", VA = "0xC2BAB8")]
		[ApiEndpoint("undo", "Undoes the last action")]
		public static void Undo()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC2BB2C", Offset = "0xC2BB2C", VA = "0xC2BB2C")]
		[ApiEndpoint("redo", "Redo the last action")]
		public static void Redo()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xC2BBA0", Offset = "0xC2BBA0", VA = "0xC2BBA0")]
		[ApiEndpoint("panels.reset", "Reset the position of all panels")]
		public static void ResetAllPanels()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xC2BC14", Offset = "0xC2BC14", VA = "0xC2BC14")]
		[ApiEndpoint("sketch.origin", "Enables the sketch origin tool")]
		public static void SketchOrigin()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xC2BC88", Offset = "0xC2BC88", VA = "0xC2BC88")]
		[ApiEndpoint("viewonly.toggle", "Toggles 'view only' mode on or off")]
		public static void ViewOnly()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xC2BCFC", Offset = "0xC2BCFC", VA = "0xC2BCFC")]
		[ApiEndpoint("spectator.toggle", "Toggles the spectator camera")]
		public static void ToggleSpectator()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xC2BD70", Offset = "0xC2BD70", VA = "0xC2BD70")]
		[ApiEndpoint("spectator.on", "Turns the spectator camera on")]
		public static void EnableSpectator()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xC2BDE0", Offset = "0xC2BDE0", VA = "0xC2BDE0")]
		[ApiEndpoint("spectator.off", "Turns the spectator camera off")]
		public static void DisableSpectator()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xC2BE50", Offset = "0xC2BE50", VA = "0xC2BE50")]
		[ApiEndpoint("autosimplify.toggle", "Toggles 'auto-simplify' mode on or off")]
		public static void ToggleAutosimplification()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xC2BEC4", Offset = "0xC2BEC4", VA = "0xC2BEC4")]
		[ApiEndpoint("export.current", "Exports the current sketch to the user's Exports folder")]
		public static void ExportRaw()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xC2BF38", Offset = "0xC2BF38", VA = "0xC2BF38")]
		[ApiEndpoint("showfolder.sketch", "Opens the user's Sketches folder on the desktop")]
		public static void ShowSketchFolder(int index)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xC2BFB0", Offset = "0xC2BFB0", VA = "0xC2BFB0")]
		[ApiEndpoint("guides.disable", "Disables all guides")]
		public static void StencilsDisable()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xC2C024", Offset = "0xC2C024", VA = "0xC2C024")]
		[ApiEndpoint("disco", "Starts a party")]
		public static void Disco()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xC2C098", Offset = "0xC2C098", VA = "0xC2C098")]
		[ApiEndpoint("selection.duplicate", "Create a duplicate of the current selection")]
		public static void Duplicate()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xC2C10C", Offset = "0xC2C10C", VA = "0xC2C10C")]
		[ApiEndpoint("selection.group", "Groups the current selection")]
		public static void ToggleGroupStrokesAndWidgets()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xC2C180", Offset = "0xC2C180", VA = "0xC2C180")]
		[ApiEndpoint("export.selected", "Exports the selected strokes to the user's Media Library")]
		public static void SaveModel()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xC2C1F4", Offset = "0xC2C1F4", VA = "0xC2C1F4")]
		[ApiEndpoint("camerapath.render", "Renders the current camera path to a video")]
		public static void RenderCameraPath()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xC2C268", Offset = "0xC2C268", VA = "0xC2C268")]
		[ApiEndpoint("profiling.toggle", "Toggles profiling mode on or off")]
		public static void ToggleProfiling()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xC2C2DC", Offset = "0xC2C2DC", VA = "0xC2C2DC")]
		[ApiEndpoint("settings.toggle", "Toggles the settings panel on or off")]
		public static void ToggleSettings()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xC2C350", Offset = "0xC2C350", VA = "0xC2C350")]
		[ApiEndpoint("mirror.summon", "Summons the mirror origin to the user's position")]
		public static void SummonMirror()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xC2C3C4", Offset = "0xC2C3C4", VA = "0xC2C3C4")]
		[ApiEndpoint("selection.invert", "Inverts the current selection")]
		public static void InvertSelection()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xC2C438", Offset = "0xC2C438", VA = "0xC2C438")]
		[ApiEndpoint("select.all", "Selects all strokes and widgets in the scene")]
		public static void SelectAll()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xC2C4AC", Offset = "0xC2C4AC", VA = "0xC2C4AC")]
		[ApiEndpoint("selection.flip", "Mirrors the current selection")]
		public static void FlipSelection()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xC2C520", Offset = "0xC2C520", VA = "0xC2C520")]
		[ApiEndpoint("postprocessing.toggle", "Toggles post-processing effects on or off")]
		public static void ToggleCameraPostEffects()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xC2C594", Offset = "0xC2C594", VA = "0xC2C594")]
		[ApiEndpoint("watermark.toggle", "Toggles the watermark on or off")]
		public static void ToggleWatermark()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xC2C608", Offset = "0xC2C608", VA = "0xC2C608")]
		[ApiEndpoint("camerapath.togglevisuals", "Toggles the camera path visuals on or off")]
		public static void ToggleCameraPathVisuals()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xC2C67C", Offset = "0xC2C67C", VA = "0xC2C67C")]
		[ApiEndpoint("camerapath.togglepreview", "Toggles the camera path preview on or off")]
		public static void ToggleCameraPathPreview()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xC2C6F0", Offset = "0xC2C6F0", VA = "0xC2C6F0")]
		[ApiEndpoint("camerapath.delete", "Deletes the current camera path")]
		public static void DeleteCameraPath()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xC2C764", Offset = "0xC2C764", VA = "0xC2C764")]
		[ApiEndpoint("camerapath.record", "Starts recording a camera path")]
		public static void RecordCameraPath()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xC2C7D8", Offset = "0xC2C7D8", VA = "0xC2C7D8")]
		[ApiEndpoint("stroke.delete", "Delete a stroke by index")]
		public static void DeleteStroke(int index)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xC2C868", Offset = "0xC2C868", VA = "0xC2C868")]
		[ApiEndpoint("stroke.select", "Select a stroke by index.")]
		public static void SelectStroke(int index)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xC2C9B8", Offset = "0xC2C9B8", VA = "0xC2C9B8")]
		[ApiEndpoint("strokes.select", "Select multiple strokes by index.")]
		public static void SelectStrokes(int start, int end)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xC2CA34", Offset = "0xC2CA34", VA = "0xC2CA34")]
		[ApiEndpoint("selection.recolor", "Recolors the currently selected strokes")]
		public static void RecolorSelection()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xC2CD6C", Offset = "0xC2CD6C", VA = "0xC2CD6C")]
		[ApiEndpoint("selection.rebrush", "Rebrushes the currently selected strokes")]
		public static void RebrushSelection()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xC2D0A4", Offset = "0xC2D0A4", VA = "0xC2D0A4")]
		[ApiEndpoint("selection.resize", "Changes the brush size the currently selected strokes")]
		public static void ResizeSelection()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xC2D3DC", Offset = "0xC2D3DC", VA = "0xC2D3DC")]
		[ApiEndpoint("selection.trim", "Removes a number of points from the currently selected strokes")]
		public static void TrimSelection(int count)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xC2D808", Offset = "0xC2D808", VA = "0xC2D808")]
		[ApiEndpoint("selection.points.addnoise", "Moves the position of all control points in the selection using a noise function")]
		public static void PerlinNoiseSelection(string axis, Vector3 scale)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xC2DEE8", Offset = "0xC2DEE8", VA = "0xC2DEE8")]
		[ApiEndpoint("stroke.points.quantize", "Snaps all the points in selected strokes to a grid (buggy)")]
		public static void QuantizeSelection(Vector3 grid)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xC2DFB0", Offset = "0xC2DFB0", VA = "0xC2DFB0")]
		[ApiEndpoint("stroke.join", "Joins a stroke with the previous one")]
		public static void JoinStroke()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xC2E114", Offset = "0xC2E114", VA = "0xC2E114")]
		[ApiEndpoint("strokes.join", "Joins all strokes between the two indices (inclusive)")]
		public static void JoinStrokes(int start, int end)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xC2E394", Offset = "0xC2E394", VA = "0xC2E394")]
		[ApiEndpoint("stroke.add", "Adds a point at the current brush position to the specified stroke")]
		public static void AddPointToStroke(int index)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xC2E5AC", Offset = "0xC2E5AC", VA = "0xC2E5AC")]
		[ApiEndpoint("tool.sketchsurface", "Activates the SketchSurface")]
		public static void ActivateSketchSurface()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xC2E604", Offset = "0xC2E604", VA = "0xC2E604")]
		[ApiEndpoint("tool.selection", "Activates the Selection Tool")]
		public static void ActivateSelection()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xC2E65C", Offset = "0xC2E65C", VA = "0xC2E65C")]
		[ApiEndpoint("tool.colorpicker", "Activates the Color Picker")]
		public static void ActivateColorPicker()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xC2E6B4", Offset = "0xC2E6B4", VA = "0xC2E6B4")]
		[ApiEndpoint("tool.brushpicker", "Activates the Brush Picker")]
		public static void ActivateBrushPicker()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xC2E70C", Offset = "0xC2E70C", VA = "0xC2E70C")]
		[ApiEndpoint("tool.brushandcolorpicker", "Activates the Brush And Color Picker")]
		public static void ActivateBrushAndColorPicker()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xC2E764", Offset = "0xC2E764", VA = "0xC2E764")]
		[ApiEndpoint("tool.sketchorigin", "Activates the SketchOrigin Tool")]
		public static void ActivateSketchOrigin()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xC2E7BC", Offset = "0xC2E7BC", VA = "0xC2E7BC")]
		[ApiEndpoint("tool.autogif", "Activates the AutoGif Tool")]
		public static void ActivateAutoGif()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xC2E814", Offset = "0xC2E814", VA = "0xC2E814")]
		[ApiEndpoint("tool.canvas", "Activates the Canvas Tool")]
		public static void ActivateCanvasTool()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xC2E86C", Offset = "0xC2E86C", VA = "0xC2E86C")]
		[ApiEndpoint("tool.transform", "Activates the Transform Tool")]
		public static void ActivateTransformTool()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xC2E8C4", Offset = "0xC2E8C4", VA = "0xC2E8C4")]
		[ApiEndpoint("tool.stamp", "Activates the Stamp Tool")]
		public static void ActivateStampTool()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xC2E91C", Offset = "0xC2E91C", VA = "0xC2E91C")]
		[ApiEndpoint("tool.freepaint", "Activates the FreePaint Tool")]
		public static void ActivateFreePaintTool()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xC2E974", Offset = "0xC2E974", VA = "0xC2E974")]
		[ApiEndpoint("tool.eraser", "Activates the Eraser Tool")]
		public static void ActivateEraserTool()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xC2E9CC", Offset = "0xC2E9CC", VA = "0xC2E9CC")]
		[ApiEndpoint("tool.screenshot", "Activates the Screenshot Tool")]
		public static void ActivateScreenshotTool()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xC2EA24", Offset = "0xC2EA24", VA = "0xC2EA24")]
		[ApiEndpoint("tool.dropper", "Activates the Dropper Tool")]
		public static void ActivateDropperTool()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xC2EA7C", Offset = "0xC2EA7C", VA = "0xC2EA7C")]
		[ApiEndpoint("tool.saveicon", "Activates the SaveIcon Tool")]
		public static void ActivateSaveIconTool()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xC2EAD4", Offset = "0xC2EAD4", VA = "0xC2EAD4")]
		[ApiEndpoint("tool.threedofviewing", "Activates the ThreeDofViewing Tool")]
		public static void ActivateThreeDofViewingTool()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xC2EB2C", Offset = "0xC2EB2C", VA = "0xC2EB2C")]
		[ApiEndpoint("tool.multicam", "Activates the MultiCam Tool")]
		public static void ActivateMultiCamTool()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xC2EB84", Offset = "0xC2EB84", VA = "0xC2EB84")]
		[ApiEndpoint("tool.teleport", "Activates the Teleport Tool")]
		public static void ActivateTeleportTool()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xC2EBDC", Offset = "0xC2EBDC", VA = "0xC2EBDC")]
		[ApiEndpoint("tool.repaint", "Activates the Repaint Tool")]
		public static void ActivateRepaintTool()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xC2EC34", Offset = "0xC2EC34", VA = "0xC2EC34")]
		[ApiEndpoint("tool.recolor", "Activates the Recolor Tool")]
		public static void ActivateRecolorTool()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xC2EC8C", Offset = "0xC2EC8C", VA = "0xC2EC8C")]
		[ApiEndpoint("tool.rebrush", "Activates the Rebrush Tool")]
		public static void ActivateRebrushTool()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xC2ECE4", Offset = "0xC2ECE4", VA = "0xC2ECE4")]
		[ApiEndpoint("tool.selection", "Activates the Selection Tool")]
		public static void ActivateSelectionTool()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xC2ED3C", Offset = "0xC2ED3C", VA = "0xC2ED3C")]
		[ApiEndpoint("tool.pin", "Activates the Pin Tool")]
		public static void ActivatePinTool()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xC2ED94", Offset = "0xC2ED94", VA = "0xC2ED94")]
		[ApiEndpoint("tool.camerapath", "Activates the CameraPath Tool")]
		public static void ActivateCameraPathTool()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xC2EDEC", Offset = "0xC2EDEC", VA = "0xC2EDEC")]
		[ApiEndpoint("tool.fly", "Activates the Fly Tool")]
		public static void ActivateFlyTool()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xC2EE44", Offset = "0xC2EE44", VA = "0xC2EE44")]
		private static void _ChangeBrushBearing(float angle, Vector3 axis)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xC2EF54", Offset = "0xC2EF54", VA = "0xC2EF54")]
		private static void _ChangeSpectatorBearing(float angle, Vector3 axis)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xC2F0A4", Offset = "0xC2F0A4", VA = "0xC2F0A4")]
		private static TrTransform _CurrentTransform()
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xC2F198", Offset = "0xC2F198", VA = "0xC2F198")]
		private static Vector3 _QuantizePosition(Vector3 pos, Vector3 grid)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xC2D93C", Offset = "0xC2D93C", VA = "0xC2D93C")]
		private static void _ModifyStrokeControlPoints(Func<Vector3, Vector3> func)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xC2F294", Offset = "0xC2F294", VA = "0xC2F294")]
		private static Vector3 _PerlinNoiseToPosition(Vector3 pos, Vector3 scale, Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xC2F340", Offset = "0xC2F340", VA = "0xC2F340")]
		private static void _PositionWidget(GrabWidget widget, Vector3 position)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xC2F488", Offset = "0xC2F488", VA = "0xC2F488")]
		private static void _ScaleWidget(GrabWidget widget, float scale)
		{
		}

		[Token(Token = "0x600080C")]
		private static int _NegativeIndexing<T>(int index, IEnumerable<T> enumerable)
		{
			return default(int);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xC2F5C0", Offset = "0xC2F5C0", VA = "0xC2F5C0")]
		private static ImageWidget _GetActiveImage(int index)
		{
			return null;
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xC2F6A8", Offset = "0xC2F6A8", VA = "0xC2F6A8")]
		private static VideoWidget _GetActiveVideo(int index)
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xC2F790", Offset = "0xC2F790", VA = "0xC2F790")]
		private static ModelWidget _GetActiveModel(int index)
		{
			return null;
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xC2B13C", Offset = "0xC2B13C", VA = "0xC2B13C")]
		private static CameraPathWidget _GetActiveCameraPath(int index)
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xC2F878", Offset = "0xC2F878", VA = "0xC2F878")]
		private static string _DownloadMediaFileFromUrl(string url, string destinationFolder)
		{
			return null;
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xC2FAF8", Offset = "0xC2FAF8", VA = "0xC2FAF8")]
		private static void _SpectatorShowHide(string thing, bool state)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xC2FE4C", Offset = "0xC2FE4C", VA = "0xC2FE4C")]
		[ApiEndpoint("listenfor.strokes", "Adds the url of an app that wants to receive the data for a stroke as each one is finished")]
		public static void AddListener(string url)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC2FEEC", Offset = "0xC2FEEC", VA = "0xC2FEEC")]
		[ApiEndpoint("showfolder.scripts", "Opens the user's Scripts folder on the desktop")]
		public static void OpenUserScriptsFolder()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC3002C", Offset = "0xC3002C", VA = "0xC3002C")]
		[ApiEndpoint("showfolder.exports", "Opens the user's Exports folder on the desktop")]
		public static void OpenExportFolder()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xC2FF38", Offset = "0xC2FF38", VA = "0xC2FF38")]
		private static void OpenUserFolder(string path)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC30040", Offset = "0xC30040", VA = "0xC30040")]
		[ApiEndpoint("spectator.move.to", "Moves the spectator camera to the given position")]
		public static void MoveSpectatorTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC300E0", Offset = "0xC300E0", VA = "0xC300E0")]
		[ApiEndpoint("user.move.to", "Moves the user to the given position")]
		public static void MoveUserTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC30248", Offset = "0xC30248", VA = "0xC30248")]
		[ApiEndpoint("spectator.move.by", "Moves the spectator camera by the given amount")]
		public static void MoveSpectatorBy(Vector3 amount)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC302F8", Offset = "0xC302F8", VA = "0xC302F8")]
		[ApiEndpoint("user.move.by", "Moves the user by the given amount")]
		public static void MoveUserBy(Vector3 amount)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC30478", Offset = "0xC30478", VA = "0xC30478")]
		[ApiEndpoint("spectator.turn.y", "Rotates the spectator camera left or right.")]
		public static void SpectatorYaw(float angle)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC304CC", Offset = "0xC304CC", VA = "0xC304CC")]
		[ApiEndpoint("spectator.turn.x", "Rotates the spectator camera up or down.")]
		public static void SpectatorPitch(float angle)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC30520", Offset = "0xC30520", VA = "0xC30520")]
		[ApiEndpoint("spectator.turn.z", "Tilts the angle of the spectator camera clockwise or anticlockwise.")]
		public static void SpectatorRoll(float angle)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC30574", Offset = "0xC30574", VA = "0xC30574")]
		[ApiEndpoint("spectator.direction", "Points the spectator camera to look in the specified direction. Angles are given in x,y,z degrees")]
		public static void SpectatorDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC3064C", Offset = "0xC3064C", VA = "0xC3064C")]
		[ApiEndpoint("spectator.look.at", "Points the spectator camera towards a specific point")]
		public static void SpectatorLookAt(Vector3 position)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC306EC", Offset = "0xC306EC", VA = "0xC306EC")]
		[ApiEndpoint("spectator.mode", "Sets the spectator camera mode to one of Stationary, SlowFollow, Wobble, Circular")]
		public static void SpectatorMode(string mode)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC30844", Offset = "0xC30844", VA = "0xC30844")]
		[ApiEndpoint("spectator.show", "Unhides the chosen type of elements from the spectator camera (widgets, strokes, selection, headset, panels, ui")]
		public static void SpectatorShow(string thing)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC3084C", Offset = "0xC3084C", VA = "0xC3084C")]
		[ApiEndpoint("spectator.hide", "Hides the chosen type of elements from the spectator camera (widgets, strokes, selection, headset, panels, ui")]
		public static void SpectatorHide(string thing)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC30854", Offset = "0xC30854", VA = "0xC30854")]
		[ApiEndpoint("brush.move.to", "Moves the brush to the given coordinates")]
		public static void BrushMoveTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC308C0", Offset = "0xC308C0", VA = "0xC308C0")]
		[ApiEndpoint("brush.move.by", "Moves the brush by the given amount")]
		public static void BrushMoveBy(Vector3 offset)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC30940", Offset = "0xC30940", VA = "0xC30940")]
		[ApiEndpoint("brush.move", "Moves the brush forward by 'distance' without drawing a line")]
		public static void BrushMove(float distance)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xC30A6C", Offset = "0xC30A6C", VA = "0xC30A6C")]
		[ApiEndpoint("brush.draw", "Moves the brush forward by 'distance' and draws a line")]
		public static void BrushDraw(float distance)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC30DFC", Offset = "0xC30DFC", VA = "0xC30DFC")]
		[ApiEndpoint("brush.turn.y", "Changes the brush direction to the left or right. Angle is measured in degrees")]
		public static void BrushYaw(float angle)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC30E50", Offset = "0xC30E50", VA = "0xC30E50")]
		[ApiEndpoint("brush.turn.x", "Changes the brush direction up or down. Angle is measured in degrees")]
		public static void BrushPitch(float angle)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC30EA4", Offset = "0xC30EA4", VA = "0xC30EA4")]
		[ApiEndpoint("brush.turn.z", "Rotates the brush clockwise or anticlockwise. Angle is measured in degrees")]
		public static void BrushRoll(float angle)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xC30EF8", Offset = "0xC30EF8", VA = "0xC30EF8")]
		[ApiEndpoint("brush.look.at", "Changes the brush direction to look at the specified point")]
		public static void BrushLookAt(Vector3 direction)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xC30FB8", Offset = "0xC30FB8", VA = "0xC30FB8")]
		[ApiEndpoint("brush.look.forwards", "Changes the brush direction to look forwards")]
		public static void BrushLookForwards()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xC31098", Offset = "0xC31098", VA = "0xC31098")]
		[ApiEndpoint("brush.look.up", "Changes the brush direction to look upwards")]
		public static void BrushLookUp()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xC3113C", Offset = "0xC3113C", VA = "0xC3113C")]
		[ApiEndpoint("brush.look.down", "Changes the brush direction to look downwards")]
		public static void BrushLookDown()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xC3121C", Offset = "0xC3121C", VA = "0xC3121C")]
		[ApiEndpoint("brush.look.left", "Changes the brush direction to look to the left")]
		public static void BrushLookLeft()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xC312FC", Offset = "0xC312FC", VA = "0xC312FC")]
		[ApiEndpoint("brush.look.right", "Changes the brush direction to look to the right")]
		public static void BrushLookRight()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xC313DC", Offset = "0xC313DC", VA = "0xC313DC")]
		[ApiEndpoint("brush.look.backwards", "Changes the brush direction to look backwards")]
		public static void BrushLookBackwards()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xC314BC", Offset = "0xC314BC", VA = "0xC314BC")]
		[ApiEndpoint("brush.home", "Resets the brush position and direction")]
		public static void BrushHome()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xC3151C", Offset = "0xC3151C", VA = "0xC3151C")]
		[ApiEndpoint("brush.home.set", "Sets the current brush position and direction as the new home. This persists in new sketches")]
		public static void BrushSetHome()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xC31588", Offset = "0xC31588", VA = "0xC31588")]
		[ApiEndpoint("brush.transform.push", "Stores the current brush position and direction on to a stack")]
		public static void BrushTransformPush()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xC31664", Offset = "0xC31664", VA = "0xC31664")]
		[ApiEndpoint("brush.transform.pop", "Pops the most recent current brush position and direction from the stack")]
		public static void BrushTransformPop()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xC3174C", Offset = "0xC3174C", VA = "0xC3174C")]
		[ApiEndpoint("debug.brush", "Logs some info about the brush")]
		public static void DebugBrush()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xC318EC", Offset = "0xC318EC", VA = "0xC318EC")]
		private static ReferenceImage _LoadReferenceImage(string location)
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xC319C8", Offset = "0xC319C8", VA = "0xC319C8")]
		[ApiEndpoint("image.import", "Imports an image given a url or a filename in Media Library\\Images (Images loaded from a url are saved locally first)")]
		public static void ImportImage(string location)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xC31D30", Offset = "0xC31D30", VA = "0xC31D30")]
		[ApiEndpoint("environment.type", "Sets the current environment")]
		public static void SetEnvironment(string name)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xC31E78", Offset = "0xC31E78", VA = "0xC31E78")]
		[ApiEndpoint("layer.add", "Adds a new layer")]
		public static void AddLayer()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xC31F08", Offset = "0xC31F08", VA = "0xC31F08")]
		[ApiEndpoint("layer.clear", "Clears the contents of a layer")]
		public static void ClearLayer(int layer)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xC31F9C", Offset = "0xC31F9C", VA = "0xC31F9C")]
		[ApiEndpoint("layer.delete", "Deletes a layer")]
		public static void DeleteLayer(int layer)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xC32030", Offset = "0xC32030", VA = "0xC32030")]
		[ApiEndpoint("layer.squash", "Move everything from one layer to another then removes the empty layer")]
		public static void SquashLayer(int squashedLayer, int destinationLayer)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xC32184", Offset = "0xC32184", VA = "0xC32184")]
		[ApiEndpoint("layer.activate", "Make a layer the active layer")]
		public static void ActivateLayer(int layer)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xC32238", Offset = "0xC32238", VA = "0xC32238")]
		[ApiEndpoint("layer.show", "Make a layer visible")]
		public static void ShowLayer(int layer)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xC32260", Offset = "0xC32260", VA = "0xC32260")]
		[ApiEndpoint("layer.hide", "Hide a layer")]
		public static void HideLayer(int layer)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xC32288", Offset = "0xC32288", VA = "0xC32288")]
		[ApiEndpoint("layer.toggle", "Toggles a layer between visible and hidden")]
		public static void ToggleLayer(int layer)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xC322B0", Offset = "0xC322B0", VA = "0xC322B0")]
		[ApiEndpoint("model.select", "Selects a widget by index.")]
		private static void SelectModel(int index)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xC322C0", Offset = "0xC322C0", VA = "0xC322C0")]
		private static void SelectWidget(GrabWidget widget)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xC3231C", Offset = "0xC3231C", VA = "0xC3231C")]
		[ApiEndpoint("model.position", "Move a model to the given coordinates")]
		public static void PositionModel(int index, Vector3 position)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xC32354", Offset = "0xC32354", VA = "0xC32354")]
		[ApiEndpoint("brush.forcepainting", "When on, overrides the trigger so the brush is always painting")]
		public static void ForcePainting(bool active)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xC323B0", Offset = "0xC323B0", VA = "0xC323B0")]
		[ApiEndpoint("image.position", "Move an image to the given coordinates")]
		public static void PositionImage(int index, Vector3 position)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xC323E8", Offset = "0xC323E8", VA = "0xC323E8")]
		[ApiEndpoint("guide.add", "Adds a guide to the scene")]
		public static void AddGuide(string type)
		{
		}
	}
	[Token(Token = "0x200016B")]
	internal static class CollectionUtils
	{
		[Token(Token = "0x6000853")]
		public static void AddRange<T>(this IList<T> initial, IEnumerable<T> collection)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public static class CssColors
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, string> NamesToHex;
	}
	[Token(Token = "0x200016D")]
	public static class DrawStrokes
	{
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x13CED1C", Offset = "0x13CED1C", VA = "0x13CED1C")]
		public static void SinglePathToStroke(List<List<float>> floatPath, Vector3 origin, float scale = 1f, bool rawStroke = false)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x13CF894", Offset = "0x13CF894", VA = "0x13CF894")]
		public static void SinglePath2dToStroke(List<Vector2> polyline2d, Vector3 origin, float scale = 1f)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x13CFE24", Offset = "0x13CFE24", VA = "0x13CFE24")]
		public static void PositionPathsToStroke(List<Vector3> path, Vector3 origin, float scale = 1f)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x13CEE3C", Offset = "0x13CEE3C", VA = "0x13CEE3C")]
		public static void MultiPathsToStrokes(List<List<List<float>>> strokeData, Vector3 origin, float scale = 1f, bool rawStroke = false)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x13CF9A8", Offset = "0x13CF9A8", VA = "0x13CF9A8")]
		public static void MultiPath2dToStrokes(List<List<Vector2>> polylines2d, Vector3 origin, float scale = 1f, bool breakOnOrigin = false)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x13CFF44", Offset = "0x13CFF44", VA = "0x13CFF44")]
		public static void MultiPositionPathsToStrokes(List<List<Vector3>> positions, List<List<Quaternion>> orientations, List<List<float>> pressures, Vector3 origin, float scale = 1f, bool breakOnOrigin = false, bool rawStrokes = false)
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class ScriptsPanel : BasePanel
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x13D08C8", Offset = "0x13D08C8", VA = "0x13D08C8")]
		public ScriptsPanel()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class AmbientGrid : MonoBehaviour
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_GridBig;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_GridSmall;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_GridBaseColor;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_GridSpacing;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_CameraTransform;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_MaterialBig;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_MaterialSmall;

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x13D0920", Offset = "0x13D0920", VA = "0x13D0920")]
		private void Start()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x13D0A1C", Offset = "0x13D0A1C", VA = "0x13D0A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x13D0C20", Offset = "0x13D0C20", VA = "0x13D0C20")]
		public AmbientGrid()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class App : MonoBehaviour
	{
		[Token(Token = "0x2000171")]
		public enum AppState
		{
			[Token(Token = "0x40007AB")]
			Error,
			[Token(Token = "0x40007AC")]
			LoadingBrushesAndLighting,
			[Token(Token = "0x40007AD")]
			FadeFromBlack,
			[Token(Token = "0x40007AE")]
			FirstRunIntro,
			[Token(Token = "0x40007AF")]
			Intro,
			[Token(Token = "0x40007B0")]
			Loading,
			[Token(Token = "0x40007B1")]
			QuickLoad,
			[Token(Token = "0x40007B2")]
			Standard,
			[Token(Token = "0x40007B3")]
			MemoryExceeded,
			[Token(Token = "0x40007B4")]
			Saving,
			[Token(Token = "0x40007B5")]
			Reset,
			[Token(Token = "0x40007B6")]
			Uploading,
			[Token(Token = "0x40007B7")]
			AutoProfiling,
			[Token(Token = "0x40007B8")]
			OfflineRendering
		}

		[Token(Token = "0x2000172")]
		[CompilerGenerated]
		private sealed class <DelayedSketchLoadedCard>d__184 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <stall>5__2;

			[Token(Token = "0x1700018D")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x60008DA")]
				[Address(RVA = "0x13DA344", Offset = "0x13DA344", VA = "0x13DA344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008DC")]
				[Address(RVA = "0x13DA38C", Offset = "0x13DA38C", VA = "0x13DA38C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x13D81B4", Offset = "0x13D81B4", VA = "0x13D81B4")]
			[DebuggerHidden]
			public <DelayedSketchLoadedCard>d__184(int <>1__state)
			{
			}

			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x13DA258", Offset = "0x13DA258", VA = "0x13DA258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x13DA25C", Offset = "0x13DA25C", VA = "0x13DA25C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x13DA34C", Offset = "0x13DA34C", VA = "0x13DA34C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400075D")]
		public const float METERS_TO_UNITS = 10f;

		[Token(Token = "0x400075E")]
		public const float UNITS_TO_METERS = 0.1f;

		[Token(Token = "0x400075F")]
		public const string kAppDisplayName = "Open Brush";

		[Token(Token = "0x4000760")]
		public const string kGoogleServicesAppName = "Open Brush";

		[Token(Token = "0x4000761")]
		public const string kConfigFileName = "Open Brush.cfg";

		[Token(Token = "0x4000762")]
		public const string kAppFolderName = "Open Brush";

		[Token(Token = "0x4000763")]
		public const string kDriveFolderName = "Open Brush";

		[Token(Token = "0x4000764")]
		public const string kPlayerPrefHasPlayedBefore = "Has played before";

		[Token(Token = "0x4000765")]
		public const string kReferenceImagesSeeded = "Reference Images seeded";

		[Token(Token = "0x4000766")]
		private const string kDefaultConfigPath = "DefaultConfig";

		[Token(Token = "0x4000767")]
		private const int kHttpListenerPort = 40074;

		[Token(Token = "0x4000768")]
		private const string kProtocolHandlerPrefix = "tiltbrush://remix/";

		[Token(Token = "0x4000769")]
		private const string kFileMoveFilename = "WhereHaveMyFilesGone.txt";

		[Token(Token = "0x400076A")]
		private const string kFileMoveContents = "All your Open Brush files have been moved to\n/sdcard/Open Brush.\n";

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static App m_Instance;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("External References")]
		[SerializeField]
		private VrSdk m_VrSdk;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneScript m_SceneScript;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("General inspector")]
		[SerializeField]
		private float m_FadeFromBlackDuration;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_QuickLoadHintDelay;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GpuIntersector m_GpuIntersector;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TiltBrushManifest m_Manifest;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TiltBrushManifest m_ManifestExperimental;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SelectionEffect m_SelectionEffect;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_SceneTransform;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform m_CanvasTransform;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_EnvironmentTransform;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_SketchSurface;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_ErrorDialog;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_OdsPrefab;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject m_OdsPivot;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Intro")]
		[SerializeField]
		private float m_IntroSketchFadeInDuration;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_IntroSketchFadeOutDuration;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_IntroSketchMobileFadeInDuration;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_IntroSketchMobileFadeOutDuration;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FrameCountDisplay m_FrameCountDisplay;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_ShaderWarmup;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Identities")]
		[SerializeField]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private OAuth2Identity m_SketchfabIdentity;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Queue m_RequestedTiltFileQueue;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private HttpServer m_HttpServer;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SketchSurfacePanel m_SketchSurfacePanel;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private UserConfig m_UserConfig;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string m_UserPath;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private string m_OldUserPath;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private PolyAssetCatalog m_PolyAssetCatalog;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Switchboard m_Switchboard;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private BrushColorController m_BrushColorController;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GroupManager m_GroupManager;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private double m_sketchTimeBase;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_AppStateCountdown;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_QuickLoadHintCountdown;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool m_QuickLoadInputWasValid;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool m_QuickLoadEatInput;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private AppState m_CurrentAppState;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AppState m_DesiredAppState_;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int m_TargetFrameRate;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_RoomRadius;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool m_AutosaveRestoreFileExists;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool m_ShowAutosaveHint;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		private bool? m_ShowControllers;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int m_QuickloadStallFrames;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject m_IntroSketch;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Renderer[] m_IntroSketchRenderers;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_IntroFadeTimer;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool m_FirstRunExperience;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		private bool m_RequestingAudioReactiveMode;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private DriveAccess m_DriveAccess;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private DriveSync m_DriveSync;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GoogleUserSettings m_GoogleUserSettings;

		[Token(Token = "0x1700016A")]
		public static Config Config
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x13D0C3C", Offset = "0x13D0C3C", VA = "0x13D0C3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public static UserConfig UserConfig
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x13D0C84", Offset = "0x13D0C84", VA = "0x13D0C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public static PlatformConfig PlatformConfig
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x13D0CD8", Offset = "0x13D0CD8", VA = "0x13D0CD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public static VrSdk VrSdk
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x13D09C8", Offset = "0x13D09C8", VA = "0x13D09C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public static SceneScript Scene
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x13D0820", Offset = "0x13D0820", VA = "0x13D0820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static CanvasScript ActiveCanvas
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x13D0D24", Offset = "0x13D0D24", VA = "0x13D0D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static PolyAssetCatalog PolyAssetCatalog
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x13D0D40", Offset = "0x13D0D40", VA = "0x13D0D40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static Switchboard Switchboard
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x13D0D94", Offset = "0x13D0D94", VA = "0x13D0D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public static BrushColorController BrushColor
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x13D0874", Offset = "0x13D0874", VA = "0x13D0874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static GroupManager GroupManager
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x13D07CC", Offset = "0x13D07CC", VA = "0x13D07CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static HttpServer HttpServer
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x13D0DE8", Offset = "0x13D0DE8", VA = "0x13D0DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public static DriveAccess DriveAccess
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x13D0E3C", Offset = "0x13D0E3C", VA = "0x13D0E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public static DriveSync DriveSync
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x13D0E90", Offset = "0x13D0E90", VA = "0x13D0E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public static OAuth2Identity GoogleIdentity
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x13D0EE4", Offset = "0x13D0EE4", VA = "0x13D0EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public static OAuth2Identity SketchfabIdentity
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x13D0F38", Offset = "0x13D0F38", VA = "0x13D0F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public static GoogleUserSettings GoogleUserSettings
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0x13D0F8C", Offset = "0x13D0F8C", VA = "0x13D0F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public static App Instance
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0x13D0FE0", Offset = "0x13D0FE0", VA = "0x13D0FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public static AppState CurrentState
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0x13D1028", Offset = "0x13D1028", VA = "0x13D1028")]
			get
			{
				return default(AppState);
			}
		}

		[Token(Token = "0x1700017C")]
		public Transform m_RoomTransform
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x13D134C", Offset = "0x13D134C", VA = "0x13D134C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private AppState m_DesiredAppState
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x13D148C", Offset = "0x13D148C", VA = "0x13D148C")]
			get
			{
				return default(AppState);
			}
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x13D1494", Offset = "0x13D1494", VA = "0x13D1494")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public double CurrentSketchTime
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x13D1550", Offset = "0x13D1550", VA = "0x13D1550")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x13D1574", Offset = "0x13D1574", VA = "0x13D1574")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float RoomRadius
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x13D15F8", Offset = "0x13D15F8", VA = "0x13D15F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000180")]
		public SelectionEffect SelectionEffect
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x13D1600", Offset = "0x13D1600", VA = "0x13D1600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public bool IsFirstRunExperience
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x13D1608", Offset = "0x13D1608", VA = "0x13D1608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public bool HasPlayedBefore
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x13D1610", Offset = "0x13D1610", VA = "0x13D1610")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x13D1618", Offset = "0x13D1618", VA = "0x13D1618")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool StartupError
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x13D1624", Offset = "0x13D1624", VA = "0x13D1624")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x13D162C", Offset = "0x13D162C", VA = "0x13D162C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool ShowControllers
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0x13D1638", Offset = "0x13D1638", VA = "0x13D1638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000884")]
			[Address(RVA = "0x13D1684", Offset = "0x13D1684", VA = "0x13D1684")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public bool AutosaveRestoreFileExists
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x13D1734", Offset = "0x13D1734", VA = "0x13D1734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x13D173C", Offset = "0x13D173C", VA = "0x13D173C")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public GpuIntersector GpuIntersector
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x13D18DC", Offset = "0x13D18DC", VA = "0x13D18DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public TrTransform OdsHeadPrimary
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x13D18E4", Offset = "0x13D18E4", VA = "0x13D18E4")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x13D18F4", Offset = "0x13D18F4", VA = "0x13D18F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public TrTransform OdsScenePrimary
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x13D1904", Offset = "0x13D1904", VA = "0x13D1904")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x13D1914", Offset = "0x13D1914", VA = "0x13D1914")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public TrTransform OdsHeadSecondary
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x13D1924", Offset = "0x13D1924", VA = "0x13D1924")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x13D1934", Offset = "0x13D1934", VA = "0x13D1934")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public TrTransform OdsSceneSecondary
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x13D1944", Offset = "0x13D1944", VA = "0x13D1944")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x13D1954", Offset = "0x13D1954", VA = "0x13D1954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public FrameCountDisplay FrameCountDisplay
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x13D1964", Offset = "0x13D1964", VA = "0x13D1964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public bool RequestingAudioReactiveMode
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x13D196C", Offset = "0x13D196C", VA = "0x13D196C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000001")]
		public event Action<AppState, AppState> StateChanged
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0x13D11EC", Offset = "0x13D11EC", VA = "0x13D11EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x13D129C", Offset = "0x13D129C", VA = "0x13D129C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event Action AppExit
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x13D1354", Offset = "0x13D1354", VA = "0x13D1354")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x13D13F0", Offset = "0x13D13F0", VA = "0x13D13F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x13D10C8", Offset = "0x13D10C8", VA = "0x13D10C8")]
		public static OAuth2Identity GetIdentity(Cloud cloud)
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x13D1160", Offset = "0x13D1160", VA = "0x13D1160")]
		public static void Log(string msg)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x13D1974", Offset = "0x13D1974", VA = "0x13D1974")]
		public void ToggleAudioReactiveModeRequest()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x13D1984", Offset = "0x13D1984", VA = "0x13D1984")]
		public void ToggleAudioReactiveBrushesRequest()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x13D1BF8", Offset = "0x13D1BF8", VA = "0x13D1BF8")]
		public double SketchTimeToLevelLoadTime(double sketchTime)
		{
			return default(double);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x13D1C04", Offset = "0x13D1C04", VA = "0x13D1C04")]
		public void SetOdsCameraTransforms(TrTransform headXf, TrTransform sceneXf)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x13D1D18", Offset = "0x13D1D18", VA = "0x13D1D18")]
		private static void SetCurrentDirectoryToApplication()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x13D1D1C", Offset = "0x13D1D1C", VA = "0x13D1D1C")]
		private void CreateIntroSketch()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x13D1EEC", Offset = "0x13D1EEC", VA = "0x13D1EEC")]
		private void DestroyIntroSketch()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x13D1F64", Offset = "0x13D1F64", VA = "0x13D1F64")]
		private static string GetStartupString()
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x13D20F4", Offset = "0x13D20F4", VA = "0x13D20F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x13D3970", Offset = "0x13D3970", VA = "0x13D3970")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x13D3A44", Offset = "0x13D3A44", VA = "0x13D3A44")]
		private string HttpLoadSketchCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x13D3B68", Offset = "0x13D3B68", VA = "0x13D3B68")]
		private void Start()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x13D5298", Offset = "0x13D5298", VA = "0x13D5298")]
		private void AutoProfileOnStartAndQuit(AppState oldState, AppState newState)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x13D5390", Offset = "0x13D5390", VA = "0x13D5390")]
		private void AutoProfileAndQuit()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x13D5404", Offset = "0x13D5404", VA = "0x13D5404")]
		public void SetDesiredState(AppState rDesiredState)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x13D5408", Offset = "0x13D5408", VA = "0x13D5408")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x13D7D64", Offset = "0x13D7D64", VA = "0x13D7D64")]
		public void ExitIntroSketch()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x13D79D4", Offset = "0x13D79D4", VA = "0x13D79D4")]
		private void StartReset()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x13D7E44", Offset = "0x13D7E44", VA = "0x13D7E44")]
		private void FinishReset()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x13D73B8", Offset = "0x13D73B8", VA = "0x13D73B8")]
		private void FinishLoading()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x13D7FC8", Offset = "0x13D7FC8", VA = "0x13D7FC8")]
		[IteratorStateMachine(typeof(<DelayedSketchLoadedCard>d__184))]
		private IEnumerator<Timeslice> DelayedSketchLoadedCard(float delay)
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x13D4AF4", Offset = "0x13D4AF4", VA = "0x13D4AF4")]
		private void SwitchState()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x13D67CC", Offset = "0x13D67CC", VA = "0x13D67CC")]
		private bool HandleExternalTiltOpenRequest()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x13D8DD0", Offset = "0x13D8DD0", VA = "0x13D8DD0")]
		private bool HandlePolyRequest(string request)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x13D8E98", Offset = "0x13D8E98", VA = "0x13D8E98")]
		public bool ShouldTintControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x13D8F0C", Offset = "0x13D8F0C", VA = "0x13D8F0C")]
		public bool IsInStateThatAllowsPainting()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x13D8FAC", Offset = "0x13D8FAC", VA = "0x13D8FAC")]
		public bool IsInStateThatAllowsAnyGrabbing()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x13D9084", Offset = "0x13D9084", VA = "0x13D9084")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x13D6FE8", Offset = "0x13D6FE8", VA = "0x13D6FE8")]
		private void UpdateQuickLoadLogic()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x13D6C3C", Offset = "0x13D6C3C", VA = "0x13D6C3C")]
		private void OnIntroComplete()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x13D6D44", Offset = "0x13D6D44", VA = "0x13D6D44")]
		private bool UpdateIntroFadeIsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x13D6668", Offset = "0x13D6668", VA = "0x13D6668")]
		private void InitCursor()
		{
		}

		[Token(Token = "0x60008B2")]
		public static T DeserializeObjectWithWarning<T>(string text, out string warning)
		{
			return (T)null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x13D3454", Offset = "0x13D3454", VA = "0x13D3454")]
		private void CreateDefaultConfig()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x13D3514", Offset = "0x13D3514", VA = "0x13D3514")]
		public void RefreshUserConfig()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x13D492C", Offset = "0x13D492C", VA = "0x13D492C")]
		public void CreateFailedToDetectVrDialog([Optional] string msg)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x13D4ACC", Offset = "0x13D4ACC", VA = "0x13D4ACC")]
		public static bool AppAllowsCreation()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x13D917C", Offset = "0x13D917C", VA = "0x13D917C")]
		public static string PlatformPath()
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x13D9200", Offset = "0x13D9200", VA = "0x13D9200")]
		public static string SupportPath()
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x13D9278", Offset = "0x13D9278", VA = "0x13D9278")]
		public static string DocumentsPath()
		{
			return null;
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x13D3234", Offset = "0x13D3234", VA = "0x13D3234")]
		private void InitUserPath()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x13D92D8", Offset = "0x13D92D8", VA = "0x13D92D8")]
		private void MoveUserDataFromOldLocation()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x13D90B0", Offset = "0x13D90B0", VA = "0x13D90B0")]
		public static string UserPath()
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x13D9494", Offset = "0x13D9494", VA = "0x13D9494")]
		public static bool InitDirectoryAtPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x13D94C8", Offset = "0x13D94C8", VA = "0x13D94C8")]
		public static string ShortenForDescriptionText(string desc)
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x13D956C", Offset = "0x13D956C", VA = "0x13D956C")]
		public static bool InitMediaLibraryPath()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x13D970C", Offset = "0x13D970C", VA = "0x13D970C")]
		public static bool InitModelLibraryPath(string[] defaultModels)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x13D9A84", Offset = "0x13D9A84", VA = "0x13D9A84")]
		public static bool InitReferenceImagePath(string[] defaultImages)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x13D9C3C", Offset = "0x13D9C3C", VA = "0x13D9C3C")]
		public static bool InitVideoLibraryPath(string[] defaultVideos)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x13D9694", Offset = "0x13D9694", VA = "0x13D9694")]
		public static string MediaLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x13D9A0C", Offset = "0x13D9A0C", VA = "0x13D9A0C")]
		public static string ModelLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x13D9BC4", Offset = "0x13D9BC4", VA = "0x13D9BC4")]
		public static string ReferenceImagePath()
		{
			return null;
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x13D9D34", Offset = "0x13D9D34", VA = "0x13D9D34")]
		public static string VideoLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x13D4A54", Offset = "0x13D4A54", VA = "0x13D4A54")]
		public static string UserSketchPath()
		{
			return null;
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x13D9DAC", Offset = "0x13D9DAC", VA = "0x13D9DAC")]
		public static string AutosavePath()
		{
			return null;
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x13D9104", Offset = "0x13D9104", VA = "0x13D9104")]
		public static string ConfigPath()
		{
			return null;
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x13D9E24", Offset = "0x13D9E24", VA = "0x13D9E24")]
		public static string UserExportPath()
		{
			return null;
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x13D1864", Offset = "0x13D1864", VA = "0x13D1864")]
		public static string AutosaveRestoreFilePath()
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x13D9EEC", Offset = "0x13D9EEC", VA = "0x13D9EEC")]
		public static string SnapshotPath()
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x13D9F64", Offset = "0x13D9F64", VA = "0x13D9F64")]
		public static string VideosPath()
		{
			return null;
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x13D66AC", Offset = "0x13D66AC", VA = "0x13D66AC")]
		public static string VrVideosPath()
		{
			return null;
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x13D9FDC", Offset = "0x13D9FDC", VA = "0x13D9FDC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x13D8038", Offset = "0x13D8038", VA = "0x13D8038")]
		private void OnPlaybackComplete()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x13D3864", Offset = "0x13D3864", VA = "0x13D3864")]
		public TiltBrushManifest GetMergedManifest(bool consultUserConfig, bool forceExperimental = false)
		{
			return null;
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x13DA00C", Offset = "0x13DA00C", VA = "0x13DA00C")]
		public bool IsBrushExperimental(BrushDescriptor brush)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x13DA068", Offset = "0x13DA068", VA = "0x13DA068")]
		private DateTime GetLinkerTime(Assembly assembly, [Optional] TimeZoneInfo target)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x13DA0B8", Offset = "0x13DA0B8", VA = "0x13DA0B8")]
		public static void OpenURL(string url)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x13D26E0", Offset = "0x13D26E0", VA = "0x13D26E0")]
		private static void CopySupportFiles()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x13DA1D0", Offset = "0x13DA1D0", VA = "0x13DA1D0")]
		public App()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class AppAudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_WaveformFloats;

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x13DA438", Offset = "0x13DA438", VA = "0x13DA438")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x13DA4B0", Offset = "0x13DA4B0", VA = "0x13DA4B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x13DA530", Offset = "0x13DA530", VA = "0x13DA530")]
		public AppAudioMonitor()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[CreateAssetMenu(fileName = "QualityLevels", menuName = "App Quality Settings", order = 1)]
	public class AppQualitySettingLevels : ScriptableObject
	{
		[Token(Token = "0x2000176")]
		public enum BloomMode
		{
			[Token(Token = "0x40007CD")]
			None,
			[Token(Token = "0x40007CE")]
			Fast,
			[Token(Token = "0x40007CF")]
			Full,
			[Token(Token = "0x40007D0")]
			Mobile
		}

		[Serializable]
		[Token(Token = "0x2000177")]
		public class AppQualitySettings
		{
			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private BloomMode m_Bloom;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private bool m_Hdr;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[SerializeField]
			private bool m_Fxaa;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int m_MsaaLevel;

			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int m_MaxLod;

			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private AnisotropicFiltering m_Anisotropic;

			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[Header("Mobile Bloom Settings")]
			private string m_BloomLevels;

			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[Header("Render Buffer Scale")]
			private float m_ViewportScale;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private float m_EyeTextureScale;

			[Token(Token = "0x40007DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Header("Stroke Simplification Settings")]
			[SerializeField]
			private float m_StrokeSimplification;

			[Token(Token = "0x40007DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private int m_TargetMaxControlPoints;

			[Token(Token = "0x40007DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private float m_MaxSimplification;

			[Token(Token = "0x40007DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			private float m_MaxSimplificationUserStrokes;

			[Token(Token = "0x40007DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Range(1f, 5f)]
			[SerializeField]
			[Header("Mobile Quality Settings")]
			private int m_GpuLevel;

			[Token(Token = "0x40007DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			[Range(0f, 3f)]
			private int m_FixedFoveationLevel;

			[NonSerialized]
			[Token(Token = "0x40007E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int[] m_BloomLevelsAsInts;

			[Token(Token = "0x1700019A")]
			public BloomMode Bloom
			{
				[Token(Token = "0x60008F1")]
				[Address(RVA = "0x13DA794", Offset = "0x13DA794", VA = "0x13DA794")]
				get
				{
					return default(BloomMode);
				}
			}

			[Token(Token = "0x1700019B")]
			public bool Hdr
			{
				[Token(Token = "0x60008F2")]
				[Address(RVA = "0x13DA79C", Offset = "0x13DA79C", VA = "0x13DA79C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019C")]
			public bool Fxaa
			{
				[Token(Token = "0x60008F3")]
				[Address(RVA = "0x13DA7A4", Offset = "0x13DA7A4", VA = "0x13DA7A4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019D")]
			public int MsaaLevel
			{
				[Token(Token = "0x60008F4")]
				[Address(RVA = "0x13DA7AC", Offset = "0x13DA7AC", VA = "0x13DA7AC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700019E")]
			public int MaxLod
			{
				[Token(Token = "0x60008F5")]
				[Address(RVA = "0x13DA7B4", Offset = "0x13DA7B4", VA = "0x13DA7B4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700019F")]
			public AnisotropicFiltering Anisotropic
			{
				[Token(Token = "0x60008F6")]
				[Address(RVA = "0x13DA7BC", Offset = "0x13DA7BC", VA = "0x13DA7BC")]
				get
				{
					return default(AnisotropicFiltering);
				}
			}

			[Token(Token = "0x170001A0")]
			public int FixedFoveationLevel
			{
				[Token(Token = "0x60008F7")]
				[Address(RVA = "0x13DA7C4", Offset = "0x13DA7C4", VA = "0x13DA7C4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001A1")]
			public int GpuLevel
			{
				[Token(Token = "0x60008F8")]
				[Address(RVA = "0x13DA7CC", Offset = "0x13DA7CC", VA = "0x13DA7CC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001A2")]
			public float ViewportScale
			{
				[Token(Token = "0x60008F9")]
				[Address(RVA = "0x13DA7D4", Offset = "0x13DA7D4", VA = "0x13DA7D4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A3")]
			public float EyeTextureScale
			{
				[Token(Token = "0x60008FA")]
				[Address(RVA = "0x13DA7DC", Offset = "0x13DA7DC", VA = "0x13DA7DC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A4")]
			public int[] BloomLevels
			{
				[Token(Token = "0x60008FB")]
				[Address(RVA = "0x13DA7E4", Offset = "0x13DA7E4", VA = "0x13DA7E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			public float StrokeSimplification
			{
				[Token(Token = "0x60008FC")]
				[Address(RVA = "0x13DA8D0", Offset = "0x13DA8D0", VA = "0x13DA8D0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A6")]
			public int TargetMaxControlPoints
			{
				[Token(Token = "0x60008FD")]
				[Address(RVA = "0x13DA8D8", Offset = "0x13DA8D8", VA = "0x13DA8D8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001A7")]
			public float MaxSimplification
			{
				[Token(Token = "0x60008FE")]
				[Address(RVA = "0x13DA8E0", Offset = "0x13DA8E0", VA = "0x13DA8E0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A8")]
			public float MaxSimplificationUserStrokes
			{
				[Token(Token = "0x60008FF")]
				[Address(RVA = "0x13DA8E8", Offset = "0x13DA8E8", VA = "0x13DA8E8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000900")]
			[Address(RVA = "0x13DA8F0", Offset = "0x13DA8F0", VA = "0x13DA8F0")]
			public AppQualitySettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000178")]
		public class TiltMeterPair
		{
			[Token(Token = "0x40007E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor Brush;

			[Token(Token = "0x40007E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Weight;

			[Token(Token = "0x6000901")]
			[Address(RVA = "0x13DA980", Offset = "0x13DA980", VA = "0x13DA980")]
			public TiltMeterPair()
			{
			}
		}

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppQualitySettings[] m_qualityLevels;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TiltMeterPair[] m_tiltMeterWeights;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_maxPolySketchTriangles;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_warningPolySketchTriangles;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Guid, float> m_tiltMeterMap;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Mobile Dynamic Quality Settings")]
		[SerializeField]
		private float m_HigherQualityGpuTrigger;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_HigherQualityFpsTrigger;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_LowerQualityGpuTrigger;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_LowerQualityFpsTrigger;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_FramesForLowerQuality;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_FramesForHigherQuality;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_BloomFadeTime;

		[Token(Token = "0x1700018F")]
		public int FramesForLowerQuality
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x13DA538", Offset = "0x13DA538", VA = "0x13DA538")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000190")]
		public int FramesForHigherQuality
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x13DA540", Offset = "0x13DA540", VA = "0x13DA540")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000191")]
		public float BloomFadeTime
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x13DA548", Offset = "0x13DA548", VA = "0x13DA548")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000192")]
		public float HigherQualityGpuTrigger
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x13DA550", Offset = "0x13DA550", VA = "0x13DA550")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000193")]
		public float HigherQualityFpsTrigger
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x13DA558", Offset = "0x13DA558", VA = "0x13DA558")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000194")]
		public float LowerQualityGpuTrigger
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x13DA560", Offset = "0x13DA560", VA = "0x13DA560")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000195")]
		public float LowerQualityFpsTrigger
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x13DA568", Offset = "0x13DA568", VA = "0x13DA568")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000196")]
		public AppQualitySettings this[int index]
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x13DA570", Offset = "0x13DA570", VA = "0x13DA570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public int Length
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x13DA5AC", Offset = "0x13DA5AC", VA = "0x13DA5AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000198")]
		public int MaxPolySketchTriangles
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x13DA5C8", Offset = "0x13DA5C8", VA = "0x13DA5C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000199")]
		public int WarningPolySketchTriangles
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x13DA5D0", Offset = "0x13DA5D0", VA = "0x13DA5D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x13DA5D8", Offset = "0x13DA5D8", VA = "0x13DA5D8")]
		public float GetWeightForBrush(Guid brush)
		{
			return default(float);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x13DA65C", Offset = "0x13DA65C", VA = "0x13DA65C")]
		[Obfuscation(Exclude = true)]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x13DA770", Offset = "0x13DA770", VA = "0x13DA770")]
		public AppQualitySettingLevels()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class AudioCaptureManager : MonoBehaviour
	{
		[Token(Token = "0x200017A")]
		private enum AudioCaptureType
		{
			[Token(Token = "0x40007EB")]
			File,
			[Token(Token = "0x40007EC")]
			System,
			[Token(Token = "0x40007ED")]
			App
		}

		[Token(Token = "0x40007E3")]
		private const float DEVICE_SEARCH_DELAY = 1f;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioCaptureManager m_Instance;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SystemAudioMonitor m_SystemAudio;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_FileAudio;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_AppAudio;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioCaptureType m_Type;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_CaptureRequestedCount;

		[Token(Token = "0x170001A9")]
		public bool CaptureRequested
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x13DA9E0", Offset = "0x13DA9E0", VA = "0x13DA9E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public int SampleRate
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x13DA9F0", Offset = "0x13DA9F0", VA = "0x13DA9F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsCapturingAudio
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x13DAA34", Offset = "0x13DAA34", VA = "0x13DAA34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x13DA988", Offset = "0x13DA988", VA = "0x13DA988")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x13DAAB8", Offset = "0x13DAAB8", VA = "0x13DAAB8")]
		public string GetCaptureStatusMessage()
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x13D1A2C", Offset = "0x13D1A2C", VA = "0x13D1A2C")]
		public void CaptureAudio(bool bCapture)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x13DABC0", Offset = "0x13DABC0", VA = "0x13DABC0")]
		public AudioCaptureManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class GameMusic
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D iconImage;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x13DABC8", Offset = "0x13DABC8", VA = "0x13DABC8")]
		public GameMusic()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200017D")]
		private class AudioLoop
		{
			[Token(Token = "0x400085F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GvrAudioSource m_GvrAudioSource;

			[Token(Token = "0x4000860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_LoopName;

			[Token(Token = "0x6000946")]
			[Address(RVA = "0x13DB0D0", Offset = "0x13DB0D0", VA = "0x13DB0D0")]
			public AudioLoop()
			{
			}
		}

		[Token(Token = "0x200017E")]
		public enum FirstRunMusic
		{
			[Token(Token = "0x4000862")]
			IntroQuiet,
			[Token(Token = "0x4000863")]
			IntroLoud,
			[Token(Token = "0x4000864")]
			IntroAmbient
		}

		[Token(Token = "0x200017F")]
		public enum PinSoundType
		{
			[Token(Token = "0x4000866")]
			Enter,
			[Token(Token = "0x4000867")]
			Wobble,
			[Token(Token = "0x4000868")]
			Unpin
		}

		[Token(Token = "0x2000180")]
		[CompilerGenerated]
		private sealed class <SelectionHighlightFadeDown>d__125 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fVolume>5__2;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600094A")]
				[Address(RVA = "0x13DC990", Offset = "0x13DC990", VA = "0x13DC990", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600094C")]
				[Address(RVA = "0x13DC9D8", Offset = "0x13DC9D8", VA = "0x13DC9D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0x13DB754", Offset = "0x13DB754", VA = "0x13DB754")]
			[DebuggerHidden]
			public <SelectionHighlightFadeDown>d__125(int <>1__state)
			{
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0x13DC8B0", Offset = "0x13DC8B0", VA = "0x13DC8B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0x13DC8B4", Offset = "0x13DC8B4", VA = "0x13DC8B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600094B")]
			[Address(RVA = "0x13DC998", Offset = "0x13DC998", VA = "0x13DC998", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000181")]
		[CompilerGenerated]
		private sealed class <UploadLoopFadeDown>d__127 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fRemainingDuration>5__2;

			[Token(Token = "0x170001AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000950")]
				[Address(RVA = "0x13DCB08", Offset = "0x13DCB08", VA = "0x13DCB08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000952")]
				[Address(RVA = "0x13DCB50", Offset = "0x13DCB50", VA = "0x13DCB50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600094D")]
			[Address(RVA = "0x13DB924", Offset = "0x13DB924", VA = "0x13DB924")]
			[DebuggerHidden]
			public <UploadLoopFadeDown>d__127(int <>1__state)
			{
			}

			[Token(Token = "0x600094E")]
			[Address(RVA = "0x13DC9E0", Offset = "0x13DC9E0", VA = "0x13DC9E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600094F")]
			[Address(RVA = "0x13DC9E4", Offset = "0x13DC9E4", VA = "0x13DC9E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000951")]
			[Address(RVA = "0x13DCB10", Offset = "0x13DCB10", VA = "0x13DCB10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000182")]
		[CompilerGenerated]
		private sealed class <MirrorSoundCoroutine>d__159 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 vPos;

			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <vHeadtoMirror>5__2;

			[Token(Token = "0x170001B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000956")]
				[Address(RVA = "0x13DCDA8", Offset = "0x13DCDA8", VA = "0x13DCDA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000958")]
				[Address(RVA = "0x13DCDF0", Offset = "0x13DCDF0", VA = "0x13DCDF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000953")]
			[Address(RVA = "0x13DC2FC", Offset = "0x13DC2FC", VA = "0x13DC2FC")]
			[DebuggerHidden]
			public <MirrorSoundCoroutine>d__159(int <>1__state)
			{
			}

			[Token(Token = "0x6000954")]
			[Address(RVA = "0x13DCB58", Offset = "0x13DCB58", VA = "0x13DCB58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000955")]
			[Address(RVA = "0x13DCB5C", Offset = "0x13DCB5C", VA = "0x13DCB5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x13DCDB0", Offset = "0x13DCDB0", VA = "0x13DCDB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioManager m_Instance;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_AudioSfxEnabled;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_AudioOneShotPrefab;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_NumAudioOneShots;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GvrAudioSource[] m_AudioOneShots;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_NextAvailableAudioOneShot;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_AudioLoopPrefab;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioLoop[] m_AudioLoops;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int m_NumAudioLoops;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_RecentlyUsedAudioLoop;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip[] m_FirstRunMusic;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameMusic[] m_GameMusic;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_MusicPrefab;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip m_IntroReveal;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource m_Music;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_ActiveGameMusicIndex;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_IntroTransitionSound;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_IntroTransitionGain;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioClip m_ActivatePanelSound;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip m_DeactivatePanelSound;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip m_PopUpSound;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_PopUpGain;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_PanelActivationVolume;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_PanelActivationGain;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_PanelActivateMinTriggerTime;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_PanelActivateTimestamp;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioClip[] m_ItemHoverSounds;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_ItemHoverVolume;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int m_ItemHoverSoundIndex;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip[] m_ItemSelectSounds;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_ItemSelectGain;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioClip m_ItemDisabledSound;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AudioClip[] m_UndoSounds;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioClip[] m_RedoSounds;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AudioClip m_InitWorldGrabSound;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_InitWorldGrabGain;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_InitWorldGrabMinTriggerTime;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_InitWorldGrabTimestamp;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioClip m_WorldGrabLoop;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_WorldGrabLoopMaxVolume;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_WorldGrabLoopAttenuation;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_WorldGrabLoopSmoothSpeed;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AudioClip m_WidgetShowSound;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_WidgetShowGain;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private AudioClip m_WidgetHideSound;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_WidgetHideGain;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float m_WidgetShowHideMinTriggerTime;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float m_WidgetShowHideTimestamp;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private AudioClip m_PanelFlipSound;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float m_PanelFlipVolume;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_PanelFlipGain;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AudioClip m_MagicControllerSound;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_MagicControllerGain;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip m_TeleportSound;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_TeleportVolume;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AudioClip m_DuplicateSound;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_DuplicateGain;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private AudioClip m_MirrorSound;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AudioClip m_MirrorReflectionSound;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AudioClip m_ScreenshotSound;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_ScreenshotVolume;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AudioClip m_TrashSound;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AudioClip m_TrashSoftSound;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AudioClip m_CountdownSound;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AudioClip m_HintAnimateSound;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private AudioClip m_SliderSound;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_SliderVolume;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AudioClip m_SketchLoadedSound;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_SketchLoadedGain;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AudioClip m_SketchUploadCompleteSound;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_SketchUploadCompleteGain;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private AudioClip m_SketchUploadCanceledSound;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private AudioClip m_ControllerSwapSound;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private AudioClip m_SaveSketchSound;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_SaveSketchGain;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private AudioClip m_PinCushionOpenSound;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_PinCushionOpenVolume;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private AudioClip m_PinCushionCloseSound;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_PinCushionCloseVolume;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private AudioClip m_PinCushionHoverSound;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_PinCushionHoverVolume;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private AudioClip m_DropperIntersectionSound;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private AudioClip m_DropperPickSound;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		[Range(0f, 24f)]
		private float m_DropperPickGain;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private AudioClip m_BasicToAdvancedModeSound;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_BasicToAdvancedModeGain;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private AudioClip m_AdvancedToBasicModeSound;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_AdvancedToBasicModeGain;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private AudioClip m_TransformResetSound;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_TransformResetVolume;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private float m_HintAnimateMinTriggerTime;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float m_HintAnimateTimestamp;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private AudioClip m_PanelPaneAttachSound;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private AudioClip m_PanelPaneMoveSound;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float m_PanelPanelMoveTimestamp;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[SerializeField]
		private float m_PanelPaneMoveMinTriggerTime;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private AudioClip m_UploadLoop;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_UploadLoopGain;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private AudioClip m_UploadLoopQuiet;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[Range(0f, 24f)]
		[SerializeField]
		private float m_UploadLoopQuietGain;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private float m_UploadLoopFadeDownDuration;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private AudioClip m_SelectionHighlightLoop;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_SelectionHighlightVolume;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private float m_SelectionHighlightFadeDownSpeed;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private AudioClip m_PinEnterSound;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private AudioClip[] m_PinWobbleSounds;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private AudioClip m_UnpinSound;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[Header("Selection Toggle Sounds")]
		[SerializeField]
		private AudioClip m_ToggleToSelect;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private AudioClip m_ToggleToDeselect;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float m_SelectionToggleVolume;

		[Token(Token = "0x170001AC")]
		public static bool Enabled
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x13DAC9C", Offset = "0x13DAC9C", VA = "0x13DAC9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x13D6724", Offset = "0x13D6724", VA = "0x13D6724")]
			set
			{
			}
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x13DAD10", Offset = "0x13DAD10", VA = "0x13DAD10")]
		public int NumGameMusics()
		{
			return default(int);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x13DAD2C", Offset = "0x13DAD2C", VA = "0x13DAD2C")]
		public GameMusic GetGameMusic(int index)
		{
			return null;
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x13DAD5C", Offset = "0x13DAD5C", VA = "0x13DAD5C")]
		public int GetActiveGameMusic()
		{
			return default(int);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x13DAD64", Offset = "0x13DAD64", VA = "0x13DAD64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x13DB0D8", Offset = "0x13DB0D8", VA = "0x13DB0D8")]
		public bool StartLoop(AudioClip rClip, string sLoopName, Transform targetTransform, float fVolume = 1f, float fGain = 0f, float fSpatialBlend = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x13DB448", Offset = "0x13DB448", VA = "0x13DB448")]
		public void ChangeLoopVolume(string sLoopName, float fVolume)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x13DB514", Offset = "0x13DB514", VA = "0x13DB514")]
		public void StopLoop(string sLoopName)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x13DABD0", Offset = "0x13DABD0", VA = "0x13DABD0")]
		public void StopAllLoops()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x13DB614", Offset = "0x13DB614", VA = "0x13DB614")]
		public void SelectionHighlightLoop(bool bActive)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x13DB6EC", Offset = "0x13DB6EC", VA = "0x13DB6EC")]
		[IteratorStateMachine(typeof(<SelectionHighlightFadeDown>d__125))]
		private IEnumerator SelectionHighlightFadeDown()
		{
			return null;
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x13DB77C", Offset = "0x13DB77C", VA = "0x13DB77C")]
		public void UploadLoop(bool bActive)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x13DB8BC", Offset = "0x13DB8BC", VA = "0x13DB8BC")]
		[IteratorStateMachine(typeof(<UploadLoopFadeDown>d__127))]
		private IEnumerator UploadLoopFadeDown()
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x13DB94C", Offset = "0x13DB94C", VA = "0x13DB94C")]
		public void ItemHover(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x13DBB7C", Offset = "0x13DBB7C", VA = "0x13DBB7C")]
		public void PanelFlip(Vector3 vPos)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x13DBB90", Offset = "0x13DBB90", VA = "0x13DBB90")]
		public void ItemSelect(Vector3 vPos)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x13DBC18", Offset = "0x13DBC18", VA = "0x13DBC18")]
		public void DisabledItemSelect(Vector3 vPos)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x13DBC2C", Offset = "0x13DBC2C", VA = "0x13DBC2C")]
		public void ActivatePanel(bool bActivate, Vector3 vPos)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x13DBCB8", Offset = "0x13DBCB8", VA = "0x13DBCB8")]
		public void WorldGrabbed(Vector3 vPos, float fVolume = 1f)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x13DBD34", Offset = "0x13DBD34", VA = "0x13DBD34")]
		public void WorldGrabLoop(bool bActive)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x13DBE04", Offset = "0x13DBE04", VA = "0x13DBE04")]
		public void PlayIntroTransitionSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x13DBE18", Offset = "0x13DBE18", VA = "0x13DBE18")]
		public void PlayPopUpSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x13DBE2C", Offset = "0x13DBE2C", VA = "0x13DBE2C")]
		public void ShowHideWidget(bool bShow, Vector3 vPos, float fVolume = 1f)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x13DBED0", Offset = "0x13DBED0", VA = "0x13DBED0")]
		public void PlayDuplicateSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x13DBEE4", Offset = "0x13DBEE4", VA = "0x13DBEE4")]
		public void PlayTeleportSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x13DBEF8", Offset = "0x13DBEF8", VA = "0x13DBEF8")]
		public void PlayScreenshotSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x13DBF0C", Offset = "0x13DBF0C", VA = "0x13DBF0C")]
		public void PlayTrashSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x13DBF20", Offset = "0x13DBF20", VA = "0x13DBF20")]
		public void PlayTrashSoftSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x13DBF34", Offset = "0x13DBF34", VA = "0x13DBF34")]
		public void PlayHintAnimateSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x13DBFAC", Offset = "0x13DBFAC", VA = "0x13DBFAC")]
		public void PlayDropperIntersectionSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x13DBFC0", Offset = "0x13DBFC0", VA = "0x13DBFC0")]
		public void PlayDropperPickSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x13DBFD4", Offset = "0x13DBFD4", VA = "0x13DBFD4")]
		public void PlaySliderSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x13DBFE8", Offset = "0x13DBFE8", VA = "0x13DBFE8")]
		public void PlayGroupedSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x13DBFFC", Offset = "0x13DBFFC", VA = "0x13DBFFC")]
		public void PlayUndoSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x13DC084", Offset = "0x13DC084", VA = "0x13DC084")]
		public void PlayRedoSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x13D81A0", Offset = "0x13D81A0", VA = "0x13D81A0")]
		public void PlaySketchLoadedSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x13DC10C", Offset = "0x13DC10C", VA = "0x13DC10C")]
		public void PlayUploadCompleteSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x13D8DBC", Offset = "0x13D8DBC", VA = "0x13D8DBC")]
		public void PlayUploadCanceledSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x13DC120", Offset = "0x13DC120", VA = "0x13DC120")]
		public void PlayControllerSwapSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x13DC134", Offset = "0x13DC134", VA = "0x13DC134")]
		public void PlayPanelPaneAttachSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x13DC148", Offset = "0x13DC148", VA = "0x13DC148")]
		public void PlayPanelPaneMoveSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x13DC1C0", Offset = "0x13DC1C0", VA = "0x13DC1C0")]
		public void PlayIntroReveal()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x13D6F60", Offset = "0x13D6F60", VA = "0x13D6F60")]
		public void PlayMagicControllerSound()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x13DC250", Offset = "0x13DC250", VA = "0x13DC250")]
		public void PlayMirrorSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x13DC270", Offset = "0x13DC270", VA = "0x13DC270")]
		[IteratorStateMachine(typeof(<MirrorSoundCoroutine>d__159))]
		private IEnumerator MirrorSoundCoroutine(Vector3 vPos)
		{
			return null;
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x13DC324", Offset = "0x13DC324", VA = "0x13DC324")]
		public void PlayPinSound(Vector3 vPos, PinSoundType type)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x13DC3E0", Offset = "0x13DC3E0", VA = "0x13DC3E0")]
		public void PlaySaveSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x13DC3F4", Offset = "0x13DC3F4", VA = "0x13DC3F4")]
		public void PlayToggleSelect(Vector3 vPos, bool willSelect)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x13DC428", Offset = "0x13DC428", VA = "0x13DC428")]
		public void PlayPinCushionSound(bool bShow)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x13DC4DC", Offset = "0x13DC4DC", VA = "0x13DC4DC")]
		public void PlayPinCushionHoverSound()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x13DC55C", Offset = "0x13DC55C", VA = "0x13DC55C")]
		public void PlayTransformResetSound()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x13DC60C", Offset = "0x13DC60C", VA = "0x13DC60C")]
		public void AdvancedModeSwitch(bool toAdvanced)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x13D8C30", Offset = "0x13D8C30", VA = "0x13D8C30")]
		public void PlayFirstRunMusic(FirstRunMusic style, float delay = 0f)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x13DC6C0", Offset = "0x13DC6C0", VA = "0x13DC6C0")]
		public void PlayGameMusic(int index)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x13D8D24", Offset = "0x13D8D24", VA = "0x13D8D24")]
		public void SetMusicVolume(float volume)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x13DC7B4", Offset = "0x13DC7B4", VA = "0x13DC7B4")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x13DB9BC", Offset = "0x13DB9BC", VA = "0x13DB9BC")]
		public void TriggerOneShot(AudioClip rClip, Vector3 vPos, float fVolume, float fSpatialBlend = 1f, float fGain = 0f)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x13DAB60", Offset = "0x13DAB60", VA = "0x13DAB60")]
		public void StopAudio()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x13DC838", Offset = "0x13DC838", VA = "0x13DC838")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class AutoProfiler : MonoBehaviour
	{
		[Token(Token = "0x4000876")]
		private const string LOG_FILE_BASE = "Temp/TiltBrushProfile";

		[Token(Token = "0x4000877")]
		private const int NUM_LOG_FILES = 2;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_logRotatePeriod;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_pauseAppWhenPoor;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_poorDt;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_avgWindow;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_poorAvgDt;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_enableProfiling;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_useLogFiles;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_avgDt;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_disableReason;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_nextFileIndex;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isProfiling;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextLogRotateTime;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_disableAfterFrames;

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x13DCDF8", Offset = "0x13DCDF8", VA = "0x13DCDF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x13DCDFC", Offset = "0x13DCDFC", VA = "0x13DCDFC")]
		private void Update()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x13DD2C8", Offset = "0x13DD2C8", VA = "0x13DD2C8")]
		private void SchedulePauseIfEnabled(string reason)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x13DD180", Offset = "0x13DD180", VA = "0x13DD180")]
		private void EnableProfile()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x13DD280", Offset = "0x13DD280", VA = "0x13DD280")]
		private void DisableProfile()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x13DD2F0", Offset = "0x13DD2F0", VA = "0x13DD2F0")]
		public AutoProfiler()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class BaseChatScript : MonoBehaviour
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TextMeshPro m_ChatText;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected ScrollRect m_Scroll;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int m_NumLines;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int m_CharacterLineLimit;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_Lines;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly string m_Blue;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly string m_DarkGrey;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly string m_OffWhite;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool m_UseOffWhite;

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x13DD328", Offset = "0x13DD328", VA = "0x13DD328")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x13DD3AC", Offset = "0x13DD3AC", VA = "0x13DD3AC")]
		protected void ClearChatLines()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x13DD41C", Offset = "0x13DD41C", VA = "0x13DD41C")]
		protected void AddLine(string s, string sRichFront = "", string sRichBack = "")
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x13DD624", Offset = "0x13DD624", VA = "0x13DD624")]
		protected void RefreshChatText()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x13DD794", Offset = "0x13DD794", VA = "0x13DD794")]
		public BaseChatScript()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class Batch : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		private const int MAX_VERTS_SOFT = 15999;

		[Token(Token = "0x400088F")]
		private const int MAX_VERTS_HARD = 65534;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BatchPool m_ParentPool;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter m_MeshFilter;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_bVertexDataDirty;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_bTopologyDirty;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GeometryPool m_Geometry;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_InstantiatedMaterial;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_LastMeshUpdate;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<BatchSubset> m_Groups;

		[Token(Token = "0x170001B3")]
		public int LastMeshUpdate
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x13DD82C", Offset = "0x13DD82C", VA = "0x13DD82C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B4")]
		public BatchPool ParentPool
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x13DD834", Offset = "0x13DD834", VA = "0x13DD834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public GeometryPool Geometry
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x13DD83C", Offset = "0x13DD83C", VA = "0x13DD83C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public Material InstantiatedMaterial
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x13DD844", Offset = "0x13DD844", VA = "0x13DD844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public ushort BatchId
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x13DD84C", Offset = "0x13DD84C", VA = "0x13DD84C")]
			[CompilerGenerated]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x13DD854", Offset = "0x13DD854", VA = "0x13DD854")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x13DD85C", Offset = "0x13DD85C", VA = "0x13DD85C")]
		public static Batch Create(BatchPool parentPool, Transform rParent, Bounds rBounds)
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x13DDF90", Offset = "0x13DDF90", VA = "0x13DDF90")]
		public void ReplaceMaterial(Material newMaterial)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x13DE008", Offset = "0x13DE008", VA = "0x13DE008")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x13DDCE8", Offset = "0x13DDCE8", VA = "0x13DDCE8")]
		private void Init(BatchPool parentPool, Bounds bounds, ushort batchId)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x13DE1EC", Offset = "0x13DE1EC", VA = "0x13DE1EC")]
		public void ClearCachedGeometry()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x13DE240", Offset = "0x13DE240", VA = "0x13DE240")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x13DE40C", Offset = "0x13DE40C", VA = "0x13DE40C")]
		public void GetTriangles(out Vector3[] aVerts, out int nVerts, out int[] aTris, out int nTris)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x13DE51C", Offset = "0x13DE51C", VA = "0x13DE51C")]
		public bool HasSpaceFor(int nVert)
		{
			return default(bool);
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x13DE550", Offset = "0x13DE550", VA = "0x13DE550")]
		private static Bounds GetBoundsFor(List<Vector3> aVert, int iVert, int nVert, [Optional] TrTransform? leftTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x13DE61C", Offset = "0x13DE61C", VA = "0x13DE61C")]
		private static Bounds GetBoundsFor(Vector3[] aVert, int iVert, int nVert, [Optional] TrTransform? leftTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x13DE7F0", Offset = "0x13DE7F0", VA = "0x13DE7F0")]
		private void AppendVertexData(int nVert, Vector3[] vertices, Vector3[] normals, Vector2[] uvs, List<Vector3> uvws, Color32[] colors, Vector4[] tangents)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x13DE9F0", Offset = "0x13DE9F0", VA = "0x13DE9F0")]
		private void AppendTriangleData(int iVertOffset, int nTriIndices, int[] tris)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x13DEBE0", Offset = "0x13DEBE0", VA = "0x13DEBE0")]
		public void DelayedUpdateMesh()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x13DEC20", Offset = "0x13DEC20", VA = "0x13DEC20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x13DEC24", Offset = "0x13DEC24", VA = "0x13DEC24")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x13DE00C", Offset = "0x13DE00C", VA = "0x13DE00C")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x13DEC28", Offset = "0x13DEC28", VA = "0x13DEC28")]
		public void CopyToMesh(BatchSubset subset, GameObject obj)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x13DED2C", Offset = "0x13DED2C", VA = "0x13DED2C")]
		public BatchSubset AddSubset(int nVert, int nTris, MasterBrush rMasterBrush)
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x13DEFF4", Offset = "0x13DEFF4", VA = "0x13DEFF4")]
		public BatchSubset AddSubset(GeometryPool geom)
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x13DF068", Offset = "0x13DF068", VA = "0x13DF068")]
		public BatchSubset AddSubset(GeometryPool geom, int iVert, int nVert, int iTriIndex, int nTriIndex, [Optional] TrTransform? leftTransform)
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x13DF304", Offset = "0x13DF304", VA = "0x13DF304")]
		[Conditional("UNITY_EDITOR")]
		private void SelfCheck()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x13DF544", Offset = "0x13DF544", VA = "0x13DF544")]
		public void RemoveSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x13DF680", Offset = "0x13DF680", VA = "0x13DF680")]
		public void DisableSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x13DF7D4", Offset = "0x13DF7D4", VA = "0x13DF7D4")]
		public void EnableSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x13DF8FC", Offset = "0x13DF8FC", VA = "0x13DF8FC")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x13DF964", Offset = "0x13DF964", VA = "0x13DF964")]
		public Batch()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class BatchManager
	{
		[Token(Token = "0x2000187")]
		[CompilerGenerated]
		private sealed class <AllBatches>d__32 : IEnumerable<Batch>, IEnumerable, IEnumerator<Batch>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Batch <>2__current;

			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BatchManager <>4__this;

			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <iPool>5__2;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private BatchPool <pool>5__3;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <iBatch>5__4;

			[Token(Token = "0x170001BB")]
			private Batch System.Collections.Generic.IEnumerator<TiltBrush.Batch>.Current
			{
				[Token(Token = "0x60009A1")]
				[Address(RVA = "0x13E1E1C", Offset = "0x13E1E1C", VA = "0x13E1E1C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A3")]
				[Address(RVA = "0x13E1E64", Offset = "0x13E1E64", VA = "0x13E1E64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x13E15AC", Offset = "0x13E15AC", VA = "0x13E15AC")]
			[DebuggerHidden]
			public <AllBatches>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0x13E1CEC", Offset = "0x13E1CEC", VA = "0x13E1CEC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x13E1CF0", Offset = "0x13E1CF0", VA = "0x13E1CF0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x13E1E24", Offset = "0x13E1E24", VA = "0x13E1E24", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x13E1E6C", Offset = "0x13E1E6C", VA = "0x13E1E6C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Batch> System.Collections.Generic.IEnumerable<TiltBrush.Batch>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x13E1F10", Offset = "0x13E1F10", VA = "0x13E1F10", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000899")]
		public const int kBatchesToLeaveMutable = 1;

		[Token(Token = "0x400089A")]
		public const int kTimeUntilBatchImmutable = 60;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<BatchPool> m_Pools;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Guid, BatchPool> m_BrushToPool;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bounds m_MeshBounds;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasScript m_owner;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_ParentTransform;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> m_MaterialKeywords;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_CurrentTimestamp;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ushort, Batch> sm_BatchMap;

		[Token(Token = "0x170001B8")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x13DF96C", Offset = "0x13DF96C", VA = "0x13DF96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public List<string> MaterialKeywords
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x13DF974", Offset = "0x13DF974", VA = "0x13DF974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public int CurrentTimestamp
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x13DF97C", Offset = "0x13DF97C", VA = "0x13DF97C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x13DF984", Offset = "0x13DF984", VA = "0x13DF984")]
		public void Init(CanvasScript owner)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x13DFA84", Offset = "0x13DFA84", VA = "0x13DFA84")]
		public void Update()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x13DFF88", Offset = "0x13DFF88", VA = "0x13DFF88")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x13E0218", Offset = "0x13E0218", VA = "0x13E0218")]
		private BatchPool GetPool(BrushDescriptor brush)
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x13E0250", Offset = "0x13E0250", VA = "0x13E0250")]
		private BatchPool GetPool(Guid brushGuid)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x13E05F4", Offset = "0x13E05F4", VA = "0x13E05F4")]
		public Batch GetBatch(ushort batchId)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x13E06C8", Offset = "0x13E06C8", VA = "0x13E06C8")]
		private Batch GetBatch(BatchPool pool, int nVerts)
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x13E08F4", Offset = "0x13E08F4", VA = "0x13E08F4")]
		public BatchSubset CreateSubset(BrushDescriptor brush, int nVerts, int nTris, MasterBrush geometry)
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x13E0948", Offset = "0x13E0948", VA = "0x13E0948")]
		public BatchSubset CreateSubset(BrushDescriptor brush, GeometryPool geometry)
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x13E0998", Offset = "0x13E0998", VA = "0x13E0998")]
		public BatchSubset CreateSubset(BatchSubset otherSubset, [Optional] TrTransform? leftTransform)
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x13E0A30", Offset = "0x13E0A30", VA = "0x13E0A30")]
		public void SetVisibility(bool visibility)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x13E0CE8", Offset = "0x13E0CE8", VA = "0x13E0CE8")]
		public void ResetPools()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x13E0FE4", Offset = "0x13E0FE4", VA = "0x13E0FE4")]
		public BatchPool GetBatchPool(int iPool)
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x13E10A4", Offset = "0x13E10A4", VA = "0x13E10A4")]
		public int GetNumBatchPools()
		{
			return default(int);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x13E10EC", Offset = "0x13E10EC", VA = "0x13E10EC")]
		public Bounds GetBoundsOfAllStrokes(bool onlyActive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x13E13EC", Offset = "0x13E13EC", VA = "0x13E13EC")]
		public void CloneAsUndoObject(BatchSubset subset, GameObject clone)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x13E1534", Offset = "0x13E1534", VA = "0x13E1534")]
		[IteratorStateMachine(typeof(<AllBatches>d__32))]
		public IEnumerable<Batch> AllBatches()
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x13E15E0", Offset = "0x13E15E0", VA = "0x13E15E0")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x13E18B8", Offset = "0x13E18B8", VA = "0x13E18B8")]
		public int CountBatches()
		{
			return default(int);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x13E19BC", Offset = "0x13E19BC", VA = "0x13E19BC")]
		public int CountAllBatchTriangles()
		{
			return default(int);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x13E1AD0", Offset = "0x13E1AD0", VA = "0x13E1AD0")]
		public int CountAllBatchVertices()
		{
			return default(int);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x13E1BE4", Offset = "0x13E1BE4", VA = "0x13E1BE4")]
		public BatchManager()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class BatchPool
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BatchManager m_owner;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Guid m_BrushGuid;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Batch> m_Batches;

		[Token(Token = "0x170001BD")]
		public BatchManager Owner
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x13E2028", Offset = "0x13E2028", VA = "0x13E2028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public string Name
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x13E2030", Offset = "0x13E2030", VA = "0x13E2030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x13E05CC", Offset = "0x13E05CC", VA = "0x13E05CC")]
		public BatchPool(BatchManager owner)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x13DFC40", Offset = "0x13DFC40", VA = "0x13DFC40")]
		public void TrimBatches()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x13E00D0", Offset = "0x13E00D0", VA = "0x13E00D0")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x13DFD28", Offset = "0x13DFD28", VA = "0x13DFD28")]
		public void ClearCachedGeometryFromBatches()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x13E0E94", Offset = "0x13E0E94", VA = "0x13E0E94")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class BatchSubset
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stroke m_Stroke;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Batch m_ParentBatch;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds m_Bounds;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_StartVertIndex;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_VertLength;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_iTriIndex;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_nTriIndex;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_Active;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ushort[] m_TriangleBackup;

		[Token(Token = "0x170001BF")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x13E20E8", Offset = "0x13E20E8", VA = "0x13E20E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x13DEFEC", Offset = "0x13DEFEC", VA = "0x13DEFEC")]
		public BatchSubset()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class BillboardPanel : MonoBehaviour
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_BillboardTransform;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x13E2114", Offset = "0x13E2114", VA = "0x13E2114")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x13E2174", Offset = "0x13E2174", VA = "0x13E2174")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x13E2314", Offset = "0x13E2314", VA = "0x13E2314")]
		public BillboardPanel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public struct BlocksMaterial
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BrushDescriptor brushDescriptor;
	}
	[Token(Token = "0x200018D")]
	public class BrushCatalog : MonoBehaviour
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BrushCatalog m_Instance;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D m_GlobalNoiseTexture;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BrushDescriptor m_DefaultBrush;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IsLoading;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, BrushDescriptor> m_GuidToBrush;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<BrushDescriptor> m_AllBrushes;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<BrushDescriptor> m_GuiBrushList;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public BlocksMaterial[] m_BlocksMaterials;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Material, BrushDescriptor> m_MaterialToBrush;

		[Token(Token = "0x170001C0")]
		public bool IsLoading
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x13E2454", Offset = "0x13E2454", VA = "0x13E2454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public BrushDescriptor DefaultBrush
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x13E245C", Offset = "0x13E245C", VA = "0x13E245C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public IEnumerable<BrushDescriptor> AllBrushes
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x13E2464", Offset = "0x13E2464", VA = "0x13E2464")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public List<BrushDescriptor> GuiBrushList
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x13E246C", Offset = "0x13E246C", VA = "0x13E246C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000003")]
		public event Action BrushCatalogChanged
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x13E231C", Offset = "0x13E231C", VA = "0x13E231C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x13E23B8", Offset = "0x13E23B8", VA = "0x13E23B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13DDC04", Offset = "0x13DDC04", VA = "0x13DDC04")]
		public BrushDescriptor GetBrush(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x13E2474", Offset = "0x13E2474", VA = "0x13E2474")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x13D81DC", Offset = "0x13D81DC", VA = "0x13D81DC")]
		public void BeginReload()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x13E2B60", Offset = "0x13E2B60", VA = "0x13E2B60")]
		public BrushDescriptor[] GetTagFilteredBrushList()
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x13E2CDC", Offset = "0x13E2CDC", VA = "0x13E2CDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x13E2D24", Offset = "0x13E2D24", VA = "0x13E2D24")]
		private void ModifyBrushTags()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x13E2660", Offset = "0x13E2660", VA = "0x13E2660")]
		private static List<BrushDescriptor> LoadBrushesInManifest()
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x13E32B4", Offset = "0x13E32B4", VA = "0x13E32B4")]
		public BrushCatalog()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class BrushColorController : ColorController
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_BrushLuminanceMin;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_BrushSaturationMax;

		[Token(Token = "0x170001C4")]
		public override Color CurrentColor
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x2191914", Offset = "0x2191914", VA = "0x2191914", Slot = "4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x2191920", Offset = "0x2191920", VA = "0x2191920", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float BrushLuminanceMin
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x2191A1C", Offset = "0x2191A1C", VA = "0x2191A1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C6")]
		public float BrushSaturationMax
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x2191A24", Offset = "0x2191A24", VA = "0x2191A24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x2191A2C", Offset = "0x2191A2C", VA = "0x2191A2C", Slot = "6")]
		public override void SetCurrentColorSilently(Color color)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x2191AC0", Offset = "0x2191AC0", VA = "0x2191AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x2191B70", Offset = "0x2191B70", VA = "0x2191B70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x2191C20", Offset = "0x2191C20", VA = "0x2191C20")]
		private void OnMainPointerBrushChange(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x2191C88", Offset = "0x2191C88", VA = "0x2191C88")]
		public BrushColorController()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class BrushController : MonoBehaviour
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BrushController m_Instance;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BrushDescriptor m_ActiveBrush;

		[Token(Token = "0x170001C7")]
		public BrushDescriptor ActiveBrush
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x2192088", Offset = "0x2192088", VA = "0x2192088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<Stroke> StrokeSelected
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x2191C90", Offset = "0x2191C90", VA = "0x2191C90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x2191D40", Offset = "0x2191D40", VA = "0x2191D40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event Action<BrushDescriptor> BrushChanged
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0x2191DF0", Offset = "0x2191DF0", VA = "0x2191DF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x2191EA0", Offset = "0x2191EA0", VA = "0x2191EA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event Action BrushSetToDefault
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x2191F50", Offset = "0x2191F50", VA = "0x2191F50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x2191FEC", Offset = "0x2191FEC", VA = "0x2191FEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x2192090", Offset = "0x2192090", VA = "0x2192090")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x21920DC", Offset = "0x21920DC", VA = "0x21920DC")]
		public void SetActiveBrush(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x21922D0", Offset = "0x21922D0", VA = "0x21922D0")]
		public void SetBrushToDefault()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x219234C", Offset = "0x219234C", VA = "0x219234C")]
		public void TriggerStrokeSelected(Stroke stroke)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x21923DC", Offset = "0x21923DC", VA = "0x21923DC")]
		public BrushController()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public abstract class BaseBrushScript : MonoBehaviour
	{
		[Token(Token = "0x40008D1")]
		public const float kPreviewDuration = 0.2f;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool m_bCanBatch;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BrushDescriptor m_Desc;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_EnableBackfaces;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool m_PreviewMode;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[UsedImplicitly]
		protected bool m_IsLoading;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Color32 m_Color;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TrTransform m_LastSpawnXf;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float m_BaseSize_PS;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected StatelessRng m_rng;

		[Token(Token = "0x170001C8")]
		protected Vector3 m_LastSpawnPos
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x219292C", Offset = "0x219292C", VA = "0x219292C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C9")]
		public float StrokeScale
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x2192960", Offset = "0x2192960", VA = "0x2192960")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CA")]
		public float LOCAL_TO_POINTER
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x2192968", Offset = "0x2192968", VA = "0x2192968")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CB")]
		public float POINTER_TO_LOCAL
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x2192978", Offset = "0x2192978", VA = "0x2192978")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CC")]
		public float BaseSize_PS
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x2192980", Offset = "0x2192980", VA = "0x2192980")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x2192988", Offset = "0x2192988", VA = "0x2192988")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public float BaseSize_LS
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x2192990", Offset = "0x2192990", VA = "0x2192990")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CE")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x219299C", Offset = "0x219299C", VA = "0x219299C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public BrushDescriptor Descriptor
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x2192A00", Offset = "0x2192A00", VA = "0x2192A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public Color CurrentColor
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x2192A08", Offset = "0x2192A08", VA = "0x2192A08")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170001D1")]
		public int RandomSeed
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x2192A48", Offset = "0x2192A48", VA = "0x2192A48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x2192A50", Offset = "0x2192A50", VA = "0x2192A50")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Stroke Stroke
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x2192A58", Offset = "0x2192A58", VA = "0x2192A58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x2192A60", Offset = "0x2192A60", VA = "0x2192A60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x21923E4", Offset = "0x21923E4", VA = "0x21923E4")]
		public static BaseBrushScript Create(Transform parent, TrTransform xfInParentSpace, BrushDescriptor desc, Color color, float size_PS)
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x2192868", Offset = "0x2192868", VA = "0x2192868")]
		public static float GetStrokeCost(BrushDescriptor desc, int verts, float size)
		{
			return default(float);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x2192938", Offset = "0x2192938", VA = "0x2192938")]
		protected BaseBrushScript(bool bCanBatch)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x2192A68", Offset = "0x2192A68", VA = "0x2192A68")]
		public void SetIsLoading()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x2192A74", Offset = "0x2192A74", VA = "0x2192A74")]
		public void SetPreviewMode()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x2192A80", Offset = "0x2192A80", VA = "0x2192A80")]
		public GameObject CloneAsUndoObject()
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x2192C88", Offset = "0x2192C88", VA = "0x2192C88")]
		public bool UpdatePosition_LS(TrTransform xf, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x2192D08", Offset = "0x2192D08", VA = "0x2192D08")]
		public void SetPreviewProperties(Color rColor, float fSize)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x2193038", Offset = "0x2193038", VA = "0x2193038")]
		public void DestroyMesh()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x2193110", Offset = "0x2193110", VA = "0x2193110", Slot = "4")]
		protected virtual void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x21931AC", Offset = "0x21931AC", VA = "0x21931AC", Slot = "5")]
		public virtual void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x60009F8")]
		public abstract GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc);

		[Token(Token = "0x60009F9")]
		public abstract void ApplyChangesToVisuals();

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x21931B8", Offset = "0x21931B8", VA = "0x21931B8", Slot = "8")]
		public virtual void HideBrush(bool bHide)
		{
		}

		[Token(Token = "0x60009FB")]
		public abstract int GetNumUsedVerts();

		[Token(Token = "0x60009FC")]
		public abstract float GetSpawnInterval(float pressure01);

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x21931E4", Offset = "0x21931E4", VA = "0x21931E4", Slot = "11")]
		public virtual bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x21931EC", Offset = "0x21931EC", VA = "0x21931EC", Slot = "12")]
		public virtual void DecayBrush()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x21931F0", Offset = "0x21931F0", VA = "0x21931F0", Slot = "13")]
		public virtual bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		protected abstract void InitUndoClone(GameObject clone);

		[Token(Token = "0x6000A01")]
		protected abstract bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure);

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x21931F8", Offset = "0x21931F8", VA = "0x21931F8", Slot = "16")]
		public virtual bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x2193200", Offset = "0x2193200", VA = "0x2193200", Slot = "17")]
		public virtual bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x2193210", Offset = "0x2193210", VA = "0x2193210", Slot = "18")]
		public virtual bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x2193218", Offset = "0x2193218", VA = "0x2193218", Slot = "19")]
		public virtual void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x6000A06")]
		public abstract void FinalizeSolitaryBrush();

		[Token(Token = "0x6000A07")]
		public abstract BatchSubset FinalizeBatchedBrush();

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x2193230", Offset = "0x2193230", VA = "0x2193230")]
		protected float PressuredSize(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x21932A4", Offset = "0x21932A4", VA = "0x21932A4")]
		protected float PressuredRandomSize(float pressure01, int salt)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x21932F8", Offset = "0x21932F8", VA = "0x21932F8")]
		protected float PressuredOpacity(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x2193348", Offset = "0x2193348", VA = "0x2193348")]
		private static Vector3 InDirectionOf(Vector3 desired, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x2193380", Offset = "0x2193380", VA = "0x2193380")]
		protected static void ComputeSurfaceFrameNew(Vector3 vPreferredR, Vector3 nMove, Quaternion ori, out Vector3 nRight, out Vector3 nNormal)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x2193634", Offset = "0x2193634", VA = "0x2193634")]
		private static double SetExponent(double x, int exp)
		{
			return default(double);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x2193648", Offset = "0x2193648", VA = "0x2193648")]
		protected static float HashFloat01(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0F")]
		protected static void MirrorQuadFace<T>(T[] array, int index)
		{
		}

		[Token(Token = "0x6000A10")]
		protected static void MirrorQuadFace<T>(List<T> array, int index)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x21936D4", Offset = "0x21936D4", VA = "0x21936D4")]
		protected static void MirrorTangents(Vector4[] array, int index)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x219377C", Offset = "0x219377C", VA = "0x219377C")]
		protected static void CreateDuplicateQuad(Vector3[] aVertArray, Vector3[] aNormArray, int iQuadIndex, Vector3 vQuadNormal)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x219385C", Offset = "0x219385C", VA = "0x219385C")]
		protected static void ComputeTangentSpaceForQuads(Vector3[] aVertices, Vector2[] aUVs, Vector3[] aNormals, Vector4[] aTangents, int stride, int iVert0, int iVert1)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x2193F6C", Offset = "0x2193F6C", VA = "0x2193F6C")]
		protected static void ComputeST(Vector3[] aVert, Vector2[] aUV, int iBaseVert, out Vector3 vS, out Vector3 vT)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x21940A4", Offset = "0x21940A4", VA = "0x21940A4")]
		protected static void ComputeST(IList<Vector3> aVert, IList<Vector2> aUV, int iBaseVert, int iv0, int iv1, int iv2, out Vector3 vS, out Vector3 vT)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x2193E5C", Offset = "0x2193E5C", VA = "0x2193E5C")]
		protected static void ComputeS(Vector3[] aVert, Vector2[] aUV, int iBaseVert, out Vector3 vS)
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class BlocksBrushScript : BaseBrushScript
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x2194480", Offset = "0x2194480", VA = "0x2194480")]
		protected BlocksBrushScript()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x21944A0", Offset = "0x21944A0", VA = "0x21944A0", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x21944C0", Offset = "0x21944C0", VA = "0x21944C0", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x21944C8", Offset = "0x21944C8", VA = "0x21944C8", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x21944D0", Offset = "0x21944D0", VA = "0x21944D0", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x21944D8", Offset = "0x21944D8", VA = "0x21944D8", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x21944E0", Offset = "0x21944E0", VA = "0x21944E0", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x21944E4", Offset = "0x21944E4", VA = "0x21944E4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x21944E8", Offset = "0x21944E8", VA = "0x21944E8", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class BrushDescriptor : ScriptableObject, IExportableMaterial
	{
		[Token(Token = "0x2000195")]
		public class AsStringGuidAttribute : PropertyAttribute
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x219547C", Offset = "0x219547C", VA = "0x219547C")]
			public AsStringGuidAttribute()
			{
			}
		}

		[Token(Token = "0x40008DC")]
		private const string EXPORT_TEXTURE_DIR = "Support/ExportTextures";

		[Token(Token = "0x40008DD")]
		private const string EXPORT_TEXTURE_EXTENSION = ".png";

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ExportGlTF.ExportManifest sm_gltfManifest;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Identity")]
		[DisabledProperty]
		public SerializableGuid m_Guid;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[DisabledProperty]
		[Tooltip("A human readable name that cannot change, but is not guaranteed to be unique.")]
		public string m_DurableName;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[DisabledProperty]
		public string m_CreationVersion;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[DisabledProperty]
		[Tooltip("Set to the current version of Tilt Brush when making non-compatible changes")]
		public string m_ShaderVersion;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[DisabledProperty]
		public GameObject m_BrushPrefab;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("A category that can be used to determine whether a brush will be included in the brush panel")]
		public List<string> m_Tags;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Set to true if brush should not be checked for save/load determinism")]
		public bool m_Nondeterministic;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("When upgrading a brush, populate this field with the prior version")]
		public BrushDescriptor m_Supersedes;

		[NonSerialized]
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BrushDescriptor m_SupersededBy;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("True if this brush looks identical to the version it supersedes. Causes brush to be silently-upgraded on load, and silently-downgraded to the maximally-compatible version on save")]
		public bool m_LooksIdentical;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("GUI")]
		public Texture2D m_ButtonTexture;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Name of the brush, in the UI and elsewhere")]
		public string m_Description;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Optional, experimental-only information about the brush")]
		public string m_DescriptionExtra;

		[NonSerialized]
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_HiddenInGui;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Audio")]
		public AudioClip[] m_BrushAudioLayers;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_BrushAudioBasePitch;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_BrushAudioMaxPitchShift;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_BrushAudioMaxVolume;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_BrushVolumeUpSpeed;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_BrushVolumeDownSpeed;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_VolumeVelocityRangeMultiplier;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_AudioReactive;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip m_ButtonAudio;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Header("Material")]
		private Material m_Material;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int m_TextureAtlasV;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_TileRate;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool m_UseBloomSwatchOnColorPicker;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Header("Size")]
		[Vec2AsRange(LowerBound = 0f, Slider = false)]
		[DisabledProperty]
		public Vector2 m_BrushSizeRange;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[DisabledProperty]
		[SerializeField]
		[Vec2AsRange(LowerBound = 0f, Slider = false, HideMax = true)]
		private Vector2 m_PressureSizeRange;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_SizeVariance;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Range(0.001f, 1f)]
		public float m_PreviewPressureSizeMin;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[Header("Color")]
		public float m_Opacity;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Vec2AsRange(LowerBound = 0f, UpperBound = 1f)]
		public Vector2 m_PressureOpacityRange;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Range(0f, 1f)]
		public float m_ColorLuminanceMin;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[Range(0f, 1f)]
		public float m_ColorSaturationMax;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Header("Particle")]
		public float m_ParticleSpeed;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_ParticleRate;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_ParticleInitialRotationRange;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool m_RandomizeAlpha;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("QuadBatch")]
		public float m_SprayRateMultiplier;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float m_RotationVariance;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float m_PositionVariance;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector2 m_SizeRatio;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[Header("Geometry Brush")]
		public bool m_M11Compatibility;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Header("Tube")]
		public float m_SolidMinLengthMeters_PS;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public bool m_TubeStoreRadiusInTexcoord0Z;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		[Header("Misc")]
		public bool m_RenderBackfaces;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		public bool m_BackIsInvisible;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_BackfaceHueShift;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_BoundsPadding;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Tooltip("For particularly expensive geometry generation: do not incrementally play back the stroke.")]
		public bool m_PlayBackAtStrokeGranularity;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[Header("Export Settings")]
		public ExportableMaterialBlendMode m_BlendMode;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float m_EmissiveFactor;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool m_AllowExport;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		[Header("Simplification Settings")]
		public bool m_SupportsSimplification;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int m_HeadMinPoints;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public int m_HeadPointStep;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int m_TailMinPoints;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public int m_TailPointStep;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int m_MiddlePointStep;

		[Token(Token = "0x400091B")]
		private const string kDefaultShaderPrefix = "Default-none";

		[Token(Token = "0x170001D3")]
		public static ExportGlTF.ExportManifest GltfManifest
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x21944EC", Offset = "0x21944EC", VA = "0x21944EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public Guid UniqueName
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x21947D0", Offset = "0x21947D0", VA = "0x21947D0", Slot = "4")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x170001D5")]
		public string DurableName
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x21947DC", Offset = "0x21947DC", VA = "0x21947DC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x21947E4", Offset = "0x21947E4", VA = "0x21947E4", Slot = "6")]
			get
			{
				return default(ExportableMaterialBlendMode);
			}
		}

		[Token(Token = "0x170001D7")]
		public float EmissiveFactor
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x21947EC", Offset = "0x21947EC", VA = "0x21947EC", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D8")]
		public GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x21947F4", Offset = "0x21947F4", VA = "0x21947F4", Slot = "8")]
			get
			{
				return default(GeometryPool.VertexLayout);
			}
		}

		[Token(Token = "0x170001D9")]
		public bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x2194ABC", Offset = "0x2194ABC", VA = "0x2194ABC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public string VertShaderUri
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x2194B34", Offset = "0x2194B34", VA = "0x2194B34", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public string FragShaderUri
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x2194E44", Offset = "0x2194E44", VA = "0x2194E44", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public bool EnableCull
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x2194E80", Offset = "0x2194E80", VA = "0x2194E80", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public string UriBase
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x2194E9C", Offset = "0x2194E9C", VA = "0x2194E9C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x2194EA4", Offset = "0x2194EA4", VA = "0x2194EA4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x219508C", Offset = "0x219508C", VA = "0x219508C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x21950A8", Offset = "0x21950A8", VA = "0x21950A8", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x21950C4", Offset = "0x21950C4", VA = "0x21950C4", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x21950E0", Offset = "0x21950E0", VA = "0x21950E0", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private ExportGlTF.ExportedBrush ExportedBrush
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x2194B70", Offset = "0x2194B70", VA = "0x2194B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public bool NeedsStraightEdgeProxy
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x21950FC", Offset = "0x21950FC", VA = "0x21950FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public Material Material
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x21951F8", Offset = "0x21951F8", VA = "0x21951F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public GeometryPool.Semantic m_uv0Semantic
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x21952A8", Offset = "0x21952A8", VA = "0x21952A8")]
			get
			{
				return default(GeometryPool.Semantic);
			}
		}

		[Token(Token = "0x170001E7")]
		public GeometryPool.Semantic m_uv1Semantic
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x21952C8", Offset = "0x21952C8", VA = "0x21952C8")]
			get
			{
				return default(GeometryPool.Semantic);
			}
		}

		[Token(Token = "0x170001E8")]
		public bool m_bFbxExportNormalAsTexcoord1
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x21952E8", Offset = "0x21952E8", VA = "0x21952E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x2194918", Offset = "0x2194918", VA = "0x2194918", Slot = "9")]
		public bool HasExportTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x21949F0", Offset = "0x21949F0", VA = "0x21949F0", Slot = "10")]
		public string GetExportTextureFilename()
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x2195200", Offset = "0x2195200", VA = "0x2195200", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x219328C", Offset = "0x219328C", VA = "0x219328C")]
		public float PressureSizeMin(bool previewMode)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x2194D0C", Offset = "0x2194D0C", VA = "0x2194D0C")]
		public static string ComputeHostedUri(string brushName, string filename)
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x21949F4", Offset = "0x21949F4", VA = "0x21949F4")]
		private string GetExportTextureFilenameStandalone()
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x219530C", Offset = "0x219530C", VA = "0x219530C")]
		public BrushDescriptor()
		{
		}
	}
	[Token(Token = "0x2000196")]
	internal class BubbleWandBrush : TubeBrush
	{
		[Token(Token = "0x400091C")]
		private const ushort kVertsInClosedCircle = 9;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x2195484", Offset = "0x2195484", VA = "0x2195484")]
		public BubbleWandBrush()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x2195490", Offset = "0x2195490", VA = "0x2195490", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x2195568", Offset = "0x2195568", VA = "0x2195568", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x21955B4", Offset = "0x21955B4", VA = "0x21955B4", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x2195C40", Offset = "0x2195C40", VA = "0x2195C40", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class CandyCane : ParentBrush
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected int m_numGrossParents;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected Color32[] kCaneColors;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected BrushDescriptor[] m_caneBrushes;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected float m_grossRotationsPerRadian;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		protected float m_fineRotationsPerRadian;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected float m_caneGrossRadiusPct;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_caneFineRadiusPct;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected float m_strandSizePercent;

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x21960A4", Offset = "0x21960A4", VA = "0x21960A4", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x2196500", Offset = "0x2196500", VA = "0x2196500")]
		public CandyCane()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class ConcaveHullBrush : GeometryBrush
	{
		[Token(Token = "0x2000199")]
		public class Vertex : IVertex
		{
			[Token(Token = "0x170001E9")]
			public double[] Position
			{
				[Token(Token = "0x6000A56")]
				[Address(RVA = "0x21997BC", Offset = "0x21997BC", VA = "0x21997BC", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000A57")]
				[Address(RVA = "0x21997C4", Offset = "0x21997C4", VA = "0x21997C4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170001EA")]
			public int TempIndex
			{
				[Token(Token = "0x6000A58")]
				[Address(RVA = "0x21997CC", Offset = "0x21997CC", VA = "0x21997CC")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000A59")]
				[Address(RVA = "0x21997D4", Offset = "0x21997D4", VA = "0x21997D4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170001EB")]
			public Vector3 TempNormal
			{
				[Token(Token = "0x6000A5A")]
				[Address(RVA = "0x21997DC", Offset = "0x21997DC", VA = "0x21997DC")]
				[CompilerGenerated]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000A5B")]
				[Address(RVA = "0x21997E8", Offset = "0x21997E8", VA = "0x21997E8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x2197C48", Offset = "0x2197C48", VA = "0x2197C48")]
			public Vertex()
			{
			}

			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x2197CC8", Offset = "0x2197CC8", VA = "0x2197CC8")]
			public void SetData(Vector3 v)
			{
			}
		}

		[Token(Token = "0x200019A")]
		public class Face : ConvexFace<Vertex, Face>
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x21997F4", Offset = "0x21997F4", VA = "0x21997F4")]
			public Face()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200019B")]
		public enum KnotConversion
		{
			[Token(Token = "0x4000933")]
			Rapidograph,
			[Token(Token = "0x4000934")]
			QuillPen,
			[Token(Token = "0x4000935")]
			Tetrahedron,
			[Token(Token = "0x4000936")]
			Octahedron,
			[Token(Token = "0x4000937")]
			Cube
		}

		[Token(Token = "0x4000925")]
		private const double kToleranceMeters_PS = 1E-06;

		[Token(Token = "0x4000926")]
		private const int kVerticesPerKnot_Rapidograph = 1;

		[Token(Token = "0x4000927")]
		private const int kVerticesPerKnot_QuillPen = 2;

		[Token(Token = "0x4000928")]
		private const int kVerticesPerKnot_Tetrahedron = 4;

		[Token(Token = "0x4000929")]
		private const int kVerticesPerKnot_Octahedron = 6;

		[Token(Token = "0x400092A")]
		private const int kVerticesPerKnot_Cube = 8;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(1f, 40f)]
		[SerializeField]
		private int m_KnotsInHull;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool m_Faceted;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private KnotConversion m_KnotConversion;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vertex> m_AllVertices;

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x21965BC", Offset = "0x21965BC", VA = "0x21965BC")]
		private static Vector3 AsVector3(double[] ds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x2196600", Offset = "0x2196600", VA = "0x2196600")]
		public ConcaveHullBrush()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x219678C", Offset = "0x219678C", VA = "0x219678C", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x21974AC", Offset = "0x21974AC", VA = "0x21974AC", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x2196C38", Offset = "0x2196C38", VA = "0x2196C38")]
		private void FixInitialKnotSize()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x2197854", Offset = "0x2197854", VA = "0x2197854", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x2197880", Offset = "0x2197880", VA = "0x2197880", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x2197AE4", Offset = "0x2197AE4", VA = "0x2197AE4", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x2197B04", Offset = "0x2197B04", VA = "0x2197B04")]
		private void ResizeVertices(int desired)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x2197CA4", Offset = "0x2197CA4", VA = "0x2197CA4")]
		private int GetNumVerticesPerKnot()
		{
			return default(int);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x2196DA4", Offset = "0x2196DA4", VA = "0x2196DA4")]
		private void CreateVerticesFromKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x21978A8", Offset = "0x21978A8", VA = "0x21978A8")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2197D14", Offset = "0x2197D14", VA = "0x2197D14")]
		private ConvexHull<Vertex, Face> CreateHull(List<Vertex> input, bool enableSimplify)
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x2197E28", Offset = "0x2197E28", VA = "0x2197E28")]
		private void CreateFacetedGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x21982A8", Offset = "0x21982A8", VA = "0x21982A8")]
		private void CreateSmoothGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x2199158", Offset = "0x2199158", VA = "0x2199158")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x21994B0", Offset = "0x21994B0", VA = "0x21994B0")]
		private void AppendTri(ref Knot k, int vp0, int vp1, int vp2)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class EnvironmentBrushScript : BaseBrushScript
	{
		[Token(Token = "0x200019D")]
		private enum UvSetCount
		{
			[Token(Token = "0x400093A")]
			One,
			[Token(Token = "0x400093B")]
			Two
		}

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UvSetCount m_UvSetCount;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x219983C", Offset = "0x219983C", VA = "0x219983C")]
		protected EnvironmentBrushScript()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x219985C", Offset = "0x219985C", VA = "0x219985C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x21998C4", Offset = "0x21998C4", VA = "0x21998C4", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x21998CC", Offset = "0x21998CC", VA = "0x21998CC", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x21998D4", Offset = "0x21998D4", VA = "0x21998D4", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x21998DC", Offset = "0x21998DC", VA = "0x21998DC", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x21998E4", Offset = "0x21998E4", VA = "0x21998E4", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x21998E8", Offset = "0x21998E8", VA = "0x21998E8", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x21998EC", Offset = "0x21998EC", VA = "0x21998EC", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x200019E")]
	internal class FlatGeometryBrush : GeometryBrush
	{
		[Token(Token = "0x200019F")]
		protected enum UVStyle
		{
			[Token(Token = "0x400094E")]
			Distance,
			[Token(Token = "0x400094F")]
			Stretch
		}

		[Token(Token = "0x400093C")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x400093D")]
		private const int kSharedVertsInSolidPair = 2;

		[Token(Token = "0x400093E")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x400093F")]
		private const int kSharedTrisInSolidPair = 0;

		[Token(Token = "0x4000940")]
		private const int kMinimumKnotsAfterBreak = 6;

		[Token(Token = "0x4000941")]
		protected const int BR = 0;

		[Token(Token = "0x4000942")]
		protected const int BL = 1;

		[Token(Token = "0x4000943")]
		protected const int FR = 2;

		[Token(Token = "0x4000944")]
		protected const int FL = 3;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<float> m_sizes;

		[Token(Token = "0x4000946")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4000947")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000948")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4000949")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x400094A")]
		private const int kSmoothingWindow = 1;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected bool m_bOffsetInTexcoord1;

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x21998F0", Offset = "0x21998F0", VA = "0x21998F0")]
		public FlatGeometryBrush()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x2199954", Offset = "0x2199954", VA = "0x2199954", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x2199ACC", Offset = "0x2199ACC", VA = "0x2199ACC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x2199B1C", Offset = "0x2199B1C", VA = "0x2199B1C", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x2199B5C", Offset = "0x2199B5C", VA = "0x2199B5C", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x219B704", Offset = "0x219B704", VA = "0x219B704")]
		private void TrimShortStrokeAfterBreak()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x219B7F4", Offset = "0x219B7F4", VA = "0x219B7F4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x219B80C", Offset = "0x219B80C", VA = "0x219B80C", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x2199CBC", Offset = "0x2199CBC", VA = "0x2199CBC")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x219A47C", Offset = "0x219A47C", VA = "0x219A47C")]
		private void OnChanged_MakeVertsAndNormals(int iKnot0)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x219B018", Offset = "0x219B018", VA = "0x219B018")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x219B25C", Offset = "0x219B25C", VA = "0x219B25C")]
		private void OnChanged_DistanceUVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x219B4E8", Offset = "0x219B4E8", VA = "0x219B4E8")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	internal class GeniusParticlesBrush : GeometryBrush
	{
		[Token(Token = "0x4000950")]
		private const float kSpawnInterval_PS = 0.024999999f;

		[Token(Token = "0x4000951")]
		private const float kSingleParticleTriggerPressure = 0.8f;

		[Token(Token = "0x4000952")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x4000953")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x4000954")]
		private const int kSaltMaxParticlesPerKnot = 16;

		[Token(Token = "0x4000955")]
		private const int kSaltMaxSaltsPerParticle = 16;

		[Token(Token = "0x4000956")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x4000957")]
		private const int kSaltAlpha = 1;

		[Token(Token = "0x4000958")]
		private const int kSaltOnSphere = 2;

		[Token(Token = "0x4000959")]
		private const int kSaltRotation = 4;

		[Token(Token = "0x400095A")]
		private const int kSaltRoll = 7;

		[Token(Token = "0x400095B")]
		private const int kSaltAtlas = 8;

		[Token(Token = "0x400095C")]
		private const int kBr = 0;

		[Token(Token = "0x400095D")]
		private const int kBl = 1;

		[Token(Token = "0x400095E")]
		private const int kFr = 2;

		[Token(Token = "0x400095F")]
		private const int kFl = 3;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector4 m_TextureAtlas00;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector4 m_TextureAtlas05;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly Vector4 m_TextureAtlas50;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly Vector4 m_TextureAtlas55;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<float> m_DecayTimers;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_DecayedKnots;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_DistancePointerTravelled;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_LastPos;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<float> m_LengthsAtKnot;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_SpawnInterval;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_ParticleSizeScale;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x219BF34", Offset = "0x219BF34", VA = "0x219BF34")]
		public GeniusParticlesBrush()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x219C0AC", Offset = "0x219C0AC", VA = "0x219C0AC")]
		protected int CalculateSalt(int knotIndex, int particleIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x219C0C0", Offset = "0x219C0C0", VA = "0x219C0C0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x219C0C8", Offset = "0x219C0C8", VA = "0x219C0C8", Slot = "23")]
		protected override float DistanceFromKnot(int knotIndex, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x219C248", Offset = "0x219C248", VA = "0x219C248", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x219C250", Offset = "0x219C250", VA = "0x219C250", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x219C37C", Offset = "0x219C37C", VA = "0x219C37C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x219C3AC", Offset = "0x219C3AC", VA = "0x219C3AC", Slot = "12")]
		public override void DecayBrush()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x219C8C4", Offset = "0x219C8C4", VA = "0x219C8C4", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x219D0C4", Offset = "0x219D0C4", VA = "0x219D0C4", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x219D134", Offset = "0x219D134", VA = "0x219D134", Slot = "22")]
		protected override void ControlPointsChanged(int firstKnotIndex)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x219E1EC", Offset = "0x219E1EC", VA = "0x219E1EC", Slot = "13")]
		public override bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x219E1F4", Offset = "0x219E1F4", VA = "0x219E1F4", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x219E454", Offset = "0x219E454", VA = "0x219E454", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x219D840", Offset = "0x219D840", VA = "0x219D840")]
		private float StrokeLengthAtKnot(int knotIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x219D490", Offset = "0x219D490", VA = "0x219D490")]
		private void InvalidateLengthsFromKnot(int knotIndex)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x219D518", Offset = "0x219D518", VA = "0x219D518")]
		private int TotalParticlesAtKnot(int knotIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x219E20C", Offset = "0x219E20C", VA = "0x219E20C")]
		private void FinalizeParticleMesh()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x219D5A8", Offset = "0x219D5A8", VA = "0x219D5A8")]
		private void SetGeometrySpaceForKnot(int knotIndex, int particleCount)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x219DA7C", Offset = "0x219DA7C", VA = "0x219DA7C")]
		private void CreateParticleGeometry(int knotIndex, int particleIndex, Vector3 pos, float size)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public abstract class GeometryBrush : BaseBrushScript
	{
		[Token(Token = "0x20001A2")]
		public struct Knot
		{
			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PointerManager.ControlPoint point;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 smoothedPos;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float smoothedPressure;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float length;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion qFrame;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 nRight;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 nSurface;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int iTri;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public ushort iVert;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
			public ushort nTri;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ushort nVert;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
			public bool startsGeometry;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
			public bool endsGeometry;

			[Token(Token = "0x170001EE")]
			public bool HasGeometry
			{
				[Token(Token = "0x6000AA9")]
				[Address(RVA = "0x219A46C", Offset = "0x219A46C", VA = "0x219A46C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001EF")]
			public Quaternion? Frame
			{
				[Token(Token = "0x6000AAA")]
				[Address(RVA = "0x219F7F4", Offset = "0x219F7F4", VA = "0x219F7F4")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float kPressureSmoothWindowMeters_PS;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_UpperBoundVertsPerKnot;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool m_bDoubleSided;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		protected readonly bool m_bSmoothPositions;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		protected bool m_bM11Compatibility;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly int m_SoftVertexLimit;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int NS;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected List<Knot> m_knots;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected GeometryPool m_geometry;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int m_CachedNumVerts;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected int m_CachedNumTris;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int? m_FirstChangedControlPoint;

		[Token(Token = "0x170001EC")]
		public int NumVerts
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x219E55C", Offset = "0x219E55C", VA = "0x219E55C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public int NumTris
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x219E5B8", Offset = "0x219E5B8", VA = "0x219E5B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x21966B0", Offset = "0x21966B0", VA = "0x21966B0")]
		public GeometryBrush(bool bCanBatch, int upperBoundVertsPerKnot, bool bDoubleSided, bool bSmoothPositions = true)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x219E614", Offset = "0x219E614", VA = "0x219E614")]
		protected void CheckKnotInvariants()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x219C5BC", Offset = "0x219C5BC", VA = "0x219C5BC")]
		protected void RemoveInitialKnots(int knotsToShift)
		{
		}

		[Token(Token = "0x6000A8E")]
		protected abstract void ControlPointsChanged(int iKnot);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x219C158", Offset = "0x219C158", VA = "0x219C158", Slot = "23")]
		protected virtual float DistanceFromKnot(int knotIndex, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x219E948", Offset = "0x219E948", VA = "0x219E948", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x219E950", Offset = "0x219E950", VA = "0x219E950", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x219E954", Offset = "0x219E954", VA = "0x219E954", Slot = "16")]
		public override bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x219E988", Offset = "0x219E988", VA = "0x219E988", Slot = "17")]
		public override bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x219E9C8", Offset = "0x219E9C8", VA = "0x219E9C8", Slot = "18")]
		public override bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x21974E4", Offset = "0x21974E4", VA = "0x21974E4", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x2199A54", Offset = "0x2199A54", VA = "0x2199A54")]
		protected void SetDoubleSided(BrushDescriptor desc)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x2196828", Offset = "0x2196828", VA = "0x2196828", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x219EBD4", Offset = "0x219EBD4", VA = "0x219EBD4", Slot = "19")]
		public override void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x2195FD8", Offset = "0x2195FD8", VA = "0x2195FD8", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x219B824", Offset = "0x219B824", VA = "0x219B824", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x219F008", Offset = "0x219F008", VA = "0x219F008", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x219F340", Offset = "0x219F340", VA = "0x219F340", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x219CA60", Offset = "0x219CA60", VA = "0x219CA60", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x219B854", Offset = "0x219B854", VA = "0x219B854")]
		protected void SetTri(int iTri, int iVert, int tp, int vp0, int vp1, int vp2)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x219B990", Offset = "0x219B990", VA = "0x219B990")]
		protected void SetVert(int iVert, int vp, Vector3 v, Vector3 n, Color32 c, float alpha)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x219BC5C", Offset = "0x219BC5C", VA = "0x219BC5C")]
		protected void SetUv0(int iVert, int vp, Vector2 data)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x219E46C", Offset = "0x219E46C", VA = "0x219E46C")]
		protected void SetUv0(int iVert, int vp, Vector4 data)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x219BB78", Offset = "0x219BB78", VA = "0x219BB78")]
		protected void SetUv1(int iVert, int vp, Vector3 data)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x219F4D8", Offset = "0x219F4D8", VA = "0x219F4D8")]
		protected void SetUv1(int iVert, int vp, Vector4 data)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x219BD28", Offset = "0x219BD28", VA = "0x219BD28")]
		protected void SetTangent(int iVert, int vp, Vector3 tangent, float w = 1f)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x219A378", Offset = "0x219A378", VA = "0x219A378")]
		protected void ResizeGeometry()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x219F5C8", Offset = "0x219F5C8", VA = "0x219F5C8")]
		protected void BruteForceRecomputeTangents(int iKnot0, List<Vector2> uvs)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x219F39C", Offset = "0x219F39C", VA = "0x219F39C")]
		protected void ApplySmoothing(Knot prev, ref Knot next)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class GeometryPool
	{
		[Serializable]
		[Token(Token = "0x20001A4")]
		public enum Semantic
		{
			[Token(Token = "0x4000994")]
			Unspecified,
			[Token(Token = "0x4000995")]
			Position,
			[Token(Token = "0x4000996")]
			Vector,
			[Token(Token = "0x4000997")]
			XyIsUvZIsDistance,
			[Token(Token = "0x4000998")]
			UnitlessVector,
			[Token(Token = "0x4000999")]
			XyIsUv,
			[Token(Token = "0x400099A")]
			Timestamp
		}

		[Token(Token = "0x20001A5")]
		public struct TexcoordInfo : IEquatable<TexcoordInfo>
		{
			[Token(Token = "0x400099B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x400099C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Semantic semantic;

			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x21A387C", Offset = "0x21A387C", VA = "0x21A387C")]
			public static bool operator ==(TexcoordInfo lhs, TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x21A38C4", Offset = "0x21A38C4", VA = "0x21A38C4")]
			public static bool operator !=(TexcoordInfo lhs, TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x21A389C", Offset = "0x21A389C", VA = "0x21A389C", Slot = "4")]
			public bool Equals(TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x21A38E4", Offset = "0x21A38E4", VA = "0x21A38E4", Slot = "0")]
			public override bool Equals(object rhso)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x21A396C", Offset = "0x21A396C", VA = "0x21A396C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001A6")]
		public struct TexcoordData
		{
			[Token(Token = "0x400099D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<Vector2> v2;

			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Vector3> v3;

			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector4> v4;

			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x21A05DC", Offset = "0x21A05DC", VA = "0x21A05DC")]
			public void SetSize(int size)
			{
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x21A108C", Offset = "0x21A108C", VA = "0x21A108C")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x20001A7")]
		public struct VertexLayout : IEquatable<VertexLayout>
		{
			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TexcoordInfo texcoord0;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TexcoordInfo texcoord1;

			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexcoordInfo texcoord2;

			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool bUseNormals;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Semantic normalSemantic;

			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool bUseColors;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool bUseTangents;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool bUseVertexIds;

			[Token(Token = "0x40009A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool bFbxExportNormalAsTexcoord1;

			[Token(Token = "0x170001F4")]
			internal int uv0Size
			{
				[Token(Token = "0x6000AE4")]
				[Address(RVA = "0x21955A4", Offset = "0x21955A4", VA = "0x21955A4")]
				set
				{
				}
			}

			[Token(Token = "0x170001F5")]
			internal int uv1Size
			{
				[Token(Token = "0x6000AE5")]
				[Address(RVA = "0x21955AC", Offset = "0x21955AC", VA = "0x21955AC")]
				set
				{
				}
			}

			[Token(Token = "0x170001F6")]
			internal Semantic uv0Semantic
			{
				[Token(Token = "0x6000AE6")]
				[Address(RVA = "0x21998B4", Offset = "0x21998B4", VA = "0x21998B4")]
				set
				{
				}
			}

			[Token(Token = "0x170001F7")]
			internal Semantic uv1Semantic
			{
				[Token(Token = "0x6000AE7")]
				[Address(RVA = "0x21998BC", Offset = "0x21998BC", VA = "0x21998BC")]
				set
				{
				}
			}

			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x21A08E0", Offset = "0x21A08E0", VA = "0x21A08E0")]
			public TexcoordInfo GetTexcoordInfo(int channel)
			{
				return default(TexcoordInfo);
			}

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x21A3978", Offset = "0x21A3978", VA = "0x21A3978")]
			public static bool operator ==(VertexLayout lhs, VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x21A2C78", Offset = "0x21A2C78", VA = "0x21A2C78")]
			public static bool operator !=(VertexLayout lhs, VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x21A39A8", Offset = "0x21A39A8", VA = "0x21A39A8", Slot = "4")]
			public bool Equals(VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x21A3A60", Offset = "0x21A3A60", VA = "0x21A3A60", Slot = "0")]
			public override bool Equals(object rhso)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x21A3AF0", Offset = "0x21A3AF0", VA = "0x21A3AF0", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001A8")]
		private class BackingFileInfo
		{
			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numVertsInFile;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numTriIndicesInFile;

			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x21A16F8", Offset = "0x21A16F8", VA = "0x21A16F8")]
			public BackingFileInfo()
			{
			}
		}

		[Token(Token = "0x4000984")]
		private const uint kMagic = 1869574215u;

		[Token(Token = "0x4000985")]
		public const int kNumTexcoords = 3;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<GeometryPool> sm_unused;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> m_Vertices;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> m_Tris;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> m_Normals;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TexcoordData m_Texcoord0;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TexcoordData m_Texcoord1;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TexcoordData m_Texcoord2;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Color32> m_Colors;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector4> m_Tangents;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VertexLayout m_Layout;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_IsResident;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh m_BackingMesh;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BackingFileInfo m_BackingFileInfo;

		[Token(Token = "0x170001F0")]
		public bool IsGeometryResident
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x21A05C0", Offset = "0x21A05C0", VA = "0x21A05C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public VertexLayout Layout
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x21A05C8", Offset = "0x21A05C8", VA = "0x21A05C8")]
			get
			{
				return default(VertexLayout);
			}
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x219551C", Offset = "0x219551C", VA = "0x219551C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public int NumVerts
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x21A0738", Offset = "0x21A0738", VA = "0x21A0738")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x2198E44", Offset = "0x2198E44", VA = "0x2198E44")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public int NumTriIndices
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x21A095C", Offset = "0x21A095C", VA = "0x21A095C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x219908C", Offset = "0x219908C", VA = "0x219908C")]
			set
			{
			}
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x219E9E8", Offset = "0x219E9E8", VA = "0x219E9E8")]
		public static GeometryPool Allocate()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x219EEB4", Offset = "0x219EEB4", VA = "0x219EEB4")]
		public static void Free(GeometryPool g)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x219FC74", Offset = "0x219FC74", VA = "0x219FC74")]
		public static GeometryPool[] FromMesh(Mesh mesh, VertexLayout?[] layouts, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
			return null;
		}

		[Token(Token = "0x6000AAE")]
		private static List<T> StealArrayForList<T>(T[] data)
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x21A0428", Offset = "0x21A0428", VA = "0x21A0428")]
		private static TexcoordData GetTexcoordDataFromMesh(Mesh mesh, int channel, int uvSize)
		{
			return default(TexcoordData);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x219E618", Offset = "0x219E618", VA = "0x219E618")]
		public void ShiftForward(int verts, int tris)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x219F86C", Offset = "0x219F86C", VA = "0x219F86C")]
		public GeometryPool()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x21A0A24", Offset = "0x21A0A24", VA = "0x21A0A24")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x21A0AFC", Offset = "0x21A0AFC", VA = "0x21A0AFC")]
		public GeometryPool Clone()
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x219F9E4", Offset = "0x219F9E4", VA = "0x219F9E4")]
		public void Reset(bool keepVertexLayout = true)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x21A1118", Offset = "0x21A1118", VA = "0x21A1118")]
		public void MakeGeometryNotResident(string backingFile)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x21A1748", Offset = "0x21A1748", VA = "0x21A1748")]
		public void MakeGeometryPermanentlyNotResident()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x21A17F8", Offset = "0x21A17F8", VA = "0x21A17F8")]
		public void MakeGeometryNotResident(Mesh mesh)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x21A1700", Offset = "0x21A1700", VA = "0x21A1700")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x21A1978", Offset = "0x21A1978", VA = "0x21A1978")]
		public Mesh GetBackingMesh()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x21A07F4", Offset = "0x21A07F4", VA = "0x21A07F4")]
		public void EnsureGeometryResident()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x21A1980", Offset = "0x21A1980", VA = "0x21A1980")]
		private void ReloadFromMesh()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x21A1C38", Offset = "0x21A1C38", VA = "0x21A1C38")]
		private void ReloadFromFile()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x21A0A28", Offset = "0x21A0A28", VA = "0x21A0A28")]
		private void ClearBackingFile()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x21A08A0", Offset = "0x21A08A0", VA = "0x21A08A0")]
		public TexcoordData GetTexcoordData(int channel)
		{
			return default(TexcoordData);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x21A18FC", Offset = "0x21A18FC", VA = "0x21A18FC")]
		private unsafe ref TexcoordData InternalGetTexcoordDataRef(int channel)
		{
			return ref *(TexcoordData*)null;
		}

		[Token(Token = "0x6000AC7")]
		private static T[] SubArray<T>(List<T> list, int start, int length)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		private static List<T> SubList<T>(List<T> list, int start, int length)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x219ED58", Offset = "0x219ED58", VA = "0x219ED58")]
		public void CopyToMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x21A23B8", Offset = "0x21A23B8", VA = "0x21A23B8")]
		public void CopyToMesh(Mesh mesh, int iVert, int nVert, int iTriIndex, int nTriIndex)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x21A2754", Offset = "0x21A2754", VA = "0x21A2754")]
		private static int GetVertexCount(Stroke stroke)
		{
			return default(int);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x21A2904", Offset = "0x21A2904", VA = "0x21A2904")]
		public bool Append(Stroke stroke, int vertexLimit = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x21A2AF4", Offset = "0x21A2AF4", VA = "0x21A2AF4")]
		public void Append(Mesh mesh, [Optional] VertexLayout? layout, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x219FED0", Offset = "0x219FED0", VA = "0x219FED0")]
		public void AppendVertexData(Mesh mesh, [Optional] VertexLayout? layout, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x21A2C30", Offset = "0x21A2C30", VA = "0x21A2C30")]
		public void Append(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x21A0BBC", Offset = "0x21A0BBC", VA = "0x21A0BBC")]
		public void Append(GeometryPool rhs, int iVert, int nVert, int iTriIndex, int nTriIndex, [Optional] TrTransform? leftTransform)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x21A2CAC", Offset = "0x21A2CAC", VA = "0x21A2CAC")]
		public void ApplyTransform(TrTransform leftTransform, int iVert, int nVert)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x21A2DDC", Offset = "0x21A2DDC", VA = "0x21A2DDC")]
		public void ApplyTransform(Matrix4x4 xf, Matrix4x4 xfBivector, float xfDist, int iVert, int nVert)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x21A30D4", Offset = "0x21A30D4", VA = "0x21A30D4")]
		private static void ApplyTransformToVector3(Matrix4x4 mat, float scale, int iVert, int iVertEnd, List<Vector3> v3List, Semantic semantic)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x21A335C", Offset = "0x21A335C", VA = "0x21A335C")]
		private static void ApplyTransformToVector4(Matrix4x4 mat, float scale, int iVert, int iVertEnd, List<Vector4> v4List, Semantic semantic)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x219F174", Offset = "0x219F174", VA = "0x219F174")]
		public bool VerifySizes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x21A3504", Offset = "0x21A3504", VA = "0x21A3504")]
		private static void WriteTexcoordData(SketchBinaryWriter writer, TexcoordData texcoordData, int texcoordSize)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x21A13F0", Offset = "0x21A13F0", VA = "0x21A13F0")]
		public void SerializeToStream(Stream stream)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x21A35F8", Offset = "0x21A35F8", VA = "0x21A35F8")]
		private static bool ReadTexcoordData(SketchBinaryReader reader, out TexcoordData texcoordData, int texcoordSize, int numVerts)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x21A1EFC", Offset = "0x21A1EFC", VA = "0x21A1EFC")]
		public bool DeserializeFromStream(Stream stream)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001AA")]
	public class HolidayTree : ParentBrush
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_trunkBrush;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_trunkColor;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected BrushDescriptor m_branchBrush;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected Color m_branchColor;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_branchRelativeSize;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected float m_branchFrequency;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected float m_branchScale;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected BrushDescriptor m_frondBrush;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected Color m_frondColor;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected float m_frondRelativeSize;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		protected float m_frondFrequency;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected float m_frondScale;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected BrushDescriptor m_decoBrush;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected float m_decoTwist;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected Vector3 m_decoOffset;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x21A3B2C", Offset = "0x21A3B2C", VA = "0x21A3B2C", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x21A4038", Offset = "0x21A4038", VA = "0x21A4038")]
		public HolidayTree()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class HullBrush : GeometryBrush
	{
		[Token(Token = "0x20001AC")]
		public class Vertex : IVertex
		{
			[Token(Token = "0x170001F8")]
			public double[] Position
			{
				[Token(Token = "0x6000B04")]
				[Address(RVA = "0x12D441C", Offset = "0x12D441C", VA = "0x12D441C", Slot = "4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000B05")]
				[Address(RVA = "0x12D4424", Offset = "0x12D4424", VA = "0x12D4424")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170001F9")]
			public bool DefinitelyInterior
			{
				[Token(Token = "0x6000B06")]
				[Address(RVA = "0x12D442C", Offset = "0x12D442C", VA = "0x12D442C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000B07")]
				[Address(RVA = "0x12D4434", Offset = "0x12D4434", VA = "0x12D4434")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170001FA")]
			public int TempIndex
			{
				[Token(Token = "0x6000B08")]
				[Address(RVA = "0x12D4440", Offset = "0x12D4440", VA = "0x12D4440")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000B09")]
				[Address(RVA = "0x12D4448", Offset = "0x12D4448", VA = "0x12D4448")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170001FB")]
			public Vector3 TempNormal
			{
				[Token(Token = "0x6000B0A")]
				[Address(RVA = "0x12D4450", Offset = "0x12D4450", VA = "0x12D4450")]
				[CompilerGenerated]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B0B")]
				[Address(RVA = "0x12D445C", Offset = "0x12D445C", VA = "0x12D445C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x12D4468", Offset = "0x12D4468", VA = "0x12D4468")]
			public Vertex()
			{
			}

			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x12D44C4", Offset = "0x12D44C4", VA = "0x12D44C4")]
			public void SetData(Vector3 v)
			{
			}
		}

		[Token(Token = "0x20001AD")]
		public class Face : ConvexFace<Vertex, Face>
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x12D4514", Offset = "0x12D4514", VA = "0x12D4514")]
			public Face()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AE")]
		public enum KnotConversion
		{
			[Token(Token = "0x40009CF")]
			Point,
			[Token(Token = "0x40009D0")]
			Tetrahedron,
			[Token(Token = "0x40009D1")]
			DirectedSphere
		}

		[Serializable]
		[Token(Token = "0x20001AF")]
		public enum SimplifyMode
		{
			[Token(Token = "0x40009D3")]
			Disabled,
			[Token(Token = "0x40009D4")]
			SimplifyAtEnd,
			[Token(Token = "0x40009D5")]
			SimplifyInteractively
		}

		[Token(Token = "0x40009BD")]
		private const double kToleranceMeters_PS = 1E-06;

		[Token(Token = "0x40009BE")]
		private const int kVerticesPerKnot_Point = 1;

		[Token(Token = "0x40009BF")]
		private const int kVerticesPerKnot_Tetrahedron = 4;

		[Token(Token = "0x40009C0")]
		private const int kDirectedSphereRingPoints = 4;

		[Token(Token = "0x40009C1")]
		private const int kDirectedSphereRings = 2;

		[Token(Token = "0x40009C2")]
		private const float kDirectedSphereRingAngleDegrees = 45f;

		[Token(Token = "0x40009C3")]
		private const int kVerticesPerKnot_DirectedSphere = 9;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_Faceted;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool m_TrackInterior;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private KnotConversion m_KnotConversion;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_Simplification_PS;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private SimplifyMode m_SimplifyMode;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vertex> m_AllVertices;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x21A404C", Offset = "0x21A404C", VA = "0x21A404C")]
		private static Vector3 AsVector3(double[] ds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x21A4090", Offset = "0x21A4090", VA = "0x21A4090")]
		public HullBrush()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x21A4140", Offset = "0x21A4140", VA = "0x21A4140", Slot = "17")]
		public override bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x21A42CC", Offset = "0x21A42CC", VA = "0x21A42CC", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x21A4968", Offset = "0x21A4968", VA = "0x21A4968", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x21A4994", Offset = "0x21A4994", VA = "0x21A4994", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x21A5478", Offset = "0x21A5478", VA = "0x21A5478", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x21A54A8", Offset = "0x21A54A8", VA = "0x21A54A8", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x21A54D4", Offset = "0x21A54D4", VA = "0x21A54D4")]
		private void ResizeVertices(int desired)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x21A49C8", Offset = "0x21A49C8", VA = "0x21A49C8")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x21A561C", Offset = "0x21A561C", VA = "0x21A561C")]
		private int GetNumVerticesPerKnot()
		{
			return default(int);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x21A436C", Offset = "0x21A436C", VA = "0x21A436C")]
		private void CreateVerticesFromKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x21A4C38", Offset = "0x21A4C38", VA = "0x21A4C38")]
		private void OnChanged_MakeGeometry(bool isEnd = false)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x21A5640", Offset = "0x21A5640", VA = "0x21A5640")]
		private ConvexHull<Vertex, Face> CreateHull(List<Vertex> input, bool enableSimplify)
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x21A6998", Offset = "0x21A6998", VA = "0x21A6998")]
		private static Color32 FlipColor(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x21A57E0", Offset = "0x21A57E0", VA = "0x21A57E0")]
		private void CreateFacetedGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x21A5C78", Offset = "0x21A5C78", VA = "0x21A5C78")]
		private void CreateSmoothGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x21A70F4", Offset = "0x21A70F4", VA = "0x21A70F4", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x21A69B4", Offset = "0x21A69B4", VA = "0x21A69B4")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x21A6DF4", Offset = "0x21A6DF4", VA = "0x21A6DF4")]
		private void AppendTri(ref Knot k, int vp0, int vp1, int vp2)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class MasterBrush : IPoolable
	{
		[Token(Token = "0x40009D9")]
		public const int kActiveStrokeQuads = 1000;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pool<MasterBrush> sm_pool;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_NumVerts;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] m_Vertices;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] m_Tris;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] m_Normals;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] m_UVs;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> m_UVWs;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color32[] m_Colors;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4[] m_Tangents;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GeometryPool.VertexLayout? m_VertexLayout;

		[Token(Token = "0x170001FC")]
		public static Pool<MasterBrush> Pool
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x12D4608", Offset = "0x12D4608", VA = "0x12D4608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public GeometryPool.VertexLayout? VertexLayout
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x12D4660", Offset = "0x12D4660", VA = "0x12D4660")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x12D4674", Offset = "0x12D4674", VA = "0x12D4674")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public int NumVerts
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x12D4748", Offset = "0x12D4748", VA = "0x12D4748")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x12D4750", Offset = "0x12D4750", VA = "0x12D4750")]
		public MasterBrush()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x12D4D34", Offset = "0x12D4D34", VA = "0x12D4D34")]
		public void Reset(int numVerts = -1)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x12D4D6C", Offset = "0x12D4D6C", VA = "0x12D4D6C", Slot = "4")]
		public void OnPoolPut()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x12D4D70", Offset = "0x12D4D70", VA = "0x12D4D70", Slot = "5")]
		public void OnPoolGet()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	internal class MidpointPlusLifetimeSprayBrush : GeometryBrush
	{
		[Token(Token = "0x40009E4")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x40009E5")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x40009E6")]
		private const int kMaxQuadsPerKnot = 500;

		[Token(Token = "0x40009E7")]
		private const int kSaltMaxQuadsPerKnot = 5;

		[Token(Token = "0x40009E8")]
		private const int kSaltMaxSaltsPerQuad = 10;

		[Token(Token = "0x40009E9")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x40009EA")]
		private const int kSaltRotation = 1;

		[Token(Token = "0x40009EB")]
		private const int kSaltPosition = 2;

		[Token(Token = "0x40009EC")]
		private const int kSaltAlpha = 5;

		[Token(Token = "0x40009ED")]
		private const int kSaltAtlas = 6;

		[Token(Token = "0x40009EE")]
		protected const int BR = 0;

		[Token(Token = "0x40009EF")]
		protected const int BL = 1;

		[Token(Token = "0x40009F0")]
		protected const int FR = 2;

		[Token(Token = "0x40009F1")]
		protected const int FL = 3;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector2 m_TextureAtlas00;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Vector2 m_TextureAtlas05;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector2 m_TextureAtlas50;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Vector2 m_TextureAtlas55;

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x12D4E30", Offset = "0x12D4E30", VA = "0x12D4E30")]
		public MidpointPlusLifetimeSprayBrush()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x12D4EAC", Offset = "0x12D4EAC", VA = "0x12D4EAC", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x12D4F3C", Offset = "0x12D4F3C", VA = "0x12D4F3C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x12D4FC0", Offset = "0x12D4FC0", VA = "0x12D4FC0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x12D4FEC", Offset = "0x12D4FEC", VA = "0x12D4FEC", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x12D5038", Offset = "0x12D5038", VA = "0x12D5038")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x12D540C", Offset = "0x12D540C", VA = "0x12D540C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x12D5B4C", Offset = "0x12D5B4C", VA = "0x12D5B4C")]
		private void OnChanged_UVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x12D5DF0", Offset = "0x12D5DF0", VA = "0x12D5DF0")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x12D5FFC", Offset = "0x12D5FFC", VA = "0x12D5FFC")]
		private int GetNumQuadsAllowed()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001B3")]
	public abstract class ParentBrush : BaseBrushScript
	{
		[Serializable]
		[Token(Token = "0x20001B4")]
		public enum AttachFrame
		{
			[Token(Token = "0x40009FB")]
			Pointer,
			[Token(Token = "0x40009FC")]
			LineTangent,
			[Token(Token = "0x40009FD")]
			RibbonTangent
		}

		[Token(Token = "0x20001B5")]
		protected class PbKnot
		{
			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrTransform m_pointer;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion? m_tangentFrame;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float m_distance;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float m_pressuredSize;

			[Token(Token = "0x170001FF")]
			public TrTransform CanvasFromTool
			{
				[Token(Token = "0x6000B38")]
				[Address(RVA = "0x12D7740", Offset = "0x12D7740", VA = "0x12D7740")]
				get
				{
					return default(TrTransform);
				}
			}

			[Token(Token = "0x17000200")]
			public TrTransform CanvasFromTangent
			{
				[Token(Token = "0x6000B39")]
				[Address(RVA = "0x12D7804", Offset = "0x12D7804", VA = "0x12D7804")]
				get
				{
					return default(TrTransform);
				}
			}

			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x12D7948", Offset = "0x12D7948", VA = "0x12D7948")]
			public TrTransform GetFrame(AttachFrame frame)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x12D6E24", Offset = "0x12D6E24", VA = "0x12D6E24")]
			public PbKnot Clone()
			{
				return null;
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x12D6FBC", Offset = "0x12D6FBC", VA = "0x12D6FBC")]
			public PbKnot()
			{
			}
		}

		[Token(Token = "0x20001B6")]
		protected abstract class PbChild
		{
			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BaseBrushScript m_brush;

			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x12D6468", Offset = "0x12D6468", VA = "0x12D6468")]
			public TrTransform CalculateChildXfFixedScale(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000B3E")]
			protected abstract TrTransform CalculateChildXf(List<PbKnot> parentKnots);

			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x12D79D4", Offset = "0x12D79D4", VA = "0x12D79D4")]
			protected PbChild()
			{
			}
		}

		[Token(Token = "0x20001B7")]
		protected class PbChildIdentityXf : PbChild
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x12D79DC", Offset = "0x12D79DC", VA = "0x12D79DC", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000B41")]
			[Address(RVA = "0x12D7A54", Offset = "0x12D7A54", VA = "0x12D7A54")]
			public PbChildIdentityXf()
			{
			}
		}

		[Token(Token = "0x20001B8")]
		protected abstract class PbChildWithKnotBasedFrame : PbChild
		{
			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int m_frameKnot;

			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly AttachFrame m_frame;

			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x12D7A5C", Offset = "0x12D7A5C", VA = "0x12D7A5C")]
			public PbChildWithKnotBasedFrame(int frameKnot, AttachFrame frame)
			{
			}

			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x12D6808", Offset = "0x12D6808", VA = "0x12D6808")]
			public PbKnot GetAttachKnot(List<PbKnot> parentKnots)
			{
				return null;
			}

			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x12D7A88", Offset = "0x12D7A88", VA = "0x12D7A88")]
			public TrTransform GetAttachTransform(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x20001B9")]
		protected class PbChildWithOffset : PbChildWithKnotBasedFrame
		{
			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrTransform m_offset;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_twist;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool m_pressureAffectsOffset;

			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x12D7ACC", Offset = "0x12D7ACC", VA = "0x12D7ACC")]
			public PbChildWithOffset(int frameKnot, AttachFrame frame, TrTransform offset, float twist, bool pressureAffectsOffset = true)
			{
			}

			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x12D7B24", Offset = "0x12D7B24", VA = "0x12D7B24", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x40009F6")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<PbKnot> m_knots;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected List<PbChild> m_children;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int m_recursionLevel;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x12D6080", Offset = "0x12D6080", VA = "0x12D6080")]
		public ParentBrush()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x12D6144", Offset = "0x12D6144", VA = "0x12D6144")]
		protected void InitializeAndAddChild(PbChild child, BrushDescriptor desc, Color color, float relativeSize = 1f)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x12D6584", Offset = "0x12D6584", VA = "0x12D6584")]
		private void MaybeCreateChildren()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x12D661C", Offset = "0x12D661C", VA = "0x12D661C")]
		protected float DistanceSinceLastKnotBasedChild()
		{
			return default(float);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x12D6880", Offset = "0x12D6880", VA = "0x12D6880")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B2B")]
		protected abstract void MaybeCreateChildrenImpl();

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x12D6A30", Offset = "0x12D6A30", VA = "0x12D6A30", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 translation, Quaternion rotation, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x12D6EA4", Offset = "0x12D6EA4", VA = "0x12D6EA4")]
		private void CommonInit(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x12D6FC4", Offset = "0x12D6FC4", VA = "0x12D6FC4", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x12D7010", Offset = "0x12D7010", VA = "0x12D7010", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x12D7230", Offset = "0x12D7230", VA = "0x12D7230", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x12D7238", Offset = "0x12D7238", VA = "0x12D7238", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x12D72AC", Offset = "0x12D72AC", VA = "0x12D72AC", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x12D740C", Offset = "0x12D740C", VA = "0x12D740C", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x12D7578", Offset = "0x12D7578", VA = "0x12D7578", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x12D7598", Offset = "0x12D7598", VA = "0x12D7598", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x12D759C", Offset = "0x12D759C", VA = "0x12D759C", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x12D7700", Offset = "0x12D7700", VA = "0x12D7700", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}
	}
	[Token(Token = "0x20001BA")]
	public class PbrBrushScript : BaseBrushScript
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x12D7D78", Offset = "0x12D7D78", VA = "0x12D7D78")]
		protected PbrBrushScript()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x12D7D84", Offset = "0x12D7D84", VA = "0x12D7D84", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x12D7DE4", Offset = "0x12D7DE4", VA = "0x12D7DE4", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x12D7DEC", Offset = "0x12D7DEC", VA = "0x12D7DEC", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x12D7DF4", Offset = "0x12D7DF4", VA = "0x12D7DF4", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x12D7DFC", Offset = "0x12D7DFC", VA = "0x12D7DFC", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x12D7E04", Offset = "0x12D7E04", VA = "0x12D7E04", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x12D7E08", Offset = "0x12D7E08", VA = "0x12D7E08", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x12D7E0C", Offset = "0x12D7E0C", VA = "0x12D7E0C", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class PlaitBrush : ParentBrush
	{
		[Token(Token = "0x20001BC")]
		protected class PbChildPlait : PbChild
		{
			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected PlaitBrush m_owner;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected int m_strand;

			[Token(Token = "0x17000204")]
			protected PlaitBrush O
			{
				[Token(Token = "0x6000B55")]
				[Address(RVA = "0x12D813C", Offset = "0x12D813C", VA = "0x12D813C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B56")]
			[Address(RVA = "0x12D805C", Offset = "0x12D805C", VA = "0x12D805C")]
			public PbChildPlait(PlaitBrush owner, int strand)
			{
			}

			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x12D8144", Offset = "0x12D8144", VA = "0x12D8144")]
			protected Vector2 SomePeriodicFunction(float t01)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x12D81BC", Offset = "0x12D81BC", VA = "0x12D81BC", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x4000A08")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_baseBrush;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(3f, 9f)]
		[SerializeField]
		protected float m_numStrands;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Range(0f, 3f)]
		[SerializeField]
		protected int m_recursionLimit;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected Color32[] m_colors;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0.25f, 4f)]
		[SerializeField]
		protected float m_childScaleFineTune;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_cyclesPerMeterAtUnitSize;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected float m_rotationsPerCycle;

		[Token(Token = "0x17000201")]
		public float CyclesPerMeter
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x12D7E10", Offset = "0x12D7E10", VA = "0x12D7E10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000202")]
		public float RotationsPerCycle
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x12D7E34", Offset = "0x12D7E34", VA = "0x12D7E34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000203")]
		public float NumStrands
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x12D7E3C", Offset = "0x12D7E3C", VA = "0x12D7E3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x12D7E44", Offset = "0x12D7E44", VA = "0x12D7E44", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x12D808C", Offset = "0x12D808C", VA = "0x12D808C")]
		public PlaitBrush()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	internal class PrintableBrush : GeometryBrush
	{
		[Token(Token = "0x4000A12")]
		protected const int BR = 0;

		[Token(Token = "0x4000A13")]
		protected const int BL = 1;

		[Token(Token = "0x4000A14")]
		protected const int BT = 2;

		[Token(Token = "0x4000A15")]
		protected const int BB = 3;

		[Token(Token = "0x4000A16")]
		protected const int FR = 4;

		[Token(Token = "0x4000A17")]
		protected const int FL = 5;

		[Token(Token = "0x4000A18")]
		protected const int FT = 6;

		[Token(Token = "0x4000A19")]
		protected const int FB = 7;

		[Token(Token = "0x4000A1A")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4000A1B")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000A1C")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4000A1D")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000A1E")]
		private const float kCrossSectionAspectRatio = 0.375f;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_UseEnvelope;

		[Token(Token = "0x4000A20")]
		private const float kInitialEnvelope = 0.8f;

		[Token(Token = "0x4000A21")]
		private const float kFinalEnvelope = 0.3f;

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x12D843C", Offset = "0x12D843C", VA = "0x12D843C")]
		public PrintableBrush()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x12D84A4", Offset = "0x12D84A4", VA = "0x12D84A4", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x12D8534", Offset = "0x12D8534", VA = "0x12D8534", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x12D8584", Offset = "0x12D8584", VA = "0x12D8584", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x12D85E0", Offset = "0x12D85E0", VA = "0x12D85E0", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x12D9448", Offset = "0x12D9448", VA = "0x12D9448")]
		private void SetKnotEnvelope(int i, float width)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x12D8D48", Offset = "0x12D8D48", VA = "0x12D8D48")]
		private void OnChanged_SetEnvelope(int iKnot0)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x12D86B4", Offset = "0x12D86B4", VA = "0x12D86B4")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x12D8F50", Offset = "0x12D8F50", VA = "0x12D8F50")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x12D95A4", Offset = "0x12D95A4", VA = "0x12D95A4")]
		private void MySetVert(int iVert, int vp, Vector3 v, Vector3 n)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public abstract class QuadStripBrush : BaseBrushScript
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float kPressureSmoothWindowMeters_PS;

		[Token(Token = "0x4000A23")]
		private const float kSolidMinLengthMeters_PS = 0.0015f;

		[Token(Token = "0x4000A24")]
		private const float kMinimumMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000A25")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected MasterBrush m_Geometry;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 m_LastFacing;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 m_LastQuadCenter;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector3 m_LastQuadForward;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected Vector3 m_LastQuadRight;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 m_LastQuadNormal;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int m_LastSegmentLengthSolids;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float m_LastSpawnPressure;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float m_LastSizeShrink;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int m_NumQuads;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int m_LeadingQuadIndex;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int m_InitialQuadIndex;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected bool m_AllowStripBreak;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int? m_LeadingSegmentInitialQuadIndex;

		[Token(Token = "0x17000205")]
		protected int Stride
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x12D96EC", Offset = "0x12D96EC", VA = "0x12D96EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x12D9704", Offset = "0x12D9704", VA = "0x12D9704")]
		public QuadStripBrush()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x12D9718", Offset = "0x12D9718", VA = "0x12D9718")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x12D97DC", Offset = "0x12D97DC", VA = "0x12D97DC", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x12D9830", Offset = "0x12D9830", VA = "0x12D9830", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x12D98D8", Offset = "0x12D98D8", VA = "0x12D98D8", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x12D98E0", Offset = "0x12D98E0", VA = "0x12D98E0", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x12D9A38", Offset = "0x12D9A38", VA = "0x12D9A38", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x12D9CA8", Offset = "0x12D9CA8", VA = "0x12D9CA8", Slot = "19")]
		public override void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x12D9D30", Offset = "0x12D9D30", VA = "0x12D9D30", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B6D")]
		private static T[] SubsetOf<T>(T[] array, int num)
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x12D9DA4", Offset = "0x12D9DA4", VA = "0x12D9DA4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x12DA180", Offset = "0x12DA180", VA = "0x12DA180", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x12DA39C", Offset = "0x12DA39C", VA = "0x12DA39C")]
		private static void WeldSingleSidedQuadStrip(GeometryPool.VertexLayout layout, MasterBrush geometry, int numVerts, out int newNumVerts, out int newNumTris)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x12DACD8", Offset = "0x12DACD8", VA = "0x12DACD8", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x12DAD34", Offset = "0x12DAD34", VA = "0x12DAD34", Slot = "18")]
		public override bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x12DAD54", Offset = "0x12DAD54", VA = "0x12DAD54")]
		private void AppendLeadingQuad(bool bGenerateNew, float opacity01, Vector3 vCenter, Vector3 vForward, Vector3 vNormal, Vector3 vRight, MasterBrush rMasterBrush, out int earliestChangedQuad)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x12DB688", Offset = "0x12DB688", VA = "0x12DB688")]
		private void PositionQuad(Vector3[] aVerts, int iVertIndex, Vector3 vCenter, Vector3 vForward, Vector3 vRight)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x12DBB38", Offset = "0x12DBB38", VA = "0x12DBB38")]
		private void MakeConsistentBacksideQuad(Vector3[] aVerts, Vector3[] aNorms, int iFrontsideVertIndex)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x12DB7C4", Offset = "0x12DB7C4", VA = "0x12DB7C4")]
		private void FuseQuads(Vector3[] aVerts, Vector3[] aNorms, int iBackQuadVertIndex, int iFrontQuadVertIndex, bool alterBackQuad)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x12DBE70", Offset = "0x12DBE70", VA = "0x12DBE70")]
		private float GetSmoothedPressure(float pressure01, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x12DBFC4", Offset = "0x12DBFC4", VA = "0x12DBFC4", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x12DC0C0", Offset = "0x12DC0C0", VA = "0x12DC0C0", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x12DCAC0", Offset = "0x12DCAC0", VA = "0x12DCAC0", Slot = "16")]
		public override bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7B")]
		protected abstract void UpdateUVsForQuad(int iQuadIndex);

		[Token(Token = "0x6000B7C")]
		protected abstract void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size);

		[Token(Token = "0x6000B7D")]
		protected abstract void UpdateUVs(int iQuad0, int iQuad1, float size);

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x12DCAE4", Offset = "0x12DCAE4", VA = "0x12DCAE4")]
		protected float SolidLength(Vector3[] aVerts, int iSolid)
		{
			return default(float);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x12DCC7C", Offset = "0x12DCC7C", VA = "0x12DCC7C")]
		protected float QuadLength(Vector3[] aVerts, int iQuad)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001BF")]
	public class QuadStripBrushDistanceUV : QuadStripBrush
	{
		[Token(Token = "0x20001C0")]
		private struct UpdateTangentRequest
		{
			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int back;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int front;

			[Token(Token = "0x17000206")]
			public bool IsValid
			{
				[Token(Token = "0x6000B8A")]
				[Address(RVA = "0x12DD2EC", Offset = "0x12DD2EC", VA = "0x12DD2EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x12DCD14", Offset = "0x12DCD14", VA = "0x12DCD14")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x12DD2FC", Offset = "0x12DD2FC", VA = "0x12DD2FC")]
			public void Set(int back_, int front_)
			{
			}
		}

		[Token(Token = "0x4000A34")]
		private const float kOpacityFadeDistanceMeters_PS = 0.025f;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UpdateTangentRequest m_UpdateTangentRequest;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x12DCCE4", Offset = "0x12DCCE4", VA = "0x12DCCE4", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x12DCD20", Offset = "0x12DCD20", VA = "0x12DCD20", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x12DCD50", Offset = "0x12DCD50", VA = "0x12DCD50", Slot = "23")]
		protected override void UpdateUVsForSegment(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x12DD1E4", Offset = "0x12DD1E4", VA = "0x12DD1E4", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x12DD18C", Offset = "0x12DD18C", VA = "0x12DD18C")]
		private void LazyUpdateTangentsForSegment(int iQuad0, int iQuad1)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x12DD1FC", Offset = "0x12DD1FC", VA = "0x12DD1FC")]
		private void FlushUpdateTangentRequest()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x12DD304", Offset = "0x12DD304", VA = "0x12DD304", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x12DD318", Offset = "0x12DD318", VA = "0x12DD318", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x12DD31C", Offset = "0x12DD31C", VA = "0x12DD31C")]
		public QuadStripBrushDistanceUV()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class QuadStripBrushStretchUV : QuadStripBrush
	{
		[Token(Token = "0x20001C2")]
		private struct UpdateUVRequest
		{
			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int back;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int front;

			[Token(Token = "0x17000207")]
			public bool IsValid
			{
				[Token(Token = "0x6000B97")]
				[Address(RVA = "0x12DD584", Offset = "0x12DD584", VA = "0x12DD584")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x12DD408", Offset = "0x12DD408", VA = "0x12DD408")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x12DDA68", Offset = "0x12DDA68", VA = "0x12DDA68")]
			public void Set(int back_, int front_)
			{
			}
		}

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool m_StoreWidthInTexcoord0Z;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] m_QuadLengths;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UpdateUVRequest m_UpdateUVRequest;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x12DD380", Offset = "0x12DD380", VA = "0x12DD380", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x12DD414", Offset = "0x12DD414", VA = "0x12DD414", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x12DD4AC", Offset = "0x12DD4AC", VA = "0x12DD4AC", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x12DD52C", Offset = "0x12DD52C", VA = "0x12DD52C", Slot = "23")]
		protected override void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x12DDA70", Offset = "0x12DDA70", VA = "0x12DDA70", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x12DD594", Offset = "0x12DD594", VA = "0x12DD594")]
		protected void FlushUpdateUVRequest()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x12DDB94", Offset = "0x12DDB94", VA = "0x12DDB94", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x12DDC20", Offset = "0x12DDC20", VA = "0x12DDC20", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x12DDC38", Offset = "0x12DDC38", VA = "0x12DDC38", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x12DDC50", Offset = "0x12DDC50", VA = "0x12DDC50")]
		public QuadStripBrushStretchUV()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class QuadStripUnitizedUVBrush : QuadStripBrush
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x12DDCB4", Offset = "0x12DDCB4", VA = "0x12DDCB4", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x12DDE70", Offset = "0x12DDE70", VA = "0x12DDE70", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x12DDE74", Offset = "0x12DDE74", VA = "0x12DDE74", Slot = "23")]
		protected override void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x12DDE78", Offset = "0x12DDE78", VA = "0x12DDE78")]
		public QuadStripUnitizedUVBrush()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	internal class SliceBrush : GeometryBrush
	{
		[Token(Token = "0x4000A3D")]
		private const float M2U = 10f;

		[Token(Token = "0x4000A3E")]
		private const float U2M = 0.1f;

		[Token(Token = "0x4000A3F")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A40")]
		private const float kMinimumMove_PS = 0.0050000004f;

		[Token(Token = "0x4000A41")]
		private const ushort kVertsInQuad = 4;

		[Token(Token = "0x4000A42")]
		private const float kSolidMinLengthMeters_PS = 0.0001f;

		[Token(Token = "0x4000A43")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x12DDEDC", Offset = "0x12DDEDC", VA = "0x12DDEDC")]
		public SliceBrush()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x12DDF44", Offset = "0x12DDF44", VA = "0x12DDF44", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x12DDFD4", Offset = "0x12DDFD4", VA = "0x12DDFD4", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x12DE024", Offset = "0x12DE024", VA = "0x12DE024", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x12DE078", Offset = "0x12DE078", VA = "0x12DE078", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x12DE8A4", Offset = "0x12DE8A4", VA = "0x12DE8A4")]
		private static Quaternion ComputeMinimalRotationFrame(Vector3 nTangent, Quaternion qPrevFrame)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x12DE148", Offset = "0x12DE148", VA = "0x12DE148")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x12DE464", Offset = "0x12DE464", VA = "0x12DE464")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x12DE9C0", Offset = "0x12DE9C0", VA = "0x12DE9C0")]
		private void MakeQuad(ref Knot k, Vector3 center, float halfSize, Vector3 up, Vector3 rt, Vector3 fwd, float w)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x12DEB84", Offset = "0x12DEB84", VA = "0x12DEB84")]
		private void AppendVert(ref Knot k, Vector3 pos, Vector3 n, Vector3 tan, float u, float v, float w)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x12DEF04", Offset = "0x12DEF04", VA = "0x12DEF04")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x12DF158", Offset = "0x12DF158", VA = "0x12DF158")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C5")]
	public class SnowflakeBrush : ParentBrush
	{
		[Token(Token = "0x20001C6")]
		protected class PbChildKnotBasedMirror : PbChildWithKnotBasedFrame
		{
			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected Plane m_plane;

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x12DF594", Offset = "0x12DF594", VA = "0x12DF594")]
			public PbChildKnotBasedMirror(int frameKnot, AttachFrame frame, Plane plane)
			{
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x12DF6A0", Offset = "0x12DF6A0", VA = "0x12DF6A0", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane kReflectionPlane;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_baseBrush;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 0.5f)]
		[SerializeField]
		protected float m_saturationDelta;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Range(0f, 1f)]
		[SerializeField]
		protected float m_hueDeltaPct;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Range(1f, 50f)]
		protected int m_numRotations;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x12DF220", Offset = "0x12DF220", VA = "0x12DF220", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x12DF5E8", Offset = "0x12DF5E8", VA = "0x12DF5E8")]
		public SnowflakeBrush()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	internal class SprayBrush : GeometryBrush
	{
		[Token(Token = "0x4000A4A")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x4000A4B")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x4000A4C")]
		private const int kMaxQuadsPerKnot = 500;

		[Token(Token = "0x4000A4D")]
		private const int kSaltMaxQuadsPerKnot = 12;

		[Token(Token = "0x4000A4E")]
		private const int kSaltMaxSaltsPerQuad = 10;

		[Token(Token = "0x4000A4F")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x4000A50")]
		private const int kSaltRotation = 1;

		[Token(Token = "0x4000A51")]
		private const int kSaltPosition = 2;

		[Token(Token = "0x4000A52")]
		private const int kSaltAlpha = 5;

		[Token(Token = "0x4000A53")]
		private const int kSaltAtlas = 6;

		[Token(Token = "0x4000A54")]
		protected const int BR = 0;

		[Token(Token = "0x4000A55")]
		protected const int BL = 1;

		[Token(Token = "0x4000A56")]
		protected const int FR = 2;

		[Token(Token = "0x4000A57")]
		protected const int FL = 3;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector2 m_TextureAtlas00;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Vector2 m_TextureAtlas05;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector2 m_TextureAtlas50;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Vector2 m_TextureAtlas55;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<float> m_DecayTimers;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_DecayedKnots;

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x12DF800", Offset = "0x12DF800", VA = "0x12DF800")]
		public SprayBrush()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x12DF8CC", Offset = "0x12DF8CC", VA = "0x12DF8CC")]
		protected int CalculateSalt(int knotIndex, int quadIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x12DF904", Offset = "0x12DF904", VA = "0x12DF904", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x12DF930", Offset = "0x12DF930", VA = "0x12DF930", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x12DF938", Offset = "0x12DF938", VA = "0x12DF938", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x12DFA20", Offset = "0x12DFA20", VA = "0x12DFA20", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x12DFA94", Offset = "0x12DFA94", VA = "0x12DFA94", Slot = "12")]
		public override void DecayBrush()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x12DFBD4", Offset = "0x12DFBD4", VA = "0x12DFBD4", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x12DFC48", Offset = "0x12DFC48", VA = "0x12DFC48", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x12DFD6C", Offset = "0x12DFD6C", VA = "0x12DFD6C", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x12E0C84", Offset = "0x12E0C84", VA = "0x12E0C84", Slot = "13")]
		public override bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x12DFDB8", Offset = "0x12DFDB8", VA = "0x12DFDB8")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x12E018C", Offset = "0x12E018C", VA = "0x12E018C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x12E07AC", Offset = "0x12E07AC", VA = "0x12E07AC")]
		private void OnChanged_UVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x12E0A78", Offset = "0x12E0A78", VA = "0x12E0A78")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x12E0C8C", Offset = "0x12E0C8C", VA = "0x12E0C8C")]
		private int GetNumQuadsAllowed()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001C8")]
	internal class Square3DPrintBrush : GeometryBrush
	{
		[Token(Token = "0x20001C9")]
		private class GeometryBasis
		{
			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector3 nStrokeTangent;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly bool strokeInlineWithPlaneNormal;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Vector3 nCrossSectionNormal;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public readonly Vector3 nCrossSectionTangentWidth;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public readonly Vector3 nCrossSectionTangentThickness;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public readonly Vector3 widthVectorToEdge;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly Vector3 thicknessVectorToEdge;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public readonly Vector3 widthVectorToBevel;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public readonly Vector3 thicknessVectorToBevel;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public readonly Vector3 capNormalOffset;

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x12E1AD4", Offset = "0x12E1AD4", VA = "0x12E1AD4")]
			public GeometryBasis(Knot knot, Square3DPrintBrush brushInfo, [Optional] Vector3? manuallySetStrokeTangent)
			{
			}
		}

		[Token(Token = "0x4000A5E")]
		private const float kRingDenseDistanceMeters_LS = 0.005f;

		[Token(Token = "0x4000A5F")]
		private const float kRingSparseDistanceMeters_LS = 0.1f;

		[Token(Token = "0x4000A60")]
		private const float kMaxCapForwardRatio = 0.01f;

		[Token(Token = "0x4000A61")]
		private const float kMinDistKnotsMeters_LS = 0.003f;

		[Token(Token = "0x4000A62")]
		private const float kSwingBreakValue = 0.94f;

		[Token(Token = "0x4000A63")]
		private const float kTwistBreakValue = 0.94f;

		[Token(Token = "0x4000A64")]
		private const float kIndicatorPlaneBreakValue = 0.0087f;

		[Token(Token = "0x4000A65")]
		private const int kNumCapVerts = 4;

		[Token(Token = "0x4000A66")]
		private const int kMaxBevelVerts = 10;

		[Token(Token = "0x4000A67")]
		private const float kDefaultThickness = 0.2f;

		[Token(Token = "0x4000A68")]
		private const float kDefaultBevelSize = 0.01f;

		[Token(Token = "0x4000A69")]
		private const int kDefaultBevelVerts = 2;

		[Token(Token = "0x4000A6A")]
		private const float kDefaultTesselation = 1f;

		[Token(Token = "0x4000A6B")]
		private const byte kDefaultTransparency = byte.MaxValue;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_bevelRatio;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Range(1f, 10f)]
		private int m_bevelVerts;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_tessellation;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 255f)]
		private byte m_transparency;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool m_debugShowSurfaceOrientation;

		[Token(Token = "0x17000208")]
		private int m_vertsPerRing
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x12E0DAC", Offset = "0x12E0DAC", VA = "0x12E0DAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x12E0D10", Offset = "0x12E0D10", VA = "0x12E0D10")]
		public Square3DPrintBrush()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x12E0D18", Offset = "0x12E0D18", VA = "0x12E0D18")]
		public Square3DPrintBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x12E0DB8", Offset = "0x12E0DB8", VA = "0x12E0DB8", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x12E0EBC", Offset = "0x12E0EBC", VA = "0x12E0EBC", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x12E0F9C", Offset = "0x12E0F9C", VA = "0x12E0F9C")]
		private bool OnChanged_FrameKnots(int iKnot0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x12E1644", Offset = "0x12E1644", VA = "0x12E1644")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x12E20E0", Offset = "0x12E20E0", VA = "0x12E20E0")]
		private void AddStartCapVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x12E27DC", Offset = "0x12E27DC", VA = "0x12E27DC")]
		private void AddEndCapVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x12E2288", Offset = "0x12E2288", VA = "0x12E2288")]
		private void AddRingVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x12E2C38", Offset = "0x12E2C38", VA = "0x12E2C38")]
		private void AddBevelVerts(ref Knot cur, Vector3 pos, float startAngle, float stopAngle, GeometryBasis gb, Color32 c)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x12E2234", Offset = "0x12E2234", VA = "0x12E2234")]
		private void AddStartCapTris(ref Knot cur, int cap)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x12E2930", Offset = "0x12E2930", VA = "0x12E2930")]
		private void AddEndCapTris(ref Knot cur, int cap)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x12E2980", Offset = "0x12E2980", VA = "0x12E2980")]
		private void AddRingFaceTris(ref Knot cur, int ring, bool cw)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x12E2738", Offset = "0x12E2738", VA = "0x12E2738")]
		private void AddMiddleRingTris(ref Knot cur, int ring)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x12E3298", Offset = "0x12E3298", VA = "0x12E3298")]
		private void AddMiddleRingTrisAcrossFlip(ref Knot cur, int ring)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x12E261C", Offset = "0x12E261C", VA = "0x12E261C")]
		private void AddCapToRingTris(ref Knot cur, int ring, int cap)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x12E324C", Offset = "0x12E324C", VA = "0x12E324C")]
		private void AppendQuad(ref Knot cur, int v0, int v1, int v2, int v3)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x12E3368", Offset = "0x12E3368", VA = "0x12E3368")]
		private void AppendFan(ref Knot cur, int pivot, int start, int end)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x12E2F60", Offset = "0x12E2F60", VA = "0x12E2F60")]
		private static Vector3 EllipseOffset(Vector3 rt, float halfRt, Vector3 up, float halfUp, float theta)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x12E3420", Offset = "0x12E3420", VA = "0x12E3420", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x12E2A30", Offset = "0x12E2A30", VA = "0x12E2A30")]
		private void AppendVertSquare(ref Knot k, Vector3 v, Color32 c)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x12E347C", Offset = "0x12E347C", VA = "0x12E347C", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x12E2FF8", Offset = "0x12E2FF8", VA = "0x12E2FF8")]
		protected void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x12E1E24", Offset = "0x12E1E24", VA = "0x12E1E24")]
		protected bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x12E1EEC", Offset = "0x12E1EEC", VA = "0x12E1EEC")]
		private bool AlignmentParityReverses(ref Knot cur, ref Knot prev)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001CA")]
	internal class SquareBrush : GeometryBrush
	{
		[Token(Token = "0x4000A7B")]
		protected const int BBR_B = 0;

		[Token(Token = "0x4000A7C")]
		protected const int BBR_R = 1;

		[Token(Token = "0x4000A7D")]
		protected const int BTL_T = 2;

		[Token(Token = "0x4000A7E")]
		protected const int BTL_L = 3;

		[Token(Token = "0x4000A7F")]
		protected const int BTR_T = 4;

		[Token(Token = "0x4000A80")]
		protected const int BTR_R = 5;

		[Token(Token = "0x4000A81")]
		protected const int BBL_B = 6;

		[Token(Token = "0x4000A82")]
		protected const int BBL_L = 7;

		[Token(Token = "0x4000A83")]
		protected const int FBR_B = 8;

		[Token(Token = "0x4000A84")]
		protected const int FBR_R = 9;

		[Token(Token = "0x4000A85")]
		protected const int FTL_T = 10;

		[Token(Token = "0x4000A86")]
		protected const int FTL_L = 11;

		[Token(Token = "0x4000A87")]
		protected const int FTR_T = 12;

		[Token(Token = "0x4000A88")]
		protected const int FTR_R = 13;

		[Token(Token = "0x4000A89")]
		protected const int FBL_B = 14;

		[Token(Token = "0x4000A8A")]
		protected const int FBL_L = 15;

		[Token(Token = "0x4000A8B")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4000A8C")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000A8D")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4000A8E")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000A8F")]
		private const float kCrossSectionAspectRatio = 0.375f;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x12E351C", Offset = "0x12E351C", VA = "0x12E351C")]
		public SquareBrush()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x12E3584", Offset = "0x12E3584", VA = "0x12E3584", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x12E3614", Offset = "0x12E3614", VA = "0x12E3614", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x12E3664", Offset = "0x12E3664", VA = "0x12E3664", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x12E36C0", Offset = "0x12E36C0", VA = "0x12E36C0", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x12E378C", Offset = "0x12E378C", VA = "0x12E378C")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x12E3E24", Offset = "0x12E3E24", VA = "0x12E3E24")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x12E4554", Offset = "0x12E4554", VA = "0x12E4554")]
		private void MySetVert(int iVert, int vp, Vector3 v, Vector3 n)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	internal class TetraBrush : GeometryBrush
	{
		[Token(Token = "0x20001CC")]
		protected enum UVStyle
		{
			[Token(Token = "0x4000A9E")]
			Distance,
			[Token(Token = "0x4000A9F")]
			Unitized
		}

		[Token(Token = "0x4000A90")]
		private const float M2U = 10f;

		[Token(Token = "0x4000A91")]
		private const float U2M = 0.1f;

		[Token(Token = "0x4000A92")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A93")]
		private const float kMinimumMove = 0.0050000004f;

		[Token(Token = "0x4000A94")]
		private const float kCapAspect = 0.8f;

		[Token(Token = "0x4000A95")]
		private const ushort kVertsInClosedCircle = 4;

		[Token(Token = "0x4000A96")]
		private const ushort kVertsInCap = 3;

		[Token(Token = "0x4000A97")]
		private const float kBreakAngleScalar = 3f;

		[Token(Token = "0x4000A98")]
		private const float kSolidMinLengthMeters = 0.002f;

		[Token(Token = "0x4000A99")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_BreakAngleMultiplier;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_TextureEdgeChop;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x12E469C", Offset = "0x12E469C", VA = "0x12E469C")]
		public TetraBrush()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x12E46A4", Offset = "0x12E46A4", VA = "0x12E46A4")]
		public TetraBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x12E4720", Offset = "0x12E4720", VA = "0x12E4720", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x12E47B0", Offset = "0x12E47B0", VA = "0x12E47B0", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x12E4814", Offset = "0x12E4814", VA = "0x12E4814", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x12E4840", Offset = "0x12E4840", VA = "0x12E4840", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x12E5264", Offset = "0x12E5264", VA = "0x12E5264")]
		private static Quaternion ComputeMinimalRotationFrame(Vector3 nTangent, Quaternion qPrevFrame)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x12E4910", Offset = "0x12E4910", VA = "0x12E4910")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x12E4DA4", Offset = "0x12E4DA4", VA = "0x12E4DA4")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x12E5D04", Offset = "0x12E5D04", VA = "0x12E5D04")]
		private void MakeCapVerts(ref Knot k, int num, Vector3 tip, Vector3 circleCenter, float radius, float u0, float v0, float v1, float uRate, Vector3 up, Vector3 rt, Vector3 fwd)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x12E5380", Offset = "0x12E5380", VA = "0x12E5380")]
		private void MakeClosedCircle(ref Knot k, Vector3 center, float radius, int num, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x12E5628", Offset = "0x12E5628", VA = "0x12E5628")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n, Color32 c, Vector3 tan, Vector2 uv)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x12E5AB0", Offset = "0x12E5AB0", VA = "0x12E5AB0")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x12E5F74", Offset = "0x12E5F74", VA = "0x12E5F74")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001CD")]
	internal class ThickGeometryBrush : GeometryBrush
	{
		[Token(Token = "0x20001CE")]
		protected enum UVStyle
		{
			[Token(Token = "0x4000AB7")]
			Distance,
			[Token(Token = "0x4000AB8")]
			Stretch
		}

		[Token(Token = "0x4000AA0")]
		private const int kVertsInSolid = 12;

		[Token(Token = "0x4000AA1")]
		private const int kSharedVertsInSolidPair = 6;

		[Token(Token = "0x4000AA2")]
		private const int kTrisInSolid = 8;

		[Token(Token = "0x4000AA3")]
		private const int kSharedTrisInSolidPair = 0;

		[Token(Token = "0x4000AA4")]
		protected const int BRT = 0;

		[Token(Token = "0x4000AA5")]
		protected const int BRB = 1;

		[Token(Token = "0x4000AA6")]
		protected const int BMT = 2;

		[Token(Token = "0x4000AA7")]
		protected const int BMB = 3;

		[Token(Token = "0x4000AA8")]
		protected const int BLT = 4;

		[Token(Token = "0x4000AA9")]
		protected const int BLB = 5;

		[Token(Token = "0x4000AAA")]
		protected const int FRT = 6;

		[Token(Token = "0x4000AAB")]
		protected const int FRB = 7;

		[Token(Token = "0x4000AAC")]
		protected const int FMT = 8;

		[Token(Token = "0x4000AAD")]
		protected const int FMB = 9;

		[Token(Token = "0x4000AAE")]
		protected const int FLT = 10;

		[Token(Token = "0x4000AAF")]
		protected const int FLB = 11;

		[Token(Token = "0x4000AB0")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4000AB1")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000AB2")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4000AB3")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_TextureEdgeChop;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x123E2D0", Offset = "0x123E2D0", VA = "0x123E2D0")]
		public ThickGeometryBrush()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x123E344", Offset = "0x123E344", VA = "0x123E344", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x123E3D4", Offset = "0x123E3D4", VA = "0x123E3D4", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x123E438", Offset = "0x123E438", VA = "0x123E438", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x123E48C", Offset = "0x123E48C", VA = "0x123E48C", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x123E5BC", Offset = "0x123E5BC", VA = "0x123E5BC")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x123EAEC", Offset = "0x123EAEC", VA = "0x123EAEC")]
		private void OnChanged_MakeVertsAndNormals(int iKnot0)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x123FCF8", Offset = "0x123FCF8", VA = "0x123FCF8")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x123F254", Offset = "0x123F254", VA = "0x123F254")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x123F608", Offset = "0x123F608", VA = "0x123F608")]
		private void OnChanged_DistanceUVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x123FA08", Offset = "0x123FA08", VA = "0x123FA08")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}
	}
	[Token(Token = "0x20001CF")]
	internal class TubeBrush : GeometryBrush
	{
		[Token(Token = "0x20001D0")]
		protected enum UVStyle
		{
			[Token(Token = "0x4000ACC")]
			Distance,
			[Token(Token = "0x4000ACD")]
			Stretch
		}

		[Token(Token = "0x20001D1")]
		protected enum ShapeModifier
		{
			[Token(Token = "0x4000ACF")]
			None,
			[Token(Token = "0x4000AD0")]
			DoubleSidedTaper,
			[Token(Token = "0x4000AD1")]
			Sin,
			[Token(Token = "0x4000AD2")]
			Comet,
			[Token(Token = "0x4000AD3")]
			Taper,
			[Token(Token = "0x4000AD4")]
			Petal
		}

		[Token(Token = "0x20001D2")]
		internal class LoftedProfile
		{
			[Token(Token = "0x4000AD5")]
			private const int kNumEndKnots = 5;

			[Token(Token = "0x4000AD6")]
			private const int kMinKnotCount = 3;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float partialProgress;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int knotCount;

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x1241F40", Offset = "0x1241F40", VA = "0x1241F40")]
			public LoftedProfile(GeometryBrush brush, int firstKnotIndex, int lastKnotIndex, float totalLength, float lastLength, List<Knot> knots)
			{
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x124201C", Offset = "0x124201C", VA = "0x124201C")]
			public float ComputeCurve(int iKnot, int firstKnotIndex, int lastKnotIndex, float t, float tPrev)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000AB9")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4000ABA")]
		private const float kMinimumMoveMeters_PS = 0.0005f;

		[Token(Token = "0x4000ABB")]
		private const ushort kUpperBoundVertsPerKnot = 12;

		[Token(Token = "0x4000ABC")]
		private const float kBreakAngleScalar = 3f;

		[Token(Token = "0x4000ABD")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_CapAspect;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private ushort m_PointsInClosedCircle;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[SerializeField]
		private bool m_EndCaps;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		[SerializeField]
		private bool m_HardEdges;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected ShapeModifier m_ShapeModifier;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_TaperScalar;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_PetalDisplacementAmt;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_PetalDisplacementExp;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_BreakAngleMultiplier;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_VertsInClosedCircle;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_VertsInCap;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Vector3> m_Displacements;

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x123FDC0", Offset = "0x123FDC0", VA = "0x123FDC0")]
		public TubeBrush()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x123FDC8", Offset = "0x123FDC8", VA = "0x123FDC8")]
		public TubeBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x123FE64", Offset = "0x123FE64", VA = "0x123FE64", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x123FF8C", Offset = "0x123FF8C", VA = "0x123FF8C", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform unused)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x123FFFC", Offset = "0x123FFFC", VA = "0x123FFFC", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1240068", Offset = "0x1240068", VA = "0x1240068", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1240174", Offset = "0x1240174", VA = "0x1240174")]
		private bool OnChanged_FrameKnots(int iKnot0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x12405C4", Offset = "0x12405C4", VA = "0x12405C4")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1240F58", Offset = "0x1240F58", VA = "0x1240F58")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x12417EC", Offset = "0x12417EC", VA = "0x12417EC")]
		private int ModifyStretchUVsOfSegment(int initialSegmentKnot)
		{
			return default(int);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1241034", Offset = "0x1241034", VA = "0x1241034")]
		private void OnChanged_ModifySilhouette(int iChangedKnot)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1241A20", Offset = "0x1241A20", VA = "0x1241A20")]
		private int ModifySilhouetteOfSegment(int initialSegmentKnot)
		{
			return default(int);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x12411D8", Offset = "0x12411D8", VA = "0x12411D8")]
		private void MakeCapVerts(ref Knot k, int numPoints, Vector3 tip, Vector3 circleCenter, float radius, float u0, float v0, float v1, float uRate, Vector3 up, Vector3 rt, Vector3 fwd)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x124153C", Offset = "0x124153C", VA = "0x124153C")]
		private void MakeClosedCircle(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1242C64", Offset = "0x1242C64", VA = "0x1242C64")]
		private void MakeClosedCircleSoftEdges(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x12428E0", Offset = "0x12428E0", VA = "0x12428E0")]
		private void MakeClosedCircleHardEdges(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1242EDC", Offset = "0x1242EDC", VA = "0x1242EDC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x12427A0", Offset = "0x12427A0", VA = "0x12427A0")]
		private void AppendDisplacement(ref Knot k, Vector3 v)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1242258", Offset = "0x1242258", VA = "0x1242258")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n, Color32 c, Vector3 tan, Vector2 uv, float radius)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1241598", Offset = "0x1241598", VA = "0x1241598")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1241110", Offset = "0x1241110", VA = "0x1241110")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D3")]
	public class BuildVersionScript : MonoBehaviour
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1242F7C", Offset = "0x1242F7C", VA = "0x1242F7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x124308C", Offset = "0x124308C", VA = "0x124308C")]
		public BuildVersionScript()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class CameraConfig : MonoBehaviour
	{
		[Token(Token = "0x4000AD9")]
		private const string CAMERA_FOV = "Camera_Fov";

		[Token(Token = "0x4000ADA")]
		private const string CAMERA_SMOOTHING = "Camera_Smoothing";

		[Token(Token = "0x4000ADB")]
		private const string POST_EFFECTS = "Camera_PostEffects";

		[Token(Token = "0x4000ADC")]
		private const string WATERMARK = "Camera_Watermark";

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float m_Fov;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float m_Smoothing;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool m_PostEffects;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private static bool m_Watermark;

		[Token(Token = "0x4000AE4")]
		public const float kFovDefault = 80f;

		[Token(Token = "0x4000AE5")]
		public const float kFovMin = 10f;

		[Token(Token = "0x4000AE6")]
		public const float kFovMax = 140f;

		[Token(Token = "0x4000AE7")]
		public const float kSmoothingDefault = 0.98f;

		[Token(Token = "0x4000AE8")]
		public const float kSmoothingMin = 0.8f;

		[Token(Token = "0x4000AE9")]
		public const float kSmoothingMax = 1f;

		[Token(Token = "0x17000209")]
		public static float Fov
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x12435A0", Offset = "0x12435A0", VA = "0x12435A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020A")]
		public static float Fov01
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x12435E8", Offset = "0x12435E8", VA = "0x12435E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x1243658", Offset = "0x1243658", VA = "0x1243658")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public static float Smoothing
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x124371C", Offset = "0x124371C", VA = "0x124371C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020C")]
		public static float Smoothing01
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x1243764", Offset = "0x1243764", VA = "0x1243764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x12437D8", Offset = "0x12437D8", VA = "0x12437D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public static bool PostEffects
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x124387C", Offset = "0x124387C", VA = "0x124387C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x12438C4", Offset = "0x12438C4", VA = "0x12438C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public static bool Watermark
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x1243968", Offset = "0x1243968", VA = "0x1243968")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x12439B0", Offset = "0x12439B0", VA = "0x12439B0")]
			set
			{
			}
		}

		[Token(Token = "0x14000007")]
		public static event Action FovChanged
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x1243094", Offset = "0x1243094", VA = "0x1243094")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x124314C", Offset = "0x124314C", VA = "0x124314C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public static event Action PostEffectsChanged
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x1243204", Offset = "0x1243204", VA = "0x1243204")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x12432C0", Offset = "0x12432C0", VA = "0x12432C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public static event Action WatermarkChanged
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x124337C", Offset = "0x124337C", VA = "0x124337C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x1243438", Offset = "0x1243438", VA = "0x1243438")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x12434F4", Offset = "0x12434F4", VA = "0x12434F4")]
		public static void DeletePrefs()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1243A54", Offset = "0x1243A54", VA = "0x1243A54")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1243C7C", Offset = "0x1243C7C", VA = "0x1243C7C")]
		public CameraConfig()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class KnotDescriptor
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CameraPathKnot knot;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int control;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int? positionKnotIndex;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PathT? pathT;

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1243C84", Offset = "0x1243C84", VA = "0x1243C84")]
		public void Set(KnotDescriptor k)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1243CB0", Offset = "0x1243CB0", VA = "0x1243CB0")]
		public void Set(CameraPathKnot _k, int _c, int? _ki, PathT? _t)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1243CC4", Offset = "0x1243CC4", VA = "0x1243CC4")]
		public KnotDescriptor()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public struct PathT : IEquatable<PathT>
	{
		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float t;

		[Token(Token = "0x1700020F")]
		public float T
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x1243CEC", Offset = "0x1243CEC", VA = "0x1243CEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1243CCC", Offset = "0x1243CCC", VA = "0x1243CCC")]
		public static int Cmp(PathT lhs, PathT rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1243CF4", Offset = "0x1243CF4", VA = "0x1243CF4")]
		public PathT(float _t)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1243CFC", Offset = "0x1243CFC", VA = "0x1243CFC")]
		public PathT(PathT pt)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1243D04", Offset = "0x1243D04", VA = "0x1243D04")]
		public void Zero()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1243D0C", Offset = "0x1243D0C", VA = "0x1243D0C")]
		public void Clamp(int positionCount)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1243D44", Offset = "0x1243D44", VA = "0x1243D44")]
		public int Floor()
		{
			return default(int);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1243DB0", Offset = "0x1243DB0", VA = "0x1243DB0")]
		public static bool operator <(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1243DD4", Offset = "0x1243DD4", VA = "0x1243DD4")]
		public static bool operator >(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1243DFC", Offset = "0x1243DFC", VA = "0x1243DFC")]
		public static bool operator <=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1243E24", Offset = "0x1243E24", VA = "0x1243E24")]
		public static bool operator >=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1243E4C", Offset = "0x1243E4C", VA = "0x1243E4C")]
		public static bool operator ==(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1243E74", Offset = "0x1243E74", VA = "0x1243E74")]
		public static bool operator !=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1243E9C", Offset = "0x1243E9C", VA = "0x1243E9C", Slot = "4")]
		public bool Equals(PathT other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1243EC4", Offset = "0x1243EC4", VA = "0x1243EC4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1243F54", Offset = "0x1243F54", VA = "0x1243F54", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001D7")]
	public class KnotSegmentStep
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 start_RS;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 end_RS;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length_CS;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1243F5C", Offset = "0x1243F5C", VA = "0x1243F5C")]
		public float RefreshLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x124404C", Offset = "0x124404C", VA = "0x124404C")]
		public KnotSegmentStep()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class KnotSegment
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineRenderer renderer;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds extents;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KnotSegmentStep[] steps;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1244054", Offset = "0x1244054", VA = "0x1244054")]
		public KnotSegment()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class CameraPath
	{
		[Token(Token = "0x20001DA")]
		public enum EndType
		{
			[Token(Token = "0x4000B09")]
			None,
			[Token(Token = "0x4000B0A")]
			Head,
			[Token(Token = "0x4000B0B")]
			Tail
		}

		[Token(Token = "0x20001DB")]
		[CompilerGenerated]
		private sealed class <DelayRefresh>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraPath <>4__this;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C7A")]
				[Address(RVA = "0x124BFBC", Offset = "0x124BFBC", VA = "0x124BFBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C7C")]
				[Address(RVA = "0x124C004", Offset = "0x124C004", VA = "0x124C004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x1247E20", Offset = "0x1247E20", VA = "0x1247E20")]
			[DebuggerHidden]
			public <DelayRefresh>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x124BDE4", Offset = "0x124BDE4", VA = "0x124BDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x124BDE8", Offset = "0x124BDE8", VA = "0x124BDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x124BFC4", Offset = "0x124BFC4", VA = "0x124BFC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF6")]
		private const int kNumSegmentPoints = 30;

		[Token(Token = "0x4000AF7")]
		private const float kEpsilon = 0.0001f;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CameraPathKnot> AllKnots;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CameraPathPositionKnot> PositionKnots;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CameraPathRotationKnot> RotationKnots;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CameraPathSpeedKnot> SpeedKnots;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CameraPathFovKnot> FovKnots;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<KnotSegment> Segments;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_Widget;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_SegmentRadius;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SegmentStepInterval;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_EndRadius;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_DefaultSpeed;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_DefaultFov;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_PathLoops;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private KnotDescriptor m_LastPlacedKnotInfo;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_GizmoBasePos;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_GizmoProjectedPosition;

		[Token(Token = "0x17000210")]
		public bool PathLoops
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x124405C", Offset = "0x124405C", VA = "0x124405C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x1244064", Offset = "0x1244064", VA = "0x1244064")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public int NumPositionKnots
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x1244180", Offset = "0x1244180", VA = "0x1244180")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000212")]
		public KnotDescriptor LastPlacedKnotInfo
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x124420C", Offset = "0x124420C", VA = "0x124420C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1244214", Offset = "0x1244214", VA = "0x1244214")]
		public CameraPath(Transform widget, float segmentRad, float endRad, float speed, float fov)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1244460", Offset = "0x1244460", VA = "0x1244460")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1244754", Offset = "0x1244754", VA = "0x1244754")]
		public void SetKnotsActive(bool active)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1244DCC", Offset = "0x1244DCC", VA = "0x1244DCC")]
		public bool IsPositionNearHead(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1244EE4", Offset = "0x1244EE4", VA = "0x1244EE4")]
		public bool ShouldPathLoop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1244BCC", Offset = "0x1244BCC", VA = "0x1244BCC")]
		public void ValidatePathLooping()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1244F84", Offset = "0x1244F84", VA = "0x1244F84")]
		public static KnotSegment CreateSegment(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1245200", Offset = "0x1245200", VA = "0x1245200")]
		public CameraPathSpeedKnot CreateSpeedKnot(PathT pathT)
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x124558C", Offset = "0x124558C", VA = "0x124558C")]
		public void AddSpeedKnot(CameraPathSpeedKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x12459C8", Offset = "0x12459C8", VA = "0x12459C8")]
		public CameraPathFovKnot CreateFovKnot(PathT pathT)
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1245B20", Offset = "0x1245B20", VA = "0x1245B20")]
		public void AddFovKnot(CameraPathFovKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1245D70", Offset = "0x1245D70", VA = "0x1245D70")]
		public CameraPathRotationKnot CreateRotationKnot(PathT pathT, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1245EA8", Offset = "0x1245EA8", VA = "0x1245EA8")]
		public void AddRotationKnot(CameraPathRotationKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x12460EC", Offset = "0x12460EC", VA = "0x12460EC")]
		public void RefreshRotationKnotPolarities()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x124626C", Offset = "0x124626C", VA = "0x124626C")]
		public CameraPathPositionKnot CreatePositionKnot(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x12463B0", Offset = "0x12463B0", VA = "0x12463B0")]
		public void InsertPositionKnot(CameraPathPositionKnot knot, int index)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x12468E0", Offset = "0x12468E0", VA = "0x12468E0")]
		public void SortKnotList(CameraPathKnot.Type type)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1246AEC", Offset = "0x1246AEC", VA = "0x1246AEC")]
		private static int CompareKnotsByPathT(CameraPathKnot a, CameraPathKnot b)
		{
			return default(int);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1246598", Offset = "0x1246598", VA = "0x1246598")]
		private void RefreshPathAfterPositionKnotAdded(int insertIndex)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1246E2C", Offset = "0x1246E2C", VA = "0x1246E2C")]
		public CameraPathKnot GetKnotAtPosition(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x12470B8", Offset = "0x12470B8", VA = "0x12470B8")]
		public void RemoveKnot(CameraPathKnot knot)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x12477EC", Offset = "0x12477EC", VA = "0x12477EC")]
		public List<CameraPathKnot> GetKnotsOrphanedByKnotRemoval(CameraPathKnot knot)
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1247470", Offset = "0x1247470", VA = "0x1247470")]
		private void RefreshPathAfterPositionRemoval(int removalIndex)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1247DB8", Offset = "0x1247DB8", VA = "0x1247DB8")]
		[IteratorStateMachine(typeof(<DelayRefresh>d__49))]
		public IEnumerator DelayRefresh()
		{
			return null;
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1247E48", Offset = "0x1247E48", VA = "0x1247E48")]
		public void RefreshFromPathKnotMovement(int pathKnotIndex)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1246C7C", Offset = "0x1246C7C", VA = "0x1246C7C")]
		private void RefreshRotationKnot(int index)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1246D04", Offset = "0x1246D04", VA = "0x1246D04")]
		private void RefreshSpeedKnot(int index)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1246D98", Offset = "0x1246D98", VA = "0x1246D98")]
		private void RefreshFovKnot(int index)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x12448B0", Offset = "0x12448B0", VA = "0x12448B0")]
		public void RefreshSegment(int knot)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1248068", Offset = "0x1248068", VA = "0x1248068")]
		public void RefreshSegmentVisuals(Vector3 segPos, KnotSegment seg, CameraPathTool.ExtendPathType extendType)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x124854C", Offset = "0x124854C", VA = "0x124854C")]
		public EndType IsPositionNearEnd(Vector3 pos)
		{
			return default(EndType);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1246B1C", Offset = "0x1246B1C", VA = "0x1246B1C")]
		private void RecomputeKnotPlacementAfterPositionAdded(CameraPathKnot knot, int addedKnotIndex, float[] prevSegmentLengths, float[] newSegmentLengths)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1247BB8", Offset = "0x1247BB8", VA = "0x1247BB8")]
		private void RecomputeKnotPlacementAfterPositionRemoved(CameraPathKnot knot, int removedKnotIndex, float[] prevSegmentLengths, float[] newSegmentLengths)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1248844", Offset = "0x1248844", VA = "0x1248844")]
		public Vector3? ProjectPositionOntoPath(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1248C2C", Offset = "0x1248C2C", VA = "0x1248C2C")]
		public bool ProjectPositionOnToPath(Vector3 pos, out PathT pathT, out Vector3 error)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1248B80", Offset = "0x1248B80", VA = "0x1248B80")]
		private float CalculateTFromPointOnSegment(Vector3 segmentStart, Vector3 segmentEnd, Vector3 posOnSegment)
		{
			return default(float);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1249080", Offset = "0x1249080", VA = "0x1249080")]
		public PathT MaybeSnapPathTToEnd(PathT pathT, float snapDistance)
		{
			return default(PathT);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x12457DC", Offset = "0x12457DC", VA = "0x12457DC")]
		public float GetSegmentDistanceToT(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1249204", Offset = "0x1249204", VA = "0x1249204")]
		public float GetRatioToPathDistance(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x12486C8", Offset = "0x12486C8", VA = "0x12486C8")]
		private PathT GetPathTFromDistance(int segment, float distance)
		{
			return default(PathT);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1245358", Offset = "0x1245358", VA = "0x1245358")]
		public Vector3 GetPosition(PathT pathT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1249318", Offset = "0x1249318", VA = "0x1249318")]
		private float GetUnsignedDistanceFromTtoT(PathT t1, PathT t2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1249538", Offset = "0x1249538", VA = "0x1249538")]
		private Vector4 CalculateHermite(float t, Vector4 pos0, Vector4 tangent0, Vector4 pos1, Vector4 tangent1)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x12484B0", Offset = "0x12484B0", VA = "0x12484B0")]
		private Vector3 CalculateHermite(float t, Vector3 pos0, Vector3 tangent0, Vector3 pos1, Vector3 tangent1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x12495F8", Offset = "0x12495F8", VA = "0x12495F8")]
		private float CalculateHermite(float t, float pos0, float tangent0, float pos1, float tangent1)
		{
			return default(float);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x124964C", Offset = "0x124964C", VA = "0x124964C")]
		public Quaternion GetRotation(PathT pathT)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x124A128", Offset = "0x124A128", VA = "0x124A128")]
		public float GetSpeed(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x124A718", Offset = "0x124A718", VA = "0x124A718")]
		public float GetFov(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x124A0DC", Offset = "0x124A0DC", VA = "0x124A0DC")]
		private int ClampIndex(int index, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x124AE14", Offset = "0x124AE14", VA = "0x124AE14")]
		public bool MoveAlongPath(float movementAmount, PathT startT, out PathT endT)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x124B040", Offset = "0x124B040", VA = "0x124B040")]
		public CameraPathMetadata SerializeToCameraPathMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x124B414", Offset = "0x124B414", VA = "0x124B414")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x124B610", Offset = "0x124B610", VA = "0x124B610")]
		private void GizmoDrawBox(Bounds bounds)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x124B928", Offset = "0x124B928", VA = "0x124B928")]
		private void GizmoDrawBox(Vector3 posA, Vector3 posB)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class CameraPathCaptureRig : MonoBehaviour
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Object;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Camera;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraPathPreviewWidget m_Widget;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ScreenshotManager m_Manager;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UsdPathSerializer m_VideoUsdSerializer;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_CameraComponent;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 m_CameraClipPlanesBase;

		[Token(Token = "0x17000215")]
		public bool Enabled
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x124C3E8", Offset = "0x124C3E8", VA = "0x124C3E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public ScreenshotManager Manager
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x124C404", Offset = "0x124C404", VA = "0x124C404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x124C40C", Offset = "0x124C40C", VA = "0x124C40C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x124C6C4", Offset = "0x124C6C4", VA = "0x124C6C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x124C97C", Offset = "0x124C97C", VA = "0x124C97C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x124CAB4", Offset = "0x124CAB4", VA = "0x124CAB4")]
		public void SetPreviewWidgetCompletionPercent(float zeroToOne)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x124CAD0", Offset = "0x124CAD0", VA = "0x124CAD0")]
		public void OverridePreviewWidgetPathT(PathT? t)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x124CAF0", Offset = "0x124CAF0", VA = "0x124CAF0")]
		public float? GetCompletionOfCameraAlongPath()
		{
			return null;
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x124CB0C", Offset = "0x124CB0C", VA = "0x124CB0C")]
		public void UpdateCameraTransform(Transform xf)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x124CB8C", Offset = "0x124CB8C", VA = "0x124CB8C")]
		public void SetFov(float fov)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x124CBA8", Offset = "0x124CBA8", VA = "0x124CBA8")]
		public void RecordPath()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x124CD18", Offset = "0x124CD18", VA = "0x124CD18")]
		public void StopRecordingPath(bool saveCapture)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x124CFA4", Offset = "0x124CFA4", VA = "0x124CFA4")]
		private void RefreshVisibility()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x124D058", Offset = "0x124D058", VA = "0x124D058")]
		private void OnPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x124D0AC", Offset = "0x124D0AC", VA = "0x124D0AC")]
		private void OnToolChanged()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x124D14C", Offset = "0x124D14C", VA = "0x124D14C")]
		public CameraPathCaptureRig()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class CameraPathFovKnot : CameraPathKnot
	{
		[Token(Token = "0x20001DF")]
		public enum ControlType
		{
			[Token(Token = "0x4000B26")]
			Knot,
			[Token(Token = "0x4000B27")]
			FovControl
		}

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_FovControlColor;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_FovControlColorInactive;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_FovLineRenderer;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject m_FovControl;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Renderer m_FovControlMesh;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected TextMeshPro m_Text;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_TextAnchor;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected Vector2 m_FovRange;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected float m_FovMaxVisualLength;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_FovValue;

		[Token(Token = "0x17000217")]
		public float CameraFov
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x124ADE4", Offset = "0x124ADE4", VA = "0x124ADE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000218")]
		public float FovValue
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x124D154", Offset = "0x124D154", VA = "0x124D154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x124D15C", Offset = "0x124D15C", VA = "0x124D15C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x124D210", Offset = "0x124D210", VA = "0x124D210", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x124D248", Offset = "0x124D248", VA = "0x124D248", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x124D5D8", Offset = "0x124D5D8", VA = "0x124D5D8")]
		public float GetFovValueFromY(float y_GS)
		{
			return default(float);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x124D68C", Offset = "0x124D68C", VA = "0x124D68C", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x124D874", Offset = "0x124D874", VA = "0x124D874", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x124DB0C", Offset = "0x124DB0C", VA = "0x124DB0C", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x124DD78", Offset = "0x124DD78", VA = "0x124DD78", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x124DF80", Offset = "0x124DF80", VA = "0x124DF80", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x124E13C", Offset = "0x124E13C", VA = "0x124E13C", Slot = "12")]
		public override bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x124C31C", Offset = "0x124C31C", VA = "0x124C31C")]
		public CameraPathFovKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x124E30C", Offset = "0x124E30C", VA = "0x124E30C")]
		public CameraPathFovKnot()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class CameraPathKnot : MonoBehaviour
	{
		[Token(Token = "0x20001E1")]
		public enum Type
		{
			[Token(Token = "0x4000B35")]
			Position,
			[Token(Token = "0x4000B36")]
			Rotation,
			[Token(Token = "0x4000B37")]
			Speed,
			[Token(Token = "0x4000B38")]
			Fov,
			[Token(Token = "0x4000B39")]
			Invalid
		}

		[Token(Token = "0x4000B28")]
		public const int kDefaultControl = 0;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_ActivePathVisuals;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject m_InactivePathVisuals;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_GrabRadius;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected Color m_ActiveColor;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected Color m_InactiveColor;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public PathT PathT;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float m_DistanceAlongSegment;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Type m_Type;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Renderer[] m_Meshes;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<MeshFilter> m_RenderHighlights;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected List<MeshFilter> m_InactiveRenderHighlights;

		[Token(Token = "0x17000219")]
		public Type KnotType
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x124E334", Offset = "0x124E334", VA = "0x124E334")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x1700021A")]
		public float DistanceAlongSegment
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x124E33C", Offset = "0x124E33C", VA = "0x124E33C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x124E344", Offset = "0x124E344", VA = "0x124E344")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public Transform KnotXf
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x1248060", Offset = "0x1248060", VA = "0x1248060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x124D240", Offset = "0x124D240", VA = "0x124D240", Slot = "4")]
		public virtual Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x124D274", Offset = "0x124D274", VA = "0x124D274", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x124E394", Offset = "0x124E394", VA = "0x124E394")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x124E420", Offset = "0x124E420", VA = "0x124E420", Slot = "6")]
		protected virtual void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1248018", Offset = "0x1248018", VA = "0x1248018")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x124E49C", Offset = "0x124E49C", VA = "0x124E49C", Slot = "7")]
		public virtual void RefreshVisuals()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x124E34C", Offset = "0x124E34C", VA = "0x124E34C")]
		public void SetActivePathVisuals(bool onActivePath)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x124E4A0", Offset = "0x124E4A0", VA = "0x124E4A0", Slot = "8")]
		public virtual void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x124DBDC", Offset = "0x124DBDC", VA = "0x124DBDC", Slot = "9")]
		public virtual void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x124DE20", Offset = "0x124DE20", VA = "0x124DE20", Slot = "10")]
		public virtual void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x124E564", Offset = "0x124E564", VA = "0x124E564", Slot = "11")]
		public virtual float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x124E244", Offset = "0x124E244", VA = "0x124E244", Slot = "12")]
		public virtual bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x124E320", Offset = "0x124E320", VA = "0x124E320")]
		public CameraPathKnot()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class CameraPathPositionKnot : CameraPathKnot
	{
		[Token(Token = "0x20001E3")]
		public enum ControlType
		{
			[Token(Token = "0x4000B44")]
			Knot,
			[Token(Token = "0x4000B45")]
			TangentControlForward,
			[Token(Token = "0x4000B46")]
			TangentControlBack
		}

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_TangentControlColor;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_TangentControlColorInactive;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_TangentRenderer;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject[] m_TangentControl;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected GameObject[] m_TangentControlMesh;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_TangentScalar;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_KnotMesh;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_TangentMagnitude;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 m_BaseKnotMeshLocalScale;

		[Token(Token = "0x1700021C")]
		public Vector3 ScaledTangent
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x12483F0", Offset = "0x12483F0", VA = "0x12483F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700021D")]
		public float TangentMagnitude
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x124E650", Offset = "0x124E650", VA = "0x124E650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x124E658", Offset = "0x124E658", VA = "0x124E658")]
			set
			{
			}
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x124E660", Offset = "0x124E660", VA = "0x124E660", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x124E6CC", Offset = "0x124E6CC", VA = "0x124E6CC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x124E710", Offset = "0x124E710", VA = "0x124E710")]
		public float GetTangentMagnitudeFromControlXf(TrTransform controlXf)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x124E824", Offset = "0x124E824", VA = "0x124E824", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x124EA4C", Offset = "0x124EA4C", VA = "0x124EA4C", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x124EC38", Offset = "0x124EC38", VA = "0x124EC38", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x124ED7C", Offset = "0x124ED7C", VA = "0x124ED7C", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x124EEA8", Offset = "0x124EEA8", VA = "0x124EEA8", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x12441C8", Offset = "0x12441C8", VA = "0x12441C8")]
		public void SetVisuallySpecial(bool special)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x124C08C", Offset = "0x124C08C", VA = "0x124C08C")]
		public CameraPathPositionKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x124F124", Offset = "0x124F124", VA = "0x124F124")]
		public CameraPathPositionKnot()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class CameraPathRotationKnot : CameraPathKnot
	{
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x124F138", Offset = "0x124F138", VA = "0x124F138", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x124C164", Offset = "0x124C164", VA = "0x124C164")]
		public CameraPathRotationKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x124F154", Offset = "0x124F154", VA = "0x124F154")]
		public CameraPathRotationKnot()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class CameraPathSpeedKnot : CameraPathKnot
	{
		[Token(Token = "0x20001E6")]
		public enum ControlType
		{
			[Token(Token = "0x4000B53")]
			Knot,
			[Token(Token = "0x4000B54")]
			SpeedControl
		}

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float kMinSpeed;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_SpeedControlColor;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_SpeedControlColorInactive;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_SpeedLineRenderer;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject m_SpeedControl;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Renderer m_SpeedControlMesh;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected TextMeshPro m_Text;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_TextAnchor;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected float m_MaxSpeed;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		protected float m_SpeedMaxVisualLength;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_SpeedValue;

		[Token(Token = "0x1700021E")]
		public float CameraSpeed
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x124A690", Offset = "0x124A690", VA = "0x124A690")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		public float SpeedValue
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x124F168", Offset = "0x124F168", VA = "0x124F168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x124F170", Offset = "0x124F170", VA = "0x124F170")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x124F200", Offset = "0x124F200", VA = "0x124F200", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x124F230", Offset = "0x124F230", VA = "0x124F230", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x124F258", Offset = "0x124F258", VA = "0x124F258")]
		public float GetSpeedValueFromY(float y_GS)
		{
			return default(float);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x124F30C", Offset = "0x124F30C", VA = "0x124F30C", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x124F4F4", Offset = "0x124F4F4", VA = "0x124F4F4", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x124F78C", Offset = "0x124F78C", VA = "0x124F78C", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x124F85C", Offset = "0x124F85C", VA = "0x124F85C", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x124F904", Offset = "0x124F904", VA = "0x124F904", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x124FAC0", Offset = "0x124FAC0", VA = "0x124FAC0", Slot = "12")]
		public override bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x124C23C", Offset = "0x124C23C", VA = "0x124C23C")]
		public CameraPathSpeedKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x124FBC8", Offset = "0x124FBC8", VA = "0x124FBC8")]
		public CameraPathSpeedKnot()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class CameraPathTinter : MonoBehaviour
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<KnotSegment> m_TintedSegments;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<CameraPathKnot> m_TintedKnots;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x20D7368", Offset = "0x20D7368", VA = "0x20D7368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x20D7420", Offset = "0x20D7420", VA = "0x20D7420")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x20D7610", Offset = "0x20D7610", VA = "0x20D7610")]
		public void TintKnot(CameraPathKnot knot)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x20D76D8", Offset = "0x20D76D8", VA = "0x20D76D8")]
		public void TintSegment(KnotSegment segment)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x20D77B8", Offset = "0x20D77B8", VA = "0x20D77B8")]
		public CameraPathTinter()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class CameraProjection : MonoBehaviour
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x20D77C0", Offset = "0x20D77C0", VA = "0x20D77C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x20D791C", Offset = "0x20D791C", VA = "0x20D791C")]
		public CameraProjection()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class CanvasScript : MonoBehaviour
	{
		[Token(Token = "0x20001EA")]
		public delegate void PoseChangedEventHandler(TrTransform prev, TrTransform current);

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_BatchKeywords;

		[Token(Token = "0x4000B58")]
		private const float kScaleMin = 0.0001f;

		[Token(Token = "0x4000B59")]
		private const float kScaleMax = 10000f;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_bInitialized;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BatchManager m_BatchManager;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TransformExtensions.RelativeAccessor AsCanvas;

		[Token(Token = "0x17000220")]
		public BatchManager BatchManager
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x20D7A5C", Offset = "0x20D7A5C", VA = "0x20D7A5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public TrTransform Pose
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x20D7A64", Offset = "0x20D7A64", VA = "0x20D7A64")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x20D7AF8", Offset = "0x20D7AF8", VA = "0x20D7AF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public TrTransform LocalPose
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x20D7C4C", Offset = "0x20D7C4C", VA = "0x20D7C4C")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x20D7CE0", Offset = "0x20D7CE0", VA = "0x20D7CE0")]
			set
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event PoseChangedEventHandler PoseChanged
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x20D7924", Offset = "0x20D7924", VA = "0x20D7924")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x20D79C0", Offset = "0x20D79C0", VA = "0x20D79C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x20D7E50", Offset = "0x20D7E50", VA = "0x20D7E50")]
		public void Init()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x20D7E9C", Offset = "0x20D7E9C", VA = "0x20D7E9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x20D7F44", Offset = "0x20D7F44", VA = "0x20D7F44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x20D7F60", Offset = "0x20D7F60", VA = "0x20D7F60")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x20D7F7C", Offset = "0x20D7F7C", VA = "0x20D7F7C")]
		public Bounds GetCanvasBoundingBox(bool onlyActive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x20D7FC0", Offset = "0x20D7FC0", VA = "0x20D7FC0")]
		public void OnScenePoseChanged(TrTransform previousScene, TrTransform currentScene)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x20D8138", Offset = "0x20D8138", VA = "0x20D8138")]
		public CanvasScript()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class CircleGesture
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_InitPosition;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_MinCircleSize;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_BeginGestureDist;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CloseLoopDist;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_StepDist;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_MaxAngle;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_LastCurrentPosition;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_WorkingPosition;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_CircleStarted;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_CircleSizeValid;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_CircleAnglesValid;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_LastStepNormalized;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x20D82F4", Offset = "0x20D82F4", VA = "0x20D82F4")]
		public void InitGesture(Vector3 initPos, float minSize, float beginDist, float closeLoopDist, float step, float maxAngle)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x20D8308", Offset = "0x20D8308", VA = "0x20D8308")]
		public void ResetGesture()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x20D8380", Offset = "0x20D8380", VA = "0x20D8380")]
		public void UpdateGesture(Vector3 currentPos)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x20D8710", Offset = "0x20D8710", VA = "0x20D8710")]
		public bool IsGestureComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x20D87BC", Offset = "0x20D87BC", VA = "0x20D87BC")]
		public bool DidGestureSucceed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x20D87DC", Offset = "0x20D87DC", VA = "0x20D87DC")]
		public CircleGesture()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class ClipboardManager : MonoBehaviour
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_DuplicateOffset;

		[Token(Token = "0x17000223")]
		public static ClipboardManager Instance
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x20D87E4", Offset = "0x20D87E4", VA = "0x20D87E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x20D882C", Offset = "0x20D882C", VA = "0x20D882C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public bool CanCopy
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x20D8878", Offset = "0x20D8878", VA = "0x20D8878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x20D88CC", Offset = "0x20D88CC", VA = "0x20D88CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x20D8918", Offset = "0x20D8918", VA = "0x20D8918")]
		public void DuplicateSelection(bool offsetDuplicate = false)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x20D900C", Offset = "0x20D900C", VA = "0x20D900C")]
		public ClipboardManager()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class Clock : MonoBehaviour
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_Text;

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x20D9014", Offset = "0x20D9014", VA = "0x20D9014")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x20D92C8", Offset = "0x20D92C8", VA = "0x20D92C8")]
		public Clock()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class ColorController : MonoBehaviour
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Color m_DefaultColor;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool m_Hdr;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Color m_CurrentColor;

		[Token(Token = "0x17000225")]
		public bool IsHdr
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x20D9430", Offset = "0x20D9430", VA = "0x20D9430")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public virtual Color CurrentColor
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x20D9438", Offset = "0x20D9438", VA = "0x20D9438", Slot = "4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x20D9444", Offset = "0x20D9444", VA = "0x20D9444", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<ColorPickerMode, Vector3> CurrentColorSet
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x20D92D0", Offset = "0x20D92D0", VA = "0x20D92D0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x20D9380", Offset = "0x20D9380", VA = "0x20D9380")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x20D94C4", Offset = "0x20D94C4", VA = "0x20D94C4", Slot = "6")]
		public virtual void SetCurrentColorSilently(Color color)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x20D94A8", Offset = "0x20D94A8", VA = "0x20D94A8")]
		protected void TriggerCurrentColorSet(ColorPickerMode mode, Vector3 rawColor)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x20D94D0", Offset = "0x20D94D0", VA = "0x20D94D0")]
		public void SetColorToDefault()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x20D94E4", Offset = "0x20D94E4", VA = "0x20D94E4")]
		public ColorController()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class ActivateLayerCommand : BaseCommand
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasScript m_NewActiveLayer;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScript m_PrevActiveLayer;

		[Token(Token = "0x17000227")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x20D9630", Offset = "0x20D9630", VA = "0x20D9630", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x20D94EC", Offset = "0x20D94EC", VA = "0x20D94EC")]
		public ActivateLayerCommand(CanvasScript layer, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x20D9638", Offset = "0x20D9638", VA = "0x20D9638", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x20D9660", Offset = "0x20D9660", VA = "0x20D9660", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class AddLayerCommand : BaseCommand
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasScript m_prevActiveLayer;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScript m_Layer;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_MakeActive;

		[Token(Token = "0x17000228")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x20D96C8", Offset = "0x20D96C8", VA = "0x20D96C8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x20D9688", Offset = "0x20D9688", VA = "0x20D9688")]
		public AddLayerCommand(bool makeActive, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x20D96D0", Offset = "0x20D96D0", VA = "0x20D96D0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x20D9710", Offset = "0x20D9710", VA = "0x20D9710", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class BaseCommand : IDisposable
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<BaseCommand> m_Children;

		[Token(Token = "0x17000229")]
		public virtual bool NeedsSave
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x20D9840", Offset = "0x20D9840", VA = "0x20D9840", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022A")]
		protected virtual bool IsNoop
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x20D996C", Offset = "0x20D996C", VA = "0x20D996C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x20D9770", Offset = "0x20D9770", VA = "0x20D9770")]
		protected static Vector3 GetPositionForCommand(Stroke stroke)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x20D97D8", Offset = "0x20D97D8", VA = "0x20D97D8")]
		protected static Vector3 GetPositionForCommand(Stroke[] strokes)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x20D9528", Offset = "0x20D9528", VA = "0x20D9528")]
		public BaseCommand([Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x20D9974", Offset = "0x20D9974", VA = "0x20D9974")]
		public void Undo()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x20D9C8C", Offset = "0x20D9C8C", VA = "0x20D9C8C", Slot = "7")]
		protected virtual void OnUndo()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x20D9C90", Offset = "0x20D9C90", VA = "0x20D9C90")]
		public void Redo()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x20D9DE8", Offset = "0x20D9DE8", VA = "0x20D9DE8", Slot = "8")]
		protected virtual void OnRedo()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x20D9DEC", Offset = "0x20D9DEC", VA = "0x20D9DEC", Slot = "9")]
		public virtual bool Merge(BaseCommand other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x20D9E0C", Offset = "0x20D9E0C", VA = "0x20D9E0C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x20DA124", Offset = "0x20DA124", VA = "0x20DA124", Slot = "10")]
		protected virtual void OnDispose()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class BaseKnotCommand : BaseCommand
	{
		[Token(Token = "0x1700022B")]
		public bool MergesWithCreateCommand
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x20DA1B4", Offset = "0x20DA1B4", VA = "0x20DA1B4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022C")]
		public CameraPathKnot Knot
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x20DA1BC", Offset = "0x20DA1BC", VA = "0x20DA1BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x20DA1C4", Offset = "0x20DA1C4", VA = "0x20DA1C4")]
		public BaseKnotCommand(CameraPathKnot knot, bool mergesWithCreateCommand, BaseCommand parent)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class BaseKnotCommand<T> : BaseKnotCommand where T : CameraPathKnot
	{
		[Token(Token = "0x1700022D")]
		public new T Knot
		{
			[Token(Token = "0x6000D1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1D")]
		public BaseKnotCommand(T knot, bool mergesWithCreateCommand = false, [Optional] BaseCommand parent)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class BrushStrokeCommand : BaseCommand
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_Stroke;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StencilWidget m_Widget;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_LineLength_CS;

		[Token(Token = "0x1700022E")]
		private Vector3 CommandAudioPosition
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x20DA1F4", Offset = "0x20DA1F4", VA = "0x20DA1F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700022F")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x20DA238", Offset = "0x20DA238", VA = "0x20DA238", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x20DA1FC", Offset = "0x20DA1FC", VA = "0x20DA1FC")]
		public BrushStrokeCommand(Stroke stroke, [Optional] StencilWidget widget, float lineLength = -1f, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x20DA240", Offset = "0x20DA240", VA = "0x20DA240", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x20DA2AC", Offset = "0x20DA2AC", VA = "0x20DA2AC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x20DA4E0", Offset = "0x20DA4E0", VA = "0x20DA4E0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x20DA6D8", Offset = "0x20DA6D8", VA = "0x20DA6D8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F6")]
	public class ClearLayerCommand : BaseCommand
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasScript m_Layer;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<BatchPool> batchPool;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrabWidget[] m_Widgets;

		[Token(Token = "0x17000230")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x20DA970", Offset = "0x20DA970", VA = "0x20DA970", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x20DA878", Offset = "0x20DA878", VA = "0x20DA878")]
		public ClearLayerCommand(int layerIndex, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x20DA904", Offset = "0x20DA904", VA = "0x20DA904")]
		public ClearLayerCommand(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x20DA978", Offset = "0x20DA978", VA = "0x20DA978", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x20DAE48", Offset = "0x20DAE48", VA = "0x20DAE48", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class CreatePathKnotCommand : BaseCommand
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraPathWidget m_Widget;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraPathKnot.Type m_KnotType;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TrTransform m_SpawnXf;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraPathKnot m_CreatedKnot;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PathT m_PathT;

		[Token(Token = "0x17000231")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x20DB398", Offset = "0x20DB398", VA = "0x20DB398", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x20DB340", Offset = "0x20DB340", VA = "0x20DB340")]
		public CreatePathKnotCommand(CameraPathWidget widget, CameraPathKnot.Type knotType, PathT pathT, TrTransform spawnXf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x20DB3A0", Offset = "0x20DB3A0", VA = "0x20DB3A0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x20DB474", Offset = "0x20DB474", VA = "0x20DB474", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x20DB9C8", Offset = "0x20DB9C8", VA = "0x20DB9C8", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x20DBA70", Offset = "0x20DBA70", VA = "0x20DBA70", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F8")]
	public class CreateWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_SpawnAggression;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_TiltMeterCost;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_TiltMeterCostUndone;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GrabWidget m_Prefab;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_SpawnXf;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_EndXf;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion? m_DesiredEndForward;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CanvasScript m_Canvas;

		[Token(Token = "0x17000232")]
		public GrabWidget Widget
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x20DBE00", Offset = "0x20DBE00", VA = "0x20DBE00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x20DBE08", Offset = "0x20DBE08", VA = "0x20DBE08", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x20DBC20", Offset = "0x20DBC20", VA = "0x20DBC20")]
		public CreateWidgetCommand(GrabWidget widgetPrefab, TrTransform spawnXf, [Optional] Quaternion? desiredEndForward, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x20DBE10", Offset = "0x20DBE10", VA = "0x20DBE10", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x20DBF54", Offset = "0x20DBF54", VA = "0x20DBF54", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x20DC428", Offset = "0x20DC428", VA = "0x20DC428", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x20DC538", Offset = "0x20DC538", VA = "0x20DC538")]
		public void SetWidgetCost(int iCost)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class DeleteLayerCommand : BaseCommand
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasScript m_Layer;

		[Token(Token = "0x17000234")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x20DC638", Offset = "0x20DC638", VA = "0x20DC638", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x20DC5CC", Offset = "0x20DC5CC", VA = "0x20DC5CC")]
		public DeleteLayerCommand(int layerIndex, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x20DC610", Offset = "0x20DC610", VA = "0x20DC610")]
		public DeleteLayerCommand(CanvasScript layer, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x20DC640", Offset = "0x20DC640", VA = "0x20DC640", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x20DC74C", Offset = "0x20DC74C", VA = "0x20DC74C", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class DeleteSelectionCommand : BaseCommand
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke[] m_Strokes;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_Widgets;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_InitialSelectionTransform;

		[Token(Token = "0x17000235")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x20DC9C0", Offset = "0x20DC9C0", VA = "0x20DC9C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x20DC7BC", Offset = "0x20DC7BC", VA = "0x20DC7BC")]
		public DeleteSelectionCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x20DC9C8", Offset = "0x20DC9C8", VA = "0x20DC9C8", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x20DCC8C", Offset = "0x20DCC8C", VA = "0x20DCC8C", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class DeleteStrokeCommand : BaseCommand
	{
		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_TargetStroke;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_SilenceFirstAudio;

		[Token(Token = "0x17000236")]
		private Vector3 CommandAudioPosition
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x20DCF5C", Offset = "0x20DCF5C", VA = "0x20DCF5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000237")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x20DCF94", Offset = "0x20DCF94", VA = "0x20DCF94", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x20DCF64", Offset = "0x20DCF64", VA = "0x20DCF64")]
		public DeleteStrokeCommand(Stroke stroke, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x20DCF9C", Offset = "0x20DCF9C", VA = "0x20DCF9C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x20DD020", Offset = "0x20DD020", VA = "0x20DD020", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class DuplicateSelectionCommand : BaseCommand
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_SelectedStrokes;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_SelectedWidgets;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Stroke> m_DuplicatedStrokes;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GrabWidget> m_DuplicatedWidgets;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_OriginTransform;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_DuplicateTransform;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CanvasScript m_CurrentCanvas;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_DupeInPlace;

		[Token(Token = "0x17000238")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x20DD0A4", Offset = "0x20DD0A4", VA = "0x20DD0A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x20D8BB0", Offset = "0x20D8BB0", VA = "0x20D8BB0")]
		public DuplicateSelectionCommand(TrTransform xf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x20DD0AC", Offset = "0x20DD0AC", VA = "0x20DD0AC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x20DD4C0", Offset = "0x20DD4C0", VA = "0x20DD4C0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x20DD8C4", Offset = "0x20DD8C4", VA = "0x20DD8C4", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FE")]
	public class FlipSelectionCommand : BaseCommand
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_StrokesFlipped;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_WidgetsFlipped;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Plane m_FlipPlane_CS;

		[Token(Token = "0x17000239")]
		private CanvasScript Canvas
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x20DDB38", Offset = "0x20DDB38", VA = "0x20DDB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x20DDB58", Offset = "0x20DDB58", VA = "0x20DDB58", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x20DDB60", Offset = "0x20DDB60", VA = "0x20DDB60")]
		public FlipSelectionCommand(ICollection<Stroke> strokesFlipped, ICollection<GrabWidget> widgetsFlipped, Plane flipPlane, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x20DDCB0", Offset = "0x20DDCB0", VA = "0x20DDCB0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x20DE374", Offset = "0x20DE374", VA = "0x20DE374", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x20DE378", Offset = "0x20DE378", VA = "0x20DE378", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x20DDCB4", Offset = "0x20DDCB4", VA = "0x20DDCB4")]
		private void FlipSelection()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class GroupStrokesAndWidgetsCommand : BaseCommand
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke[] m_Strokes;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GrabWidget[] m_Widgets;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SketchGroupTag[] m_InitialStrokesGroups;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SketchGroupTag[] m_InitialWidgetsGroups;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SketchGroupTag m_TargetGroup;

		[Token(Token = "0x1700023B")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x20DE380", Offset = "0x20DE380", VA = "0x20DE380", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x20DE388", Offset = "0x20DE388", VA = "0x20DE388")]
		public GroupStrokesAndWidgetsCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, SketchGroupTag? targetGroup, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x20DE61C", Offset = "0x20DE61C", VA = "0x20DE61C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x20DE6C8", Offset = "0x20DE6C8", VA = "0x20DE6C8", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class HideWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_WidgetTransform;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_TiltMeterCost;

		[Token(Token = "0x1700023C")]
		public GrabWidget Widget
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x20DE840", Offset = "0x20DE840", VA = "0x20DE840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x20DEA1C", Offset = "0x20DEA1C", VA = "0x20DEA1C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x20DE848", Offset = "0x20DE848", VA = "0x20DE848")]
		public HideWidgetCommand(GrabWidget widget, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x20DEA24", Offset = "0x20DEA24", VA = "0x20DEA24", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x20DEB60", Offset = "0x20DEB60", VA = "0x20DEB60", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class InvertSelectionCommand : BaseCommand
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_StrokesOn;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Stroke> m_StrokesOff;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GrabWidget> m_WidgetsOn;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GrabWidget> m_WidgetsOff;

		[Token(Token = "0x1700023E")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x20DED80", Offset = "0x20DED80", VA = "0x20DED80", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x20DED88", Offset = "0x20DED88", VA = "0x20DED88")]
		public InvertSelectionCommand(ICollection<Stroke> strokesOn, ICollection<Stroke> strokesOff, ICollection<GrabWidget> widgetsOn, ICollection<GrabWidget> widgetsOff, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x20DEF3C", Offset = "0x20DEF3C", VA = "0x20DEF3C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x20DF01C", Offset = "0x20DF01C", VA = "0x20DF01C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x20DF0FC", Offset = "0x20DF0FC", VA = "0x20DF0FC", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000203")]
	public class JoinStrokeCommand : BaseCommand
	{
		[Token(Token = "0x2000204")]
		private enum JoinStrokeType
		{
			[Token(Token = "0x4000BB8")]
			FirstFirst,
			[Token(Token = "0x4000BB9")]
			FirstLast,
			[Token(Token = "0x4000BBA")]
			LastFirst,
			[Token(Token = "0x4000BBB")]
			LastLast
		}

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_StrokeA;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stroke m_StrokeB;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JoinStrokeType m_JoinType;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PointerManager.ControlPoint> m_InitialCP;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PointerManager.ControlPoint> m_NewCP;

		[Token(Token = "0x1700023F")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x20DF544", Offset = "0x20DF544", VA = "0x20DF544", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x20DF104", Offset = "0x20DF104", VA = "0x20DF104")]
		public JoinStrokeCommand(Stroke strokeA, Stroke strokeB, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x20DF3CC", Offset = "0x20DF3CC", VA = "0x20DF3CC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x20DF4E8", Offset = "0x20DF4E8", VA = "0x20DF4E8", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x20DF3F8", Offset = "0x20DF3F8", VA = "0x20DF3F8")]
		private void ModifyStroke(Stroke stroke, IEnumerable<PointerManager.ControlPoint> newControlPoints)
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class ModifyFogCommand : BaseCommand
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_StartColor;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color m_EndColor;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_StartDensity;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_EndDensity;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Final;

		[Token(Token = "0x17000240")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x20DF61C", Offset = "0x20DF61C", VA = "0x20DF61C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x20DF54C", Offset = "0x20DF54C", VA = "0x20DF54C")]
		public ModifyFogCommand(Color endColor, float endDensity, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x20DF624", Offset = "0x20DF624", VA = "0x20DF624", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x20DF6A0", Offset = "0x20DF6A0", VA = "0x20DF6A0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x20DF71C", Offset = "0x20DF71C", VA = "0x20DF71C", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000206")]
	public class ModifyFovKnotCommand : BaseKnotCommand<CameraPathFovKnot>
	{
		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_StartFov;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_EndFov;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Final;

		[Token(Token = "0x17000241")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x20DF87C", Offset = "0x20DF87C", VA = "0x20DF87C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x20DF7E0", Offset = "0x20DF7E0", VA = "0x20DF7E0")]
		public ModifyFovKnotCommand(CameraPathFovKnot knot, float endFov, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x20DF884", Offset = "0x20DF884", VA = "0x20DF884", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x20DF924", Offset = "0x20DF924", VA = "0x20DF924", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x20DF9C4", Offset = "0x20DF9C4", VA = "0x20DF9C4", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000207")]
	public class ModifyLightCommand : BaseCommand
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LightMode m_ModifiedLight;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color m_StartColor;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color m_EndColor;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_StartRot;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_EndRot;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_Final;

		[Token(Token = "0x17000242")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x20DFBA8", Offset = "0x20DFBA8", VA = "0x20DFBA8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x20DFA80", Offset = "0x20DFA80", VA = "0x20DFA80")]
		public ModifyLightCommand(LightMode light, Color endColor, Quaternion endRot, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x20DFBB0", Offset = "0x20DFBB0", VA = "0x20DFBB0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x20DFD44", Offset = "0x20DFD44", VA = "0x20DFD44", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x20DFED8", Offset = "0x20DFED8", VA = "0x20DFED8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000209")]
	public class ModifyPositionKnotCommand : BaseKnotCommand<CameraPathPositionKnot>
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraPath m_Path;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraPathPositionKnot m_KnotLoopPartner;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_StartRotation_CS;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_EndRotation_CS;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion m_PartnerStartRotation_CS;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_StartSpeed;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_EndSpeed;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_PartnerStartSpeed;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_KnotIndex;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_PartnerKnotIndex;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_Final;

		[Token(Token = "0x17000243")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x20E0340", Offset = "0x20E0340", VA = "0x20E0340", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x20E0048", Offset = "0x20E0048", VA = "0x20E0048")]
		public ModifyPositionKnotCommand(CameraPath path, KnotDescriptor knotDesc, float endSpeed, Vector3 endForward_GS, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x20E0348", Offset = "0x20E0348", VA = "0x20E0348", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x20E04AC", Offset = "0x20E04AC", VA = "0x20E04AC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x20E0610", Offset = "0x20E0610", VA = "0x20E0610", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020A")]
	public class ModifySkyboxCommand : BaseCommand
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_StartColorA;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color m_EndColorA;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color m_StartColorB;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_EndColorB;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_StartOrientation;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_EndOrientation;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Final;

		[Token(Token = "0x17000244")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x20E083C", Offset = "0x20E083C", VA = "0x20E083C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x20E0728", Offset = "0x20E0728", VA = "0x20E0728")]
		public ModifySkyboxCommand(Color endColorA, Color endColorB, Quaternion endOrient, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x20E0844", Offset = "0x20E0844", VA = "0x20E0844", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x20E08E4", Offset = "0x20E08E4", VA = "0x20E08E4", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x20E0984", Offset = "0x20E0984", VA = "0x20E0984", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020B")]
	public class ModifySpeedKnotCommand : BaseKnotCommand<CameraPathSpeedKnot>
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_StartSpeed;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_EndSpeed;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Final;

		[Token(Token = "0x17000245")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x20E0AEC", Offset = "0x20E0AEC", VA = "0x20E0AEC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x20E0A50", Offset = "0x20E0A50", VA = "0x20E0A50")]
		public ModifySpeedKnotCommand(CameraPathSpeedKnot knot, float endSpeed, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x20E0AF4", Offset = "0x20E0AF4", VA = "0x20E0AF4", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x20E0B94", Offset = "0x20E0B94", VA = "0x20E0B94", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x20E0C34", Offset = "0x20E0C34", VA = "0x20E0C34", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020C")]
	public class ModifyStencilAttractDistanceCommand : BaseCommand
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float m_StartDistance;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_EndDistance;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Final;

		[Token(Token = "0x17000246")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x20E0D90", Offset = "0x20E0D90", VA = "0x20E0D90", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x20E0CF0", Offset = "0x20E0CF0", VA = "0x20E0CF0")]
		public ModifyStencilAttractDistanceCommand(float endDistance, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x20E0D98", Offset = "0x20E0D98", VA = "0x20E0D98", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x20E0E04", Offset = "0x20E0E04", VA = "0x20E0E04", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x20E0E70", Offset = "0x20E0E70", VA = "0x20E0E70", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020D")]
	public class ModifyStencilFrameWidthCommand : BaseCommand
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float m_StartSize;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_EndSize;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Final;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int GlobalFrameWidthMultiplierHash;

		[Token(Token = "0x17000247")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x20E0FC0", Offset = "0x20E0FC0", VA = "0x20E0FC0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x20E0F2C", Offset = "0x20E0F2C", VA = "0x20E0F2C")]
		public ModifyStencilFrameWidthCommand(float endSize, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x20E0FC8", Offset = "0x20E0FC8", VA = "0x20E0FC8", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x20E102C", Offset = "0x20E102C", VA = "0x20E102C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x20E1090", Offset = "0x20E1090", VA = "0x20E1090", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020E")]
	public class ModifyStencilGridLineWidthCommand : BaseCommand
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float m_StartSize;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_EndSize;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Final;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int GlobalGridLineWidthMultiplierHash;

		[Token(Token = "0x17000248")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x20E1248", Offset = "0x20E1248", VA = "0x20E1248", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x20E11B4", Offset = "0x20E11B4", VA = "0x20E11B4")]
		public ModifyStencilGridLineWidthCommand(float endSize, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x20E1250", Offset = "0x20E1250", VA = "0x20E1250", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x20E12B4", Offset = "0x20E12B4", VA = "0x20E12B4", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x20E1318", Offset = "0x20E1318", VA = "0x20E1318", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020F")]
	public class ModifyStencilGridSizeCommand : BaseCommand
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float m_StartSize;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_EndSize;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Final;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int GlobalGridSizeMultiplierHash;

		[Token(Token = "0x17000249")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x20E14D0", Offset = "0x20E14D0", VA = "0x20E14D0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x20E143C", Offset = "0x20E143C", VA = "0x20E143C")]
		public ModifyStencilGridSizeCommand(float endSize, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x20E14D8", Offset = "0x20E14D8", VA = "0x20E14D8", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x20E153C", Offset = "0x20E153C", VA = "0x20E153C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x20E15A0", Offset = "0x20E15A0", VA = "0x20E15A0", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000210")]
	public class ModifyStrokePointsCommand : BaseCommand
	{
		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_TargetStroke;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PointerManager.ControlPoint[] m_StartPoints;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PointerManager.ControlPoint[] m_EndPoints;

		[Token(Token = "0x1700024A")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x20E1784", Offset = "0x20E1784", VA = "0x20E1784", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x20E16C4", Offset = "0x20E16C4", VA = "0x20E16C4")]
		public ModifyStrokePointsCommand(Stroke stroke, PointerManager.ControlPoint[] newControlPoints, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x20E178C", Offset = "0x20E178C", VA = "0x20E178C")]
		private void ApplyNewPositionsToStroke(PointerManager.ControlPoint[] points)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x20E1800", Offset = "0x20E1800", VA = "0x20E1800", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x20E1808", Offset = "0x20E1808", VA = "0x20E1808", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class MoveConstrainedKnotCommand : BaseKnotCommand
	{
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraPath m_Path;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_StartRotation_CS;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_EndRotation_CS;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PathT m_StartT;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private PathT m_EndT;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Final;

		[Token(Token = "0x1700024B")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x20E19AC", Offset = "0x20E19AC", VA = "0x20E19AC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x20E1810", Offset = "0x20E1810", VA = "0x20E1810")]
		public MoveConstrainedKnotCommand(CameraPath path, KnotDescriptor knotDesc, Quaternion rot_GS, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x20E19B4", Offset = "0x20E19B4", VA = "0x20E19B4", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x20E1B04", Offset = "0x20E1B04", VA = "0x20E1B04", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x20E1C54", Offset = "0x20E1C54", VA = "0x20E1C54", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000212")]
	public class MovePositionKnotCommand : BaseKnotCommand<CameraPathPositionKnot>
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraPath m_Path;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_StartXf_CS;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_EndXf_CS;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_KnotIndex;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_StartTangentMagnitude;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Final;

		[Token(Token = "0x1700024C")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x20E1FFC", Offset = "0x20E1FFC", VA = "0x20E1FFC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x20E1D60", Offset = "0x20E1D60", VA = "0x20E1D60")]
		public MovePositionKnotCommand(CameraPath path, KnotDescriptor knotDesc, TrTransform endXf_GS, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x20E2004", Offset = "0x20E2004", VA = "0x20E2004", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x20E21A0", Offset = "0x20E21A0", VA = "0x20E21A0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x20E22A0", Offset = "0x20E22A0", VA = "0x20E22A0", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000213")]
	public class MoveWidgetCommand : BaseCommand
	{
		[Token(Token = "0x2000214")]
		private enum Type
		{
			[Token(Token = "0x4000C09")]
			Guide,
			[Token(Token = "0x4000C0A")]
			Media,
			[Token(Token = "0x4000C0B")]
			Symmetry,
			[Token(Token = "0x4000C0C")]
			Selection
		}

		[Token(Token = "0x2000215")]
		private struct CustomDimension
		{
			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 startState;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 endState;
		}

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type m_Type;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_StartTransform;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrTransform m_EndTransform;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TrTransform m_StartSelectionTransform;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TrTransform m_EndSelectionTransform;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CustomDimension m_CustomDimension;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_Final;

		[Token(Token = "0x1700024D")]
		public GrabWidget Widget
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x20E23C0", Offset = "0x20E23C0", VA = "0x20E23C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x20E2634", Offset = "0x20E2634", VA = "0x20E2634", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x20E23C8", Offset = "0x20E23C8", VA = "0x20E23C8")]
		public MoveWidgetCommand(GrabWidget widget, TrTransform endXf, Vector3 endCustomDimension, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x20E263C", Offset = "0x20E263C", VA = "0x20E263C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x20E279C", Offset = "0x20E279C", VA = "0x20E279C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x20E2938", Offset = "0x20E2938", VA = "0x20E2938", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000216")]
	public class PinWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Pinning;

		[Token(Token = "0x1700024F")]
		public GrabWidget Widget
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x20E2EAC", Offset = "0x20E2EAC", VA = "0x20E2EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public bool IsPinning
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x20E2EB4", Offset = "0x20E2EB4", VA = "0x20E2EB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x20E2EBC", Offset = "0x20E2EBC", VA = "0x20E2EBC")]
		public PinWidgetCommand(GrabWidget widget, bool pin, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x20E2EEC", Offset = "0x20E2EEC", VA = "0x20E2EEC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x20E2F6C", Offset = "0x20E2F6C", VA = "0x20E2F6C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x20E2FF4", Offset = "0x20E2FF4", VA = "0x20E2FF4", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000217")]
	public class RemovePathKnotCommand : BaseCommand
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraPathWidget m_Widget;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_RemovedXf;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_KnotIndex;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private PathT m_PathT;

		[Token(Token = "0x17000251")]
		public CameraPathKnot Knot
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x20E33EC", Offset = "0x20E33EC", VA = "0x20E33EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x20E34F8", Offset = "0x20E34F8", VA = "0x20E34F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x20E33F4", Offset = "0x20E33F4", VA = "0x20E33F4")]
		public RemovePathKnotCommand(CameraPathWidget widget, CameraPathKnot knot, TrTransform removeXf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x20E3500", Offset = "0x20E3500", VA = "0x20E3500", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x20E37C0", Offset = "0x20E37C0", VA = "0x20E37C0", Slot = "8")]
		protected override void OnRedo()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class RepaintStrokeCommand : BaseCommand
	{
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_TargetStroke;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_StartColor;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Guid m_StartGuid;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_EndColor;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Guid m_EndGuid;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_StartSize;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_EndSize;

		[Token(Token = "0x17000253")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x20E3928", Offset = "0x20E3928", VA = "0x20E3928", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x20E3894", Offset = "0x20E3894", VA = "0x20E3894")]
		public RepaintStrokeCommand(Stroke stroke, Color newcolor, Guid newGuid, float newSize, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x20E3930", Offset = "0x20E3930", VA = "0x20E3930")]
		private void ApplyColorAndBrushToObject(Color color, Guid brushGuid, float brushSize)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x20E3A6C", Offset = "0x20E3A6C", VA = "0x20E3A6C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x20E3A80", Offset = "0x20E3A80", VA = "0x20E3A80", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class SelectCommand : BaseCommand
	{
		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_Strokes;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_Widgets;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_InitialTransform;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_Deselect;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_Initial;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_Final;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool m_CheckForClearedSelection;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_IsGrabbingGroup;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_IsEndGrabbingGroup;

		[Token(Token = "0x17000254")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x20E3A94", Offset = "0x20E3A94", VA = "0x20E3A94", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x20E2E48", Offset = "0x20E2E48", VA = "0x20E2E48")]
		public void ResetInitialTransform()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x20E3B38", Offset = "0x20E3B38", VA = "0x20E3B38")]
		public SelectCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, TrTransform initialTransform, bool deselect = false, bool initial = false, bool checkForClearedSelection = false, bool isGrabbingGroup = false, bool isEndGrabbingGroup = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x20E46DC", Offset = "0x20E46DC", VA = "0x20E46DC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x20E4818", Offset = "0x20E4818", VA = "0x20E4818", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x20E4998", Offset = "0x20E4998", VA = "0x20E4998", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021A")]
	public class SnipStrokeCommand : BaseCommand
	{
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_InitialStroke;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stroke m_NewStroke;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PointerManager.ControlPoint[] m_InitialCP;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PointerManager.ControlPoint[] m_SnippedCP1;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PointerManager.ControlPoint[] m_SnippedCP2;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_SnipIndex;

		[Token(Token = "0x17000255")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x20E4FB4", Offset = "0x20E4FB4", VA = "0x20E4FB4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x20E4C44", Offset = "0x20E4C44", VA = "0x20E4C44")]
		public SnipStrokeCommand(Stroke stroke, int snipIndex, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x20E4DF4", Offset = "0x20E4DF4", VA = "0x20E4DF4", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x20E4EBC", Offset = "0x20E4EBC", VA = "0x20E4EBC", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x20E4E18", Offset = "0x20E4E18", VA = "0x20E4E18")]
		private void ModifyStroke(Stroke stroke, IEnumerable<PointerManager.ControlPoint> newControlPoints)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class SquashLayerCommand : BaseCommand
	{
		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasScript m_SquashedLayer;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScript m_DestinationLayer;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stroke[] m_OriginalStrokes;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GrabWidget[] m_ActiveWidgets;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool SquashedLayerWasActive;

		[Token(Token = "0x17000256")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x20E51C0", Offset = "0x20E51C0", VA = "0x20E51C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x20E4FBC", Offset = "0x20E4FBC", VA = "0x20E4FBC")]
		public SquashLayerCommand(int squashedLayerIndex, int destinationLayerIndex, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x20E5190", Offset = "0x20E5190", VA = "0x20E5190")]
		public SquashLayerCommand(CanvasScript squashedLayer, CanvasScript destinationLayer, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x20E5024", Offset = "0x20E5024", VA = "0x20E5024")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x20E51C8", Offset = "0x20E51C8", VA = "0x20E51C8", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x20E5324", Offset = "0x20E5324", VA = "0x20E5324", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class StencilsVisibleCommand : BaseCommand
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_StencilsStartDisabled;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x20E5508", Offset = "0x20E5508", VA = "0x20E5508")]
		public StencilsVisibleCommand([Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x20E558C", Offset = "0x20E558C", VA = "0x20E558C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x20E5600", Offset = "0x20E5600", VA = "0x20E5600", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class SwitchEnvironmentCommand : BaseCommand
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CustomLights m_PrevLights;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CustomEnvironment m_PrevBackdrop;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Environment m_PrevEnvironment;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Environment m_NextEnvironment;

		[Token(Token = "0x17000257")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x20E576C", Offset = "0x20E576C", VA = "0x20E576C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		protected override bool IsNoop
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x20E57F0", Offset = "0x20E57F0", VA = "0x20E57F0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x20E566C", Offset = "0x20E566C", VA = "0x20E566C")]
		public SwitchEnvironmentCommand(Environment nextEnv, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x20E5810", Offset = "0x20E5810", VA = "0x20E5810", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x20E5894", Offset = "0x20E5894", VA = "0x20E5894", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x20E59E8", Offset = "0x20E59E8", VA = "0x20E59E8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021E")]
	public class SymmetryWidgetVisibleCommand : BaseCommand
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_Visible;

		[Token(Token = "0x17000259")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x20E5AD4", Offset = "0x20E5AD4", VA = "0x20E5AD4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x20E5A94", Offset = "0x20E5A94", VA = "0x20E5A94")]
		public SymmetryWidgetVisibleCommand(SymmetryWidget widget, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x20E5AD8", Offset = "0x20E5AD8", VA = "0x20E5AD8", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x20E5BB8", Offset = "0x20E5BB8", VA = "0x20E5BB8", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class UnlockSkyboxCommand : BaseCommand
	{
		[Token(Token = "0x1700025A")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x20E5C9C", Offset = "0x20E5C9C", VA = "0x20E5C9C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x20E5CA0", Offset = "0x20E5CA0", VA = "0x20E5CA0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x20E5CF8", Offset = "0x20E5CF8", VA = "0x20E5CF8", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x20E5D50", Offset = "0x20E5D50", VA = "0x20E5D50")]
		public UnlockSkyboxCommand()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum XrSdkMode
	{
		[Token(Token = "0x4000C38")]
		Monoscopic = -1,
		[Token(Token = "0x4000C39")]
		OpenXR,
		[Token(Token = "0x4000C3A")]
		Oculus,
		[Token(Token = "0x4000C3B")]
		Wave,
		[Token(Token = "0x4000C3C")]
		Pico
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public enum SdkMode
	{
		[Token(Token = "0x4000C3E")]
		Unset = -1,
		[Token(Token = "0x4000C3F")]
		UnityXR,
		[Token(Token = "0x4000C40")]
		Monoscopic,
		[Token(Token = "0x4000C41")]
		Ods
	}
	[Token(Token = "0x2000222")]
	public enum DescriptionType
	{
		[Token(Token = "0x4000C43")]
		None = -1,
		[Token(Token = "0x4000C44")]
		Button,
		[Token(Token = "0x4000C45")]
		Slider,
		[Token(Token = "0x4000C46")]
		PreviewCube
	}
	[Token(Token = "0x2000223")]
	public class Config : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000224")]
		public class BrushReplacement
		{
			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[BrushDescriptor.AsStringGuid]
			public string FromGuid;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[BrushDescriptor.AsStringGuid]
			public string ToGuid;

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x20E7E04", Offset = "0x20E7E04", VA = "0x20E7E04")]
			public BrushReplacement()
			{
			}
		}

		[Token(Token = "0x2000225")]
		private class UserConfigChange
		{
			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo section;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MemberInfo setting;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object value;

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x20E77CC", Offset = "0x20E77CC", VA = "0x20E77CC")]
			public UserConfigChange()
			{
			}
		}

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool kModelWidgetsWaitForLoad;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Config m_SingletonState;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Startup")]
		public string m_FakeCommandLineArgsInEditor;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Overwritten by build process")]
		[SerializeField]
		private PlatformConfig m_PlatformConfig;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SdkMode m_SdkMode;

		[NonSerialized]
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_WasExperimentalAtStartup;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool m_AutoProfile;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_AutoProfileWaitTime;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("App")]
		public SecretsConfig Secrets;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] m_SketchFiles;

		[NonSerialized]
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_QuickLoad;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Header("Ods")]
		public int m_OdsNumFrames;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_OdsFps;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_OdsOutputPath;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string m_OdsOutputPrefix;

		[NonSerialized]
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_OdsPreview;

		[NonSerialized]
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_OdsCollapseIpd;

		[NonSerialized]
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_OdsTurnTableDegrees;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Versioning")]
		public string m_VersionNumber;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_BuildStamp;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Misc")]
		public bool m_UseBatchedBrushes;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool m_EnableBatchMemoryOptimization;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string m_MediaLibraryReadme;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DropperTool m_Dropper;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_AxisManipulationIsResize;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject m_LabsButtonOverlayPrefab;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_GpuIntersectionEnabled;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool m_AutosaveRestoreEnabled;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool m_AllowWidgetPinning;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool m_DebugWebRequest;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool m_ToggleProfileOnAppButton;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Global Shaders")]
		public Shader m_BlitToComputeShader;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Upload and Export")]
		public bool m_ForceDeterministicBirthTimeForExport;

		[NonSerialized]
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<string> m_FilePatternsToExport;

		[NonSerialized]
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string m_ExportPath;

		[NonSerialized]
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string m_VideoPathToRender;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool m_EnableReferenceModelExport;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool m_EnableGlbVersion2;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[Tooltip("Causes the temporary Upload directory to be kept around (Editor only)")]
		public bool m_DebugUpload;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TbtSettings m_TbtSettings;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Header("Loading")]
		public bool m_ReplaceBrushesOnLoad;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private List<BrushReplacement> m_BrushReplacementMap;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string m_IntroSketchUsdFilename;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Range(0.001f, 4f)]
		public float m_IntroSketchSpeed;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool m_IntroLooped;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Header("Description Prefabs")]
		[SerializeField]
		private GameObject m_ButtonDescriptionOneLinePrefab;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_ButtonDescriptionTwoLinesPrefab;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_ButtonDescriptionThreeLinesPrefab;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_SliderDescriptionOneLinePrefab;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject m_SliderDescriptionTwoLinesPrefab;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject m_PreviewCubeDescriptionOneLinePrefab;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject m_PreviewCubeDescriptionTwoLinesPrefab;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Dictionary<Guid, Guid> m_BrushReplacement;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<UserConfigChange> m_UserConfigChanges;

		[Token(Token = "0x1700025B")]
		public SecretsConfig.ServiceAuthData GoogleSecrets
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x20E5D58", Offset = "0x20E5D58", VA = "0x20E5D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		public SecretsConfig.ServiceAuthData SketchfabSecrets
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x20E5D78", Offset = "0x20E5D78", VA = "0x20E5D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public SecretsConfig.ServiceAuthData OculusSecrets
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x20E5D98", Offset = "0x20E5D98", VA = "0x20E5D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public SecretsConfig.ServiceAuthData OculusMobileSecrets
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x20E5DB8", Offset = "0x20E5DB8", VA = "0x20E5DB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public SecretsConfig.ServiceAuthData PimaxSecrets
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x20E5DD8", Offset = "0x20E5DD8", VA = "0x20E5DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public bool IsMobileHardware
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x20E5DF8", Offset = "0x20E5DF8", VA = "0x20E5DF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000261")]
		public bool OfflineRender
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x20E6030", Offset = "0x20E6030", VA = "0x20E6030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public PlatformConfig PlatformConfig
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x20E6064", Offset = "0x20E6064", VA = "0x20E6064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public static bool IsExperimental
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x20E745C", Offset = "0x20E745C", VA = "0x20E745C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x20E5E14", Offset = "0x20E5E14", VA = "0x20E5E14")]
		public GameObject CreateDescriptionFor(DescriptionType type, int numberOfLines)
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x20E606C", Offset = "0x20E606C", VA = "0x20E606C")]
		public Guid GetReplacementBrush(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x20E60F8", Offset = "0x20E60F8", VA = "0x20E60F8")]
		private void ParseArgs(string[] args)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x20E74C4", Offset = "0x20E74C4", VA = "0x20E74C4")]
		public bool GetIsExperimental()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x20E752C", Offset = "0x20E752C", VA = "0x20E752C")]
		public void SetIsExperimental(bool active)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x20E7578", Offset = "0x20E7578", VA = "0x20E7578")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x20E7070", Offset = "0x20E7070", VA = "0x20E7070")]
		private void ParseUserSetting(string setting, string value)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x20E77D4", Offset = "0x20E77D4", VA = "0x20E77D4")]
		public void ApplyUserConfigOverrides(UserConfig userConfig)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x20E7D14", Offset = "0x20E7D14", VA = "0x20E7D14")]
		public Config()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public static class Coords
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TransformExtensions.GlobalAccessor AsRoom;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static TransformExtensions.GlobalAccessor AsGlobal;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static TransformExtensions.LocalAccessor AsLocal;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TransformExtensions.RelativeAccessor AsCanvas;

		[Token(Token = "0x17000264")]
		public static TrTransform CanvasPose
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x20E7E64", Offset = "0x20E7E64", VA = "0x20E7E64")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x20E7E9C", Offset = "0x20E7E9C", VA = "0x20E7E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public static TrTransform CanvasLocalPose
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x20E7EDC", Offset = "0x20E7EDC", VA = "0x20E7EDC")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x20E7F14", Offset = "0x20E7F14", VA = "0x20E7F14")]
			set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public static event CanvasScript.PoseChangedEventHandler CanvasPoseChanged
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x20E7E0C", Offset = "0x20E7E0C", VA = "0x20E7E0C")]
			add
			{
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x20E7E38", Offset = "0x20E7E38", VA = "0x20E7E38")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x20E7F54", Offset = "0x20E7F54", VA = "0x20E7F54")]
		public static void Init(App app)
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class ProfilingManager
	{
		[Serializable]
		[Token(Token = "0x2000228")]
		public enum Mode
		{
			[Token(Token = "0x4000C8F")]
			Standard,
			[Token(Token = "0x4000C90")]
			Light,
			[Token(Token = "0x4000C91")]
			Deep
		}

		[Token(Token = "0x2000229")]
		private struct FrameData
		{
			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float elapsedNanoseconds;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int numCalls;
		}

		[Token(Token = "0x200022A")]
		private struct Sample
		{
			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Recorder recorder;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FrameData> frameData;
		}

		[Token(Token = "0x200022B")]
		[CompilerGenerated]
		private sealed class <Update>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProfilingManager <>4__this;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E15")]
				[Address(RVA = "0x20EA688", Offset = "0x20EA688", VA = "0x20EA688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E17")]
				[Address(RVA = "0x20EA6D0", Offset = "0x20EA6D0", VA = "0x20EA6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x20E908C", Offset = "0x20E908C", VA = "0x20E908C")]
			[DebuggerHidden]
			public <Update>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x20EA3A8", Offset = "0x20EA3A8", VA = "0x20EA3A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x20EA3AC", Offset = "0x20EA3AC", VA = "0x20EA3AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x20EA690", Offset = "0x20EA690", VA = "0x20EA690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilingManager m_Instance;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Profiling;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Mode m_Mode;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<float> m_FrameTimes;

		[Token(Token = "0x4000C8A")]
		private const int k_NumFrames = 450;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_UpdateCoroutine;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] m_ValidFramerates;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Sample> m_Samples;

		[Token(Token = "0x17000266")]
		public static ProfilingManager Instance
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x20E7FE4", Offset = "0x20E7FE4", VA = "0x20E7FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x20E812C", Offset = "0x20E812C", VA = "0x20E812C")]
		public void StartProfiling(Mode mode)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x20E8718", Offset = "0x20E8718", VA = "0x20E8718")]
		public void StopProfiling()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x20E8594", Offset = "0x20E8594", VA = "0x20E8594")]
		private string GetProfilingFilename()
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x20E86B0", Offset = "0x20E86B0", VA = "0x20E86B0")]
		[IteratorStateMachine(typeof(<Update>d__16))]
		private IEnumerator Update()
		{
			return null;
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x20E899C", Offset = "0x20E899C", VA = "0x20E899C")]
		private void OutputStats()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x20E9958", Offset = "0x20E9958", VA = "0x20E9958")]
		private void HumanReadableOutput(StringBuilder output, Statistics.Summary stats, int numBatches, int numTriangles, float[] frameRatePercentages)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x20E9510", Offset = "0x20E9510", VA = "0x20E9510")]
		private void CsvOutput(StringBuilder output, Statistics.Summary stats, int numBatches, int numTriangles, float[] frameRatePercentages, string filename)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x20E9334", Offset = "0x20E9334", VA = "0x20E9334")]
		private void PerfgateOutput(StringBuilder output, float[] frameTimes, int numBatches, int numTriangles, string filename)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x20E8060", Offset = "0x20E8060", VA = "0x20E8060")]
		public ProfilingManager()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public static class SpoofMobileHardware
	{
		[Token(Token = "0x17000269")]
		public static bool MobileHardware
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x20EA92C", Offset = "0x20EA92C", VA = "0x20EA92C")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000230")]
	public static class Statistics
	{
		[Token(Token = "0x2000231")]
		public class Summary
		{
			[Token(Token = "0x1700026A")]
			public float Min
			{
				[Token(Token = "0x6000E24")]
				[Address(RVA = "0x20EA934", Offset = "0x20EA934", VA = "0x20EA934")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E25")]
				[Address(RVA = "0x20EA93C", Offset = "0x20EA93C", VA = "0x20EA93C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700026B")]
			public float Max
			{
				[Token(Token = "0x6000E26")]
				[Address(RVA = "0x20EA944", Offset = "0x20EA944", VA = "0x20EA944")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E27")]
				[Address(RVA = "0x20EA94C", Offset = "0x20EA94C", VA = "0x20EA94C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700026C")]
			public float Median
			{
				[Token(Token = "0x6000E28")]
				[Address(RVA = "0x20EA954", Offset = "0x20EA954", VA = "0x20EA954")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E29")]
				[Address(RVA = "0x20EA95C", Offset = "0x20EA95C", VA = "0x20EA95C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700026D")]
			public float Mean
			{
				[Token(Token = "0x6000E2A")]
				[Address(RVA = "0x20EA964", Offset = "0x20EA964", VA = "0x20EA964")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E2B")]
				[Address(RVA = "0x20EA96C", Offset = "0x20EA96C", VA = "0x20EA96C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700026E")]
			public float InterquartileMean
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0x20EA974", Offset = "0x20EA974", VA = "0x20EA974")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E2D")]
				[Address(RVA = "0x20EA97C", Offset = "0x20EA97C", VA = "0x20EA97C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700026F")]
			public float StandardDeviation
			{
				[Token(Token = "0x6000E2E")]
				[Address(RVA = "0x20EA984", Offset = "0x20EA984", VA = "0x20EA984")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E2F")]
				[Address(RVA = "0x20EA98C", Offset = "0x20EA98C", VA = "0x20EA98C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000270")]
			public float StandardDeviationPcOfMedian
			{
				[Token(Token = "0x6000E30")]
				[Address(RVA = "0x20EA994", Offset = "0x20EA994", VA = "0x20EA994")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E31")]
				[Address(RVA = "0x20EA99C", Offset = "0x20EA99C", VA = "0x20EA99C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000271")]
			public float StandardDeviationPcOfMean
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0x20EA9A4", Offset = "0x20EA9A4", VA = "0x20EA9A4")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E33")]
				[Address(RVA = "0x20EA9AC", Offset = "0x20EA9AC", VA = "0x20EA9AC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000272")]
			public float StandardDeviationPcOfInterquartileMean
			{
				[Token(Token = "0x6000E34")]
				[Address(RVA = "0x20EA9B4", Offset = "0x20EA9B4", VA = "0x20EA9B4")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000E35")]
				[Address(RVA = "0x20EA9BC", Offset = "0x20EA9BC", VA = "0x20EA9BC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x20E90BC", Offset = "0x20E90BC", VA = "0x20E90BC")]
			public Summary(float[] data)
			{
			}
		}
	}
	[Token(Token = "0x2000232")]
	internal class DemoManager : MonoBehaviour
	{
		[Token(Token = "0x2000233")]
		private enum DemoState
		{
			[Token(Token = "0x4000CB5")]
			WaitingForFirstStroke,
			[Token(Token = "0x4000CB6")]
			Standard,
			[Token(Token = "0x4000CB7")]
			FadingOut
		}

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DemoManager m_Instance;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("How many seconds to freeze before resetting.")]
		[SerializeField]
		private float m_TimesUpFadeOutDuration;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Tooltip("How many seconds to fade to black during a manual reset.")]
		private float m_FadeOutDuration;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How many seconds to fade from black after a reset.")]
		[SerializeField]
		private float m_FadeInDuration;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_DemoGuiPrefab;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DemoManagerGui m_DemoGui;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DemoState m_DemoState;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_SecondsRemainingInState;

		[Token(Token = "0x17000273")]
		public bool DemoModeEnabled
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x20EA9D4", Offset = "0x20EA9D4", VA = "0x20EA9D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		public bool ShouldUseCountdownTimer
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x20D9154", Offset = "0x20D9154", VA = "0x20D9154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000275")]
		public string TimeRemaining
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x20D91E8", Offset = "0x20D91E8", VA = "0x20D91E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x20EA9F4", Offset = "0x20EA9F4", VA = "0x20EA9F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x20EAADC", Offset = "0x20EAADC", VA = "0x20EAADC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x20EABD0", Offset = "0x20EABD0", VA = "0x20EABD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x20EAE54", Offset = "0x20EAE54", VA = "0x20EAE54")]
		private void UpdateKeyboardCommands()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x20EAB10", Offset = "0x20EAB10", VA = "0x20EAB10")]
		private void OnSessionStart()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x20EAD8C", Offset = "0x20EAD8C", VA = "0x20EAD8C")]
		private void FadeOut(float duration)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x20EAF90", Offset = "0x20EAF90", VA = "0x20EAF90")]
		public DemoManager()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class DemoManagerGui : MonoBehaviour
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_CountdownTimerUI;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_TimeRemainingText;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x20EAF98", Offset = "0x20EAF98", VA = "0x20EAF98")]
		public DemoManagerGui()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000235")]
	public enum TiltFormat
	{
		[Token(Token = "0x4000CBB")]
		Directory,
		[Token(Token = "0x4000CBC")]
		Inherit,
		[Token(Token = "0x4000CBD")]
		Zip
	}
	[Token(Token = "0x2000236")]
	public class DevOptions : MonoBehaviour
	{
		[Token(Token = "0x4000CBE")]
		private const string OPTIONS_FILE_NAME = "../DevOptions.json";

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DevOptions I;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BufferBeforeZip;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BufferAfterZip;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ResaveLegacyScenes;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool UseAutoProfiler;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AllowStripBreak;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltFormat PreferredTiltFormat;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PointerScript.BrushLerp BrushLerp;

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x20EAFA0", Offset = "0x20EAFA0", VA = "0x20EAFA0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x20EAFEC", Offset = "0x20EAFEC", VA = "0x20EAFEC")]
		public DevOptions()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class DynamicBounds : MonoBehaviour
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] m_BoundsBeams;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] m_BoundsCorners;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_BeamBaseScale;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_BoundsScale;

		[Token(Token = "0x17000276")]
		public Vector3 BoundsScale
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x20EB004", Offset = "0x20EB004", VA = "0x20EB004")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x20EB010", Offset = "0x20EB010", VA = "0x20EB010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x20EB050", Offset = "0x20EB050", VA = "0x20EB050")]
		public void BuildBounds()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x20EB344", Offset = "0x20EB344", VA = "0x20EB344")]
		public DynamicBounds()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class EditTimeAssetReferences : ScriptableObject
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformConfig m_PlatformConfigMobile;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformConfig m_PlatformConfigPc;

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x20EB34C", Offset = "0x20EB34C", VA = "0x20EB34C")]
		public EditTimeAssetReferences()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[CreateAssetMenu(fileName = "Environment", menuName = "Tilt Brush Environment")]
	public class Environment : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200023A")]
		public struct Light
		{
			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Color m_Color;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private float m_Intensity;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 m_Position;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion m_Rotation;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LightType m_Type;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float m_Range;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float m_SpotAngle;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool m_ShadowsEnabled;

			[Token(Token = "0x17000278")]
			public Color Color
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0x20EB7A8", Offset = "0x20EB7A8", VA = "0x20EB7A8")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6000E4F")]
				[Address(RVA = "0x20EB7C8", Offset = "0x20EB7C8", VA = "0x20EB7C8")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200023B")]
		public struct RenderSettingsLite
		{
			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_FogEnabled;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color m_FogColor;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_FogDensity;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_FogStartDistance;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_FogEndDistance;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_ClearColor;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_AmbientColor;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_SkyboxExposure;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color m_SkyboxTint;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string m_EnvironmentPrefab;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string m_EnvironmentReverbZonePrefab;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Cubemap m_SkyboxCubemap;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Cubemap m_ReflectionCubemap;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float m_ReflectionIntensity;

			[Token(Token = "0x17000279")]
			public FogMode m_FogMode
			{
				[Token(Token = "0x6000E50")]
				[Address(RVA = "0x20EB3D8", Offset = "0x20EB3D8", VA = "0x20EB3D8")]
				get
				{
					return default(FogMode);
				}
				[Token(Token = "0x6000E51")]
				[Address(RVA = "0x20EB560", Offset = "0x20EB560", VA = "0x20EB560")]
				set
				{
				}
			}
		}

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableGuid m_Guid;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_Description;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D m_IconTexture;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderSettingsLite m_RenderSettings;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Light> m_Lights;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_TeleportBoundsHalfWidth;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_ControllerXRayHeight;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("Home position for snappable widgets")]
		public Vector3 m_WidgetHome;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material m_DerivedSkyboxMaterial;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color m_SkyboxColorA;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color m_SkyboxColorB;

		[Token(Token = "0x17000277")]
		public Material m_SkyboxMaterial
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x20EB66C", Offset = "0x20EB66C", VA = "0x20EB66C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x20EB354", Offset = "0x20EB354", VA = "0x20EB354")]
		public static void SetRenderSettings(RenderSettingsLite src)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x20EB3E0", Offset = "0x20EB3E0", VA = "0x20EB3E0")]
		public static RenderSettingsLite GetRenderSettings()
		{
			return default(RenderSettingsLite);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x20EB73C", Offset = "0x20EB73C", VA = "0x20EB73C")]
		public Environment()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class EnvironmentCatalog : MonoBehaviour
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EnvironmentCatalog m_Instance;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_SkyboxMaterial;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Environment m_DefaultEnvironment;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IsLoading;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, Environment> m_GuidToEnvironment;

		[Token(Token = "0x1700027A")]
		public IEnumerable<Environment> AllEnvironments
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x20EB914", Offset = "0x20EB914", VA = "0x20EB914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public Environment DefaultEnvironment
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x20EB964", Offset = "0x20EB964", VA = "0x20EB964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public bool IsLoading
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x20EBA08", Offset = "0x20EBA08", VA = "0x20EBA08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action EnvironmentsChanged
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x20EB7DC", Offset = "0x20EB7DC", VA = "0x20EB7DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x20EB878", Offset = "0x20EB878", VA = "0x20EB878")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x20EB96C", Offset = "0x20EB96C", VA = "0x20EB96C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x20EBA10", Offset = "0x20EBA10", VA = "0x20EBA10")]
		public void BeginReload()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x20EBFBC", Offset = "0x20EBFBC", VA = "0x20EBFBC")]
		public Environment GetEnvironment(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x20EC0A0", Offset = "0x20EC0A0", VA = "0x20EC0A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x20EBE54", Offset = "0x20EBE54", VA = "0x20EBE54")]
		private static void LoadEnvironmentsInManifest(List<Environment> output)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x20EC0E0", Offset = "0x20EC0E0", VA = "0x20EC0E0")]
		public EnvironmentCatalog()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class ExceptionRenderScript : MonoBehaviour
	{
		[Token(Token = "0x200023E")]
		public class ExceptionLine
		{
			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Condition;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_StackTrace;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_Lifetime;

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x20EC8F8", Offset = "0x20EC8F8", VA = "0x20EC8F8")]
			public ExceptionLine()
			{
			}
		}

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_TextMesh;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_MaxNumLines;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ExceptionLine> m_Lines;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_LineLifetime;

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x20EC0E8", Offset = "0x20EC0E8", VA = "0x20EC0E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x20EC214", Offset = "0x20EC214", VA = "0x20EC214")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x20EC570", Offset = "0x20EC570", VA = "0x20EC570")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x20EC6CC", Offset = "0x20EC6CC", VA = "0x20EC6CC")]
		public static string StreamlineStackTrace(string stackTrace)
		{
			return null;
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x20EC768", Offset = "0x20EC768", VA = "0x20EC768")]
		private void HandleException(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x20EC34C", Offset = "0x20EC34C", VA = "0x20EC34C")]
		private void UpdateMeshText()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x20EC900", Offset = "0x20EC900", VA = "0x20EC900")]
		public ExceptionRenderScript()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class DynamicExportableMaterial : IExportableMaterial
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Guid m_UniqueName;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string m_DurableName;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_UriBase;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, string> m_TextureUris;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, Vector2> m_TextureSizes;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, float> m_FloatParams;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, Vector3> m_VectorParams;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Color> m_ColorParams;

		[Token(Token = "0x1700027D")]
		public Color BaseColorFactor
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x20ECD8C", Offset = "0x20ECD8C", VA = "0x20ECD8C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x20ECB34", Offset = "0x20ECB34", VA = "0x20ECB34")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public string BaseColorTex
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x20ECDF4", Offset = "0x20ECDF4", VA = "0x20ECDF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x20ECBCC", Offset = "0x20ECBCC", VA = "0x20ECBCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public float MetallicFactor
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x20ECE5C", Offset = "0x20ECE5C", VA = "0x20ECE5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x20ECC9C", Offset = "0x20ECC9C", VA = "0x20ECC9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public float RoughnessFactor
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x20ECEC4", Offset = "0x20ECEC4", VA = "0x20ECEC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x20ECD14", Offset = "0x20ECD14", VA = "0x20ECD14")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public Guid UniqueName
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x20ECF2C", Offset = "0x20ECF2C", VA = "0x20ECF2C", Slot = "4")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x17000282")]
		public string DurableName
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x20ECF38", Offset = "0x20ECF38", VA = "0x20ECF38", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x20ECF40", Offset = "0x20ECF40", VA = "0x20ECF40", Slot = "6")]
			get
			{
				return default(ExportableMaterialBlendMode);
			}
		}

		[Token(Token = "0x17000284")]
		public float EmissiveFactor
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x20ECF5C", Offset = "0x20ECF5C", VA = "0x20ECF5C", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000285")]
		public GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x20ECF64", Offset = "0x20ECF64", VA = "0x20ECF64", Slot = "8")]
			get
			{
				return default(GeometryPool.VertexLayout);
			}
		}

		[Token(Token = "0x17000286")]
		public bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x20ECFB8", Offset = "0x20ECFB8", VA = "0x20ECFB8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000287")]
		public string VertShaderUri
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x20ECFC0", Offset = "0x20ECFC0", VA = "0x20ECFC0", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public string FragShaderUri
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x20ECFDC", Offset = "0x20ECFDC", VA = "0x20ECFDC", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public bool EnableCull
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x20ECFF8", Offset = "0x20ECFF8", VA = "0x20ECFF8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		public string UriBase
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x20ED014", Offset = "0x20ED014", VA = "0x20ED014", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x20ED01C", Offset = "0x20ED01C", VA = "0x20ED01C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x20ED024", Offset = "0x20ED024", VA = "0x20ED024", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x20ED02C", Offset = "0x20ED02C", VA = "0x20ED02C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x20ED034", Offset = "0x20ED034", VA = "0x20ED034", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x20ED03C", Offset = "0x20ED03C", VA = "0x20ED03C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public BrushDescriptor Parent
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x20ED044", Offset = "0x20ED044", VA = "0x20ED044")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x20EC910", Offset = "0x20EC910", VA = "0x20EC910")]
		public DynamicExportableMaterial(BrushDescriptor parent, string durableName, Guid uniqueName, string uriBase)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x20ECFA8", Offset = "0x20ECFA8", VA = "0x20ECFA8", Slot = "9")]
		public bool HasExportTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x20ECFB0", Offset = "0x20ECFB0", VA = "0x20ECFB0", Slot = "10")]
		public string GetExportTextureFilename()
		{
			return null;
		}
	}
	[Token(Token = "0x2000240")]
	public static class Export
	{
		[Token(Token = "0x2000241")]
		private class Progress
		{
			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, float> m_workAmount;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_totalWork;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float m_completedWork;

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0xDC4CEC", Offset = "0xDC4CEC", VA = "0xDC4CEC")]
			public Progress()
			{
			}

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xDC4DA8", Offset = "0xDC4DA8", VA = "0xDC4DA8")]
			public void SetWork(string name, float effort = 1f)
			{
			}

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xDC4EFC", Offset = "0xDC4EFC", VA = "0xDC4EFC")]
			public void CompleteWork(string name)
			{
			}
		}

		[Token(Token = "0x2000242")]
		public class AutoTimer : IDisposable
		{
			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Stopwatch timer;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_tag;

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xDC4FB0", Offset = "0xDC4FB0", VA = "0xDC4FB0")]
			public AutoTimer(string tag)
			{
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xDC5038", Offset = "0xDC5038", VA = "0xDC5038", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000D04")]
		private const string kExportDocumentationUrl = "https://docs.google.com/document/d/11ZsHozYn9FnWG7y3s3WAyKIACfbfwb4PbaS8cZ_xjvo#heading=h.im5f33smiavy";

		[Token(Token = "0x4000D05")]
		private const string kExportReadmeName = "README.txt";

		[Token(Token = "0x4000D06")]
		private const string kExportReadmeBody = "Please see https://docs.google.com/document/d/11ZsHozYn9FnWG7y3s3WAyKIACfbfwb4PbaS8cZ_xjvo#heading=h.im5f33smiavy";

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x20ED04C", Offset = "0x20ED04C", VA = "0x20ED04C")]
		private static string MakeExportPath(string parent, string basename, string ext)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x20ED170", Offset = "0x20ED170", VA = "0x20ED170")]
		public static void ExportScene()
		{
		}
	}
	[Token(Token = "0x2000243")]
	internal class ExportCollector
	{
		[Token(Token = "0x2000244")]
		private struct PrefabGeometry
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Model model;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GeometryPool pool;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IExportableMaterial exportableMaterial;
		}

		[Token(Token = "0x2000247")]
		[CompilerGenerated]
		private sealed class <GetPrefabGameObjs>d__15 : IEnumerable<PrefabGeometry[]>, IEnumerable, IEnumerator<PrefabGeometry[]>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PrefabGeometry[] <>2__current;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Model prefab;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Model <>3__prefab;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ExportUtils.SceneStatePayload payload;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ExportUtils.SceneStatePayload <>3__payload;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<(MeshFilter item, int index)> <>7__wrap1;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private MeshFilter <meshFilter>5__3;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <index>5__4;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private MeshRenderer <renderer>5__5;

			[Token(Token = "0x17000291")]
			private PrefabGeometry[] System.Collections.Generic.IEnumerator<TiltBrush.ExportCollector.PrefabGeometry[]>.Current
			{
				[Token(Token = "0x6000EA7")]
				[Address(RVA = "0xDCAA5C", Offset = "0xDCAA5C", VA = "0xDCAA5C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA9")]
				[Address(RVA = "0xDCAAA4", Offset = "0xDCAAA4", VA = "0xDCAAA4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xDC9EA0", Offset = "0xDC9EA0", VA = "0xDC9EA0")]
			[DebuggerHidden]
			public <GetPrefabGameObjs>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xDCA454", Offset = "0xDCA454", VA = "0xDCA454", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xDCA480", Offset = "0xDCA480", VA = "0xDCA480", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xDCA9AC", Offset = "0xDCA9AC", VA = "0xDCA9AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xDCAA64", Offset = "0xDCAA64", VA = "0xDCAA64", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xDCAAAC", Offset = "0xDCAAAC", VA = "0xDCAAAC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PrefabGeometry[]> System.Collections.Generic.IEnumerable<TiltBrush.ExportCollector.PrefabGeometry[]>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xDCAB58", Offset = "0xDCAB58", VA = "0xDCAB58", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000248")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Model prefab;

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xDCAB5C", Offset = "0xDCAB5C", VA = "0xDCAB5C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xDCAB64", Offset = "0xDCAB64", VA = "0xDCAB64")]
			internal IExportableMaterial <GetPrefabGameObjMeshes>b__0(Material mat)
			{
				return null;
			}
		}

		[Token(Token = "0x2000249")]
		[CompilerGenerated]
		private sealed class <GetPrefabGameObjMeshes>d__16 : IEnumerable<PrefabGeometry>, IEnumerable, IEnumerator<PrefabGeometry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PrefabGeometry <>2__current;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Model prefab;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Model <>3__prefab;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Material[] meshMaterials;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Material[] <>3__meshMaterials;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Mesh mesh;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Mesh <>3__mesh;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private ExportUtils.SceneStatePayload payload;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public ExportUtils.SceneStatePayload <>3__payload;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int meshIndex;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public int <>3__meshIndex;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private string <exportName>5__2;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IExportableMaterial[] <exportableMaterials>5__3;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private GeometryPool[] <subMeshPools>5__4;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <subMeshIndex>5__5;

			[Token(Token = "0x17000293")]
			private PrefabGeometry System.Collections.Generic.IEnumerator<TiltBrush.ExportCollector.PrefabGeometry>.Current
			{
				[Token(Token = "0x6000EB1")]
				[Address(RVA = "0xDCB2BC", Offset = "0xDCB2BC", VA = "0xDCB2BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PrefabGeometry);
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB3")]
				[Address(RVA = "0xDCB30C", Offset = "0xDCB30C", VA = "0xDCB30C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0xDC9F7C", Offset = "0xDC9F7C", VA = "0xDC9F7C")]
			[DebuggerHidden]
			public <GetPrefabGameObjMeshes>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xDCAB80", Offset = "0xDCAB80", VA = "0xDCAB80", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0xDCAB84", Offset = "0xDCAB84", VA = "0xDCAB84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xDCB2CC", Offset = "0xDCB2CC", VA = "0xDCB2CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xDCB36C", Offset = "0xDCB36C", VA = "0xDCB36C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PrefabGeometry> System.Collections.Generic.IEnumerable<TiltBrush.ExportCollector.PrefabGeometry>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xDCB430", Offset = "0xDCB430", VA = "0xDCB430", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Guid kPbrTransparentGuid;

		[Token(Token = "0x4000D0D")]
		private const float kRefimageMetallicFactor = 0f;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xDC519C", Offset = "0xDC519C", VA = "0xDC519C")]
		public static ExportUtils.SceneStatePayload GetExportPayload(AxisConvention axes, bool includeLocalMediaContent = false, [Optional] string temporaryDirectory)
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xDC61A4", Offset = "0xDC61A4", VA = "0xDC61A4")]
		private static void BuildGenerator(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xDC6214", Offset = "0xDC6214", VA = "0xDC6214")]
		private static void BuildEnvironment(ExportUtils.SceneStatePayload payload, bool includeSkyCubemap = false)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xDC639C", Offset = "0xDC639C", VA = "0xDC639C")]
		private static void BuildLights(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xDC73C8", Offset = "0xDC73C8", VA = "0xDC73C8")]
		private static void BuildEmptyXforms(ExportUtils.SceneStatePayload payload, IEnumerable<MediaWidget> widgets)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xDC6678", Offset = "0xDC6678", VA = "0xDC6678")]
		private static void BuildBrushMeshes(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xDC82A0", Offset = "0xDC82A0", VA = "0xDC82A0")]
		private static void BuildBrushMeshesFromExportCanvas(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xDC8B54", Offset = "0xDC8B54", VA = "0xDC8B54")]
		private static ExportUtils.GroupPayload BuildGroupPayload(ExportUtils.SceneStatePayload payload, ExportUtils.ExportGroup exportGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xDC9B5C", Offset = "0xDC9B5C", VA = "0xDC9B5C")]
		private static Guid MakeDeterministicUniqueName(Guid descriptor, ReferenceImage ri, int id)
		{
			return default(Guid);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xDC7810", Offset = "0xDC7810", VA = "0xDC7810")]
		private static DynamicExportableMaterial CreateImageQuadMaterial(ReferenceImage ri)
		{
			return null;
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xDC79C0", Offset = "0xDC79C0", VA = "0xDC79C0")]
		private static ExportUtils.ImageQuadPayload BuildImageQuadPayload(ExportUtils.SceneStatePayload payload, ImageWidget widget, DynamicExportableMaterial material, int id)
		{
			return null;
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xDC66CC", Offset = "0xDC66CC", VA = "0xDC66CC")]
		private static void BuildModelsAsModelMeshes(ExportUtils.SceneStatePayload payload, IEnumerable<ModelWidget> modelWidgets)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xDC9C44", Offset = "0xDC9C44", VA = "0xDC9C44")]
		[IteratorStateMachine(typeof(<GetPrefabGameObjs>d__15))]
		private static IEnumerable<PrefabGeometry[]> GetPrefabGameObjs(ExportUtils.SceneStatePayload payload, Model prefab)
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xDC9ED4", Offset = "0xDC9ED4", VA = "0xDC9ED4")]
		[IteratorStateMachine(typeof(<GetPrefabGameObjMeshes>d__16))]
		private static IEnumerable<PrefabGeometry> GetPrefabGameObjMeshes(Mesh mesh, Material[] meshMaterials, ExportUtils.SceneStatePayload payload, Model prefab, int meshIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xDC9FB0", Offset = "0xDC9FB0", VA = "0xDC9FB0")]
		public ExportCollector()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class ExportFileReference
	{
		[Token(Token = "0x200024B")]
		public class DisambiguationContext
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<string> m_exportedFileNames;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, ExportFileReference> m_filesByOriginalLocation;

			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xDCBD04", Offset = "0xDCBD04", VA = "0xDCBD04")]
			public DisambiguationContext()
			{
			}
		}

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool m_local;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string m_originalLocation;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string m_uri;

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xDCB434", Offset = "0xDCB434", VA = "0xDCB434")]
		private static string GetFullPathForUri(string sourceUri, string uriBase)
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xDCB670", Offset = "0xDCB670", VA = "0xDCB670")]
		public static bool IsHttp(string uri)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xDCB6FC", Offset = "0xDCB6FC", VA = "0xDCB6FC")]
		public static ExportFileReference CreateSafeLocal(string originalLocation, string unsafeName)
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xDCB720", Offset = "0xDCB720", VA = "0xDCB720")]
		public static ExportFileReference CreateLocal(string originalLocation, string name)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xDCB88C", Offset = "0xDCB88C", VA = "0xDCB88C")]
		public static ExportFileReference CreateHttp(string uri)
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xDCB94C", Offset = "0xDCB94C", VA = "0xDCB94C")]
		public static ExportFileReference GetOrCreateSafeLocal(DisambiguationContext disambiguationContext, string sourceUri, string uriBase, [Optional] string suggestedName)
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xDCB850", Offset = "0xDCB850", VA = "0xDCB850")]
		private ExportFileReference(bool local, string originalLocation, string uri)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xDCBC8C", Offset = "0xDCBC8C", VA = "0xDCBC8C")]
		public string AsJson()
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xDCBCFC", Offset = "0xDCBCFC", VA = "0xDCBCFC")]
		public bool IsHttp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024C")]
	public class ExportGlTF
	{
		[Token(Token = "0x200024D")]
		public struct ExportResults
		{
			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool success;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int numTris;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string[] exportedFiles;
		}

		[Serializable]
		[Token(Token = "0x200024E")]
		public class ExportManifest
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tiltBrushVersion;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tiltBrushBuildStamp;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<Guid, ExportedBrush> brushes;

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xDCDEB8", Offset = "0xDCDEB8", VA = "0xDCDEB8")]
			public ExportManifest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200024F")]
		public class ExportedBrush
		{
			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Guid guid;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderName;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string shaderVersion;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string vertexShader;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fragmentShader;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExportableMaterialBlendMode blendMode;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool enableCull;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Dictionary<string, string> textures;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Dictionary<string, Vector2> textureSizes;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Dictionary<string, float> floatParams;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Dictionary<string, Vector3> vectorParams;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Dictionary<string, Color> colorParams;

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xDCDF34", Offset = "0xDCDF34", VA = "0xDCDF34")]
			public ExportedBrush()
			{
			}
		}

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GlTF_ScriptableExporter m_exporter;

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xDCBDC4", Offset = "0xDCBDC4", VA = "0xDCBDC4")]
		public ExportResults ExportBrushStrokes(string outputFile, AxisConvention axes, bool binary, bool doExtras, bool includeLocalMediaContent, int gltfVersion, bool selfContained = false)
		{
			return default(ExportResults);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xDCBF08", Offset = "0xDCBF08", VA = "0xDCBF08")]
		private ExportResults ExportHelper(ExportUtils.SceneStatePayload payload, string outputFile, bool binary, bool doExtras, int gltfVersion, bool allowHttpUri)
		{
			return default(ExportResults);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xDCDBBC", Offset = "0xDCDBBC", VA = "0xDCDBBC")]
		private static string CommaFormattedFloatRGB(Color c)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xDCDC8C", Offset = "0xDCDC8C", VA = "0xDCDC8C")]
		private static string CommaFormattedVector3(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xDCC4A4", Offset = "0xDCC4A4", VA = "0xDCC4A4")]
		private void SetExtras(GlTF_ScriptableExporter exporter, ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xDCDD5C", Offset = "0xDCDD5C", VA = "0xDCDD5C")]
		public GlTF_Node GetGroupNode(uint groupId)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xDCCADC", Offset = "0xDCCADC", VA = "0xDCCADC")]
		private void WriteObjectsAndConnections(GlTF_ScriptableExporter exporter, ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xDCDEB0", Offset = "0xDCDEB0", VA = "0xDCDEB0")]
		public ExportGlTF()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public static class ExportRaw
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xDCE1B0", Offset = "0xDCE1B0", VA = "0xDCE1B0")]
		public static bool Export(string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xDCEA94", Offset = "0xDCEA94", VA = "0xDCEA94")]
		private static void DestroyFile(string path)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xDCE7A4", Offset = "0xDCE7A4", VA = "0xDCE7A4")]
		private static void WriteBrushes(JsonWriter json, Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xDCEAD0", Offset = "0xDCEAD0", VA = "0xDCEAD0")]
		private static void WriteBrush(JsonWriter json, BrushDescriptor brush)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xDCE5F8", Offset = "0xDCE5F8", VA = "0xDCE5F8")]
		private static void WriteStrokes(JsonWriter json, out Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xDCEBF4", Offset = "0xDCEBF4", VA = "0xDCEBF4")]
		private static void WriteStroke(JsonWriter json, Stroke stroke, Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xDCEF18", Offset = "0xDCEF18", VA = "0xDCEF18")]
		private static void WriteMesh(JsonWriter json, Mesh mesh, GeometryPool.VertexLayout layout)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xDCF2C4", Offset = "0xDCF2C4", VA = "0xDCF2C4")]
		private static void WriteUvChannel(JsonWriter json, int channel, int numComponents, Mesh mesh, int n)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xDCF260", Offset = "0xDCF260", VA = "0xDCF260")]
		private static void WriteArray(JsonWriter json, string name, byte[] buf)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xDCF5BC", Offset = "0xDCF5BC", VA = "0xDCF5BC")]
		private static byte[] AsByte(Color32[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xDCF7A8", Offset = "0xDCF7A8", VA = "0xDCF7A8")]
		private static byte[] AsByte(int[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xDCF878", Offset = "0xDCF878", VA = "0xDCF878")]
		private static byte[] AsByte(Vector2[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xDCF140", Offset = "0xDCF140", VA = "0xDCF140")]
		private static byte[] AsByte(Vector3[] a, int n, bool flip = false)
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xDCF68C", Offset = "0xDCF68C", VA = "0xDCF68C")]
		private static byte[] AsByte(Vector4[] a, int n, bool flip = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000252")]
	public static class ExportStl
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xDCF948", Offset = "0xDCF948", VA = "0xDCF948")]
		public static void Export(string outputFile)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public static class ExportUtils
	{
		[Token(Token = "0x2000254")]
		[UsedImplicitly(ImplicitUseTargetFlags.Members)]
		public class ExportCanvas
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasScript m_canvas;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0xDD0794", Offset = "0xDD0794", VA = "0xDD0794")]
			public ExportCanvas(CanvasScript canvas, IEnumerable<Stroke> strokes)
			{
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xDD14E8", Offset = "0xDD14E8", VA = "0xDD14E8")]
			public ExportCanvas(IGrouping<CanvasScript, Stroke> group)
			{
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xDC899C", Offset = "0xDC899C", VA = "0xDC899C")]
			public IEnumerable<ExportGroup> SplitByGroup()
			{
				return null;
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xDD15C0", Offset = "0xDD15C0", VA = "0xDD15C0")]
			public IEnumerable<ExportBrush> SplitByBrush()
			{
				return null;
			}
		}

		[Token(Token = "0x2000256")]
		public class ExportGroup
		{
			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchGroupTag m_group;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xDD185C", Offset = "0xDD185C", VA = "0xDD185C")]
			public ExportGroup(IGrouping<SketchGroupTag, Stroke> group)
			{
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xDC9740", Offset = "0xDC9740", VA = "0xDC9740")]
			public IEnumerable<ExportBrush> SplitByBrush()
			{
				return null;
			}
		}

		[Token(Token = "0x2000258")]
		public class ExportBrush
		{
			[Token(Token = "0x2000259")]
			public struct PoolAndStrokes
			{
				[Token(Token = "0x4000D69")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GeometryPool pool;

				[Token(Token = "0x4000D6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public List<Stroke> strokes;
			}

			[Token(Token = "0x200025B")]
			[CompilerGenerated]
			private sealed class <PreserveBatchResidency>d__5 : IEnumerable<Stroke>, IEnumerable, IEnumerator<Stroke>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000D6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000D6F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Stroke <>2__current;

				[Token(Token = "0x4000D70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4000D71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerable<Stroke> input;

				[Token(Token = "0x4000D72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public IEnumerable<Stroke> <>3__input;

				[Token(Token = "0x4000D73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private IEnumerator<IGrouping<GeometryPool, Stroke>> <>7__wrap1;

				[Token(Token = "0x4000D74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private GeometryPool <pool>5__3;

				[Token(Token = "0x4000D75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private Mesh <previousBackingMesh>5__4;

				[Token(Token = "0x4000D76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private IEnumerator<Stroke> <>7__wrap4;

				[Token(Token = "0x17000295")]
				private Stroke System.Collections.Generic.IEnumerator<TiltBrush.Stroke>.Current
				{
					[Token(Token = "0x6000F0C")]
					[Address(RVA = "0xDD2C20", Offset = "0xDD2C20", VA = "0xDD2C20", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000296")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000F0E")]
					[Address(RVA = "0xDD2C68", Offset = "0xDD2C68", VA = "0xDD2C68", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6000F07")]
				[Address(RVA = "0xDD1C58", Offset = "0xDD1C58", VA = "0xDD1C58")]
				[DebuggerHidden]
				public <PreserveBatchResidency>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x6000F08")]
				[Address(RVA = "0xDD236C", Offset = "0xDD236C", VA = "0xDD236C", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000F09")]
				[Address(RVA = "0xDD2424", Offset = "0xDD2424", VA = "0xDD2424", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000F0A")]
				[Address(RVA = "0xDD2B70", Offset = "0xDD2B70", VA = "0xDD2B70")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x6000F0B")]
				[Address(RVA = "0xDD2AC0", Offset = "0xDD2AC0", VA = "0xDD2AC0")]
				private void <>m__Finally2()
				{
				}

				[Token(Token = "0x6000F0D")]
				[Address(RVA = "0xDD2C28", Offset = "0xDD2C28", VA = "0xDD2C28", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6000F0F")]
				[Address(RVA = "0xDD2C70", Offset = "0xDD2C70", VA = "0xDD2C70", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<Stroke> System.Collections.Generic.IEnumerable<TiltBrush.Stroke>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6000F10")]
				[Address(RVA = "0xDD2D14", Offset = "0xDD2D14", VA = "0xDD2D14", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x200025C")]
			[CompilerGenerated]
			private sealed class <ToGeometryBatches>d__8 : IEnumerable<PoolAndStrokes>, IEnumerable, IEnumerator<PoolAndStrokes>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000D77")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000D78")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private PoolAndStrokes <>2__current;

				[Token(Token = "0x4000D79")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4000D7A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public ExportBrush <>4__this;

				[Token(Token = "0x4000D7B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int vertexLimit;

				[Token(Token = "0x4000D7C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				public int <>3__vertexLimit;

				[Token(Token = "0x4000D7D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private GeometryPool.VertexLayout <layout>5__2;

				[Token(Token = "0x4000D7E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private IEnumerator<Stroke> <>7__wrap2;

				[Token(Token = "0x4000D7F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				private Stroke <stroke>5__4;

				[Token(Token = "0x17000297")]
				private PoolAndStrokes System.Collections.Generic.IEnumerator<TiltBrush.ExportUtils.ExportBrush.PoolAndStrokes>.Current
				{
					[Token(Token = "0x6000F15")]
					[Address(RVA = "0xDD350C", Offset = "0xDD350C", VA = "0xDD350C", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return default(PoolAndStrokes);
					}
				}

				[Token(Token = "0x17000298")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000F17")]
					[Address(RVA = "0xDD3558", Offset = "0xDD3558", VA = "0xDD3558", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6000F11")]
				[Address(RVA = "0xDD22A8", Offset = "0xDD22A8", VA = "0xDD22A8")]
				[DebuggerHidden]
				public <ToGeometryBatches>d__8(int <>1__state)
				{
				}

				[Token(Token = "0x6000F12")]
				[Address(RVA = "0xDD2D18", Offset = "0xDD2D18", VA = "0xDD2D18", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000F13")]
				[Address(RVA = "0xDD2D34", Offset = "0xDD2D34", VA = "0xDD2D34", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000F14")]
				[Address(RVA = "0xDD345C", Offset = "0xDD345C", VA = "0xDD345C")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x6000F16")]
				[Address(RVA = "0xDD3518", Offset = "0xDD3518", VA = "0xDD3518", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6000F18")]
				[Address(RVA = "0xDD35B4", Offset = "0xDD35B4", VA = "0xDD35B4", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<PoolAndStrokes> System.Collections.Generic.IEnumerable<TiltBrush.ExportUtils.ExportBrush.PoolAndStrokes>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6000F19")]
				[Address(RVA = "0xDD3660", Offset = "0xDD3660", VA = "0xDD3660", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor m_desc;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xDD19AC", Offset = "0xDD19AC", VA = "0xDD19AC")]
			public ExportBrush(IGrouping<Guid, Stroke> group)
			{
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xDD1BB0", Offset = "0xDD1BB0", VA = "0xDD1BB0")]
			private static GeometryPool GetPool(Stroke stroke)
			{
				return null;
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xDD1BE0", Offset = "0xDD1BE0", VA = "0xDD1BE0")]
			[IteratorStateMachine(typeof(<PreserveBatchResidency>d__5))]
			private IEnumerable<Stroke> PreserveBatchResidency(IEnumerable<Stroke> input)
			{
				return null;
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xDD1C8C", Offset = "0xDD1C8C", VA = "0xDD1C8C")]
			private static void AugmentWithTimestamps(GeometryPool pool, ref List<Vector3> timestamps)
			{
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xDD1DF8", Offset = "0xDD1DF8", VA = "0xDD1DF8")]
			private static void AppendTimestamps(Stroke stroke, int numVerts, List<Vector3> timestamps)
			{
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xDC98F8", Offset = "0xDC98F8", VA = "0xDC98F8")]
			[IteratorStateMachine(typeof(<ToGeometryBatches>d__8))]
			public IEnumerable<PoolAndStrokes> ToGeometryBatches(int vertexLimit = 65534)
			{
				return null;
			}
		}

		[Token(Token = "0x200025D")]
		public class DeterministicIdGenerator
		{
			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, int> m_instanceIdToId;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nextAvailable;

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xDC7F9C", Offset = "0xDC7F9C", VA = "0xDC7F9C")]
			public int GetIdFromInstanceId(UnityEngine.Object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xDD3664", Offset = "0xDD3664", VA = "0xDD3664")]
			public DeterministicIdGenerator()
			{
			}
		}

		[Token(Token = "0x200025E")]
		public class SceneStatePayload
		{
			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string generator;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DeterministicIdGenerator idGenerator;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly AxisConvention axes;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public readonly bool reverseWinding;

			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public readonly float exportUnitsFromAppUnits;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public EnvPayload env;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LightsPayload lights;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<GroupPayload> groups;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GroupIdMapping groupIdMapping;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<ModelMeshPayload> modelMeshes;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public List<ImageQuadPayload> imageQuads;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public List<XformPayload> referenceThings;

			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public readonly string temporaryDirectory;

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xDC5F14", Offset = "0xDC5F14", VA = "0xDC5F14")]
			public SceneStatePayload(AxisConvention axes, string temporaryDirectory)
			{
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xDD376C", Offset = "0xDD376C", VA = "0xDD376C")]
			public void Destroy()
			{
			}
		}

		[Token(Token = "0x200025F")]
		public class GroupPayload
		{
			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint id;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BrushMeshPayload> brushMeshes;

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xDD39C0", Offset = "0xDD39C0", VA = "0xDD39C0")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xDC96C4", Offset = "0xDC96C4", VA = "0xDC96C4")]
			public GroupPayload()
			{
			}
		}

		[Token(Token = "0x2000260")]
		public class EnvPayload
		{
			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Guid guid;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string description;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Cubemap skyCubemap;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useGradient;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Color skyColorA;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color skyColorB;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 skyGradientDir;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Color fogColor;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public float fogDensity;

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xDD36E8", Offset = "0xDD36E8", VA = "0xDD36E8")]
			public EnvPayload()
			{
			}
		}

		[Token(Token = "0x2000261")]
		public class LightPayload
		{
			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightType type;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string legacyUniqueName;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color lightColor;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Matrix4x4 xform;

			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xDC8080", Offset = "0xDC8080", VA = "0xDC8080")]
			public LightPayload()
			{
			}
		}

		[Token(Token = "0x2000262")]
		[UsedImplicitly(ImplicitUseTargetFlags.Members)]
		public class LightsPayload
		{
			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color ambientColor;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<LightPayload> lights;

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xDD36F0", Offset = "0xDD36F0", VA = "0xDD36F0")]
			public LightsPayload()
			{
			}
		}

		[Token(Token = "0x2000263")]
		public abstract class BaseMeshPayload
		{
			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string legacyUniqueName;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string nodeName;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4 xform;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GeometryPool geometry;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string geometryName;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public IExportableMaterial exportableMaterial;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public readonly uint group;

			[Token(Token = "0x17000299")]
			public abstract string MeshNamespace
			{
				[Token(Token = "0x6000F24")]
				get;
			}

			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xDD3B38", Offset = "0xDD3B38", VA = "0xDD3B38")]
			protected BaseMeshPayload(uint groupId)
			{
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xDD3B14", Offset = "0xDD3B14", VA = "0xDD3B14")]
			public void Destroy()
			{
			}
		}

		[Token(Token = "0x2000264")]
		public class ImageQuadPayload : BaseMeshPayload
		{
			[Token(Token = "0x1700029A")]
			public override string MeshNamespace
			{
				[Token(Token = "0x6000F26")]
				[Address(RVA = "0xDD3BA4", Offset = "0xDD3BA4", VA = "0xDD3BA4", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F27")]
			[Address(RVA = "0xDC9C40", Offset = "0xDC9C40", VA = "0xDC9C40")]
			public ImageQuadPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x2000265")]
		public class ModelMeshPayload : BaseMeshPayload
		{
			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Model model;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int modelId;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Matrix4x4 parentXform;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public Matrix4x4 localXform;

			[Token(Token = "0x1700029B")]
			public override string MeshNamespace
			{
				[Token(Token = "0x6000F28")]
				[Address(RVA = "0xDD3BE4", Offset = "0xDD3BE4", VA = "0xDD3BE4", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xDC9E9C", Offset = "0xDC9E9C", VA = "0xDC9E9C")]
			public ModelMeshPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x2000266")]
		public class BrushMeshPayload : BaseMeshPayload
		{
			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public List<Stroke> strokes;

			[Token(Token = "0x1700029C")]
			public override string MeshNamespace
			{
				[Token(Token = "0x6000F2A")]
				[Address(RVA = "0xDD3CE8", Offset = "0xDD3CE8", VA = "0xDD3CE8", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xDC9B58", Offset = "0xDC9B58", VA = "0xDC9B58")]
			public BrushMeshPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x2000267")]
		public class XformPayload
		{
			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly uint group;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4 xform;

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xDC8278", Offset = "0xDC8278", VA = "0xDC8278")]
			public XformPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x4000D55")]
		public const string kBuiltInPrefix = "tiltbrush://";

		[Token(Token = "0x4000D56")]
		public const string kShaderDirectory = "shaders/brushes";

		[Token(Token = "0x4000D57")]
		public const string kProjectRelativeBrushExportRoot = "Support/TiltBrush.com/shaders/brushes";

		[Token(Token = "0x4000D58")]
		public const string kProjectRelativeEnvironmentExportRoot = "Support/TiltBrush.com/environments";

		[Token(Token = "0x4000D59")]
		public const string kProjectRelativeTextureExportRoot = "Support/TiltBrush.com/textures";

		[Token(Token = "0x4000D5A")]
		public const string kProjectRelativeSupportBrushTexturesRoot = "Support/shaders/brushes";

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xDD042C", Offset = "0xDD042C", VA = "0xDD042C")]
		public static ExportCanvas ExportMainCanvas()
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xDC864C", Offset = "0xDC864C", VA = "0xDC864C")]
		public static ExportCanvas ExportAllCanvasesIgnoreLayers()
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xDD080C", Offset = "0xDD080C", VA = "0xDD080C")]
		public static List<ExportCanvas> ExportAllCanvases()
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xDC9980", Offset = "0xDC9980", VA = "0xDC9980")]
		public static void ConvertUnitsAndChangeBasis(GeometryPool pool, SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xDD0D1C", Offset = "0xDD0D1C", VA = "0xDD0D1C")]
		private static void ConvertScaleAndChangeBasis(GeometryPool pool, float unitChange, Matrix4x4 basisChange)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xDD0E6C", Offset = "0xDD0E6C", VA = "0xDD0E6C")]
		public static List<Color> ConvertToLinearColorspace(List<Color32> srgb)
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xDD0FB8", Offset = "0xDD0FB8", VA = "0xDD0FB8")]
		public static void ConvertToSrgbColorspace(Color[] linear)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xDC99C8", Offset = "0xDC99C8", VA = "0xDC99C8")]
		public static void ReverseTriangleWinding(GeometryPool pool, int indexA, int indexB)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xDD1058", Offset = "0xDD1058", VA = "0xDD1058")]
		public static Matrix4x4 ChangeBasis(Matrix4x4 xfInput, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xDD10FC", Offset = "0xDD10FC", VA = "0xDD10FC")]
		public static TrTransform ChangeBasis(TrTransform xfInput, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xDD124C", Offset = "0xDD124C", VA = "0xDD124C")]
		public static void ChangeBasis(Vector3 inputTranslation, Quaternion inputRotation, Vector3 inputScale, out Vector3 translation, out Quaternion rotation, out Vector3 scale, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xDC9CCC", Offset = "0xDC9CCC", VA = "0xDC9CCC")]
		public static Matrix4x4 ChangeBasis(TrTransform xfInput, SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xDC8088", Offset = "0xDC8088", VA = "0xDC8088")]
		public static Matrix4x4 ChangeBasis(Transform xfInput, SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xDD0C78", Offset = "0xDD0C78", VA = "0xDD0C78")]
		public static Matrix4x4 GetFromUnity_Axes(SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xDCC90C", Offset = "0xDCC90C", VA = "0xDCC90C")]
		public static string GetTexturePath(Texture texture)
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xDCBACC", Offset = "0xDCBACC", VA = "0xDCBACC")]
		public static string CreateUniqueName(string originalName, HashSet<string> names)
		{
			return null;
		}
	}
	[Token(Token = "0x200026C")]
	public static class ExportVrml
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xDD4148", Offset = "0xDD4148", VA = "0xDD4148")]
		public static bool Export(string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xDD48E4", Offset = "0xDD48E4", VA = "0xDD48E4")]
		private static void AppendVertex(ref StringBuilder buffer, GeometryPool pool, int i)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xDD4C50", Offset = "0xDD4C50", VA = "0xDD4C50")]
		private static void AppendTriangle(ref StringBuilder buffer, GeometryPool pool, int j, int chunkStartingVertex)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xDD4FA8", Offset = "0xDD4FA8", VA = "0xDD4FA8")]
		private static void AppendColorRGB(ref StringBuilder buffer, Color32 lastColor)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xDD51D8", Offset = "0xDD51D8", VA = "0xDD51D8")]
		private static void AppendColorA(ref StringBuilder buffer, Color32 lastColor)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xDD47C0", Offset = "0xDD47C0", VA = "0xDD47C0")]
		private static void AppendSceneHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xDD5324", Offset = "0xDD5324", VA = "0xDD5324")]
		private static void AppendSceneFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xDD4814", Offset = "0xDD4814", VA = "0xDD4814")]
		private static void AppendchunkHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xDD4890", Offset = "0xDD4890", VA = "0xDD4890")]
		private static void AppendchunkVerticesHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xDD4BA8", Offset = "0xDD4BA8", VA = "0xDD4BA8")]
		private static void AppendchunkVerticesFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xDD4BFC", Offset = "0xDD4BFC", VA = "0xDD4BFC")]
		private static void AppendchunkTrianglesHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xDD4F00", Offset = "0xDD4F00", VA = "0xDD4F00")]
		private static void AppendchunkTrianglesFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xDD4F54", Offset = "0xDD4F54", VA = "0xDD4F54")]
		private static void AppendchunkAppearanceHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xDD527C", Offset = "0xDD527C", VA = "0xDD527C")]
		private static void AppendchunkAppearanceFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xDD52D0", Offset = "0xDD52D0", VA = "0xDD52D0")]
		private static void AppendchunkFooter(ref StringBuilder buffer)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public static class FbxUtils
	{
		[Token(Token = "0x4000DBF")]
		public const string kRequiredToolkitVersion = "16.0";

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xDD5378", Offset = "0xDD5378", VA = "0xDD5378")]
		public static void ApplyFbxTexcoordHack(GeometryPool pool)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public enum ExportableMaterialBlendMode
	{
		[Token(Token = "0x4000DC1")]
		None,
		[Token(Token = "0x4000DC2")]
		AlphaMask,
		[Token(Token = "0x4000DC3")]
		AdditiveBlend,
		[Token(Token = "0x4000DC4")]
		AlphaBlend
	}
	[Token(Token = "0x200026F")]
	public interface IExportableMaterial
	{
		[Token(Token = "0x1700029D")]
		Guid UniqueName
		{
			[Token(Token = "0x6000F4E")]
			get;
		}

		[Token(Token = "0x1700029E")]
		string DurableName
		{
			[Token(Token = "0x6000F4F")]
			get;
		}

		[Token(Token = "0x1700029F")]
		ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x6000F50")]
			get;
		}

		[Token(Token = "0x170002A0")]
		float EmissiveFactor
		{
			[Token(Token = "0x6000F51")]
			get;
		}

		[Token(Token = "0x170002A1")]
		GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x6000F52")]
			get;
		}

		[Token(Token = "0x170002A2")]
		string UriBase
		{
			[Token(Token = "0x6000F55")]
			get;
		}

		[Token(Token = "0x170002A3")]
		bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x6000F56")]
			get;
		}

		[Token(Token = "0x170002A4")]
		string VertShaderUri
		{
			[Token(Token = "0x6000F57")]
			get;
		}

		[Token(Token = "0x170002A5")]
		string FragShaderUri
		{
			[Token(Token = "0x6000F58")]
			get;
		}

		[Token(Token = "0x170002A6")]
		bool EnableCull
		{
			[Token(Token = "0x6000F59")]
			get;
		}

		[Token(Token = "0x170002A7")]
		Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x6000F5A")]
			get;
		}

		[Token(Token = "0x170002A8")]
		Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x6000F5B")]
			get;
		}

		[Token(Token = "0x170002A9")]
		Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x6000F5C")]
			get;
		}

		[Token(Token = "0x170002AA")]
		Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x6000F5D")]
			get;
		}

		[Token(Token = "0x170002AB")]
		Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x6000F5E")]
			get;
		}

		[Token(Token = "0x6000F53")]
		bool HasExportTexture();

		[Token(Token = "0x6000F54")]
		string GetExportTextureFilename();
	}
	[Token(Token = "0x2000270")]
	public class ImportMaterialCollector : IImportMaterialCollector
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string m_AssetLocation;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Guid m_guidNamespace;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Material, IExportableMaterial> m_MaterialToIem;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_numAdded;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xDD5458", Offset = "0xDD5458", VA = "0xDD5458")]
		public ImportMaterialCollector(string assetLocation, string uniqueSeed)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xDD5550", Offset = "0xDD5550", VA = "0xDD5550", Slot = "4")]
		public void Add(GltfMaterialConverter.UnityMaterial um, GltfMaterialBase gltfMaterial)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xDD5888", Offset = "0xDD5888", VA = "0xDD5888")]
		[Pure]
		public Guid MakeDeterministicUniqueName(int data, string data2)
		{
			return default(Guid);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xDD5968", Offset = "0xDD5968", VA = "0xDD5968")]
		public IExportableMaterial GetExportableMaterial(Material unityMaterial)
		{
			return null;
		}
	}
	[Token(Token = "0x2000271")]
	public class TiltBrushUriLoader : IUriLoader
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_uriBase;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IUriLoader m_delegate;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_loadImages;

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xDD59E0", Offset = "0xDD59E0", VA = "0xDD59E0")]
		public TiltBrushUriLoader(string glbPath, string uriBase, bool loadImages)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xDD5A7C", Offset = "0xDD5A7C", VA = "0xDD5A7C", Slot = "4")]
		public IBufferReader Load(string uri)
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xDD5B5C", Offset = "0xDD5B5C", VA = "0xDD5B5C", Slot = "5")]
		public bool CanLoadImages()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xDD5B64", Offset = "0xDD5B64", VA = "0xDD5B64", Slot = "6")]
		public TiltBrushToolkit.RawImage LoadAsImage(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x2000272")]
	public class FileWatcher
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FileSystemWatcher m_InternalFileWatcher;

		[Token(Token = "0x170002AC")]
		public NotifyFilters NotifyFilter
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xDD5EF0", Offset = "0xDD5EF0", VA = "0xDD5EF0")]
			get
			{
				return default(NotifyFilters);
			}
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xDD5F08", Offset = "0xDD5F08", VA = "0xDD5F08")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public bool EnableRaisingEvents
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xDD5F1C", Offset = "0xDD5F1C", VA = "0xDD5F1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xDD5F3C", Offset = "0xDD5F3C", VA = "0xDD5F3C")]
			set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event FileSystemEventHandler FileChanged
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xDD5F54", Offset = "0xDD5F54", VA = "0xDD5F54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0xDD5FF0", Offset = "0xDD5FF0", VA = "0xDD5FF0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event FileSystemEventHandler FileCreated
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xDD608C", Offset = "0xDD608C", VA = "0xDD608C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xDD6128", Offset = "0xDD6128", VA = "0xDD6128")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event FileSystemEventHandler FileDeleted
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xDD61C4", Offset = "0xDD61C4", VA = "0xDD61C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xDD6260", Offset = "0xDD6260", VA = "0xDD6260")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xDD5C80", Offset = "0xDD5C80", VA = "0xDD5C80")]
		public FileWatcher(string path)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xDD5E44", Offset = "0xDD5E44", VA = "0xDD5E44")]
		public FileWatcher(string path, string filter)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xDD5D18", Offset = "0xDD5D18", VA = "0xDD5D18")]
		private void AddEventsToInternalFileWatcher()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xDD62FC", Offset = "0xDD62FC", VA = "0xDD62FC")]
		public void NotifyDelete(string fullpath)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xDD63F4", Offset = "0xDD63F4", VA = "0xDD63F4")]
		public void NotifyCreated(string fullpath)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xDD64EC", Offset = "0xDD64EC", VA = "0xDD64EC")]
		public void NotifyChanged(string fullpath)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class FrameTimingGUI : MonoBehaviour
	{
		[Token(Token = "0x2000274")]
		[CompilerGenerated]
		private sealed class <FadeMessage>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FrameTimingGUI <>4__this;

			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Material <material>5__2;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F82")]
				[Address(RVA = "0xDD6A9C", Offset = "0xDD6A9C", VA = "0xDD6A9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F84")]
				[Address(RVA = "0xDD6AE4", Offset = "0xDD6AE4", VA = "0xDD6AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xDD6890", Offset = "0xDD6890", VA = "0xDD6890")]
			[DebuggerHidden]
			public <FadeMessage>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xDD68C0", Offset = "0xDD68C0", VA = "0xDD68C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xDD68C4", Offset = "0xDD68C4", VA = "0xDD68C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xDD6AA4", Offset = "0xDD6AA4", VA = "0xDD6AA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_DroppedFramesBar;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_DroppedFramesBarBasePos;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_DroppedFramesBarBaseScale;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FrameTimingInfo m_TimingInfo;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_Message;

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xDD6644", Offset = "0xDD6644", VA = "0xDD6644")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xDD66B0", Offset = "0xDD66B0", VA = "0xDD66B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xDD6814", Offset = "0xDD6814", VA = "0xDD6814")]
		private Color SetAlpha(Color c, float a)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xDD681C", Offset = "0xDD681C", VA = "0xDD681C")]
		[IteratorStateMachine(typeof(<FadeMessage>d__8))]
		private IEnumerator FadeMessage(string message)
		{
			return null;
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xDD68B8", Offset = "0xDD68B8", VA = "0xDD68B8")]
		public FrameTimingGUI()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class FrameTimingInfo : MonoBehaviour
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FrameTimingInfo m_Instance;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_FrameTimingHistorySize;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<int> m_DroppedFramesQueue;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_RollingDroppedFrameCount;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_LifetimeDroppedFrameCount;

		[Token(Token = "0x170002B0")]
		public int LifetimeDroppedFrameCount
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xDD6AEC", Offset = "0xDD6AEC", VA = "0xDD6AEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B1")]
		public int RollingDroppedFrameCount
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xDD6AF4", Offset = "0xDD6AF4", VA = "0xDD6AF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action OnDroppedFrames
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xDD6CE8", Offset = "0xDD6CE8", VA = "0xDD6CE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xDD6D84", Offset = "0xDD6D84", VA = "0xDD6D84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xDD6AFC", Offset = "0xDD6AFC", VA = "0xDD6AFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xDD6B48", Offset = "0xDD6B48", VA = "0xDD6B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xDD6BBC", Offset = "0xDD6BBC", VA = "0xDD6BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xDD6E20", Offset = "0xDD6E20", VA = "0xDD6E20")]
		public FrameTimingInfo()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class ActionButton : BaseButton
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UnityEvent m_Action;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xDD6F78", Offset = "0xDD6F78", VA = "0xDD6F78", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xDD6F94", Offset = "0xDD6F94", VA = "0xDD6F94")]
		public ActionButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class AdminPanelAnimButton
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Renderer renderer;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 baseLocalPos;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector3 baseScale;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xDD6FD4", Offset = "0xDD6FD4", VA = "0xDD6FD4")]
		public AdminPanelAnimButton()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class AdminPanel : BasePanel
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private AdminPanelAnimButton[] m_AnimButtons;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private GameObject m_SaveNewButton;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private GameObject m_SaveOptionsButton;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private GameObject m_SettingsButton;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private GameObject m_MoreButton;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private OptionButton m_ShareButton;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private OptionButton m_ShareButton_Notify;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[SerializeField]
		private GameObject m_AdvancedModeBorder;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private GameObject m_BeginnerModeButton;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private GameObject m_AdvancedModeButton;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private GameObject m_ButtonRotationContainer;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private GameObject m_MemoryWarning;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private GameObject m_MemoryWarningButton;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private Color m_MemoryWarningColor;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private float m_ButtonRotationAngle;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private string m_ShareButtonLoggedOutExtraText;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private HintObjectScript m_AdvancedModeHintObject;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private bool? m_UpdateShareButtonState;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		private Vector3 m_MemoryWarningBaseScale;

		[Token(Token = "0x170002B2")]
		public Transform ShareButton
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xDD6FDC", Offset = "0xDD6FDC", VA = "0xDD6FDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public Transform AdvancedButton
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xDD6FF8", Offset = "0xDD6FF8", VA = "0xDD6FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public HintObjectScript AdvancedModeHintObject
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xDD7014", Offset = "0xDD7014", VA = "0xDD7014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xDD701C", Offset = "0xDD701C", VA = "0xDD701C")]
		private void UpdateShareButtonText()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xDD711C", Offset = "0xDD711C", VA = "0xDD711C")]
		private void RefreshButtonsForAdvancedMode()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xDD7208", Offset = "0xDD7208", VA = "0xDD7208", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xDD8360", Offset = "0xDD8360", VA = "0xDD8360")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xDD84E8", Offset = "0xDD84E8", VA = "0xDD84E8", Slot = "16")]
		public override void ForceUpdatePanelVisuals()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xDD852C", Offset = "0xDD852C", VA = "0xDD852C", Slot = "18")]
		protected override void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xDD8AD8", Offset = "0xDD8AD8", VA = "0xDD8AD8", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xDD8214", Offset = "0xDD8214", VA = "0xDD8214")]
		private void SetShareButtonNotifyActive(bool active)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xDD8274", Offset = "0xDD8274", VA = "0xDD8274")]
		private void OnMemoryExceededChanged()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xDD8FEC", Offset = "0xDD8FEC", VA = "0xDD8FEC")]
		public AdminPanel()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public struct AdvancedPanelLayouts
	{
		[Token(Token = "0x200027B")]
		private class AdvancedPanelDiskLayout
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BasePanel.PanelType type;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fixedToPane;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float yOffset;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float attachAngle;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pos;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rot;

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xDD9814", Offset = "0xDD9814", VA = "0xDD9814")]
			public AdvancedPanelDiskLayout()
			{
			}
		}

		[Token(Token = "0x4000DFA")]
		private const string kPlayerPrefAdvancedLayout = "AdvancedLayout";

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<AdvancedPanelDiskLayout> layouts;

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xDD9124", Offset = "0xDD9124", VA = "0xDD9124")]
		public static void ClearPlayerPrefs()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xDD9168", Offset = "0xDD9168", VA = "0xDD9168")]
		public void PopulateFromPlayerPrefs()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xDD981C", Offset = "0xDD981C", VA = "0xDD981C")]
		public void WriteToDisk(List<PanelManager.PanelData> panels)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xDD9E04", Offset = "0xDD9E04", VA = "0xDD9E04")]
		public bool ApplyLayoutToPanel(BasePanel p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xDD9FEC", Offset = "0xDD9FEC", VA = "0xDD9FEC")]
		public void ReviveFloatingPanelWithLayout(BasePanel p)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class AppSettingsPanel : BasePanel
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public ToggleButton m_ToggleExperimentalModeToggle;

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xDDA12C", Offset = "0xDDA12C", VA = "0xDDA12C", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xDDA19C", Offset = "0xDDA19C", VA = "0xDDA19C")]
		public void HandleToggleExperimentalMode(ToggleButton btn)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xDDA1FC", Offset = "0xDDA1FC", VA = "0xDDA1FC")]
		public AppSettingsPanel()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class AudioVizButton : OptionButton
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xDDA250", Offset = "0xDDA250", VA = "0xDDA250", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xDDA410", Offset = "0xDDA410", VA = "0xDDA410")]
		public AudioVizButton()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class AudioVizPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float m_AudioFoundDuration;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_AudioFoundText;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMesh m_StatusText;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private int m_MaxStatusLength;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Renderer m_HintText;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float m_AudioSearchHintDelay;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_AudioFound;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_AudioFoundTimer;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_AudioSearchTimer;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xDDA418", Offset = "0xDDA418", VA = "0xDDA418", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xDDA44C", Offset = "0xDDA44C", VA = "0xDDA44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xDDA630", Offset = "0xDDA630", VA = "0xDDA630", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xDDA6A0", Offset = "0xDDA6A0", VA = "0xDDA6A0", Slot = "6")]
		public override bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xDDA784", Offset = "0xDDA784", VA = "0xDDA784")]
		public AudioVizPopUpWindow()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class BackdropButton : BaseButton
	{
		[Token(Token = "0x2000280")]
		public enum ColorMode
		{
			[Token(Token = "0x4000E10")]
			SkyColorA,
			[Token(Token = "0x4000E11")]
			SkyColorB,
			[Token(Token = "0x4000E12")]
			Fog
		}

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ColorMode m_ColorMode;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject[] m_ObjectsToHideBehindPopups;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xDDA794", Offset = "0xDDA794", VA = "0xDDA794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xDDA864", Offset = "0xDDA864", VA = "0xDDA864", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xDDA940", Offset = "0xDDA940", VA = "0xDDA940", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xDDAE64", Offset = "0xDDAE64", VA = "0xDDAE64")]
		private void OnColorChanged()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xDDAF90", Offset = "0xDDAF90", VA = "0xDDAF90", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xDDB09C", Offset = "0xDDB09C", VA = "0xDDB09C", Slot = "23")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xDDB128", Offset = "0xDDB128", VA = "0xDDB128")]
		private void OnPopUpClose()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDDB18C", Offset = "0xDDB18C", VA = "0xDDB18C")]
		private void OnSkyAColorPicked(Color color)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDDB2B4", Offset = "0xDDB2B4", VA = "0xDDB2B4")]
		private void OnSkyBColorPicked(Color color)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xDDB3DC", Offset = "0xDDB3DC", VA = "0xDDB3DC")]
		private void SkyColorFinalized()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xDDB51C", Offset = "0xDDB51C", VA = "0xDDB51C")]
		private void OnSkyColorAPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xDDB644", Offset = "0xDDB644", VA = "0xDDB644")]
		private void OnSkyColorBPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xDDB76C", Offset = "0xDDB76C", VA = "0xDDB76C")]
		private void OnFogColorPicked(Color color)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xDDB86C", Offset = "0xDDB86C", VA = "0xDDB86C")]
		private void FogColorFinalized()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xDDB96C", Offset = "0xDDB96C", VA = "0xDDB96C")]
		private void OnFogColorPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xDDBA6C", Offset = "0xDDBA6C", VA = "0xDDBA6C")]
		public BackdropButton()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class BaseButton : UIComponent
	{
		[Token(Token = "0x2000282")]
		protected enum ButtonState
		{
			[Token(Token = "0x4000E2C")]
			Unavailable,
			[Token(Token = "0x4000E2D")]
			Untouched,
			[Token(Token = "0x4000E2E")]
			Hover,
			[Token(Token = "0x4000E2F")]
			Held,
			[Token(Token = "0x4000E30")]
			Pressed
		}

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Texture2D m_ButtonTexture;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected bool m_AtlasTexture;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[SerializeField]
		protected bool m_ToggleButton;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[SerializeField]
		protected bool m_LongPressReleaseButton;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[SerializeField]
		protected bool m_ButtonHasPressedAudio;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected float m_ZAdjustHover;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected float m_ZAdjustClick;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected float m_HoverScale;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected float m_HoverBoxColliderGrow;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[Header("This checkbox makes the button experimental-only")]
		private bool m_AddOverlay;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Renderer m_ButtonRenderer;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool m_ToggleActive;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool m_ButtonSelected;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture2D m_LastTextureAtlased;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_AtlasFlag_Activated;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_AtlasFlag_Focus;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Vector2> m_MeshUvsForAtlasing;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Texture2D m_CurrentButtonTexture;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ButtonState m_CurrentButtonState;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float m_ZAdjustBase;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3 m_ScaleBase;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected Vector3? m_BoxColliderSizeBase;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected bool m_UseScale;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		protected bool m_AllowBypassHover;

		[Token(Token = "0x170002B5")]
		public Vector3 ScaleBase
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xDDBA8C", Offset = "0xDDBA8C", VA = "0xDDBA8C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xDDBA98", Offset = "0xDDBA98", VA = "0xDDBA98", Slot = "32")]
		public virtual bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDDBAA8", Offset = "0xDDBAA8", VA = "0xDDBAA8")]
		public bool IsPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDDBAB8", Offset = "0xDDBAB8", VA = "0xDDBAB8")]
		public bool IsHover()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDDBAC8", Offset = "0xDDBAC8", VA = "0xDDBAC8")]
		protected void RefreshAtlasedMaterial()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDDBB5C", Offset = "0xDDBB5C", VA = "0xDDBB5C")]
		protected bool AssignAtlasedTexture(Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDDBD78", Offset = "0xDDBD78", VA = "0xDDBD78", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xDDC180", Offset = "0xDDC180", VA = "0xDDC180", Slot = "33")]
		protected virtual void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xDDC264", Offset = "0xDDC264", VA = "0xDDC264", Slot = "9")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDDC2B0", Offset = "0xDDC2B0", VA = "0xDDC2B0")]
		public void SetButtonTexture(Texture2D rTexture, float aspect = -1f)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xDDC4D4", Offset = "0xDDC4D4", VA = "0xDDC4D4", Slot = "34")]
		protected virtual void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xDDC528", Offset = "0xDDC528", VA = "0xDDC528", Slot = "35")]
		public virtual void SetButtonGrayscale(bool bGrayscale)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xDDC5A4", Offset = "0xDDC5A4", VA = "0xDDC5A4")]
		protected void SetButtonActivated(bool bActivated)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xDDC62C", Offset = "0xDDC62C", VA = "0xDDC62C", Slot = "36")]
		public virtual void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xDD8CF8", Offset = "0xDD8CF8", VA = "0xDD8CF8")]
		public void SetButtonAvailable(bool bAvailable)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xDDC654", Offset = "0xDDC654", VA = "0xDDC654", Slot = "37")]
		protected virtual void SetMaterialColor(Color rColor)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xDDB024", Offset = "0xDDB024", VA = "0xDDB024", Slot = "5")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xDDC748", Offset = "0xDDC748", VA = "0xDDC748")]
		public void SetHDRButtonColor(Color color, Color secondaryColor)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xDDC898", Offset = "0xDDC898", VA = "0xDDC898", Slot = "12")]
		public override void ForceDescriptionDeactivate()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xDDC8CC", Offset = "0xDDC8CC", VA = "0xDDC8CC", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xDDC938", Offset = "0xDDC938", VA = "0xDDC938", Slot = "38")]
		public virtual void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xDDC93C", Offset = "0xDDC93C", VA = "0xDDC93C", Slot = "16")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xDDCA90", Offset = "0xDDCA90", VA = "0xDDCA90", Slot = "39")]
		protected virtual void OnButtonPressed()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xDDCA94", Offset = "0xDDCA94", VA = "0xDDCA94", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xDDCB24", Offset = "0xDDCB24", VA = "0xDDCB24", Slot = "19")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xDDCC30", Offset = "0xDDCC30", VA = "0xDDCC30", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xDDCCD4", Offset = "0xDDCCD4", VA = "0xDDCCD4", Slot = "40")]
		protected virtual void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrow)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xDDC638", Offset = "0xDDC638", VA = "0xDDC638")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xDDC07C", Offset = "0xDDC07C", VA = "0xDDC07C")]
		private void UpdateUVsForAspect(float aspect)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xDD6FB4", Offset = "0xDD6FB4", VA = "0xDD6FB4")]
		public BaseButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public struct PopupMapKey
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_PopUpPrefab;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SketchControlsScript.GlobalCommands m_Command;
	}
	[Token(Token = "0x2000284")]
	public class BasePanel : MonoBehaviour
	{
		[Token(Token = "0x2000285")]
		protected class TextSpring
		{
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_CurrentAngle;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_DesiredAngle;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_Velocity;

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1F180FC", Offset = "0x1F180FC", VA = "0x1F180FC")]
			public void Update(float fK, float fDampen)
			{
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x1F18148", Offset = "0x1F18148", VA = "0x1F18148")]
			public TextSpring()
			{
			}
		}

		[Token(Token = "0x2000286")]
		protected enum DescriptionState
		{
			[Token(Token = "0x4000EAA")]
			Open,
			[Token(Token = "0x4000EAB")]
			Closing,
			[Token(Token = "0x4000EAC")]
			Closed
		}

		[Token(Token = "0x2000287")]
		protected enum PanelState
		{
			[Token(Token = "0x4000EAE")]
			Unused,
			[Token(Token = "0x4000EAF")]
			Unavailable,
			[Token(Token = "0x4000EB0")]
			Available
		}

		[Serializable]
		[Token(Token = "0x2000288")]
		public enum PanelType
		{
			[Token(Token = "0x4000EB2")]
			SketchSurface = 0,
			[Token(Token = "0x4000EB3")]
			Color = 1,
			[Token(Token = "0x4000EB4")]
			Brush = 2,
			[Token(Token = "0x4000EB5")]
			AudioReactor = 3,
			[Token(Token = "0x4000EB6")]
			AdminPanelMobile = 4,
			[Token(Token = "0x4000EB7")]
			ToolsBasicMobile = 5,
			[Token(Token = "0x4000EB8")]
			ToolsBasic = 6,
			[Token(Token = "0x4000EB9")]
			Experimental = 7,
			[Token(Token = "0x4000EBA")]
			ToolsAdvancedMobile = 8,
			[Token(Token = "0x4000EBB")]
			MemoryWarning = 9,
			[Token(Token = "0x4000EBC")]
			Labs = 10,
			[Token(Token = "0x4000EBD")]
			Sketchbook = 11,
			[Token(Token = "0x4000EBE")]
			SketchbookMobile = 12,
			[Token(Token = "0x4000EBF")]
			BrushMobile = 13,
			[Token(Token = "0x4000EC0")]
			AppSettings = 14,
			[Token(Token = "0x4000EC1")]
			Tutorials = 15,
			[Token(Token = "0x4000EC2")]
			Reference = 16,
			[Token(Token = "0x4000EC3")]
			Lights = 17,
			[Token(Token = "0x4000EC4")]
			GuideTools = 18,
			[Token(Token = "0x4000EC5")]
			Environment = 19,
			[Token(Token = "0x4000EC6")]
			Camera = 20,
			[Token(Token = "0x4000EC7")]
			Testing = 21,
			[Token(Token = "0x4000EC8")]
			Poly = 22,
			[Token(Token = "0x4000EC9")]
			BrushExperimental = 23,
			[Token(Token = "0x4000ECA")]
			ToolsAdvanced = 24,
			[Token(Token = "0x4000ECB")]
			AppSettingsMobile = 25,
			[Token(Token = "0x4000ECC")]
			AdminPanel = 26,
			[Token(Token = "0x4000ECD")]
			ExtraPanel = 27,
			[Token(Token = "0x4000ECE")]
			ExtraMobile = 28,
			[Token(Token = "0x4000ECF")]
			PolyMobile = 29,
			[Token(Token = "0x4000ED0")]
			LabsMobile = 30,
			[Token(Token = "0x4000ED1")]
			ReferenceMobile = 31,
			[Token(Token = "0x4000ED2")]
			CameraPath = 32,
			[Token(Token = "0x4000ED3")]
			BrushLab = 33,
			[Token(Token = "0x4000ED4")]
			Scripts = 6000,
			[Token(Token = "0x4000ED5")]
			SnapSettings = 8000,
			[Token(Token = "0x4000ED6")]
			StencilSettings = 20200,
			[Token(Token = "0x4000ED7")]
			LayersPanel = 15000
		}

		[Token(Token = "0x2000289")]
		private enum FixedTransitionState
		{
			[Token(Token = "0x4000ED9")]
			Floating,
			[Token(Token = "0x4000EDA")]
			FixedToFloating,
			[Token(Token = "0x4000EDB")]
			FloatingToFixed,
			[Token(Token = "0x4000EDC")]
			Fixed
		}

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float GAZE_DISTANCE;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float LARGE_DISTANCE;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected PanelType m_PanelType;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Collider m_Collider;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject m_Mesh;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer m_Border;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Collider m_MeshCollider;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Vector3 m_ParticleBounds;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected PopupMapKey[] m_PanelPopUpMap;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected string m_PanelDescription;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected GameObject m_PanelDescriptionPrefab;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Vector3 m_PanelDescriptionOffset;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected Color m_PanelDescriptionColor;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected GameObject m_PanelFlairPrefab;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected Vector3 m_PanelFlairOffset;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected float m_DescriptionSpringK;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected float m_DescriptionSpringDampen;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		protected float m_DescriptionClosedAngle;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_DescriptionOpenAngle;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected float m_DescriptionAlphaDistance;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected GameObject[] m_Decor;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected float m_GazeHighlightScaleMultiplier;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float m_BorderMeshWidth;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float m_BorderMeshAdvWidth;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public float m_PanelSensitivity;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		protected bool m_ClampToBounds;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		protected Vector3 m_ReticleBounds;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public float m_BorderSphereHighlightRadius;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		protected Vector2 m_PositioningSpheresBounds;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		protected float m_PositioningSphereRadius;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public bool m_UseGazeRotation;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public float m_MaxGazeRotation;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected float m_GazeActivateSpeed;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		public Vector3 m_InitialSpawnPos;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		public Vector3 m_InitialSpawnRotEulers;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		public float m_WandAttachAngle;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		public float m_WandAttachYOffset;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		public float m_WandAttachHalfHeight;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool m_BeginFixed;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[SerializeField]
		private bool m_CanBeFixedToWand;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		[SerializeField]
		private bool m_CanBeDetachedFromWand;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float m_PopUpGazeDuration;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected MeshRenderer[] m_PromoBorders;

		[Token(Token = "0x4000E5E")]
		protected const float m_SwipeThreshold = 0.4f;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Material m_BorderMaterial;

		[NonSerialized]
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_SweetSpotDistance;

		[NonSerialized]
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool m_Fixed;

		[NonSerialized]
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool m_WandPrimedForAttach;

		[NonSerialized]
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float m_WandAttachRadiusAdjust;

		[NonSerialized]
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float m_WandAttachYOffset_Target;

		[NonSerialized]
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float m_WandAttachYOffset_Stable;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected PopUpWindow m_ActivePopUp;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected SketchControlsScript.GlobalCommands m_DelayedCommand;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		protected int m_DelayedCommandParam;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected int m_DelayedCommandParam2;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject m_PanelDescriptionObject;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Renderer m_PanelDescriptionRenderer;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected TextMeshPro m_PanelDescriptionTextMeshPro;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected float m_AdjustedScale;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected TextSpring m_PanelDescriptionTextSpring;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected TextSpring m_PanelFlairSpring;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected PanelFlair m_PanelFlair;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected Vector3 m_ReticleOffset;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected Vector3 m_Bounds;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected Vector3 m_WorkingReticleBounds;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected DescriptionState m_PanelDescriptionState;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected DescriptionState m_PanelFlairState;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected float m_CloseAngleThreshold;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected PanelState m_CurrentState;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected PanelState m_DesiredState;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected bool m_GazeActive;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		protected bool m_GazeWasActive;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
		protected bool m_GazeDescriptionsActive;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
		protected bool m_InputValid;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		protected bool m_EatInput;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected Ray m_ReticleSelectionRay;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected float m_PositioningPercent;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		protected float m_MaxGazeOffsetDistance;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector3 m_GazeRotationAxis;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected float m_GazeRotationAngle;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Quaternion m_GazeRotationAmount;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		protected float m_GazeActivePercent;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected NonScaleChild m_NonScaleChild;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private List<Renderer> m_DecorRenderers;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private List<TextMeshPro> m_DecorTextMeshes;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float m_ScaledPositioningSphereRadius;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private float m_PositioningExtent;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector3[] m_PositioningSpheres;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3[] m_PositioningSpheresTransformed;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 m_PositioningHome;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float m_PositioningK;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float m_PositioningDampen;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float m_DepenetrationScalar;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Vector3 m_PositioningVelocity;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector3 m_GazeHitPositionCurrent;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Vector3 m_GazeHitPositionDesired;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float m_GazeHitPositionSpeed;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		protected Vector2 m_SwipeRecentMotion;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private FixedTransitionState m_TransitionState;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private TrTransform m_WandTransitionTarget;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float m_WandTransitionDuration;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float m_WandTransitionPercent;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private float m_WandAttachAdjustSpeed;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float m_WandAttachYOffset_Initial;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private float m_WandAttachAngle_Initial;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private PanelWidget m_WidgetSibling;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private GameObject m_TempPopUpCollider;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float m_PopUpGazeTimer;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private bool m_AdvancedModePanel;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F5")]
		private bool m_CurrentlyVisibleInAdvancedMode;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F6")]
		private bool m_PanelInitializationStarted;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F7")]
		private bool m_PanelInitializationFinished;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float m_PanelDescriptionCounter;

		[Token(Token = "0x170002B6")]
		public bool BeginFixed
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xDDCEB0", Offset = "0xDDCEB0", VA = "0xDDCEB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B7")]
		public bool CanBeDetached
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xDDCEC0", Offset = "0xDDCEC0", VA = "0xDDCEC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		public PanelWidget WidgetSibling
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xDDCEF4", Offset = "0xDDCEF4", VA = "0xDDCEF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public bool AdvancedModePanel
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xDDCEFC", Offset = "0xDDCEFC", VA = "0xDDCEFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		public bool CurrentlyVisibleInAdvancedMode
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xDDCF04", Offset = "0xDDCF04", VA = "0xDDCF04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BB")]
		public Vector3 ParticleBounds
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xDDCF0C", Offset = "0xDDCF0C", VA = "0xDDCF0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002BC")]
		public PopUpWindow PanelPopUp
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xDDCF18", Offset = "0xDDCF18", VA = "0xDDCF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public PanelType Type
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xDDCF20", Offset = "0xDDCF20", VA = "0xDDCF20")]
			get
			{
				return default(PanelType);
			}
		}

		[Token(Token = "0x170002BE")]
		public virtual bool ShouldRegister
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xDDCF28", Offset = "0xDDCF28", VA = "0xDDCF28", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		public float PopUpOffset
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xDDCF44", Offset = "0xDDCF44", VA = "0xDDCF44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xDDCE80", Offset = "0xDDCE80", VA = "0xDDCE80")]
		public Vector3 GetBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xDDCE90", Offset = "0xDDCE90", VA = "0xDDCE90")]
		public float GetPositioningExtent()
		{
			return default(float);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xDDCE98", Offset = "0xDDCE98", VA = "0xDDCE98")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xDDCEA8", Offset = "0xDDCEA8", VA = "0xDDCEA8")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xDDCEB8", Offset = "0xDDCEB8", VA = "0xDDCEB8")]
		public void ClearBeginFixed()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xDDCEC8", Offset = "0xDDCEC8", VA = "0xDDCEC8")]
		public bool IsInInitialPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xDDAF08", Offset = "0xDDAF08", VA = "0xDDAF08")]
		public Color GetGazeColorFromActiveGazePercent()
		{
			return default(Color);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xDDCF30", Offset = "0xDDCF30", VA = "0xDDCF30")]
		public void InitAdvancedFlag(bool advanced)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xDDCFBC", Offset = "0xDDCFBC", VA = "0xDDCFBC", Slot = "5")]
		protected virtual void CalculateBounds()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xDD8D68", Offset = "0xDD8D68", VA = "0xDD8D68")]
		public void ActivatePromoBorder(bool activate)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xDDD0B8", Offset = "0xDDD0B8", VA = "0xDDD0B8", Slot = "6")]
		public virtual void SetInIntroMode(bool inIntro)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xDDD0BC", Offset = "0xDDD0BC", VA = "0xDDD0BC")]
		public void SetPositioningPercent(float fPercent)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xDDA0E8", Offset = "0xDDA0E8", VA = "0xDDA0E8")]
		public void SetScale(float fScale)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xDDD0C4", Offset = "0xDDD0C4", VA = "0xDDD0C4")]
		public bool PanelIsUsed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xDDD0D4", Offset = "0xDDD0D4", VA = "0xDDD0D4")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xDDD0DC", Offset = "0xDDD0DC", VA = "0xDDD0DC")]
		public bool HasMeshCollider()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xDDD13C", Offset = "0xDDD13C", VA = "0xDDD13C", Slot = "7")]
		public virtual bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xDDD454", Offset = "0xDDD454", VA = "0xDDD454", Slot = "8")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xDDD470", Offset = "0xDDD470", VA = "0xDDD470")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xDDD48C", Offset = "0xDDD48C", VA = "0xDDD48C")]
		public bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xDDD4A8", Offset = "0xDDD4A8", VA = "0xDDD4A8")]
		public bool UndoRedoBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xDDD530", Offset = "0xDDD530", VA = "0xDDD530", Slot = "9")]
		public virtual void OnPanelMoved()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xDDD534", Offset = "0xDDD534", VA = "0xDDD534", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xDD7478", Offset = "0xDD7478", VA = "0xDD7478", Slot = "11")]
		public virtual void InitPanel()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xDDD550", Offset = "0xDDD550", VA = "0xDDD550")]
		public void CloseActivePopUp(bool force)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xDDD67C", Offset = "0xDDD67C", VA = "0xDDD67C")]
		public void VerifyStateForFloating()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xDDD68C", Offset = "0xDDD68C", VA = "0xDDD68C")]
		public void SetPanelStableToTarget()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xDDD698", Offset = "0xDDD698", VA = "0xDDD698")]
		public void ResetPanelToInitialPosition()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xDDD6D4", Offset = "0xDDD6D4", VA = "0xDDD6D4")]
		public void ResetPanel()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xDDD5FC", Offset = "0xDDD5FC", VA = "0xDDD5FC")]
		public void InvalidateIfActivePopup(PopUpWindow activePopup)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xDDDA34", Offset = "0xDDDA34", VA = "0xDDDA34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xDDDA40", Offset = "0xDDDA40", VA = "0xDDDA40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xDDDA50", Offset = "0xDDDA50", VA = "0xDDDA50", Slot = "12")]
		protected virtual void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xDDDB00", Offset = "0xDDDB00", VA = "0xDDDB00", Slot = "13")]
		protected virtual void OnDisablePanel()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xDDDBAC", Offset = "0xDDDBAC", VA = "0xDDDBAC")]
		public void ResetReticleOffset()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xDDDC04", Offset = "0xDDDC04", VA = "0xDDDC04")]
		public void UpdateReticleOffset(float fXDelta, float fYDelta)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xDDDC74", Offset = "0xDDDC74", VA = "0xDDDC74", Slot = "14")]
		public virtual void GetReticleTransformFromPosDir(Vector3 vInPos, Vector3 vInDir, out Vector3 vOutPos, out Vector3 vForward)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xDDDF74", Offset = "0xDDDF74", VA = "0xDDDF74", Slot = "15")]
		public virtual void GetReticleTransform(out Vector3 vPos, out Vector3 vForward, bool bGazeAndTap)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xDD8510", Offset = "0xDD8510", VA = "0xDD8510", Slot = "16")]
		public virtual void ForceUpdatePanelVisuals()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xDDE17C", Offset = "0xDDE17C", VA = "0xDDE17C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xDD84A4", Offset = "0xDD84A4", VA = "0xDD84A4")]
		protected void BaseUpdate()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xDDE180", Offset = "0xDDE180", VA = "0xDDE180")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xDDEF1C", Offset = "0xDDEF1C", VA = "0xDDEF1C", Slot = "17")]
		protected virtual void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xDDEF20", Offset = "0xDDEF20", VA = "0xDDEF20")]
		private void UpdateMeshRotation()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xDDE3C8", Offset = "0xDDE3C8", VA = "0xDDE3C8")]
		protected void UpdateDescriptions()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xDD8818", Offset = "0xDD8818", VA = "0xDD8818", Slot = "18")]
		protected virtual void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xDD8E7C", Offset = "0xDD8E7C", VA = "0xDD8E7C")]
		public Color GetGazeColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xDDEC8C", Offset = "0xDDEC8C", VA = "0xDDEC8C")]
		protected void UpdateFixedTransition()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xDDF004", Offset = "0xDDF004", VA = "0xDDF004")]
		public void WidgetSiblingBeginInteraction()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xDDF080", Offset = "0xDDF080", VA = "0xDDF080")]
		public void WidgetSiblingEndInteraction()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xDDF1CC", Offset = "0xDDF1CC", VA = "0xDDF1CC")]
		public void TransitionToWand(bool bFixed, TrTransform target)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xDDD890", Offset = "0xDDD890", VA = "0xDDD890")]
		private void UpdatePanelColor(Color rPanelColor)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xDDF204", Offset = "0xDDF204", VA = "0xDDF204", Slot = "19")]
		protected virtual void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xDDF208", Offset = "0xDDF208", VA = "0xDDF208", Slot = "20")]
		public virtual void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xDDF250", Offset = "0xDDF250", VA = "0xDDF250")]
		private void SetPanelFlairText(string sText)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xDDEEE8", Offset = "0xDDEEE8", VA = "0xDDEEE8")]
		public void ResetPanelFlair()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xDDF360", Offset = "0xDDF360", VA = "0xDDF360", Slot = "21")]
		public virtual void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xDDF364", Offset = "0xDDF364", VA = "0xDDF364", Slot = "22")]
		public virtual void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xDDF368", Offset = "0xDDF368", VA = "0xDDF368", Slot = "23")]
		public virtual void OnWidgetHide()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xDDF36C", Offset = "0xDDF36C", VA = "0xDDF36C")]
		protected int AccumulateSwipe()
		{
			return default(int);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xDDF454", Offset = "0xDDF454", VA = "0xDDF454", Slot = "24")]
		public virtual bool IncrementMotionAndCheckForSwipe(float fMotion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xDDF47C", Offset = "0xDDF47C", VA = "0xDDF47C")]
		public void UpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xDD8CF4", Offset = "0xDD8CF4", VA = "0xDD8CF4", Slot = "25")]
		public virtual void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xDDFC84", Offset = "0xDDFC84", VA = "0xDDFC84")]
		public void InitForPanelMovement()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xDDFCCC", Offset = "0xDDFCCC", VA = "0xDDFCCC", Slot = "26")]
		public virtual void PanelHasStoppedMoving()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xDDA384", Offset = "0xDDA384", VA = "0xDDA384")]
		public void CreatePopUp(SketchControlsScript.GlobalCommands rCommand, int iCommandParam, int iCommandParam2, string sDelayedText = "", [Optional] Action delayedClose)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xDDFD00", Offset = "0xDDFD00", VA = "0xDDFD00")]
		public void CreatePopUp(SketchControlsScript.GlobalCommands rCommand, int iCommandParam, int iCommandParam2, Vector3 vPopupOffset, string sDelayedText = "", [Optional] Action delayedClose)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xDE01AC", Offset = "0xDE01AC", VA = "0xDE01AC")]
		public void PositionPopUp(Vector3 basePos)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xDE01FC", Offset = "0xDE01FC", VA = "0xDE01FC")]
		public void ResolveDelayedButtonCommand(bool bConfirm, bool bKeepOpen = false)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xDE0350", Offset = "0xDE0350", VA = "0xDE0350", Slot = "27")]
		public virtual void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xDE0354", Offset = "0xDE0354", VA = "0xDE0354", Slot = "28")]
		public virtual void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xDE0358", Offset = "0xDE0358", VA = "0xDE0358")]
		public void InitForCollisionDetection()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xDE03FC", Offset = "0xDE03FC", VA = "0xDE03FC")]
		public void CalculateDepenetration(BasePanel rOther)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xDE06A8", Offset = "0xDE06A8", VA = "0xDE06A8")]
		public void CalculateDepenetration(Vector3 vOtherPos, float fCombinedRadius)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xDE084C", Offset = "0xDE084C", VA = "0xDE084C")]
		public void UpdatePositioningForces()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xDE09CC", Offset = "0xDE09CC", VA = "0xDE09CC")]
		public void UpdateDelayedCommandParameter(int newParam)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xDE09D4", Offset = "0xDE09D4", VA = "0xDE09D4")]
		public static bool DoesRayHitCollider(Ray rRay, Collider rCollider, bool skipAngleCheck = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xDDDF18", Offset = "0xDDDF18", VA = "0xDDDF18")]
		public static bool DoesRayHitCollider(Ray rRay, Collider rCollider, out RaycastHit rHitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xDD9048", Offset = "0xDD9048", VA = "0xDD9048")]
		public BasePanel()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class BaseSlider : UIComponent
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public GameObject m_Nob;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_Mesh;

		[NonSerialized]
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 m_MeshScale;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float m_CurrentValue;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool m_IsAvailable;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Renderer[] m_TintableMeshes;

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1F18150", Offset = "0x1F18150", VA = "0x1F18150")]
		public float GetCurrentValue()
		{
			return default(float);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1F18158", Offset = "0x1F18158", VA = "0x1F18158")]
		protected bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1F18160", Offset = "0x1F18160", VA = "0x1F18160")]
		protected void SetAvailable(bool available)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1F18170", Offset = "0x1F18170", VA = "0x1F18170", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1F18244", Offset = "0x1F18244", VA = "0x1F18244", Slot = "11")]
		protected override void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1F18320", Offset = "0x1F18320", VA = "0x1F18320", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1F183F4", Offset = "0x1F183F4", VA = "0x1F183F4", Slot = "32")]
		public virtual void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1F183FC", Offset = "0x1F183FC", VA = "0x1F183FC")]
		public void SetSliderPositionToReflectValue()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1F184E4", Offset = "0x1F184E4", VA = "0x1F184E4", Slot = "16")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1F18678", Offset = "0x1F18678", VA = "0x1F18678", Slot = "17")]
		public override void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1F186B0", Offset = "0x1F186B0", VA = "0x1F186B0", Slot = "19")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1F186BC", Offset = "0x1F186BC", VA = "0x1F186BC", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1F1851C", Offset = "0x1F1851C", VA = "0x1F1851C")]
		protected void PositionSliderNob(Vector3 pos_WS)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1F186C8", Offset = "0x1F186C8", VA = "0x1F186C8", Slot = "33")]
		protected virtual void OnPositionSliderNobUpdated()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1F186CC", Offset = "0x1F186CC", VA = "0x1F186CC")]
		public BaseSlider()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public abstract class BaseTray : UIComponent
	{
		[Token(Token = "0x200028C")]
		[CompilerGenerated]
		private sealed class <Animate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BaseTray <>4__this;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <localScale>5__2;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <x>5__3;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600105A")]
				[Address(RVA = "0x1F1911C", Offset = "0x1F1911C", VA = "0x1F1911C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105C")]
				[Address(RVA = "0x1F19164", Offset = "0x1F19164", VA = "0x1F19164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1F18EF0", Offset = "0x1F18EF0", VA = "0x1F18EF0")]
			[DebuggerHidden]
			public <Animate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1F18F20", Offset = "0x1F18F20", VA = "0x1F18F20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x1F18F24", Offset = "0x1F18F24", VA = "0x1F18F24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1F19124", Offset = "0x1F19124", VA = "0x1F19124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_Border;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_AnimateSpeed;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector2 m_AnimateRange;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_AnimationCoroutine;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_AnimateIn;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_AnimateWhenEnabled;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public BaseTool.ToolType m_ShowOnToolType;

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1F186D4", Offset = "0x1F186D4", VA = "0x1F186D4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1F187DC", Offset = "0x1F187DC", VA = "0x1F187DC", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x1F18878", Offset = "0x1F18878", VA = "0x1F18878", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1F18960", Offset = "0x1F18960", VA = "0x1F18960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1F189FC", Offset = "0x1F189FC", VA = "0x1F189FC", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1F18A90", Offset = "0x1F18A90", VA = "0x1F18A90", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1F18B5C", Offset = "0x1F18B5C", VA = "0x1F18B5C", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1F18B84", Offset = "0x1F18B84", VA = "0x1F18B84", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1F18D40", Offset = "0x1F18D40", VA = "0x1F18D40", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1F18D68", Offset = "0x1F18D68", VA = "0x1F18D68", Slot = "26")]
		public override bool RaycastAgainstCustomCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1F18E20", Offset = "0x1F18E20", VA = "0x1F18E20", Slot = "32")]
		protected virtual void OnToolChanged()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1F18EEC", Offset = "0x1F18EEC", VA = "0x1F18EEC", Slot = "33")]
		protected virtual void OnSelectionChanged()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1F18994", Offset = "0x1F18994", VA = "0x1F18994")]
		[IteratorStateMachine(typeof(<Animate>d__21))]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1F18F18", Offset = "0x1F18F18", VA = "0x1F18F18")]
		protected BaseTray()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class BrushGrid : UIComponent
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_PrevButton;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_NextButton;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_PadSwipeGiveExponent;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_PadSwipeGiveScale;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_PadSwipeGiveMaxPercent;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_PageFlipSpeed;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_PageScrollRatio;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BrushTypeButton[] m_BrushButtons;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BrushDescriptor[] m_TagFilteredBrushes;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_BaseBrushIndex;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_PageIndex;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_RequestedPageIndex;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_NumPages;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_PadSwipePerPage;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_PrevDirection;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_EatPadInput;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_PageFlipSleepTime;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_PageFlipSleepValue;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_BoundaryThreshold;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector2 m_SwipeRecentMotion;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector2 m_AccumulatedSwipeMotion;

		[Token(Token = "0x4000F07")]
		private const float m_SwipeThreshold = 0.4f;

		[Token(Token = "0x4000F08")]
		private const float NUM_COLS = 4f;

		[Token(Token = "0x4000F09")]
		private const float ANGLE_HIGHLIGHT_THRESHOLD = 5f;

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1F1916C", Offset = "0x1F1916C", VA = "0x1F1916C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1F1940C", Offset = "0x1F1940C", VA = "0x1F1940C", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1F19464", Offset = "0x1F19464", VA = "0x1F19464", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1F1948C", Offset = "0x1F1948C", VA = "0x1F1948C", Slot = "20")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1F198C0", Offset = "0x1F198C0", VA = "0x1F198C0", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1F19A7C", Offset = "0x1F19A7C", VA = "0x1F19A7C", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1F19AAC", Offset = "0x1F19AAC", VA = "0x1F19AAC", Slot = "28")]
		public override void ReceiveMessage(ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1F19BE4", Offset = "0x1F19BE4", VA = "0x1F19BE4", Slot = "30")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1F19CAC", Offset = "0x1F19CAC", VA = "0x1F19CAC", Slot = "31")]
		public override float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1F19E18", Offset = "0x1F19E18", VA = "0x1F19E18", Slot = "29")]
		public override bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1F19E5C", Offset = "0x1F19E5C", VA = "0x1F19E5C")]
		private void CountPages()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1F19F74", Offset = "0x1F19F74", VA = "0x1F19F74")]
		private void SetPageIndexToDefault()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1F19FBC", Offset = "0x1F19FBC", VA = "0x1F19FBC")]
		private void RefreshNavigationButtons()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1F1A024", Offset = "0x1F1A024", VA = "0x1F1A024")]
		private void RefreshButtonSelection()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1F1A140", Offset = "0x1F1A140", VA = "0x1F1A140")]
		private void OnStrokeSelected(Stroke stroke)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1F1A144", Offset = "0x1F1A144", VA = "0x1F1A144")]
		private void OnBrushSetToDefault()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1F1A5FC", Offset = "0x1F1A5FC", VA = "0x1F1A5FC")]
		private void OnAudioReactiveStateChanged()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1F1A904", Offset = "0x1F1A904", VA = "0x1F1A904")]
		private void OnBrushChanged(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1F1A908", Offset = "0x1F1A908", VA = "0x1F1A908")]
		private void OnBrushCatalogChanged()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1F1A97C", Offset = "0x1F1A97C", VA = "0x1F1A97C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1F1A164", Offset = "0x1F1A164", VA = "0x1F1A164")]
		private void RefreshButtonPositions()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1F1A600", Offset = "0x1F1A600", VA = "0x1F1A600")]
		private void RefreshButtonProperties()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1F197A0", Offset = "0x1F197A0", VA = "0x1F197A0")]
		private void SnapPage()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1F19694", Offset = "0x1F19694", VA = "0x1F19694")]
		private int AccumulateSwipe()
		{
			return default(int);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1F1B020", Offset = "0x1F1B020", VA = "0x1F1B020")]
		private bool IncrementMotionAndCheckForSwipe(float fMotion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1F1B12C", Offset = "0x1F1B12C", VA = "0x1F1B12C")]
		private float GetSwipeRatio(float motion)
		{
			return default(float);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1F19DF0", Offset = "0x1F19DF0", VA = "0x1F19DF0")]
		private float GetSwipeRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1F19DC8", Offset = "0x1F19DC8", VA = "0x1F19DC8")]
		private float GetAccumulatedSwipeRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1F19BC0", Offset = "0x1F19BC0", VA = "0x1F19BC0")]
		public void GotoPage(int page)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1F19AF4", Offset = "0x1F19AF4", VA = "0x1F19AF4")]
		public void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1F19890", Offset = "0x1F19890", VA = "0x1F19890")]
		private void AdvancePage(float amount)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x1F1B150", Offset = "0x1F1B150", VA = "0x1F1B150")]
		public BrushGrid()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class BrushTypeButton : BaseButton
	{
		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Texture2D m_PreviewBGTexture;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject m_AudioReactiveIcon;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_ExperimentalIcon;

		[NonSerialized]
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BrushDescriptor m_Brush;

		[NonSerialized]
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector3 m_OriginPosition;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected PreviewCubeScript m_PreviewCubeScript;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Renderer m_AudioReactiveIconRenderer;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Renderer m_ExperimentalIconRenderer;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 m_AudioReactiveIconBaseLocalPos;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 m_ExperimentalIconBaseLocalPos;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Texture2D m_BrushIconTexture;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1F1B1DC", Offset = "0x1F1B1DC", VA = "0x1F1B1DC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1F1B27C", Offset = "0x1F1B27C", VA = "0x1F1B27C", Slot = "11")]
		protected override void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1F1B2DC", Offset = "0x1F1B2DC", VA = "0x1F1B2DC", Slot = "9")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1F1B348", Offset = "0x1F1B348", VA = "0x1F1B348", Slot = "33")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1F1AC40", Offset = "0x1F1AC40", VA = "0x1F1AC40")]
		public void SetButtonProperties(BrushDescriptor rBrush)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1F1B3D0", Offset = "0x1F1B3D0", VA = "0x1F1B3D0", Slot = "13")]
		protected override void OnDescriptionActivated()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1F1B420", Offset = "0x1F1B420", VA = "0x1F1B420", Slot = "14")]
		protected override void OnDescriptionDeactivated()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1F1B434", Offset = "0x1F1B434", VA = "0x1F1B434", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1F1B490", Offset = "0x1F1B490", VA = "0x1F1B490", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1F1B56C", Offset = "0x1F1B56C", VA = "0x1F1B56C", Slot = "36")]
		public override void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1F1B6CC", Offset = "0x1F1B6CC", VA = "0x1F1B6CC", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1F1B4B0", Offset = "0x1F1B4B0", VA = "0x1F1B4B0")]
		private void PlaceIconsOnPreviewCube(float offsetPercent)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1F1B774", Offset = "0x1F1B774", VA = "0x1F1B774", Slot = "5")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1F1B850", Offset = "0x1F1B850", VA = "0x1F1B850")]
		public BrushTypeButton()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class CameraModeSlider : BaseSlider
	{
		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int kCameraModeCount;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1F1B858", Offset = "0x1F1B858", VA = "0x1F1B858", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1F1B9D4", Offset = "0x1F1B9D4", VA = "0x1F1B9D4", Slot = "32")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1F1BB80", Offset = "0x1F1BB80", VA = "0x1F1BB80")]
		public CameraModeSlider()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class CameraPathButtons : UIComponent
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_PathObjects;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_NoPathObjects;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshPro m_NoPathText;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_FirstPathMessage;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string m_NonFirstPathMessage;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private OptionButton m_RecordButton;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1F1BC4C", Offset = "0x1F1BC4C", VA = "0x1F1BC4C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1F1BEB4", Offset = "0x1F1BEB4", VA = "0x1F1BEB4", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1F1C038", Offset = "0x1F1C038", VA = "0x1F1C038", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1F1C27C", Offset = "0x1F1C27C", VA = "0x1F1C27C", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1F1C2FC", Offset = "0x1F1C2FC", VA = "0x1F1C2FC", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1F1C324", Offset = "0x1F1C324", VA = "0x1F1C324", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1F1C4E0", Offset = "0x1F1C4E0", VA = "0x1F1C4E0", Slot = "24")]
		public override void ManagerLostFocus()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1F1C508", Offset = "0x1F1C508", VA = "0x1F1C508", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1F1BEB8", Offset = "0x1F1BEB8", VA = "0x1F1BEB8")]
		private void RefreshButtonsVisibility()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1F1C530", Offset = "0x1F1C530", VA = "0x1F1C530")]
		public CameraPathButtons()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class CameraPathPreviewScreen : OptionButton
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Material m_UninitializedCameraMaterial;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject m_PauseIcon;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject m_PlayIcon;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Collider m_ScrubBar;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Transform m_ScrubBarCursor;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Transform m_ScrubBarForeground;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private ScreenshotManager m_SsMgr;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool m_PreviewOn;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool m_ScrubBarHasFocus;

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1F1C538", Offset = "0x1F1C538", VA = "0x1F1C538", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1F1C7DC", Offset = "0x1F1C7DC", VA = "0x1F1C7DC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1F1C9DC", Offset = "0x1F1C9DC", VA = "0x1F1C9DC")]
		private void UpdateScreenVisuals()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1F1CAE0", Offset = "0x1F1CAE0", VA = "0x1F1CAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1F1CBC4", Offset = "0x1F1CBC4", VA = "0x1F1CBC4")]
		private void PositionScrubBar(float zeroToOne)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1F1CC68", Offset = "0x1F1CC68", VA = "0x1F1CC68", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1F1CD68", Offset = "0x1F1CD68", VA = "0x1F1CD68", Slot = "24")]
		public override void ManagerLostFocus()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1F1CDA8", Offset = "0x1F1CDA8", VA = "0x1F1CDA8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1F1CF28", Offset = "0x1F1CF28", VA = "0x1F1CF28", Slot = "17")]
		public override void ButtonHeld(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1F1D030", Offset = "0x1F1D030", VA = "0x1F1D030", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1F1CF38", Offset = "0x1F1CF38", VA = "0x1F1CF38")]
		private void SetScrubBarToReticlePosition()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1F1D038", Offset = "0x1F1D038", VA = "0x1F1D038")]
		public CameraPathPreviewScreen()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class CameraPathToolModeButton : BaseButton
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private CameraPathTool.Mode m_Mode;

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1F1D040", Offset = "0x1F1D040", VA = "0x1F1D040", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1F1D0D8", Offset = "0x1F1D0D8", VA = "0x1F1D0D8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1F1D170", Offset = "0x1F1D170", VA = "0x1F1D170", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1F1D32C", Offset = "0x1F1D32C", VA = "0x1F1D32C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1F1D44C", Offset = "0x1F1D44C", VA = "0x1F1D44C")]
		public CameraPathToolModeButton()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class CameraPathsVisibilityButton : OptionButton
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1F1D454", Offset = "0x1F1D454", VA = "0x1F1D454", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1F1D4EC", Offset = "0x1F1D4EC", VA = "0x1F1D4EC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1F1D584", Offset = "0x1F1D584", VA = "0x1F1D584")]
		public CameraPathsVisibilityButton()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ColorJitterSlider : BaseSlider
	{
		[Serializable]
		[Token(Token = "0x2000295")]
		public enum JitterProperties
		{
			[Token(Token = "0x4000F2C")]
			Hue,
			[Token(Token = "0x4000F2D")]
			Saturation,
			[Token(Token = "0x4000F2E")]
			Value,
			[Token(Token = "0x4000F2F")]
			Size,
			[Token(Token = "0x4000F30")]
			Position
		}

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float pow;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public JitterProperties JitterProperty;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1F1D58C", Offset = "0x1F1D58C", VA = "0x1F1D58C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1F1D664", Offset = "0x1F1D664", VA = "0x1F1D664", Slot = "32")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1F1D724", Offset = "0x1F1D724", VA = "0x1F1D724", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x1F1D730", Offset = "0x1F1D730", VA = "0x1F1D730")]
		public ColorJitterSlider()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class ColorPicker : UIComponent
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ColorPickerSelector m_ColorPickerSelector;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ColorPickerSlider m_ColorPickerSlider;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer m_ColorPickerSelectorBorderCube;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Renderer m_ColorPickerSelectorBorderCylinder;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_CircleBack;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ColorController m_ColorController;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_ActiveInputObject;

		[Token(Token = "0x170002C2")]
		public ColorController Controller
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x1F1D9D8", Offset = "0x1F1D9D8", VA = "0x1F1D9D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<Color> ColorPicked
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x1F1D740", Offset = "0x1F1D740", VA = "0x1F1D740")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x1F1D7F0", Offset = "0x1F1D7F0", VA = "0x1F1D7F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action ColorFinalized
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x1F1D8A0", Offset = "0x1F1D8A0", VA = "0x1F1D8A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x1F1D93C", Offset = "0x1F1D93C", VA = "0x1F1D93C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1F1D9E0", Offset = "0x1F1D9E0", VA = "0x1F1D9E0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1F1DC50", Offset = "0x1F1DC50", VA = "0x1F1DC50", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1F1DD44", Offset = "0x1F1DD44", VA = "0x1F1DD44", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1F1DEF8", Offset = "0x1F1DEF8", VA = "0x1F1DEF8", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1F1E294", Offset = "0x1F1E294", VA = "0x1F1E294", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1F1E310", Offset = "0x1F1E310", VA = "0x1F1E310")]
		private void UpdateColorSelectorAndSlider(bool inputValid, Ray inputRay, Collider parentCollider)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1F1EE9C", Offset = "0x1F1EE9C", VA = "0x1F1EE9C", Slot = "27")]
		public override bool CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1F1F0D0", Offset = "0x1F1F0D0", VA = "0x1F1F0D0", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1F1EBF0", Offset = "0x1F1EBF0", VA = "0x1F1EBF0")]
		private void TriggerColorPicked(Color color)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1F1EA5C", Offset = "0x1F1EA5C", VA = "0x1F1EA5C")]
		private void ResetActiveInputObject()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1F1EBAC", Offset = "0x1F1EBAC", VA = "0x1F1EBAC")]
		private void UpdateSelectorSlider(float value)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1F1EBCC", Offset = "0x1F1EBCC", VA = "0x1F1EBCC")]
		private void UpdateSliderPosition()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1F1F12C", Offset = "0x1F1F12C", VA = "0x1F1F12C")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1F1F2C0", Offset = "0x1F1F2C0", VA = "0x1F1F2C0")]
		private void OnCurrentColorSet(ColorPickerMode mode, Vector3 rawColor)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1F1F338", Offset = "0x1F1F338", VA = "0x1F1F338")]
		public ColorPicker()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class ColorPickerPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ColorPicker m_ColorPicker;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private CustomColorPalette m_CustomColorPalette;

		[Token(Token = "0x170002C3")]
		public ColorPicker ColorPicker
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x1F1F340", Offset = "0x1F1F340", VA = "0x1F1F340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public CustomColorPalette CustomColorPalette
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x1F1F348", Offset = "0x1F1F348", VA = "0x1F1F348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1F1F350", Offset = "0x1F1F350", VA = "0x1F1F350")]
		public ColorPickerPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class ColorPickerPopupButton : OptionButton
	{
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1F1F358", Offset = "0x1F1F358", VA = "0x1F1F358")]
		public ColorPickerPopupButton()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ColorPickerSelector : MonoBehaviour
	{
		[Token(Token = "0x4000F3C")]
		private const float SQRT3 = 1.7320508f;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_HighlightMesh;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider m_Collider;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_Renderer;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh m_StandardMesh;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh m_TriangleMesh;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_CurrentValueTransform;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ColorPickerMode m_LocalMode;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FixedSelectorPlane;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_RawValue;

		[Token(Token = "0x170002C5")]
		public Vector3 RawValue
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x1F1F368", Offset = "0x1F1F368", VA = "0x1F1F368")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x1F1EC64", Offset = "0x1F1EC64", VA = "0x1F1EC64")]
			set
			{
			}
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1F1F360", Offset = "0x1F1F360", VA = "0x1F1F360")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1F1F374", Offset = "0x1F1F374", VA = "0x1F1F374")]
		public void SetLocalMode(ColorPickerMode mode)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1F1F37C", Offset = "0x1F1F37C", VA = "0x1F1F37C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1F1F60C", Offset = "0x1F1F60C", VA = "0x1F1F60C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1F1F6B8", Offset = "0x1F1F6B8", VA = "0x1F1F6B8")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1F1EC0C", Offset = "0x1F1EC0C", VA = "0x1F1EC0C")]
		public Vector3 GetValueFromHit(RaycastHit hit)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1F1E090", Offset = "0x1F1E090", VA = "0x1F1E090")]
		public void SetTintColor(Color rColor)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1F1F778", Offset = "0x1F1F778", VA = "0x1F1F778")]
		public ColorPickerSelector()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ColorPickerSlider : MonoBehaviour
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Width;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_Height;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_sliderTex;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_tempColors;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_CurrentValueTransform;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider m_Collider;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ColorPickerMode m_LocalMode;

		[Token(Token = "0x170002C6")]
		public float RawValue
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x1F1F788", Offset = "0x1F1F788", VA = "0x1F1F788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x1F1F0EC", Offset = "0x1F1F0EC", VA = "0x1F1F0EC")]
			set
			{
			}
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1F1F780", Offset = "0x1F1F780", VA = "0x1F1F780")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1F1F7C4", Offset = "0x1F1F7C4", VA = "0x1F1F7C4")]
		public void SetLocalMode(ColorPickerMode mode)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1F1F7CC", Offset = "0x1F1F7CC", VA = "0x1F1F7CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1F1F95C", Offset = "0x1F1F95C", VA = "0x1F1F95C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1F1EB4C", Offset = "0x1F1EB4C", VA = "0x1F1EB4C")]
		public float GetValueFromHit(RaycastHit hit)
		{
			return default(float);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1F1FA08", Offset = "0x1F1FA08", VA = "0x1F1FA08")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1F1EDBC", Offset = "0x1F1EDBC", VA = "0x1F1EDBC")]
		public void OnColorChanged(ColorPickerMode mode, Vector3 raw)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1F1E150", Offset = "0x1F1E150", VA = "0x1F1E150")]
		public void SetTintColor(Color rColor)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1F1FA6C", Offset = "0x1F1FA6C", VA = "0x1F1FA6C")]
		public ColorPickerSlider()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ColorSpaceToggle : MultistateButton
	{
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1F1FA74", Offset = "0x1F1FA74", VA = "0x1F1FA74", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1F1FB2C", Offset = "0x1F1FB2C", VA = "0x1F1FB2C", Slot = "42")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1F1FDF4", Offset = "0x1F1FDF4", VA = "0x1F1FDF4", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1F1FB48", Offset = "0x1F1FB48", VA = "0x1F1FB48")]
		public void RefreshOptions()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1F1FEAC", Offset = "0x1F1FEAC", VA = "0x1F1FEAC", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1F1FEB8", Offset = "0x1F1FEB8", VA = "0x1F1FEB8")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1F1FF64", Offset = "0x1F1FF64", VA = "0x1F1FF64")]
		public ColorSpaceToggle()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class CommonValueSlider : BaseSlider
	{
		[Token(Token = "0x200029D")]
		public enum ValueType
		{
			[Token(Token = "0x4000F50")]
			CameraFov,
			[Token(Token = "0x4000F51")]
			CameraSmoothing
		}

		[Token(Token = "0x4000F4D")]
		private const float kCameraSmoothingPow = 0.2f;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ValueType m_ValueType;

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1F1FF6C", Offset = "0x1F1FF6C", VA = "0x1F1FF6C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1F202E4", Offset = "0x1F202E4", VA = "0x1F202E4", Slot = "23")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1F20380", Offset = "0x1F20380", VA = "0x1F20380", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1F1FFB4", Offset = "0x1F1FFB4", VA = "0x1F1FFB4")]
		private void UpdateDescription()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1F2041C", Offset = "0x1F2041C", VA = "0x1F2041C")]
		private float SanitizeValue(float target)
		{
			return default(float);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1F20460", Offset = "0x1F20460", VA = "0x1F20460")]
		public CommonValueSlider()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class ConfirmationButton : BaseButton
	{
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		public bool m_Confirm;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
		public bool m_KeepParentOpen;

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1F20468", Offset = "0x1F20468", VA = "0x1F20468", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1F20504", Offset = "0x1F20504", VA = "0x1F20504")]
		public ConfirmationButton()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class CustomColorButton : BaseButton
	{
		[Token(Token = "0x20002A0")]
		public enum State
		{
			[Token(Token = "0x4000F5B")]
			ReadyForAdd,
			[Token(Token = "0x4000F5C")]
			Set,
			[Token(Token = "0x4000F5D")]
			Off
		}

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Texture2D m_ColorTexture;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool m_Trash;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ColorController m_ColorController;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_StorageIndex;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Color m_CustomColor;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private State m_CurrentState;

		[Token(Token = "0x170002C7")]
		public Color CustomColor
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x1F20640", Offset = "0x1F20640", VA = "0x1F20640")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x1F20650", Offset = "0x1F20650", VA = "0x1F20650")]
			set
			{
			}
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1F20514", Offset = "0x1F20514", VA = "0x1F20514")]
		public bool IsReadyForAdd()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1F20524", Offset = "0x1F20524", VA = "0x1F20524")]
		public bool IsOff()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1F20534", Offset = "0x1F20534", VA = "0x1F20534")]
		public bool IsSet()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1F20544", Offset = "0x1F20544", VA = "0x1F20544", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1F20638", Offset = "0x1F20638", VA = "0x1F20638")]
		public void SetStorageIndex(int index)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1F20958", Offset = "0x1F20958", VA = "0x1F20958")]
		public void ClearCustomColor()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1F207F8", Offset = "0x1F207F8", VA = "0x1F207F8")]
		public void SetState(State desiredState)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1F20A00", Offset = "0x1F20A00", VA = "0x1F20A00", Slot = "20")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1F20B5C", Offset = "0x1F20B5C", VA = "0x1F20B5C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1F20E98", Offset = "0x1F20E98", VA = "0x1F20E98")]
		public CustomColorButton()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class CustomColorPalette : UIComponent
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CustomColorButton[] m_Buttons;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CustomColorButton m_TrashButton;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3 m_TrashButtonPlacementOffset;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_TrashButtonLocalZ;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x14000014")]
		public event Action<Color> ColorPicked
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x1F20EA0", Offset = "0x1F20EA0", VA = "0x1F20EA0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x1F20F50", Offset = "0x1F20F50", VA = "0x1F20F50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1F21000", Offset = "0x1F21000", VA = "0x1F21000", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1F210C0", Offset = "0x1F210C0", VA = "0x1F210C0", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1F2117C", Offset = "0x1F2117C", VA = "0x1F2117C", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1F212D8", Offset = "0x1F212D8", VA = "0x1F212D8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1F2142C", Offset = "0x1F2142C", VA = "0x1F2142C", Slot = "20")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1F20AC0", Offset = "0x1F20AC0", VA = "0x1F20AC0")]
		public void PlaceTrash(Vector3 parentPos_LS, int storageIndex)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1F215AC", Offset = "0x1F215AC", VA = "0x1F215AC")]
		private void HideTrash()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1F20D44", Offset = "0x1F20D44", VA = "0x1F20D44")]
		public void RefreshPaletteButtons()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1F21724", Offset = "0x1F21724", VA = "0x1F21724", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1F218E0", Offset = "0x1F218E0", VA = "0x1F218E0", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1F20D28", Offset = "0x1F20D28", VA = "0x1F20D28")]
		public void TriggerColorPicked(Color color)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1F2194C", Offset = "0x1F2194C", VA = "0x1F2194C")]
		public CustomColorPalette()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class CustomColorPaletteStorage : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		public struct StoredColor
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool valid;
		}

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CustomColorPaletteStorage m_Instance;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModeAndPickerInfo[] m_ModeToPickerInfo;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_NumColors;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StoredColor[] m_StoredColors;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorPickerMode m_Mode;

		[Token(Token = "0x170002C8")]
		public ModeAndPickerInfo[] ModeToPickerInfo
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x1F21954", Offset = "0x1F21954", VA = "0x1F21954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public ColorPickerMode Mode
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x1F2195C", Offset = "0x1F2195C", VA = "0x1F2195C")]
			get
			{
				return default(ColorPickerMode);
			}
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x1F1DCB4", Offset = "0x1F1DCB4", VA = "0x1F1DCB4")]
			set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action StoredColorsChanged
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x1F2123C", Offset = "0x1F2123C", VA = "0x1F2123C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x1F21390", Offset = "0x1F21390", VA = "0x1F21390")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action ModeChanged
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x1F1DBB4", Offset = "0x1F1DBB4", VA = "0x1F1DBB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x1F1DE5C", Offset = "0x1F1DE5C", VA = "0x1F1DE5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1F21964", Offset = "0x1F21964", VA = "0x1F21964")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1F219E0", Offset = "0x1F219E0", VA = "0x1F219E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1F21698", Offset = "0x1F21698", VA = "0x1F21698")]
		public int GetNumValidColors()
		{
			return default(int);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1F216EC", Offset = "0x1F216EC", VA = "0x1F216EC")]
		public Color GetColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1F206F4", Offset = "0x1F206F4", VA = "0x1F206F4")]
		public void SetColor(int index, Color col, bool colorsChanged = false)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1F21A58", Offset = "0x1F21A58", VA = "0x1F21A58")]
		public void ClearAllColors()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1F209B0", Offset = "0x1F209B0", VA = "0x1F209B0")]
		public void ClearColor(int index)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1F21AC4", Offset = "0x1F21AC4", VA = "0x1F21AC4")]
		public Palette GetPaletteForSaving()
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1F21EBC", Offset = "0x1F21EBC", VA = "0x1F21EBC")]
		public void SetColorsFromPalette(Palette palette)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1F215D8", Offset = "0x1F215D8", VA = "0x1F215D8")]
		public void RefreshStoredColors()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1F220FC", Offset = "0x1F220FC", VA = "0x1F220FC")]
		public CustomColorPaletteStorage()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class DeleteCameraPathPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1F2210C", Offset = "0x1F2210C", VA = "0x1F2210C", Slot = "4")]
		public override void Init(GameObject parent, string text)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1F22284", Offset = "0x1F22284", VA = "0x1F22284", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1F2235C", Offset = "0x1F2235C", VA = "0x1F2235C")]
		public DeleteCameraPathPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class DownloadPopupWindow : PopUpWindow
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int m_SketchIndex;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Renderer m_ProgressBar;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GoogleDriveSketchSet.GoogleDriveFileInfo m_SceneFileInfo;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private TaskAndCts m_DownloadTask;

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1F22364", Offset = "0x1F22364", VA = "0x1F22364", Slot = "5")]
		public override void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1F22524", Offset = "0x1F22524", VA = "0x1F22524", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1F225C0", Offset = "0x1F225C0", VA = "0x1F225C0", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1F22668", Offset = "0x1F22668", VA = "0x1F22668", Slot = "6")]
		public override bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1F226B0", Offset = "0x1F226B0", VA = "0x1F226B0")]
		public DownloadPopupWindow()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class DrivePopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_DriveLinkEnabledElements;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_DriveLinkDisabledElements;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_DriveFullElements;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_BackupCompleteElements;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_BackingUpElements;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TextMesh m_BackingUpProgress;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_DriveSyncing;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1F226B8", Offset = "0x1F226B8", VA = "0x1F226B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1F22750", Offset = "0x1F22750", VA = "0x1F22750")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1F227E8", Offset = "0x1F227E8", VA = "0x1F227E8", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1F22918", Offset = "0x1F22918", VA = "0x1F22918", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1F2282C", Offset = "0x1F2282C", VA = "0x1F2282C")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1F22964", Offset = "0x1F22964", VA = "0x1F22964")]
		private void RefreshBackupProgressText()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1F22A4C", Offset = "0x1F22A4C", VA = "0x1F22A4C")]
		public DrivePopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class DriveSyncProgress : MonoBehaviour
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_Material;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1F22A54", Offset = "0x1F22A54", VA = "0x1F22A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1F22AB4", Offset = "0x1F22AB4", VA = "0x1F22AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1F22B38", Offset = "0x1F22B38", VA = "0x1F22B38")]
		public DriveSyncProgress()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class ExitTiltBrushPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected TextMesh m_Title;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected SaveAndConfirmButton m_SaveButton;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_Title_Saving;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string m_Title_NoSaving;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string m_SaveButtonDescription_Saving;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string m_SaveButtonDescription_NoSaving;

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1F22B40", Offset = "0x1F22B40", VA = "0x1F22B40", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1F22C80", Offset = "0x1F22C80", VA = "0x1F22C80")]
		public ExitTiltBrushPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class FloatPropertySlider : BaseSlider
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SerializedPropertyReferenceFloat m_Property;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Vec2AsRange]
		[SerializeField]
		private Vector2 m_Range;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Tooltip("Values < 1 will bias the low end - Values > 1 will bias the high end.")]
		private float m_PowerCurve;

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1F22C88", Offset = "0x1F22C88", VA = "0x1F22C88", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1F22D58", Offset = "0x1F22D58", VA = "0x1F22D58", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1F22E20", Offset = "0x1F22E20", VA = "0x1F22E20")]
		public FloatPropertySlider()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class FogDensitySlider : BaseSlider
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_FogDensity;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_MaxFogDensity;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1F22E80", Offset = "0x1F22E80", VA = "0x1F22E80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1F22F30", Offset = "0x1F22F30", VA = "0x1F22F30", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1F22FEC", Offset = "0x1F22FEC", VA = "0x1F22FEC", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1F23160", Offset = "0x1F23160", VA = "0x1F23160", Slot = "33")]
		protected override void OnPositionSliderNobUpdated()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1F23260", Offset = "0x1F23260", VA = "0x1F23260", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1F23374", Offset = "0x1F23374", VA = "0x1F23374", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1F2339C", Offset = "0x1F2339C", VA = "0x1F2339C")]
		private void OnFogDensityChanged()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1F23274", Offset = "0x1F23274", VA = "0x1F23274")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1F23410", Offset = "0x1F23410", VA = "0x1F23410")]
		public FogDensitySlider()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class FrameCountDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_numFrames;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1F23424", Offset = "0x1F23424", VA = "0x1F23424")]
		public void SetFramesTotal(int frames)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1F234D8", Offset = "0x1F234D8", VA = "0x1F234D8")]
		public void SetCurrentFrame(int frame)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1F235A4", Offset = "0x1F235A4", VA = "0x1F235A4")]
		public FrameCountDisplay()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class GalleryButton : ModeButton
	{
		[Token(Token = "0x20002AD")]
		public enum Type
		{
			[Token(Token = "0x4000F88")]
			Delete,
			[Token(Token = "0x4000F89")]
			Selection,
			[Token(Token = "0x4000F8A")]
			LogOut,
			[Token(Token = "0x4000F8B")]
			Liked,
			[Token(Token = "0x4000F8C")]
			Exit,
			[Token(Token = "0x4000F8D")]
			Showcase,
			[Token(Token = "0x4000F8E")]
			Local,
			[Token(Token = "0x4000F8F")]
			Drive
		}

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Type m_ButtonType;

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1F235AC", Offset = "0x1F235AC", VA = "0x1F235AC", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1F2365C", Offset = "0x1F2365C", VA = "0x1F2365C")]
		public GalleryButton()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class GpuTextRender : MonoBehaviour
	{
		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_Material;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_Width;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_Height;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Multiline(16)]
		[SerializeField]
		private string m_Text;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_TargetTexture;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D m_SourceTexture;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_Data;

		[Token(Token = "0x170002CA")]
		public RenderTexture RenderedTexture
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x1F23664", Offset = "0x1F23664", VA = "0x1F23664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1F2366C", Offset = "0x1F2366C", VA = "0x1F2366C")]
		public void SetData(int index, float value)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1F2369C", Offset = "0x1F2369C", VA = "0x1F2369C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1F23BB4", Offset = "0x1F23BB4", VA = "0x1F23BB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1F23C4C", Offset = "0x1F23C4C", VA = "0x1F23C4C")]
		public GpuTextRender()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class InspectSketchButton : BaseButton
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_SketchIndex;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private SketchSetType m_SketchSetType;

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1F23C54", Offset = "0x1F23C54", VA = "0x1F23C54")]
		public void SetSketchDetails(int index, SketchSetType type)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1F23C5C", Offset = "0x1F23C5C", VA = "0x1F23C5C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1F23CF0", Offset = "0x1F23CF0", VA = "0x1F23CF0")]
		public InspectSketchButton()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class LightButton : BaseButton
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LightMode m_ButtonType;

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1F23CF8", Offset = "0x1F23CF8", VA = "0x1F23CF8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1F2402C", Offset = "0x1F2402C", VA = "0x1F2402C", Slot = "5")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1F2415C", Offset = "0x1F2415C", VA = "0x1F2415C")]
		public LightButton()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class LightGizmo : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		private enum DragState
		{
			[Token(Token = "0x4000FAB")]
			None,
			[Token(Token = "0x4000FAC")]
			Hover,
			[Token(Token = "0x4000FAD")]
			Drag
		}

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_ColorIndicator;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_BroadCollider;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_LightMesh;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer[] m_TintableMeshes;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform[] m_HighlightMeshXfs;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DampenDeadRadius;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_DampenRadius;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DampenExp;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Mesh[] m_HighlightMeshes;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_LightID;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Light m_Light;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_Rotation_SS;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DragState m_State;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private TrTransform m_BaseDragXf_LS;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LightsPanel m_ParentPanel;

		[Token(Token = "0x170002CB")]
		public Collider BroadCollider
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x1F24164", Offset = "0x1F24164", VA = "0x1F24164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public Collider Collider
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x1F2416C", Offset = "0x1F2416C", VA = "0x1F2416C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public bool Visible
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x1F24174", Offset = "0x1F24174", VA = "0x1F24174")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x1F24194", Offset = "0x1F24194", VA = "0x1F24194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public bool IsBeingHovered
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x1F241A4", Offset = "0x1F241A4", VA = "0x1F241A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1F241B4", Offset = "0x1F241B4", VA = "0x1F241B4")]
		public void SetParentPanel(LightsPanel panel)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1F2425C", Offset = "0x1F2425C", VA = "0x1F2425C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1F243AC", Offset = "0x1F243AC", VA = "0x1F243AC")]
		public Color SetLight(int ID)
		{
			return default(Color);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1F244F0", Offset = "0x1F244F0", VA = "0x1F244F0", Slot = "4")]
		public virtual void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1F245F8", Offset = "0x1F245F8", VA = "0x1F245F8")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1F24614", Offset = "0x1F24614", VA = "0x1F24614")]
		public void UpdateTint()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1F24784", Offset = "0x1F24784", VA = "0x1F24784")]
		public bool UpdateDragState(bool hit, bool activate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x1F24DF8", Offset = "0x1F24DF8", VA = "0x1F24DF8")]
		public void SetRotation(Quaternion rotation_SS)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x1F24E64", Offset = "0x1F24E64", VA = "0x1F24E64")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1F25220", Offset = "0x1F25220", VA = "0x1F25220")]
		public LightGizmo()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class LightingButton : BaseButton
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Environment m_Preset;

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1F25334", Offset = "0x1F25334", VA = "0x1F25334", Slot = "33")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1F253BC", Offset = "0x1F253BC", VA = "0x1F253BC")]
		public void SetPreset(Environment rPreset)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1F25480", Offset = "0x1F25480", VA = "0x1F25480", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1F25654", Offset = "0x1F25654", VA = "0x1F25654")]
		public LightingButton()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class LightingPopUpWindow : PagingPopUpWindow
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string m_CurrentPresetDesc;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Environment> m_Environments;

		[Token(Token = "0x170002D0")]
		protected override int m_DataCount
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x1F2565C", Offset = "0x1F2565C", VA = "0x1F2565C", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1F256A4", Offset = "0x1F256A4", VA = "0x1F256A4", Slot = "17")]
		protected override void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1F256C0", Offset = "0x1F256C0", VA = "0x1F256C0", Slot = "18")]
		protected override void RefreshIcon(ImageIcon icon, int iCatalog)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1F257CC", Offset = "0x1F257CC", VA = "0x1F257CC", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1F25A08", Offset = "0x1F25A08", VA = "0x1F25A08")]
		protected void OnFadingToDesiredEnvironment()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1F25AAC", Offset = "0x1F25AAC", VA = "0x1F25AAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1F25B90", Offset = "0x1F25B90", VA = "0x1F25B90")]
		public LightingPopUpWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public enum LightMode
	{
		[Token(Token = "0x4000FB2")]
		Ambient = -1,
		[Token(Token = "0x4000FB3")]
		Shadow,
		[Token(Token = "0x4000FB4")]
		NoShadow,
		[Token(Token = "0x4000FB5")]
		NumLights
	}
	[Token(Token = "0x20002B6")]
	public class LightsPanel : BasePanel
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private LightButton[] m_LightButtons;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private LightGizmo m_MainLightGizmoPrefab;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private LightGizmo m_SecondaryLightGizmoPrefab;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float m_LightSize;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Material m_PreviewSphereMaterial;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private Material m_LightButtonHDRMaterial;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Transform m_PreviewSphereParent;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[SerializeField]
		private float m_ColorPickerPopUpHeightOffset;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private Transform m_ShadowLightFake;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private Renderer m_ShadowLightColorIndicator;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private Transform m_NoShadowLightFake;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Renderer m_NoShadowLightColorIndicator;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private Transform m_PreviewSphere;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private Transform m_PreviewSphereBase;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private Material m_PreviewSphereMaterialInstance;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private LightGizmo m_LightGizmo_Shadow;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private LightGizmo m_LightGizmo_NoShadow;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private LightGizmo m_GizmoPointedAt;

		[Token(Token = "0x170002D1")]
		public Vector3 PreviewCenter
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x1F24DD0", Offset = "0x1F24DD0", VA = "0x1F24DD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D2")]
		public bool IsLightGizmoBeingDragged
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x1F25B98", Offset = "0x1F25B98", VA = "0x1F25B98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D3")]
		public bool IsLightGizmoBeingHovered
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x1F25BD8", Offset = "0x1F25BD8", VA = "0x1F25BD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D4")]
		public Vector3 ActiveLightGizmoPosition
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1F25C18", Offset = "0x1F25C18", VA = "0x1F25C18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1F25134", Offset = "0x1F25134", VA = "0x1F25134")]
		public Vector3 LightWidgetPosition(Quaternion lightRot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1F25C5C", Offset = "0x1F25C5C", VA = "0x1F25C5C", Slot = "9")]
		public override void OnPanelMoved()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x1F25EC4", Offset = "0x1F25EC4", VA = "0x1F25EC4")]
		private bool IsPositionCloserThanPreview(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1F26020", Offset = "0x1F26020", VA = "0x1F26020")]
		private void ActivateButtons(bool show)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x1F26094", Offset = "0x1F26094", VA = "0x1F26094", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1F26328", Offset = "0x1F26328", VA = "0x1F26328", Slot = "21")]
		public override void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1F26370", Offset = "0x1F26370", VA = "0x1F26370", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1F264C8", Offset = "0x1F264C8", VA = "0x1F264C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1F264D4", Offset = "0x1F264D4", VA = "0x1F264D4", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1F26690", Offset = "0x1F26690", VA = "0x1F26690", Slot = "13")]
		protected override void OnDisablePanel()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1F262C0", Offset = "0x1F262C0", VA = "0x1F262C0")]
		public Color GetLightColor(LightMode mode)
		{
			return default(Color);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1F267B0", Offset = "0x1F267B0", VA = "0x1F267B0")]
		public void SetDiscoLights(Color ambient, Color shadow, Color noShadow, bool noRecord)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1F2684C", Offset = "0x1F2684C", VA = "0x1F2684C")]
		private void SetLightColor(LightMode mode, Color color, bool noRecord = false)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x1F26C68", Offset = "0x1F26C68", VA = "0x1F26C68")]
		public LightGizmo GetLight(LightMode light)
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1F26C90", Offset = "0x1F26C90", VA = "0x1F26C90")]
		private Action<Color> OnColorPicked(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1F26D54", Offset = "0x1F26D54", VA = "0x1F26D54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1F27118", Offset = "0x1F27118", VA = "0x1F27118", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1F2776C", Offset = "0x1F2776C", VA = "0x1F2776C", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1F27890", Offset = "0x1F27890", VA = "0x1F27890", Slot = "20")]
		public override void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1F27990", Offset = "0x1F27990", VA = "0x1F27990")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1F26A04", Offset = "0x1F26A04", VA = "0x1F26A04")]
		private void RefreshLightButtons()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1F27B44", Offset = "0x1F27B44", VA = "0x1F27B44", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1F2623C", Offset = "0x1F2623C", VA = "0x1F2623C")]
		private string LightModeToString(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1F23DA0", Offset = "0x1F23DA0", VA = "0x1F23DA0")]
		public void ButtonPressed(LightMode mode)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1F27BB8", Offset = "0x1F27BB8", VA = "0x1F27BB8")]
		private Action MakeOnPopUpClose(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1F27C74", Offset = "0x1F27C74", VA = "0x1F27C74")]
		private Action MakeLightColorFinalized(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1F27D20", Offset = "0x1F27D20", VA = "0x1F27D20")]
		private Action<Color> MakeLightColorPickedAsFinal(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1F27DF4", Offset = "0x1F27DF4", VA = "0x1F27DF4", Slot = "18")]
		protected override void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1F280C4", Offset = "0x1F280C4", VA = "0x1F280C4")]
		public LightsPanel()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class LoadReferenceImageButton : BaseButton
	{
		[Token(Token = "0x170002D5")]
		public ReferenceImage ReferenceImage
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x1F28934", Offset = "0x1F28934", VA = "0x1F28934")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1F2893C", Offset = "0x1F2893C", VA = "0x1F2893C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1F28944", Offset = "0x1F28944", VA = "0x1F28944")]
		public void RefreshDescription()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1F28A08", Offset = "0x1F28A08", VA = "0x1F28A08", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1F28C54", Offset = "0x1F28C54", VA = "0x1F28C54", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1F28CE4", Offset = "0x1F28CE4", VA = "0x1F28CE4")]
		public LoadReferenceImageButton()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class LoadSketchButton : BaseButton
	{
		[Serializable]
		[Token(Token = "0x20002BE")]
		public struct MenuButton
		{
			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SketchControlsScript.GlobalCommands m_Command;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture m_Icon;
		}

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private InspectSketchButton m_MenuButton;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject m_Warning;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Material m_WarningMaterial;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_ErrorMaterial;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_ThumbnailLoaded;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_SizeOk;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector2 m_DynamicUvScale;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector2 m_DynamicUvOffset;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float m_DynamicUvTransitionSpeed;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_DynamicUvTransitionValue;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_SketchIndex;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private SketchSet m_SketchSet;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x170002D6")]
		public int SketchIndex
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x1F28CEC", Offset = "0x1F28CEC", VA = "0x1F28CEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x1F28CF4", Offset = "0x1F28CF4", VA = "0x1F28CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public SketchSet SketchSet
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x1F2906C", Offset = "0x1F2906C", VA = "0x1F2906C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x1F29074", Offset = "0x1F29074", VA = "0x1F29074")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public bool ThumbnailLoaded
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x1F2907C", Offset = "0x1F2907C", VA = "0x1F2907C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x1F29084", Offset = "0x1F29084", VA = "0x1F29084")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float FadeIn
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x1F29090", Offset = "0x1F29090", VA = "0x1F29090")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public bool WarningVisible
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x1F2918C", Offset = "0x1F2918C", VA = "0x1F2918C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x1F290F4", Offset = "0x1F290F4", VA = "0x1F290F4")]
			set
			{
			}
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1F28CFC", Offset = "0x1F28CFC", VA = "0x1F28CFC")]
		private void RefreshDetails()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1F29214", Offset = "0x1F29214", VA = "0x1F29214")]
		public void UpdateUvOffsetAndScale(Vector2 offset, Vector2 scale)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1F292F0", Offset = "0x1F292F0", VA = "0x1F292F0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1F293CC", Offset = "0x1F293CC", VA = "0x1F293CC", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1F29530", Offset = "0x1F29530", VA = "0x1F29530", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1F297A0", Offset = "0x1F297A0", VA = "0x1F297A0", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1F2996C", Offset = "0x1F2996C", VA = "0x1F2996C", Slot = "19")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1F29A6C", Offset = "0x1F29A6C", VA = "0x1F29A6C", Slot = "20")]
		public override void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1F29BF4", Offset = "0x1F29BF4", VA = "0x1F29BF4", Slot = "21")]
		public override void LostFocus()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1F29C2C", Offset = "0x1F29C2C", VA = "0x1F29C2C", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1F29C74", Offset = "0x1F29C74", VA = "0x1F29C74")]
		public LoadSketchButton()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class LocalModelButton : ModelButton
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private BaseButton m_MenuButton;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1F29C8C", Offset = "0x1F29C8C", VA = "0x1F29C8C", Slot = "44")]
		protected override void RequestModelPreloadInternal(string reason)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1F29CBC", Offset = "0x1F29CBC", VA = "0x1F29CBC", Slot = "45")]
		protected override void CancelRequestModelPreload()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1F29CC0", Offset = "0x1F29CC0", VA = "0x1F29CC0")]
		public LocalModelButton()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class LongPressButton : OptionButton
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float m_LongPressDuration;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float m_PressTimer;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1F29CC8", Offset = "0x1F29CC8", VA = "0x1F29CC8", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1F29CE4", Offset = "0x1F29CE4", VA = "0x1F29CE4")]
		private void OnLongPress()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1F29E70", Offset = "0x1F29E70", VA = "0x1F29E70", Slot = "16")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1F29EA4", Offset = "0x1F29EA4", VA = "0x1F29EA4", Slot = "17")]
		public override void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1F29EFC", Offset = "0x1F29EFC", VA = "0x1F29EFC", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1F29FEC", Offset = "0x1F29FEC", VA = "0x1F29FEC", Slot = "19")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1F2A0A8", Offset = "0x1F2A0A8", VA = "0x1F2A0A8")]
		public LongPressButton()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class LongPressToolButton : LongPressButton
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private BaseTool.ToolType m_Tool;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool m_EatGazeInputOnPress;

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1F2A0BC", Offset = "0x1F2A0BC", VA = "0x1F2A0BC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1F2A154", Offset = "0x1F2A154", VA = "0x1F2A154", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1F2A1EC", Offset = "0x1F2A1EC", VA = "0x1F2A1EC", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1F2A294", Offset = "0x1F2A294", VA = "0x1F2A294", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1F2A368", Offset = "0x1F2A368", VA = "0x1F2A368")]
		public LongPressToolButton()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class MemoryWarningMessage : UIComponent
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_ExceededMessage;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_WarningMessage;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1F2A37C", Offset = "0x1F2A37C", VA = "0x1F2A37C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1F2A54C", Offset = "0x1F2A54C", VA = "0x1F2A54C", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1F2A474", Offset = "0x1F2A474", VA = "0x1F2A474")]
		private void OnMemoryStateChanged()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1F2A63C", Offset = "0x1F2A63C", VA = "0x1F2A63C")]
		public MemoryWarningMessage()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	internal class MenuPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1F2A644", Offset = "0x1F2A644", VA = "0x1F2A644", Slot = "5")]
		public override void SetPopupCommandParameters(int iCommandParam, int iCommandParam2)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1F2A6F4", Offset = "0x1F2A6F4", VA = "0x1F2A6F4")]
		public MenuPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public abstract class ModalPanel : BasePanel
	{
		[Token(Token = "0x20002C5")]
		protected enum PageFlipState
		{
			[Token(Token = "0x4000FF5")]
			Standard,
			[Token(Token = "0x4000FF6")]
			TransitionOut,
			[Token(Token = "0x4000FF7")]
			TransitionIn
		}

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		protected GameObject m_PrevButton;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		protected GameObject m_NextButton;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		protected NavButton[] m_NavigationButtons;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		protected ModeButton[] m_ModeButtons;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		protected PageFlipState m_CurrentPageFlipState;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float m_PageFlipTransitionAmount;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float m_PageFlipSpeed;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private List<BaseButton> m_Icons;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int m_PageIndex;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		protected int m_RequestedPageIndex;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		protected int m_NumPages;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		protected int m_IndexOffset;

		[Token(Token = "0x170002DB")]
		protected virtual int PageIndex
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x1F2A6FC", Offset = "0x1F2A6FC", VA = "0x1F2A6FC", Slot = "29")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x1F2A704", Offset = "0x1F2A704", VA = "0x1F2A704", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		protected virtual List<BaseButton> Icons
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x1F2A70C", Offset = "0x1F2A70C", VA = "0x1F2A70C", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C1")]
		public abstract bool IsInButtonMode(ModeButton button);

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1F2A714", Offset = "0x1F2A714", VA = "0x1F2A714")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1F2A8F8", Offset = "0x1F2A8F8", VA = "0x1F2A8F8", Slot = "33")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1F2A8FC", Offset = "0x1F2A8FC", VA = "0x1F2A8FC", Slot = "34")]
		protected virtual void RefreshPage()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1F2AD08", Offset = "0x1F2AD08", VA = "0x1F2AD08")]
		protected void PageFlipUpdate()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1F2AEBC", Offset = "0x1F2AEBC", VA = "0x1F2AEBC", Slot = "35")]
		protected virtual void UpdateIndexOffset()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1F2AD80", Offset = "0x1F2AD80", VA = "0x1F2AD80")]
		private void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1F2AE40", Offset = "0x1F2AE40", VA = "0x1F2AE40")]
		private void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x1F2AF34", Offset = "0x1F2AF34", VA = "0x1F2AF34", Slot = "36")]
		protected virtual void UpdateButtonTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1F2B0F4", Offset = "0x1F2B0F4", VA = "0x1F2B0F4", Slot = "27")]
		public override void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1F2B114", Offset = "0x1F2B114", VA = "0x1F2B114", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1F2B164", Offset = "0x1F2B164", VA = "0x1F2B164")]
		protected void ResetPageIndex()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1F2B1A4", Offset = "0x1F2B1A4", VA = "0x1F2B1A4")]
		protected ModalPanel()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public abstract class ModeButton : BaseButton
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x2565090", Offset = "0x2565090", VA = "0x2565090", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x2565188", Offset = "0x2565188", VA = "0x2565188")]
		protected ModeButton()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public abstract class ModelButton : BaseButton
	{
		[Token(Token = "0x20002C9")]
		[CompilerGenerated]
		private sealed class <LoadModelAndRefreshButton>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ModelButton <>4__this;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011E6")]
				[Address(RVA = "0x2566040", Offset = "0x2566040", VA = "0x2566040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011E8")]
				[Address(RVA = "0x2566088", Offset = "0x2566088", VA = "0x2566088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x2565C64", Offset = "0x2565C64", VA = "0x2565C64")]
			[DebuggerHidden]
			public <LoadModelAndRefreshButton>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x2565F78", Offset = "0x2565F78", VA = "0x2565F78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x2565F7C", Offset = "0x2565F7C", VA = "0x2565F7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x2566048", Offset = "0x2566048", VA = "0x2566048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected Transform m_PreviewParent;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_RotationSeconds;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Texture2D m_UnloadedTexture;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Texture2D m_LoadedTexture;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Texture2D m_ErrorTexture;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string m_LoadHelpText;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Model m_Model;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Model m_ModelPreviewModel;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int m_ModelIndex;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform m_ModelPreview;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Quaternion m_PreviewBaseRotation;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_AnimateValue;

		[Token(Token = "0x170002DD")]
		protected virtual Texture2D UnloadedTexture
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x2565190", Offset = "0x2565190", VA = "0x2565190", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		protected virtual string ModelName
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x2565198", Offset = "0x2565198", VA = "0x2565198", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x25651B4", Offset = "0x25651B4", VA = "0x25651B4")]
		public void CreatePreviewModel()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x256547C", Offset = "0x256547C", VA = "0x256547C", Slot = "43")]
		protected virtual void RefreshModelButton()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x2565704", Offset = "0x2565704", VA = "0x2565704")]
		public void RequestModelPreload(int pageIndex)
		{
		}

		[Token(Token = "0x60011D8")]
		protected abstract void RequestModelPreloadInternal(string reason);

		[Token(Token = "0x60011D9")]
		protected abstract void CancelRequestModelPreload();

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x25657C4", Offset = "0x25657C4", VA = "0x25657C4", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x2565BFC", Offset = "0x2565BFC", VA = "0x2565BFC")]
		[IteratorStateMachine(typeof(<LoadModelAndRefreshButton>d__22))]
		private IEnumerator LoadModelAndRefreshButton()
		{
			return null;
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x2565808", Offset = "0x2565808", VA = "0x2565808")]
		protected void SpawnValidModel(Model model)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x2565C8C", Offset = "0x2565C8C", VA = "0x2565C8C")]
		public void SetPreset(Model model, int index)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x2565CE8", Offset = "0x2565CE8", VA = "0x2565CE8", Slot = "46")]
		public virtual string UnloadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x2565CF0", Offset = "0x2565CF0", VA = "0x2565CF0", Slot = "47")]
		public virtual string LoadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x2565CF8", Offset = "0x2565CF8", VA = "0x2565CF8")]
		public void DestroyModelPreview()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x2565DB0", Offset = "0x2565DB0", VA = "0x2565DB0", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x2565F70", Offset = "0x2565F70", VA = "0x2565F70")]
		protected ModelButton()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class MultistateButton : BaseButton
	{
		[Serializable]
		[Token(Token = "0x20002CB")]
		public struct Option
		{
			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_Description;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture m_Texture;
		}

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[SerializeField]
		private bool m_ShowRotation;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_RotationSpeedMultiplier;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private SketchControlsScript.GlobalCommands m_Command;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected Option[] m_Options;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected bool DisplayTextLabel;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		protected bool DisplayIcon;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected int m_CurrentOptionIdx;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected GameObject m_OptionContainer;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject[] m_Sides;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Renderer[] m_SideRenderers;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Color? m_MaterialTint;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Dictionary<string, float> m_MaterialFloats;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_CurrentRotation;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_TargetRotation;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool m_IsRotating;

		[Token(Token = "0x170002E1")]
		protected int NumOptions
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x2566090", Offset = "0x2566090", VA = "0x2566090")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E2")]
		private Option CurrentOption
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x25660AC", Offset = "0x25660AC", VA = "0x25660AC")]
			get
			{
				return default(Option);
			}
		}

		[Token(Token = "0x170002E3")]
		protected virtual float OptionAngleDeltaDegrees
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x25660E0", Offset = "0x25660E0", VA = "0x25660E0", Slot = "41")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E4")]
		private float OptionAngleDeltaRadians
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x256610C", Offset = "0x256610C", VA = "0x256610C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E5")]
		private float OptionSideDistance
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x256613C", Offset = "0x256613C", VA = "0x256613C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x2566190", Offset = "0x2566190", VA = "0x2566190", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x2566218", Offset = "0x2566218", VA = "0x2566218", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x2566294", Offset = "0x2566294", VA = "0x2566294", Slot = "42")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x2566D60", Offset = "0x2566D60", VA = "0x2566D60", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x2566E74", Offset = "0x2566E74", VA = "0x2566E74")]
		private void HideOtherSides()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x2566EE4", Offset = "0x2566EE4", VA = "0x2566EE4")]
		private void ShowAllSides()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x2566CEC", Offset = "0x2566CEC", VA = "0x2566CEC")]
		protected void ForceSelectedOption(int index)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x2566F48", Offset = "0x2566F48", VA = "0x2566F48")]
		protected void SetSelectedOption(int index)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x2566FE8", Offset = "0x2566FE8", VA = "0x2566FE8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x256634C", Offset = "0x256634C", VA = "0x256634C")]
		protected void CreateOptionSides()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x2567084", Offset = "0x2567084", VA = "0x2567084", Slot = "37")]
		protected override void SetMaterialColor(Color rColor)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x25671C4", Offset = "0x25671C4", VA = "0x25671C4", Slot = "34")]
		protected override void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x25672A8", Offset = "0x25672A8", VA = "0x25672A8")]
		public MultistateButton()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class MusicButton : BaseButton
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_GameMusicIndex;

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x25672C8", Offset = "0x25672C8", VA = "0x25672C8", Slot = "33")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x2567350", Offset = "0x2567350", VA = "0x2567350")]
		public void SetPreset(int index)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x2567448", Offset = "0x2567448", VA = "0x2567448", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x256751C", Offset = "0x256751C", VA = "0x256751C")]
		public MusicButton()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class MusicPopUpWindow : PagingPopUpWindow
	{
		[Token(Token = "0x170002E6")]
		protected override int m_DataCount
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x2567524", Offset = "0x2567524", VA = "0x2567524", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x2567578", Offset = "0x2567578", VA = "0x2567578", Slot = "17")]
		protected override void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x2567594", Offset = "0x2567594", VA = "0x2567594", Slot = "18")]
		protected override void RefreshIcon(ImageIcon icon, int index)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x2567660", Offset = "0x2567660", VA = "0x2567660", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x2567D34", Offset = "0x2567D34", VA = "0x2567D34")]
		public MusicPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class NavButton : BaseButton
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Texture2D m_SelectionTexture;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ComponentMessage m_ButtonType;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int m_GotoPage;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private TextMesh m_TextMesh;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Renderer m_TextMeshRenderer;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Color m_InactiveColor;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x2567D5C", Offset = "0x2567D5C", VA = "0x2567D5C", Slot = "9")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x2567E48", Offset = "0x2567E48", VA = "0x2567E48", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x2567ECC", Offset = "0x2567ECC", VA = "0x2567ECC", Slot = "36")]
		public override void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x2568034", Offset = "0x2568034", VA = "0x2568034")]
		public void SetGotoPage(int iPage)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x256813C", Offset = "0x256813C", VA = "0x256813C")]
		public NavButton()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class NewSketchButton : OptionButton
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float m_AdjustDistanceAmount;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_NewSketchButtonBG;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x2568144", Offset = "0x2568144", VA = "0x2568144", Slot = "40")]
		protected override void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrowAmount)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x256824C", Offset = "0x256824C", VA = "0x256824C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x2568580", Offset = "0x2568580", VA = "0x2568580")]
		public NewSketchButton()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class OptionButton : BaseButton
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public SketchControlsScript.GlobalCommands m_Command;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		public int m_CommandParam;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected int m_CommandParam2;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected bool m_RequiresPopup;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		[SerializeField]
		protected bool m_CenterPopupOnButton;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected Vector3 m_PopupOffset;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected string m_PopupText;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected string m_ToggleOnDescription;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected Texture2D m_ToggleOnTexture;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected bool m_AllowUnavailable;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_LinkedUIObject;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string m_DefaultDescription;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Texture2D m_DefaultTexture;

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x25685DC", Offset = "0x25685DC", VA = "0x25685DC")]
		public void SetCommandParameters(int iCommandParam, int iCommandParam2 = -1)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x25685E4", Offset = "0x25685E4", VA = "0x25685E4", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x2568690", Offset = "0x2568690", VA = "0x2568690", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x2568748", Offset = "0x2568748", VA = "0x2568748", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x25687D8", Offset = "0x25687D8", VA = "0x25687D8", Slot = "41")]
		protected virtual bool IsButtonActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x2568844", Offset = "0x2568844", VA = "0x2568844", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x2568AB4", Offset = "0x2568AB4", VA = "0x2568AB4", Slot = "42")]
		protected virtual void UpdateAvailability()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x2568B60", Offset = "0x2568B60", VA = "0x2568B60", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x2568584", Offset = "0x2568584", VA = "0x2568584")]
		public OptionButton()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class OptionsPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_ColorTransitionDuration;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_ColorTransitionValue;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material m_ColorBackground;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x2568D90", Offset = "0x2568D90", VA = "0x2568D90", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x2568E14", Offset = "0x2568E14", VA = "0x2568E14", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x2568F24", Offset = "0x2568F24", VA = "0x2568F24", Slot = "11")]
		protected override void UpdateOpening()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x2568FC0", Offset = "0x2568FC0", VA = "0x2568FC0", Slot = "12")]
		protected override void UpdateClosing()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x2569060", Offset = "0x2569060", VA = "0x2569060", Slot = "14")]
		public override void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x25690F0", Offset = "0x25690F0", VA = "0x25690F0")]
		public OptionsPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public abstract class PagingPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x20002D3")]
		public class ImageIcon
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Icon;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseButton m_IconScript;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_TextureAssigned;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool m_Valid;

			[Token(Token = "0x6001227")]
			[Address(RVA = "0x25690FC", Offset = "0x25690FC", VA = "0x25690FC")]
			public ImageIcon()
			{
			}
		}

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMesh m_NoDataText;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected GameObject m_ButtonPrefab;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected Texture2D m_UnknownImageTexture;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected float m_IconSpacing;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		protected int m_IconGridWidthFullPage;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected int m_IconGridHeightFullPage;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		protected int m_IconCountNavPage;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected ImageIcon[] m_Icons;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int m_IconCountFullPage;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected int m_BaseIndex;

		[Token(Token = "0x170002E7")]
		protected abstract int m_DataCount
		{
			[Token(Token = "0x600121B")]
			get;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x25690F8", Offset = "0x25690F8", VA = "0x25690F8", Slot = "17")]
		protected virtual void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x600121D")]
		protected abstract void RefreshIcon(ImageIcon icon, int iCatalog);

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x25676E4", Offset = "0x25676E4", VA = "0x25676E4", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x2569708", Offset = "0x2569708", VA = "0x2569708", Slot = "9")]
		protected override void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x2569870", Offset = "0x2569870", VA = "0x2569870", Slot = "10")]
		protected override void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x256978C", Offset = "0x256978C", VA = "0x256978C")]
		private void UpdateIconTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x2569104", Offset = "0x2569104", VA = "0x2569104")]
		protected void RefreshPage()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x25698D4", Offset = "0x25698D4", VA = "0x25698D4", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x256994C", Offset = "0x256994C", VA = "0x256994C", Slot = "14")]
		public override void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x2569B0C", Offset = "0x2569B0C", VA = "0x2569B0C", Slot = "15")]
		public override void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x2567D48", Offset = "0x2567D48", VA = "0x2567D48")]
		protected PagingPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class PanelButton : BaseButton
	{
		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public BasePanel.PanelType m_Type;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		protected bool m_AlwaysSpawn;

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x2569C60", Offset = "0x2569C60", VA = "0x2569C60", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x2569CF8", Offset = "0x2569CF8", VA = "0x2569CF8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x2569D90", Offset = "0x2569D90", VA = "0x2569D90", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x2569FD8", Offset = "0x2569FD8", VA = "0x2569FD8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x256A288", Offset = "0x256A288", VA = "0x256A288")]
		public PanelButton()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class PanelFlair : MonoBehaviour
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_AlwaysShow;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro m_TextMesh;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material m_DefaultMaterial;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_BloomMaterial;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_Offset;

		[Token(Token = "0x170002E8")]
		public bool AlwaysShow
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x256A290", Offset = "0x256A290", VA = "0x256A290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x256A298", Offset = "0x256A298", VA = "0x256A298")]
		private void Awake()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x256A3D8", Offset = "0x256A3D8", VA = "0x256A3D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x256A488", Offset = "0x256A488", VA = "0x256A488")]
		public void ParentToPanel(Transform parent, Vector3 panelOffset)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x256A350", Offset = "0x256A350", VA = "0x256A350")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x256A540", Offset = "0x256A540", VA = "0x256A540")]
		public void Show()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x256A5C8", Offset = "0x256A5C8", VA = "0x256A5C8")]
		public void UpdateAnimationOnPanel(Vector3 panelBounds, Quaternion orient, float alpha)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x256A854", Offset = "0x256A854", VA = "0x256A854")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x256A8F8", Offset = "0x256A8F8", VA = "0x256A8F8")]
		private void OnMainPointerBrushChange(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x256A938", Offset = "0x256A938", VA = "0x256A938")]
		public PanelFlair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public struct PanelMapKey
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_PanelPrefab;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_ModeVr;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool m_ModeVrExperimental;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool m_ModeMono;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool m_ModeQuest;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool m_ModeGvr;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool m_Basic;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool m_Advanced;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x256A940", Offset = "0x256A940", VA = "0x256A940")]
		public bool IsValidForSdkMode(SdkMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D7")]
	public class WandPane
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BasePanel> orderedPanelList;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleOffset;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x256A9F0", Offset = "0x256A9F0", VA = "0x256A9F0")]
		public WandPane()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class PanelManager : MonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		private enum RotateSnapState
		{
			[Token(Token = "0x40010B1")]
			Done,
			[Token(Token = "0x40010B2")]
			Snapping,
			[Token(Token = "0x40010B3")]
			Jiggling,
			[Token(Token = "0x40010B4")]
			Resting
		}

		[Token(Token = "0x20002DA")]
		private enum PanelsState
		{
			[Token(Token = "0x40010B6")]
			Visible,
			[Token(Token = "0x40010B7")]
			Exiting,
			[Token(Token = "0x40010B8")]
			Hidden,
			[Token(Token = "0x40010B9")]
			Entering
		}

		[Token(Token = "0x20002DB")]
		public enum PanelMode
		{
			[Token(Token = "0x40010BB")]
			Standard,
			[Token(Token = "0x40010BC")]
			Sketchbook,
			[Token(Token = "0x40010BD")]
			Settings,
			[Token(Token = "0x40010BE")]
			MemoryWarning,
			[Token(Token = "0x40010BF")]
			Camera,
			[Token(Token = "0x40010C0")]
			BrushLab,
			[Token(Token = "0x40010C1")]
			StandardToSketchbook,
			[Token(Token = "0x40010C2")]
			SketchbookToStandard,
			[Token(Token = "0x40010C3")]
			StandardToSettings,
			[Token(Token = "0x40010C4")]
			SettingsToStandard,
			[Token(Token = "0x40010C5")]
			StandardToCamera,
			[Token(Token = "0x40010C6")]
			CameraToStandard,
			[Token(Token = "0x40010C7")]
			StandardToBrushLab,
			[Token(Token = "0x40010C8")]
			BrushLabToStandard,
			[Token(Token = "0x40010C9")]
			MemoryWarningToStandard
		}

		[Token(Token = "0x20002DC")]
		public enum PaneVisualsState
		{
			[Token(Token = "0x40010CB")]
			Hidden,
			[Token(Token = "0x40010CC")]
			HiddenToShowing,
			[Token(Token = "0x40010CD")]
			Showing,
			[Token(Token = "0x40010CE")]
			ShowingToHidden
		}

		[Token(Token = "0x20002DD")]
		public class RevealParticle
		{
			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform xf;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem.EmissionModule emission;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystem.ShapeModule shape;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float baseRate;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform parentXf;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 bounds;

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x256D788", Offset = "0x256D788", VA = "0x256D788")]
			public void UpdateTransform()
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x256D848", Offset = "0x256D848", VA = "0x256D848")]
			public void StartEmitting()
			{
			}

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x256BCF8", Offset = "0x256BCF8", VA = "0x256BCF8")]
			public void StopEmitting()
			{
			}

			[Token(Token = "0x600129C")]
			[Address(RVA = "0x256BCF0", Offset = "0x256BCF0", VA = "0x256BCF0")]
			public RevealParticle()
			{
			}
		}

		[Token(Token = "0x20002DE")]
		public class PanelData
		{
			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BasePanel m_Panel;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PanelWidget m_Widget;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_RestoreFlag;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RevealParticle m_RevealParticles;

			[Token(Token = "0x170002EF")]
			public bool AvailableInCurrentMode
			{
				[Token(Token = "0x600129D")]
				[Address(RVA = "0x256CCDC", Offset = "0x256CCDC", VA = "0x256CCDC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600129E")]
			[Address(RVA = "0x256BCE8", Offset = "0x256BCE8", VA = "0x256BCE8")]
			public PanelData()
			{
			}
		}

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PanelManager m_Instance;

		[Token(Token = "0x4001056")]
		public const string kPlayerPrefAdvancedMode = "AdvancedMode";

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_UxExplorationPrefab;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected PanelMapKey[] m_PanelMap;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_WandPanelsRotationFeedbackInterval;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_WandPanelsRotationScalar;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_WandPanelsRotationVelocityScalar;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_WandPanelsRotationDecay;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RotateSnapRestTime;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_WandRadius;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_AdminPanelWandRadius;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_SketchbookOffset;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 m_SketchbookRotation;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_WandPanelsInitialSketchLoadOriginAngle;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_WandPanelsDefaultOriginAngle;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_AltModeSwipeThreshold;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_AltModeSwipeTeaseAmount;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_AdvancedModeRevealSpinSpeed;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_AdvancedModeRevealParticlePrefab;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_WandSnapDistance;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_WandRadiusManipulationAdjust;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_WandPanelSnapStepDistance;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_WandPanelSnapStickyPercent;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_WandPaneHeightOffset;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_WandPaneHalfWidth;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_WandPaneMaxY;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_WandPaneMinY;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_WandPaneVisualOffsetRadius;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_WandPaneAttachMaxFacingAngle;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_WandPaneHapticDelay;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject m_WandPaneVisualsPrefab;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color m_WandPaneVisualsColorOK;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color m_WandPaneVisualsColorBad;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_WandPaneVisualsShowSpeed;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_PanelMipmapBias;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Color m_PanelHighlightActiveColor;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color m_PanelHighlightInactiveColor;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color m_PanelBorderMeshBaseColor;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Color m_PanelBorderMeshOutlineColor;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject m_WandPaneVisuals;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Renderer m_WandPaneVisualsMeshRenderer;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_WandPaneVisualsShowValue;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private PaneVisualsState m_WandPaneVisualsState;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private WandPane[] m_WandPanes;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int? m_WandPanePanelSnapPreviousStep;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_WandPanePanelWasAttached;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool m_PanelsCustomized;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float m_AltModeSwipeAmount;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool m_AltModeSwipeEatStickInput;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_AdvancedModeRevealSpinValue;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_AdvancedModeRevealSpinTarget;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float m_AdvancedModeRevealSpinFinalAngle;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool m_AdvancedModeRevealActive;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public PanelSweetSpotScript m_SweetSpot;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GrabWidget m_ImmovableWidget;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject m_RevealParticleParent;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<PanelData> m_AllPanels;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<BasePanel> m_SketchbookPanels;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private List<BasePanel> m_SettingsPanels;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private List<BasePanel> m_MemoryWarningPanels;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<BasePanel> m_CameraPanels;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<BasePanel> m_BrushLabPanels;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private BasePanel m_AdminPanel;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AdvancedPanelLayouts m_CachedPanelLayouts;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float m_WandPanelsOriginAngle;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float m_WandPanelsOriginAngleOffset;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float m_RotateSnapAnimTime;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float m_RotateSnapAnimDir;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private RotateSnapState m_RotateSnapState;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float m_WandPanelsSketchbookOriginAngle;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float m_WandPanelsRotationLastFeedbackAngle;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float[] m_WandPanelsRotationDiffHistory;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int m_WandPanelsRotationDiffIndex;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private int m_WandPanelsRotationDiffCount;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float m_WandPanelsRotationVelocity;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float m_MasterScale;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float m_StandardScale;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_SketchbookScale;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float m_SettingsScale;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float m_MemoryWarningScale;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float m_CameraScale;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float m_BrushLabScale;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private PanelsState m_PanelsState;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private PanelMode m_PanelsMode;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private GameObject m_UxExploration;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int m_LastOpenedPanelIndex;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private BasePanel m_LastPanelInteractedWith;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool m_IntroSketchbookMode;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
		private bool m_FirstSketchLoad;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x232")]
		private bool m_AdvancedPanels;

		[Token(Token = "0x170002E9")]
		public Color PanelHighlightActiveColor
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x256A9F8", Offset = "0x256A9F8", VA = "0x256A9F8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002EA")]
		public Color PanelHighlightInactiveColor
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0x256AA04", Offset = "0x256AA04", VA = "0x256AA04")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002EB")]
		public Color PanelBorderMeshBaseColor
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x256AA10", Offset = "0x256AA10", VA = "0x256AA10")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002EC")]
		public Color PanelBorderMeshOutlineColor
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x256AA24", Offset = "0x256AA24", VA = "0x256AA24")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002ED")]
		public bool IntroSketchbookMode
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x256AA38", Offset = "0x256AA38", VA = "0x256AA38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public BasePanel LastPanelInteractedWith
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x256AECC", Offset = "0x256AECC", VA = "0x256AECC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x256AED4", Offset = "0x256AED4", VA = "0x256AED4")]
			set
			{
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x256AA40", Offset = "0x256AA40", VA = "0x256AA40")]
		public float GetSnapStepDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x256AA48", Offset = "0x256AA48", VA = "0x256AA48")]
		public bool PanelsAreStable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x256AA6C", Offset = "0x256AA6C", VA = "0x256AA6C")]
		public bool StandardActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x256AA7C", Offset = "0x256AA7C", VA = "0x256AA7C")]
		public bool SketchbookActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x256AA8C", Offset = "0x256AA8C", VA = "0x256AA8C")]
		public bool SettingsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x256AAAC", Offset = "0x256AAAC", VA = "0x256AAAC")]
		public bool CameraActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x256AA9C", Offset = "0x256AA9C", VA = "0x256AA9C")]
		public bool MemoryWarningActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x256AABC", Offset = "0x256AABC", VA = "0x256AABC")]
		public bool BrushLabActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x256AACC", Offset = "0x256AACC", VA = "0x256AACC")]
		public bool PanelsHaveBeenCustomized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x256AAD4", Offset = "0x256AAD4", VA = "0x256AAD4")]
		public bool AdvancedModeActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x256AADC", Offset = "0x256AADC", VA = "0x256AADC")]
		public bool SketchbookActiveIncludingTransitions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x256AAF8", Offset = "0x256AAF8", VA = "0x256AAF8")]
		public BasePanel GetPanelByType(BasePanel.PanelType type)
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x256ABC4", Offset = "0x256ABC4", VA = "0x256ABC4")]
		public BasePanel GetActivePanelByType(BasePanel.PanelType type)
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x256AD70", Offset = "0x256AD70", VA = "0x256AD70")]
		public BasePanel GetSketchBookPanel()
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x256ADDC", Offset = "0x256ADDC", VA = "0x256ADDC")]
		public BasePanel GetPanel(int index)
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x256AE40", Offset = "0x256AE40", VA = "0x256AE40")]
		public BasePanel LastOpenedPanel()
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x256AEAC", Offset = "0x256AEAC", VA = "0x256AEAC")]
		public bool GazePanelsAreVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x256AEBC", Offset = "0x256AEBC", VA = "0x256AEBC")]
		public List<PanelData> GetAllPanels()
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x256AEC4", Offset = "0x256AEC4", VA = "0x256AEC4")]
		public BasePanel GetAdminPanel()
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x256AEDC", Offset = "0x256AEDC", VA = "0x256AEDC")]
		public bool IsAdminPanel(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x256AEF4", Offset = "0x256AEF4", VA = "0x256AEF4")]
		public bool IsPanelUnique(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x256AF34", Offset = "0x256AF34", VA = "0x256AF34")]
		public bool IsPanelCore(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x256AF74", Offset = "0x256AF74", VA = "0x256AF74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x256AFC0", Offset = "0x256AFC0", VA = "0x256AFC0")]
		public void Init()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x256B644", Offset = "0x256B644", VA = "0x256B644")]
		private void CreatePanel(PanelMapKey key, bool advancedPanel)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x256BD08", Offset = "0x256BD08", VA = "0x256BD08")]
		public void ResetPanel(int index)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x256BDB0", Offset = "0x256BDB0", VA = "0x256BDB0")]
		public void SetInIntroSketchbookMode(bool inIntro)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x256BF1C", Offset = "0x256BF1C", VA = "0x256BF1C")]
		public void ResetWandPanelRotation()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x256BF28", Offset = "0x256BF28", VA = "0x256BF28")]
		public void RefreshConfiguredFlag()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x256C10C", Offset = "0x256C10C", VA = "0x256C10C")]
		public void InitPanels(bool bWandPanels)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x256C850", Offset = "0x256C850", VA = "0x256C850")]
		public void HidePanelsForStartup()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x256CD6C", Offset = "0x256CD6C", VA = "0x256CD6C")]
		public void ReviveFloatingPanelsForStartup()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x256CE5C", Offset = "0x256CE5C", VA = "0x256CE5C")]
		public void ToggleAdvancedPanels()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x256CBE0", Offset = "0x256CBE0", VA = "0x256CBE0")]
		private IEnumerable<PanelData> GetFixedPanels()
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x256C328", Offset = "0x256C328", VA = "0x256C328")]
		public void SetSweetSpotPosition(Vector3 vSweetSpot)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x256D858", Offset = "0x256D858", VA = "0x256D858")]
		public Vector3 GetSketchSurfaceResetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x256D93C", Offset = "0x256D93C", VA = "0x256D93C")]
		public void UpdateWandOrientationControls()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x256DC48", Offset = "0x256DC48", VA = "0x256DC48")]
		private void UpdateSnapRotate(bool bWandRot, float wandScrollXDelta)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x256DB1C", Offset = "0x256DB1C", VA = "0x256DB1C")]
		private void UpdateSwipeRotate(bool bWandRot, float wandScrollXDelta)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x256DF20", Offset = "0x256DF20", VA = "0x256DF20")]
		private void UpdateWandPanelsOriginAngle(float fDiff, float fOffset = 0f)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x256E034", Offset = "0x256E034", VA = "0x256E034")]
		public void UpdatePanels()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x256E778", Offset = "0x256E778", VA = "0x256E778")]
		private float GetWandCircumference()
		{
			return default(float);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x256EA84", Offset = "0x256EA84", VA = "0x256EA84")]
		private void PanelMovedHaptics()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x256EAF4", Offset = "0x256EAF4", VA = "0x256EAF4")]
		public void InitPanesForPanelAttach(bool bPanelStartedFixed)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x256EB04", Offset = "0x256EB04", VA = "0x256EB04")]
		public void ResetWandPanelsConfiguration()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x256ECE0", Offset = "0x256ECE0", VA = "0x256ECE0")]
		public void SetFixedPanelsToStableOffsets()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x256EFE4", Offset = "0x256EFE4", VA = "0x256EFE4")]
		public void AttachHeldPanelToWand(BasePanel panel)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x256FE88", Offset = "0x256FE88", VA = "0x256FE88")]
		private bool MovePanePanelsUpToFit(WandPane pane, float panelHeight, float attachOffset, int insertIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x256FFDC", Offset = "0x256FFDC", VA = "0x256FFDC")]
		private bool MovePanePanelsDownToFit(WandPane pane, float panelHeight, float attachOffset, int insertIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x2570410", Offset = "0x2570410", VA = "0x2570410")]
		public void ClosePanePanelGaps()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x256BC74", Offset = "0x256BC74", VA = "0x256BC74")]
		private void TintWandPaneVisuals(bool ok)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x25703FC", Offset = "0x25703FC", VA = "0x25703FC")]
		public void ResetPaneVisuals()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x256E10C", Offset = "0x256E10C", VA = "0x256E10C")]
		public void LockUxExplorationToController()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x256E1F8", Offset = "0x256E1F8", VA = "0x256E1F8")]
		public void LockPanelsToController()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x257014C", Offset = "0x257014C", VA = "0x257014C")]
		public void SetPanelXfFromWand(BasePanel panel, Transform wandTransform, float originAngle, float originOffset, float radius, bool ignoreReveal = false)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x2570CFC", Offset = "0x2570CFC", VA = "0x2570CFC")]
		private void SetAltPanelXfFromWand(BasePanel panel, Transform wandTransform)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x2570FA0", Offset = "0x2570FA0", VA = "0x2570FA0")]
		public void UpdateWandTransitionXf(BasePanel panel, TrTransform target, float percent)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x2571114", Offset = "0x2571114", VA = "0x2571114")]
		public Vector3 GetFixedPanelPosClosestToPoint(Vector3 vPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x25712B8", Offset = "0x25712B8", VA = "0x25712B8")]
		public void SetVisible(bool bVisible)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x257173C", Offset = "0x257173C", VA = "0x257173C")]
		public void ShowIntroSketchbookPanels()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x2568554", Offset = "0x2568554", VA = "0x2568554")]
		public void ToggleSketchbookPanels(bool isLoadingSketch = false)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x256DEF8", Offset = "0x256DEF8", VA = "0x256DEF8")]
		public void ToggleSettingsPanels()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x256DF0C", Offset = "0x256DF0C", VA = "0x256DF0C")]
		public void ToggleCameraPanels()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x2571D4C", Offset = "0x2571D4C", VA = "0x2571D4C")]
		public void ToggleBrushLabPanels()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x2571D60", Offset = "0x2571D60", VA = "0x2571D60")]
		public void ToggleMemoryWarningMode()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x25717E0", Offset = "0x25717E0", VA = "0x25717E0")]
		private void ToggleMode(List<BasePanel> panels, PanelMode mode, PanelMode toMode, PanelMode fromMode)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x2571DC8", Offset = "0x2571DC8", VA = "0x2571DC8")]
		private void ForceModeScale(PanelMode mode)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x2572264", Offset = "0x2572264", VA = "0x2572264")]
		private void ComputeWandPanelSketchbookOriginAngleFromHead()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x2571EB8", Offset = "0x2571EB8", VA = "0x2571EB8")]
		private void RefreshPanelsForAnimations()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x25725A4", Offset = "0x25725A4", VA = "0x25725A4")]
		private void SetPanelListScaleAndActive(List<BasePanel> panels, float scale)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2572680", Offset = "0x2572680", VA = "0x2572680")]
		private void Update()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x2572E90", Offset = "0x2572E90", VA = "0x2572E90")]
		private void AnimateScaleToMode(ref float from, ref float to, PanelMode targetMode)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x2572F10", Offset = "0x2572F10", VA = "0x2572F10")]
		public void PrimeCollisionSimForKeyboardMouse()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x2573200", Offset = "0x2573200", VA = "0x2573200")]
		public void DoCollisionSimulationForKeyboardMouse(BasePanel movingPanel)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x2573658", Offset = "0x2573658", VA = "0x2573658")]
		public void PrimeCollisionSimForWidgets(GrabWidget immovableWidget)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x25707AC", Offset = "0x25707AC", VA = "0x25707AC")]
		private void OrderPanes()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x2573784", Offset = "0x2573784", VA = "0x2573784")]
		private static int ComparePanelsByAttachHeight(BasePanel a, BasePanel b)
		{
			return default(int);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x25737A8", Offset = "0x25737A8", VA = "0x25737A8")]
		public void DoCollisionSimulationForWidgetPanels()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x2573A50", Offset = "0x2573A50", VA = "0x2573A50")]
		public bool IsAffectedByCollision(PanelData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x2573B18", Offset = "0x2573B18", VA = "0x2573B18")]
		public void OpenPanel(BasePanel.PanelType type, TrTransform trSpawnXf)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x2569E40", Offset = "0x2569E40", VA = "0x2569E40")]
		public bool IsPanelOpen(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x256A190", Offset = "0x256A190", VA = "0x256A190")]
		public void DismissNonCorePanel(BasePanel.PanelType type)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x256D5F4", Offset = "0x256D5F4", VA = "0x256D5F4")]
		private void _DismissPanelInternal(int index, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x2573E3C", Offset = "0x2573E3C", VA = "0x2573E3C")]
		public void HideAllPanels()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x2573FC4", Offset = "0x2573FC4", VA = "0x2573FC4")]
		public void RestoreHiddenPanels()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x256D47C", Offset = "0x256D47C", VA = "0x256D47C")]
		private void _RestorePanelInternal(int index)
		{
		}

		[Token(Token = "0x6001296")]
		public void ExecuteOnPanel<T>(Action<T> action) where T : BasePanel
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x25740EC", Offset = "0x25740EC", VA = "0x25740EC")]
		public void SetCurrentColorOnAllColorPickers(Color col)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x2574140", Offset = "0x2574140", VA = "0x2574140")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class PinCushion : MonoBehaviour
	{
		[Token(Token = "0x20002E2")]
		public enum VisualState
		{
			[Token(Token = "0x40010EC")]
			Hidden,
			[Token(Token = "0x40010ED")]
			HiddenToShowing,
			[Token(Token = "0x40010EE")]
			Showing,
			[Token(Token = "0x40010EF")]
			ShowingToHidden
		}

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ShowDelay;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_RootObject;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_SelectionObject;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PinCushionItem m_DefaultItem;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SphereCollider m_DefaultCollider;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_TimerAudioThreshold;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PinCushionItem[] m_Items;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_BaseSelectionObjectOffset;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_SelectionOffset;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_ControllerBaseRotation;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_HighlightedItem;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private VisualState m_CurrentVisualState;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_VisualScaleTimer;

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x25742B0", Offset = "0x25742B0", VA = "0x25742B0")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x25742C0", Offset = "0x25742C0", VA = "0x25742C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2574440", Offset = "0x2574440", VA = "0x2574440")]
		public void ShowPinCushion(bool show)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2574378", Offset = "0x2574378", VA = "0x2574378")]
		private void RefreshVisualsForAnimations()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2574710", Offset = "0x2574710", VA = "0x2574710")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2574890", Offset = "0x2574890", VA = "0x2574890")]
		private void UpdateSelection()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x2574EFC", Offset = "0x2574EFC", VA = "0x2574EFC")]
		private void UpdateHighlightedItem()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x2574F88", Offset = "0x2574F88", VA = "0x2574F88")]
		private void TriggerFeedbackOnItemChange(int prevItem)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x257528C", Offset = "0x257528C", VA = "0x257528C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x2575530", Offset = "0x2575530", VA = "0x2575530")]
		public PinCushion()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class PinCushionItem : MonoBehaviour
	{
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string m_ToolName;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public TextMeshPro m_PanelText;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture m_Icon;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BaseTool.ToolType m_Tool;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_HighlightScale;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_MinAngle;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_MaxAngle;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer m_ButtonRenderer;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer m_Border;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x170002F0")]
		public BaseTool.ToolType Tool
		{
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x2575544", Offset = "0x2575544", VA = "0x2575544")]
			get
			{
				return default(BaseTool.ToolType);
			}
		}

		[Token(Token = "0x170002F1")]
		public float MinAngle
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x257554C", Offset = "0x257554C", VA = "0x257554C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F2")]
		public float MaxAngle
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x2575554", Offset = "0x2575554", VA = "0x2575554")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x257555C", Offset = "0x257555C", VA = "0x257555C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x257558C", Offset = "0x257558C", VA = "0x257558C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x2575044", Offset = "0x2575044", VA = "0x2575044")]
		public void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x25755F4", Offset = "0x25755F4", VA = "0x25755F4")]
		public PinCushionItem()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class PointerAngleSlider : BaseSlider
	{
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x25755FC", Offset = "0x25755FC", VA = "0x25755FC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x2575678", Offset = "0x2575678", VA = "0x2575678", Slot = "32")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x25756E4", Offset = "0x25756E4", VA = "0x25756E4", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x257572C", Offset = "0x257572C", VA = "0x257572C")]
		public PointerAngleSlider()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class PolyModelButton : ModelButton
	{
		[Token(Token = "0x20002E6")]
		[CompilerGenerated]
		private sealed class <SpawnModelCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyModelButton <>4__this;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string reason;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <assetId>5__2;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Model <model>5__3;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012CC")]
				[Address(RVA = "0x2576090", Offset = "0x2576090", VA = "0x2576090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012CE")]
				[Address(RVA = "0x25760D8", Offset = "0x25760D8", VA = "0x25760D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x2575B8C", Offset = "0x2575B8C", VA = "0x2575B8C")]
			[DebuggerHidden]
			public <SpawnModelCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x2575E3C", Offset = "0x2575E3C", VA = "0x2575E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x2575E40", Offset = "0x2575E40", VA = "0x2575E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x2576098", Offset = "0x2576098", VA = "0x2576098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject m_LoadingOverlay;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private PolyAssetCatalog.AssetDetails m_PacAsset;

		[Token(Token = "0x170002F3")]
		public PolyAssetCatalog.AssetDetails Asset
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x2575734", Offset = "0x2575734", VA = "0x2575734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		protected override Texture2D UnloadedTexture
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x257573C", Offset = "0x257573C", VA = "0x257573C", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		protected override string ModelName
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x25757D8", Offset = "0x25757D8", VA = "0x25757D8", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x25757F4", Offset = "0x25757F4", VA = "0x25757F4", Slot = "32")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x257584C", Offset = "0x257584C", VA = "0x257584C")]
		public void SetPreset(PolyAssetCatalog.AssetDetails asset, int index)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x25759C4", Offset = "0x25759C4", VA = "0x25759C4", Slot = "44")]
		protected override void RequestModelPreloadInternal(string reason)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x2575A18", Offset = "0x2575A18", VA = "0x2575A18", Slot = "45")]
		protected override void CancelRequestModelPreload()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x2575A98", Offset = "0x2575A98", VA = "0x2575A98", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x2575B18", Offset = "0x2575B18", VA = "0x2575B18")]
		[IteratorStateMachine(typeof(<SpawnModelCoroutine>d__13))]
		protected IEnumerator SpawnModelCoroutine(string reason)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x2575BB4", Offset = "0x2575BB4", VA = "0x2575BB4", Slot = "43")]
		protected override void RefreshModelButton()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x2575C6C", Offset = "0x2575C6C", VA = "0x2575C6C", Slot = "46")]
		public override string UnloadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2575D2C", Offset = "0x2575D2C", VA = "0x2575D2C", Slot = "47")]
		public override string LoadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x2575D3C", Offset = "0x2575D3C", VA = "0x2575D3C", Slot = "38")]
		public override void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2575DC8", Offset = "0x2575DC8", VA = "0x2575DC8", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2575E34", Offset = "0x2575E34", VA = "0x2575E34")]
		public PolyModelButton()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public enum PolySetType
	{
		[Token(Token = "0x4001103")]
		User,
		[Token(Token = "0x4001104")]
		Liked,
		[Token(Token = "0x4001105")]
		Featured
	}
	[Token(Token = "0x20002E8")]
	public class PolyPanel : ModalPanel
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private TextMesh m_PanelTextSubtitle;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private TextMesh m_PanelTextUserSubtitle;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private string m_PanelTextStandard;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private string m_PanelTextFeatured;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private string m_PanelTextLiked;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private Renderer m_PolyGalleryRenderer;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private GameObject m_NoObjectsMessage;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private GameObject m_InternetError;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[SerializeField]
		private GameObject m_NoAuthoredModelsMessage;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private GameObject m_NoLikesMessage;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private GameObject m_NotLoggedInMessage;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[SerializeField]
		private GameObject m_OutOfDateMessage;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[SerializeField]
		private GameObject m_NoPolyConnectionMessage;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private PolySetType m_CurrentSet;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private bool m_LoggedIn;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int m_LastPageIndexForLoad;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private PolySetType m_LastSetTypeForLoad;

		[Token(Token = "0x170002F8")]
		public bool ShowingFeatured
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x25760E0", Offset = "0x25760E0", VA = "0x25760E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public bool ShowingLikes
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x25760F0", Offset = "0x25760F0", VA = "0x25760F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FA")]
		public bool ShowingUser
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x2575D1C", Offset = "0x2575D1C", VA = "0x2575D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x2576100", Offset = "0x2576100", VA = "0x2576100", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x2576154", Offset = "0x2576154", VA = "0x2576154", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x2576218", Offset = "0x2576218", VA = "0x2576218", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x25762E8", Offset = "0x25762E8", VA = "0x25762E8", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x2576108", Offset = "0x2576108", VA = "0x2576108")]
		private void SetVisiblePolySet(PolySetType type)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x257653C", Offset = "0x257653C", VA = "0x257653C")]
		private void OnPolyAssetCatalogChanged()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x257654C", Offset = "0x257654C", VA = "0x257654C", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x2576A60", Offset = "0x2576A60", VA = "0x2576A60")]
		private void RefreshPanelText()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x2576B64", Offset = "0x2576B64", VA = "0x2576B64")]
		private void Update()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x2576BC4", Offset = "0x2576BC4", VA = "0x2576BC4", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x2576F6C", Offset = "0x2576F6C", VA = "0x2576F6C")]
		public void ButtonPressed(PolySetType rType)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x2576F70", Offset = "0x2576F70", VA = "0x2576F70")]
		public PolyPanel()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class PolySetButton : ModeButton
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PolySetType m_ButtonType;

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x113100C", Offset = "0x113100C", VA = "0x113100C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x11310B8", Offset = "0x11310B8", VA = "0x11310B8")]
		public PolySetButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public struct PopUpButton
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D m_ButtonTexture;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_ButtonPrefab;

		[NonSerialized]
		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseButton m_ButtonScript;
	}
	[Token(Token = "0x20002EB")]
	public class PopUpWindow : MonoBehaviour
	{
		[Token(Token = "0x20002EC")]
		protected enum State
		{
			[Token(Token = "0x4001141")]
			Uninitialized,
			[Token(Token = "0x4001142")]
			Opening,
			[Token(Token = "0x4001143")]
			Standard,
			[Token(Token = "0x4001144")]
			Closing,
			[Token(Token = "0x4001145")]
			Closed
		}

		[Token(Token = "0x20002ED")]
		protected enum PageFlipState
		{
			[Token(Token = "0x4001147")]
			Standard,
			[Token(Token = "0x4001148")]
			TransitionOut,
			[Token(Token = "0x4001149")]
			TransitionIn
		}

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_Background;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject m_TopBorder;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject m_BottomBorder;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected TextMesh m_WindowText;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected TextMesh m_WindowSubText;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float m_CharacterWidth;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float m_SubtitleCharacterWidth;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float m_ButtonWidth;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected Vector3 m_BaseButtonOffset;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected Vector3 m_ReticleBounds;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		protected float m_PopUpForwardOffset;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected PopUpButton[] m_AutoPlaceButtons;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected float m_TransitionDuration;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected float m_OpenDelay;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected bool m_Persistent;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		protected bool m_AudioOnOpen;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		protected bool m_BlockUndoRedo;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		protected bool m_IsLongPressPopUp;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected NavButton[] m_OrderedPageButtons;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected GameObject m_PrevButton;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected GameObject m_NextButton;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected BoxCollider m_WindowCollider;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected BasePanel m_ParentPanel;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected State m_CurrentState;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float m_TransitionValue;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool m_SpoofTransitionValue;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int m_PageIndex;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int m_RequestedPageIndex;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int m_NumPages;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected UIComponentManager m_UIComponentManager;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected PageFlipState m_CurrentPageFlipState;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float m_PageFlipTransitionAmount;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float m_PageFlipSpeed;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float m_BaseIconScale;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action m_OnClose;

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x11310C0", Offset = "0x11310C0", VA = "0x11310C0")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x11310C8", Offset = "0x11310C8", VA = "0x11310C8")]
		public BasePanel GetParentPanel()
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x11310D0", Offset = "0x11310D0", VA = "0x11310D0")]
		public void SpoofTransitionValue()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x11310DC", Offset = "0x11310DC", VA = "0x11310DC")]
		public float GetPopUpForwardOffset()
		{
			return default(float);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x11310E4", Offset = "0x11310E4", VA = "0x11310E4")]
		public Vector3 GetReticleBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x11310F0", Offset = "0x11310F0", VA = "0x11310F0")]
		public bool IsLongPressPopUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x11310F8", Offset = "0x11310F8", VA = "0x11310F8")]
		public bool BlockUndoRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1131100", Offset = "0x1131100", VA = "0x1131100")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1131108", Offset = "0x1131108", VA = "0x1131108")]
		private void CreateAutoPlaceButtons()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1131534", Offset = "0x1131534", VA = "0x1131534", Slot = "4")]
		public virtual void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x11317BC", Offset = "0x11317BC", VA = "0x11317BC", Slot = "5")]
		public virtual void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x11317C0", Offset = "0x11317C0", VA = "0x11317C0", Slot = "6")]
		public virtual bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x11317E4", Offset = "0x11317E4", VA = "0x11317E4")]
		public bool InputObjectHasFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1131850", Offset = "0x1131850", VA = "0x1131850")]
		public bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1131860", Offset = "0x1131860", VA = "0x1131860")]
		public bool IsClosingOrClosed()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1131874", Offset = "0x1131874", VA = "0x1131874")]
		public float GetTransitionRatioForVisuals()
		{
			return default(float);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x11318AC", Offset = "0x11318AC", VA = "0x11318AC")]
		private float GetTransitionRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x11318E0", Offset = "0x11318E0", VA = "0x11318E0")]
		public GameObject DuplicateCollider()
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1131AA8", Offset = "0x1131AA8", VA = "0x1131AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1131AD0", Offset = "0x1131AD0", VA = "0x1131AD0", Slot = "7")]
		protected virtual void BaseUpdate()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1131B5C", Offset = "0x1131B5C", VA = "0x1131B5C", Slot = "8")]
		protected virtual void UpdateVisuals()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1131C08", Offset = "0x1131C08", VA = "0x1131C08", Slot = "9")]
		protected virtual void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1131C14", Offset = "0x1131C14", VA = "0x1131C14", Slot = "10")]
		protected virtual void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1131C1C", Offset = "0x1131C1C", VA = "0x1131C1C", Slot = "11")]
		protected virtual void UpdateOpening()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1131CD0", Offset = "0x1131CD0", VA = "0x1131CD0", Slot = "12")]
		protected virtual void UpdateClosing()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1131DB0", Offset = "0x1131DB0", VA = "0x1131DB0", Slot = "13")]
		protected virtual void DestroyPopUpWindow()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1131E34", Offset = "0x1131E34", VA = "0x1131E34", Slot = "14")]
		public virtual void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1132038", Offset = "0x1132038", VA = "0x1132038", Slot = "15")]
		public virtual void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1132278", Offset = "0x1132278", VA = "0x1132278")]
		public void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1132298", Offset = "0x1132298", VA = "0x1132298")]
		public void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x11322C0", Offset = "0x11322C0", VA = "0x11322C0")]
		public PopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class ProfilePopUpButton : OptionButton
	{
		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private bool m_CommandIgnored;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x11322EC", Offset = "0x11322EC", VA = "0x11322EC", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x11325A0", Offset = "0x11325A0", VA = "0x11325A0")]
		public ProfilePopUpButton()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class ProfilePopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x20002F0")]
		public enum Mode
		{
			[Token(Token = "0x4001169")]
			Accounts,
			[Token(Token = "0x400116A")]
			TakeOffHeadset,
			[Token(Token = "0x400116B")]
			GoogleHelp,
			[Token(Token = "0x400116C")]
			DriveHelp,
			[Token(Token = "0x400116D")]
			SketchfabHelp,
			[Token(Token = "0x400116E")]
			ConfirmLogin
		}

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_GoogleSignedInElements;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_GoogleSignedOutElements;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_GoogleConfirmSignOutElements;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_SketchfabSignedInElements;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_SketchfabSignedOutElements;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_SketchfabConfirmSignOutElements;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Renderer m_GooglePhoto;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Renderer m_SketchfabPhoto;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TextMeshPro m_GoogleNameText;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private TextMeshPro m_SketchfabNameText;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Texture2D m_GenericPhoto;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_Accounts;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject m_TakeOffHeadset;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject m_GoogleInfoElements;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject m_DriveInfoElements;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject m_SketchfabInfoElements;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private GameObject m_DriveSyncEnabledElements;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject m_DriveSyncDisabledElements;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GameObject m_DriveFullElements;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject m_DriveSyncIconEnabled;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_DriveSyncIconDisabled;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject m_DriveSyncIconDriveFull;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private GameObject m_BackupCompleteElements;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private GameObject m_BackingUpElements;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private TextMesh m_BackingUpProgress;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[Header("Mobile State Members")]
		private GameObject m_ConfirmLoginElements;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private SaveAndOptionButton m_SaveAndProceedButton;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Mode m_CurrentMode;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private bool m_DriveSyncing;

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x11325A8", Offset = "0x11325A8", VA = "0x11325A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1132640", Offset = "0x1132640", VA = "0x1132640", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1132970", Offset = "0x1132970", VA = "0x1132970")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1132A5C", Offset = "0x1132A5C", VA = "0x1132A5C", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1132710", Offset = "0x1132710", VA = "0x1132710")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1132AA8", Offset = "0x1132AA8", VA = "0x1132AA8")]
		private void RefreshBackupProgressText()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1132B90", Offset = "0x1132B90", VA = "0x1132B90")]
		private void UpdateMode(Mode newMode)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1132CAC", Offset = "0x1132CAC", VA = "0x1132CAC")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x113235C", Offset = "0x113235C", VA = "0x113235C")]
		public void OnProfilePopUpButtonPressed(ProfilePopUpButton button)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1132CD8", Offset = "0x1132CD8", VA = "0x1132CD8")]
		public ProfilePopUpWindow()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class PropertyToggleButton : BaseButton
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SerializedPropertyReferenceBool m_Property;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool m_InverseHighlight;

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1132CE0", Offset = "0x1132CE0", VA = "0x1132CE0", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1132D88", Offset = "0x1132D88", VA = "0x1132D88", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1132E40", Offset = "0x1132E40", VA = "0x1132E40", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1132CE8", Offset = "0x1132CE8", VA = "0x1132CE8")]
		protected void HighlightButton()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x1133044", Offset = "0x1133044", VA = "0x1133044")]
		public PropertyToggleButton()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class QualitySlider : BaseSlider
	{
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] m_Steps;

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x113304C", Offset = "0x113304C", VA = "0x113304C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x11331AC", Offset = "0x11331AC", VA = "0x11331AC")]
		private void PositionNobAtCurrentQuality()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x11336A0", Offset = "0x11336A0", VA = "0x11336A0", Slot = "32")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x11332B0", Offset = "0x11332B0", VA = "0x11332B0")]
		private string GetDescriptionExtraText()
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1133878", Offset = "0x1133878", VA = "0x1133878")]
		public QualitySlider()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class ReferenceButton : ModeButton
	{
		[Token(Token = "0x20002F4")]
		public enum Type
		{
			[Token(Token = "0x4001174")]
			Images,
			[Token(Token = "0x4001175")]
			Models,
			[Token(Token = "0x4001176")]
			AddAssets,
			[Token(Token = "0x4001177")]
			Videos
		}

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Type m_ButtonType;

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1133880", Offset = "0x1133880", VA = "0x1133880", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1133B10", Offset = "0x1133B10", VA = "0x1133B10")]
		public ReferenceButton()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class ReferencePanel : ModalPanel
	{
		[Token(Token = "0x20002F6")]
		private enum Mode
		{
			[Token(Token = "0x4001181")]
			Images,
			[Token(Token = "0x4001182")]
			Models
		}

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[Header("Reference Panel")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private GameObject m_NoData;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Texture2D m_UnknownImageTexture;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private ReferencePanelTab[] m_Tabs;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private MeshRenderer[] m_ExtraBorders;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private GameObject m_RefreshingSpinner;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private ReferencePanelTab m_CurrentTab;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private int m_EnabledCount;

		[Token(Token = "0x170002FB")]
		public Texture2D UnknownImageTexture
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x1133B18", Offset = "0x1133B18", VA = "0x1133B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		protected override int PageIndex
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x1133B20", Offset = "0x1133B20", VA = "0x1133B20", Slot = "29")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001319")]
			[Address(RVA = "0x1133B3C", Offset = "0x1133B3C", VA = "0x1133B3C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		protected override List<BaseButton> Icons
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x1133B58", Offset = "0x1133B58", VA = "0x1133B58", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1133B74", Offset = "0x1133B74", VA = "0x1133B74", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1133C7C", Offset = "0x1133C7C", VA = "0x1133C7C", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1133FC0", Offset = "0x1133FC0", VA = "0x1133FC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1134138", Offset = "0x1134138", VA = "0x1134138", Slot = "23")]
		public override void OnWidgetHide()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1134158", Offset = "0x1134158", VA = "0x1134158", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x11342D8", Offset = "0x11342D8", VA = "0x11342D8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1134434", Offset = "0x1134434", VA = "0x1134434", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1134444", Offset = "0x1134444", VA = "0x1134444", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1133928", Offset = "0x1133928", VA = "0x1133928")]
		public void ButtonPressed(ReferenceButton.Type rType)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1133DD0", Offset = "0x1133DD0", VA = "0x1133DD0")]
		public void SwitchTab(ReferencePanelTab newTab)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x11344BC", Offset = "0x11344BC", VA = "0x11344BC", Slot = "27")]
		public override void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x11344F8", Offset = "0x11344F8", VA = "0x11344F8", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1134530", Offset = "0x1134530", VA = "0x1134530", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x11346D4", Offset = "0x11346D4", VA = "0x11346D4")]
		private void OnCatalogChanged()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x11346E4", Offset = "0x11346E4", VA = "0x11346E4", Slot = "19")]
		protected override void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x11347D4", Offset = "0x11347D4", VA = "0x11347D4", Slot = "36")]
		protected override void UpdateButtonTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x11347F4", Offset = "0x11347F4", VA = "0x11347F4", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x11348A0", Offset = "0x11348A0", VA = "0x11348A0")]
		public ReferencePanel()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class RepaintTray : BaseTray
	{
		[Token(Token = "0x20002F9")]
		private enum ButtonType
		{
			[Token(Token = "0x4001186")]
			Recolor,
			[Token(Token = "0x4001187")]
			Rebrush,
			[Token(Token = "0x4001188")]
			Resize,
			[Token(Token = "0x4001189")]
			Jitter
		}

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RepaintTool m_repaintTool;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x11348E0", Offset = "0x11348E0", VA = "0x11348E0")]
		private void SetRepaintFlags(ButtonType buttonType, bool state)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1134A14", Offset = "0x1134A14", VA = "0x1134A14")]
		public void RecolorToggled(ToggleButton button)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1134A30", Offset = "0x1134A30", VA = "0x1134A30")]
		public void RebrushToggled(ToggleButton button)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1134A4C", Offset = "0x1134A4C", VA = "0x1134A4C")]
		public void ResizeToggled(ToggleButton button)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1134A68", Offset = "0x1134A68", VA = "0x1134A68")]
		public void JitterToggled(ToggleButton button)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1134A84", Offset = "0x1134A84", VA = "0x1134A84")]
		public RepaintTray()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class SaveAndConfirmButton : ConfirmationButton
	{
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1134A8C", Offset = "0x1134A8C", VA = "0x1134A8C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1134B50", Offset = "0x1134B50", VA = "0x1134B50")]
		public SaveAndConfirmButton()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class SaveAndOptionButton : OptionButton
	{
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1134B58", Offset = "0x1134B58", VA = "0x1134B58", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1134BD4", Offset = "0x1134BD4", VA = "0x1134BD4")]
		public SaveAndOptionButton()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class SelectCameraPathButton : OptionButton
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		protected int m_PathNumber;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		protected GameObject m_AddPathMesh;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected TextMeshPro m_PathNumberText;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private CameraPathWidget m_PathWidget;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_NumActivePaths;

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1134BDC", Offset = "0x1134BDC", VA = "0x1134BDC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x113502C", Offset = "0x113502C", VA = "0x113502C", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1135180", Offset = "0x1135180", VA = "0x1135180", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x11353A4", Offset = "0x11353A4", VA = "0x11353A4", Slot = "20")]
		public override void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1135464", Offset = "0x1135464", VA = "0x1135464")]
		public SelectCameraPathButton()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class SelectionTray : BaseTray
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private OptionButton m_GroupButton;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x113546C", Offset = "0x113546C", VA = "0x113546C", Slot = "33")]
		protected override void OnSelectionChanged()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1135490", Offset = "0x1135490", VA = "0x1135490")]
		public SelectionTray()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class SketchSurfacePanel : BasePanel
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchSurfacePanel m_Instance;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool m_BacksideIsActive;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool m_FreePaintMode;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private BaseTool[] m_Tools;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int m_ActiveToolIndex;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float m_ToolSelectionAggregateValue;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private float m_ToolSelectionThreshold;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private List<BaseTool> m_ToolsToMonitor;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		protected bool m_ToolHideRequested;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
		private bool m_SurfaceIsDrawable;

		[NonSerialized]
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x322")]
		public bool m_UpdatedToolThisFrame;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x323")]
		private bool m_AddedNewPoseListener;

		[Token(Token = "0x170002FE")]
		public BaseTool ActiveTool
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x11354F4", Offset = "0x11354F4", VA = "0x11354F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public BaseTool.ToolType ActiveToolType
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x1135528", Offset = "0x1135528", VA = "0x1135528")]
			get
			{
				return default(BaseTool.ToolType);
			}
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1135498", Offset = "0x1135498", VA = "0x1135498")]
		public bool IsSurfaceDrawable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x11354A0", Offset = "0x11354A0", VA = "0x11354A0")]
		public bool IsSketchSurfaceToolActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x11354E0", Offset = "0x11354E0", VA = "0x11354E0")]
		public void SetInFreePaintMode(bool bFreePaint)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x11354EC", Offset = "0x11354EC", VA = "0x11354EC")]
		public bool IsInFreePaintMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1135564", Offset = "0x1135564", VA = "0x1135564")]
		private BaseTool.ToolType DefaultToolType()
		{
			return default(BaseTool.ToolType);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1135578", Offset = "0x1135578", VA = "0x1135578", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x113562C", Offset = "0x113562C", VA = "0x113562C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1135704", Offset = "0x1135704", VA = "0x1135704")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x11357D8", Offset = "0x11357D8", VA = "0x11357D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x11359F0", Offset = "0x11359F0", VA = "0x11359F0")]
		public void BeginMonitoringTool(BaseTool tool)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1135B04", Offset = "0x1135B04", VA = "0x1135B04")]
		public void StopMonitoringTool(BaseTool tool)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1135BE0", Offset = "0x1135BE0", VA = "0x1135BE0")]
		public void SetBacksideActive(Vector3 vCamPosition)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1135D78", Offset = "0x1135D78", VA = "0x1135D78", Slot = "15")]
		public override void GetReticleTransform(out Vector3 vPos, out Vector3 vForward, bool bGazeAndTap)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x11352C4", Offset = "0x11352C4", VA = "0x11352C4")]
		public void EnableSpecificTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1135E40", Offset = "0x1135E40", VA = "0x1135E40")]
		public void DisableSpecificTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1135E94", Offset = "0x1135E94", VA = "0x1135E94")]
		public void EnableDefaultTool()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1135EA8", Offset = "0x1135EA8", VA = "0x1135EA8")]
		public bool IsDefaultToolEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1135EE0", Offset = "0x1135EE0", VA = "0x1135EE0")]
		public BaseTool GetToolOfType(BaseTool.ToolType type)
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1135F3C", Offset = "0x1135F3C", VA = "0x1135F3C")]
		public void VerifyValidToolWithColorUpdate()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1135F98", Offset = "0x1135F98", VA = "0x1135F98")]
		public void EnsureUserHasBasicToolEnabled()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1135FF4", Offset = "0x1135FF4", VA = "0x1135FF4")]
		public void RequestHideActiveTool(bool bHide)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1136000", Offset = "0x1136000", VA = "0x1136000")]
		private bool IsScrollableTool(BaseTool.ToolType rType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1136030", Offset = "0x1136030", VA = "0x1136030")]
		public void CheckForToolSelection()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x11362F8", Offset = "0x11362F8", VA = "0x11362F8")]
		public void NextTool()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1136480", Offset = "0x1136480", VA = "0x1136480")]
		public void PreviousTool()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x113660C", Offset = "0x113660C", VA = "0x113660C")]
		public void UpdateCurrentTool()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x113672C", Offset = "0x113672C", VA = "0x113672C")]
		public void OnNewPoses()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1136760", Offset = "0x1136760", VA = "0x1136760")]
		public bool DoesCurrentToolAllowWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1136784", Offset = "0x1136784", VA = "0x1136784")]
		public void UpdateToolSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x11367B8", Offset = "0x11367B8", VA = "0x11367B8")]
		public float ToolSize01()
		{
			return default(float);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x11367DC", Offset = "0x11367DC", VA = "0x11367DC")]
		public void SetCurrentToolColor(Color rColor)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1136830", Offset = "0x1136830", VA = "0x1136830")]
		public void UpdateCurrentToolExtraText(string sText)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x113685C", Offset = "0x113685C", VA = "0x113685C")]
		public void UpdateCurrentToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1136890", Offset = "0x1136890", VA = "0x1136890")]
		public bool ShouldShowTransformGizmo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x11368AC", Offset = "0x11368AC", VA = "0x11368AC")]
		public bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x11368CC", Offset = "0x11368CC", VA = "0x11368CC")]
		public void EatToolsInput()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x11368E8", Offset = "0x11368E8", VA = "0x11368E8")]
		public void AllowDrawing(bool bAllow)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x113690C", Offset = "0x113690C", VA = "0x113690C")]
		public bool CanAdjustToolSize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1136930", Offset = "0x1136930", VA = "0x1136930", Slot = "8")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x113695C", Offset = "0x113695C", VA = "0x113695C")]
		public float GetCurrentToolSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x11354C4", Offset = "0x11354C4", VA = "0x11354C4")]
		public BaseTool.ToolType GetCurrentToolType()
		{
			return default(BaseTool.ToolType);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1136998", Offset = "0x1136998", VA = "0x1136998")]
		public void EnableRenderer(bool bEnable)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1136A20", Offset = "0x1136A20", VA = "0x1136A20")]
		public SketchSurfacePanel()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class SketchbookButton : OptionButton
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float m_AdjustDistanceAmount;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_IconRenderer;

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1136A8C", Offset = "0x1136A8C", VA = "0x1136A8C", Slot = "40")]
		protected override void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrowAmount)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1136B68", Offset = "0x1136B68", VA = "0x1136B68", Slot = "34")]
		protected override void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1136BA8", Offset = "0x1136BA8", VA = "0x1136BA8")]
		public SketchbookButton()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SketchbookPanel : ModalPanel
	{
		[Token(Token = "0x400119E")]
		private const int kElementNumberGalleryButtonLocal = 0;

		[Token(Token = "0x400119F")]
		private const float kGalleryButtonLocalPadding = 0.15f;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private Texture2D m_LoadingImageTexture;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private Texture2D m_UnknownImageTexture;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private TextMeshPro m_PanelTextPro;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private string m_PanelTextStandard;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private string m_PanelTextShowcase;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private string m_PanelTextLiked;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private string m_PanelTextDrive;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private GameObject m_NoSketchesMessage;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[SerializeField]
		private GameObject m_NoDriveSketchesMessage;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private GameObject m_NoLikesMessage;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private GameObject m_NotLoggedInMessage;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[SerializeField]
		private GameObject m_NotLoggedInDriveMessage;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[SerializeField]
		private GameObject m_NoShowcaseMessage;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[SerializeField]
		private GameObject m_ContactingServerMessage;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private GameObject m_OutOfDateMessage;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[SerializeField]
		private GameObject m_NoPolyConnectionMessage;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[SerializeField]
		private Renderer m_OnlineGalleryButtonRenderer;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[SerializeField]
		private GameObject[] m_IconsOnFirstPage;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[SerializeField]
		private GameObject[] m_IconsOnNormalPage;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[SerializeField]
		private GameObject m_NewSketchButton;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[SerializeField]
		private GalleryButton[] m_GalleryButtons;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[SerializeField]
		private int m_ElementNumberGalleryButtonDrive;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		[SerializeField]
		private float m_GalleryButtonHeight;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[SerializeField]
		private Renderer m_ProfileButtonRenderer;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[SerializeField]
		private GameObject m_LoadingGallery;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[SerializeField]
		private GameObject m_DriveSyncProgress;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[SerializeField]
		private GameObject m_SyncingDriveIcon;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[SerializeField]
		private GameObject m_DriveEnabledIcon;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[SerializeField]
		private GameObject m_DriveDisabledIcon;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		[SerializeField]
		private GameObject m_DriveFullIcon;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[SerializeField]
		private Vector2 m_SketchIconUvScale;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[SerializeField]
		private Vector3 m_ReadOnlyPopupOffset;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float m_ImageAspect;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private Vector2 m_HalfInvUvScale;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private SceneFileInfo m_FirstSketch;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x469")]
		private bool m_AllSketchesAreAvailable;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		private SketchSetType m_CurrentSketchSet;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private SketchSet m_SketchSet;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private OptionButton m_NewSketchButtonScript;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private OptionButton m_PaintButtonScript;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private List<BaseButton> m_IconScriptsOnFirstPage;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private List<BaseButton> m_IconScriptsOnNormalPage;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private bool m_DriveSetHasSketches;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x499")]
		private bool m_ReadOnlyShown;

		[Token(Token = "0x17000300")]
		public float ImageAspect
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x1136BB0", Offset = "0x1136BB0", VA = "0x1136BB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000301")]
		protected override List<BaseButton> Icons
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x1136CD0", Offset = "0x1136CD0", VA = "0x1136CD0", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1136BB8", Offset = "0x1136BB8", VA = "0x1136BB8", Slot = "6")]
		public override void SetInIntroMode(bool inIntro)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1136D04", Offset = "0x1136D04", VA = "0x1136D04", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1136E28", Offset = "0x1136E28", VA = "0x1136E28", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x11370B0", Offset = "0x11370B0", VA = "0x11370B0", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1137E30", Offset = "0x1137E30", VA = "0x1137E30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1137F38", Offset = "0x1137F38", VA = "0x1137F38", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1137568", Offset = "0x1137568", VA = "0x1137568")]
		private void SetVisibleSketchSet(SketchSetType type)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x1137FF0", Offset = "0x1137FF0", VA = "0x1137FF0")]
		private void ComputeNumPages()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1138144", Offset = "0x1138144", VA = "0x1138144")]
		private List<int> GetIconLoadIndices()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x113830C", Offset = "0x113830C", VA = "0x113830C", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x113908C", Offset = "0x113908C", VA = "0x113908C")]
		private void Update()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x11373CC", Offset = "0x11373CC", VA = "0x11373CC")]
		private void OnDriveSetHasSketchesChanged()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1139928", Offset = "0x1139928", VA = "0x1139928")]
		private void UpdateIcons()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x113A568", Offset = "0x113A568", VA = "0x113A568", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x113A79C", Offset = "0x113A79C", VA = "0x113A79C", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x113AA4C", Offset = "0x113AA4C", VA = "0x113AA4C", Slot = "19")]
		protected override void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x113ACBC", Offset = "0x113ACBC", VA = "0x113ACBC", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x113A3BC", Offset = "0x113A3BC", VA = "0x113A3BC")]
		public void ButtonPressed(GalleryButton.Type rType, [Optional] BaseButton button)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x113ADA4", Offset = "0x113ADA4", VA = "0x113ADA4")]
		private void OnSketchSetDirty()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x113AF94", Offset = "0x113AF94", VA = "0x113AF94", Slot = "35")]
		protected override void UpdateIndexOffset()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x113B03C", Offset = "0x113B03C", VA = "0x113B03C")]
		public SketchbookPanel()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class SketchesPanel : BasePanel
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private GameObject m_NewSaveButton;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private GameObject m_SaveOptionsButton;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private OptionButton m_ShareButton;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private Material m_ShareButtonStandard;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Material m_ShareButtonNotify;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private string m_ShareButtonLoggedOutExtraText;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Renderer m_ProfileButtonRenderer;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private bool m_LoggedIn;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private float m_LastUploadProgress;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x113B1E4", Offset = "0x113B1E4", VA = "0x113B1E4", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x113B294", Offset = "0x113B294", VA = "0x113B294")]
		private void Update()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x113B5BC", Offset = "0x113B5BC", VA = "0x113B5BC")]
		private void SetShareNotification(bool notify)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x113B228", Offset = "0x113B228", VA = "0x113B228")]
		private void RefreshLoginButtonText(bool loggedIn)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x113B798", Offset = "0x113B798", VA = "0x113B798", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x113B83C", Offset = "0x113B83C", VA = "0x113B83C", Slot = "20")]
		public override void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x113B908", Offset = "0x113B908", VA = "0x113B908")]
		public SketchesPanel()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class SkyboxControl : UIComponent
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_HoverVisualAdjust;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_Renderer;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SphereCollider m_SphereCollider;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion m_SkyboxHandleGrabStart;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_SkyboxHandleGrabOffset;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x113B960", Offset = "0x113B960", VA = "0x113B960", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x113BC9C", Offset = "0x113BC9C", VA = "0x113BC9C", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x113BDAC", Offset = "0x113BDAC", VA = "0x113BDAC", Slot = "5")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x113BE3C", Offset = "0x113BE3C", VA = "0x113BE3C", Slot = "16")]
		public override void ButtonPressed(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x113C040", Offset = "0x113C040", VA = "0x113C040", Slot = "17")]
		public override void ButtonHeld(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x113C360", Offset = "0x113C360", VA = "0x113C360", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x113C4A0", Offset = "0x113C4A0", VA = "0x113C4A0", Slot = "27")]
		public override bool CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x113C708", Offset = "0x113C708", VA = "0x113C708")]
		private void Update()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x113BED4", Offset = "0x113BED4", VA = "0x113BED4")]
		private Vector3 IntersectionPointOnBackside(Vector3 hitPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x113C140", Offset = "0x113C140", VA = "0x113C140")]
		private void SetRotation(Quaternion rot)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x113C75C", Offset = "0x113C75C", VA = "0x113C75C")]
		private void MaintainSceneSpaceRotation()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x113CA88", Offset = "0x113CA88", VA = "0x113CA88")]
		private void OnGradientActiveChanged()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x113CC14", Offset = "0x113CC14", VA = "0x113CC14")]
		private void OnSkyboxChanged()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x113CD04", Offset = "0x113CD04", VA = "0x113CD04")]
		public SkyboxControl()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class SliderEndCapScript : MonoBehaviour
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D m_Icon;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x113CEB4", Offset = "0x113CEB4", VA = "0x113CEB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x113CF1C", Offset = "0x113CF1C", VA = "0x113CF1C")]
		public SliderEndCapScript()
		{
		}
	}
	[Token(Token = "0x2000305")]
	internal class SnapSettingsButton : MultistateButton
	{
		[Serializable]
		[Token(Token = "0x2000306")]
		public enum SettingTypes
		{
			[Token(Token = "0x40011E3")]
			Angle,
			[Token(Token = "0x40011E4")]
			GridSize
		}

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public SettingTypes SettingType;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x113CF24", Offset = "0x113CF24", VA = "0x113CF24", Slot = "42")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x113CFC0", Offset = "0x113CFC0", VA = "0x113CFC0", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x113D084", Offset = "0x113D084", VA = "0x113D084")]
		public SnapSettingsButton()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class SnapSettingsPanel : BasePanel
	{
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x113D08C", Offset = "0x113D08C", VA = "0x113D08C")]
		public SnapSettingsPanel()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class SnapshotPreview : UIComponent
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_CameraAttach;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MultiCamCaptureRig m_SketchControlsCaptureRig;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x113D0E4", Offset = "0x113D0E4", VA = "0x113D0E4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x113D16C", Offset = "0x113D16C", VA = "0x113D16C", Slot = "15")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x113D580", Offset = "0x113D580", VA = "0x113D580", Slot = "23")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x113D654", Offset = "0x113D654", VA = "0x113D654")]
		public SnapshotPreview()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class StencilAttractDistanceSlider : BaseSlider
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_MinAttractDistance;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_MaxAttractDistance;

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x113D670", Offset = "0x113D670", VA = "0x113D670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x113D7FC", Offset = "0x113D7FC", VA = "0x113D7FC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x113D89C", Offset = "0x113D89C", VA = "0x113D89C", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x113D710", Offset = "0x113D710", VA = "0x113D710")]
		private void OnStencilAttractDistChanged()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x113D9D8", Offset = "0x113D9D8", VA = "0x113D9D8", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x113DAA4", Offset = "0x113DAA4", VA = "0x113DAA4", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x113D9E0", Offset = "0x113D9E0", VA = "0x113D9E0")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x113DACC", Offset = "0x113DACC", VA = "0x113DACC")]
		public StencilAttractDistanceSlider()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class StencilButton : BaseButton
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private StencilType m_Type;

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x113DAE0", Offset = "0x113DAE0", VA = "0x113DAE0", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x113DD08", Offset = "0x113DD08", VA = "0x113DD08")]
		public StencilButton()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class StencilFrameWidthSlider : BaseSlider
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_MinGridWidth;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_MaxGridWidth;

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x113DD10", Offset = "0x113DD10", VA = "0x113DD10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x113DE78", Offset = "0x113DE78", VA = "0x113DE78", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x113DD7C", Offset = "0x113DD7C", VA = "0x113DD7C")]
		private void OnStencilFrameWidthChanged()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x113E01C", Offset = "0x113E01C", VA = "0x113E01C", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x113E0F8", Offset = "0x113E0F8", VA = "0x113E0F8", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x113E020", Offset = "0x113E020", VA = "0x113E020")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x113E120", Offset = "0x113E120", VA = "0x113E120")]
		public StencilFrameWidthSlider()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class StencilGridLineWidthSlider : BaseSlider
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_MinGridWidth;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_MaxGridWidth;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x113E134", Offset = "0x113E134", VA = "0x113E134")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x113E29C", Offset = "0x113E29C", VA = "0x113E29C", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x113E1A0", Offset = "0x113E1A0", VA = "0x113E1A0")]
		private void OnStencilGridWidthChanged()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x113E440", Offset = "0x113E440", VA = "0x113E440", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x113E51C", Offset = "0x113E51C", VA = "0x113E51C", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x113E444", Offset = "0x113E444", VA = "0x113E444")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x113E544", Offset = "0x113E544", VA = "0x113E544")]
		public StencilGridLineWidthSlider()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class StencilGridSizeSlider : BaseSlider
	{
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_MinGridSize;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_MaxGridSize;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x113E558", Offset = "0x113E558", VA = "0x113E558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x113E6C0", Offset = "0x113E6C0", VA = "0x113E6C0", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x113E5C4", Offset = "0x113E5C4", VA = "0x113E5C4")]
		private void OnStencilGridSizeChanged()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x113E864", Offset = "0x113E864", VA = "0x113E864", Slot = "18")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x113E940", Offset = "0x113E940", VA = "0x113E940", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x113E868", Offset = "0x113E868", VA = "0x113E868")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x113E968", Offset = "0x113E968", VA = "0x113E968")]
		public StencilGridSizeSlider()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class StencilsVisibilityButton : OptionButton
	{
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x113E97C", Offset = "0x113E97C", VA = "0x113E97C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x113EA14", Offset = "0x113EA14", VA = "0x113EA14", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x113EAAC", Offset = "0x113EAAC", VA = "0x113EAAC")]
		public StencilsVisibilityButton()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class StrokeSimplificationSlider : BaseSlider
	{
		[Token(Token = "0x2000310")]
		public struct Step
		{
			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sliderRatio;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float simplification;
		}

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject[] m_HideOnChange;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject[] m_ShowOnChange;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float[] m_SimplificationAmounts;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Step[] m_Steps;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_ProposedSimplificationLevel;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x113EAB4", Offset = "0x113EAB4", VA = "0x113EAB4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x113EC68", Offset = "0x113EC68", VA = "0x113EC68")]
		private void PositionNobAtSimplificationLevel(float level)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x113EE08", Offset = "0x113EE08", VA = "0x113EE08")]
		private int GetStepFromLevel(float level)
		{
			return default(int);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x113EE7C", Offset = "0x113EE7C", VA = "0x113EE7C")]
		private void ShowConfirmation(bool show)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x113F040", Offset = "0x113F040", VA = "0x113F040", Slot = "32")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x113ED28", Offset = "0x113ED28", VA = "0x113ED28")]
		private string GetDescriptionExtraText(int step)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x113F260", Offset = "0x113F260", VA = "0x113F260")]
		[Obfuscation(Exclude = true)]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x113F340", Offset = "0x113F340", VA = "0x113F340")]
		[Obfuscation(Exclude = true)]
		public void CancelSettings()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x113F3AC", Offset = "0x113F3AC", VA = "0x113F3AC", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x113F3B8", Offset = "0x113F3B8", VA = "0x113F3B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x113F4E4", Offset = "0x113F4E4", VA = "0x113F4E4")]
		public StrokeSimplificationSlider()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class TestingButton : BaseButton
	{
		[Token(Token = "0x2000312")]
		public enum Type
		{
			[Token(Token = "0x40011FB")]
			Back,
			[Token(Token = "0x40011FC")]
			Next,
			[Token(Token = "0x40011FD")]
			Result
		}

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_ResultText;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Type m_Type;

		[Token(Token = "0x17000302")]
		public string ResultText
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x113F4EC", Offset = "0x113F4EC", VA = "0x113F4EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x113F4F4", Offset = "0x113F4F4", VA = "0x113F4F4", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x113F694", Offset = "0x113F694", VA = "0x113F694")]
		public void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x113F6A0", Offset = "0x113F6A0", VA = "0x113F6A0")]
		public TestingButton()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class TestingPanel : BasePanel
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private TestingButton m_PassButton;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private TestingButton m_FailButton;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private TestingButton m_NAButton;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private TextMeshPro m_Summary;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private TextMeshPro m_Steps;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private TextMeshPro m_ExpectedResult;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private string[,] m_TestCases;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int m_TestIndex;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private int m_SummaryIndex;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private int m_StepsIndex;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private int m_ExpectedResultIndex;

		[Token(Token = "0x17000303")]
		private static string InputFilePath
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x113F6A8", Offset = "0x113F6A8", VA = "0x113F6A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private static string OutputFilePath
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x113F724", Offset = "0x113F724", VA = "0x113F724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public override bool ShouldRegister
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x113F7CC", Offset = "0x113F7CC", VA = "0x113F7CC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x113F5A4", Offset = "0x113F5A4", VA = "0x113F5A4")]
		public void OnButtonPressed(TestingButton.Type type, string text = "")
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x113FA34", Offset = "0x113FA34", VA = "0x113FA34")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x113FA50", Offset = "0x113FA50", VA = "0x113FA50", Slot = "13")]
		protected override void OnDisablePanel()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x113FAA4", Offset = "0x113FAA4", VA = "0x113FAA4", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x113FAF8", Offset = "0x113FAF8", VA = "0x113FAF8")]
		public void ResetTests()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x113F7D4", Offset = "0x113F7D4", VA = "0x113F7D4")]
		private void RefreshPanel()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x113FB24", Offset = "0x113FB24", VA = "0x113FB24")]
		private void PopulateCases(string input)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x113FF3C", Offset = "0x113FF3C", VA = "0x113FF3C")]
		private void AddResultsColumn()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1140170", Offset = "0x1140170", VA = "0x1140170", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x11401E0", Offset = "0x11401E0", VA = "0x11401E0")]
		public TestingPanel()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public enum WatermarkStyle
	{
		[Token(Token = "0x400120A")]
		Standard,
		[Token(Token = "0x400120B")]
		Labs,
		[Token(Token = "0x400120C")]
		None
	}
	[Token(Token = "0x2000315")]
	public class TiltBrushWatermark : MonoBehaviour
	{
		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Watermark;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_WatermarkLabs;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WatermarkStyle m_WatermarkStyle;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x114024C", Offset = "0x114024C", VA = "0x114024C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x11402D4", Offset = "0x11402D4", VA = "0x11402D4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1140464", Offset = "0x1140464", VA = "0x1140464")]
		public TiltBrushWatermark()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class TiltasaurusButton : BaseButton
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x114046C", Offset = "0x114046C", VA = "0x114046C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x11404F8", Offset = "0x11404F8", VA = "0x11404F8")]
		public TiltasaurusButton()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class TiltasaurusPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x2000318")]
		[CompilerGenerated]
		private sealed class <Refresh>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TiltasaurusPopUpWindow <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F9")]
				[Address(RVA = "0x1140B40", Offset = "0x1140B40", VA = "0x1140B40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FB")]
				[Address(RVA = "0x1140B88", Offset = "0x1140B88", VA = "0x1140B88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x114084C", Offset = "0x114084C", VA = "0x114084C")]
			[DebuggerHidden]
			public <Refresh>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1140960", Offset = "0x1140960", VA = "0x1140960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x1140964", Offset = "0x1140964", VA = "0x1140964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x1140B48", Offset = "0x1140B48", VA = "0x1140B48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001210")]
		private const string kNoPeeking = "        Tiltasaurus says...\n                              No Peeking!\n     Category: {0}";

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMesh m_DrawingPrompt;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TextMesh m_Category;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_DrawingPromptMaxWidth;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_NoPeekingCameraPrefab;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GameObject m_NoPeekingCamera;

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1140500", Offset = "0x1140500", VA = "0x1140500", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1140758", Offset = "0x1140758", VA = "0x1140758", Slot = "13")]
		protected override void DestroyPopUpWindow()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x11404D8", Offset = "0x11404D8", VA = "0x11404D8")]
		public void RefreshWord()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x11407E4", Offset = "0x11407E4", VA = "0x11407E4")]
		[IteratorStateMachine(typeof(<Refresh>d__9))]
		private IEnumerator Refresh()
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1140874", Offset = "0x1140874", VA = "0x1140874")]
		private static void SetTextResize(string text, TextMesh dest, float maxWidth)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x11405BC", Offset = "0x11405BC", VA = "0x11405BC")]
		private void RefreshDrawingPrompt()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1140934", Offset = "0x1140934", VA = "0x1140934")]
		public TiltasaurusPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class ToggleButton : OptionButton
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool m_IsToggledOn;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public UnityEvent m_OnToggle;

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1140B90", Offset = "0x1140B90", VA = "0x1140B90", Slot = "41")]
		protected override bool IsButtonActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1140B98", Offset = "0x1140B98", VA = "0x1140B98", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1140BC4", Offset = "0x1140BC4", VA = "0x1140BC4")]
		public ToggleButton()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class ToolButton : BaseButton
	{
		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BaseTool.ToolType m_Tool;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool m_EatGazeInputOnPress;

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1140BCC", Offset = "0x1140BCC", VA = "0x1140BCC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1140C64", Offset = "0x1140C64", VA = "0x1140C64", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1140CF8", Offset = "0x1140CF8", VA = "0x1140CF8", Slot = "22")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1140DA0", Offset = "0x1140DA0", VA = "0x1140DA0", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1140E6C", Offset = "0x1140E6C", VA = "0x1140E6C")]
		public ToolButton()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TutorialPanel : BasePanel
	{
		[Token(Token = "0x200031C")]
		private enum TransitionState
		{
			[Token(Token = "0x4001226")]
			Out,
			[Token(Token = "0x4001227")]
			In,
			[Token(Token = "0x4001228")]
			None
		}

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		[SerializeField]
		private float m_TipTransitionSpeed;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private GameObject m_Title;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private TextMeshPro m_TipNumber;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private TransitionState m_TipTransitionState;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private float m_TipTransitionValue;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private GameObject m_TutorialObject;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private TutorialType m_CurrentTutorialType;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private TutorialType m_DesiredTutorialType;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x1140E74", Offset = "0x1140E74", VA = "0x1140E74", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x1140F24", Offset = "0x1140F24", VA = "0x1140F24", Slot = "21")]
		public override void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1140F44", Offset = "0x1140F44", VA = "0x1140F44", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x1140F64", Offset = "0x1140F64", VA = "0x1140F64", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1140F84", Offset = "0x1140F84", VA = "0x1140F84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x11410F8", Offset = "0x11410F8", VA = "0x11410F8")]
		private void SetTutorial(TutorialType type)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1140E94", Offset = "0x1140E94", VA = "0x1140E94")]
		private void ShowTutorialOfType(TutorialType type)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x114137C", Offset = "0x114137C", VA = "0x114137C", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x114139C", Offset = "0x114139C", VA = "0x114139C")]
		public TutorialPanel()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public abstract class UIComponent : MonoBehaviour
	{
		[Token(Token = "0x200031E")]
		protected enum DescriptionState
		{
			[Token(Token = "0x400123B")]
			Deactivated,
			[Token(Token = "0x400123C")]
			Activating,
			[Token(Token = "0x400123D")]
			Active,
			[Token(Token = "0x400123E")]
			Deactivating,
			[Token(Token = "0x400123F")]
			Unavailable
		}

		[Token(Token = "0x200031F")]
		public enum ComponentMessage
		{
			[Token(Token = "0x4001241")]
			NextPage,
			[Token(Token = "0x4001242")]
			PrevPage,
			[Token(Token = "0x4001243")]
			GotoPage,
			[Token(Token = "0x4001244")]
			ClosePopup
		}

		[Token(Token = "0x4001229")]
		public const float kUnavailableTintAmount = 0.4f;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DescriptionType m_DescriptionType;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float m_DescriptionYOffset;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string m_DescriptionText;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string m_DescriptionTextExtra;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float m_DescriptionActivateSpeed;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float m_DescriptionZScale;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Collider m_Collider;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected UIComponentManager m_Manager;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject m_Description;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIComponentDescription m_DescriptionScript;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float m_DescriptionActivateTimer;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected DescriptionState m_DescriptionState;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool m_HoldFocus;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool m_StealFocus;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		protected bool m_HadFocus;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		protected bool m_HadButtonPress;

		[Token(Token = "0x17000308")]
		public string Description
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x1141404", Offset = "0x1141404", VA = "0x1141404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public string DescriptionExtra
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x114140C", Offset = "0x114140C", VA = "0x114140C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x11413FC", Offset = "0x11413FC", VA = "0x11413FC", Slot = "4")]
		public virtual Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x1141414", Offset = "0x1141414", VA = "0x1141414")]
		public bool IsDescriptionActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1141424", Offset = "0x1141424", VA = "0x1141424")]
		public void SetDescriptionUnavailable(bool unavailable)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x113B6C8", Offset = "0x113B6C8", VA = "0x113B6C8")]
		public void SetExtraDescriptionText(string sDescExtra)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x11332F0", Offset = "0x11332F0", VA = "0x11332F0")]
		public void SetDescriptionText(params string[] strings)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x114174C", Offset = "0x114174C", VA = "0x114174C")]
		public void AdjustDescriptionScale()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x1141880", Offset = "0x1141880", VA = "0x1141880", Slot = "5")]
		public virtual void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x113BBA4", Offset = "0x113BBA4", VA = "0x113BBA4", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x1132CE4", Offset = "0x1132CE4", VA = "0x1132CE4", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x113F3B4", Offset = "0x113F3B4", VA = "0x113F3B4", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1131424", Offset = "0x1131424", VA = "0x1131424")]
		public void RegisterComponent()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1141884", Offset = "0x1141884", VA = "0x1141884")]
		private void UnregisterComponent()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1141A08", Offset = "0x1141A08", VA = "0x1141A08", Slot = "9")]
		protected virtual void OnRegisterComponent()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x113BDA8", Offset = "0x113BDA8", VA = "0x113BDA8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x1141A0C", Offset = "0x1141A0C", VA = "0x1141A0C", Slot = "11")]
		protected virtual void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x1141ADC", Offset = "0x1141ADC", VA = "0x1141ADC")]
		public void SetDescriptionActive(bool active)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1141BB4", Offset = "0x1141BB4", VA = "0x1141BB4", Slot = "12")]
		public virtual void ForceDescriptionDeactivate()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1141C5C", Offset = "0x1141C5C", VA = "0x1141C5C")]
		protected void SetDescriptionVisualsAvailable(bool available)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1141DB0", Offset = "0x1141DB0", VA = "0x1141DB0", Slot = "13")]
		protected virtual void OnDescriptionActivated()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1141DB4", Offset = "0x1141DB4", VA = "0x1141DB4", Slot = "14")]
		protected virtual void OnDescriptionDeactivated()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x113D24C", Offset = "0x113D24C", VA = "0x113D24C", Slot = "15")]
		public virtual bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1141DB8", Offset = "0x1141DB8", VA = "0x1141DB8", Slot = "16")]
		public virtual void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1141DBC", Offset = "0x1141DBC", VA = "0x1141DBC", Slot = "17")]
		public virtual void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x113D9DC", Offset = "0x113D9DC", VA = "0x113D9DC", Slot = "18")]
		public virtual void ButtonReleased()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1141DC0", Offset = "0x1141DC0", VA = "0x1141DC0", Slot = "19")]
		public virtual void GainFocus()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1141DC4", Offset = "0x1141DC4", VA = "0x1141DC4", Slot = "20")]
		public virtual void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1141DC8", Offset = "0x1141DC8", VA = "0x1141DC8", Slot = "21")]
		public virtual void LostFocus()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1132E58", Offset = "0x1132E58", VA = "0x1132E58", Slot = "22")]
		public virtual void UpdateVisuals()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1141DCC", Offset = "0x1141DCC", VA = "0x1141DCC", Slot = "23")]
		public virtual void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1141DD0", Offset = "0x1141DD0", VA = "0x1141DD0", Slot = "24")]
		public virtual void ManagerLostFocus()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1141DD4", Offset = "0x1141DD4", VA = "0x1141DD4", Slot = "25")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1141DDC", Offset = "0x1141DDC", VA = "0x1141DDC", Slot = "26")]
		public virtual bool RaycastAgainstCustomCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1141DF0", Offset = "0x1141DF0", VA = "0x1141DF0", Slot = "27")]
		public virtual bool CalculateReticleCollision(Ray ray, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1141ED4", Offset = "0x1141ED4", VA = "0x1141ED4", Slot = "28")]
		public virtual void ReceiveMessage(ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1141ED8", Offset = "0x1141ED8", VA = "0x1141ED8", Slot = "29")]
		public virtual bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x1141EE0", Offset = "0x1141EE0", VA = "0x1141EE0", Slot = "30")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1141EE4", Offset = "0x1141EE4", VA = "0x1141EE4", Slot = "31")]
		public virtual float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x113CD20", Offset = "0x113CD20", VA = "0x113CD20")]
		protected UIComponent()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class UIComponentDescription : MonoBehaviour
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_BG;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_RightCap;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] m_TintVisuals;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMesh[] m_Text;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_UnavailableColor;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Tooltip("Position the origin of the description on the right edge of UI component rather than at it's center.")]
		private bool m_PlaceOnRightEdge;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_DefaultScale;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_StandardColor;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_YOffset;

		[Token(Token = "0x1700030A")]
		public float YOffset
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x1141F78", Offset = "0x1141F78", VA = "0x1141F78")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public int NumberOfLines
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x1141458", Offset = "0x1141458", VA = "0x1141458")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1141474", Offset = "0x1141474", VA = "0x1141474")]
		public void SetDescription(string[] strings)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x11417C8", Offset = "0x11417C8", VA = "0x11417C8")]
		public void AdjustDescriptionScale()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1141CEC", Offset = "0x1141CEC", VA = "0x1141CEC")]
		public void SetAvailabilityVisuals(bool available)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x1141F80", Offset = "0x1141F80", VA = "0x1141F80")]
		public UIComponentDescription()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class UIComponentManager : MonoBehaviour
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<UIComponent> m_UIComponents;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_ActiveInputObject;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIComponent m_ActiveInputUIComponent;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BasePanel m_PopUpPanel;

		[Token(Token = "0x1700030C")]
		public GameObject ActiveInputObject
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x1141F9C", Offset = "0x1141F9C", VA = "0x1141F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x1141FA4", Offset = "0x1141FA4", VA = "0x1141FA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public UIComponent ActiveInputUIComponent
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x1141FAC", Offset = "0x1141FAC", VA = "0x1141FAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public UIComponentManager ParentManager
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x1141FB4", Offset = "0x1141FB4", VA = "0x1141FB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x114207C", Offset = "0x114207C", VA = "0x114207C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1141908", Offset = "0x1141908", VA = "0x1141908")]
		public void RegisterUIComponent(UIComponent comp)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x11419B0", Offset = "0x11419B0", VA = "0x11419B0")]
		public void UnregisterUIComponent(UIComponent comp)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x113C934", Offset = "0x113C934", VA = "0x113C934")]
		public BasePanel GetPanelForPopUps()
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x11420F0", Offset = "0x11420F0", VA = "0x11420F0")]
		private BasePanel GetPanelFromManager(UIComponentManager manager)
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x11316FC", Offset = "0x11316FC", VA = "0x11316FC")]
		public void SetColor(Color col)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1131B74", Offset = "0x1131B74", VA = "0x1131B74")]
		public void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x11421DC", Offset = "0x11421DC", VA = "0x11421DC")]
		public void ManagerLostFocus()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1142270", Offset = "0x1142270", VA = "0x1142270")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1142328", Offset = "0x1142328", VA = "0x1142328")]
		public void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x11423CC", Offset = "0x11423CC", VA = "0x11423CC")]
		public bool BrushPadAnimatesOnAnyHover()
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1142470", Offset = "0x1142470", VA = "0x1142470")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1142514", Offset = "0x1142514", VA = "0x1142514")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x11425D0", Offset = "0x11425D0", VA = "0x11425D0")]
		public void ResetInput()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1131E80", Offset = "0x1131E80", VA = "0x1131E80")]
		public void UpdateUIComponents(Ray selectionRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x11425D8", Offset = "0x11425D8", VA = "0x11425D8")]
		public void SendMessageToComponents(UIComponent.ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x11428A8", Offset = "0x11428A8", VA = "0x11428A8")]
		public bool RaycastAgainstCustomColliders(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1132190", Offset = "0x1132190", VA = "0x1132190")]
		public void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x11429A8", Offset = "0x11429A8", VA = "0x11429A8")]
		public UIComponentManager()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class UnlockSkyboxButton : BaseButton
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject[] m_HideOnPress;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject[] m_ShowOnPress;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_TransitionDuration;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject m_Title;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_TransitionToUnlockedSkybox;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_TransitionTimer;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float[] m_HideStartSizes;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float[] m_ShowEndSizes;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x11429B0", Offset = "0x11429B0", VA = "0x11429B0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1142BC0", Offset = "0x1142BC0", VA = "0x1142BC0", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1142C78", Offset = "0x1142C78", VA = "0x1142C78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1143274", Offset = "0x1143274", VA = "0x1143274", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1143300", Offset = "0x1143300", VA = "0x1143300")]
		private void OnGradientActiveChanged()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1142FEC", Offset = "0x1142FEC", VA = "0x1142FEC")]
		private void SetSkyboxUnlocked()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1143130", Offset = "0x1143130", VA = "0x1143130")]
		private void SetSkyboxLocked()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x1143444", Offset = "0x1143444", VA = "0x1143444")]
		public UnlockSkyboxButton()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class UploadOptionButton : OptionButton
	{
		[Token(Token = "0x600145D")]
		[Address(RVA = "0x1143458", Offset = "0x1143458", VA = "0x1143458", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x114347C", Offset = "0x114347C", VA = "0x114347C", Slot = "42")]
		protected override void UpdateAvailability()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1143528", Offset = "0x1143528", VA = "0x1143528")]
		public UploadOptionButton()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class UploadSketchButton : OptionButton
	{
		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1143530", Offset = "0x1143530", VA = "0x1143530", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x1143700", Offset = "0x1143700", VA = "0x1143700")]
		public UploadSketchButton()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class VideoPositionSlider : BaseSlider
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VideoWidget m_VideoWidget;

		[Token(Token = "0x1700030F")]
		public VideoWidget VideoWidget
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x1143708", Offset = "0x1143708", VA = "0x1143708")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001463")]
			[Address(RVA = "0x1143710", Offset = "0x1143710", VA = "0x1143710")]
			set
			{
			}
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1143718", Offset = "0x1143718", VA = "0x1143718", Slot = "32")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x11437B8", Offset = "0x11437B8", VA = "0x11437B8", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1143870", Offset = "0x1143870", VA = "0x1143870")]
		public VideoPositionSlider()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class GeometryTags : MonoBehaviour
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_HighLod;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_LowLod;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_ExcludeFromPolyExport;

		[Token(Token = "0x17000310")]
		public bool IsHighLod
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x1143878", Offset = "0x1143878", VA = "0x1143878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public bool IsLowLod
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x1143880", Offset = "0x1143880", VA = "0x1143880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		public bool ExcludeFromPolyExport
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x1143888", Offset = "0x1143888", VA = "0x1143888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x11438A8", Offset = "0x11438A8", VA = "0x11438A8")]
		public GeometryTags()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class GifEncodeTask
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int m_GifWidth;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int m_GifHeight;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string m_GifName;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_FrameDelayMs;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly bool m_bSavePngs;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private readonly bool m_bPalettePerFrame;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float m_DitherStrength;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Color32[]> m_Frames;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_CreationPercent;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread m_Thread;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_ErrorMessage;

		[Token(Token = "0x17000313")]
		public bool IsDone
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x11438B0", Offset = "0x11438B0", VA = "0x11438B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public string GifName
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x11438D8", Offset = "0x11438D8", VA = "0x11438D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		public string Error
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x11438E0", Offset = "0x11438E0", VA = "0x11438E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public float CreationPercent
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0x1143948", Offset = "0x1143948", VA = "0x1143948")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1143950", Offset = "0x1143950", VA = "0x1143950")]
		public GifEncodeTask(List<Color32[]> frames, int frameDelayMs, int frameWidth, int frameHeight, string gifName, float ditherStrength = 0.125f, bool palettePerFrame = false)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1143A5C", Offset = "0x1143A5C", VA = "0x1143A5C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1143B10", Offset = "0x1143B10", VA = "0x1143B10")]
		private void WriteFrameAsPng(DirectoryInfo di, int i)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1143DA8", Offset = "0x1143DA8", VA = "0x1143DA8")]
		private void Run()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1143ECC", Offset = "0x1143ECC", VA = "0x1143ECC")]
		private void RunLow()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x114440C", Offset = "0x114440C", VA = "0x114440C")]
		private static bool IsSymmetric(List<Color32[]> frames)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000329")]
	public class GuiManager : MonoBehaviour
	{
		[Token(Token = "0x200032A")]
		private enum SlideState
		{
			[Token(Token = "0x4001276")]
			Hidden,
			[Token(Token = "0x4001277")]
			MovingIn,
			[Token(Token = "0x4001278")]
			Showing,
			[Token(Token = "0x4001279")]
			MovingOut
		}

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GuiManager m_Instance;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform m_Sidebar;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Login;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_Profile;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_Text;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_SlideDuration;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_SlideTimer;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SlideState m_SlideState;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SidebarPosX;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x11444D4", Offset = "0x11444D4", VA = "0x11444D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1144800", Offset = "0x1144800", VA = "0x1144800")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1144880", Offset = "0x1144880", VA = "0x1144880")]
		private void Start()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1144944", Offset = "0x1144944", VA = "0x1144944")]
		public void Show(bool show)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x114497C", Offset = "0x114497C", VA = "0x114497C")]
		private void Update()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x11445C8", Offset = "0x11445C8", VA = "0x11445C8")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1144A68", Offset = "0x1144A68", VA = "0x1144A68")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1144A6C", Offset = "0x1144A6C", VA = "0x1144A6C")]
		public GuiManager()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class GvrOverlay : MonoBehaviour
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer m_ProgressIndicator;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_Message;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera m_ModifiedCamera;

		[Token(Token = "0x400127E")]
		private const int kOverlayMask = 16777216;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_OriginalCameraCullingMask;

		[Token(Token = "0x17000317")]
		public MeshRenderer ProgressIndicator
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x1144A7C", Offset = "0x1144A7C", VA = "0x1144A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		public TextMeshPro Status
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x1144A84", Offset = "0x1144A84", VA = "0x1144A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		public float Progress
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x1144A8C", Offset = "0x1144A8C", VA = "0x1144A8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1144AFC", Offset = "0x1144AFC", VA = "0x1144AFC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x1144BC4", Offset = "0x1144BC4", VA = "0x1144BC4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x1144C4C", Offset = "0x1144C4C", VA = "0x1144C4C")]
		public GvrOverlay()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public struct HSLColor
	{
		[Token(Token = "0x4001280")]
		public const float HUE_MAX = 6f;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float l;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x1700031A")]
		public float HueDegrees
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x1144C54", Offset = "0x1144C54", VA = "0x1144C54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x1144C68", Offset = "0x1144C68", VA = "0x1144C68")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public float Hue01
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x1144CAC", Offset = "0x1144CAC", VA = "0x1144CAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x1144CC0", Offset = "0x1144CC0", VA = "0x1144CC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1144CF8", Offset = "0x1144CF8", VA = "0x1144CF8")]
		public HSLColor(float H, float S, float L, float alpha = 1f)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1144D44", Offset = "0x1144D44", VA = "0x1144D44")]
		public static implicit operator HSLColor(Color32 color)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1144D80", Offset = "0x1144D80", VA = "0x1144D80")]
		public static explicit operator HSLColor(Color color)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1144E88", Offset = "0x1144E88", VA = "0x1144E88")]
		public static explicit operator Color(HSLColor hslColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1144FD8", Offset = "0x1144FD8", VA = "0x1144FD8")]
		private static float ColorCalc(float c, float t1, float t2)
		{
			return default(float);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x114504C", Offset = "0x114504C", VA = "0x114504C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x11451F8", Offset = "0x11451F8", VA = "0x11451F8")]
		public HSLColor GetBaseColor()
		{
			return default(HSLColor);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1145240", Offset = "0x1145240", VA = "0x1145240")]
		public static HSLColor FromHSV(float h, float s, float v, float a = 1f)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x11452D4", Offset = "0x11452D4", VA = "0x11452D4")]
		public void ToHSV(out float out_H, out float out_S, out float out_V)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public interface IReferenceItemCatalog
	{
		[Token(Token = "0x1700031C")]
		int ItemCount
		{
			[Token(Token = "0x6001490")]
			get;
		}

		[Token(Token = "0x1700031D")]
		bool IsScanning
		{
			[Token(Token = "0x6001491")]
			get;
		}

		[Token(Token = "0x14000017")]
		event Action CatalogChanged;

		[Token(Token = "0x6001494")]
		void ForceCatalogScan();
	}
	[Token(Token = "0x200032E")]
	public static class ImageCache
	{
		[Token(Token = "0x4001285")]
		private const string kImageCacheNamespace = "Images";

		[Token(Token = "0x4001286")]
		private const string kSignatureFile = "Signature.bin";

		[Token(Token = "0x4001287")]
		private const string kIconFile = "Icon.bin";

		[Token(Token = "0x4001288")]
		private const string kImageFile = "Image.bin";

		[Token(Token = "0x4001289")]
		private const string kAspectRatioFile = "AspectRatio.bin";

		[Token(Token = "0x1700031E")]
		public static string CacheBaseDirectory
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x1ABC590", Offset = "0x1ABC590", VA = "0x1ABC590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1ABB748", Offset = "0x1ABB748", VA = "0x1ABB748")]
		public static void SaveIconCache(Texture2D iconTexture, string filePath, float aspectRatio)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1ABB998", Offset = "0x1ABB998", VA = "0x1ABB998")]
		public static Texture2D LoadIconCache(string filePath, out float aspectRatio)
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1ABBBDC", Offset = "0x1ABBBDC", VA = "0x1ABBBDC")]
		public static void SaveImageCache(Texture2D imageTexture, string filePath)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1ABBC38", Offset = "0x1ABBC38", VA = "0x1ABBC38")]
		public static Texture2D LoadImageCache(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1ABBC94", Offset = "0x1ABBC94", VA = "0x1ABBC94")]
		public static byte[] BytesFromTexture(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1ABC080", Offset = "0x1ABC080", VA = "0x1ABC080")]
		public static Texture2D TextureFromBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1ABC60C", Offset = "0x1ABC60C", VA = "0x1ABC60C")]
		public static string CacheDirectory(string filePath)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1ABC684", Offset = "0x1ABC684", VA = "0x1ABC684")]
		public static void DeleteObsoleteCaches()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1ABCBEC", Offset = "0x1ABCBEC", VA = "0x1ABCBEC")]
		private static byte[] GetCacheSignature(string filePath)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1ABB7B0", Offset = "0x1ABB7B0", VA = "0x1ABB7B0")]
		private static void SaveTextureCache(string cacheFileName, Texture2D texture, string filePath, float aspectRatio = -1f)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1ABB9F0", Offset = "0x1ABB9F0", VA = "0x1ABB9F0")]
		private static Texture2D LoadTextureCache(string cacheFileName, string filePath, out float aspectRatio)
		{
			return null;
		}
	}
	[Token(Token = "0x200032F")]
	public class InfoCardAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000330")]
		public enum State
		{
			[Token(Token = "0x40012AB")]
			Intro,
			[Token(Token = "0x40012AC")]
			Holding,
			[Token(Token = "0x40012AD")]
			Falling
		}

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int s_NumCards;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Mesh;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMesh m_Text;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_IntroStateDuration;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_FallingStateDistance;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_IntroPopAmount;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 m_IntroPopVector;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_HoldingTranslatePercent;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_FallAcceleration;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FallRotationAcceleration;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_FallTranslateAcceleration;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_FallScaleDistance;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip[] m_FallSounds;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_FallVolume;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_ControllerInteractDistance;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_FaceInteractDistance;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_ControllerInteractDecay;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_FaceInteractDecay;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_InteractScalar;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private State m_CurrentState;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_StateTimer;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_HoldingStateDuration;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_IntroPopVectorTransformed;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_FallVelocity;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_FallStartY;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_FallRotationAxis;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_FallRotationVelocity;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_FallTranslateDirection;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_FallTranslateVelocity;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 m_FallForces;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 m_FaceForces;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1ABCFA4", Offset = "0x1ABCFA4", VA = "0x1ABCFA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1ABCFF4", Offset = "0x1ABCFF4", VA = "0x1ABCFF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1ABD044", Offset = "0x1ABD044", VA = "0x1ABD044")]
		public void Init(string sText, float fPopScalar = 1f)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1ABD398", Offset = "0x1ABD398", VA = "0x1ABD398")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1ABDAC4", Offset = "0x1ABDAC4", VA = "0x1ABDAC4")]
		private Vector3? GetControllerInteractionForce()
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1ABD92C", Offset = "0x1ABD92C", VA = "0x1ABD92C")]
		private void UpdateFaceForces()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1ABE140", Offset = "0x1ABE140", VA = "0x1ABE140")]
		private Vector3? GetFaceInteractionForce()
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1ABD69C", Offset = "0x1ABD69C", VA = "0x1ABD69C")]
		private void UpdateIntroAnimation()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1ABD9C4", Offset = "0x1ABD9C4", VA = "0x1ABD9C4")]
		private void UpdateHoldingAnimation()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1ABDE10", Offset = "0x1ABDE10", VA = "0x1ABDE10")]
		private void UpdateFallingAnimation()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1ABD354", Offset = "0x1ABD354", VA = "0x1ABD354")]
		private void UpdateScale(float fScale)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1ABE310", Offset = "0x1ABE310", VA = "0x1ABE310")]
		public InfoCardAnimation()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class InitializeStencilUniforms : MonoBehaviour
	{
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1ABE338", Offset = "0x1ABE338", VA = "0x1ABE338")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1ABE410", Offset = "0x1ABE410", VA = "0x1ABE410")]
		public InitializeStencilUniforms()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class AnimateOculusTouchSteam : MonoBehaviour
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ControllerGeometry m_geometry;

		[Token(Token = "0x1700031F")]
		public ControllerInfo Controller
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x1ABE418", Offset = "0x1ABE418", VA = "0x1ABE418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1ABE4BC", Offset = "0x1ABE4BC", VA = "0x1ABE4BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1ABE620", Offset = "0x1ABE620", VA = "0x1ABE620")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1ABE830", Offset = "0x1ABE830", VA = "0x1ABE830")]
		public AnimateOculusTouchSteam()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class BaseControllerBehavior : MonoBehaviour
	{
		[Token(Token = "0x2000334")]
		public enum GripState
		{
			[Token(Token = "0x40012BA")]
			Standard,
			[Token(Token = "0x40012BB")]
			ReadyToGrip,
			[Token(Token = "0x40012BC")]
			Gripped
		}

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputManager.ControllerName m_ControllerName;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerGeometry m_ControllerGeometryPrefab;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[FormerlySerializedAs("m_Offset")]
		[SerializeField]
		private Vector3 m_GeometryOffset;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[FormerlySerializedAs("m_Rotation")]
		private Quaternion m_GeometryRotation;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_Tint;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_BaseIntensity;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_GlowIntensity;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private GripState m_CurrentGripState;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ControllerGeometry m_ControllerGeometry;

		[Token(Token = "0x17000320")]
		public InputManager.ControllerName ControllerName
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x1ABE838", Offset = "0x1ABE838", VA = "0x1ABE838")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x17000321")]
		private GameObject TransformVisuals
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x1ABE840", Offset = "0x1ABE840", VA = "0x1ABE840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		public ControllerGeometry ControllerGeometry
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x1ABE864", Offset = "0x1ABE864", VA = "0x1ABE864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public ControllerInfo ControllerInfo
		{
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x1ABEA34", Offset = "0x1ABEA34", VA = "0x1ABEA34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public Transform PointerAttachAnchor
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x1ABECA8", Offset = "0x1ABECA8", VA = "0x1ABECA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public Transform PointerAttachPoint
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x1ABE124", Offset = "0x1ABE124", VA = "0x1ABE124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		public Transform ToolAttachAnchor
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x1ABECC4", Offset = "0x1ABECC4", VA = "0x1ABECC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public Transform PinCushionSpawn
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x1ABECE0", Offset = "0x1ABECE0", VA = "0x1ABECE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1ABE8DC", Offset = "0x1ABE8DC", VA = "0x1ABE8DC")]
		public void InstantiateControllerGeometryFromPrefab(ControllerGeometry prefab)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1ABECFC", Offset = "0x1ABECFC", VA = "0x1ABECFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1ABED04", Offset = "0x1ABED04", VA = "0x1ABED04")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1ABF2C4", Offset = "0x1ABF2C4", VA = "0x1ABF2C4", Slot = "4")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1ABF2C8", Offset = "0x1ABF2C8", VA = "0x1ABF2C8", Slot = "5")]
		public virtual void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x1ABF2CC", Offset = "0x1ABF2CC", VA = "0x1ABF2CC", Slot = "6")]
		public virtual void DisplayControllerSwapAnimation()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1ABF4F0", Offset = "0x1ABF4F0", VA = "0x1ABF4F0")]
		public void BuzzAndGlow(float buzzLength, int numPulses, float interval)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x1ABF74C", Offset = "0x1ABF74C", VA = "0x1ABF74C")]
		private static void SwapPoses(Transform a, Transform b)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1ABEAC4", Offset = "0x1ABEAC4", VA = "0x1ABEAC4")]
		private void SetGeometry(ControllerGeometry geom)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1ABF968", Offset = "0x1ABF968", VA = "0x1ABF968")]
		public static void SwapBehaviors(BaseControllerBehavior a, BaseControllerBehavior b)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1ABF9DC", Offset = "0x1ABF9DC", VA = "0x1ABF9DC")]
		public void SetTouchLocatorActive(bool active)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1ABFA90", Offset = "0x1ABFA90", VA = "0x1ABFA90")]
		public void SetTouchLocatorPosition(Vector2 loc)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1ABFC7C", Offset = "0x1ABFC7C", VA = "0x1ABFC7C")]
		public void SetTint(Color rTintColor, float fBaseIntensity, float fGlowIntensity)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1ABF1A0", Offset = "0x1ABF1A0", VA = "0x1ABF1A0")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1ABFF20", Offset = "0x1ABFF20", VA = "0x1ABFF20")]
		public void EnableTransformVisuals(bool bEnable, float fIntensity)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1AC0010", Offset = "0x1AC0010", VA = "0x1AC0010")]
		public void SetGripState(GripState state)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1AC0400", Offset = "0x1AC0400", VA = "0x1AC0400")]
		public BaseControllerBehavior()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class ControllerActivationEffectScript : MonoBehaviour
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Time;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Duration;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_Renderer;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1AC0458", Offset = "0x1AC0458", VA = "0x1AC0458")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1AC04A8", Offset = "0x1AC04A8", VA = "0x1AC04A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1AC05CC", Offset = "0x1AC05CC", VA = "0x1AC05CC")]
		public ControllerActivationEffectScript()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ControllerBehaviorBrush : BaseControllerBehavior
	{
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x1AC05D4", Offset = "0x1AC05D4", VA = "0x1AC05D4")]
		public void EnablePointAtPanelsHintObject(bool bEnable)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1AC068C", Offset = "0x1AC068C", VA = "0x1AC068C", Slot = "5")]
		public override void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x1AC06B8", Offset = "0x1AC06B8", VA = "0x1AC06B8")]
		public ControllerBehaviorBrush()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class ControllerBehaviorWand : BaseControllerBehavior
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_QuickLoadHintRequested;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_QuickLoadHintFirstAppearance;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1AC06BC", Offset = "0x1AC06BC", VA = "0x1AC06BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x1AC06C4", Offset = "0x1AC06C4", VA = "0x1AC06C4")]
		public void EnableQuickLoadHintObject(bool bEnable)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1AC06D8", Offset = "0x1AC06D8", VA = "0x1AC06D8")]
		public void EnableSketchbookPanelActivateHint(bool bEnable)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1AC0704", Offset = "0x1AC0704", VA = "0x1AC0704", Slot = "4")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1AC0938", Offset = "0x1AC0938", VA = "0x1AC0938", Slot = "5")]
		public override void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1AC0964", Offset = "0x1AC0964", VA = "0x1AC0964")]
		public ControllerBehaviorWand()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class ControllerConsoleScript : MonoBehaviour
	{
		[Token(Token = "0x2000339")]
		public class InfoLine
		{
			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Line;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMesh m_TextMesh;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer m_Renderer;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_LineWidth;

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1AC0D24", Offset = "0x1AC0D24", VA = "0x1AC0D24")]
			public InfoLine()
			{
			}
		}

		[Token(Token = "0x200033A")]
		private enum State
		{
			[Token(Token = "0x40012EA")]
			Disabled,
			[Token(Token = "0x40012EB")]
			DelayBeforeActivate,
			[Token(Token = "0x40012EC")]
			Activating,
			[Token(Token = "0x40012ED")]
			Active,
			[Token(Token = "0x40012EE")]
			Disabling
		}

		[Token(Token = "0x40012C2")]
		private const int kSplitSearchMagnitude = 10;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerConsoleScript m_Instance;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_RenderablesParent;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_DynamicBackground;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Title;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Clock;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_Notification;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_NotificationAnchor;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_AutosaveIcon;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_NotificationDisplayDuration;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector2 m_NotificationShrinkRange;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_InfoLinePrefab;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 m_BaseLineLocalPositionOffset;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_LineSpacing;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int m_NumLines;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_MinBackgroundWidth;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InputManager.ControllerName m_AttachedControllerName;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color m_StandardTextColor;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_NotificationTextColor;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_NotificationHapticPulse;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_NotificationHapticTimeOffset;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_MaxLineWidth;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Renderer[] m_MeshRenderers;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NotificationDisplayTimer;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_LastLoggedLine;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InfoLine[] m_InfoLines;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_LineOperateIndex;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_ActivationAngle_Default;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_ActivationAngle_LogitechPen;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_ActivateAngle;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_ActivateSpeed;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_ActivateTimer;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_ActivateDelayDuration;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_ActivateDelayTimer;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private State m_CurrentState;

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1AC0968", Offset = "0x1AC0968", VA = "0x1AC0968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1AC0FF4", Offset = "0x1AC0FF4", VA = "0x1AC0FF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1AC1098", Offset = "0x1AC1098", VA = "0x1AC1098")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1AC0F14", Offset = "0x1AC0F14", VA = "0x1AC0F14")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1AC1660", Offset = "0x1AC1660", VA = "0x1AC1660")]
		private void UpdateMeterScale(float fRatio)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1AC16A0", Offset = "0x1AC16A0", VA = "0x1AC16A0")]
		public void AddNewLine(string sText, bool bNotify = false, bool skipLog = false)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1AC1808", Offset = "0x1AC1808", VA = "0x1AC1808")]
		private void AddNewLineImpl(string sText, bool bNotify = false)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1AC0D2C", Offset = "0x1AC0D2C", VA = "0x1AC0D2C")]
		private void UpdateBackgroundWidth()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1AC1B98", Offset = "0x1AC1B98", VA = "0x1AC1B98")]
		private void AttachToBrush()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1AC1C00", Offset = "0x1AC1C00", VA = "0x1AC1C00")]
		public void AttachToController(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1AC1D4C", Offset = "0x1AC1D4C", VA = "0x1AC1D4C")]
		public ControllerConsoleScript()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class ControllerGeometry : MonoBehaviour
	{
		[Token(Token = "0x200033C")]
		private class PopupAnimState
		{
			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly VrInput input;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Transform anchor;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly float initialY;

			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public readonly float initialScale;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float current;

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x1AC21DC", Offset = "0x1AC21DC", VA = "0x1AC21DC")]
			public PopupAnimState(Transform anchor, VrInput input)
			{
			}
		}

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerStyle m_ControllerStyle;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_PointerAttachAnchor;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_PointerAttachPoint;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_ToolAttachAnchor;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_ToolAttachPoint;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_PinCushionSpawn;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_MainAxisAttachPoint;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_CameraAttachPoint;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_ConsoleAttachPoint;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_BaseAttachPoint;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_GripAttachPoint;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_DropperDescAttachPoint;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_MainMesh;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Renderer m_TriggerMesh;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer[] m_OtherMeshes;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Renderer m_LeftGripMesh;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_RightGripMesh;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform m_PadTouchLocator;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_TriggerAnchor;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HintObjectScript m_PinHint;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private HintObjectScript m_UnpinHint;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private HintObjectScript m_PreviewKnotHint;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_TransformVisualsRenderer;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject m_ActivateEffectPrefab;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject m_HighlightEffectPrefab;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject m_XRayVisuals;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[Tooltip("Range of rotation for TriggerAnchor, in degrees. Rotation is about the right axis")]
		[Header("Controller Animations")]
		private Vector2 m_TriggerRotation;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_TouchLocatorTranslateScale;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private float m_TouchLocatorTranslateClamp;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_GripReadyMaterial;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Material m_GrippedMaterial;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector3 m_LeftGripPopInVector;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private Vector3 m_LeftGripPopOutVector;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Header("Pad Controls")]
		[SerializeField]
		private float m_PadPopUpAmount;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float m_PadScaleAmount;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float m_PadSpeed;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Header("Haptics")]
		[SerializeField]
		private float m_HapticPulseOn;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float m_HapticPulseOff;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Header("Vive Pad")]
		[SerializeField]
		private Transform m_PadAnchor;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_PadMesh;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[Header("Oculus Touch Buttons")]
		private Transform m_Joystick;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Renderer m_JoystickMesh;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Renderer m_JoystickPad;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Renderer m_Button01Mesh;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Renderer m_Button02Mesh;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Header("Wmr Button")]
		[SerializeField]
		private Renderer m_PinCushion;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Header("Wand objects")]
		[SerializeField]
		private HintObjectScript m_QuickLoadHintObject;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private HintObjectScript m_SwipeHint;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private HintObjectScript m_MenuPanelHintObject;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[Header("Brush objects")]
		[SerializeField]
		private LineRenderer m_GuideLine;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private HintObjectScript m_PaintHintObject;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private HintObjectScript m_BrushSizeHintObject;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private HintObjectScript m_PointAtPanelsHintObject;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private HintObjectScript m_ShareSketchHintObject;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private HintObjectScript m_FloatingPanelHintObject;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private HintObjectScript m_AdvancedModeHintObject;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private HintObjectScript m_SelectionHint;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private GameObject m_SelectionHintButton;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private HintObjectScript m_DeselectionHint;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GameObject m_DeselectionHintButton;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private HintObjectScript m_DuplicateHint;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private HintObjectScript m_SaveIconHint;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private PopupAnimState m_JoyAnimState;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private PopupAnimState m_PadAnimState;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int m_LastPadButton;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Material m_BaseGrippedMaterial;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float m_LogitechPenHandednessHysteresis;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private bool m_LogitechPenHandedness;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private BaseControllerBehavior m_Behavior;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private InputManager.ControllerName m_ControllerName;

		[Token(Token = "0x17000328")]
		public Vector2 TriggerRotation
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x1AC1D70", Offset = "0x1AC1D70", VA = "0x1AC1D70")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000329")]
		public float TouchLocatorTranslateScale
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x1AC1D78", Offset = "0x1AC1D78", VA = "0x1AC1D78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032A")]
		public float TouchLocatorTranslateClamp
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x1AC1D80", Offset = "0x1AC1D80", VA = "0x1AC1D80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032B")]
		public Material GripReadyMaterial
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x1AC1D88", Offset = "0x1AC1D88", VA = "0x1AC1D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public Material GrippedMaterial
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x1AC1D90", Offset = "0x1AC1D90", VA = "0x1AC1D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public Material BaseGrippedMaterial
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x1AC1D98", Offset = "0x1AC1D98", VA = "0x1AC1D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		public Vector3 LeftGripPopInVector
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x1AC1DA0", Offset = "0x1AC1DA0", VA = "0x1AC1DA0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032F")]
		public Vector3 LeftGripPopOutVector
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x1AC1DB0", Offset = "0x1AC1DB0", VA = "0x1AC1DB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000330")]
		public Transform PointerAttachAnchor
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x1AC1DC0", Offset = "0x1AC1DC0", VA = "0x1AC1DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public Transform PointerAttachPoint
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x1AC1DC8", Offset = "0x1AC1DC8", VA = "0x1AC1DC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public Transform ToolAttachAnchor
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x1AC1DD0", Offset = "0x1AC1DD0", VA = "0x1AC1DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public Transform ToolAttachPoint
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x1AC1DD8", Offset = "0x1AC1DD8", VA = "0x1AC1DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		public Transform PinCushionSpawn
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x1AC1DE0", Offset = "0x1AC1DE0", VA = "0x1AC1DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public Transform MainAxisAttachPoint
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x1AC1DE8", Offset = "0x1AC1DE8", VA = "0x1AC1DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public Transform CameraAttachPoint
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x1AC1DF0", Offset = "0x1AC1DF0", VA = "0x1AC1DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public Transform ConsoleAttachPoint
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x1AC1DF8", Offset = "0x1AC1DF8", VA = "0x1AC1DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public Transform BaseAttachPoint
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1AC1E00", Offset = "0x1AC1E00", VA = "0x1AC1E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public Transform GripAttachPoint
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x1AC1E08", Offset = "0x1AC1E08", VA = "0x1AC1E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public Transform DropperDescAttachPoint
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x1AC1E10", Offset = "0x1AC1E10", VA = "0x1AC1E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public Renderer MainMesh
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x1AC1E18", Offset = "0x1AC1E18", VA = "0x1AC1E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public Renderer TriggerMesh
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x1AC1E20", Offset = "0x1AC1E20", VA = "0x1AC1E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public Renderer[] OtherMeshes
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x1AC1E28", Offset = "0x1AC1E28", VA = "0x1AC1E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public Renderer LeftGripMesh
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1AC1E30", Offset = "0x1AC1E30", VA = "0x1AC1E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public Renderer RightGripMesh
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x1AC1E38", Offset = "0x1AC1E38", VA = "0x1AC1E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public Transform PadTouchLocator
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x1AC1E40", Offset = "0x1AC1E40", VA = "0x1AC1E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		public Transform TriggerAnchor
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1AC1E48", Offset = "0x1AC1E48", VA = "0x1AC1E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public HintObjectScript PinHint
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1AC1E50", Offset = "0x1AC1E50", VA = "0x1AC1E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public HintObjectScript UnpinHint
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x1AC1E58", Offset = "0x1AC1E58", VA = "0x1AC1E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public HintObjectScript PreviewKnotHint
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x1AC1E60", Offset = "0x1AC1E60", VA = "0x1AC1E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public HintObjectScript SelectionHint
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x1AC1E68", Offset = "0x1AC1E68", VA = "0x1AC1E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public GameObject SelectionHintButton
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x1AC1E70", Offset = "0x1AC1E70", VA = "0x1AC1E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public HintObjectScript DeselectionHint
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x1AC1E78", Offset = "0x1AC1E78", VA = "0x1AC1E78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public GameObject DeselectionHintButton
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x1AC1E80", Offset = "0x1AC1E80", VA = "0x1AC1E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		public HintObjectScript DuplicateHint
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x1AC1E88", Offset = "0x1AC1E88", VA = "0x1AC1E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public HintObjectScript SaveIconHint
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x1AC1E90", Offset = "0x1AC1E90", VA = "0x1AC1E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public Renderer TransformVisualsRenderer
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x1AC1E98", Offset = "0x1AC1E98", VA = "0x1AC1E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public GameObject ActivateEffectPrefab
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x1AC1EA0", Offset = "0x1AC1EA0", VA = "0x1AC1EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public GameObject HighlightEffectPrefab
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x1AC1EA8", Offset = "0x1AC1EA8", VA = "0x1AC1EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		public GameObject XRayVisuals
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x1AC1EB0", Offset = "0x1AC1EB0", VA = "0x1AC1EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public Transform PadAnchor
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x1AC1EB8", Offset = "0x1AC1EB8", VA = "0x1AC1EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public Renderer PadMesh
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1AC1EC0", Offset = "0x1AC1EC0", VA = "0x1AC1EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		public Transform Joystick
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x1AC1EC8", Offset = "0x1AC1EC8", VA = "0x1AC1EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public Renderer JoystickMesh
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1AC1ED0", Offset = "0x1AC1ED0", VA = "0x1AC1ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public Renderer JoystickPad
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x1AC1ED8", Offset = "0x1AC1ED8", VA = "0x1AC1ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public Renderer Button01Mesh
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1AC1EE0", Offset = "0x1AC1EE0", VA = "0x1AC1EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public Renderer Button02Mesh
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x1AC1EE8", Offset = "0x1AC1EE8", VA = "0x1AC1EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public Renderer PinCushionMesh
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1AC1EF0", Offset = "0x1AC1EF0", VA = "0x1AC1EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public HintObjectScript QuickLoadHintObject
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x1AC1EF8", Offset = "0x1AC1EF8", VA = "0x1AC1EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public HintObjectScript SwipeHintObject
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x1AC1F00", Offset = "0x1AC1F00", VA = "0x1AC1F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public HintObjectScript MenuPanelHintObject
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x1AC1F08", Offset = "0x1AC1F08", VA = "0x1AC1F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public LineRenderer GuideLine
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x1AC1F10", Offset = "0x1AC1F10", VA = "0x1AC1F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public HintObjectScript PaintHintObject
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x1AC1F18", Offset = "0x1AC1F18", VA = "0x1AC1F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public HintObjectScript BrushSizeHintObject
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x1AC1F20", Offset = "0x1AC1F20", VA = "0x1AC1F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public HintObjectScript PointAtPanelsHintObject
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x1AC1F28", Offset = "0x1AC1F28", VA = "0x1AC1F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		public HintObjectScript ShareSketchHintObject
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x1AC1F30", Offset = "0x1AC1F30", VA = "0x1AC1F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		public HintObjectScript FloatingPanelHintObject
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x1AC1F38", Offset = "0x1AC1F38", VA = "0x1AC1F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public HintObjectScript AdvancedModeHintObject
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x1AC1F40", Offset = "0x1AC1F40", VA = "0x1AC1F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public bool PadEnabled
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x1AC1F48", Offset = "0x1AC1F48", VA = "0x1AC1F48")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x1AC1F50", Offset = "0x1AC1F50", VA = "0x1AC1F50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public BaseControllerBehavior Behavior
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x1AC1F5C", Offset = "0x1AC1F5C", VA = "0x1AC1F5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public InputManager.ControllerName ControllerName
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x1AC1F64", Offset = "0x1AC1F64", VA = "0x1AC1F64")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x17000364")]
		public ControllerStyle Style
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x1AC1F6C", Offset = "0x1AC1F6C", VA = "0x1AC1F6C")]
			get
			{
				return default(ControllerStyle);
			}
		}

		[Token(Token = "0x17000365")]
		public ControllerStyle TempWritableStyle
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x1AC1F74", Offset = "0x1AC1F74", VA = "0x1AC1F74")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public ControllerInfo ControllerInfo
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x1ABE4A4", Offset = "0x1ABE4A4", VA = "0x1ABE4A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private bool EmptyGeometry
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x1AC20E4", Offset = "0x1AC20E4", VA = "0x1AC20E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000368")]
		private ControllerMaterialCatalog Materials
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x1AC2290", Offset = "0x1AC2290", VA = "0x1AC2290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1AC20F8", Offset = "0x1AC20F8", VA = "0x1AC20F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1AC22D8", Offset = "0x1AC22D8", VA = "0x1AC22D8")]
		private float GetPadRatio(VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1AC2354", Offset = "0x1AC2354", VA = "0x1AC2354")]
		private void UpdatePadAnimation(PopupAnimState state, Material active)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1AC262C", Offset = "0x1AC262C", VA = "0x1AC262C")]
		private void UpdateLogitechPadHandedness(Transform padXf)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1AC27A8", Offset = "0x1AC27A8", VA = "0x1AC27A8")]
		private Material SelectPadTouched(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1AC280C", Offset = "0x1AC280C", VA = "0x1AC280C")]
		private Material SelectThumbStickTouched(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1AC2870", Offset = "0x1AC2870", VA = "0x1AC2870")]
		private Material SelectBasedOn(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x600152D")]
		private T SelectIfTouched<T>(VrInput input, T active, T inactive)
		{
			return (T)null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1AC29B8", Offset = "0x1AC29B8", VA = "0x1AC29B8")]
		private void SetColor(Renderer obj, VrInput input, string colorName, Color activeColor, Color inactiveColor)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1AC2B08", Offset = "0x1AC2B08", VA = "0x1AC2B08")]
		private void RefreshMaterialTint(Color tintColor)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1AC2CDC", Offset = "0x1AC2CDC", VA = "0x1AC2CDC")]
		private void UpdateButtonColor()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1ABF864", Offset = "0x1ABF864", VA = "0x1ABF864")]
		public void OnBehaviorChanged()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1ABF1C4", Offset = "0x1ABF1C4", VA = "0x1ABF1C4")]
		public void OnMaterialsAssigned(Color tintColor)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1AC2F90", Offset = "0x1AC2F90", VA = "0x1AC2F90")]
		public void ShowTutorialMode()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1AC3304", Offset = "0x1AC3304", VA = "0x1AC3304")]
		public void TogglePadSnapHint(bool snappingOn, bool enabled)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1AC3404", Offset = "0x1AC3404", VA = "0x1AC3404")]
		public void ToggleCancelOnly(bool enabled, bool enableFillTimer = true)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1AC3570", Offset = "0x1AC3570", VA = "0x1AC3570")]
		public void TogglePadLazyInputHint(bool lazyInput, bool altMode, bool enabled)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1AC3680", Offset = "0x1AC3680", VA = "0x1AC3680")]
		public void TogglePadRevolverHint(bool revolverActive, bool enabled)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1AC3780", Offset = "0x1AC3780", VA = "0x1AC3780")]
		public void ShowWorldTransformReset()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1AC3924", Offset = "0x1AC3924", VA = "0x1AC3924")]
		public void ShowBrushSizer()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1AC3BCC", Offset = "0x1AC3BCC", VA = "0x1AC3BCC")]
		public void ShowSelectionToggle()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1AC3EFC", Offset = "0x1AC3EFC", VA = "0x1AC3EFC")]
		public void ShowPinToggle(bool isPinning)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1AC4284", Offset = "0x1AC4284", VA = "0x1AC4284")]
		public void ShowDuplicateOption()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1AC43F0", Offset = "0x1AC43F0", VA = "0x1AC43F0")]
		public void ShowSelectionOptions()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1AC44E0", Offset = "0x1AC44E0", VA = "0x1AC44E0")]
		public void ToggleTrash(bool enabled)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1AC4668", Offset = "0x1AC4668", VA = "0x1AC4668")]
		public void ShowMulticamSwipe(bool showHint)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1AC4944", Offset = "0x1AC4944", VA = "0x1AC4944")]
		public void ShowCapturingVideo()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1AC4A34", Offset = "0x1AC4A34", VA = "0x1AC4A34")]
		public void ShowShareVideo()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1AC4C58", Offset = "0x1AC4C58", VA = "0x1AC4C58")]
		public void ShowShareOrCancel()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1AC51D8", Offset = "0x1AC51D8", VA = "0x1AC51D8")]
		public void ShowRotatePanels()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1AC5320", Offset = "0x1AC5320", VA = "0x1AC5320")]
		public void ShowUndoRedo(bool canUndo, bool canRedo)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1AC5590", Offset = "0x1AC5590", VA = "0x1AC5590")]
		public void ShowPinCushion()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1AC567C", Offset = "0x1AC567C", VA = "0x1AC567C")]
		public void ShowBrushPage(bool active)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1AC5920", Offset = "0x1AC5920", VA = "0x1AC5920")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1AC5C04", Offset = "0x1AC5C04", VA = "0x1AC5C04")]
		public ControllerGeometry()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class ControllerGrabVisuals : MonoBehaviour
	{
		[Token(Token = "0x200033E")]
		public enum VisualState
		{
			[Token(Token = "0x4001357")]
			Off,
			[Token(Token = "0x4001358")]
			WorldWandGrip,
			[Token(Token = "0x4001359")]
			WorldBrushGrip,
			[Token(Token = "0x400135A")]
			WorldDoubleGrip,
			[Token(Token = "0x400135B")]
			WidgetWandGrip,
			[Token(Token = "0x400135C")]
			WidgetBrushGrip
		}

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Line;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_LineOutline;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_LineHorizontalOffset;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_LineOutlineWidth;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_LineBaseWidth;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_HintIntensity;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_DrawInDuration;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_AnimalRulerAnchor;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer m_AnimalRuler;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_AnimalRulerUZeroPoint;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_AnimalRulerUExtent;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector2 m_AnimalRulerSquishRange;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2 m_AnimalRulerShrinkRange;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_AnimalRulerScaleSpeed;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_AnimalRulerTextureRatio;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer m_LineRenderer;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer m_LineOutlineRenderer;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer[] m_AnimalRulerRenderers;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VisualState m_CurrentVisualState;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private VisualState m_DesiredVisualState;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_Intensity;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_LineDrawInTime;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_LineT;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_AnimalRulerRequestVisible;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_HeldWidget;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_WandInWidgetRange;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_BrushInWidgetRange;

		[Token(Token = "0x17000369")]
		public bool WandInWidgetRange
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x1AC5C28", Offset = "0x1AC5C28", VA = "0x1AC5C28")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool BrushInWidgetRange
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x1AC5CF4", Offset = "0x1AC5CF4", VA = "0x1AC5CF4")]
			set
			{
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1AC5DBC", Offset = "0x1AC5DBC", VA = "0x1AC5DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1AC5F80", Offset = "0x1AC5F80", VA = "0x1AC5F80")]
		public void SetDesiredVisualState(VisualState state)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1AC5F88", Offset = "0x1AC5F88", VA = "0x1AC5F88")]
		public void SetHeldWidget(Transform xfWidget)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1AC5F90", Offset = "0x1AC5F90", VA = "0x1AC5F90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1AC640C", Offset = "0x1AC640C", VA = "0x1AC640C")]
		private void UpdateLineT()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1AC69B8", Offset = "0x1AC69B8", VA = "0x1AC69B8")]
		private Vector3 GetControllerAttachPos(InputManager.ControllerName controllerName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1AC6494", Offset = "0x1AC6494", VA = "0x1AC6494")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1AC6074", Offset = "0x1AC6074", VA = "0x1AC6074")]
		private void SwitchState()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1AC5C34", Offset = "0x1AC5C34", VA = "0x1AC5C34")]
		private void UpdateWandControllerGripState()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1AC5D00", Offset = "0x1AC5D00", VA = "0x1AC5D00")]
		private void UpdateBrushControllerGripState()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1AC6A68", Offset = "0x1AC6A68", VA = "0x1AC6A68")]
		private void UpdateAnimalRuler()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1AC5F08", Offset = "0x1AC5F08", VA = "0x1AC5F08")]
		private void SetAnimalRulerScale(float fScale)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1AC6FA4", Offset = "0x1AC6FA4", VA = "0x1AC6FA4")]
		public ControllerGrabVisuals()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public abstract class ControllerInfo
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_Position;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 m_Velocity;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Acceleration;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_WasTracked;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_TimeSinceHapticTrigger;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_HapticPulseCount;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_HapticTimer;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_HapticInterval;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_HapticPulseLength;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<VrInput, Vector2> m_InputHoldTimers;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VrInput? m_LastHeldInput;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Transform m_Transform;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly BaseControllerBehavior m_Behavior;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ControllerTutorialScript m_Tutorial;

		[Token(Token = "0x1700036B")]
		public BaseControllerBehavior Behavior
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x1AC7040", Offset = "0x1AC7040", VA = "0x1AC7040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public Transform Transform
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x1AC7048", Offset = "0x1AC7048", VA = "0x1AC7048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public ControllerGeometry Geometry
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x1AC6A50", Offset = "0x1AC6A50", VA = "0x1AC6A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public ControllerTutorialScript Tutorial
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x1AC7050", Offset = "0x1AC7050", VA = "0x1AC7050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public abstract bool IsTrackedObjectValid
		{
			[Token(Token = "0x600155E")]
			get;
			[Token(Token = "0x600155F")]
			set;
		}

		[Token(Token = "0x17000370")]
		public VrInput? LastHeldInput
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x1AC7058", Offset = "0x1AC7058", VA = "0x1AC7058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x1AC7060", Offset = "0x1AC7060", VA = "0x1AC7060")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		private float ButtonTimerThreshold
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x1AC7068", Offset = "0x1AC7068", VA = "0x1AC7068")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1AC6FD4", Offset = "0x1AC6FD4", VA = "0x1AC6FD4")]
		protected static bool IsInPosition(Vector2 padOrStickPos, VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1AC70CC", Offset = "0x1AC70CC", VA = "0x1AC70CC")]
		public ControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1AC720C", Offset = "0x1AC720C", VA = "0x1AC720C")]
		public void ShowController(bool bShow)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1AC72B8", Offset = "0x1AC72B8", VA = "0x1AC72B8", Slot = "6")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x1AC732C", Offset = "0x1AC732C", VA = "0x1AC732C", Slot = "7")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1AC28C0", Offset = "0x1AC28C0", VA = "0x1AC28C0")]
		public bool GetCommand(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1AC73A8", Offset = "0x1AC73A8", VA = "0x1AC73A8")]
		public bool GetCommandDown(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1AC749C", Offset = "0x1AC749C", VA = "0x1AC749C")]
		public bool GetCommandUp(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1AC7590", Offset = "0x1AC7590", VA = "0x1AC7590")]
		public VrInput? GetCommandHoldInput(InputManager.SketchCommands rCommand)
		{
			return null;
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1AC7634", Offset = "0x1AC7634", VA = "0x1AC7634")]
		public bool GetCommandHeld(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1AC791C", Offset = "0x1AC791C", VA = "0x1AC791C")]
		public VrInput? GetLastHeldInput()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1AC7A08", Offset = "0x1AC7A08", VA = "0x1AC7A08")]
		public float GetCommandHoldProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1AC76C4", Offset = "0x1AC76C4", VA = "0x1AC76C4")]
		private bool UpdateCommandHold(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1AC7358", Offset = "0x1AC7358", VA = "0x1AC7358")]
		public bool IsTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1AC7488", Offset = "0x1AC7488", VA = "0x1AC7488")]
		public bool IsTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1AC757C", Offset = "0x1AC757C", VA = "0x1AC757C")]
		public bool IsTriggerUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1AC736C", Offset = "0x1AC736C", VA = "0x1AC736C")]
		public bool GetPadTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1AC7380", Offset = "0x1AC7380", VA = "0x1AC7380")]
		public bool GetThumbStickTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1AC7394", Offset = "0x1AC7394", VA = "0x1AC7394")]
		public bool GetControllerGrip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		public abstract float GetTriggerRatio();

		[Token(Token = "0x6001576")]
		public abstract Vector2 GetPadValue();

		[Token(Token = "0x6001577")]
		public abstract Vector2 GetThumbStickValue();

		[Token(Token = "0x6001578")]
		public abstract Vector2 GetPadValueDelta();

		[Token(Token = "0x6001579")]
		public abstract float GetGripValue();

		[Token(Token = "0x600157A")]
		public abstract float GetTriggerValue();

		[Token(Token = "0x600157B")]
		public abstract float GetScrollXDelta();

		[Token(Token = "0x600157C")]
		public abstract float GetScrollYDelta();

		[Token(Token = "0x600157D")]
		public abstract bool GetVrInput(VrInput input);

		[Token(Token = "0x600157E")]
		public abstract bool GetVrInputDown(VrInput input);

		[Token(Token = "0x600157F")]
		public abstract bool GetVrInputUp(VrInput input);

		[Token(Token = "0x6001580")]
		public abstract bool GetVrInputTouch(VrInput input);

		[Token(Token = "0x6001581")]
		public abstract void TriggerControllerHaptics(float seconds);
	}
	[Serializable]
	[Token(Token = "0x2000340")]
	[UsedImplicitly(ImplicitUseTargetFlags.Members)]
	public class ControllerMaterialCatalog : MonoBehaviour
	{
		[Token(Token = "0x2000341")]
		[AttributeUsage(AttributeTargets.Property)]
		public class CatalogMaterialAttribute : Attribute
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0x1AC8018", Offset = "0x1AC8018", VA = "0x1AC8018")]
			public CatalogMaterialAttribute()
			{
			}
		}

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerMaterialCatalog m_Instance;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_Standard;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_Blank;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_LazyInputOn;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_LazyInputAltOn;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material m_LazyInputOff;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material m_RevolverRadius;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material m_SnapOn;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Material m_SnapOff;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Material m_PanelsRotate;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Material m_UndoRedo;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Material m_UndoRedo_Undo;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material m_UndoRedo_Redo;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Material m_Undo;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Material m_Redo;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_WorldTransformReset;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Material m_PinCushion;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Material m_Cancel;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Material m_Cancel_Rot180;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Material m_Multicam;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Material m_MulticamActive;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Material m_MulticamSwipeHint;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Material m_TutorialPad;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Material m_YesOrCancel;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Material m_YesOrCancel_Yes;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Material m_YesOrCancel_Cancel;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Material m_YesOrCancel_Rot180;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Material m_YesOrCancel_Yes_Rot180;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Material m_YesOrCancel_Cancel_Rot180;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private Material m_Yes;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Material m_Yes_Rot180;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Material m_ShareYt;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Material m_ShareYtActive;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Material m_ShareYtActive_Rot180;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Material m_Trash;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Material m_BrushPage;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Material m_BrushPageActive;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private Material m_BrushPageActive_LogitechPen;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private Material m_BrushSizer;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private Material m_BrushSizer_LogitechPen;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		private Material m_BrushSizerActive;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private Material m_BrushSizerActive_LogitechPen;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private Material m_ToggleSelectionOn;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private Material m_ToggleSelectionOff;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private Material m_SelectionOptions;

		[Token(Token = "0x17000372")]
		[CatalogMaterial]
		public Material Standard
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x1AC7AD0", Offset = "0x1AC7AD0", VA = "0x1AC7AD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x1AC7AD8", Offset = "0x1AC7AD8", VA = "0x1AC7AD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000373")]
		[CatalogMaterial]
		public Material Blank
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x1AC7AE0", Offset = "0x1AC7AE0", VA = "0x1AC7AE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x1AC7AE8", Offset = "0x1AC7AE8", VA = "0x1AC7AE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000374")]
		[CatalogMaterial]
		public Material LazyInputOn
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x1AC7AF0", Offset = "0x1AC7AF0", VA = "0x1AC7AF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x1AC7AF8", Offset = "0x1AC7AF8", VA = "0x1AC7AF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000375")]
		[CatalogMaterial]
		public Material LazyInputAltOn
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x1AC7B00", Offset = "0x1AC7B00", VA = "0x1AC7B00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x1AC7B08", Offset = "0x1AC7B08", VA = "0x1AC7B08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000376")]
		[CatalogMaterial]
		public Material LazyInputOff
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x1AC7B10", Offset = "0x1AC7B10", VA = "0x1AC7B10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x1AC7B18", Offset = "0x1AC7B18", VA = "0x1AC7B18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000377")]
		[CatalogMaterial]
		public Material RevolverRadius
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x1AC7B20", Offset = "0x1AC7B20", VA = "0x1AC7B20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x1AC7B28", Offset = "0x1AC7B28", VA = "0x1AC7B28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000378")]
		[CatalogMaterial]
		public Material SnapOn
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x1AC7B30", Offset = "0x1AC7B30", VA = "0x1AC7B30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x1AC7B38", Offset = "0x1AC7B38", VA = "0x1AC7B38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000379")]
		[CatalogMaterial]
		public Material SnapOff
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x1AC7B40", Offset = "0x1AC7B40", VA = "0x1AC7B40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x1AC7B48", Offset = "0x1AC7B48", VA = "0x1AC7B48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		[CatalogMaterial]
		public Material PanelsRotate
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1AC7B50", Offset = "0x1AC7B50", VA = "0x1AC7B50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x1AC7B58", Offset = "0x1AC7B58", VA = "0x1AC7B58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		[CatalogMaterial]
		public Material UndoRedo
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x1AC7B60", Offset = "0x1AC7B60", VA = "0x1AC7B60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x1AC7B68", Offset = "0x1AC7B68", VA = "0x1AC7B68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		[CatalogMaterial]
		public Material UndoRedo_Undo
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x1AC7B70", Offset = "0x1AC7B70", VA = "0x1AC7B70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x1AC7B78", Offset = "0x1AC7B78", VA = "0x1AC7B78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		[CatalogMaterial]
		public Material UndoRedo_Redo
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x1AC7B80", Offset = "0x1AC7B80", VA = "0x1AC7B80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x1AC7B88", Offset = "0x1AC7B88", VA = "0x1AC7B88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		[CatalogMaterial]
		public Material Undo
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x1AC7B90", Offset = "0x1AC7B90", VA = "0x1AC7B90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x1AC7B98", Offset = "0x1AC7B98", VA = "0x1AC7B98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		[CatalogMaterial]
		public Material Redo
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x1AC7BA0", Offset = "0x1AC7BA0", VA = "0x1AC7BA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x1AC7BA8", Offset = "0x1AC7BA8", VA = "0x1AC7BA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000380")]
		[CatalogMaterial]
		public Material WorldTransformReset
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x1AC7BB0", Offset = "0x1AC7BB0", VA = "0x1AC7BB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x1AC7BB8", Offset = "0x1AC7BB8", VA = "0x1AC7BB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000381")]
		[CatalogMaterial]
		public Material PinCushion
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1AC7BC0", Offset = "0x1AC7BC0", VA = "0x1AC7BC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x1AC7BC8", Offset = "0x1AC7BC8", VA = "0x1AC7BC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000382")]
		[CatalogMaterial]
		public Material Cancel
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1AC7BD0", Offset = "0x1AC7BD0", VA = "0x1AC7BD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x1AC7BD8", Offset = "0x1AC7BD8", VA = "0x1AC7BD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000383")]
		[CatalogMaterial]
		public Material Cancel_Rot180
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1AC7BE0", Offset = "0x1AC7BE0", VA = "0x1AC7BE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x1AC7BE8", Offset = "0x1AC7BE8", VA = "0x1AC7BE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000384")]
		[CatalogMaterial]
		public Material Multicam
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x1AC7BF0", Offset = "0x1AC7BF0", VA = "0x1AC7BF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1AC7BF8", Offset = "0x1AC7BF8", VA = "0x1AC7BF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000385")]
		[CatalogMaterial]
		public Material MulticamActive
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1AC7C00", Offset = "0x1AC7C00", VA = "0x1AC7C00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x1AC7C08", Offset = "0x1AC7C08", VA = "0x1AC7C08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000386")]
		[CatalogMaterial]
		public Material MulticamSwipeHint
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1AC7C10", Offset = "0x1AC7C10", VA = "0x1AC7C10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1AC7C18", Offset = "0x1AC7C18", VA = "0x1AC7C18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000387")]
		[CatalogMaterial]
		public Material TutorialPad
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x1AC7C20", Offset = "0x1AC7C20", VA = "0x1AC7C20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x1AC7C28", Offset = "0x1AC7C28", VA = "0x1AC7C28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000388")]
		[CatalogMaterial]
		public Material YesOrCancel
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1AC7C30", Offset = "0x1AC7C30", VA = "0x1AC7C30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1AC7C38", Offset = "0x1AC7C38", VA = "0x1AC7C38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000389")]
		[CatalogMaterial]
		public Material YesOrCancel_Yes
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1AC7C40", Offset = "0x1AC7C40", VA = "0x1AC7C40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x1AC7C48", Offset = "0x1AC7C48", VA = "0x1AC7C48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		[CatalogMaterial]
		public Material YesOrCancel_Cancel
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1AC7C50", Offset = "0x1AC7C50", VA = "0x1AC7C50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1AC7C58", Offset = "0x1AC7C58", VA = "0x1AC7C58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		[CatalogMaterial]
		public Material YesOrCancel_Rot180
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x1AC7C60", Offset = "0x1AC7C60", VA = "0x1AC7C60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x1AC7C68", Offset = "0x1AC7C68", VA = "0x1AC7C68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		[CatalogMaterial]
		public Material YesOrCancel_Yes_Rot180
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1AC7C70", Offset = "0x1AC7C70", VA = "0x1AC7C70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x1AC7C78", Offset = "0x1AC7C78", VA = "0x1AC7C78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		[CatalogMaterial]
		public Material YesOrCancel_Cancel_Rot180
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1AC7C80", Offset = "0x1AC7C80", VA = "0x1AC7C80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x1AC7C88", Offset = "0x1AC7C88", VA = "0x1AC7C88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		[CatalogMaterial]
		public Material Yes
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x1AC7C90", Offset = "0x1AC7C90", VA = "0x1AC7C90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x1AC7C98", Offset = "0x1AC7C98", VA = "0x1AC7C98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		[CatalogMaterial]
		public Material Yes_Rot180
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x1AC7CA0", Offset = "0x1AC7CA0", VA = "0x1AC7CA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x1AC7CA8", Offset = "0x1AC7CA8", VA = "0x1AC7CA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000390")]
		[CatalogMaterial]
		public Material ShareYt
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x1AC7CB0", Offset = "0x1AC7CB0", VA = "0x1AC7CB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x1AC7CB8", Offset = "0x1AC7CB8", VA = "0x1AC7CB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000391")]
		[CatalogMaterial]
		public Material ShareYtActive
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x1AC7CC0", Offset = "0x1AC7CC0", VA = "0x1AC7CC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x1AC7CC8", Offset = "0x1AC7CC8", VA = "0x1AC7CC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000392")]
		[CatalogMaterial]
		public Material ShareYtActive_Rot180
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x1AC7CD0", Offset = "0x1AC7CD0", VA = "0x1AC7CD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x1AC7CD8", Offset = "0x1AC7CD8", VA = "0x1AC7CD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000393")]
		[CatalogMaterial]
		public Material Trash
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x1AC7CE0", Offset = "0x1AC7CE0", VA = "0x1AC7CE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x1AC7CE8", Offset = "0x1AC7CE8", VA = "0x1AC7CE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000394")]
		[CatalogMaterial]
		public Material BrushPage
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x1AC7CF0", Offset = "0x1AC7CF0", VA = "0x1AC7CF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x1AC7CF8", Offset = "0x1AC7CF8", VA = "0x1AC7CF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000395")]
		[CatalogMaterial]
		public Material BrushPageActive
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x1AC7D00", Offset = "0x1AC7D00", VA = "0x1AC7D00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1AC7D08", Offset = "0x1AC7D08", VA = "0x1AC7D08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000396")]
		[CatalogMaterial]
		public Material BrushPageActive_LogitechPen
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x1AC7D10", Offset = "0x1AC7D10", VA = "0x1AC7D10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x1AC7D18", Offset = "0x1AC7D18", VA = "0x1AC7D18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		[CatalogMaterial]
		public Material BrushSizer
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1AC7D20", Offset = "0x1AC7D20", VA = "0x1AC7D20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1AC7D28", Offset = "0x1AC7D28", VA = "0x1AC7D28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000398")]
		[CatalogMaterial]
		public Material BrushSizer_LogitechPen
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x1AC7D30", Offset = "0x1AC7D30", VA = "0x1AC7D30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x1AC7D38", Offset = "0x1AC7D38", VA = "0x1AC7D38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000399")]
		[CatalogMaterial]
		public Material BrushSizerActive
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x1AC7D40", Offset = "0x1AC7D40", VA = "0x1AC7D40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x1AC7D48", Offset = "0x1AC7D48", VA = "0x1AC7D48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		[CatalogMaterial]
		public Material BrushSizerActive_LogitechPen
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x1AC7D50", Offset = "0x1AC7D50", VA = "0x1AC7D50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x1AC7D58", Offset = "0x1AC7D58", VA = "0x1AC7D58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		[CatalogMaterial]
		public Material ToggleSelectionOn
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x1AC7D60", Offset = "0x1AC7D60", VA = "0x1AC7D60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x1AC7D68", Offset = "0x1AC7D68", VA = "0x1AC7D68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		[CatalogMaterial]
		public Material ToggleSelectionOff
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x1AC7D70", Offset = "0x1AC7D70", VA = "0x1AC7D70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x1AC7D78", Offset = "0x1AC7D78", VA = "0x1AC7D78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		[CatalogMaterial]
		public Material SelectionOptions
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x1AC7D80", Offset = "0x1AC7D80", VA = "0x1AC7D80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x1AC7D88", Offset = "0x1AC7D88", VA = "0x1AC7D88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1AC7D90", Offset = "0x1AC7D90", VA = "0x1AC7D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1AC322C", Offset = "0x1AC322C", VA = "0x1AC322C")]
		public void Assign(Renderer renderer, Material catalogMat)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x1AC8010", Offset = "0x1AC8010", VA = "0x1AC8010")]
		public ControllerMaterialCatalog()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class DetectLogitechVrPen : MonoBehaviour
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerGeometry m_LogiPenControllerGeometryPrefab;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_TryToSwap;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_IsPen;

		[Token(Token = "0x1700039E")]
		public bool IsPen
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x1AC8020", Offset = "0x1AC8020", VA = "0x1AC8020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x1AC8028", Offset = "0x1AC8028", VA = "0x1AC8028")]
			private set
			{
			}
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1AC80B4", Offset = "0x1AC80B4", VA = "0x1AC80B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1AC81C4", Offset = "0x1AC81C4", VA = "0x1AC81C4")]
		public void Initialize(int deviceIndex)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1AC8204", Offset = "0x1AC8204", VA = "0x1AC8204")]
		public static bool IsLogitechPen(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1AC820C", Offset = "0x1AC820C", VA = "0x1AC820C")]
		public DetectLogitechVrPen()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class NonVrControllerInfo : ControllerInfo
	{
		[Token(Token = "0x1700039F")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x1AC8214", Offset = "0x1AC8214", VA = "0x1AC8214", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x1AC821C", Offset = "0x1AC821C", VA = "0x1AC821C", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x1AC8228", Offset = "0x1AC8228", VA = "0x1AC8228")]
		public NonVrControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1AC822C", Offset = "0x1AC822C", VA = "0x1AC822C", Slot = "8")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1AC8234", Offset = "0x1AC8234", VA = "0x1AC8234", Slot = "9")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1AC8274", Offset = "0x1AC8274", VA = "0x1AC8274", Slot = "10")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1AC82B4", Offset = "0x1AC82B4", VA = "0x1AC82B4", Slot = "11")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1AC82F4", Offset = "0x1AC82F4", VA = "0x1AC82F4", Slot = "12")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1AC82FC", Offset = "0x1AC82FC", VA = "0x1AC82FC", Slot = "13")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1AC8304", Offset = "0x1AC8304", VA = "0x1AC8304", Slot = "14")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1AC830C", Offset = "0x1AC830C", VA = "0x1AC830C", Slot = "15")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1AC8314", Offset = "0x1AC8314", VA = "0x1AC8314", Slot = "19")]
		public override bool GetVrInputTouch(VrInput button)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1AC831C", Offset = "0x1AC831C", VA = "0x1AC831C", Slot = "16")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1AC8324", Offset = "0x1AC8324", VA = "0x1AC8324", Slot = "17")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1AC832C", Offset = "0x1AC832C", VA = "0x1AC832C", Slot = "18")]
		public override bool GetVrInputUp(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1AC8334", Offset = "0x1AC8334", VA = "0x1AC8334", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class UnityXRControllerInfo : ControllerInfo
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.XR.InputDevice device;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly UnityXRInputAction actionSet;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 padAxisPrevious;

		[Token(Token = "0x40013CB")]
		private const float kInputScrollScalar = 0.5f;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isBrush;

		[Token(Token = "0x170003A0")]
		private string actionMap
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x1AC8338", Offset = "0x1AC8338", VA = "0x1AC8338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x1AC9104", Offset = "0x1AC9104", VA = "0x1AC9104", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x1AC9110", Offset = "0x1AC9110", VA = "0x1AC9110", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x1AC83A4", Offset = "0x1AC83A4", VA = "0x1AC83A4")]
		public UnityXRControllerInfo(BaseControllerBehavior behavior, bool isLeftHand)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x1AC8A08", Offset = "0x1AC8A08", VA = "0x1AC8A08")]
		public void SwapLeftRight()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1AC8964", Offset = "0x1AC8964", VA = "0x1AC8964")]
		private void Init()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x1AC8A18", Offset = "0x1AC8A18", VA = "0x1AC8A18")]
		private void SetActionMask()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x1AC9070", Offset = "0x1AC9070", VA = "0x1AC9070")]
		private InputAction FindAction(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1AC9114", Offset = "0x1AC9114", VA = "0x1AC9114", Slot = "9")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x1AC9120", Offset = "0x1AC9120", VA = "0x1AC9120", Slot = "10")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x1AC918C", Offset = "0x1AC918C", VA = "0x1AC918C", Slot = "11")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1AC93B0", Offset = "0x1AC93B0", VA = "0x1AC93B0", Slot = "14")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1AC93BC", Offset = "0x1AC93BC", VA = "0x1AC93BC", Slot = "15")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x1AC93D8", Offset = "0x1AC93D8", VA = "0x1AC93D8", Slot = "12")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x1AC9444", Offset = "0x1AC9444", VA = "0x1AC9444", Slot = "8")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1AC9454", Offset = "0x1AC9454", VA = "0x1AC9454", Slot = "13")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x1AC94C0", Offset = "0x1AC94C0", VA = "0x1AC94C0")]
		private bool MapVrTouch(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1AC9598", Offset = "0x1AC9598", VA = "0x1AC9598", Slot = "19")]
		public override bool GetVrInputTouch(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1AC959C", Offset = "0x1AC959C", VA = "0x1AC959C")]
		private bool MapVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1AC968C", Offset = "0x1AC968C", VA = "0x1AC968C", Slot = "16")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1AC9690", Offset = "0x1AC9690", VA = "0x1AC9690")]
		private bool MapVrInputPerFrame(VrInput input, bool down)
		{
			return default(bool);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1AC9798", Offset = "0x1AC9798", VA = "0x1AC9798", Slot = "17")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1AC97A0", Offset = "0x1AC97A0", VA = "0x1AC97A0", Slot = "18")]
		public override bool GetVrInputUp(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1AC97A8", Offset = "0x1AC97A8", VA = "0x1AC97A8", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class UnityXRInputAction : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
	{
		[Token(Token = "0x2000346")]
		public struct BrushActions
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityXRInputAction m_Wrapper;

			[Token(Token = "0x170003AE")]
			public InputAction TriggerAxis
			{
				[Token(Token = "0x6001624")]
				[Address(RVA = "0x1AC9A68", Offset = "0x1AC9A68", VA = "0x1AC9A68")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AF")]
			public InputAction TriggerButton
			{
				[Token(Token = "0x6001625")]
				[Address(RVA = "0x1AC9A84", Offset = "0x1AC9A84", VA = "0x1AC9A84")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B0")]
			public InputAction TriggerTouch
			{
				[Token(Token = "0x6001626")]
				[Address(RVA = "0x1AC9AA0", Offset = "0x1AC9AA0", VA = "0x1AC9AA0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B1")]
			public InputAction ThumbAxis
			{
				[Token(Token = "0x6001627")]
				[Address(RVA = "0x1AC9ABC", Offset = "0x1AC9ABC", VA = "0x1AC9ABC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B2")]
			public InputAction PadAxis
			{
				[Token(Token = "0x6001628")]
				[Address(RVA = "0x1AC9AD8", Offset = "0x1AC9AD8", VA = "0x1AC9AD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			public InputAction PadButton
			{
				[Token(Token = "0x6001629")]
				[Address(RVA = "0x1AC9AF4", Offset = "0x1AC9AF4", VA = "0x1AC9AF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B4")]
			public InputAction PadTouch
			{
				[Token(Token = "0x600162A")]
				[Address(RVA = "0x1AC9B10", Offset = "0x1AC9B10", VA = "0x1AC9B10")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			public InputAction GripAxis
			{
				[Token(Token = "0x600162B")]
				[Address(RVA = "0x1AC9B2C", Offset = "0x1AC9B2C", VA = "0x1AC9B2C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B6")]
			public InputAction GripButton
			{
				[Token(Token = "0x600162C")]
				[Address(RVA = "0x1AC9B48", Offset = "0x1AC9B48", VA = "0x1AC9B48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			public InputAction PrimaryTouch
			{
				[Token(Token = "0x600162D")]
				[Address(RVA = "0x1AC9B64", Offset = "0x1AC9B64", VA = "0x1AC9B64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B8")]
			public InputAction PrimaryButton
			{
				[Token(Token = "0x600162E")]
				[Address(RVA = "0x1AC9B80", Offset = "0x1AC9B80", VA = "0x1AC9B80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			public InputAction SecondaryTouch
			{
				[Token(Token = "0x600162F")]
				[Address(RVA = "0x1AC9B9C", Offset = "0x1AC9B9C", VA = "0x1AC9B9C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BA")]
			public InputAction SecondaryButton
			{
				[Token(Token = "0x6001630")]
				[Address(RVA = "0x1AC9BB8", Offset = "0x1AC9BB8", VA = "0x1AC9BB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			public bool enabled
			{
				[Token(Token = "0x6001634")]
				[Address(RVA = "0x1AC9BF0", Offset = "0x1AC9BF0", VA = "0x1AC9BF0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001623")]
			[Address(RVA = "0x1AC9A60", Offset = "0x1AC9A60", VA = "0x1AC9A60")]
			public BrushActions(UnityXRInputAction wrapper)
			{
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x1AC9BD4", Offset = "0x1AC9BD4", VA = "0x1AC9BD4")]
			public InputActionMap Get()
			{
				return null;
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0x1AC8BBC", Offset = "0x1AC8BBC", VA = "0x1AC8BBC")]
			public void Enable()
			{
			}

			[Token(Token = "0x6001633")]
			[Address(RVA = "0x1AC8C2C", Offset = "0x1AC8C2C", VA = "0x1AC8C2C")]
			public void Disable()
			{
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0x1AC9C14", Offset = "0x1AC9C14", VA = "0x1AC9C14")]
			public static implicit operator InputActionMap(BrushActions set)
			{
				return null;
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0x1AC9C2C", Offset = "0x1AC9C2C", VA = "0x1AC9C2C")]
			public void SetCallbacks(IBrushActions instance)
			{
			}
		}

		[Token(Token = "0x2000347")]
		public struct WandActions
		{
			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityXRInputAction m_Wrapper;

			[Token(Token = "0x170003BC")]
			public InputAction TriggerAxis
			{
				[Token(Token = "0x6001638")]
				[Address(RVA = "0x1ACCAE8", Offset = "0x1ACCAE8", VA = "0x1ACCAE8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			public InputAction TriggerButton
			{
				[Token(Token = "0x6001639")]
				[Address(RVA = "0x1ACCB04", Offset = "0x1ACCB04", VA = "0x1ACCB04")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BE")]
			public InputAction TriggerTouch
			{
				[Token(Token = "0x600163A")]
				[Address(RVA = "0x1ACCB20", Offset = "0x1ACCB20", VA = "0x1ACCB20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			public InputAction ThumbAxis
			{
				[Token(Token = "0x600163B")]
				[Address(RVA = "0x1ACCB3C", Offset = "0x1ACCB3C", VA = "0x1ACCB3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C0")]
			public InputAction PadAxis
			{
				[Token(Token = "0x600163C")]
				[Address(RVA = "0x1ACCB58", Offset = "0x1ACCB58", VA = "0x1ACCB58")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			public InputAction PadButton
			{
				[Token(Token = "0x600163D")]
				[Address(RVA = "0x1ACCB74", Offset = "0x1ACCB74", VA = "0x1ACCB74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C2")]
			public InputAction PadTouch
			{
				[Token(Token = "0x600163E")]
				[Address(RVA = "0x1ACCB90", Offset = "0x1ACCB90", VA = "0x1ACCB90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			public InputAction GripAxis
			{
				[Token(Token = "0x600163F")]
				[Address(RVA = "0x1ACCBAC", Offset = "0x1ACCBAC", VA = "0x1ACCBAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C4")]
			public InputAction GripButton
			{
				[Token(Token = "0x6001640")]
				[Address(RVA = "0x1ACCBC8", Offset = "0x1ACCBC8", VA = "0x1ACCBC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			public InputAction PrimaryTouch
			{
				[Token(Token = "0x6001641")]
				[Address(RVA = "0x1ACCBE4", Offset = "0x1ACCBE4", VA = "0x1ACCBE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C6")]
			public InputAction PrimaryButton
			{
				[Token(Token = "0x6001642")]
				[Address(RVA = "0x1ACCC00", Offset = "0x1ACCC00", VA = "0x1ACCC00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			public InputAction SecondaryTouch
			{
				[Token(Token = "0x6001643")]
				[Address(RVA = "0x1ACCC1C", Offset = "0x1ACCC1C", VA = "0x1ACCC1C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C8")]
			public InputAction SecondaryButton
			{
				[Token(Token = "0x6001644")]
				[Address(RVA = "0x1ACCC38", Offset = "0x1ACCC38", VA = "0x1ACCC38")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			public bool enabled
			{
				[Token(Token = "0x6001648")]
				[Address(RVA = "0x1ACCC70", Offset = "0x1ACCC70", VA = "0x1ACCC70")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0x1ACCAE0", Offset = "0x1ACCAE0", VA = "0x1ACCAE0")]
			public WandActions(UnityXRInputAction wrapper)
			{
			}

			[Token(Token = "0x6001645")]
			[Address(RVA = "0x1ACCC54", Offset = "0x1ACCC54", VA = "0x1ACCC54")]
			public InputActionMap Get()
			{
				return null;
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0x1AC8C08", Offset = "0x1AC8C08", VA = "0x1AC8C08")]
			public void Enable()
			{
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0x1AC8BE4", Offset = "0x1AC8BE4", VA = "0x1AC8BE4")]
			public void Disable()
			{
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0x1ACCC94", Offset = "0x1ACCC94", VA = "0x1ACCC94")]
			public static implicit operator InputActionMap(WandActions set)
			{
				return null;
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0x1ACCCAC", Offset = "0x1ACCCAC", VA = "0x1ACCCAC")]
			public void SetCallbacks(IWandActions instance)
			{
			}
		}

		[Token(Token = "0x2000348")]
		public interface IBrushActions
		{
			[Token(Token = "0x600164B")]
			void OnTriggerAxis(InputAction.CallbackContext context);

			[Token(Token = "0x600164C")]
			void OnTriggerButton(InputAction.CallbackContext context);

			[Token(Token = "0x600164D")]
			void OnTriggerTouch(InputAction.CallbackContext context);

			[Token(Token = "0x600164E")]
			void OnThumbAxis(InputAction.CallbackContext context);

			[Token(Token = "0x600164F")]
			void OnPadAxis(InputAction.CallbackContext context);

			[Token(Token = "0x6001650")]
			void OnPadButton(InputAction.CallbackContext context);

			[Token(Token = "0x6001651")]
			void OnPadTouch(InputAction.CallbackContext context);

			[Token(Token = "0x6001652")]
			void OnGripAxis(InputAction.CallbackContext context);

			[Token(Token = "0x6001653")]
			void OnGripButton(InputAction.CallbackContext context);

			[Token(Token = "0x6001654")]
			void OnPrimaryTouch(InputAction.CallbackContext context);

			[Token(Token = "0x6001655")]
			void OnPrimaryButton(InputAction.CallbackContext context);

			[Token(Token = "0x6001656")]
			void OnSecondaryTouch(InputAction.CallbackContext context);

			[Token(Token = "0x6001657")]
			void OnSecondaryButton(InputAction.CallbackContext context);
		}

		[Token(Token = "0x2000349")]
		public interface IWandActions
		{
			[Token(Token = "0x6001658")]
			void OnTriggerAxis(InputAction.CallbackContext context);

			[Token(Token = "0x6001659")]
			void OnTriggerButton(InputAction.CallbackContext context);

			[Token(Token = "0x600165A")]
			void OnTriggerTouch(InputAction.CallbackContext context);

			[Token(Token = "0x600165B")]
			void OnThumbAxis(InputAction.CallbackContext context);

			[Token(Token = "0x600165C")]
			void OnPadAxis(InputAction.CallbackContext context);

			[Token(Token = "0x600165D")]
			void OnPadButton(InputAction.CallbackContext context);

			[Token(Token = "0x600165E")]
			void OnPadTouch(InputAction.CallbackContext context);

			[Token(Token = "0x600165F")]
			void OnGripAxis(InputAction.CallbackContext context);

			[Token(Token = "0x6001660")]
			void OnGripButton(InputAction.CallbackContext context);

			[Token(Token = "0x6001661")]
			void OnPrimaryTouch(InputAction.CallbackContext context);

			[Token(Token = "0x6001662")]
			void OnPrimaryButton(InputAction.CallbackContext context);

			[Token(Token = "0x6001663")]
			void OnSecondaryTouch(InputAction.CallbackContext context);

			[Token(Token = "0x6001664")]
			void OnSecondaryButton(InputAction.CallbackContext context);
		}

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InputActionMap m_Brush;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBrushActions m_BrushActionsCallbackInterface;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly InputAction m_Brush_TriggerAxis;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly InputAction m_Brush_TriggerButton;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly InputAction m_Brush_TriggerTouch;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly InputAction m_Brush_ThumbAxis;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly InputAction m_Brush_PadAxis;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly InputAction m_Brush_PadButton;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly InputAction m_Brush_PadTouch;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly InputAction m_Brush_GripAxis;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly InputAction m_Brush_GripButton;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly InputAction m_Brush_PrimaryTouch;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly InputAction m_Brush_PrimaryButton;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly InputAction m_Brush_SecondaryTouch;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly InputAction m_Brush_SecondaryButton;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly InputActionMap m_Wand;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IWandActions m_WandActionsCallbackInterface;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly InputAction m_Wand_TriggerAxis;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly InputAction m_Wand_TriggerButton;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly InputAction m_Wand_TriggerTouch;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly InputAction m_Wand_ThumbAxis;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly InputAction m_Wand_PadAxis;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly InputAction m_Wand_PadButton;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly InputAction m_Wand_PadTouch;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly InputAction m_Wand_GripAxis;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly InputAction m_Wand_GripButton;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly InputAction m_Wand_PrimaryTouch;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly InputAction m_Wand_PrimaryButton;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly InputAction m_Wand_SecondaryTouch;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly InputAction m_Wand_SecondaryButton;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_IndexControllerSchemeIndex;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_HTCViveControllerSchemeIndex;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_OculusTouchControllerSchemeIndex;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_WMRControllerSchemeIndex;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_PicoControllerSchemeIndex;

		[Token(Token = "0x170003A2")]
		public InputActionAsset asset
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1AC9808", Offset = "0x1AC9808", VA = "0x1AC9808")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		public InputBinding? bindingMask
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x1AC986C", Offset = "0x1AC986C", VA = "0x1AC986C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1AC9024", Offset = "0x1AC9024", VA = "0x1AC9024", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x1AC9894", Offset = "0x1AC9894", VA = "0x1AC9894", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1AC98D4", Offset = "0x1AC98D4", VA = "0x1AC98D4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public ReadOnlyArray<InputControlScheme> controlSchemes
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x1AC9920", Offset = "0x1AC9920", VA = "0x1AC9920", Slot = "11")]
			get
			{
				return default(ReadOnlyArray<InputControlScheme>);
			}
		}

		[Token(Token = "0x170003A6")]
		public IEnumerable<InputBinding> bindings
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x1AC99C8", Offset = "0x1AC99C8", VA = "0x1AC99C8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		public BrushActions Brush
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x1AC8BB8", Offset = "0x1AC8BB8", VA = "0x1AC8BB8")]
			get
			{
				return default(BrushActions);
			}
		}

		[Token(Token = "0x170003A8")]
		public WandActions Wand
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x1AC8BE0", Offset = "0x1AC8BE0", VA = "0x1AC8BE0")]
			get
			{
				return default(WandActions);
			}
		}

		[Token(Token = "0x170003A9")]
		public InputControlScheme IndexControllerScheme
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x1AC8D14", Offset = "0x1AC8D14", VA = "0x1AC8D14")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170003AA")]
		public InputControlScheme HTCViveControllerScheme
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x1AC8C50", Offset = "0x1AC8C50", VA = "0x1AC8C50")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170003AB")]
		public InputControlScheme OculusTouchControllerScheme
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x1AC8DD8", Offset = "0x1AC8DD8", VA = "0x1AC8DD8")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170003AC")]
		public InputControlScheme WMRControllerScheme
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x1AC8E9C", Offset = "0x1AC8E9C", VA = "0x1AC8E9C")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170003AD")]
		public InputControlScheme PicoControllerScheme
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0x1AC8F60", Offset = "0x1AC8F60", VA = "0x1AC8F60")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1AC842C", Offset = "0x1AC842C", VA = "0x1AC842C")]
		public UnityXRInputAction()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1AC9810", Offset = "0x1AC9810", VA = "0x1AC9810", Slot = "17")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1AC993C", Offset = "0x1AC993C", VA = "0x1AC993C", Slot = "12")]
		public bool Contains(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1AC9958", Offset = "0x1AC9958", VA = "0x1AC9958", Slot = "15")]
		public IEnumerator<InputAction> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1AC9974", Offset = "0x1AC9974", VA = "0x1AC9974", Slot = "16")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1AC9990", Offset = "0x1AC9990", VA = "0x1AC9990", Slot = "13")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1AC99AC", Offset = "0x1AC99AC", VA = "0x1AC99AC", Slot = "14")]
		public void Disable()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1AC99E4", Offset = "0x1AC99E4", VA = "0x1AC99E4", Slot = "5")]
		public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1AC9A04", Offset = "0x1AC9A04", VA = "0x1AC9A04", Slot = "6")]
		public int FindBinding(InputBinding bindingMask, out InputAction action)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200034A")]
	public class VrControllers : MonoBehaviour
	{
		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerBehaviorWand m_Wand;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerBehaviorBrush m_Brush;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour[] m_TrackingComponents;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("SteamVR Haptics")]
		[SerializeField]
		[FormerlySerializedAs("m_HapticsScaleAdjustment")]
		private float m_HapticsDurationScale;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_HapticAmplitudeScale;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Input Zones")]
		[SerializeField]
		private Vector2 m_TouchpadActivationRange;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_WandRotateJoystickPercent;

		[Token(Token = "0x170003CA")]
		public float HapticsDurationScale
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x12BFA04", Offset = "0x12BFA04", VA = "0x12BFA04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CB")]
		public float HapticsAmplitudeScale
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x12BFA0C", Offset = "0x12BFA0C", VA = "0x12BFA0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CC")]
		public ControllerStyle BaseControllerStyle
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x12BFB7C", Offset = "0x12BFB7C", VA = "0x12BFB7C")]
			get
			{
				return default(ControllerStyle);
			}
		}

		[Token(Token = "0x170003CD")]
		public Vector2 TouchpadActivationRange
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x12BFBD4", Offset = "0x12BFBD4", VA = "0x12BFBD4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003CE")]
		public float WandRotateJoystickPercent
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x12BFBDC", Offset = "0x12BFBDC", VA = "0x12BFBDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CF")]
		public ControllerBehaviorWand Wand
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x12BFBE4", Offset = "0x12BFBE4", VA = "0x12BFBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		public ControllerBehaviorBrush Brush
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x12BFBEC", Offset = "0x12BFBEC", VA = "0x12BFBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x12BFA14", Offset = "0x12BFA14", VA = "0x12BFA14")]
		public BaseControllerBehavior GetBehavior(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x12BFABC", Offset = "0x12BFABC", VA = "0x12BFABC")]
		public BaseControllerBehavior[] GetBehaviors()
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x12BFBF4", Offset = "0x12BFBF4", VA = "0x12BFBF4")]
		public bool LogitechPenIsPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x12BFC50", Offset = "0x12BFC50", VA = "0x12BFC50")]
		public bool PrimaryScrollDirectionIsX(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x12BFC80", Offset = "0x12BFC80", VA = "0x12BFC80")]
		public void EnablePoseTracking(bool enabled)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x12BFCE8", Offset = "0x12BFCE8", VA = "0x12BFCE8")]
		public VrControllers()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public enum VrInput
	{
		[Token(Token = "0x40013FB")]
		Button01,
		[Token(Token = "0x40013FC")]
		Button02,
		[Token(Token = "0x40013FD")]
		Button03,
		[Token(Token = "0x40013FE")]
		Button04,
		[Token(Token = "0x40013FF")]
		Button05,
		[Token(Token = "0x4001400")]
		Button06,
		[Token(Token = "0x4001401")]
		Directional,
		[Token(Token = "0x4001402")]
		Trigger,
		[Token(Token = "0x4001403")]
		Grip,
		[Token(Token = "0x4001404")]
		Any,
		[Token(Token = "0x4001405")]
		Thumbstick,
		[Token(Token = "0x4001406")]
		Touchpad
	}
	[Token(Token = "0x200034C")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x200034D")]
		public enum ControllerName
		{
			[Token(Token = "0x400141C")]
			Wand,
			[Token(Token = "0x400141D")]
			Brush,
			[Token(Token = "0x400141E")]
			Num,
			[Token(Token = "0x400141F")]
			None
		}

		[Token(Token = "0x200034E")]
		public enum SketchCommands
		{
			[Token(Token = "0x4001421")]
			Activate,
			[Token(Token = "0x4001422")]
			AltActivate,
			[Token(Token = "0x4001423")]
			PanelShowHide,
			[Token(Token = "0x4001424")]
			LockToHead,
			[Token(Token = "0x4001425")]
			PivotRotation,
			[Token(Token = "0x4001426")]
			WandRotation,
			[Token(Token = "0x4001427")]
			LockToController,
			[Token(Token = "0x4001428")]
			Scale,
			[Token(Token = "0x4001429")]
			Sensitivity,
			[Token(Token = "0x400142A")]
			Reset,
			[Token(Token = "0x400142B")]
			Undo,
			[Token(Token = "0x400142C")]
			Redo,
			[Token(Token = "0x400142D")]
			Delete,
			[Token(Token = "0x400142E")]
			Abort,
			[Token(Token = "0x400142F")]
			Panic,
			[Token(Token = "0x4001430")]
			RewindTimeline,
			[Token(Token = "0x4001431")]
			AdvanceTimeline,
			[Token(Token = "0x4001432")]
			TimelineHome,
			[Token(Token = "0x4001433")]
			TimelineEnd,
			[Token(Token = "0x4001434")]
			MultiCamSelection,
			[Token(Token = "0x4001435")]
			WorldTransformReset,
			[Token(Token = "0x4001436")]
			Teleport,
			[Token(Token = "0x4001437")]
			ShowPinCushion,
			[Token(Token = "0x4001438")]
			ToggleDefaultTool,
			[Token(Token = "0x4001439")]
			RespawnPanels,
			[Token(Token = "0x400143A")]
			SwapControls,
			[Token(Token = "0x400143B")]
			MenuContextClick,
			[Token(Token = "0x400143C")]
			PinWidget,
			[Token(Token = "0x400143D")]
			ToggleSelection,
			[Token(Token = "0x400143E")]
			GroupStrokes,
			[Token(Token = "0x400143F")]
			DuplicateSelection,
			[Token(Token = "0x4001440")]
			Confirm,
			[Token(Token = "0x4001441")]
			Cancel,
			[Token(Token = "0x4001442")]
			Trash,
			[Token(Token = "0x4001443")]
			Share,
			[Token(Token = "0x4001444")]
			Fly
		}

		[Token(Token = "0x200034F")]
		public enum KeyboardShortcut
		{
			[Token(Token = "0x4001446")]
			LockToHead,
			[Token(Token = "0x4001447")]
			PivotRotation,
			[Token(Token = "0x4001448")]
			Scale,
			[Token(Token = "0x4001449")]
			RewindTimeline,
			[Token(Token = "0x400144A")]
			AdvanceTimeline,
			[Token(Token = "0x400144B")]
			TimelineHome,
			[Token(Token = "0x400144C")]
			TimelineEnd,
			[Token(Token = "0x400144D")]
			Reset,
			[Token(Token = "0x400144E")]
			Undo,
			[Token(Token = "0x400144F")]
			Redo,
			[Token(Token = "0x4001450")]
			Delete,
			[Token(Token = "0x4001451")]
			Abort,
			[Token(Token = "0x4001452")]
			SaveNew,
			[Token(Token = "0x4001453")]
			ExportAll,
			[Token(Token = "0x4001454")]
			SwitchCamera,
			[Token(Token = "0x4001455")]
			_Unused_1,
			[Token(Token = "0x4001456")]
			_Unused_4,
			[Token(Token = "0x4001457")]
			ViewOnly,
			[Token(Token = "0x4001458")]
			ToggleScreenMirroring,
			[Token(Token = "0x4001459")]
			PreviousTool,
			[Token(Token = "0x400145A")]
			NextTool,
			[Token(Token = "0x400145B")]
			_Unused_2,
			[Token(Token = "0x400145C")]
			_Unused_3,
			[Token(Token = "0x400145D")]
			CycleSymmetryMode,
			[Token(Token = "0x400145E")]
			Export,
			[Token(Token = "0x400145F")]
			StoreHeadTransform,
			[Token(Token = "0x4001460")]
			RecallHeadTransform,
			[Token(Token = "0x4001461")]
			ToggleLightType,
			[Token(Token = "0x4001462")]
			CheckStrokes,
			[Token(Token = "0x4001463")]
			ResetScene,
			[Token(Token = "0x4001464")]
			StraightEdge,
			[Token(Token = "0x4001465")]
			Save,
			[Token(Token = "0x4001466")]
			Load,
			[Token(Token = "0x4001467")]
			Forward,
			[Token(Token = "0x4001468")]
			Backward,
			[Token(Token = "0x4001469")]
			PositionMonoCamera,
			[Token(Token = "0x400146A")]
			ToggleHeadStationaryOrWobble,
			[Token(Token = "0x400146B")]
			ToggleHeadStationaryOrFollow,
			[Token(Token = "0x400146C")]
			DecreaseSlowFollowSmoothing,
			[Token(Token = "0x400146D")]
			IncreaseSlowFollowSmoothing,
			[Token(Token = "0x400146E")]
			ToggleGVRAudio,
			[Token(Token = "0x400146F")]
			ResetEverything,
			[Token(Token = "0x4001470")]
			GotoInitialPosition,
			[Token(Token = "0x4001471")]
			ExtendDemoTimer,
			[Token(Token = "0x4001472")]
			InstantUpload,
			[Token(Token = "0x4001473")]
			TossWidget,
			[Token(Token = "0x4001474")]
			ToggleProfile
		}

		[Serializable]
		[Token(Token = "0x2000350")]
		public struct HmdInfo
		{
			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshRenderer m_Renderer;
		}

		[Token(Token = "0x2000351")]
		public struct TouchInput
		{
			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_Valid;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector2 m_Pos;
		}

		[Token(Token = "0x4001407")]
		private const string PLAYER_PREF_WAND_ON_RIGHT = "WandOnRight";

		[Token(Token = "0x4001408")]
		private const float kSwapDistMeters = 0.04f;

		[Token(Token = "0x4001409")]
		private const float kSwapResetDistMeters = 0.16f;

		[Token(Token = "0x400140A")]
		private const float kSwapForwardAngle = 130f;

		[Token(Token = "0x400140B")]
		private const float kSwapVelocityAngle = 150f;

		[Token(Token = "0x400140C")]
		private const float kSwapAcceleration = 10f;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, Key[]> m_KeyMap;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<int, Key[]> m_DemoKeyMap;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static InputManager m_Instance;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_SwapEffect;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HmdInfo m_HmdInfo;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_AllowVrControllers;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ControllerInfo[] m_ControllerInfos;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_InhibitControllerSwap;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_InputThreshold;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TouchInput m_Touch;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_WandOnRight;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, KeyboardShortcut?> m_SketchToKeyboardCommandMap;

		[Token(Token = "0x170003D1")]
		private Dictionary<int, Key[]> ActiveKeyMap
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x12BFD0C", Offset = "0x12BFD0C", VA = "0x12BFD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		public static ControllerInfo[] Controllers
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x12BFDA8", Offset = "0x12BFDA8", VA = "0x12BFDA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		public static ControllerInfo Wand
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x12BFE0C", Offset = "0x12BFE0C", VA = "0x12BFE0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public static ControllerInfo Brush
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x12BFE74", Offset = "0x12BFE74", VA = "0x12BFE74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		public bool AllowVrControllers
		{
			[Token(Token = "0x600167B")]
			[Address(RVA = "0x12C023C", Offset = "0x12C023C", VA = "0x12C023C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x12C0244", Offset = "0x12C0244", VA = "0x12C0244")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public bool WandOnRight
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x12C02CC", Offset = "0x12C02CC", VA = "0x12C02CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x12C02D4", Offset = "0x12C02D4", VA = "0x12C02D4")]
			set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event Action OnSwapControllers
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x12BFEE0", Offset = "0x12BFEE0", VA = "0x12BFEE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x12BFFBC", Offset = "0x12BFFBC", VA = "0x12BFFBC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action ControllerPosesApplied
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0x12C0104", Offset = "0x12C0104", VA = "0x12C0104")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600167A")]
			[Address(RVA = "0x12C01A0", Offset = "0x12C01A0", VA = "0x12C01A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x12C0098", Offset = "0x12C0098", VA = "0x12C0098")]
		public static void ControllersHaveChanged()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x12C0250", Offset = "0x12C0250", VA = "0x12C0250")]
		public void EnableVrControllers(bool bEnable)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x12C0428", Offset = "0x12C0428", VA = "0x12C0428")]
		public void EnablePoseTracking(bool enabled)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x12C04A8", Offset = "0x12C04A8", VA = "0x12C04A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x12C05B0", Offset = "0x12C05B0", VA = "0x12C05B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x12C05CC", Offset = "0x12C05CC", VA = "0x12C05CC")]
		public void CreateControllerInfos()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x12C08BC", Offset = "0x12C08BC", VA = "0x12C08BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x12C0834", Offset = "0x12C0834", VA = "0x12C0834")]
		public void ShowControllers(bool show)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x12C09E4", Offset = "0x12C09E4", VA = "0x12C09E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x12C0AB4", Offset = "0x12C0AB4", VA = "0x12C0AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x12C0CD4", Offset = "0x12C0CD4", VA = "0x12C0CD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x12C0D38", Offset = "0x12C0D38", VA = "0x12C0D38")]
		private void OnControllerPosesApplied()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x12C0F7C", Offset = "0x12C0F7C", VA = "0x12C0F7C")]
		public bool GetKeyboardShortcut(KeyboardShortcut shortcut)
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x12C1084", Offset = "0x12C1084", VA = "0x12C1084")]
		public bool GetKeyboardShortcutDown(KeyboardShortcut shortcut)
		{
			return default(bool);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x12C118C", Offset = "0x12C118C", VA = "0x12C118C")]
		public bool GetAnyShift()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x12C1248", Offset = "0x12C1248", VA = "0x12C1248")]
		private KeyboardShortcut? MapCommandToKeyboard(SketchCommands rCommand)
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x12C1494", Offset = "0x12C1494", VA = "0x12C1494")]
		public bool GetCommand(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x12C18EC", Offset = "0x12C18EC", VA = "0x12C18EC")]
		public bool GetCommandHeld(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x12C1A38", Offset = "0x12C1A38", VA = "0x12C1A38")]
		public bool GetCommandDown(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x12C1DB8", Offset = "0x12C1DB8", VA = "0x12C1DB8")]
		private bool HasSwapGestureCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x12C2410", Offset = "0x12C2410", VA = "0x12C2410")]
		public bool ControllersAreSwapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x12C2418", Offset = "0x12C2418", VA = "0x12C2418")]
		public Vector2 GetMouseMoveDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x12C254C", Offset = "0x12C254C", VA = "0x12C254C")]
		public float GetMouseWheel()
		{
			return default(float);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x12C17E8", Offset = "0x12C17E8", VA = "0x12C17E8")]
		public bool GetMouseButton(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x12C1CB4", Offset = "0x12C1CB4", VA = "0x12C1CB4")]
		public bool GetMouseButtonDown(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x12C2620", Offset = "0x12C2620", VA = "0x12C2620")]
		public bool IsBrushScrollActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x12C26B0", Offset = "0x12C26B0", VA = "0x12C26B0")]
		public float GetBrushScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x12C2810", Offset = "0x12C2810", VA = "0x12C2810")]
		public float GetAdjustedBrushScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x12C284C", Offset = "0x12C284C", VA = "0x12C284C")]
		public float GetWandScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x12C28DC", Offset = "0x12C28DC", VA = "0x12C28DC")]
		public float GetAdjustedWandScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x12C2918", Offset = "0x12C2918", VA = "0x12C2918")]
		public float GetToolSelection()
		{
			return default(float);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x12C2A00", Offset = "0x12C2A00", VA = "0x12C2A00")]
		public bool GetTouchPosition(out Vector2 touchPos)
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x12C2A10", Offset = "0x12C2A10", VA = "0x12C2A10")]
		public void ClearTouchPosition()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x12C2A18", Offset = "0x12C2A18", VA = "0x12C2A18")]
		public void TriggerHaptics(ControllerName eName, float durationInSeconds)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x12C2A58", Offset = "0x12C2A58", VA = "0x12C2A58")]
		public void TriggerHaptics(ControllerName eName, float durationInSeconds, float minTimeBetweenPulses)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x12C2AE0", Offset = "0x12C2AE0", VA = "0x12C2AE0")]
		public void TriggerHapticsPulse(ControllerName eName, int iNumPulses, float fInterval, float durationInSeconds)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x12C2B1C", Offset = "0x12C2B1C", VA = "0x12C2B1C")]
		public BaseControllerBehavior GetControllerBehavior(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x12C2B54", Offset = "0x12C2B54", VA = "0x12C2B54")]
		public ControllerTutorialScript GetControllerTutorial(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x12C2B8C", Offset = "0x12C2B8C", VA = "0x12C2B8C")]
		public void TintControllersAndHMD(Color rTintColor, float fBaseIntensity, float fGlowIntensity)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x12C2DB0", Offset = "0x12C2DB0", VA = "0x12C2DB0")]
		public Transform GetPinCushionSpawn()
		{
			return null;
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x12C2E54", Offset = "0x12C2E54", VA = "0x12C2E54")]
		public Transform GetBrushControllerAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x12C2EF8", Offset = "0x12C2EF8", VA = "0x12C2EF8")]
		public Transform GetWandControllerAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x12C2F98", Offset = "0x12C2F98", VA = "0x12C2F98")]
		public void SetControllersAttachAngle(float fAngle)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x12C323C", Offset = "0x12C323C", VA = "0x12C323C")]
		public Transform GetController(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x12C3274", Offset = "0x12C3274", VA = "0x12C3274")]
		public static ControllerGeometry GetControllerGeometry(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x12C3300", Offset = "0x12C3300", VA = "0x12C3300")]
		public Quaternion GetControllerRotation(ControllerName eName)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x12C3340", Offset = "0x12C3340", VA = "0x12C3340")]
		public Vector3 GetControllerPosition(ControllerName eName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x12C3380", Offset = "0x12C3380", VA = "0x12C3380")]
		public Vector3 GetControllerAttachPointPosition(ControllerName eName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x12C33F0", Offset = "0x12C33F0", VA = "0x12C33F0")]
		public ControllerName GetDominantController(SketchCommands rCommand)
		{
			return default(ControllerName);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x12C34AC", Offset = "0x12C34AC", VA = "0x12C34AC")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class BadJson : Exception
	{
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x12C3F04", Offset = "0x12C3F04", VA = "0x12C3F04")]
		public BadJson(string message)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x12C3F6C", Offset = "0x12C3F6C", VA = "0x12C3F6C")]
		public BadJson(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x12C3FF0", Offset = "0x12C3FF0", VA = "0x12C3FF0")]
		public BadJson(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class CustomJsonWriter : JsonTextWriter
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool terseFormatting;

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x12C4084", Offset = "0x12C4084", VA = "0x12C4084")]
		public CustomJsonWriter(TextWriter textWriter)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x12C40A8", Offset = "0x12C40A8", VA = "0x12C40A8")]
		public void WriteStartArray(bool terse)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x12C40B8", Offset = "0x12C40B8", VA = "0x12C40B8")]
		public void WriteStartObject(bool terse)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x12C40C8", Offset = "0x12C40C8", VA = "0x12C40C8", Slot = "78")]
		protected override void WriteEnd(JsonToken token)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x12C40E4", Offset = "0x12C40E4", VA = "0x12C40E4", Slot = "79")]
		protected override void WriteIndent()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x12C4104", Offset = "0x12C4104", VA = "0x12C4104", Slot = "67")]
		public override void Close()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x12C413C", Offset = "0x12C413C", VA = "0x12C413C")]
		public void WriteValue(Vector3 v)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x12C4220", Offset = "0x12C4220", VA = "0x12C4220")]
		public void WriteValue(Vector2 v)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x12C4294", Offset = "0x12C4294", VA = "0x12C4294")]
		public void WriteValue(Color v)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x12C43DC", Offset = "0x12C43DC", VA = "0x12C43DC")]
		public void WriteValue(Color32 v)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x12C448C", Offset = "0x12C448C", VA = "0x12C448C")]
		public void WriteValue(Quaternion v)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class JsonVectorConverter : JsonConverter
	{
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x12C4590", Offset = "0x12C4590", VA = "0x12C4590", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x12C474C", Offset = "0x12C474C", VA = "0x12C474C")]
		private static float ReadFloat(JsonReader reader)
		{
			return default(float);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x12C485C", Offset = "0x12C485C", VA = "0x12C485C", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x12C4C88", Offset = "0x12C4C88", VA = "0x12C4C88", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x12C5084", Offset = "0x12C5084", VA = "0x12C5084")]
		public JsonVectorConverter()
		{
		}
	}
	[Token(Token = "0x2000355")]
	[Obfuscation(Exclude = true)]
	public class JsonTrTransformConverter : JsonConverter
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x12C508C", Offset = "0x12C508C", VA = "0x12C508C", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x12C5114", Offset = "0x12C5114", VA = "0x12C5114", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer s)
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x12C5330", Offset = "0x12C5330", VA = "0x12C5330", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer s)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x12C5540", Offset = "0x12C5540", VA = "0x12C5540")]
		public JsonTrTransformConverter()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class JsonGuidConverter : JsonConverter
	{
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x12C5548", Offset = "0x12C5548", VA = "0x12C5548", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x12C5550", Offset = "0x12C5550", VA = "0x12C5550", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type t, object o, JsonSerializer s)
		{
			return null;
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x12C5674", Offset = "0x12C5674", VA = "0x12C5674", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer s)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x12C573C", Offset = "0x12C573C", VA = "0x12C573C")]
		public JsonGuidConverter()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class CustomJsonContractResolver : DefaultContractResolver
	{
		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x12C5744", Offset = "0x12C5744", VA = "0x12C5744", Slot = "18")]
		protected override JsonContract CreateContract(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x12C59AC", Offset = "0x12C59AC", VA = "0x12C59AC")]
		public CustomJsonContractResolver()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class LightsControlScript : MonoBehaviour
	{
		[Token(Token = "0x2000359")]
		public struct DiscoCurve
		{
			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quaternion start;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion target;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color startColor;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color targetColor;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color lerpColor;
		}

		[Token(Token = "0x200035A")]
		private enum Movement
		{
			[Token(Token = "0x400148D")]
			Still,
			[Token(Token = "0x400148E")]
			Drift
		}

		[Token(Token = "0x200035B")]
		public struct CustomEnvLight
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;
		}

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LightsControlScript m_Instance;

		[Token(Token = "0x400147A")]
		public const int kLightCount = 2;

		[Token(Token = "0x400147B")]
		public const float kRotationChangeEpsilon = 0.0001f;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEnvLight[] m_EnvLights;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Color> m_Colors;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_BeatThreshold;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DriftSpeed;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_JumpInterval;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Movement m_MoveMode;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Jumping;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_JumpTimer;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_MoveTimer;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DiscoCurve[] m_DiscoCurves;

		[Token(Token = "0x170003D7")]
		public bool DiscoMode
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x12C5A04", Offset = "0x12C5A04", VA = "0x12C5A04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x12C5A14", Offset = "0x12C5A14", VA = "0x12C5A14")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public bool LightsChanged
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x12C5D74", Offset = "0x12C5D74", VA = "0x12C5D74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D9")]
		public CustomLights CustomLights
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x12C6250", Offset = "0x12C6250", VA = "0x12C6250")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x12C66FC", Offset = "0x12C66FC", VA = "0x12C66FC")]
			set
			{
			}
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x12C60E4", Offset = "0x12C60E4", VA = "0x12C60E4")]
		public static bool IsLightRotationCloseEnough(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x12C6874", Offset = "0x12C6874", VA = "0x12C6874")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x12C68EC", Offset = "0x12C68EC", VA = "0x12C68EC")]
		public void AddColor(Color c)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x12C69F0", Offset = "0x12C69F0", VA = "0x12C69F0")]
		private void AdvanceCurves()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x12C6B24", Offset = "0x12C6B24", VA = "0x12C6B24")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x12C6E6C", Offset = "0x12C6E6C", VA = "0x12C6E6C")]
		public LightsControlScript()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class LoadingScene : MonoBehaviour
	{
		[Token(Token = "0x200035D")]
		[CompilerGenerated]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScene <>4__this;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DF")]
				[Address(RVA = "0x12C7460", Offset = "0x12C7460", VA = "0x12C7460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E1")]
				[Address(RVA = "0x12C74A8", Offset = "0x12C74A8", VA = "0x12C74A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x12C6EF0", Offset = "0x12C6EF0", VA = "0x12C6EF0")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x12C6F88", Offset = "0x12C6F88", VA = "0x12C6F88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x12C6F8C", Offset = "0x12C6F8C", VA = "0x12C6F8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x12C7468", Offset = "0x12C7468", VA = "0x12C7468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GvrOverlay m_Overlay;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_MaximumLoadingTime;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_SceneLoadRatio;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_FakeLoadingRate;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_CurrentLoadingPosition;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x12C6E88", Offset = "0x12C6E88", VA = "0x12C6E88")]
		[IteratorStateMachine(typeof(<Start>d__6))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x12C6F18", Offset = "0x12C6F18", VA = "0x12C6F18")]
		private void UpdateProgress(float start, float scale, float progress)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x12C6F80", Offset = "0x12C6F80", VA = "0x12C6F80")]
		public LoadingScene()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class MaterialCache : MonoBehaviour
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_SiblingRenderer;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Material, Material> m_CachedMaterialMap;

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x12C74B0", Offset = "0x12C74B0", VA = "0x12C74B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x12C7594", Offset = "0x12C7594", VA = "0x12C7594")]
		public void AssignMaterial(Material mat)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x12C7684", Offset = "0x12C7684", VA = "0x12C7684")]
		public MaterialCache()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class Model
	{
		[Token(Token = "0x2000360")]
		public struct Location
		{
			[Token(Token = "0x2000361")]
			public enum Type
			{
				[Token(Token = "0x40014AE")]
				Invalid,
				[Token(Token = "0x40014AF")]
				LocalFile,
				[Token(Token = "0x40014B0")]
				PolyAssetId
			}

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string path;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string id;

			[Token(Token = "0x170003E1")]
			public string AbsolutePath
			{
				[Token(Token = "0x6001701")]
				[Address(RVA = "0x12C7AD4", Offset = "0x12C7AD4", VA = "0x12C7AD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			public string RelativePath
			{
				[Token(Token = "0x6001702")]
				[Address(RVA = "0x12C76A8", Offset = "0x12C76A8", VA = "0x12C76A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			public string AssetId
			{
				[Token(Token = "0x6001703")]
				[Address(RVA = "0x12C7718", Offset = "0x12C7718", VA = "0x12C7718")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x12CA328", Offset = "0x12CA328", VA = "0x12CA328")]
			public static Location File(string relativePath)
			{
				return default(Location);
			}

			[Token(Token = "0x6001700")]
			[Address(RVA = "0x12CA33C", Offset = "0x12CA33C", VA = "0x12CA33C")]
			public static Location PolyAsset(string assetId, string path)
			{
				return default(Location);
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x12CA350", Offset = "0x12CA350", VA = "0x12CA350")]
			public Type GetLocationType()
			{
				return default(Type);
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0x12CA358", Offset = "0x12CA358", VA = "0x12CA358", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x12C9868", Offset = "0x12C9868", VA = "0x12C9868", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x12CA378", Offset = "0x12CA378", VA = "0x12CA378", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x12CA408", Offset = "0x12CA408", VA = "0x12CA408")]
			public static bool operator ==(Location a, Location b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0x12CA430", Offset = "0x12CA430", VA = "0x12CA430")]
			public static bool operator !=(Location a, Location b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000362")]
		public struct LoadError
		{
			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string message;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string detail;

			[Token(Token = "0x600170A")]
			[Address(RVA = "0x12C78E4", Offset = "0x12C78E4", VA = "0x12C78E4")]
			public LoadError(string message, [Optional] string detail)
			{
			}
		}

		[Token(Token = "0x2000363")]
		private abstract class ModelBuilder
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			protected string m_localPath;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Future<IDisposable> m_stateReader;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<Null> m_meshEnumerator;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ImportMaterialCollector m_ImportMaterialCollector;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject m_root;

			[Token(Token = "0x170003E4")]
			public bool IsValid
			{
				[Token(Token = "0x600170B")]
				[Address(RVA = "0x12CA46C", Offset = "0x12CA46C", VA = "0x12CA46C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600170C")]
				[Address(RVA = "0x12CA474", Offset = "0x12CA474", VA = "0x12CA474")]
				[CompilerGenerated]
				protected set
				{
				}
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0x12CA480", Offset = "0x12CA480", VA = "0x12CA480")]
			public ModelBuilder(string localPath)
			{
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0x12C865C", Offset = "0x12C865C", VA = "0x12C865C")]
			public void BeginAsyncLoad()
			{
			}

			[Token(Token = "0x600170F")]
			[Address(RVA = "0x12C8004", Offset = "0x12C8004", VA = "0x12C8004")]
			public void CancelAsyncLoad()
			{
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0x12C8B88", Offset = "0x12C8B88", VA = "0x12C8B88")]
			public bool TryEndAsyncLoad(out GameObject root, out ImportMaterialCollector importMaterialCollector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001711")]
			protected abstract IDisposable DoBackgroundThreadWork();

			[Token(Token = "0x6001712")]
			protected abstract GameObject DoUnityThreadWork(IDisposable state, out IEnumerable<Null> meshCreator, out ImportMaterialCollector importMaterialCollector);
		}

		[Token(Token = "0x2000365")]
		private class GltfModelBuilder : ModelBuilder
		{
			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private readonly bool m_useThreadedImageLoad;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			private readonly bool m_fromPoly;

			[Token(Token = "0x6001717")]
			[Address(RVA = "0x12C8600", Offset = "0x12C8600", VA = "0x12C8600")]
			public GltfModelBuilder(Location location, bool useThreadedImageLoad)
			{
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0x12CA5CC", Offset = "0x12CA5CC", VA = "0x12CA5CC", Slot = "4")]
			protected override IDisposable DoBackgroundThreadWork()
			{
				return null;
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0x12CA764", Offset = "0x12CA764", VA = "0x12CA764", Slot = "5")]
			protected override GameObject DoUnityThreadWork(IDisposable state__, out IEnumerable<Null> meshEnumerable, out ImportMaterialCollector importMaterialCollector)
			{
				return null;
			}
		}

		[Token(Token = "0x2000367")]
		[CompilerGenerated]
		private sealed class <LoadFullyCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Model <>4__this;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string reason;

			[Token(Token = "0x170003E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001720")]
				[Address(RVA = "0x12CAE24", Offset = "0x12CAE24", VA = "0x12CAE24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001722")]
				[Address(RVA = "0x12CAE6C", Offset = "0x12CAE6C", VA = "0x12CAE6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0x12C9EBC", Offset = "0x12C9EBC", VA = "0x12C9EBC")]
			[DebuggerHidden]
			public <LoadFullyCoroutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600171E")]
			[Address(RVA = "0x12CAB8C", Offset = "0x12CAB8C", VA = "0x12CAB8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x12CAB90", Offset = "0x12CAB90", VA = "0x12CAB90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x12CAE2C", Offset = "0x12CAE2C", VA = "0x12CAE2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float kMeshMsPerFrame;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly GltfImportOptions kPolyGltfImportOptions;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly GltfImportOptions kGltfImportOptions;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static RateLimiter sm_Limiter;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_ModelParent;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds m_MeshBounds;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_Valid;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadError? m_LoadError;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_UsageCount;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Location m_Location;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_AllowExport;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ImportMaterialCollector m_ImportMaterialCollector;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ModelBuilder m_builder;

		[Token(Token = "0x170003DC")]
		public LoadError? Error
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x12C768C", Offset = "0x12C768C", VA = "0x12C768C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		public string RelativePath
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x12C76A0", Offset = "0x12C76A0", VA = "0x12C76A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		public string AssetId
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x12C7710", Offset = "0x12C7710", VA = "0x12C7710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		public string HumanName
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x12C7780", Offset = "0x12C7780", VA = "0x12C7780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public bool AllowExport
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x12C77E8", Offset = "0x12C77E8", VA = "0x12C77E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x12C77F0", Offset = "0x12C77F0", VA = "0x12C77F0")]
		public IExportableMaterial GetExportableMaterial(Material material)
		{
			return null;
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x12C780C", Offset = "0x12C780C", VA = "0x12C780C")]
		public Model(Location location)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x12C7840", Offset = "0x12C7840", VA = "0x12C7840")]
		public Location GetLocation()
		{
			return default(Location);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x12C7854", Offset = "0x12C7854", VA = "0x12C7854")]
		private GameObject LoadUsd(List<string> warnings)
		{
			return null;
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x12C78EC", Offset = "0x12C78EC", VA = "0x12C78EC")]
		private GameObject LoadPly(List<string> warningsOut)
		{
			return null;
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x12C7BBC", Offset = "0x12C7BBC", VA = "0x12C7BBC")]
		private GameObject LoadFbx(List<string> warningsOut)
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x12C7C4C", Offset = "0x12C7C4C", VA = "0x12C7C4C")]
		private GameObject LoadGltf(List<string> warnings)
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x12C7FE4", Offset = "0x12C7FE4", VA = "0x12C7FE4")]
		public void CancelLoadModelAsync()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x12C8494", Offset = "0x12C8494", VA = "0x12C8494")]
		public void LoadModelAsync(bool useThreadedImageLoad)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x12C8810", Offset = "0x12C8810", VA = "0x12C8810")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x12C8820", Offset = "0x12C8820", VA = "0x12C8820")]
		public bool TryLoadModel()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x12C95D8", Offset = "0x12C95D8", VA = "0x12C95D8")]
		public void LoadModel()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x12C8EC4", Offset = "0x12C8EC4", VA = "0x12C8EC4")]
		private void CreatePrefab(GameObject go)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x12C99C0", Offset = "0x12C99C0", VA = "0x12C99C0")]
		public void UnloadModel()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x12C9E48", Offset = "0x12C9E48", VA = "0x12C9E48")]
		[IteratorStateMachine(typeof(<LoadFullyCoroutine>d__41))]
		public IEnumerator LoadFullyCoroutine(string reason)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x12C95E0", Offset = "0x12C95E0", VA = "0x12C95E0")]
		private void DisplayWarnings(List<string> warnings)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x12C9F80", Offset = "0x12C9F80", VA = "0x12C9F80")]
		public bool IsCached()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x12C9FAC", Offset = "0x12C9FAC", VA = "0x12C9FAC")]
		public void RefreshCache()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x12CA058", Offset = "0x12CA058", VA = "0x12CA058")]
		public MeshFilter[] GetMeshes()
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x12CA0F8", Offset = "0x12CA0F8", VA = "0x12CA0F8")]
		public string GetExportName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000368")]
	public class ModelCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ModelCatalog m_Instance;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_DefaultModels;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_ObjLoaderStandardMaterial;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_ObjLoaderTransparentMaterial;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material m_ObjLoaderPointCloudMaterial;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material m_ObjLoaderPointCloudInvisibleMaterial;

		[NonSerialized]
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, Model> m_ModelsByRelativePath;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TrTransform[]> m_MissingNormalizedModelsByRelativePath;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, TrTransform[]> m_MissingModelsByRelativePath;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<string> m_OrderedModelNames;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_FolderChanged;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_ModelsDirectory;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_ChangedFile;

		[Token(Token = "0x170003E7")]
		public bool IsScanning
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x12CAFAC", Offset = "0x12CAFAC", VA = "0x12CAFAC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E8")]
		public int ItemCount
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x12CAFB4", Offset = "0x12CAFB4", VA = "0x12CAFB4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E9")]
		public IEnumerable<TiltModels75> MissingModels
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x12CB004", Offset = "0x12CB004", VA = "0x12CB004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0x12CAE74", Offset = "0x12CAE74", VA = "0x12CAE74", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x12CAF10", Offset = "0x12CAF10", VA = "0x12CAF10", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x12CB1F4", Offset = "0x12CB1F4", VA = "0x12CB1F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x12CB244", Offset = "0x12CB244", VA = "0x12CB244")]
		public void Init()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x12CBA34", Offset = "0x12CBA34", VA = "0x12CBA34")]
		private void OnChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x12CBA6C", Offset = "0x12CBA6C", VA = "0x12CBA6C")]
		public void ClearMissingModels()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x12CBACC", Offset = "0x12CBACC", VA = "0x12CBACC")]
		public void AddMissingModel(string relativePath, TrTransform[] xfs, TrTransform[] rawXfs)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x12CBB68", Offset = "0x12CBB68", VA = "0x12CBB68")]
		public void PrintMissingModelWarnings()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x12CBDD8", Offset = "0x12CBDD8", VA = "0x12CBDD8")]
		public Model GetModelAtIndex(int i)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x12CB4C0", Offset = "0x12CB4C0", VA = "0x12CB4C0")]
		public void LoadModels()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x12CC4AC", Offset = "0x12CC4AC", VA = "0x12CC4AC", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x12CC4DC", Offset = "0x12CC4DC", VA = "0x12CC4DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x12CBE5C", Offset = "0x12CBE5C", VA = "0x12CBE5C")]
		private void ProcessDirectory(string sPath, Dictionary<string, Model> oldModels)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x12CC514", Offset = "0x12CC514", VA = "0x12CC514")]
		public Model GetModel(string relativePath)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x12CC584", Offset = "0x12CC584", VA = "0x12CC584")]
		public ModelCatalog()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class MonoCameraControlScript : MonoBehaviour
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_xScale;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_yScale;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_yClamp;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_cameraRotation;

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x12CC7C4", Offset = "0x12CC7C4", VA = "0x12CC7C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x12CC96C", Offset = "0x12CC96C", VA = "0x12CC96C")]
		public MonoCameraControlScript()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public enum MultiCamStyle
	{
		[Token(Token = "0x40014DA")]
		Snapshot,
		[Token(Token = "0x40014DB")]
		AutoGif,
		[Token(Token = "0x40014DC")]
		TimeGif,
		[Token(Token = "0x40014DD")]
		Video,
		[Token(Token = "0x40014DE")]
		Num
	}
	[Serializable]
	[Token(Token = "0x200036C")]
	public struct MultiCamCaptureObject
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_Object;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_Visuals;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_Camera;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_Screen;

		[NonSerialized]
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotManager m_Manager;

		[NonSerialized]
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_CameraComponent;

		[NonSerialized]
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_CameraClipPlanesBase;
	}
	[Token(Token = "0x200036D")]
	public class MultiCamCaptureRig : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		[CompilerGenerated]
		private sealed class <SnapshotFlashAnimation>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamCaptureRig <>4__this;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camera;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture texture;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxTime>5__2;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject <screen>5__3;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <screenMaterial>5__4;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__5;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001752")]
				[Address(RVA = "0x12CDA5C", Offset = "0x12CDA5C", VA = "0x12CDA5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001754")]
				[Address(RVA = "0x12CDAA4", Offset = "0x12CDAA4", VA = "0x12CDAA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0x12CD81C", Offset = "0x12CD81C", VA = "0x12CD81C")]
			[DebuggerHidden]
			public <SnapshotFlashAnimation>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001750")]
			[Address(RVA = "0x12CD84C", Offset = "0x12CD84C", VA = "0x12CD84C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x12CD850", Offset = "0x12CD850", VA = "0x12CD850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0x12CDA64", Offset = "0x12CDA64", VA = "0x12CDA64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultiCamCaptureObject[] m_CaptureObjects;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_SnapshotFlashAnimation;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve m_SnapshotAlphaAnimation;

		[NonSerialized]
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiCamStyle m_ActiveStyle;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UsdPathSerializer m_VideoUsdSerializer;

		[Token(Token = "0x170003EA")]
		public UsdPathSerializer UsdPathSerializer
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x12CC988", Offset = "0x12CC988", VA = "0x12CC988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		public float SnapshotFlashDuration
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x12CD738", Offset = "0x12CD738", VA = "0x12CD738")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x12CC990", Offset = "0x12CC990", VA = "0x12CC990")]
		public void Init()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x12CCC70", Offset = "0x12CCC70", VA = "0x12CCC70")]
		public void UpdateAllObjectVisualsTransform(Transform xf)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x12CCD44", Offset = "0x12CCD44", VA = "0x12CCD44")]
		public void UpdateObjectVisualsTransform(MultiCamStyle style, Transform xf)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x12CCE10", Offset = "0x12CCE10", VA = "0x12CCE10")]
		public void UpdateAllObjectCameraTransform(Transform xf, float videoCameraLerpT)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x12CCF08", Offset = "0x12CCF08", VA = "0x12CCF08")]
		public void UpdateObjectCameraTransform(MultiCamStyle style, Transform xf, float cameraLerpT)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x12CD21C", Offset = "0x12CD21C", VA = "0x12CD21C")]
		public void UpdateObjectCameraLocalTransform(MultiCamStyle style, TrTransform xf_LS)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x12CD2CC", Offset = "0x12CD2CC", VA = "0x12CD2CC")]
		public void ForceClippingPlanes(MultiCamStyle style)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x12CD484", Offset = "0x12CD484", VA = "0x12CD484")]
		public ScreenshotManager ManagerFromStyle(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x12CD4B8", Offset = "0x12CD4B8", VA = "0x12CD4B8")]
		public void EnableCaptureObject(MultiCamStyle style, bool enable)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x12CD4F8", Offset = "0x12CD4F8", VA = "0x12CD4F8")]
		public void ScaleVisuals(MultiCamStyle style, Vector3 scale)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x12CD568", Offset = "0x12CD568", VA = "0x12CD568")]
		public void EnableAllVisuals(bool enable)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x12CCBC8", Offset = "0x12CCBC8", VA = "0x12CCBC8")]
		public void UpdateFovs()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x12CD5DC", Offset = "0x12CD5DC", VA = "0x12CD5DC")]
		public void EnableScreen(bool enable)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x12CD650", Offset = "0x12CD650", VA = "0x12CD650")]
		public void EnableCamera(bool enable)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x12CD6C4", Offset = "0x12CD6C4", VA = "0x12CD6C4")]
		public void EnableCameraRender(bool enable)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x12CD79C", Offset = "0x12CD79C", VA = "0x12CD79C")]
		[IteratorStateMachine(typeof(<SnapshotFlashAnimation>d__24))]
		public IEnumerator SnapshotFlashAnimation(int camera, Texture texture)
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x12CD844", Offset = "0x12CD844", VA = "0x12CD844")]
		public MultiCamCaptureRig()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class Multiplayer : MonoBehaviour
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x12CDAAC", Offset = "0x12CDAAC", VA = "0x12CDAAC")]
		public Multiplayer()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class NonScaleChild : MonoBehaviour
	{
		[Token(Token = "0x2000371")]
		public enum Parent
		{
			[Token(Token = "0x40014F8")]
			Canvas,
			[Token(Token = "0x40014F9")]
			Scene
		}

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Parent m_Parent;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrTransform m_xfLocal;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CanvasScript m_canvas;

		[Token(Token = "0x170003EE")]
		public TrTransform PositionRotationInParentSpace
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x12CDAB4", Offset = "0x12CDAB4", VA = "0x12CDAB4")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x12CDACC", Offset = "0x12CDACC", VA = "0x12CDACC")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x12CDBC8", Offset = "0x12CDBC8", VA = "0x12CDBC8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x12CDBD4", Offset = "0x12CDBD4", VA = "0x12CDBD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public CanvasScript ParentCanvas
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x12CDD04", Offset = "0x12CDD04", VA = "0x12CDD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x12CDD58", Offset = "0x12CDD58", VA = "0x12CDD58")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public Transform parent
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x12CDC9C", Offset = "0x12CDC9C", VA = "0x12CDC9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public Vector3 globalScale
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x12CE26C", Offset = "0x12CE26C", VA = "0x12CE26C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x12CE28C", Offset = "0x12CE28C", VA = "0x12CE28C")]
			set
			{
			}
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x12CDF7C", Offset = "0x12CDF7C", VA = "0x12CDF7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x12CE044", Offset = "0x12CE044", VA = "0x12CE044")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x12CE148", Offset = "0x12CE148", VA = "0x12CE148")]
		private void OnParentPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x12CDEF4", Offset = "0x12CDEF4", VA = "0x12CDEF4")]
		public void OnPosRotChanged()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x12CE2D4", Offset = "0x12CE2D4", VA = "0x12CE2D4")]
		public NonScaleChild()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class ObjModelScript : MonoBehaviour
	{
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_NumVertsInMeshes;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter[] m_MeshChildren;

		[Token(Token = "0x170003F3")]
		public int NumMeshes
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x12CE2DC", Offset = "0x12CE2DC", VA = "0x12CE2DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x12CE2F8", Offset = "0x12CE2F8", VA = "0x12CE2F8")]
		public int GetNumVertsInMeshes()
		{
			return default(int);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x12CE3FC", Offset = "0x12CE3FC", VA = "0x12CE3FC")]
		private static void GetAllMeshFilters(List<MeshFilter> filters, Transform t, bool isRoot)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x12C9910", Offset = "0x12C9910", VA = "0x12C9910")]
		public void Init()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x12CE854", Offset = "0x12CE854", VA = "0x12CE854")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x12CE890", Offset = "0x12CE890", VA = "0x12CE890")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x12CE894", Offset = "0x12CE894", VA = "0x12CE894")]
		public void UnregisterHighlight()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x12CE898", Offset = "0x12CE898", VA = "0x12CE898")]
		public ObjModelScript()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class OutputWindowScript : MonoBehaviour
	{
		[Token(Token = "0x2000374")]
		public enum LineType
		{
			[Token(Token = "0x4001517")]
			None,
			[Token(Token = "0x4001518")]
			Standard,
			[Token(Token = "0x4001519")]
			StandardNoSound,
			[Token(Token = "0x400151A")]
			Special,
			[Token(Token = "0x400151B")]
			SpecialWithSound
		}

		[Token(Token = "0x2000375")]
		public enum InfoCardSpawnPos
		{
			[Token(Token = "0x400151D")]
			None,
			[Token(Token = "0x400151E")]
			Wand,
			[Token(Token = "0x400151F")]
			Brush,
			[Token(Token = "0x4001520")]
			UIReticle
		}

		[Token(Token = "0x2000376")]
		public class OutputLine
		{
			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_Enabled;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_Line;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer m_Renderer;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro m_TextMesh;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float m_CurrentHeight;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float m_DesiredHeight;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float m_SpringAngle;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float m_SpringVelocity;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_LifeCountdown;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color m_Color;

			[Token(Token = "0x600177F")]
			[Address(RVA = "0x12CF4D8", Offset = "0x12CF4D8", VA = "0x12CF4D8")]
			public OutputLine()
			{
			}
		}

		[Token(Token = "0x2000377")]
		public class QueuedLine
		{
			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Text;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LineType m_Type;

			[Token(Token = "0x6001780")]
			[Address(RVA = "0x12CFD58", Offset = "0x12CFD58", VA = "0x12CFD58")]
			public QueuedLine()
			{
			}
		}

		[Token(Token = "0x2000378")]
		public class DeferredErrorMessage
		{
			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputManager.ControllerName m_Controller;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_Msg;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object m_Detail;

			[Token(Token = "0x6001781")]
			[Address(RVA = "0x12CF05C", Offset = "0x12CF05C", VA = "0x12CF05C")]
			public DeferredErrorMessage()
			{
			}
		}

		[Token(Token = "0x40014FC")]
		private const int CONTROLLER_DETAIL_MAX_LENGTH = 70;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OutputWindowScript m_Instance;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip m_StandardOutputSound;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip m_SpecialOutputSound;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_AudioMinTriggerTime;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_TextLine;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_TextSpecialColor;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_SpringK;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_SpringDampen;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_SpawnAngle;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_DesiredAngle;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 m_BaseOffset;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_LineSpacing;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_LineOffset;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_LineHeightSpeed;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_HoldDuration;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_NumLines;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_InfoCardPrefab;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_AudioVolume;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_AudioTimestamp;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_BasePosition;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private OutputLine[] m_Lines;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<QueuedLine> m_LineQueue;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<DeferredErrorMessage> m_DeferredErrors;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x12CE8A8", Offset = "0x12CE8A8", VA = "0x12CE8A8")]
		public static void Error(string msg, [Optional] object detail)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x12CE8BC", Offset = "0x12CE8BC", VA = "0x12CE8BC")]
		public static void Error(InputManager.ControllerName controller, string msg, [Optional] object detail)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x12C9EE4", Offset = "0x12C9EE4", VA = "0x12C9EE4")]
		public static string GetShorterFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x12CED34", Offset = "0x12CED34", VA = "0x12CED34")]
		public static void ReportFileSaved(string exclamation, string filename, InfoCardSpawnPos spawnPos = InfoCardSpawnPos.None)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x12CF04C", Offset = "0x12CF04C", VA = "0x12CF04C")]
		public void UpdateBasePositionHeight(float fHeightAdjust)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x12CEBD0", Offset = "0x12CEBD0", VA = "0x12CEBD0")]
		private static void DeferError(InputManager.ControllerName controller, string msg, object obj)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x12CF064", Offset = "0x12CF064", VA = "0x12CF064")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x12CF4E0", Offset = "0x12CF4E0", VA = "0x12CF4E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x12CF628", Offset = "0x12CF628", VA = "0x12CF628")]
		private void Update()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x12C5C40", Offset = "0x12C5C40", VA = "0x12C5C40")]
		public void CreateInfoCardAtController(InputManager.ControllerName eName, string sText, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x12CEEF8", Offset = "0x12CEEF8", VA = "0x12CEEF8")]
		public void CreateInfoCard(Vector3 vPos, string sText, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x12CFC5C", Offset = "0x12CFC5C", VA = "0x12CFC5C")]
		public void AddNewLine(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x12CFC6C", Offset = "0x12CFC6C", VA = "0x12CFC6C")]
		public void AddNewLine(LineType type, string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x12CF908", Offset = "0x12CF908", VA = "0x12CF908")]
		private void CreateLineFromQueue(string sNewLine, LineType rSoundType)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x12CFDE4", Offset = "0x12CFDE4", VA = "0x12CFDE4")]
		private void RequestPlaySound(AudioClip sound, Vector3 vPos)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x12CFD60", Offset = "0x12CFD60", VA = "0x12CFD60")]
		private int GetOpenLineIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x12CF89C", Offset = "0x12CF89C", VA = "0x12CF89C")]
		private void AdjustLineHeights(float fAmount, float fCutoffPoint)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x12CFEA4", Offset = "0x12CFEA4", VA = "0x12CFEA4")]
		public void EnableRendering(bool bEnable)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x12D0070", Offset = "0x12D0070", VA = "0x12D0070")]
		public OutputWindowScript()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public enum OverlayType
	{
		[Token(Token = "0x4001531")]
		LoadSketch,
		[Token(Token = "0x4001532")]
		LoadModel,
		[Token(Token = "0x4001533")]
		LoadGeneric,
		[Token(Token = "0x4001534")]
		LoadImages,
		[Token(Token = "0x4001535")]
		Export,
		[Token(Token = "0x4001536")]
		LoadMedia
	}
	[Token(Token = "0x200037A")]
	public enum OverlayState
	{
		[Token(Token = "0x4001538")]
		Hidden,
		[Token(Token = "0x4001539")]
		Visible,
		[Token(Token = "0x400153A")]
		Exiting
	}
	[Token(Token = "0x200037B")]
	public class OverlayManager : MonoBehaviour
	{
		[Token(Token = "0x200037C")]
		private enum OverlayMode
		{
			[Token(Token = "0x4001555")]
			None,
			[Token(Token = "0x4001556")]
			Default
		}

		[Token(Token = "0x200037D")]
		[CompilerGenerated]
		private sealed class <RunInCompositor>d__54 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OverlayManager <>4__this;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OverlayType overlayType;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool bFullProgress;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeDuration;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerator<Null> action;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool showSuccessText;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool <routineInterrupted>5__2;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <t>5__3;

			[Token(Token = "0x170003F8")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60017AA")]
				[Address(RVA = "0x12D1A5C", Offset = "0x12D1A5C", VA = "0x12D1A5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017AC")]
				[Address(RVA = "0x12D1AA4", Offset = "0x12D1AA4", VA = "0x12D1AA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x12D11C4", Offset = "0x12D11C4", VA = "0x12D11C4")]
			[DebuggerHidden]
			public <RunInCompositor>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x12D13C4", Offset = "0x12D13C4", VA = "0x12D13C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x12D1480", Offset = "0x12D1480", VA = "0x12D1480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x12D1A28", Offset = "0x12D1A28", VA = "0x12D1A28")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x12D1980", Offset = "0x12D1980", VA = "0x12D1980")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x12D1A64", Offset = "0x12D1A64", VA = "0x12D1A64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200037E")]
		[CompilerGenerated]
		private struct <FadeCompositorAndOverlayAsync>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float end;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float start;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsed>5__2;

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x12D1AAC", Offset = "0x12D1AAC", VA = "0x12D1AAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x12D1DA8", Offset = "0x12D1DA8", VA = "0x12D1DA8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200037F")]
		[CompilerGenerated]
		private struct <RunInCompositorAsync>d__56<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayManager <>4__this;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayType overlayType;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeDuration;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IProgress<double>, Task<T>> taskCreator;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool showSuccessText;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>u__1;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<T> <inner>5__2;

			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__3;

			[Token(Token = "0x60017AF")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017B0")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000380")]
		[CompilerGenerated]
		private struct <RunInCompositorAsync>d__57<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayType overlayType;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeDuration;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> action;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool showSuccessText;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>u__1;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <result>5__2;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60017B1")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017B2")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000381")]
		[CompilerGenerated]
		private sealed class <AsCoroutine>d__60 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170003FA")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60017B6")]
				[Address(RVA = "0x12D1DF4", Offset = "0x12D1DF4", VA = "0x12D1DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B8")]
				[Address(RVA = "0x12D1E3C", Offset = "0x12D1E3C", VA = "0x12D1E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x12D1364", Offset = "0x12D1364", VA = "0x12D1364")]
			[DebuggerHidden]
			public <AsCoroutine>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x12D1DB4", Offset = "0x12D1DB4", VA = "0x12D1DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x12D1DB8", Offset = "0x12D1DB8", VA = "0x12D1DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x12D1DFC", Offset = "0x12D1DFC", VA = "0x12D1DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000382")]
		[CompilerGenerated]
		private sealed class <ConsumeAsProgress>d__61 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> coroutine;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<float> <coroutineWithProgress>5__2;

			[Token(Token = "0x170003FC")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60017BD")]
				[Address(RVA = "0x12D2134", Offset = "0x12D2134", VA = "0x12D2134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017BF")]
				[Address(RVA = "0x12D217C", Offset = "0x12D217C", VA = "0x12D217C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x12D138C", Offset = "0x12D138C", VA = "0x12D138C")]
			[DebuggerHidden]
			public <ConsumeAsProgress>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x12D1E44", Offset = "0x12D1E44", VA = "0x12D1E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x12D1E60", Offset = "0x12D1E60", VA = "0x12D1E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x12D2084", Offset = "0x12D2084", VA = "0x12D2084")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x12D213C", Offset = "0x12D213C", VA = "0x12D213C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OverlayManager m_Instance;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GvrOverlay m_GvrOverlayPrefab;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_OverlayOffsetDistance;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_OverlayHeight;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture m_BlackTexture;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_OverlayStateTransitionDuration;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_Material;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Font m_Font;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Rect m_LogoArea;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Rect m_TextArea;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_FontSize;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_Size;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_BackgroundColor;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GvrOverlay m_Overlay;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private OverlayMode m_OverlayMode;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_OverlayOn;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Progress<double> m_progress;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture m_GUILogo;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_RefuseProgressChanges;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private OverlayState m_CurrentOverlayState;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_OverlayStateTransitionValue;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private OverlayType m_CurrentOverlayType;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3[] m_TextVertices;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] m_TextUvs;

		[Token(Token = "0x170003F4")]
		public IProgress<double> Progress
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x12D008C", Offset = "0x12D008C", VA = "0x12D008C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		public bool CanDisplayQuickloadOverlay
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x12D0094", Offset = "0x12D0094", VA = "0x12D0094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F6")]
		public OverlayState CurrentOverlayState
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x12D00E4", Offset = "0x12D00E4", VA = "0x12D00E4")]
			get
			{
				return default(OverlayState);
			}
		}

		[Token(Token = "0x170003F7")]
		public bool OverlayEnabled
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x12D00C0", Offset = "0x12D00C0", VA = "0x12D00C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x12D0BE8", Offset = "0x12D0BE8", VA = "0x12D0BE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x12D00EC", Offset = "0x12D00EC", VA = "0x12D00EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x12D0864", Offset = "0x12D0864", VA = "0x12D0864")]
		private void Update()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x12D08D4", Offset = "0x12D08D4", VA = "0x12D08D4")]
		private void SetOverlayAlpha(float ratio)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x12D0C00", Offset = "0x12D0C00", VA = "0x12D0C00")]
		private void SetOverlayTexture(Texture tex)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x12D0C04", Offset = "0x12D0C04", VA = "0x12D0C04")]
		private void PositionOverlay(float distance, float height)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x12D0CCC", Offset = "0x12D0CCC", VA = "0x12D0CCC")]
		public void FadeToCompositor(float fadeTime)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x12D0CD4", Offset = "0x12D0CD4", VA = "0x12D0CD4")]
		public void FadeFromCompositor(float fadeTime)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x12D0CD0", Offset = "0x12D0CD0", VA = "0x12D0CD0")]
		private void FadeToCompositor(float fadeTime, bool fadeToCompositor)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x12D0CD8", Offset = "0x12D0CD8", VA = "0x12D0CD8")]
		public void PauseRendering(bool bPause)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x12D0CDC", Offset = "0x12D0CDC", VA = "0x12D0CDC")]
		private void FadeToBlack(float fadeTime)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x12D0D8C", Offset = "0x12D0D8C", VA = "0x12D0D8C")]
		private void FadeFromBlack(float fadeTime)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x12D0CE4", Offset = "0x12D0CE4", VA = "0x12D0CE4")]
		private void FadeBlack(float fadeTime, bool fadeToBlack)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x12D0D94", Offset = "0x12D0D94", VA = "0x12D0D94")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x12D0F04", Offset = "0x12D0F04", VA = "0x12D0F04")]
		public void SetOverlayFromType(OverlayType type)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x12D0FB4", Offset = "0x12D0FB4", VA = "0x12D0FB4")]
		private void OnProgressChanged(object sender, double value)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x12D0FCC", Offset = "0x12D0FCC", VA = "0x12D0FCC")]
		public void UpdateProgress(float fProg, bool bForce = false)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x12D0FE4", Offset = "0x12D0FE4", VA = "0x12D0FE4")]
		public void RefuseProgressBarChanges(bool bRefuse)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x12D0FF0", Offset = "0x12D0FF0", VA = "0x12D0FF0")]
		public IEnumerator<Null> RunInCompositorWithProgress(OverlayType overlayType, IEnumerator<float> coroutineWithProgress, float fadeDuration)
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x12CADCC", Offset = "0x12CADCC", VA = "0x12CADCC")]
		public IEnumerator<Null> RunInCompositor(OverlayType overlayType, Action action, float fadeDuration, bool bFullProgress = false, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x12D10AC", Offset = "0x12D10AC", VA = "0x12D10AC")]
		[IteratorStateMachine(typeof(<RunInCompositor>d__54))]
		public IEnumerator<Null> RunInCompositor(OverlayType overlayType, IEnumerator<Null> action, float fadeDuration, bool bFullProgress = false, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x12D11EC", Offset = "0x12D11EC", VA = "0x12D11EC")]
		[AsyncStateMachine(typeof(<FadeCompositorAndOverlayAsync>d__55))]
		private Task FadeCompositorAndOverlayAsync(float start, float end, float duration)
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[AsyncStateMachine(typeof(<RunInCompositorAsync>d__56<>))]
		public Task<T> RunInCompositorAsync<T>(OverlayType overlayType, Func<IProgress<double>, Task<T>> taskCreator, float fadeDuration, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[AsyncStateMachine(typeof(<RunInCompositorAsync>d__57<>))]
		public Task<T> RunInCompositorAsync<T>(OverlayType overlayType, Func<T> action, float fadeDuration, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x12D12DC", Offset = "0x12D12DC", VA = "0x12D12DC")]
		public void SetOverlayTransitionRatio(float fRatio)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x12D134C", Offset = "0x12D134C", VA = "0x12D134C")]
		public void HideOverlay()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x12D115C", Offset = "0x12D115C", VA = "0x12D115C")]
		[IteratorStateMachine(typeof(<AsCoroutine>d__60))]
		private static IEnumerator<Null> AsCoroutine(Action action)
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x12D1038", Offset = "0x12D1038", VA = "0x12D1038")]
		[IteratorStateMachine(typeof(<ConsumeAsProgress>d__61))]
		private IEnumerator<Null> ConsumeAsProgress(IEnumerator<float> coroutine)
		{
			return null;
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x12D05BC", Offset = "0x12D05BC", VA = "0x12D05BC")]
		public void RenderLogo(double progress)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x12D030C", Offset = "0x12D030C", VA = "0x12D030C")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x12D13B4", Offset = "0x12D13B4", VA = "0x12D13B4")]
		public OverlayManager()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class OverrideCameraFramerate : MonoBehaviour
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_FramesToSkip;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frameCount;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x12D2184", Offset = "0x12D2184", VA = "0x12D2184")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x12D21E4", Offset = "0x12D21E4", VA = "0x12D21E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x12D2228", Offset = "0x12D2228", VA = "0x12D2228")]
		public OverrideCameraFramerate()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class PanelSweetSpotScript : MonoBehaviour
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_PanelAttachRadius;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_MeshRadius;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_BorderSphere;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector4 m_BorderSphereHighlightPos;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x12D2230", Offset = "0x12D2230", VA = "0x12D2230")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x12D2284", Offset = "0x12D2284", VA = "0x12D2284")]
		public void EnableBorderSphere(bool bEnable, Vector3 vHightlightPos, float fHighlightRadius)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x12D2384", Offset = "0x12D2384", VA = "0x12D2384")]
		public PanelSweetSpotScript()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public abstract class ParametricStrokeCreator
	{
		[Token(Token = "0x400158D")]
		public const float kSecondsToMs = 1000f;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TrTransform m_initialTransform;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_previousFinalRotation;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected double m_initialTime;

		[Token(Token = "0x170003FE")]
		public TrTransform InitialTransform
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x12D238C", Offset = "0x12D238C", VA = "0x12D238C")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x12D2398", Offset = "0x12D2398", VA = "0x12D2398")]
		public ParametricStrokeCreator(TrTransform initialTransform)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x12D2424", Offset = "0x12D2424", VA = "0x12D2424")]
		public IEnumerable<PointerManager.ControlPoint> GetPoints(TrTransform finalTransform)
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		protected abstract IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform);

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x12D24C0", Offset = "0x12D24C0", VA = "0x12D24C0", Slot = "5")]
		public virtual float ProcessBrushSize(float currentBrushSize_RS)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000386")]
	public class SphereCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x2000387")]
		[CompilerGenerated]
		private sealed class <DoGetPoints>d__5 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private TrTransform finalTransform;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public SphereCreator <>4__this;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float <radius>5__2;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <time0>5__3;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private double <time1>5__4;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float <loops>5__5;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float <thetaOffset>5__6;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <pointTotal>5__7;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private TrTransform <spherePose>5__8;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <k>5__9;

			[Token(Token = "0x170003FF")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x60017D1")]
				[Address(RVA = "0x12D2BCC", Offset = "0x12D2BCC", VA = "0x12D2BCC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D3")]
				[Address(RVA = "0x12D2C24", Offset = "0x12D2C24", VA = "0x12D2C24", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x12D25B0", Offset = "0x12D25B0", VA = "0x12D25B0")]
			[DebuggerHidden]
			public <DoGetPoints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x12D25E4", Offset = "0x12D25E4", VA = "0x12D25E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x12D25E8", Offset = "0x12D25E8", VA = "0x12D25E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x12D2BE4", Offset = "0x12D2BE4", VA = "0x12D2BE4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x12D2C8C", Offset = "0x12D2C8C", VA = "0x12D2C8C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x12D2D4C", Offset = "0x12D2D4C", VA = "0x12D2D4C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001591")]
		private const float kMinimumBrushSize_RS = 0.3f;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly float m_BrushSize_RS;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private readonly float m_BrushSize_CS;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x12D24C4", Offset = "0x12D24C4", VA = "0x12D24C4", Slot = "5")]
		public override float ProcessBrushSize(float currentBrushSize_RS)
		{
			return default(float);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x12D24CC", Offset = "0x12D24CC", VA = "0x12D24CC")]
		public SphereCreator(TrTransform initialTransform, float brushSize_RS, float canvasScale)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x12D2520", Offset = "0x12D2520", VA = "0x12D2520", Slot = "4")]
		[IteratorStateMachine(typeof(<DoGetPoints>d__5))]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x2000388")]
	public class LineCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x2000389")]
		[CompilerGenerated]
		private sealed class <DoGetPoints>d__4 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LineCreator <>4__this;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TrTransform finalTransform;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private double <t0>5__2;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <t1>5__3;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private TrTransform <xf0>5__4;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TrTransform <xf1>5__5;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private int <n>5__6;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private int <i>5__7;

			[Token(Token = "0x17000401")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x60017DB")]
				[Address(RVA = "0x12D3758", Offset = "0x12D3758", VA = "0x12D3758", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017DD")]
				[Address(RVA = "0x12D37B0", Offset = "0x12D37B0", VA = "0x12D37B0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x12D2E3C", Offset = "0x12D2E3C", VA = "0x12D2E3C")]
			[DebuggerHidden]
			public <DoGetPoints>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x12D2E70", Offset = "0x12D2E70", VA = "0x12D2E70", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x12D2E74", Offset = "0x12D2E74", VA = "0x12D2E74", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x12D3770", Offset = "0x12D3770", VA = "0x12D3770", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x12D3818", Offset = "0x12D3818", VA = "0x12D3818", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x12D38D8", Offset = "0x12D38D8", VA = "0x12D38D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_flat;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_qPreviousInput;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion m_qPreviousOutput;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x12D2D50", Offset = "0x12D2D50", VA = "0x12D2D50")]
		public LineCreator(TrTransform initialTransform, bool flat = false)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x12D2DAC", Offset = "0x12D2DAC", VA = "0x12D2DAC", Slot = "4")]
		[IteratorStateMachine(typeof(<DoGetPoints>d__4))]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x200038A")]
	public class CircleCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x200038B")]
		private struct ComputeTangentState
		{
			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 nRadius;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 preferred;
		}

		[Token(Token = "0x200038C")]
		[CompilerGenerated]
		private sealed class <DoGetPoints>d__6 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CircleCreator <>4__this;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TrTransform finalTransform;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private double <t0>5__2;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <t1>5__3;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 <center>5__4;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 <nAxis>5__5;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TrTransform <xf0>5__6;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private int <n>5__7;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private int <i>5__8;

			[Token(Token = "0x17000403")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x60017E8")]
				[Address(RVA = "0x12D4298", Offset = "0x12D4298", VA = "0x12D4298", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0x12D42F0", Offset = "0x12D42F0", VA = "0x12D42F0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x12D3D64", Offset = "0x12D3D64", VA = "0x12D3D64")]
			[DebuggerHidden]
			public <DoGetPoints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x12D3D98", Offset = "0x12D3D98", VA = "0x12D3D98", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x12D3D9C", Offset = "0x12D3D9C", VA = "0x12D3D9C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x12D42B0", Offset = "0x12D42B0", VA = "0x12D42B0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x12D4358", Offset = "0x12D4358", VA = "0x12D4358", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x12D4418", Offset = "0x12D4418", VA = "0x12D4418", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 m_vPreferredTangent;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x12D38DC", Offset = "0x12D38DC", VA = "0x12D38DC")]
		public CircleCreator(TrTransform initialTransform)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x12D394C", Offset = "0x12D394C", VA = "0x12D394C")]
		private static Vector3 InDirectionOf(Vector3 desired, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x12D3984", Offset = "0x12D3984", VA = "0x12D3984")]
		private static Vector3 PerpendicularPart(Vector3 nPerp, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x12D39B4", Offset = "0x12D39B4", VA = "0x12D39B4")]
		private Vector3 ComputeTangent(ComputeTangentState s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x12D3CD4", Offset = "0x12D3CD4", VA = "0x12D3CD4", Slot = "4")]
		[IteratorStateMachine(typeof(<DoGetPoints>d__6))]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x200038D")]
	public class ParticlePositionedScript : MonoBehaviour
	{
		[Token(Token = "0x200038E")]
		public class ManagedObject
		{
			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Object;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrailRenderer m_TrailRenderer;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_Enabled;

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x26D8548", Offset = "0x26D8548", VA = "0x26D8548")]
			public ManagedObject()
			{
			}
		}

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_ObjectPrefab;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_NumObjects;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ManagedObject[] m_Objects;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] m_ObjectUpdated;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<uint, int> m_ObjectParticleMap;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] m_Particles;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_BaseTrailTime;

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x26D7D98", Offset = "0x26D7D98", VA = "0x26D7D98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x26D80EC", Offset = "0x26D80EC", VA = "0x26D80EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x26D80F0", Offset = "0x26D80F0", VA = "0x26D80F0")]
		protected void UpdateObjects()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x26D84EC", Offset = "0x26D84EC", VA = "0x26D84EC")]
		private int GetOpenIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x26D7E88", Offset = "0x26D7E88", VA = "0x26D7E88")]
		private void PopulateObjects()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x26D8550", Offset = "0x26D8550", VA = "0x26D8550")]
		public ParticlePositionedScript()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class PassthroughManager : MonoBehaviour
	{
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x26D8558", Offset = "0x26D8558", VA = "0x26D8558")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x26D855C", Offset = "0x26D855C", VA = "0x26D855C")]
		public PassthroughManager()
		{
		}
	}
	[Token(Token = "0x2000390")]
	[CreateAssetMenu(fileName = "PlatformConfig", menuName = "Per Platform Config", order = 1)]
	public class PlatformConfig : ScriptableObject
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int HullBrushMaxVertInputs;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int HullBrushMaxKnots;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ReferenceImagesMaxFileSize;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ReferenceImagesMaxDimension;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ReferenceImagesResizeDimension;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MemoryWarningVertCount;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UseFileSystemWatcher;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool EnableAutosave;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Loading")]
		public float QuickLoadMaxDistancePerFrame;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject IntroSketchPrefab;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Poly")]
		[Tooltip("Preload Poly models while browsing, without requiring the user to click")]
		public bool EnablePolyPreload;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[Tooltip("Workaround for b/150868218, but the workaround requires lots of memory")]
		public bool AvoidUploadHandlerFile;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[Header("Export")]
		public bool EnableExportFbx;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool EnableExportGlb;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool EnableExportJson;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool EnableExportUsd;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool EnableExportLatk;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool EnableExportMemoryOptimization;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Multicam")]
		public bool EnableMulticamPreview;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MultiCamStyle[] EnabledMulticamStyles;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int MaxSnapshotDimension;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve FrameRateToPreviewRenderGap;

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x26D8564", Offset = "0x26D8564", VA = "0x26D8564")]
		public PlatformConfig()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public enum PlaybackCapabilities
	{

	}
	[Token(Token = "0x2000392")]
	public interface IScenePlayback
	{
		[Token(Token = "0x17000405")]
		int MaxPointerUnderrun
		{
			[Token(Token = "0x60017FB")]
			get;
		}

		[Token(Token = "0x17000406")]
		int MemoryObjectsDrawn
		{
			[Token(Token = "0x60017FC")]
			get;
		}

		[Token(Token = "0x60017F7")]
		bool Update();

		[Token(Token = "0x60017F8")]
		void QuickLoadRemaining();

		[Token(Token = "0x60017F9")]
		void AddStroke(Stroke stroke);

		[Token(Token = "0x60017FA")]
		void RemoveStroke(Stroke stroke);
	}
	[Token(Token = "0x2000393")]
	public class StrokePlaybackByDistance : StrokePlayback
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScenePlaybackByStrokeDistance m_parent;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_playBackAtStrokeGranularity;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x26D8574", Offset = "0x26D8574", VA = "0x26D8574")]
		public StrokePlaybackByDistance(ScenePlaybackByStrokeDistance parent)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x26D85F8", Offset = "0x26D85F8", VA = "0x26D85F8")]
		public void Init(Stroke stroke, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x26D8A0C", Offset = "0x26D8A0C", VA = "0x26D8A0C", Slot = "5")]
		protected override bool IsControlPointReady(PointerManager.ControlPoint controlPoint)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000394")]
	public class ScenePlaybackByStrokeDistance : IScenePlayback
	{
		[Token(Token = "0x2000395")]
		[CompilerGenerated]
		private sealed class <DrawWhileMetersRemaining>d__14 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScenePlaybackByStrokeDistance <>4__this;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<Stroke> strokes;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CanvasScript targetCanvas;

			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private StrokePlaybackByDistance <playback>5__2;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<Stroke> <>7__wrap2;

			[Token(Token = "0x1700040C")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001810")]
				[Address(RVA = "0x26D9670", Offset = "0x26D9670", VA = "0x26D9670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001812")]
				[Address(RVA = "0x26D96B8", Offset = "0x26D96B8", VA = "0x26D96B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0x26D8D80", Offset = "0x26D8D80", VA = "0x26D8D80")]
			[DebuggerHidden]
			public <DrawWhileMetersRemaining>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0x26D8DCC", Offset = "0x26D8DCC", VA = "0x26D8DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600180E")]
			[Address(RVA = "0x26D8DE8", Offset = "0x26D8DE8", VA = "0x26D8DE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0x26D95C0", Offset = "0x26D95C0", VA = "0x26D95C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0x26D9678", Offset = "0x26D9678", VA = "0x26D9678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Timeslice> m_drawer;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_MemoryObjectsDrawn;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_metersRemaining;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_OutOfMeters;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_bQuickLoad;

		[Token(Token = "0x17000407")]
		public bool QuickLoad
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x26D8B54", Offset = "0x26D8B54", VA = "0x26D8B54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000408")]
		private float MetersPerSecond
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x26D8B5C", Offset = "0x26D8B5C", VA = "0x26D8B5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000409")]
		public bool HasMetersRemaining
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x26D8B44", Offset = "0x26D8B44", VA = "0x26D8B44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040A")]
		public int MaxPointerUnderrun
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x26D8DBC", Offset = "0x26D8DBC", VA = "0x26D8DBC", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040B")]
		public int MemoryObjectsDrawn
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x26D8DC4", Offset = "0x26D8DC4", VA = "0x26D8DC4", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x26D8B20", Offset = "0x26D8B20", VA = "0x26D8B20")]
		public void TryDecrementDistance(float decrementAmount)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x26D8BD0", Offset = "0x26D8BD0", VA = "0x26D8BD0")]
		public ScenePlaybackByStrokeDistance(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x26D8C90", Offset = "0x26D8C90", VA = "0x26D8C90", Slot = "4")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x26D8C14", Offset = "0x26D8C14", VA = "0x26D8C14")]
		[IteratorStateMachine(typeof(<DrawWhileMetersRemaining>d__14))]
		private IEnumerator<Timeslice> DrawWhileMetersRemaining(IEnumerable<Stroke> strokes, CanvasScript targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x26D8DA8", Offset = "0x26D8DA8", VA = "0x26D8DA8", Slot = "5")]
		public void QuickLoadRemaining()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x26D8DB4", Offset = "0x26D8DB4", VA = "0x26D8DB4", Slot = "6")]
		public void AddStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x26D8DB8", Offset = "0x26D8DB8", VA = "0x26D8DB8", Slot = "7")]
		public void RemoveStroke(Stroke stroke)
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class StrokePlaybackByTime : StrokePlayback
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LinkedListNode<Stroke> m_strokeNode;

		[Token(Token = "0x1700040E")]
		public LinkedListNode<Stroke> StrokeNode
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x26D96C0", Offset = "0x26D96C0", VA = "0x26D96C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x26D96C8", Offset = "0x26D96C8", VA = "0x26D96C8")]
		public void Init(LinkedListNode<Stroke> memoryObjectNode, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x26D9730", Offset = "0x26D9730", VA = "0x26D9730", Slot = "4")]
		public override void ClearPlayback()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x26D9770", Offset = "0x26D9770", VA = "0x26D9770", Slot = "5")]
		protected override bool IsControlPointReady(PointerManager.ControlPoint controlPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x26D97EC", Offset = "0x26D97EC", VA = "0x26D97EC")]
		public StrokePlaybackByTime()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class ScenePlaybackByTimeLayered : IScenePlayback
	{
		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StrokePlaybackByTime[] m_strokePlaybacks;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_lastTimeMs;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SortedLinkedList<Stroke> m_unrenderedStrokes;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SortedLinkedList<Stroke> m_renderedStrokes;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_strokeCount;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_maxPointerUnderrun;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasScript m_targetCanvas;

		[Token(Token = "0x1700040F")]
		public int MaxPointerUnderrun
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x26D984C", Offset = "0x26D984C", VA = "0x26D984C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000410")]
		public int MemoryObjectsDrawn
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x26D9854", Offset = "0x26D9854", VA = "0x26D9854", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x26D985C", Offset = "0x26D985C", VA = "0x26D985C")]
		public ScenePlaybackByTimeLayered(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x26D9B8C", Offset = "0x26D9B8C", VA = "0x26D9B8C", Slot = "4")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x26DA174", Offset = "0x26DA174", VA = "0x26DA174", Slot = "6")]
		public void AddStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x26DA1E0", Offset = "0x26DA1E0", VA = "0x26DA1E0", Slot = "7")]
		public void RemoveStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x26DA25C", Offset = "0x26DA25C", VA = "0x26DA25C", Slot = "5")]
		public void QuickLoadRemaining()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public abstract class StrokePlayback
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<Guid> sm_BrushGuidWarnings;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Stroke m_stroke;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PointerScript m_pointer;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextControlPoint;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isDone;

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x26D86D0", Offset = "0x26D86D0", VA = "0x26D86D0")]
		public void BaseInit(Stroke stroke, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x26D9738", Offset = "0x26D9738", VA = "0x26D9738", Slot = "4")]
		public virtual void ClearPlayback()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x26DA740", Offset = "0x26DA740", VA = "0x26DA740")]
		public bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		protected abstract bool IsControlPointReady(PointerManager.ControlPoint controlPoint);

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x26D91CC", Offset = "0x26D91CC", VA = "0x26D91CC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x26D85E8", Offset = "0x26D85E8", VA = "0x26D85E8")]
		protected StrokePlayback()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class PlyReader
	{
		[Token(Token = "0x200039B")]
		private enum DataProperty
		{
			[Token(Token = "0x400160D")]
			Invalid,
			[Token(Token = "0x400160E")]
			R8,
			[Token(Token = "0x400160F")]
			G8,
			[Token(Token = "0x4001610")]
			B8,
			[Token(Token = "0x4001611")]
			A8,
			[Token(Token = "0x4001612")]
			R16,
			[Token(Token = "0x4001613")]
			G16,
			[Token(Token = "0x4001614")]
			B16,
			[Token(Token = "0x4001615")]
			A16,
			[Token(Token = "0x4001616")]
			SingleX,
			[Token(Token = "0x4001617")]
			SingleY,
			[Token(Token = "0x4001618")]
			SingleZ,
			[Token(Token = "0x4001619")]
			DoubleX,
			[Token(Token = "0x400161A")]
			DoubleY,
			[Token(Token = "0x400161B")]
			DoubleZ,
			[Token(Token = "0x400161C")]
			Data8,
			[Token(Token = "0x400161D")]
			Data16,
			[Token(Token = "0x400161E")]
			Data32,
			[Token(Token = "0x400161F")]
			Data64
		}

		[Token(Token = "0x200039C")]
		private class DataHeader
		{
			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<DataProperty> properties;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int vertexCount;

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x26DC52C", Offset = "0x26DC52C", VA = "0x26DC52C")]
			public DataHeader()
			{
			}
		}

		[Token(Token = "0x200039D")]
		private class DataBody
		{
			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> vertices;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Color32> colors;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds bounds;

			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int[] cornerIndices;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3[] corners;

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x26DC5B0", Offset = "0x26DC5B0", VA = "0x26DC5B0")]
			public DataBody(int vertexCount)
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x26DC6D4", Offset = "0x26DC6D4", VA = "0x26DC6D4")]
			public void AddPoint(float x, float y, float z, byte r, byte g, byte b, byte a)
			{
			}
		}

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Material m_vertexColorMaterial;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string m_path;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<string> m_warnings;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ImportMaterialCollector m_collector;

		[Token(Token = "0x4001606")]
		private const int RIGHT = 0;

		[Token(Token = "0x4001607")]
		private const int LEFT = 1;

		[Token(Token = "0x4001608")]
		private const int TOP = 2;

		[Token(Token = "0x4001609")]
		private const int BOTTOM = 3;

		[Token(Token = "0x400160A")]
		private const int FRONT = 4;

		[Token(Token = "0x400160B")]
		private const int BACK = 5;

		[Token(Token = "0x17000411")]
		private List<string> warnings
		{
			[Token(Token = "0x600182A")]
			[Address(RVA = "0x26DA8F0", Offset = "0x26DA8F0", VA = "0x26DA8F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x26DA8F8", Offset = "0x26DA8F8", VA = "0x26DA8F8")]
		public PlyReader(string path)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x26DA9FC", Offset = "0x26DA9FC", VA = "0x26DA9FC")]
		public (GameObject, List<string>, ImportMaterialCollector) Import()
		{
			return default((GameObject, List<string>, ImportMaterialCollector));
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x26DAC9C", Offset = "0x26DAC9C", VA = "0x26DAC9C")]
		private Mesh ImportAsMesh(string path)
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x26DC508", Offset = "0x26DC508", VA = "0x26DC508")]
		private static int GetPropertySize(DataProperty p)
		{
			return default(int);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x26DB26C", Offset = "0x26DB26C", VA = "0x26DB26C")]
		private DataHeader ReadDataHeader(StreamReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x26DBD2C", Offset = "0x26DBD2C", VA = "0x26DBD2C")]
		private DataBody ReadDataBody(DataHeader header, BinaryReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200039E")]
	public class PodiumScript : MonoBehaviour
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_Base;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_Stand;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x26DC9CC", Offset = "0x26DC9CC", VA = "0x26DC9CC")]
		public PodiumScript()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class PointerManager : MonoBehaviour
	{
		[Token(Token = "0x20003A0")]
		public enum SymmetryMode
		{
			[Token(Token = "0x400165D")]
			None,
			[Token(Token = "0x400165E")]
			SinglePlane,
			[Token(Token = "0x400165F")]
			FourAroundY,
			[Token(Token = "0x4001660")]
			DebugMultiple,
			[Token(Token = "0x4001661")]
			TwoHanded
		}

		[Token(Token = "0x20003A1")]
		public struct ControlPoint
		{
			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_Pos;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion m_Orient;

			[Token(Token = "0x4001664")]
			public const uint EXTENSIONS = 3u;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_Pressure;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint m_TimestampMs;
		}

		[Token(Token = "0x20003A2")]
		protected class PointerData
		{
			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerScript m_Script;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrTransform m_StraightEdgeXf_CS;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool m_UiEnabled;

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x26DD980", Offset = "0x26DD980", VA = "0x26DD980")]
			public PointerData()
			{
			}
		}

		[Token(Token = "0x20003A3")]
		private enum LineCreationState
		{
			[Token(Token = "0x400166B")]
			WaitingForInput,
			[Token(Token = "0x400166C")]
			RecordingInput,
			[Token(Token = "0x400166D")]
			ProcessingStraightEdge
		}

		[Token(Token = "0x20003A4")]
		private struct StoredBrushInfo
		{
			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BrushDescriptor brush;

			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float size01;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;
		}

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PointerManager m_Instance;

		[Token(Token = "0x400162A")]
		private const float STRAIGHTEDGE_PRESSURE = 1f;

		[Token(Token = "0x400162B")]
		private const int STRAIGHTEDGE_DRAWIN_FRAMES = 16;

		[Token(Token = "0x400162C")]
		private const int DEBUG_MULTIPLE_NUM_POINTERS = 3;

		[Token(Token = "0x400162D")]
		private const string PLAYER_PREFS_POINTER_ANGLE_OLD = "Pointer_Angle";

		[Token(Token = "0x400162E")]
		private const string PLAYER_PREFS_POINTER_ANGLE = "Pointer_Angle2";

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_MaxPointers;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_MainPointerPrefab;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_AuxPointerPrefab;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_DefaultPointerAngle;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_DebugViewControlPoints;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StraightEdgeGuideScript m_StraightEdgeGuide;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BrushDescriptor m_StraightEdgeProxyBrush;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_SymmetryWidget;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_SymmetryDebugMultipleOffset;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_SymmetryPointerStencilBoost;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_GestureMinCircleSize;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_GestureBeginDist;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_GestureCloseLoopDist;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_GestureStepDist;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_GestureMaxAngle;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_NumActivePointers;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_PointersRenderingRequested;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_PointersRenderingActive;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool m_PointersHideOnControllerLoss;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_FreePaintPointerAngle;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LineCreationState m_CurrentLineCreationState;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_LineEnabled;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_EatLineEnabledInputFrames;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerData[] m_Pointers;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_InPlaybackMode;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PointerData m_MainPointerData;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private StoredBrushInfo? m_StoredBrushInfo;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_StraightEdgeEnabled;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_StraightEdgeProxyActive;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CircleGesture m_StraightEdgeGesture;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<ControlPoint> m_StraightEdgeControlPoints_CS;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int m_StraightEdgeControlPointIndex;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private SymmetryMode m_CurrentSymmetryMode;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SymmetryWidget m_SymmetryWidgetScript;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_UseSymmetryWidget;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_SketchSurfaceLineDepthVarianceBase;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_SketchSurfaceLineDepthVariance;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_SketchSurfaceLineDepthIncrement;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_SketchSurfaceLineDepth;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_SketchSurfaceLineWasEnabled;

		[Token(Token = "0x17000412")]
		private Color m_lastChosenColor
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x26DC9D4", Offset = "0x26DC9D4", VA = "0x26DC9D4")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x26DC9E4", Offset = "0x26DC9E4", VA = "0x26DC9E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public Vector3 colorJitter
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x26DC9F4", Offset = "0x26DC9F4", VA = "0x26DC9F4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x26DCA04", Offset = "0x26DCA04", VA = "0x26DCA04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public float sizeJitter
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x26DCA14", Offset = "0x26DCA14", VA = "0x26DCA14")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x26DCA1C", Offset = "0x26DCA1C", VA = "0x26DCA1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public float positionJitter
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x26DCA24", Offset = "0x26DCA24", VA = "0x26DCA24")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x26DCA2C", Offset = "0x26DCA2C", VA = "0x26DCA2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public PointerScript MainPointer
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x26DCD1C", Offset = "0x26DCD1C", VA = "0x26DCD1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		public Color PointerColor
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x26DCE5C", Offset = "0x26DCE5C", VA = "0x26DCE5C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x26DCE84", Offset = "0x26DCE84", VA = "0x26DCE84")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public float PointerPressure
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x26DCEDC", Offset = "0x26DCEDC", VA = "0x26DCEDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public bool IndicateBrushSize
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0x26DCF38", Offset = "0x26DCF38", VA = "0x26DCF38")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public int NumTransientPointers
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x26D9B6C", Offset = "0x26D9B6C", VA = "0x26D9B6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700041B")]
		private int NumUserPointers
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x26DCFDC", Offset = "0x26DCFDC", VA = "0x26DCFDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700041C")]
		public SymmetryMode CurrentSymmetryMode
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x26DD244", Offset = "0x26DD244", VA = "0x26DD244")]
			get
			{
				return default(SymmetryMode);
			}
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x26DCFE4", Offset = "0x26DCFE4", VA = "0x26DCFE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public Plane? SymmetryPlane_RS
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x26DD24C", Offset = "0x26DD24C", VA = "0x26DD24C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		public bool SymmetryModeEnabled
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x26DD2D4", Offset = "0x26DD2D4", VA = "0x26DD2D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041F")]
		public StraightEdgeGuideScript StraightEdgeGuide
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x26DD31C", Offset = "0x26DD31C", VA = "0x26DD31C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		public bool StraightEdgeModeEnabled
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0x26DD324", Offset = "0x26DD324", VA = "0x26DD324")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001851")]
			[Address(RVA = "0x26DD32C", Offset = "0x26DD32C", VA = "0x26DD32C")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public bool StraightEdgeGuideIsLine
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0x26DD338", Offset = "0x26DD338", VA = "0x26DD338")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000422")]
		public float FreePaintPointerAngle
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0x26DD35C", Offset = "0x26DD35C", VA = "0x26DD35C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x26DD364", Offset = "0x26DD364", VA = "0x26DD364")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public bool JitterEnabled
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x26DD3C0", Offset = "0x26DD3C0", VA = "0x26DD3C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<BrushDescriptor> OnMainPointerBrushChange
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0x26DCA34", Offset = "0x26DCA34", VA = "0x26DCA34")]
			add
			{
			}
			[Token(Token = "0x600183E")]
			[Address(RVA = "0x26DCB08", Offset = "0x26DCB08", VA = "0x26DCB08")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action OnPointerColorChange
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x26DCBDC", Offset = "0x26DCBDC", VA = "0x26DCBDC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x26DCC7C", Offset = "0x26DCC7C", VA = "0x26DCC7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x26DCD38", Offset = "0x26DCD38", VA = "0x26DCD38")]
		private void ChangeAllPointerColorsDirectly(Color value)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x26DD2E4", Offset = "0x26DD2E4", VA = "0x26DD2E4")]
		public void SymmetryWidgetFromMirror(Mirror data)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x26DD300", Offset = "0x26DD300", VA = "0x26DD300")]
		public Mirror SymmetryWidgetToMirror()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x26DD40C", Offset = "0x26DD40C", VA = "0x26DD40C")]
		public static void ClearPlayerPrefs()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x26D91B0", Offset = "0x26D91B0", VA = "0x26D91B0")]
		public PointerScript GetPointer(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x26DA138", Offset = "0x26DA138", VA = "0x26DA138")]
		public PointerScript GetTransientPointer(int i)
		{
			return null;
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x26DD4A8", Offset = "0x26DD4A8", VA = "0x26DD4A8")]
		public float GetPointerBrushSize01(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x26DD54C", Offset = "0x26DD54C", VA = "0x26DD54C")]
		public bool IsStraightEdgeProxyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x26DD554", Offset = "0x26DD554", VA = "0x26DD554")]
		public bool IsMainPointerCreatingStroke()
		{
			return default(bool);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x26DD5D4", Offset = "0x26DD5D4", VA = "0x26DD5D4")]
		public bool IsMainPointerProcessingLine()
		{
			return default(bool);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x26DD5E4", Offset = "0x26DD5E4", VA = "0x26DD5E4")]
		public static bool MainPointerIsPainting()
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x26DD664", Offset = "0x26DD664", VA = "0x26DD664")]
		public void SetInPlaybackMode(bool bInPlaybackMode)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x26DD670", Offset = "0x26DD670", VA = "0x26DD670")]
		public void EatLineEnabledInput()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x26DD67C", Offset = "0x26DD67C", VA = "0x26DD67C")]
		public void EnableLine(bool bEnable)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x26DD6A4", Offset = "0x26DD6A4", VA = "0x26DD6A4")]
		public bool IsLineEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x26DD6AC", Offset = "0x26DD6AC", VA = "0x26DD6AC")]
		public void UseSymmetryWidget(bool bUse)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x26DD6B8", Offset = "0x26DD6B8", VA = "0x26DD6B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x26DD988", Offset = "0x26DD988", VA = "0x26DD988")]
		private void Start()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x26DDACC", Offset = "0x26DDACC", VA = "0x26DDACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x26DE24C", Offset = "0x26DE24C", VA = "0x26DE24C")]
		public void StoreBrushInfo()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x26DE308", Offset = "0x26DE308", VA = "0x26DE308")]
		public void RestoreBrushInfo()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x26DDA60", Offset = "0x26DDA60", VA = "0x26DDA60")]
		public void RefreshFreePaintPointerAngle()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x26DE13C", Offset = "0x26DE13C", VA = "0x26DE13C")]
		private void SetPointersRenderingEnabled(bool bEnable)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x26DE594", Offset = "0x26DE594", VA = "0x26DE594")]
		public void EnablePointerStrokeGeneration(bool bActivate)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x26DE610", Offset = "0x26DE610", VA = "0x26DE610")]
		public void EnablePointerLights(bool bEnable)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x26DE678", Offset = "0x26DE678", VA = "0x26DE678")]
		public void RequestPointerRendering(bool bEnable)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x26DE684", Offset = "0x26DE684", VA = "0x26DE684")]
		public void SetPointersAudioForPlayback()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x26DD470", Offset = "0x26DD470", VA = "0x26DD470")]
		private PointerData GetPointerData(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x26DE80C", Offset = "0x26DE80C", VA = "0x26DE80C")]
		public void AllowPointerPreviewLine(bool bAllow)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x26DE1E0", Offset = "0x26DE1E0", VA = "0x26DE1E0")]
		public void DisablePointerPreviewLine()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x26DE9A0", Offset = "0x26DE9A0", VA = "0x26DE9A0")]
		public void ResetPointerAudio()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x26DEC24", Offset = "0x26DEC24", VA = "0x26DEC24")]
		public void SetPointerPreviewLineDelayTimer()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x26DEC90", Offset = "0x26DEC90", VA = "0x26DEC90")]
		public void ExplicitlySetAllPointersBrushSize(float fSize)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x26DE4C0", Offset = "0x26DE4C0", VA = "0x26DE4C0")]
		public void MarkAllBrushSizeUsed()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x26DE444", Offset = "0x26DE444", VA = "0x26DE444")]
		public void SetAllPointersBrushSize01(float t)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x26DEE3C", Offset = "0x26DEE3C", VA = "0x26DEE3C")]
		public void AdjustAllPointersBrushSize01(float dt)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x26DE3D0", Offset = "0x26DE3D0", VA = "0x26DE3D0")]
		public void SetBrushForAllPointers(BrushDescriptor desc)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x26DF064", Offset = "0x26DF064", VA = "0x26DF064")]
		public void SetPointerTransform(InputManager.ControllerName name, Vector3 v, Quaternion q)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x26DF824", Offset = "0x26DF824", VA = "0x26DF824")]
		public void SetMainPointerPosition(Vector3 vPos)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x26DF888", Offset = "0x26DF888", VA = "0x26DF888")]
		public void SetMainPointerRotation(Quaternion qRot)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x26DF8F4", Offset = "0x26DF8F4", VA = "0x26DF8F4")]
		public void SetMainPointerForward(Vector3 vForward)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x26DCFEC", Offset = "0x26DCFEC", VA = "0x26DCFEC")]
		public void SetSymmetryMode(SymmetryMode mode, bool recordCommand = true)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x26DF9E0", Offset = "0x26DF9E0", VA = "0x26DF9E0")]
		public void ResetSymmetryToHome()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x26DF9FC", Offset = "0x26DF9FC", VA = "0x26DF9FC")]
		public void BringSymmetryToUser()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x26DFA18", Offset = "0x26DFA18", VA = "0x26DFA18")]
		public TrTransform GetSymmetryTransformFor(PointerScript pointer, TrTransform xfMain)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x26DF110", Offset = "0x26DF110", VA = "0x26DF110")]
		private void UpdateSymmetryPointerTransforms()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x26DFD98", Offset = "0x26DFD98", VA = "0x26DFD98")]
		private void OnDrawDisallowed()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x26DFE08", Offset = "0x26DFE08", VA = "0x26DFE08")]
		private int NumFreePlaybackPointers()
		{
			return default(int);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x26DFE80", Offset = "0x26DFE80", VA = "0x26DFE80")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x26E02F0", Offset = "0x26E02F0", VA = "0x26E02F0")]
		private void CheckGestures()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x26E0140", Offset = "0x26E0140", VA = "0x26E0140")]
		private void Transition_WaitingForInput_RecordingInput()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x26E1068", Offset = "0x26E1068", VA = "0x26E1068")]
		public Color GenerateJitteredColor(float colorLuminanceMin)
		{
			return default(Color);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x26E10F8", Offset = "0x26E10F8", VA = "0x26E10F8")]
		public float GenerateJitteredSize(BrushDescriptor desc, float currentSize)
		{
			return default(float);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x26E1198", Offset = "0x26E1198", VA = "0x26E1198")]
		public Vector3 GenerateJitteredPosition(Vector3 currentPos, float jitterAmount)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x26E0ABC", Offset = "0x26E0ABC", VA = "0x26E0ABC")]
		private void Transition_RecordingInput_ProcessingStraightEdge(List<ControlPoint> cps)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x26E0A54", Offset = "0x26E0A54", VA = "0x26E0A54")]
		private void Transition_RecordingInput_WaitingForInput()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x26E0CE0", Offset = "0x26E0CE0", VA = "0x26E0CE0")]
		private void State_ProcessingStraightEdge(bool terminate)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x26E0610", Offset = "0x26E0610", VA = "0x26E0610")]
		private void InitiateLine(bool isContinue = false)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x26E0FE0", Offset = "0x26E0FE0", VA = "0x26E0FE0")]
		private void InitiateLineAt(TrTransform mainPointerXf_CS)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x26E04EC", Offset = "0x26E04EC", VA = "0x26E04EC")]
		private void FinalizeLine(bool isContinue = false, bool discard = false)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x26E2638", Offset = "0x26E2638", VA = "0x26E2638")]
		public PointerManager()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class PointerScript : MonoBehaviour
	{
		[Token(Token = "0x20003A7")]
		public struct PreviewControlPoint
		{
			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_BirthTime;

			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TrTransform m_xf_LS;
		}

		[Token(Token = "0x20003A8")]
		public enum BrushLerp
		{
			[Token(Token = "0x40016A7")]
			Default,
			[Token(Token = "0x40016A8")]
			Radius,
			[Token(Token = "0x40016A9")]
			Area,
			[Token(Token = "0x40016AA")]
			ScaleInvariant,
			[Token(Token = "0x40016AB")]
			SqrtRadius
		}

		[Token(Token = "0x4001673")]
		private const float m_BasePreviewIntensity = 4f;

		[Token(Token = "0x4001674")]
		private const float m_GlowPreviewIntensity = 8f;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light m_PreviewLight;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_PreviewLightScalar;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_Mesh;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_PrimaryMeshes;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_BrushSizeIndicator;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_BrushPressureIndicator;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_PreviewLineEnabled;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_PreviewLineControlPointLife;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_PreviewLineIdealLength;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GvrAudioSource[] m_AudioSources;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2 m_BrushAudioPitchVelocityRange;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip m_BrushPlaybackAudioClip;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_AllowPreviewLight;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color m_CurrentColor;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_GlowPreviewEnabled;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_InitialBrushSizeScale;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BrushDescriptor m_CurrentBrush;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_CurrentBrushSize;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 m_BrushSizeRange;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_CurrentPressure;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BaseBrushScript m_CurrentLine;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParametricStrokeCreator m_CurrentCreator;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_ParametricCreatorBackupStrokeSize;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_AudioVolumeDesired;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_CurrentTotalVolume;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_BrushAudioMaxVolume;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_BrushAudioAdjustSpeedUp;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_BrushAudioAdjustSpeedDown;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector2 m_BrushAudioVolumeVelocityRange;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_BrushAudioBasePitch;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_BrushAudioMaxPitchShift;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_AudioPitchDesired;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool m_AllowPreviewLine;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_AllowPreviewLineTimer;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private BaseBrushScript m_PreviewLine;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<PreviewControlPoint> m_PreviewControlPoints;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<PointerManager.ControlPoint> m_ControlPoints;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_LastControlPointIsKeeper;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 m_PreviousPosition;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_LineDepth;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_LineLength_CS;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool m_ShowDebugControlPoints;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Vector3> m_DebugViewControlPoints;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float? m_LastUsedBrushSize_CS;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private CanvasScript m_SubscribedCanvas;

		[Token(Token = "0x17000424")]
		public float BrushSize01
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x26DD4E0", Offset = "0x26DD4E0", VA = "0x26DD4E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x26DEDC4", Offset = "0x26DEDC4", VA = "0x26DEDC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public BrushDescriptor CurrentBrush
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x26E28FC", Offset = "0x26E28FC", VA = "0x26E28FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189B")]
			[Address(RVA = "0x26E2904", Offset = "0x26E2904", VA = "0x26E2904")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public float BrushSizeAbsolute
		{
			[Token(Token = "0x600189C")]
			[Address(RVA = "0x26E2908", Offset = "0x26E2908", VA = "0x26E2908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x26DED1C", Offset = "0x26DED1C", VA = "0x26DED1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public float MonoscopicLineDepth
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x26E29B4", Offset = "0x26E29B4", VA = "0x26E29B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public uint TimestampMs
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x26E25D0", Offset = "0x26E25D0", VA = "0x26E25D0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000429")]
		public int ChildIndex
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x26E29BC", Offset = "0x26E29BC", VA = "0x26E29BC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x26E29C4", Offset = "0x26E29C4", VA = "0x26E29C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public BaseBrushScript CurrentBrushScript
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x26E29CC", Offset = "0x26E29CC", VA = "0x26E29CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<BrushDescriptor> OnBrushChange
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x26DCA54", Offset = "0x26DCA54", VA = "0x26DCA54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x26DCB28", Offset = "0x26DCB28", VA = "0x26DCB28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x26E27C4", Offset = "0x26E27C4", VA = "0x26E27C4")]
		private float _FromRadius(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x26E2860", Offset = "0x26E2860", VA = "0x26E2860")]
		private float _ToRadius(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x26DDEA4", Offset = "0x26DDEA4", VA = "0x26DDEA4")]
		public float GetMovementDelta()
		{
			return default(float);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x26E29D4", Offset = "0x26E29D4", VA = "0x26E29D4")]
		public void AllowPreviewLight(bool bAllow)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x26E29E0", Offset = "0x26E29E0", VA = "0x26E29E0")]
		public void EnableDebugViewControlPoints(bool bEnable)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x26E29EC", Offset = "0x26E29EC", VA = "0x26E29EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x26E2DC4", Offset = "0x26E2DC4", VA = "0x26E2DC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x26E2C04", Offset = "0x26E2C04", VA = "0x26E2C04")]
		private void OnActiveCanvasChanged(CanvasScript prev, CanvasScript current)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x26E2E98", Offset = "0x26E2E98", VA = "0x26E2E98")]
		private void OnActiveCanvasPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x26DF958", Offset = "0x26DF958", VA = "0x26DF958")]
		public void CopyInternals(PointerScript rOther)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x26DD574", Offset = "0x26DD574", VA = "0x26DD574")]
		public bool IsCreatingStroke()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x26E2F34", Offset = "0x26E2F34", VA = "0x26E2F34")]
		public Color GetCurrentColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x26E2F40", Offset = "0x26E2F40", VA = "0x26E2F40")]
		public float GetCurrentLineSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x26DED34", Offset = "0x26DED34", VA = "0x26DED34")]
		public void MarkBrushSizeUsed()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x26E2FE0", Offset = "0x26E2FE0", VA = "0x26E2FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x26E31E0", Offset = "0x26E31E0", VA = "0x26E31E0")]
		private float LayerVolume(int iLayer, float fTotalVolume)
		{
			return default(float);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x26E0A74", Offset = "0x26E0A74", VA = "0x26E0A74")]
		public List<PointerManager.ControlPoint> GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x26E3264", Offset = "0x26E3264", VA = "0x26E3264")]
		private TrTransform GetTransformForLine(Transform line)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x26E3318", Offset = "0x26E3318", VA = "0x26E3318")]
		private TrTransform GetTransformForLine(Transform line, TrTransform xf_RS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x26E3448", Offset = "0x26E3448", VA = "0x26E3448")]
		private void RebuildPreviewLine()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x26DDF60", Offset = "0x26DDF60", VA = "0x26DDF60")]
		public void UpdatePointer()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x26E1678", Offset = "0x26E1678", VA = "0x26E1678")]
		public void UpdateLineFromObject()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x26DA748", Offset = "0x26DA748", VA = "0x26DA748")]
		public void UpdateLineFromControlPoint(PointerManager.ControlPoint cp)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x26E3A54", Offset = "0x26E3A54", VA = "0x26E3A54")]
		public void UpdateLineFromStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x26DA844", Offset = "0x26DA844", VA = "0x26DA844")]
		public void UpdateLineVisuals()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x26DEC84", Offset = "0x26DEC84", VA = "0x26DEC84")]
		public void SetPreviewLineDelayTimer()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x26DE8B0", Offset = "0x26DE8B0", VA = "0x26DE8B0")]
		public void AllowPreviewLine(bool bAllow)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x26E3880", Offset = "0x26E3880", VA = "0x26E3880")]
		private void CreatePreviewLine()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x26DE8F0", Offset = "0x26DE8F0", VA = "0x26DE8F0")]
		public void DisablePreviewLine()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x26E3F5C", Offset = "0x26E3F5C", VA = "0x26E3F5C")]
		private void ResetPreviewProperties()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x26E4040", Offset = "0x26E4040", VA = "0x26E4040")]
		public void SetPressure(float fPressure)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x26E4048", Offset = "0x26E4048", VA = "0x26E4048")]
		public float GetPressure()
		{
			return default(float);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x26E3248", Offset = "0x26E3248", VA = "0x26E3248")]
		private float Remap(float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x26DCDD4", Offset = "0x26DCDD4", VA = "0x26DCDD4")]
		public void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x26E4050", Offset = "0x26E4050", VA = "0x26E4050")]
		private void UpdateTintableRenderers()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x26E41DC", Offset = "0x26E41DC", VA = "0x26E41DC")]
		private void SetTintableIntensity(BrushDescriptor rBrush)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x26DEEC4", Offset = "0x26DEEC4", VA = "0x26DEEC4")]
		public void SetBrush(BrushDescriptor rBrush)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x26DCFAC", Offset = "0x26DCFAC", VA = "0x26DCFAC")]
		public void ShowSizeIndicator(bool show)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x26E2910", Offset = "0x26E2910", VA = "0x26E2910")]
		private void _SetBrushSizeAbsolute(float value)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x26DE52C", Offset = "0x26DE52C", VA = "0x26DE52C")]
		public void EnableRendering(bool bEnable)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x26E13D4", Offset = "0x26E13D4", VA = "0x26E13D4")]
		public void SetControlPoint(TrTransform lastSpawnXf_LS, bool isKeeper)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x26E11E4", Offset = "0x26E11E4", VA = "0x26E11E4")]
		public void CreateNewLine(CanvasScript canvas, TrTransform xf_CS, ParametricStrokeCreator creator, [Optional] BrushDescriptor overrideDesc)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x26E4308", Offset = "0x26E4308", VA = "0x26E4308")]
		public void RecreateLineFromMemory(Stroke stroke)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x26E1EF8", Offset = "0x26E1EF8", VA = "0x26E1EF8")]
		public void DetachLine(bool bDiscard, Stroke rMemoryObjectForPlayback, SketchMemoryScript.StrokeFlags strokeFlags = SketchMemoryScript.StrokeFlags.None)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x26E0460", Offset = "0x26E0460", VA = "0x26E0460")]
		public bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x26E1E48", Offset = "0x26E1E48", VA = "0x26E1E48")]
		public bool ShouldDiscardCurrentLine()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x26DA3AC", Offset = "0x26DA3AC", VA = "0x26DA3AC")]
		public GameObject BeginLineFromMemory(Stroke stroke, CanvasScript canvas)
		{
			return null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x26DA65C", Offset = "0x26DA65C", VA = "0x26DA65C")]
		public void EndLineFromMemory(Stroke stroke, bool discard = false)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x26DEA0C", Offset = "0x26DEA0C", VA = "0x26DEA0C")]
		public void ResetAudio()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x26E4578", Offset = "0x26E4578", VA = "0x26E4578")]
		private void SilenceAudio()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x26DE6E8", Offset = "0x26DE6E8", VA = "0x26DE6E8")]
		public void SetAudioClipForPlayback()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x26E45A4", Offset = "0x26E45A4", VA = "0x26E45A4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x26E4668", Offset = "0x26E4668", VA = "0x26E4668")]
		public PointerScript()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class PointingLineScript : MonoBehaviour
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_NumLinePositions;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_LinePositionMidIndex;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer m_LineRenderer;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_PreviousLineLength;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_PrevForward;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_HadFocus;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_BendMovementScalar;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_BendNormal;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_BendVelocity;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_BendValue;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_BendInitialPop;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_BendMaxVelocity;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_BendValueDampen;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_BendValueK;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x26E4818", Offset = "0x26E4818", VA = "0x26E4818")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x26E48D0", Offset = "0x26E48D0", VA = "0x26E48D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x26E5190", Offset = "0x26E5190", VA = "0x26E5190")]
		public PointingLineScript()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class PolyAssetCatalog : MonoBehaviour
	{
		[Token(Token = "0x20003AD")]
		public enum AssetLoadState
		{
			[Token(Token = "0x40016D1")]
			Unknown,
			[Token(Token = "0x40016D2")]
			NotDownloaded,
			[Token(Token = "0x40016D3")]
			Downloading,
			[Token(Token = "0x40016D4")]
			Downloaded,
			[Token(Token = "0x40016D5")]
			Loading,
			[Token(Token = "0x40016D6")]
			LoadFailed,
			[Token(Token = "0x40016D7")]
			Loaded
		}

		[Token(Token = "0x20003AE")]
		public class AssetDetails
		{
			[StructLayout(3)]
			[Token(Token = "0x20003AF")]
			[CompilerGenerated]
			private struct <DownloadThumbnailAsync>d__23 : IAsyncStateMachine
			{
				[Token(Token = "0x40016E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40016E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x40016E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public AssetDetails <>4__this;

				[Token(Token = "0x40016E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public string thumbnailUrl;

				[Token(Token = "0x40016E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private string <cachePath>5__2;

				[Token(Token = "0x40016E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private WebRequest <www>5__3;

				[Token(Token = "0x40016E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x40016E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private TaskAwaiter<WebRequest.Reply> <>u__2;

				[Token(Token = "0x40016E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private object <>u__3;

				[Token(Token = "0x40016E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				private Future<RawImage>.Awaiter <>u__4;

				[Token(Token = "0x600190A")]
				[Address(RVA = "0x26E9FA8", Offset = "0x26E9FA8", VA = "0x26E9FA8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x600190B")]
				[Address(RVA = "0x26EA714", Offset = "0x26EA714", VA = "0x26EA714", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40016D8")]
			private const bool kLazyLoadThumbnail = false;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly PolyAssetCatalog m_Owner;

			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly Texture2D m_Thumbnail;

			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string m_ThumbnailUrl;

			[Token(Token = "0x1700042B")]
			public string AssetId
			{
				[Token(Token = "0x6001900")]
				[Address(RVA = "0x26E97C4", Offset = "0x26E97C4", VA = "0x26E97C4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			public string HumanName
			{
				[Token(Token = "0x6001901")]
				[Address(RVA = "0x26E97CC", Offset = "0x26E97CC", VA = "0x26E97CC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			public string AccountName
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0x26E97D4", Offset = "0x26E97D4", VA = "0x26E97D4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042E")]
			public Quaternion? ModelRotation
			{
				[Token(Token = "0x6001903")]
				[Address(RVA = "0x26E97DC", Offset = "0x26E97DC", VA = "0x26E97DC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			public Texture2D Thumbnail
			{
				[Token(Token = "0x6001904")]
				[Address(RVA = "0x26E97F0", Offset = "0x26E97F0", VA = "0x26E97F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			public Model Model
			{
				[Token(Token = "0x6001905")]
				[Address(RVA = "0x26E98BC", Offset = "0x26E98BC", VA = "0x26E98BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x26E98E0", Offset = "0x26E98E0", VA = "0x26E98E0")]
			public AssetDetails(JToken json, string accountName, string thumbnailSuffix)
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x26E9CC0", Offset = "0x26E9CC0", VA = "0x26E9CC0")]
			private static byte[] SafeReadCache(string path)
			{
				return null;
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0x26E9DB8", Offset = "0x26E9DB8", VA = "0x26E9DB8")]
			private static void SafeWriteCache(string path, byte[] contents)
			{
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0x26E9818", Offset = "0x26E9818", VA = "0x26E9818")]
			[AsyncStateMachine(typeof(<DownloadThumbnailAsync>d__23))]
			private void DownloadThumbnailAsync(string thumbnailUrl)
			{
			}
		}

		[Token(Token = "0x20003B0")]
		private class AssetSet
		{
			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AssetDetails> m_Models;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator<Null> m_FetchMetadataCoroutine;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_RefreshRequested;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float m_CooldownTimer;

			[Token(Token = "0x600190C")]
			[Address(RVA = "0x26E636C", Offset = "0x26E636C", VA = "0x26E636C")]
			public AssetSet()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		public class ModelLoadRequest
		{
			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Model Model;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly string Reason;

			[Token(Token = "0x17000431")]
			public string AssetId
			{
				[Token(Token = "0x600190D")]
				[Address(RVA = "0x26E68DC", Offset = "0x26E68DC", VA = "0x26E68DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600190E")]
			[Address(RVA = "0x26E7518", Offset = "0x26E7518", VA = "0x26E7518")]
			public ModelLoadRequest(Model model, string reason)
			{
			}
		}

		[Token(Token = "0x20003B4")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneFileInfo sceneFileInfo;

			[Token(Token = "0x600191D")]
			[Address(RVA = "0x26EA8C8", Offset = "0x26EA8C8", VA = "0x26EA8C8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600191E")]
			[Address(RVA = "0x26EA8D0", Offset = "0x26EA8D0", VA = "0x26EA8D0")]
			internal List<string> <PrecacheModelsCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B5")]
		[CompilerGenerated]
		private sealed class <PrecacheModelsCoroutine>d__38 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneFileInfo sceneFileInfo;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass38_0 <>8__1;

			[Token(Token = "0x4001700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x4001701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string reason;

			[Token(Token = "0x4001702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<List<string>> <getIdsFuture>5__2;

			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<IEnumerator<Null>> <precacheCoroutines>5__3;

			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x4001705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<string>.Enumerator <>7__wrap4;

			[Token(Token = "0x17000432")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001923")]
				[Address(RVA = "0x26EB0A4", Offset = "0x26EB0A4", VA = "0x26EB0A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001925")]
				[Address(RVA = "0x26EB0EC", Offset = "0x26EB0EC", VA = "0x26EB0EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600191F")]
			[Address(RVA = "0x26E7AF8", Offset = "0x26E7AF8", VA = "0x26E7AF8")]
			[DebuggerHidden]
			public <PrecacheModelsCoroutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001920")]
			[Address(RVA = "0x26EA928", Offset = "0x26EA928", VA = "0x26EA928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x26EA944", Offset = "0x26EA944", VA = "0x26EA944", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x26EB054", Offset = "0x26EB054", VA = "0x26EB054")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0x26EB0AC", Offset = "0x26EB0AC", VA = "0x26EB0AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[CompilerGenerated]
		private sealed class <PrecacheCoroutine>d__40 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetGetter request;

			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <assetId>5__2;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x17000434")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001929")]
				[Address(RVA = "0x26EB4B0", Offset = "0x26EB4B0", VA = "0x26EB4B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600192B")]
				[Address(RVA = "0x26EB4F8", Offset = "0x26EB4F8", VA = "0x26EB4F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001926")]
			[Address(RVA = "0x26E8228", Offset = "0x26E8228", VA = "0x26E8228")]
			[DebuggerHidden]
			public <PrecacheCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001927")]
			[Address(RVA = "0x26EB0F4", Offset = "0x26EB0F4", VA = "0x26EB0F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0x26EB0F8", Offset = "0x26EB0F8", VA = "0x26EB0F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0x26EB4B8", Offset = "0x26EB4B8", VA = "0x26EB4B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B8")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<string> toRemove;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<string> toAdd;

			[Token(Token = "0x600192E")]
			[Address(RVA = "0x26EB550", Offset = "0x26EB550", VA = "0x26EB550")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600192F")]
			[Address(RVA = "0x26EB558", Offset = "0x26EB558", VA = "0x26EB558")]
			internal bool <RefreshAssetSet>b__2(AssetDetails m)
			{
				return default(bool);
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0x26EB5B4", Offset = "0x26EB5B4", VA = "0x26EB5B4")]
			internal bool <RefreshAssetSet>b__3(AssetDetails m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003B9")]
		[CompilerGenerated]
		private sealed class <RefreshAssetSet>d__44 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolySetType type;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass44_0 <>8__1;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<AssetDetails> <models>5__2;

			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AssetLister <lister>5__3;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x17000436")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001935")]
				[Address(RVA = "0x26EC0CC", Offset = "0x26EC0CC", VA = "0x26EC0CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001937")]
				[Address(RVA = "0x26EC114", Offset = "0x26EC114", VA = "0x26EC114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0x26E8DA4", Offset = "0x26E8DA4", VA = "0x26E8DA4")]
			[DebuggerHidden]
			public <RefreshAssetSet>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0x26EB610", Offset = "0x26EB610", VA = "0x26EB610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0x26EB62C", Offset = "0x26EB62C", VA = "0x26EB62C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001934")]
			[Address(RVA = "0x26EC01C", Offset = "0x26EC01C", VA = "0x26EC01C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0x26EC0D4", Offset = "0x26EC0D4", VA = "0x26EC0D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016BE")]
		private const int kAssetDiskCacheSize = 1000;

		[Token(Token = "0x40016BF")]
		private const float kThumbnailFetchRate = 15f;

		[Token(Token = "0x40016C0")]
		private const int kThumbnailFetchMaxCount = 30;

		[Token(Token = "0x40016C1")]
		private const int kThumbnailReadRate = 4;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex sm_AssetIdPattern;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_ThumbnailSuffix;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AssetGetter> m_ActiveRequests;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ModelLoadRequest> m_RequestLoadQueue;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ModelLoadRequest> m_LoadQueue;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<string> m_IsLoadingMemo;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_CacheDir;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_ThumbnailCacheDir;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Model> m_ModelsByAssetId;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<PolySetType, AssetSet> m_AssetSetByType;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_NotifyListeners;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AwaitableRateLimiter m_thumbnailFetchLimiter;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RateLimiter m_thumbnailReadLimiter;

		[Token(Token = "0x1400001E")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x26E534C", Offset = "0x26E534C", VA = "0x26E534C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x26E53E8", Offset = "0x26E53E8", VA = "0x26E53E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x26E51B0", Offset = "0x26E51B0", VA = "0x26E51B0")]
		private static Vector3? GetCameraForward(JToken cameraParams)
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x26E5484", Offset = "0x26E5484", VA = "0x26E5484")]
		public bool IsLoading(string assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x26E57A0", Offset = "0x26E57A0", VA = "0x26E57A0")]
		public void RequestRefresh(PolySetType type)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x26E5828", Offset = "0x26E5828", VA = "0x26E5828")]
		public void Init()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x26E63E8", Offset = "0x26E63E8", VA = "0x26E63E8")]
		public AssetLoadState GetAssetLoadState(string assetId)
		{
			return default(AssetLoadState);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x26E68F8", Offset = "0x26E68F8", VA = "0x26E68F8")]
		public string GetCacheDirectoryForAsset(string asset)
		{
			return null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x26E6170", Offset = "0x26E6170", VA = "0x26E6170")]
		public IEnumerable<string> EnumerateCacheDirectories()
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x26E6A64", Offset = "0x26E6A64", VA = "0x26E6A64")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x26E685C", Offset = "0x26E685C", VA = "0x26E685C")]
		public Model GetModel(string assetId)
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x26E6C68", Offset = "0x26E6C68", VA = "0x26E6C68")]
		private void Update()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x26E70D4", Offset = "0x26E70D4", VA = "0x26E70D4")]
		public void RequestModelLoad(Model model, string reason)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x26E71F4", Offset = "0x26E71F4", VA = "0x26E71F4")]
		public void RequestModelLoad(string assetId, string reason)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x26E7544", Offset = "0x26E7544", VA = "0x26E7544")]
		public bool CancelRequestModelLoad(string assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x26E79D0", Offset = "0x26E79D0", VA = "0x26E79D0")]
		public void PrecacheModels(SceneFileInfo sceneFileInfo, string reason)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x26E7A7C", Offset = "0x26E7A7C", VA = "0x26E7A7C")]
		[IteratorStateMachine(typeof(<PrecacheModelsCoroutine>d__38))]
		private IEnumerator<Null> PrecacheModelsCoroutine(SceneFileInfo sceneFileInfo, string reason)
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x26E7B20", Offset = "0x26E7B20", VA = "0x26E7B20")]
		private static List<string> GetModelIds(SceneFileInfo sceneFileInfo)
		{
			return null;
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x26E81B4", Offset = "0x26E81B4", VA = "0x26E81B4")]
		[IteratorStateMachine(typeof(<PrecacheCoroutine>d__40))]
		private IEnumerator<Null> PrecacheCoroutine(AssetGetter request)
		{
			return null;
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x26E8250", Offset = "0x26E8250", VA = "0x26E8250")]
		public void UpdateCatalog()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x26E8C74", Offset = "0x26E8C74", VA = "0x26E8C74")]
		private void LoadModelsInQueueAsync()
		{
		}

		[Token(Token = "0x60018F3")]
		private static HashSet<T> SetMinus<T>(HashSet<T> lhs, HashSet<T> rhs)
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x26E705C", Offset = "0x26E705C", VA = "0x26E705C")]
		[IteratorStateMachine(typeof(<RefreshAssetSet>d__44))]
		private IEnumerator<Null> RefreshAssetSet(PolySetType type)
		{
			return null;
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x26E6AEC", Offset = "0x26E6AEC", VA = "0x26E6AEC")]
		private void RefreshFetchCoroutines()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x26E8DCC", Offset = "0x26E8DCC", VA = "0x26E8DCC")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x26E8DD0", Offset = "0x26E8DD0", VA = "0x26E8DD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x26E8E50", Offset = "0x26E8E50", VA = "0x26E8E50")]
		public int NumCloudModels(PolySetType type)
		{
			return default(int);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x26E8ECC", Offset = "0x26E8ECC", VA = "0x26E8ECC")]
		public AssetDetails GetPolyAsset(PolySetType type, int index)
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x26E6280", Offset = "0x26E6280", VA = "0x26E6280")]
		private static string ValidGltfCache(string dir, string assetId)
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x26E8F5C", Offset = "0x26E8F5C", VA = "0x26E8F5C")]
		public void ClearLoadingQueue()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x26E910C", Offset = "0x26E910C", VA = "0x26E910C")]
		public void UnloadUnusedModels()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x26E94D4", Offset = "0x26E94D4", VA = "0x26E94D4")]
		public PolyAssetCatalog()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class PolyRawAsset
	{
		[Token(Token = "0x20003BB")]
		public class ElementInfo
		{
			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filePath;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string dataURL;

			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] assetBytes;

			[Token(Token = "0x6001946")]
			[Address(RVA = "0x27039E0", Offset = "0x27039E0", VA = "0x27039E0")]
			public ElementInfo()
			{
			}
		}

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex kWindowsRootedPath;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_AssetId;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VrAssetFormat m_DesiredAssetType;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ElementInfo m_RootElement;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ElementInfo> m_ResourceElements;

		[Token(Token = "0x17000438")]
		public string Id
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x26EC11C", Offset = "0x26EC11C", VA = "0x26EC11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		public VrAssetFormat DesiredType
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x26EC124", Offset = "0x26EC124", VA = "0x26EC124")]
			get
			{
				return default(VrAssetFormat);
			}
		}

		[Token(Token = "0x1700043A")]
		public string RootFilePath
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x26E8C50", Offset = "0x26E8C50", VA = "0x26E8C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		public string RootDataURL
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x26EC12C", Offset = "0x26EC12C", VA = "0x26EC12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		public List<ElementInfo> ResourceElements
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x26EC148", Offset = "0x26EC148", VA = "0x26EC148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		public bool ValidAsset
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x26E8778", Offset = "0x26E8778", VA = "0x26E8778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x26EC150", Offset = "0x26EC150", VA = "0x26EC150")]
		public void SetRootElement(string filePath, string dataURL)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x26EC16C", Offset = "0x26EC16C", VA = "0x26EC16C")]
		public void CopyBytesToRootElement(byte[] bytes)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x26EC188", Offset = "0x26EC188", VA = "0x26EC188")]
		public void AddResourceElement(string filePath, string dataURL)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x26EC270", Offset = "0x26EC270", VA = "0x26EC270")]
		public PolyRawAsset(string assetId, VrAssetFormat assetType)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x26EC338", Offset = "0x26EC338", VA = "0x26EC338")]
		private void RemoveFiles(List<string> filesToRemove)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x26E879C", Offset = "0x26E879C", VA = "0x26E879C")]
		public bool WriteToDisk()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x26EC3C4", Offset = "0x26EC3C4", VA = "0x26EC3C4")]
		public static string GetPolySanitizedFilePath(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BC")]
	public class PreLoadingScene : MonoBehaviour
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Logo;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_Camera;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x27039E8", Offset = "0x27039E8", VA = "0x27039E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x2703B64", Offset = "0x2703B64", VA = "0x2703B64")]
		public PreLoadingScene()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class PrefabLightmapData : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003BE")]
		private struct RendererInfo
		{
			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lightmapIndex;

			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector4 lightmapOffsetScale;
		}

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RendererInfo[] m_RendererInfo;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D[] m_Lightmaps;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x2703B6C", Offset = "0x2703B6C", VA = "0x2703B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x2703CF8", Offset = "0x2703CF8", VA = "0x2703CF8")]
		private static void ApplyRendererInfo(RendererInfo[] infos, int lightmapOffsetIndex)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x2703DA8", Offset = "0x2703DA8", VA = "0x2703DA8")]
		public PrefabLightmapData()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class PreviewCubeScript : UIComponentDescription
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("PreviewCube-specific")]
		public GameObject m_SampleQuad;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_QuadAnimatingValue;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 m_QuadAnimatingSpeed;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 m_QuadAnimatingAmount;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture m_StandardTexture;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture m_SelectedTexture;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Renderer m_BoundingCube;

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x2703DB0", Offset = "0x2703DB0", VA = "0x2703DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x2703F5C", Offset = "0x2703F5C", VA = "0x2703F5C")]
		public void SetSelected(bool bSelected)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x2704010", Offset = "0x2704010", VA = "0x2704010")]
		public void SetSampleQuadTexture(Texture2D tex)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x2704080", Offset = "0x2704080", VA = "0x2704080")]
		public PreviewCubeScript()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class QualityControls : MonoBehaviour
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static QualityControls m_Instance;

		[Token(Token = "0x400172E")]
		private const string kAutoSimplificationEnabled = "Autosimplification Enabled";

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Camera> m_Cameras;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SENaturalBloomAndDirtyLens> m_Bloom;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FXAA> m_Fxaa;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MobileBloom> m_MobileBloom;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_MobileBloomAmount;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Camera> m_OptInCamerasForPC;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Camera> m_OptOutCamerasForPC;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_enableHdr;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_msaaLevel;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AppQualitySettingLevels m_QualityLevels;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[UsedImplicitly]
		private AppQualitySettingLevels m_MobileQualityLevels;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GpuTextRender m_DebugText;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_lastQualityLevel;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_targetMaxControlPoints;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_maxLoadingSimplification;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<double> m_FrameTimeStamps;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double m_TimeSinceStart;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_FramesInLastSecond;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_NumFramesFpsTooLow;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_NumFramesFpsHighEnough;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_NumFramesGpuTooHigh;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_NumFramesGpuLowEnough;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_DesiredBloom;

		[Token(Token = "0x1700043E")]
		public RdpStrokeSimplifier StrokeSimplifier
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x27041E8", Offset = "0x27041E8", VA = "0x27041E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x27041F0", Offset = "0x27041F0", VA = "0x27041F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public RdpStrokeSimplifier UserStrokeSimplifier
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x27041F8", Offset = "0x27041F8", VA = "0x27041F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x2704200", Offset = "0x2704200", VA = "0x2704200")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public int QualityLevel
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x2704208", Offset = "0x2704208", VA = "0x2704208")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x2704210", Offset = "0x2704210", VA = "0x2704210")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public static bool AutosimplifyEnabled
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x2704860", Offset = "0x2704860", VA = "0x2704860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001959")]
			[Address(RVA = "0x27048B4", Offset = "0x27048B4", VA = "0x27048B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public float SimplificationLevel
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x2704900", Offset = "0x2704900", VA = "0x2704900")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x2704918", Offset = "0x2704918", VA = "0x2704918")]
			set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public int MSAALevel
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x2704B0C", Offset = "0x2704B0C", VA = "0x2704B0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000444")]
		public int FramesInLastSecond
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x2704B14", Offset = "0x2704B14", VA = "0x2704B14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000445")]
		public RenderTextureFormat FramebufferFormat
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x2704B1C", Offset = "0x2704B1C", VA = "0x2704B1C")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x17000446")]
		public AppQualitySettingLevels AppQualityLevels
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x2704B30", Offset = "0x2704B30", VA = "0x2704B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		public AppQualitySettingLevels.AppQualitySettings AppQualitySettings
		{
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x2704B38", Offset = "0x2704B38", VA = "0x2704B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<int> OnQualityLevelChange
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x2704088", Offset = "0x2704088", VA = "0x2704088")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x2704138", Offset = "0x2704138", VA = "0x2704138")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x2704B64", Offset = "0x2704B64", VA = "0x2704B64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x2704D78", Offset = "0x2704D78", VA = "0x2704D78")]
		public void Init()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x27054A0", Offset = "0x27054A0", VA = "0x27054A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x2704214", Offset = "0x2704214", VA = "0x2704214")]
		private void SetQualityLevel(int value)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x27059D0", Offset = "0x27059D0", VA = "0x27059D0")]
		private void SetBloomMode(AppQualitySettingLevels.BloomMode rMode)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x2705C4C", Offset = "0x2705C4C", VA = "0x2705C4C")]
		private void EnableFxaa(bool bEnable)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x2705A88", Offset = "0x2705A88", VA = "0x2705A88")]
		private void EnableHDR(bool bEnable)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x2705DA4", Offset = "0x2705DA4", VA = "0x2705DA4")]
		public void ResetAutoQuality()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x2705DA8", Offset = "0x2705DA8", VA = "0x2705DA8")]
		public void AutoAdjustSimplifierLevel(List<Stroke> strokes, Guid[] brushes)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x270662C", Offset = "0x270662C", VA = "0x270662C")]
		public QualityControls()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class RdpStrokeSimplifier
	{
		[Token(Token = "0x400174E")]
		private const float kEpsilon = 1E-05f;

		[Token(Token = "0x17000448")]
		public float Level
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x2706730", Offset = "0x2706730", VA = "0x2706730")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x2706738", Offset = "0x2706738", VA = "0x2706738")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x2704AE4", Offset = "0x2704AE4", VA = "0x2704AE4")]
		public RdpStrokeSimplifier(float level)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x2706740", Offset = "0x2706740", VA = "0x2706740")]
		public void CalculatePointsToDrop(Stroke stroke, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x2706614", Offset = "0x2706614", VA = "0x2706614")]
		public static float CalculateLevelForReduction(float reduction)
		{
			return default(float);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x2706B34", Offset = "0x2706B34", VA = "0x2706B34")]
		private void FlagPointsToKeep(Stroke stroke, bool[] toDrop, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x2706CF8", Offset = "0x2706CF8", VA = "0x2706CF8")]
		private void SavePointSequence(Stroke stroke, bool[] toDrop, int point, int dir, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x27067D8", Offset = "0x27067D8", VA = "0x27067D8")]
		private void FlagPointsToDrop(PointerManager.ControlPoint[] points, bool[] toDrop, int first, int last, float sqrMaxError)
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class ReferenceImage
	{
		[Token(Token = "0x20003C4")]
		private enum ImageState
		{
			[Token(Token = "0x4001757")]
			Uninitialized,
			[Token(Token = "0x4001758")]
			NotReady,
			[Token(Token = "0x4001759")]
			Ready,
			[Token(Token = "0x400175A")]
			Error
		}

		[Token(Token = "0x20003C5")]
		[CompilerGenerated]
		private sealed class <LoadImage>d__29 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string path;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__path;

			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool runForeground;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__runForeground;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D dest;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D <>3__dest;

			[Token(Token = "0x4001765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private ThreadedImageReader <reader>5__2;

			[Token(Token = "0x17000452")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0x2708494", Offset = "0x2708494", VA = "0x2708494", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000453")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001995")]
				[Address(RVA = "0x27084DC", Offset = "0x27084DC", VA = "0x27084DC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0x2707360", Offset = "0x2707360", VA = "0x2707360")]
			[DebuggerHidden]
			public <LoadImage>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001991")]
			[Address(RVA = "0x270804C", Offset = "0x270804C", VA = "0x270804C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0x2708050", Offset = "0x2708050", VA = "0x2708050", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0x270849C", Offset = "0x270849C", VA = "0x270849C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001996")]
			[Address(RVA = "0x27084E4", Offset = "0x27084E4", VA = "0x27084E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001997")]
			[Address(RVA = "0x27085A0", Offset = "0x27085A0", VA = "0x27085A0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003C6")]
		[CompilerGenerated]
		private sealed class <RequestLoadCoroutineMainThread>d__36 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x4001769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WWW <loader>5__2;

			[Token(Token = "0x400176A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Texture2D <inTex>5__3;

			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Timeslice> <>7__wrap3;

			[Token(Token = "0x17000454")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x600199D")]
				[Address(RVA = "0x2708D9C", Offset = "0x2708D9C", VA = "0x2708D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000455")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600199F")]
				[Address(RVA = "0x2708DE4", Offset = "0x2708DE4", VA = "0x2708DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001998")]
			[Address(RVA = "0x2707F68", Offset = "0x2707F68", VA = "0x2707F68")]
			[DebuggerHidden]
			public <RequestLoadCoroutineMainThread>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001999")]
			[Address(RVA = "0x27085A4", Offset = "0x27085A4", VA = "0x27085A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600199A")]
			[Address(RVA = "0x27085E0", Offset = "0x27085E0", VA = "0x27085E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600199B")]
			[Address(RVA = "0x2708C3C", Offset = "0x2708C3C", VA = "0x2708C3C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600199C")]
			[Address(RVA = "0x2708CEC", Offset = "0x2708CEC", VA = "0x2708CEC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x2708DA4", Offset = "0x2708DA4", VA = "0x2708DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C7")]
		[CompilerGenerated]
		private sealed class <RequestLoadCoroutine>d__37 : IEnumerable<Timeslice>, IEnumerable, IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ThreadedImageReader <reader>5__2;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RawImage <result>5__3;

			[Token(Token = "0x17000456")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x60019A3")]
				[Address(RVA = "0x27091D4", Offset = "0x27091D4", VA = "0x27091D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000457")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A5")]
				[Address(RVA = "0x270921C", Offset = "0x270921C", VA = "0x270921C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x2707F90", Offset = "0x2707F90", VA = "0x2707F90")]
			[DebuggerHidden]
			public <RequestLoadCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x2708DEC", Offset = "0x2708DEC", VA = "0x2708DEC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x2708DF0", Offset = "0x2708DF0", VA = "0x2708DF0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x27091DC", Offset = "0x27091DC", VA = "0x27091DC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x2709224", Offset = "0x2709224", VA = "0x2709224", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Timeslice> System.Collections.Generic.IEnumerable<TiltBrush.Timeslice>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x27092C8", Offset = "0x27092C8", VA = "0x27092C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Timeslice> m_coroutine;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ImageState m_State;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_Icon;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D m_FullSize;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_FullSizeReferences;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_ImageAspect;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_Path;

		[Token(Token = "0x17000449")]
		public string FileName
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x2706E90", Offset = "0x2706E90", VA = "0x2706E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public string FileFullPath
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x2706EEC", Offset = "0x2706EEC", VA = "0x2706EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		public float ImageAspect
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x2706EF4", Offset = "0x2706EF4", VA = "0x2706EF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700044C")]
		public bool NotLoaded
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x2706F10", Offset = "0x2706F10", VA = "0x2706F10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044D")]
		public bool Valid
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x2706F20", Offset = "0x2706F20", VA = "0x2706F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044E")]
		public bool Running
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x2706F30", Offset = "0x2706F30", VA = "0x2706F30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044F")]
		public Texture2D Icon
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x2706F40", Offset = "0x2706F40", VA = "0x2706F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		public Texture2D FullSize
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0x2706FC0", Offset = "0x2706FC0", VA = "0x2706FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		public string FilePath
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x2707038", Offset = "0x2707038", VA = "0x2707038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x2707040", Offset = "0x2707040", VA = "0x2707040")]
		public ReferenceImage(string path)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x2707068", Offset = "0x2707068", VA = "0x2707068")]
		public void AcquireImageFullsize(bool runForeground = false)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x27072C4", Offset = "0x27072C4", VA = "0x27072C4")]
		public void ReleaseImageFullsize()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x2707220", Offset = "0x2707220", VA = "0x2707220")]
		[IteratorStateMachine(typeof(<LoadImage>d__29))]
		private IEnumerable LoadImage(string path, Texture2D dest, bool runForeground = false)
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x2707394", Offset = "0x2707394", VA = "0x2707394")]
		public void SynchronousLoad()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x2707698", Offset = "0x2707698", VA = "0x2707698")]
		public bool RequestLoadIconCache()
		{
			return default(bool);
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x2707494", Offset = "0x2707494", VA = "0x2707494")]
		public bool RequestLoad(bool allowMainThread = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x27078BC", Offset = "0x27078BC", VA = "0x27078BC")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x2707C84", Offset = "0x2707C84", VA = "0x2707C84")]
		private static void DownsizeTexture(Texture2D inTex, ref Texture2D outTex, int maxHeight)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x2707E5C", Offset = "0x2707E5C", VA = "0x2707E5C")]
		private static string PathToWwwUrl(string path)
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x27077DC", Offset = "0x27077DC", VA = "0x27077DC")]
		[IteratorStateMachine(typeof(<RequestLoadCoroutineMainThread>d__36))]
		private IEnumerator<Timeslice> RequestLoadCoroutineMainThread()
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x2707844", Offset = "0x2707844", VA = "0x2707844")]
		[IteratorStateMachine(typeof(<RequestLoadCoroutine>d__37))]
		private IEnumerable<Timeslice> RequestLoadCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x2707750", Offset = "0x2707750", VA = "0x2707750")]
		private bool ValidateFileSize()
		{
			return default(bool);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x2707FC4", Offset = "0x2707FC4", VA = "0x2707FC4")]
		public string GetExportName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C8")]
	public class ReferenceImageCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Token(Token = "0x20003C9")]
		[CompilerGenerated]
		private sealed class <LoadAvailableImageCaches>d__31 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImageCatalog <>4__this;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ReferenceImage>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700045C")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60019C5")]
				[Address(RVA = "0x270ACAC", Offset = "0x270ACAC", VA = "0x270ACAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C7")]
				[Address(RVA = "0x270ACF4", Offset = "0x270ACF4", VA = "0x270ACF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x270A048", Offset = "0x270A048", VA = "0x270A048")]
			[DebuggerHidden]
			public <LoadAvailableImageCaches>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x270A980", Offset = "0x270A980", VA = "0x270A980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x270AA48", Offset = "0x270AA48", VA = "0x270AA48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x270AC88", Offset = "0x270AC88", VA = "0x270AC88")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x270AC38", Offset = "0x270AC38", VA = "0x270AC38")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x270ACB4", Offset = "0x270ACB4", VA = "0x270ACB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CB")]
		[CompilerGenerated]
		private sealed class <LoadAllImagesCoroutineImpl>d__33 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImageCatalog <>4__this;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ReferenceImage> <toLoad>5__2;

			[Token(Token = "0x1700045E")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60019D0")]
				[Address(RVA = "0x270B22C", Offset = "0x270B22C", VA = "0x270B22C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D2")]
				[Address(RVA = "0x270B274", Offset = "0x270B274", VA = "0x270B274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x270A0E8", Offset = "0x270A0E8", VA = "0x270A0E8")]
			[DebuggerHidden]
			public <LoadAllImagesCoroutineImpl>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x270ADA8", Offset = "0x270ADA8", VA = "0x270ADA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x270ADE8", Offset = "0x270ADE8", VA = "0x270ADE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x270B200", Offset = "0x270B200", VA = "0x270B200")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x270B234", Offset = "0x270B234", VA = "0x270B234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001772")]
		private const int IMAGE_LOAD_PER_FRAME = 4;

		[Token(Token = "0x4001773")]
		private const int IMAGE_LOAD_PER_FRAME_COMPOSITOR = 8;

		[Token(Token = "0x4001774")]
		public const int TEXTURE_CREATIONS_PER_FRAME = 1;

		[Token(Token = "0x4001775")]
		public const int MAX_ICON_TEX_DIMENSION = 256;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReferenceImageCatalog m_Instance;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_TexturesCreatedThisFrame;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_ReferenceDirectory;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReferenceImage> m_Images;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stack<int> m_RequestedLoads;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_DirNeedsProcessing;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_ChangedFile;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_InCompositorLoad;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_RunningImageCacheCoroutine;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool m_ResetImageEnumeration;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Texture2D m_ErrorImage;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string[] m_DefaultImages;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<int> Update__temporarystack;

		[Token(Token = "0x17000458")]
		public bool IsScanning
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x2709404", Offset = "0x2709404", VA = "0x2709404", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000459")]
		public Texture2D ErrorImage
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x270940C", Offset = "0x270940C", VA = "0x270940C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		public int TexturesCreatedThisFrame
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x2709414", Offset = "0x2709414", VA = "0x2709414")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x270941C", Offset = "0x270941C", VA = "0x270941C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public int ItemCount
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x270A3B4", Offset = "0x270A3B4", VA = "0x270A3B4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000020")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x27092CC", Offset = "0x27092CC", VA = "0x27092CC", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x2709368", Offset = "0x2709368", VA = "0x2709368", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x2709424", Offset = "0x2709424", VA = "0x2709424", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x2709C48", Offset = "0x2709C48", VA = "0x2709C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x2709E90", Offset = "0x2709E90", VA = "0x2709E90")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x2709FE0", Offset = "0x2709FE0", VA = "0x2709FE0")]
		[IteratorStateMachine(typeof(<LoadAvailableImageCaches>d__31))]
		private IEnumerator<Null> LoadAvailableImageCaches()
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x270A070", Offset = "0x270A070", VA = "0x270A070")]
		public IEnumerator<Null> LoadAllImagesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x270A080", Offset = "0x270A080", VA = "0x270A080")]
		[IteratorStateMachine(typeof(<LoadAllImagesCoroutineImpl>d__33))]
		private IEnumerator<Null> LoadAllImagesCoroutineImpl()
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x270A110", Offset = "0x270A110", VA = "0x270A110")]
		public void UnloadAllImages()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x270A1C0", Offset = "0x270A1C0", VA = "0x270A1C0")]
		public bool AnyImageValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x270A25C", Offset = "0x270A25C", VA = "0x270A25C")]
		private void OnChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x270A294", Offset = "0x270A294", VA = "0x270A294")]
		public ReferenceImage IndexToImage(int index)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x270A318", Offset = "0x270A318", VA = "0x270A318")]
		public int ImageToIndex(ReferenceImage image)
		{
			return default(int);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x270A3FC", Offset = "0x270A3FC", VA = "0x270A3FC")]
		public void RequestLoadImage(ReferenceImage referenceImage)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x270A41C", Offset = "0x270A41C", VA = "0x270A41C")]
		public void RequestLoadImages(int iMin, int iMax)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x270A65C", Offset = "0x270A65C", VA = "0x270A65C")]
		public Texture2D GetImageIcon(int index, out float aspect)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x270942C", Offset = "0x270942C", VA = "0x270942C")]
		private void ProcessReferenceDirectory(bool userOverlay = true)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x270A734", Offset = "0x270A734", VA = "0x270A734")]
		public ReferenceImage FileNameToImage(string name)
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x270A904", Offset = "0x270A904", VA = "0x270A904")]
		public ReferenceImageCatalog()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class ReferencePanelImageTab : ReferencePanelTab
	{
		[Token(Token = "0x20003CE")]
		public class ImageIcon : ReferenceIcon
		{
			[Token(Token = "0x17000464")]
			public ReferencePanel Parent
			{
				[Token(Token = "0x60019E0")]
				[Address(RVA = "0x270BE6C", Offset = "0x270BE6C", VA = "0x270BE6C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60019E1")]
				[Address(RVA = "0x270BE74", Offset = "0x270BE74", VA = "0x270BE74")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000465")]
			public bool TextureAssigned
			{
				[Token(Token = "0x60019E2")]
				[Address(RVA = "0x270BE7C", Offset = "0x270BE7C", VA = "0x270BE7C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60019E3")]
				[Address(RVA = "0x270BE84", Offset = "0x270BE84", VA = "0x270BE84")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000466")]
			public LoadReferenceImageButton ImageButton
			{
				[Token(Token = "0x60019E4")]
				[Address(RVA = "0x270BE90", Offset = "0x270BE90", VA = "0x270BE90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x270BF0C", Offset = "0x270BF0C", VA = "0x270BF0C", Slot = "4")]
			public override void Refresh(int iCatalog)
			{
			}

			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x270BFE0", Offset = "0x270BFE0", VA = "0x270BFE0")]
			public ImageIcon()
			{
			}
		}

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_AutoLoadImages;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_tabAccessed;

		[Token(Token = "0x17000460")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x270B314", Offset = "0x270B314", VA = "0x270B314", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x270B35C", Offset = "0x270B35C", VA = "0x270B35C", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x17000462")]
		protected override Type ButtonType
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x270B364", Offset = "0x270B364", VA = "0x270B364", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		protected override Type IconType
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x270B3D0", Offset = "0x270B3D0", VA = "0x270B3D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x270B43C", Offset = "0x270B43C", VA = "0x270B43C", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x270B660", Offset = "0x270B660", VA = "0x270B660", Slot = "8")]
		public override void InitTab()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x270B9DC", Offset = "0x270B9DC", VA = "0x270B9DC", Slot = "11")]
		public override void UpdateTab()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x270BB58", Offset = "0x270BB58", VA = "0x270BB58", Slot = "12")]
		public override void OnTabEnable()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x270BD04", Offset = "0x270BD04", VA = "0x270BD04", Slot = "14")]
		public override void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x270BE10", Offset = "0x270BE10", VA = "0x270BE10")]
		public ReferencePanelImageTab()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class ReferencePanelModelTab : ReferencePanelTab
	{
		[Token(Token = "0x20003D0")]
		public class ModelIcon : ReferenceIcon
		{
			[Token(Token = "0x1700046B")]
			public ModelButton ModelButton
			{
				[Token(Token = "0x60019ED")]
				[Address(RVA = "0x270C234", Offset = "0x270C234", VA = "0x270C234")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x270C2B0", Offset = "0x270C2B0", VA = "0x270C2B0", Slot = "4")]
			public override void Refresh(int iCatalog)
			{
			}

			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x270C340", Offset = "0x270C340", VA = "0x270C340")]
			public ModelIcon()
			{
			}
		}

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_LastPageIndexForLoad;

		[Token(Token = "0x17000467")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x270BFF0", Offset = "0x270BFF0", VA = "0x270BFF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x270C038", Offset = "0x270C038", VA = "0x270C038", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x17000469")]
		protected override Type ButtonType
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x270C040", Offset = "0x270C040", VA = "0x270C040", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		protected override Type IconType
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x270C0AC", Offset = "0x270C0AC", VA = "0x270C0AC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x270C118", Offset = "0x270C118", VA = "0x270C118", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x270C228", Offset = "0x270C228", VA = "0x270C228")]
		public ReferencePanelModelTab()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public abstract class ReferencePanelTab : MonoBehaviour
	{
		[Token(Token = "0x20003D2")]
		public abstract class ReferenceIcon
		{
			[Token(Token = "0x17000475")]
			public BaseButton Button
			{
				[Token(Token = "0x6001A03")]
				[Address(RVA = "0x270C64C", Offset = "0x270C64C", VA = "0x270C64C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A04")]
				[Address(RVA = "0x270C654", Offset = "0x270C654", VA = "0x270C654")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001A05")]
			public abstract void Refresh(int catalog);

			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x270BFE8", Offset = "0x270BFE8", VA = "0x270BFE8")]
			protected ReferenceIcon()
			{
			}
		}

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_PanelName;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ReferenceIcon[] m_Icons;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int m_IndexOffset;

		[Token(Token = "0x1700046C")]
		public string PanelName
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x270C348", Offset = "0x270C348", VA = "0x270C348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		public int PageIndex
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x270C350", Offset = "0x270C350", VA = "0x270C350")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x270C358", Offset = "0x270C358", VA = "0x270C358")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public abstract IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x60019F3")]
			get;
		}

		[Token(Token = "0x1700046F")]
		public List<BaseButton> Buttons
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x270C360", Offset = "0x270C360", VA = "0x270C360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		public abstract ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x60019F5")]
			get;
		}

		[Token(Token = "0x17000471")]
		protected abstract Type ButtonType
		{
			[Token(Token = "0x60019F6")]
			get;
		}

		[Token(Token = "0x17000472")]
		protected abstract Type IconType
		{
			[Token(Token = "0x60019F7")]
			get;
		}

		[Token(Token = "0x17000473")]
		public int PageCount
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x270C54C", Offset = "0x270C54C", VA = "0x270C54C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000474")]
		public int IconCount
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x270C618", Offset = "0x270C618", VA = "0x270C618")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x270B76C", Offset = "0x270B76C", VA = "0x270B76C", Slot = "8")]
		public virtual void InitTab()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x270C478", Offset = "0x270C478", VA = "0x270C478", Slot = "9")]
		public virtual void UpdateButtonTransitionScale(float scale)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x270B4C8", Offset = "0x270B4C8", VA = "0x270B4C8", Slot = "10")]
		public virtual void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x270BB54", Offset = "0x270BB54", VA = "0x270BB54", Slot = "11")]
		public virtual void UpdateTab()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x270BC30", Offset = "0x270BC30", VA = "0x270BC30", Slot = "12")]
		public virtual void OnTabEnable()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x270C634", Offset = "0x270C634", VA = "0x270C634", Slot = "13")]
		public virtual void OnTabDisable()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x270BE0C", Offset = "0x270BE0C", VA = "0x270BE0C", Slot = "14")]
		public virtual void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x270C638", Offset = "0x270C638", VA = "0x270C638", Slot = "15")]
		public virtual bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x270BE14", Offset = "0x270BE14", VA = "0x270BE14")]
		protected ReferencePanelTab()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class ReferencePanelVideoTab : ReferencePanelTab
	{
		[Token(Token = "0x20003D5")]
		public class VideoIcon : ReferenceIcon
		{
			[Token(Token = "0x1700047D")]
			public ReferencePanel Parent
			{
				[Token(Token = "0x6001A1F")]
				[Address(RVA = "0x270D6D4", Offset = "0x270D6D4", VA = "0x270D6D4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A20")]
				[Address(RVA = "0x270D6DC", Offset = "0x270D6DC", VA = "0x270D6DC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700047E")]
			public bool TextureAssigned
			{
				[Token(Token = "0x6001A21")]
				[Address(RVA = "0x270D6E4", Offset = "0x270D6E4", VA = "0x270D6E4")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001A22")]
				[Address(RVA = "0x270D6EC", Offset = "0x270D6EC", VA = "0x270D6EC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700047F")]
			public VideoButton VideoButton
			{
				[Token(Token = "0x6001A23")]
				[Address(RVA = "0x270D258", Offset = "0x270D258", VA = "0x270D258")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x270D6F8", Offset = "0x270D6F8", VA = "0x270D6F8", Slot = "4")]
			public override void Refresh(int catalogIndex)
			{
			}

			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x270D7D8", Offset = "0x270D7D8", VA = "0x270D7D8")]
			public VideoIcon()
			{
			}
		}

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_VideoControls;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxCollider m_VideoControlsCollider;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_Preview;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VideoPositionSlider m_Scrubber;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VideoSkipTime;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Texture2D m_ErrorTexture;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Texture2D m_LoadingTexture;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VideoWidget m_SelectedVideoWidget;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material m_PreviewMaterial;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_TabActive;

		[Token(Token = "0x17000476")]
		[Obfuscation(Exclude = true)]
		public bool SelectedVideoIsPlaying
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x270C6E0", Offset = "0x270C6E0", VA = "0x270C6E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x270C7C8", Offset = "0x270C7C8", VA = "0x270C7C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		[Obfuscation(Exclude = true)]
		public float SelectedVideoVolume
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x270C880", Offset = "0x270C880", VA = "0x270C880")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x270C914", Offset = "0x270C914", VA = "0x270C914")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x270CA10", Offset = "0x270CA10", VA = "0x270CA10", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x270CA50", Offset = "0x270CA50", VA = "0x270CA50", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x1700047A")]
		protected override Type ButtonType
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x270CA58", Offset = "0x270CA58", VA = "0x270CA58", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		protected override Type IconType
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x270CAC4", Offset = "0x270CAC4", VA = "0x270CAC4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		protected ReferenceVideo.Controller SelectedVideo
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x270C710", Offset = "0x270C710", VA = "0x270C710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x270CB30", Offset = "0x270CB30", VA = "0x270CB30")]
		private void RefreshVideoControlsVisibility()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x270CC54", Offset = "0x270CC54", VA = "0x270CC54", Slot = "12")]
		public override void OnTabEnable()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x270CC60", Offset = "0x270CC60", VA = "0x270CC60", Slot = "13")]
		public override void OnTabDisable()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x270CC68", Offset = "0x270CC68", VA = "0x270CC68", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x270CCA0", Offset = "0x270CCA0", VA = "0x270CCA0", Slot = "8")]
		public override void InitTab()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x270CE7C", Offset = "0x270CE7C", VA = "0x270CE7C")]
		public void OnVideoWidgetActivated(VideoWidget widget)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x270CF40", Offset = "0x270CF40", VA = "0x270CF40", Slot = "11")]
		public override void UpdateTab()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x270D2D4", Offset = "0x270D2D4", VA = "0x270D2D4", Slot = "14")]
		public override void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x270D3DC", Offset = "0x270D3DC", VA = "0x270D3DC", Slot = "15")]
		public override bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x270D4C0", Offset = "0x270D4C0", VA = "0x270D4C0")]
		[Obfuscation(Exclude = true)]
		public void SkipBack()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x270D638", Offset = "0x270D638", VA = "0x270D638")]
		[Obfuscation(Exclude = true)]
		public void SkipForward()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x270D6C8", Offset = "0x270D6C8", VA = "0x270D6C8")]
		public ReferencePanelVideoTab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D6")]
	public class ReferenceVideo
	{
		[Token(Token = "0x20003D7")]
		public class Controller : IDisposable
		{
			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Action m_OnVideoInitialized;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ReferenceVideo m_ReferenceVideo;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_VideoInitialized;

			[Token(Token = "0x1700048B")]
			public bool Initialized
			{
				[Token(Token = "0x6001A42")]
				[Address(RVA = "0x270E39C", Offset = "0x270E39C", VA = "0x270E39C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700048C")]
			private VideoPlayer VideoPlayer
			{
				[Token(Token = "0x6001A45")]
				[Address(RVA = "0x270E4D0", Offset = "0x270E4D0", VA = "0x270E4D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048D")]
			public Texture VideoTexture
			{
				[Token(Token = "0x6001A46")]
				[Address(RVA = "0x270CF08", Offset = "0x270CF08", VA = "0x270CF08")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			public bool Playing
			{
				[Token(Token = "0x6001A47")]
				[Address(RVA = "0x270C790", Offset = "0x270C790", VA = "0x270C790")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001A48")]
				[Address(RVA = "0x270C820", Offset = "0x270C820", VA = "0x270C820")]
				set
				{
				}
			}

			[Token(Token = "0x1700048F")]
			public float Volume
			{
				[Token(Token = "0x6001A49")]
				[Address(RVA = "0x270C8B4", Offset = "0x270C8B4", VA = "0x270C8B4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A4A")]
				[Address(RVA = "0x270C958", Offset = "0x270C958", VA = "0x270C958")]
				set
				{
				}
			}

			[Token(Token = "0x17000490")]
			public float Position
			{
				[Token(Token = "0x6001A4B")]
				[Address(RVA = "0x270E4EC", Offset = "0x270E4EC", VA = "0x270E4EC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A4C")]
				[Address(RVA = "0x270E554", Offset = "0x270E554", VA = "0x270E554")]
				set
				{
				}
			}

			[Token(Token = "0x17000491")]
			public float Time
			{
				[Token(Token = "0x6001A4D")]
				[Address(RVA = "0x270D550", Offset = "0x270D550", VA = "0x270D550")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A4E")]
				[Address(RVA = "0x270D5C8", Offset = "0x270D5C8", VA = "0x270D5C8")]
				set
				{
				}
			}

			[Token(Token = "0x17000492")]
			public float Length
			{
				[Token(Token = "0x6001A4F")]
				[Address(RVA = "0x270D58C", Offset = "0x270D58C", VA = "0x270D58C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x14000021")]
			public event Action OnVideoInitialized
			{
				[Token(Token = "0x6001A43")]
				[Address(RVA = "0x270E3A4", Offset = "0x270E3A4", VA = "0x270E3A4")]
				add
				{
				}
				[Token(Token = "0x6001A44")]
				[Address(RVA = "0x270E450", Offset = "0x270E450", VA = "0x270E450")]
				remove
				{
				}
			}

			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x270DC28", Offset = "0x270DC28", VA = "0x270DC28")]
			public Controller(ReferenceVideo referenceVideo)
			{
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x270E5C4", Offset = "0x270E5C4", VA = "0x270E5C4")]
			public Controller(Controller other)
			{
			}

			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x270E1CC", Offset = "0x270E1CC", VA = "0x270E1CC", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x270DEB0", Offset = "0x270DEB0", VA = "0x270DEB0")]
			public void OnInitialization()
			{
			}
		}

		[Token(Token = "0x20003D8")]
		[CompilerGenerated]
		private sealed class <PrepareVideoPlayer>d__47 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceVideo <>4__this;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCompletion;

			[Token(Token = "0x17000493")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001A57")]
				[Address(RVA = "0x270EAF8", Offset = "0x270EAF8", VA = "0x270EAF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A59")]
				[Address(RVA = "0x270EB40", Offset = "0x270EB40", VA = "0x270EB40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x270DFD0", Offset = "0x270DFD0", VA = "0x270DFD0")]
			[DebuggerHidden]
			public <PrepareVideoPlayer>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x270E640", Offset = "0x270E640", VA = "0x270E640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x270E644", Offset = "0x270E644", VA = "0x270E644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x270EB00", Offset = "0x270EB00", VA = "0x270EB00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D9")]
		[CompilerGenerated]
		private sealed class <Initialize>d__49 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceVideo <>4__this;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Controller <thumbnailExtractor>5__2;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <width>5__3;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <height>5__4;

			[Token(Token = "0x17000495")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001A5D")]
				[Address(RVA = "0x270EF80", Offset = "0x270EF80", VA = "0x270EF80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A5F")]
				[Address(RVA = "0x270EFC8", Offset = "0x270EFC8", VA = "0x270EFC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x270E068", Offset = "0x270E068", VA = "0x270E068")]
			[DebuggerHidden]
			public <Initialize>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x270EB48", Offset = "0x270EB48", VA = "0x270EB48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x270EB4C", Offset = "0x270EB4C", VA = "0x270EB4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x270EF88", Offset = "0x270EF88", VA = "0x270EF88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VideoPlayer m_VideoPlayer;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<Controller> m_Controllers;

		[Token(Token = "0x17000480")]
		public string PersistentPath
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x270D8F8", Offset = "0x270D8F8", VA = "0x270D8F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		public string AbsolutePath
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x270D900", Offset = "0x270D900", VA = "0x270D900")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		public bool NetworkVideo
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x270D908", Offset = "0x270D908", VA = "0x270D908")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000483")]
		public string HumanName
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x270D910", Offset = "0x270D910", VA = "0x270D910")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x270D918", Offset = "0x270D918", VA = "0x270D918")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x270D920", Offset = "0x270D920", VA = "0x270D920")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public uint Width
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x270D928", Offset = "0x270D928", VA = "0x270D928")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x270D930", Offset = "0x270D930", VA = "0x270D930")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public uint Height
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x270D938", Offset = "0x270D938", VA = "0x270D938")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x270D940", Offset = "0x270D940", VA = "0x270D940")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public float Aspect
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x270D948", Offset = "0x270D948", VA = "0x270D948")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x270D950", Offset = "0x270D950", VA = "0x270D950")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000488")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x270D958", Offset = "0x270D958", VA = "0x270D958")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x270D960", Offset = "0x270D960", VA = "0x270D960")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000489")]
		public bool HasInstances
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x270D96C", Offset = "0x270D96C", VA = "0x270D96C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048A")]
		public string Error
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x270D9BC", Offset = "0x270D9BC", VA = "0x270D9BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0x270D9C4", Offset = "0x270D9C4", VA = "0x270D9C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x270D7E0", Offset = "0x270D7E0", VA = "0x270D7E0")]
		public static ReferenceVideo CreateDummyVideo()
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x270D9CC", Offset = "0x270D9CC", VA = "0x270D9CC")]
		public ReferenceVideo(string filePath)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x270D838", Offset = "0x270D838", VA = "0x270D838")]
		private ReferenceVideo()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x270DAE8", Offset = "0x270DAE8", VA = "0x270DAE8")]
		public Controller CreateController()
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x270DD40", Offset = "0x270DD40", VA = "0x270DD40")]
		private void InitializeControllers()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x270DEE4", Offset = "0x270DEE4", VA = "0x270DEE4")]
		private void OnControllerDisposed(Controller controller)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x270DCCC", Offset = "0x270DCCC", VA = "0x270DCCC")]
		[IteratorStateMachine(typeof(<PrepareVideoPlayer>d__47))]
		private IEnumerator<Null> PrepareVideoPlayer(Action onCompletion)
		{
			return null;
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x270DFF8", Offset = "0x270DFF8", VA = "0x270DFF8")]
		private void OnError(VideoPlayer player, string error)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x270E000", Offset = "0x270E000", VA = "0x270E000")]
		[IteratorStateMachine(typeof(<Initialize>d__49))]
		public IEnumerator<Null> Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x270E090", Offset = "0x270E090", VA = "0x270E090")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x270E1F0", Offset = "0x270E1F0", VA = "0x270E1F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003DA")]
	public class RegisterVisualizerObject : MonoBehaviour
	{
		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_ShowInReactorModeOnly;

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x270EFD0", Offset = "0x270EFD0", VA = "0x270EFD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x270F03C", Offset = "0x270F03C", VA = "0x270F03C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x270F0A8", Offset = "0x270F0A8", VA = "0x270F0A8")]
		public RegisterVisualizerObject()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	internal abstract class Bytable
	{
		[Token(Token = "0x17000497")]
		public abstract int Length
		{
			[Token(Token = "0x6001A63")]
			get;
		}

		[Token(Token = "0x6001A64")]
		public abstract void ToBytes(ref byte[] bytes);

		[Token(Token = "0x6001A65")]
		public abstract void FromBytes(byte[] buf);

		[Token(Token = "0x6001A66")]
		public abstract Array GetArray();

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x270F0B0", Offset = "0x270F0B0", VA = "0x270F0B0")]
		protected Bytable()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	internal class Color32Bytable : Bytable
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color32[] m_buffer;

		[Token(Token = "0x17000498")]
		public override int Length
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x270F0E0", Offset = "0x270F0E0", VA = "0x270F0E0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x270F0B8", Offset = "0x270F0B8", VA = "0x270F0B8")]
		public Color32Bytable(Color32[] buffer)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x270F0FC", Offset = "0x270F0FC", VA = "0x270F0FC", Slot = "7")]
		public override Array GetArray()
		{
			return null;
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x270F104", Offset = "0x270F104", VA = "0x270F104", Slot = "5")]
		public override void ToBytes(ref byte[] buf)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x270F1F0", Offset = "0x270F1F0", VA = "0x270F1F0", Slot = "6")]
		public override void FromBytes(byte[] buf)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	internal class FloatBytable : Bytable
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] m_buffer;

		[Token(Token = "0x17000499")]
		public override int Length
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x270F384", Offset = "0x270F384", VA = "0x270F384", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x270F35C", Offset = "0x270F35C", VA = "0x270F35C")]
		public FloatBytable(float[] buffer)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x270F3A0", Offset = "0x270F3A0", VA = "0x270F3A0", Slot = "7")]
		public override Array GetArray()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x270F3A8", Offset = "0x270F3A8", VA = "0x270F3A8", Slot = "5")]
		public override void ToBytes(ref byte[] buf)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x270F4C8", Offset = "0x270F4C8", VA = "0x270F4C8", Slot = "6")]
		public override void FromBytes(byte[] buf)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	internal class FfmpegPipe
	{
		[Token(Token = "0x40017C9")]
		public const string kFfmpegDir = "Support/ThirdParty/ffmpeg";

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Process m_encoderProc;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Thread m_dataWriterThread;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread m_dataReaderThread;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thread m_logReaderThread;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_shouldExit;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_shouldPause;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StreamReader m_stderr;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BinaryWriter m_dataWriter;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BinaryReader m_dataReader;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_frameCount;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ManualResetEvent m_ready;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ManualResetEvent m_sleeper;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AutoResetEvent m_frameReady;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ManualResetEvent m_frameWritten;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Bytable m_frame;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RingBuffer<Bytable> m_framesOut;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_shouldBlock;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_height;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_width;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string m_outputFile;

		[Token(Token = "0x1700049A")]
		private int Height
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x270F630", Offset = "0x270F630", VA = "0x270F630")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700049B")]
		private int Width
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x270F638", Offset = "0x270F638", VA = "0x270F638")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700049C")]
		public int FrameCount
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x270F640", Offset = "0x270F640", VA = "0x270F640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700049D")]
		public string OutputFile
		{
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x270F648", Offset = "0x270F648", VA = "0x270F648")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x270F650", Offset = "0x270F650", VA = "0x270F650")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public bool IsReadyForInput
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x270F658", Offset = "0x270F658", VA = "0x270F658")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049F")]
		public bool DidExit
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x270F688", Offset = "0x270F688", VA = "0x270F688")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A0")]
		public Action<Bytable> ReleaseFrame
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x270F6B4", Offset = "0x270F6B4", VA = "0x270F6B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x270F6BC", Offset = "0x270F6BC", VA = "0x270F6BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x270F5DC", Offset = "0x270F5DC", VA = "0x270F5DC")]
		public static string GetFfmpegExe()
		{
			return null;
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x270F6C4", Offset = "0x270F6C4", VA = "0x270F6C4")]
		public FfmpegPipe()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x270F7B0", Offset = "0x270F7B0", VA = "0x270F7B0")]
		public bool Start(string source, string outputFile, int width, int height, float sampleRate, bool blocking)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x2710258", Offset = "0x2710258", VA = "0x2710258")]
		public static string GetVideoEncoder()
		{
			return null;
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x270FB68", Offset = "0x270FB68", VA = "0x270FB68")]
		private bool LaunchEncoder(string inputFile, string outputFile, int width, int height, float sampleRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x27102E0", Offset = "0x27102E0", VA = "0x27102E0")]
		public static bool Mux(string audioFile, string videoFile, string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x27105A0", Offset = "0x27105A0", VA = "0x27105A0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x2710618", Offset = "0x2710618", VA = "0x2710618")]
		public bool WaitForEncoderExit(int milliseconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x2710680", Offset = "0x2710680", VA = "0x2710680")]
		public Bytable QueueFrame(Bytable buffer)
		{
			return null;
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x27106E0", Offset = "0x27106E0", VA = "0x27106E0")]
		public void GetFrame(ref Color32Bytable buffer)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x27107BC", Offset = "0x27107BC", VA = "0x27107BC")]
		private void ReadFfmpegOutput()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x2710A94", Offset = "0x2710A94", VA = "0x2710A94")]
		private void WriteFramesToFfmpeg()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x2710D98", Offset = "0x2710D98", VA = "0x2710D98")]
		private void ReadFramesFromFfmpeg()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class IconTextureAtlas : MonoBehaviour
	{
		[Token(Token = "0x40017DF")]
		private const int m_AtlasSize = 2048;

		[Token(Token = "0x40017E0")]
		private const int m_TextureSize = 128;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_BaseMaterial;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_ActiveMaterial;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_ActiveMaterialBorderPercent;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_CatalogPath;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_ExperimentalCatalogPath;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IconTextureAtlasCatalog m_Catalog;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_AtlasMaterial_Base;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_AtlasMaterial_Active;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_AtlasMaterial_Base_NoFocus;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_AtlasMaterial_Active_NoFocus;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, Rect> m_TextureDictionary;

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x27114C4", Offset = "0x27114C4", VA = "0x27114C4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x2711A88", Offset = "0x2711A88", VA = "0x2711A88")]
		public Material GetAppropriateMaterial(bool activated, bool focus)
		{
			return null;
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x27114C8", Offset = "0x27114C8", VA = "0x27114C8")]
		private void AtlasIconTextures()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x2711AFC", Offset = "0x2711AFC", VA = "0x2711AFC")]
		public bool GetTextureUVs(Texture2D texture, out Rect uvs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x2711C0C", Offset = "0x2711C0C", VA = "0x2711C0C")]
		public static List<Vector2> ScaleUvsWithAtlasRect(Rect r, List<Vector2> inUvs)
		{
			return null;
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x2711DF4", Offset = "0x2711DF4", VA = "0x2711DF4")]
		public IconTextureAtlas()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[CreateAssetMenu(fileName = "AtlasCatalog", menuName = "Atlas Catalog", order = 1)]
	public class IconTextureAtlasCatalog : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003E1")]
		public class TextureEntry
		{
			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D m_texture;

			[Token(Token = "0x40017F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rect m_rect;

			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x2711E34", Offset = "0x2711E34", VA = "0x2711E34")]
			public TextureEntry()
			{
			}
		}

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TiltBrushManifest[] m_brushManifests;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D m_Atlas;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_AtlasSize;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("Set <= 0 to disable.")]
		private int m_VerifyTextureSize;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_paths;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextureEntry[] m_entries;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_padding;

		[Token(Token = "0x170004A1")]
		public Texture2D Atlas
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x2711E08", Offset = "0x2711E08", VA = "0x2711E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		public int Padding
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x2711E10", Offset = "0x2711E10", VA = "0x2711E10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A3")]
		public int Length
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x2711AE0", Offset = "0x2711AE0", VA = "0x2711AE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A4")]
		public TextureEntry this[int key]
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x2711AB0", Offset = "0x2711AB0", VA = "0x2711AB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x2711E18", Offset = "0x2711E18", VA = "0x2711E18")]
		public IconTextureAtlasCatalog()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class GpuIntersector : MonoBehaviour
	{
		[Token(Token = "0x20003E3")]
		public delegate bool ResultReader();

		[Token(Token = "0x20003E4")]
		public struct BatchResult
		{
			[Token(Token = "0x40017FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrabWidget widget;

			[Token(Token = "0x40017FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BatchSubset subset;
		}

		[Token(Token = "0x20003E5")]
		public struct ModelResult
		{
			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrabWidget widget;
		}

		[Token(Token = "0x20003E6")]
		public abstract class FutureResult
		{
			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			protected RenderTexture m_ResultTex;

			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected int m_ResultCount;

			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			protected byte m_MaxResults;

			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected int m_StartFrame;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int sm_CopyKernel;

			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static uint[] sm_ReadbackBufferStorage;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static ComputeBuffer sm_ReadbackBuffer;

			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static ComputeShader sm_ComputeCopyShader;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static HashSet<object> sm_pool;

			[Token(Token = "0x170004A5")]
			public bool IsReady
			{
				[Token(Token = "0x6001AA7")]
				[Address(RVA = "0x2712F0C", Offset = "0x2712F0C", VA = "0x2712F0C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A6")]
			public int StartFrame
			{
				[Token(Token = "0x6001AA8")]
				[Address(RVA = "0x2712F1C", Offset = "0x2712F1C", VA = "0x2712F1C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0x2712CD4", Offset = "0x2712CD4", VA = "0x2712CD4")]
			protected static HashSet<object> AllocateHashSet()
			{
				return null;
			}

			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x2712DB8", Offset = "0x2712DB8", VA = "0x2712DB8")]
			protected static void DeallocateHashSet(HashSet<object> obj)
			{
			}

			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x2712E2C", Offset = "0x2712E2C", VA = "0x2712E2C")]
			public FutureResult(RenderTexture texture, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x2712F24", Offset = "0x2712F24", VA = "0x2712F24")]
			public bool HasAnyIntersections()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x2712F8C", Offset = "0x2712F8C", VA = "0x2712F8C")]
			private bool ReadResultsCallback()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x2712FD4", Offset = "0x2712FD4", VA = "0x2712FD4")]
			protected uint[] GetTextureColors()
			{
				return null;
			}

			[Token(Token = "0x6001AAC")]
			protected abstract void OnReadResults();
		}

		[Token(Token = "0x20003E7")]
		public class FutureBatchResult : FutureResult
		{
			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<BatchResult> m_ResultList;

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x27126E4", Offset = "0x27126E4", VA = "0x27126E4")]
			public FutureBatchResult(RenderTexture texture, List<BatchResult> results, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x27130B0", Offset = "0x27130B0", VA = "0x27130B0")]
			public List<BatchResult> GetResults()
			{
				return null;
			}

			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x271313C", Offset = "0x271313C", VA = "0x271313C", Slot = "4")]
			protected override void OnReadResults()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		public class FutureModelResult : FutureResult
		{
			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ModelResult> m_ResultList;

			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0x27129B8", Offset = "0x27129B8", VA = "0x27129B8")]
			public FutureModelResult(RenderTexture texture, List<ModelResult> results, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x27135E4", Offset = "0x27135E4", VA = "0x27135E4")]
			public List<ModelResult> GetResults()
			{
				return null;
			}

			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x2713624", Offset = "0x2713624", VA = "0x2713624", Slot = "4")]
			protected override void OnReadResults()
			{
			}
		}

		[Token(Token = "0x40017F5")]
		private const int kTexSize = 16;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ushort sm_BatchIdCounter;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader m_IntersectionShader;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader m_DownsampleShader;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ComputeShader m_ComputeCopyShader;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_DownsampleMat;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture m_HighResTex;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_IntersectionCamera;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ResultReader> m_activeResults;

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x2711E3C", Offset = "0x2711E3C", VA = "0x2711E3C")]
		public static ushort GetNextBatchId()
		{
			return default(ushort);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x2711E9C", Offset = "0x2711E9C", VA = "0x2711E9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x2712220", Offset = "0x2712220", VA = "0x2712220")]
		private void OnGuaranteedAppQuit()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x2712274", Offset = "0x2712274", VA = "0x2712274")]
		private void ReadResultsDispatchCallback()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x2712344", Offset = "0x2712344", VA = "0x2712344")]
		public FutureBatchResult RequestBatchIntersection(Vector3 vDetectionCenter_GS, float radius_GS, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x2712710", Offset = "0x2712710", VA = "0x2712710")]
		public FutureBatchResult RequestBatchIntersections(Vector3 vDetectionCenter_GS, float radius_GS, List<BatchResult> resultsOut, byte maxResults, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x2712864", Offset = "0x2712864", VA = "0x2712864")]
		public FutureModelResult RequestModelIntersections(Vector3 vDetectionCenter_GS, float radius_GS, List<ModelResult> resultsOut, byte maxResults, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x27129E4", Offset = "0x27129E4", VA = "0x27129E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x2712AD8", Offset = "0x2712AD8", VA = "0x2712AD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x2712488", Offset = "0x2712488", VA = "0x2712488")]
		private RenderTexture RenderIntersection(Vector3 vDetectionCenter_GS, float radius_GS, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x2712AF4", Offset = "0x2712AF4", VA = "0x2712AF4")]
		public GpuIntersector()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class OculusCameraFade : MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[CompilerGenerated]
		private sealed class <FadeColor>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusCameraFade <>4__this;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeIn;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <finalFadeColor>5__2;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color <initialFadeColor>5__3;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timer>5__4;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ABB")]
				[Address(RVA = "0x2713C04", Offset = "0x2713C04", VA = "0x2713C04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ABD")]
				[Address(RVA = "0x2713C4C", Offset = "0x2713C4C", VA = "0x2713C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x27139C4", Offset = "0x27139C4", VA = "0x27139C4")]
			[DebuggerHidden]
			public <FadeColor>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x2713AD0", Offset = "0x2713AD0", VA = "0x2713AD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x2713AD4", Offset = "0x2713AD4", VA = "0x2713AD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x2713C0C", Offset = "0x2713C0C", VA = "0x2713C0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OculusCameraFade m_Instance;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_FadeMaterial;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_IsFading;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x2713850", Offset = "0x2713850", VA = "0x2713850")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x2713904", Offset = "0x2713904", VA = "0x2713904")]
		public void Fade(bool fadeIn, float fadeTime)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x2713938", Offset = "0x2713938", VA = "0x2713938")]
		[IteratorStateMachine(typeof(<FadeColor>d__5))]
		private IEnumerator FadeColor(bool fadeIn, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x27139EC", Offset = "0x27139EC", VA = "0x27139EC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x2713AC8", Offset = "0x2713AC8", VA = "0x2713AC8")]
		public OculusCameraFade()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class OdsDriver : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fps;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HybridCamera m_odsCamera;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_framesToCapture;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_turnTableRotation;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_outputFolder;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_outputBasename;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_frameTick;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stopwatch m_frameTimer;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch m_renderTimer;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_videoPath;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_imagesPath;

		[Token(Token = "0x170004A9")]
		private bool HaveCameraPath
		{
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x2713C54", Offset = "0x2713C54", VA = "0x2713C54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AA")]
		public HybridCamera OdsCamera
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x2713C5C", Offset = "0x2713C5C", VA = "0x2713C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AB")]
		public int FramesToCapture
		{
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x2713C64", Offset = "0x2713C64", VA = "0x2713C64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x2713C6C", Offset = "0x2713C6C", VA = "0x2713C6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004AC")]
		public float TurnTableRotation
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x2713CD4", Offset = "0x2713CD4", VA = "0x2713CD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x2713CDC", Offset = "0x2713CDC", VA = "0x2713CDC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public string CameraPath
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x2713CE4", Offset = "0x2713CE4", VA = "0x2713CE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x2713CEC", Offset = "0x2713CEC", VA = "0x2713CEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public string OutputFolder
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x2713CF4", Offset = "0x2713CF4", VA = "0x2713CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x2713CFC", Offset = "0x2713CFC", VA = "0x2713CFC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public string OutputBasename
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x2713D04", Offset = "0x2713D04", VA = "0x2713D04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x2713D0C", Offset = "0x2713D0C", VA = "0x2713D0C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public bool IsRendering
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x2713D14", Offset = "0x2713D14", VA = "0x2713D14")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x2713D1C", Offset = "0x2713D1C", VA = "0x2713D1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x2713D28", Offset = "0x2713D28", VA = "0x2713D28")]
		public void BeginRender()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x2714344", Offset = "0x2714344", VA = "0x2714344")]
		public static TrTransform GetScenePose(float progress)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x2714578", Offset = "0x2714578", VA = "0x2714578")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x2714DB8", Offset = "0x2714DB8", VA = "0x2714DB8")]
		public OdsDriver()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class PostEffectsToggle : MonoBehaviour
	{
		[Token(Token = "0x6001AD0")]
		private void Toggle<T>(bool enabled)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x2714E44", Offset = "0x2714E44", VA = "0x2714E44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x2714ECC", Offset = "0x2714ECC", VA = "0x2714ECC")]
		private void OnPostEffectsChanged()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x2714F98", Offset = "0x2714F98", VA = "0x2714F98")]
		public PostEffectsToggle()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[RequireComponent(typeof(Camera))]
	public class RenderWrapper : MonoBehaviour
	{
		[Token(Token = "0x20003EE")]
		private struct Feature
		{
			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour behaviour;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool defaultState;
		}

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_StencilToMaskMaterial;

		[NonSerialized]
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture m_MaskTarget;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_readbackTextureFrame;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camCopy;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_cameraCullingMask;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SelectionEffect m_selectionEffect;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture m_hdrTarget;

		[Token(Token = "0x400182D")]
		public const float SSAA_MIN = 0.125f;

		[Token(Token = "0x400182E")]
		public const float SSAA_MAX = 4f;

		[Token(Token = "0x400182F")]
		public const float SSAA_QUANTUM = 8f;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_superSampling;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_configuredFor;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isRecording;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isRecorder;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_blitWithScale;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Feature> m_features;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LightShadows[] m_shadows;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<RenderTextureFormat, RenderTextureFormat> m_GetCreatedFormatMemo;

		[Token(Token = "0x170004B1")]
		public float SuperSampling
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x271503C", Offset = "0x271503C", VA = "0x271503C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x2715044", Offset = "0x2715044", VA = "0x2715044")]
			set
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action ReadBackTextures
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x2712184", Offset = "0x2712184", VA = "0x2712184")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x2714FA0", Offset = "0x2714FA0", VA = "0x2714FA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001AD8")]
		private void AddFeature<T>()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x271515C", Offset = "0x271515C", VA = "0x271515C")]
		private void ToggleFeatures(bool enable)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x2715224", Offset = "0x2715224", VA = "0x2715224")]
		private RenderTextureFormat GetTargetFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x271529C", Offset = "0x271529C", VA = "0x271529C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x271537C", Offset = "0x271537C", VA = "0x271537C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x2715598", Offset = "0x2715598", VA = "0x2715598")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x27157E8", Offset = "0x27157E8", VA = "0x27157E8")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x2715B00", Offset = "0x2715B00", VA = "0x2715B00")]
		private RenderTextureFormat GetCreatedFormat(RenderTextureFormat fmt)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x2715C50", Offset = "0x2715C50", VA = "0x2715C50")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001AE1")]
		private bool ExistsAndIsEnabled<T>() where T : MonoBehaviour
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x2715D08", Offset = "0x2715D08", VA = "0x2715D08")]
		private bool HasHdrDecodePass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x2715D50", Offset = "0x2715D50", VA = "0x2715D50")]
		public RenderWrapper()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class SelectionEffect : MonoBehaviour
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_GrabHighlightMaskMaterial;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_WidgetSelectionPostEffect;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_StrokeSelectionPostEffect;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_BlurWidth;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Selection Color Settings")]
		[SerializeField]
		private float m_SelectionSaturation;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SelectionValue;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_SelectionHueSpeed;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_SelectionHueStereoOffset;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Header("Mobile Selection Shader Settings")]
		[SerializeField]
		private float m_NoiseSparkleSpeed;

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x2715E50", Offset = "0x2715E50", VA = "0x2715E50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x2715F7C", Offset = "0x2715F7C", VA = "0x2715F7C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x2715F80", Offset = "0x2715F80", VA = "0x2715F80")]
		private void OnPosesApplied()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x271635C", Offset = "0x271635C", VA = "0x271635C")]
		public void RegisterMesh(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x2716360", Offset = "0x2716360", VA = "0x2716360")]
		public void UnregisterMesh(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x2716364", Offset = "0x2716364", VA = "0x2716364")]
		public bool RenderHighlight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x27163A4", Offset = "0x27163A4", VA = "0x27163A4")]
		public void HighlightForGrab(bool grabAvailable)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x27163A8", Offset = "0x27163A8", VA = "0x27163A8")]
		public SelectionEffect()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class ShaderWarmup : MonoBehaviour
	{
		[Token(Token = "0x20003F1")]
		private class MaterialComparer : IEqualityComparer<Material>
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x27165A0", Offset = "0x27165A0", VA = "0x27165A0", Slot = "4")]
			public bool Equals(Material x, Material y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x27166C0", Offset = "0x27166C0", VA = "0x27166C0", Slot = "5")]
			public int GetHashCode(Material material)
			{
				return default(int);
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x2716800", Offset = "0x2716800", VA = "0x2716800")]
			public MaterialComparer()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		[CompilerGenerated]
		private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderWarmup <>4__this;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF9")]
				[Address(RVA = "0x2716978", Offset = "0x2716978", VA = "0x2716978", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AFB")]
				[Address(RVA = "0x27169C0", Offset = "0x27169C0", VA = "0x27169C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x27164D8", Offset = "0x27164D8", VA = "0x27164D8")]
			[DebuggerHidden]
			public <Start>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x2716808", Offset = "0x2716808", VA = "0x2716808", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x271680C", Offset = "0x271680C", VA = "0x271680C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x2716980", Offset = "0x2716980", VA = "0x2716980", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		[CompilerGenerated]
		private sealed class <WarmupShaders>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderWarmup <>4__this;

			[Token(Token = "0x4001853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Material[] <distinctShaders>5__2;

			[Token(Token = "0x4001854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <size>5__3;

			[Token(Token = "0x4001855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <offset>5__4;

			[Token(Token = "0x4001856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <index>5__5;

			[Token(Token = "0x4001857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material[] <>7__wrap5;

			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap6;

			[Token(Token = "0x170004B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B03")]
				[Address(RVA = "0x27171F8", Offset = "0x27171F8", VA = "0x27171F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B05")]
				[Address(RVA = "0x2717240", Offset = "0x2717240", VA = "0x2717240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x2716568", Offset = "0x2716568", VA = "0x2716568")]
			[DebuggerHidden]
			public <WarmupShaders>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x2716A64", Offset = "0x2716A64", VA = "0x2716A64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x2716A68", Offset = "0x2716A68", VA = "0x2716A68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x2717200", Offset = "0x2717200", VA = "0x2717200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_FramesBeforeWarmup;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_FramesAfterWarmup;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_ShadersPerFrame;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_RootObject;

		[Token(Token = "0x170004B2")]
		public static ShaderWarmup Instance
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x27163CC", Offset = "0x27163CC", VA = "0x27163CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x2716414", Offset = "0x2716414", VA = "0x2716414")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		public float Progress
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x2716460", Offset = "0x2716460", VA = "0x2716460")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x2716468", Offset = "0x2716468", VA = "0x2716468")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x2716470", Offset = "0x2716470", VA = "0x2716470")]
		[IteratorStateMachine(typeof(<Start>d__12))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x2716500", Offset = "0x2716500", VA = "0x2716500")]
		[IteratorStateMachine(typeof(<WarmupShaders>d__13))]
		private IEnumerator WarmupShaders()
		{
			return null;
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x2716590", Offset = "0x2716590", VA = "0x2716590")]
		public ShaderWarmup()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class UsdPathSerializer : MonoBehaviour
	{
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x2717248", Offset = "0x2717248", VA = "0x2717248")]
		public UsdPathSerializer()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class VideoRecorder : MonoBehaviour
	{
		[Token(Token = "0x20003F7")]
		private class StereoBuffer
		{
			[Token(Token = "0x400187B")]
			private const int kSizeInSeconds = 4;

			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private decimal m_FPS;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] m_scratch;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float[] m_stereo;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int m_frameSamples;

			[Token(Token = "0x4001880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int m_sampleRate;

			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RingBuffer<float> m_leftChannel;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private RingBuffer<float> m_rightChannel;

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x1F8175C", Offset = "0x1F8175C", VA = "0x1F8175C")]
			public StereoBuffer()
			{
			}

			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x1F817D8", Offset = "0x1F817D8", VA = "0x1F817D8")]
			public void SetSampleRates(decimal fps, int hz)
			{
			}

			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x1F819E8", Offset = "0x1F819E8", VA = "0x1F819E8")]
			public bool IsFrameReady(int frame)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x1F81AF4", Offset = "0x1F81AF4", VA = "0x1F81AF4")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x1F81B58", Offset = "0x1F81B58", VA = "0x1F81B58")]
			public void Add(float left, float right)
			{
			}

			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x1F81A78", Offset = "0x1F81A78", VA = "0x1F81A78")]
			private int GetCurFrame()
			{
				return default(int);
			}

			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x1F81C5C", Offset = "0x1F81C5C", VA = "0x1F81C5C")]
			public FloatBytable PopFrame(int frame, int realTimeFrame, int videoFrame)
			{
				return null;
			}
		}

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_filePath;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_width;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_height;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isPlayingBack;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isCapturing;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_isSaving;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool m_isCapturingAudio;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_frameBuffered;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool m_texBuffered;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool m_isPortrait;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D m_playbackTexture;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ComputeBuffer m_captureBuffer;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color32[] m_currentFrameBuffer;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_blitToCompute;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch m_frameTimer;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FfmpegPipe m_ffmpegVideoReader;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FfmpegPipe m_ffmpegVideo;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FfmpegPipe m_ffmpegAudio;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private decimal m_FPS;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_lastVideoFrame;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_nextAudioFrame;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_playbackFrameCount;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_playbackCurFrame;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_videoFrameCount;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_playbackLoops;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_playbackNumLoops;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_playbackRequested;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StereoBuffer m_audioBuffer;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_audioFramesRequired;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_audioFrameCount;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Queue<Color32[]> m_videoFramePool;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<Color32[]> m_bufferedVideoFrames;

		[Token(Token = "0x4001879")]
		private const long kMaxQueueSizeBytes = 8589934592L;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_forcedCaptureFramerate;

		[Token(Token = "0x170004B8")]
		public decimal FPS
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x2717250", Offset = "0x2717250", VA = "0x2717250")]
			get
			{
				return default(decimal);
			}
		}

		[Token(Token = "0x170004B9")]
		public string FilePath
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0x271725C", Offset = "0x271725C", VA = "0x271725C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		public int PlaybackNumLoops
		{
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0x2717264", Offset = "0x2717264", VA = "0x2717264")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x271726C", Offset = "0x271726C", VA = "0x271726C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		public bool IsPlayingBack
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x2717274", Offset = "0x2717274", VA = "0x2717274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BC")]
		public bool IsSaving
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x271727C", Offset = "0x271727C", VA = "0x271727C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BD")]
		public bool IsCapturing
		{
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x271729C", Offset = "0x271729C", VA = "0x271729C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BE")]
		public bool IsCapturingAudio
		{
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0x27172A4", Offset = "0x27172A4", VA = "0x27172A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BF")]
		public bool IsPortrait
		{
			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0x27172AC", Offset = "0x27172AC", VA = "0x27172AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x27172B4", Offset = "0x27172B4", VA = "0x27172B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public int FrameCount
		{
			[Token(Token = "0x6001B11")]
			[Address(RVA = "0x27172C0", Offset = "0x27172C0", VA = "0x27172C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C1")]
		public int VideoDelayFrameCount
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0x27172C8", Offset = "0x27172C8", VA = "0x27172C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C2")]
		public int RealTimeFrameCount
		{
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x27172E4", Offset = "0x27172E4", VA = "0x27172E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C3")]
		public int PlaybackFrameCount
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x27173F0", Offset = "0x27173F0", VA = "0x27173F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C4")]
		public float PlaybackPercent
		{
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x27173F8", Offset = "0x27173F8", VA = "0x27173F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x271741C", Offset = "0x271741C", VA = "0x271741C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x27174BC", Offset = "0x27174BC", VA = "0x27174BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x2717604", Offset = "0x2717604", VA = "0x2717604")]
		private void OnGuaranteedAppQuit()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x2717CA4", Offset = "0x2717CA4", VA = "0x2717CA4")]
		public bool StartCapture(string filePath, int audioSampleRate, bool captureAudio, bool blocking, float fps)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x2717648", Offset = "0x2717648", VA = "0x2717648")]
		public void StopCapture(bool save)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x27182C4", Offset = "0x27182C4", VA = "0x27182C4")]
		private void DrainStop(string filePath, Queue<Color32[]> buffer, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x27187A4", Offset = "0x27187A4", VA = "0x27187A4")]
		private void RemoveFile(string filePath, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x27185E8", Offset = "0x27185E8", VA = "0x27185E8")]
		private void JoinFiles(string filePath, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x27188EC", Offset = "0x27188EC", VA = "0x27188EC")]
		public void StopPlayback()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x2718938", Offset = "0x2718938", VA = "0x2718938")]
		private void StartPlaybackReader()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x2718A48", Offset = "0x2718A48", VA = "0x2718A48")]
		public bool ShouldCapture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x2718A7C", Offset = "0x2718A7C", VA = "0x2718A7C")]
		public void ProcessAudio(float left, float right)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x2718B50", Offset = "0x2718B50", VA = "0x2718B50")]
		private void CaptureAudio()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x2718CF0", Offset = "0x2718CF0", VA = "0x2718CF0")]
		private bool Capture(RenderTexture source, RenderTexture dest)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x2718DB8", Offset = "0x2718DB8", VA = "0x2718DB8")]
		public void RequestPlayback()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x27182AC", Offset = "0x27182AC", VA = "0x27182AC")]
		public void SetCaptureFramerate(int framerate)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x2718DC4", Offset = "0x2718DC4", VA = "0x2718DC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x2718DFC", Offset = "0x2718DFC", VA = "0x2718DFC")]
		private void PostCapture()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x2715660", Offset = "0x2715660", VA = "0x2715660")]
		public void ReadbackCapture()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x27190AC", Offset = "0x27190AC", VA = "0x27190AC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x2719394", Offset = "0x2719394", VA = "0x2719394")]
		private void ReturnFrameToPool(Bytable array)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x27194F0", Offset = "0x27194F0", VA = "0x27194F0")]
		public VideoRecorder()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public static class VideoRecorderUtils
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float m_VideoCaptureResolutionScale;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_DebugVideoCaptureQualityLevel;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int m_PreCaptureQualityLevel;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float m_SuperSampling;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float m_PreCaptureSuperSampling;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static VideoRecorder m_ActiveVideoRecording;

		[Token(Token = "0x170004C5")]
		public static VideoRecorder ActiveVideoRecording
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x1F82088", Offset = "0x1F82088", VA = "0x1F82088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		public static int NumFramesInUsdSerializer
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x1F820E0", Offset = "0x1F820E0", VA = "0x1F820E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C7")]
		public static bool UsdPathSerializerIsBlocking
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x1F820E8", Offset = "0x1F820E8", VA = "0x1F820E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C8")]
		public static bool UsdPathIsFinished
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x1F820F0", Offset = "0x1F820F0", VA = "0x1F820F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1F820F8", Offset = "0x1F820F8", VA = "0x1F820F8")]
		public static Transform AdvanceAndDeserializeUsd()
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1F82100", Offset = "0x1F82100", VA = "0x1F82100")]
		public static void SerializerNewUsdFrame()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1F82104", Offset = "0x1F82104", VA = "0x1F82104")]
		public static bool StartVideoCapture(string filePath, VideoRecorder recorder, UsdPathSerializer usdPathSerializer, bool offlineRender = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1F823F8", Offset = "0x1F823F8", VA = "0x1F823F8")]
		public static void StopVideoCapture(bool saveCapture)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1F82540", Offset = "0x1F82540", VA = "0x1F82540")]
		private static void CreateOfflineRenderBatchFile(string sketchFile, string usdaFile)
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class RotationCursorScript : MonoBehaviour
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_Mesh;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_ToCursorLine;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_CrossSectionLine;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_BaseToCursorScale;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_BaseCrossSectionScale;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_BaseToCursorColor;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_BaseCrossSectionColor;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_BeginFadePercent;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_EndFadePercent;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x1F827E4", Offset = "0x1F827E4", VA = "0x1F827E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1F828EC", Offset = "0x1F828EC", VA = "0x1F828EC")]
		public void PositionCursorLines(Vector3 vSurfaceCenter, Vector3 vSurfaceNormal, float fOffsetAngle, float fSurfaceWidth)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1F82D88", Offset = "0x1F82D88", VA = "0x1F82D88")]
		public void ClearCursorLines(Vector3 vSurfacePos)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1F82E4C", Offset = "0x1F82E4C", VA = "0x1F82E4C")]
		public RotationCursorScript()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class RotationIconScript : MonoBehaviour
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture m_Standard;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture m_AngleLocked;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1F82E54", Offset = "0x1F82E54", VA = "0x1F82E54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1F82EBC", Offset = "0x1F82EBC", VA = "0x1F82EBC")]
		public void SetLocked(bool bLocked)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1F82F44", Offset = "0x1F82F44", VA = "0x1F82F44")]
		public RotationIconScript()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public struct DiskSceneFileInfo : SceneFileInfo
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string kInvalidHumanName;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_fullpath;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_embedded;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_humanName;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_AssetId;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_SourceId;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_readOnly;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime? m_creationTime;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TiltFile m_TiltFile;

		[Token(Token = "0x170004C9")]
		public FileInfoType InfoType
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x1F82F4C", Offset = "0x1F82F4C", VA = "0x1F82F4C", Slot = "4")]
			get
			{
				return default(FileInfoType);
			}
		}

		[Token(Token = "0x170004CA")]
		public string HumanName
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x1F82F54", Offset = "0x1F82F54", VA = "0x1F82F54", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		public bool HumanNameValid
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x1F82F5C", Offset = "0x1F82F5C", VA = "0x1F82F5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CC")]
		public bool Valid
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x1F83000", Offset = "0x1F83000", VA = "0x1F83000", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CD")]
		public bool Available
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x1F83010", Offset = "0x1F83010", VA = "0x1F83010", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CE")]
		public bool IsPlainFile
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x1F83018", Offset = "0x1F83018", VA = "0x1F83018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CF")]
		public bool ReadOnly
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x1F8303C", Offset = "0x1F8303C", VA = "0x1F8303C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D0")]
		public string AssetId
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x1F83044", Offset = "0x1F83044", VA = "0x1F83044", Slot = "11")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x1F8304C", Offset = "0x1F8304C", VA = "0x1F8304C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public string SourceId
		{
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x1F83054", Offset = "0x1F83054", VA = "0x1F83054", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x1F8305C", Offset = "0x1F8305C", VA = "0x1F8305C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public string FullPath
		{
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x1F83064", Offset = "0x1F83064", VA = "0x1F83064", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D3")]
		public bool Exists
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x1F8306C", Offset = "0x1F8306C", VA = "0x1F8306C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D4")]
		public DateTime CreationTime
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x1F83170", Offset = "0x1F83170", VA = "0x1F83170")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170004D5")]
		public bool Embedded
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x1F83300", Offset = "0x1F83300", VA = "0x1F83300")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D6")]
		public int? TriangleCount
		{
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x1F83308", Offset = "0x1F83308", VA = "0x1F83308", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1F83310", Offset = "0x1F83310", VA = "0x1F83310")]
		public DiskSceneFileInfo(string path, bool embedded = false, bool readOnly = false)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1F8350C", Offset = "0x1F8350C", VA = "0x1F8350C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1F83558", Offset = "0x1F83558", VA = "0x1F83558")]
		public void UpdateHumanNameFrom(SceneFileInfo sourceSceneFileInfo)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1F83600", Offset = "0x1F83600", VA = "0x1F83600", Slot = "14")]
		public void Delete()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1F83A60", Offset = "0x1F83A60", VA = "0x1F83A60", Slot = "16")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1F83DD8", Offset = "0x1F83DD8", VA = "0x1F83DD8", Slot = "15")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1F8451C", Offset = "0x1F8451C", VA = "0x1F8451C")]
		public SketchMetadata ReadMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1F84954", Offset = "0x1F84954", VA = "0x1F84954")]
		public Stream LoadFromStreamingAssets(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x2000400")]
	public class FileSketchSet : SketchSet
	{
		[Token(Token = "0x2000401")]
		private class FileSketch : Sketch, IComparable<FileSketch>
		{
			[Token(Token = "0x2000402")]
			[CompilerGenerated]
			private sealed class <RequestLoadIconAndMetadataCoroutineThreaded>d__14 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40018B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40018B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40018B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x40018B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public FileSketch <>4__this;

				[Token(Token = "0x40018B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private Future<byte[]> <thumbFuture>5__2;

				[Token(Token = "0x40018BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private Future<SketchMetadata> <metadataFuture>5__3;

				[Token(Token = "0x170004E0")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001B92")]
					[Address(RVA = "0x1F874B0", Offset = "0x1F874B0", VA = "0x1F874B0", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004E1")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001B94")]
					[Address(RVA = "0x1F874F8", Offset = "0x1F874F8", VA = "0x1F874F8", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001B8F")]
				[Address(RVA = "0x1F86E64", Offset = "0x1F86E64", VA = "0x1F86E64")]
				[DebuggerHidden]
				public <RequestLoadIconAndMetadataCoroutineThreaded>d__14(int <>1__state)
				{
				}

				[Token(Token = "0x6001B90")]
				[Address(RVA = "0x1F87048", Offset = "0x1F87048", VA = "0x1F87048", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001B91")]
				[Address(RVA = "0x1F8704C", Offset = "0x1F8704C", VA = "0x1F8704C", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001B93")]
				[Address(RVA = "0x1F874B8", Offset = "0x1F874B8", VA = "0x1F874B8", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6001B95")]
				[Address(RVA = "0x1F87500", Offset = "0x1F87500", VA = "0x1F87500", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6001B96")]
				[Address(RVA = "0x1F875A4", Offset = "0x1F875A4", VA = "0x1F875A4", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x40018B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private DiskSceneFileInfo m_FileInfo;

			[Token(Token = "0x40018B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Texture2D m_Icon;

			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private string[] m_Authors;

			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool m_bMetadataValid;

			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private IEnumerator m_coroutine;

			[Token(Token = "0x170004DC")]
			public SceneFileInfo SceneFileInfo
			{
				[Token(Token = "0x6001B83")]
				[Address(RVA = "0x1F85570", Offset = "0x1F85570", VA = "0x1F85570", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DD")]
			public string[] Authors
			{
				[Token(Token = "0x6001B84")]
				[Address(RVA = "0x1F86DD4", Offset = "0x1F86DD4", VA = "0x1F86DD4", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DE")]
			public Texture2D Icon
			{
				[Token(Token = "0x6001B85")]
				[Address(RVA = "0x1F86DDC", Offset = "0x1F86DDC", VA = "0x1F86DDC", Slot = "6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DF")]
			public bool IconAndMetadataValid
			{
				[Token(Token = "0x6001B87")]
				[Address(RVA = "0x1F86DE4", Offset = "0x1F86DE4", VA = "0x1F86DE4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x1F86B58", Offset = "0x1F86B58", VA = "0x1F86B58")]
			public FileSketch(DiskSceneFileInfo info)
			{
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x1F86DEC", Offset = "0x1F86DEC", VA = "0x1F86DEC")]
			[IteratorStateMachine(typeof(<RequestLoadIconAndMetadataCoroutineThreaded>d__14))]
			private IEnumerable RequestLoadIconAndMetadataCoroutineThreaded()
			{
				return null;
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x1F86988", Offset = "0x1F86988", VA = "0x1F86988")]
			public bool RequestLoadIconAndMetadata()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x1F86E98", Offset = "0x1F86E98", VA = "0x1F86E98")]
			private void AbortPendingRequest()
			{
			}

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x1F863E4", Offset = "0x1F863E4", VA = "0x1F863E4")]
			public void UnloadIcon()
			{
			}

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x1F86F58", Offset = "0x1F86F58", VA = "0x1F86F58", Slot = "8")]
			public int CompareTo(FileSketch rCompareSketch)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ICON_LOAD_PER_FRAME;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected SketchSetType m_Type;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected bool m_ReadyForAccess;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<FileSketch> m_Sketches;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<int> m_RequestedLoads;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Queue m_ToAdd;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue m_ToDelete;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stack<int> Update__working;

		[Token(Token = "0x170004D7")]
		public SketchSetType Type
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0x1F8506C", Offset = "0x1F8506C", VA = "0x1F8506C", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170004D8")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0x1F85074", Offset = "0x1F85074", VA = "0x1F85074", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D9")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0x1F8507C", Offset = "0x1F8507C", VA = "0x1F8507C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DA")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0x1F85084", Offset = "0x1F85084", VA = "0x1F85084", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DB")]
		public int NumSketches
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0x1F850D4", Offset = "0x1F850D4", VA = "0x1F850D4", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnChanged
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x1F86B98", Offset = "0x1F86B98", VA = "0x1F86B98", Slot = "21")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x1F86C34", Offset = "0x1F86C34", VA = "0x1F86C34", Slot = "22")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1F86CD0", Offset = "0x1F86CD0", VA = "0x1F86CD0", Slot = "23")]
			add
			{
			}
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x1F86CD4", Offset = "0x1F86CD4", VA = "0x1F86CD4", Slot = "24")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1F84DA4", Offset = "0x1F84DA4", VA = "0x1F84DA4")]
		public static byte[] ReadThumbnail(SceneFileInfo fileinfo)
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1F8511C", Offset = "0x1F8511C", VA = "0x1F8511C")]
		public FileSketchSet()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1F8531C", Offset = "0x1F8531C", VA = "0x1F8531C", Slot = "10")]
		public bool IsSketchIndexValid(int iIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1F8537C", Offset = "0x1F8537C", VA = "0x1F8537C", Slot = "12")]
		public bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1F854AC", Offset = "0x1F854AC", VA = "0x1F854AC", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int iSketchIndex)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x1F855D4", Offset = "0x1F855D4", VA = "0x1F855D4", Slot = "14")]
		public string GetSketchName(int iSketchIndex)
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1F85710", Offset = "0x1F85710", VA = "0x1F85710", Slot = "16")]
		public void PrecacheSketchModels(int iSketchIndex)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1F85860", Offset = "0x1F85860", VA = "0x1F85860", Slot = "25")]
		public virtual void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x1F85B60", Offset = "0x1F85B60", VA = "0x1F85B60", Slot = "26")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1F86194", Offset = "0x1F86194", VA = "0x1F86194", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1F86358", Offset = "0x1F86358", VA = "0x1F86358")]
		private void DumpIconTextures()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1F86454", Offset = "0x1F86454", VA = "0x1F86454", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1F86470", Offset = "0x1F86470", VA = "0x1F86470", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1F8648C", Offset = "0x1F8648C", VA = "0x1F8648C", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1F86490", Offset = "0x1F86490", VA = "0x1F86490", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x1F85DBC", Offset = "0x1F85DBC", VA = "0x1F85DBC")]
		private void ProcessDirectory(string path)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1F86880", Offset = "0x1F86880", VA = "0x1F86880")]
		protected void AddSketchToSet(DiskSceneFileInfo rInfo)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1F86764", Offset = "0x1F86764", VA = "0x1F86764")]
		private bool RemoveSketchByPath(string path)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000405")]
	public static class MetadataUtils
	{
		[Token(Token = "0x2000406")]
		public struct WidgetMetadata
		{
			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrTransform xf;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool pinned;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool tinted;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public uint groupId;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int layerId;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x1F876D8", Offset = "0x1F876D8", VA = "0x1F876D8")]
		public static TrTransform[] Sanitize(TrTransform[] data)
		{
			return null;
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1F87940", Offset = "0x1F87940", VA = "0x1F87940")]
		private static float ByTranslation(WidgetMetadata meta)
		{
			return default(float);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1F8796C", Offset = "0x1F8796C", VA = "0x1F8796C")]
		private static float ByTranslation(TrTransform xf)
		{
			return default(float);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1F87998", Offset = "0x1F87998", VA = "0x1F87998")]
		private static string ByModelLocation(TiltModels75 models)
		{
			return null;
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1F87A78", Offset = "0x1F87A78", VA = "0x1F87A78")]
		public static CameraPathMetadata[] GetCameraPaths()
		{
			return null;
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1F87C8C", Offset = "0x1F87C8C", VA = "0x1F87C8C")]
		public static LayerMetadata[] GetLayers()
		{
			return null;
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1F87E2C", Offset = "0x1F87E2C", VA = "0x1F87E2C")]
		public static TiltModels75[] GetTiltModels(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1F88CAC", Offset = "0x1F88CAC", VA = "0x1F88CAC")]
		public static TiltVideo[] GetTiltVideos(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1F88EB4", Offset = "0x1F88EB4", VA = "0x1F88EB4")]
		public static Guides[] GetGuideIndex(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1F89714", Offset = "0x1F89714", VA = "0x1F89714")]
		public static TiltImages75[] GetTiltImages(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1F8A200", Offset = "0x1F8A200", VA = "0x1F8A200")]
		public static void VerifyMetadataVersion(SketchMetadata data)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1F8A248", Offset = "0x1F8A248", VA = "0x1F8A248")]
		private static void Upgrade_Set_ModelIndexInSet(SketchMetadata data)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1F8A4A8", Offset = "0x1F8A4A8", VA = "0x1F8A4A8")]
		private static void UpgradeSchema_0to1(SketchMetadata data)
		{
		}

		[Token(Token = "0x6001BA9")]
		private static T[] SafeAppend<T>(T[] array, T value)
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x1F8A784", Offset = "0x1F8A784", VA = "0x1F8A784")]
		private static void UpgradeSchema_1to2(SketchMetadata data)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class SaveLoadScript : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		[CompilerGenerated]
		private sealed class <IterScenes>d__4 : IEnumerable<DiskSceneFileInfo>, IEnumerable, IEnumerator<DiskSceneFileInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private DiskSceneFileInfo <>2__current;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private DirectoryInfo di;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public DirectoryInfo <>3__di;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private FileInfo[] <>7__wrap1;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <>7__wrap2;

			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private DirectoryInfo[] <>7__wrap3;

			[Token(Token = "0x170004EB")]
			private DiskSceneFileInfo System.Collections.Generic.IEnumerator<TiltBrush.DiskSceneFileInfo>.Current
			{
				[Token(Token = "0x6001BF4")]
				[Address(RVA = "0x1F91440", Offset = "0x1F91440", VA = "0x1F91440", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(DiskSceneFileInfo);
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF6")]
				[Address(RVA = "0x1F91490", Offset = "0x1F91490", VA = "0x1F91490", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x1F8AD60", Offset = "0x1F8AD60", VA = "0x1F8AD60")]
			[DebuggerHidden]
			public <IterScenes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x1F9125C", Offset = "0x1F9125C", VA = "0x1F9125C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x1F91260", Offset = "0x1F91260", VA = "0x1F91260", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x1F91450", Offset = "0x1F91450", VA = "0x1F91450", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x1F914F4", Offset = "0x1F914F4", VA = "0x1F914F4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<DiskSceneFileInfo> System.Collections.Generic.IEnumerable<TiltBrush.DiskSceneFileInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x1F91598", Offset = "0x1F91598", VA = "0x1F91598", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200040B")]
		[CompilerGenerated]
		private sealed class <SaveOverwrite>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool tiltasaurusMode;

			[Token(Token = "0x170004ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFC")]
				[Address(RVA = "0x1F916D4", Offset = "0x1F916D4", VA = "0x1F916D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFE")]
				[Address(RVA = "0x1F9171C", Offset = "0x1F9171C", VA = "0x1F9171C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x1F8C688", Offset = "0x1F8C688", VA = "0x1F8C688")]
			[DebuggerHidden]
			public <SaveOverwrite>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x1F9159C", Offset = "0x1F9159C", VA = "0x1F9159C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x1F915A0", Offset = "0x1F915A0", VA = "0x1F915A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x1F916DC", Offset = "0x1F916DC", VA = "0x1F916DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040C")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass81_0
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneFileInfo fileInfo;

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x1F91724", Offset = "0x1F91724", VA = "0x1F91724")]
			public <>c__DisplayClass81_0()
			{
			}

			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x1F9172C", Offset = "0x1F9172C", VA = "0x1F9172C")]
			internal string <ThreadedSave>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200040D")]
		[CompilerGenerated]
		private sealed class <ThreadedSave>d__81 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneFileInfo fileInfo;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass81_0 <>8__1;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool bNotify;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Task <cancelTask>5__2;

			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <newFile>5__3;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Future<string> <writeFuture>5__4;

			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<Timeslice> <timeslicedConstructor>5__5;

			[Token(Token = "0x170004EF")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001C04")]
				[Address(RVA = "0x1F9294C", Offset = "0x1F9294C", VA = "0x1F9294C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C06")]
				[Address(RVA = "0x1F92994", Offset = "0x1F92994", VA = "0x1F92994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x1F8C814", Offset = "0x1F8C814", VA = "0x1F8C814")]
			[DebuggerHidden]
			public <ThreadedSave>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x1F92138", Offset = "0x1F92138", VA = "0x1F92138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x1F9213C", Offset = "0x1F9213C", VA = "0x1F9213C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x1F92954", Offset = "0x1F92954", VA = "0x1F92954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass93_0
		{
			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x1F9299C", Offset = "0x1F9299C", VA = "0x1F9299C")]
			public <>c__DisplayClass93_0()
			{
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x1F929A4", Offset = "0x1F929A4", VA = "0x1F929A4")]
			internal string <AutosaveCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200040F")]
		[CompilerGenerated]
		private sealed class <AutosaveCoroutine>d__93 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass93_0 <>8__1;

			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Timeslice> <timeslicedConstructor>5__2;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<string> <writeFuture>5__3;

			[Token(Token = "0x170004F1")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001C0C")]
				[Address(RVA = "0x1F92ED8", Offset = "0x1F92ED8", VA = "0x1F92ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C0E")]
				[Address(RVA = "0x1F92F20", Offset = "0x1F92F20", VA = "0x1F92F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x1F905B4", Offset = "0x1F905B4", VA = "0x1F905B4")]
			[DebuggerHidden]
			public <AutosaveCoroutine>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x1F929C8", Offset = "0x1F929C8", VA = "0x1F929C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x1F929CC", Offset = "0x1F929CC", VA = "0x1F929CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x1F92EE0", Offset = "0x1F92EE0", VA = "0x1F92EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000412")]
		[CompilerGenerated]
		private sealed class <ShowErrorAfterDelay>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string error;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C19")]
				[Address(RVA = "0x1F93114", Offset = "0x1F93114", VA = "0x1F93114", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1B")]
				[Address(RVA = "0x1F9315C", Offset = "0x1F9315C", VA = "0x1F9315C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x1F90F18", Offset = "0x1F90F18", VA = "0x1F90F18")]
			[DebuggerHidden]
			public <ShowErrorAfterDelay>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x1F93060", Offset = "0x1F93060", VA = "0x1F93060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x1F93064", Offset = "0x1F93064", VA = "0x1F93064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x1F9311C", Offset = "0x1F9311C", VA = "0x1F9311C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000413")]
		[CompilerGenerated]
		private struct <CreateSnapshotWithIconsAsync>d__98 : IAsyncStateMachine
		{
			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<SketchSnapshot> <>t__builder;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchSnapshot <snapshot>5__2;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x1F93164", Offset = "0x1F93164", VA = "0x1F93164", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x1F933A8", Offset = "0x1F933A8", VA = "0x1F933A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40018D1")]
		public const string UNTITLED_PREFIX = "Untitled_";

		[Token(Token = "0x40018D2")]
		public const string TILTASAURUS_PREFIX = "Tiltasaurus_";

		[Token(Token = "0x40018D3")]
		public const string TILT_SUFFIX = ".tilt";

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SaveLoadScript m_Instance;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Regex Md5SuffixRegex;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Regex Md5RemoveSuffixRegex;

		[Token(Token = "0x40018D7")]
		private const int kAsciiCodePage = 20127;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D m_AutosaveThumbnail;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_AutosaveTriggerSeconds;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_AutosaveFilenamePattern;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_AutosaveFileCount;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_SaveDir;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SceneFileInfo m_LastSceneFile;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_LastSceneIsLegacy;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_LastNonexistentFileIndex;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SaveIconCaptureScript m_SaveIconCapture;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator<Timeslice> m_SaveCoroutine;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_CaptureHiResSaveIcon;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool m_CaptureGifSaveIcon;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_SaveIconHiResWidth;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int m_SaveIconHiResHeight;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_SaveIconHiResRenderTexture;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int m_SaveGifWidth;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int m_SaveGifHeight;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture[] m_SaveGifRenderTextures;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int m_SaveGifTextureCount;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private byte[] m_AutosaveThumbnailBytes;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_SecondsUntilNextAutosave;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DiskSceneFileInfo m_AutosaveFileInfo;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_AutosaveFailed;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private string m_AutosaveTargetFilename;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private IEnumerator<Timeslice> m_AutosaveCoroutine;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture m_SaveIconRenderTexture;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private byte[] m_LastThumbnailBytes;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private string m_LastJsonMetadatError;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string m_LastWriteSnapshotError;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool m_SuppressNotify;

		[Token(Token = "0x170004E2")]
		public bool AutosaveEnabled
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x1F8B11C", Offset = "0x1F8B11C", VA = "0x1F8B11C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E3")]
		public TrTransform? LastThumbnail_SS
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x1F8B168", Offset = "0x1F8B168", VA = "0x1F8B168")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x1F8B180", Offset = "0x1F8B180", VA = "0x1F8B180")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public TrTransform ReasonableThumbnail_SS
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x1F8B198", Offset = "0x1F8B198", VA = "0x1F8B198")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x170004E5")]
		public SceneFileInfo SceneFile
		{
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x1F8B288", Offset = "0x1F8B288", VA = "0x1F8B288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E6")]
		public bool SuppressSaveNotifcation
		{
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x1F8B298", Offset = "0x1F8B298", VA = "0x1F8B298")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public bool CanOverwriteSource
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x1F8B2A4", Offset = "0x1F8B2A4", VA = "0x1F8B2A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E8")]
		public string LastMetadataError
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x1F8B354", Offset = "0x1F8B354", VA = "0x1F8B354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E9")]
		public string LastWriteSnapshotError
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0x1F8B35C", Offset = "0x1F8B35C", VA = "0x1F8B35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		public JsonSerializer JsonSerializer
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x1F8B364", Offset = "0x1F8B364", VA = "0x1F8B364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1F86AE0", Offset = "0x1F86AE0", VA = "0x1F86AE0")]
		[IteratorStateMachine(typeof(<IterScenes>d__4))]
		public static IEnumerable<DiskSceneFileInfo> IterScenes(DirectoryInfo di)
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1F8AD94", Offset = "0x1F8AD94", VA = "0x1F8AD94")]
		public static string Md5Suffix(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1F83488", Offset = "0x1F83488", VA = "0x1F83488")]
		public static string RemoveMd5Suffix(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1F8AE54", Offset = "0x1F8AE54", VA = "0x1F8AE54")]
		public static string AddMd5Suffix(string filename, byte[] hash)
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1F8AF84", Offset = "0x1F8AF84", VA = "0x1F8AF84")]
		public static byte[] GetMd5(string path)
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1F8B024", Offset = "0x1F8B024", VA = "0x1F8B024")]
		static SaveLoadScript()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1F8B290", Offset = "0x1F8B290", VA = "0x1F8B290")]
		public RenderTexture GetSaveIconRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1F8B36C", Offset = "0x1F8B36C", VA = "0x1F8B36C")]
		public bool IsSavingAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1F8B37C", Offset = "0x1F8B37C", VA = "0x1F8B37C")]
		public string GetLastFileHumanName()
		{
			return null;
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1F8B4AC", Offset = "0x1F8B4AC", VA = "0x1F8B4AC")]
		public byte[] GetLastThumbnailBytes()
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1F8B4B4", Offset = "0x1F8B4B4", VA = "0x1F8B4B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1F8B860", Offset = "0x1F8B860", VA = "0x1F8B860")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1F8B7EC", Offset = "0x1F8B7EC", VA = "0x1F8B7EC")]
		public void ResetLastFilename()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1F8B910", Offset = "0x1F8B910", VA = "0x1F8B910")]
		public string GenerateNewUntitledFilename(string directory, string extension)
		{
			return null;
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1F8BA2C", Offset = "0x1F8BA2C", VA = "0x1F8BA2C")]
		public string GenerateNewTiltasaurusFilename(string directory, string extension)
		{
			return null;
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1F8BB8C", Offset = "0x1F8BB8C", VA = "0x1F8BB8C")]
		public void SaveOverwriteOrNewIfNotAllowed()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1F8BD30", Offset = "0x1F8BD30", VA = "0x1F8BD30")]
		public IEnumerator<Timeslice> SaveMonoscopic(int slot)
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1F8C394", Offset = "0x1F8C394", VA = "0x1F8C394")]
		public string TransferredSourceIdFrom(SceneFileInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1F8C484", Offset = "0x1F8C484", VA = "0x1F8C484")]
		public DiskSceneFileInfo GetNewNameSceneFileInfo(bool tiltasaurusMode = false)
		{
			return default(DiskSceneFileInfo);
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1F8C600", Offset = "0x1F8C600", VA = "0x1F8C600")]
		public IEnumerator<Timeslice> SaveSnapshot(SceneFileInfo fileInfo, SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1F8C60C", Offset = "0x1F8C60C", VA = "0x1F8C60C")]
		[IteratorStateMachine(typeof(<SaveOverwrite>d__78))]
		public IEnumerator<object> SaveOverwrite(bool tiltasaurusMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1F8C6B0", Offset = "0x1F8C6B0", VA = "0x1F8C6B0")]
		public IEnumerator<Timeslice> SaveNewName(bool tiltasaurusMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1F8BF24", Offset = "0x1F8BF24", VA = "0x1F8BF24")]
		private IEnumerator<Timeslice> SaveLow(SceneFileInfo info, bool bNotify = true, [Optional] SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1F8C784", Offset = "0x1F8C784", VA = "0x1F8C784")]
		[IteratorStateMachine(typeof(<ThreadedSave>d__81))]
		private IEnumerator<Timeslice> ThreadedSave(SceneFileInfo fileInfo, bool bNotify = true, [Optional] SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1F8C83C", Offset = "0x1F8C83C", VA = "0x1F8C83C")]
		private void NotifySaveFinished(SceneFileInfo info, string error, bool newFile)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1F847A4", Offset = "0x1F847A4", VA = "0x1F847A4")]
		public static Stream GetMetadataReadStream(SceneFileInfo fileInfo)
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1F8CA2C", Offset = "0x1F8CA2C", VA = "0x1F8CA2C")]
		public bool LoadTransformsForOds(SceneFileInfo fileInfo, ref TrTransform head, ref TrTransform scene)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1F8D1A4", Offset = "0x1F8D1A4", VA = "0x1F8D1A4")]
		private static Guid GetForceSupersededBy(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1F8D2B0", Offset = "0x1F8D2B0", VA = "0x1F8D2B0")]
		public bool Load(SceneFileInfo fileInfo, bool bAdditive = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1F848E8", Offset = "0x1F848E8", VA = "0x1F848E8")]
		public SketchMetadata DeserializeMetadata(JsonTextReader jsonReader)
		{
			return null;
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1F901C4", Offset = "0x1F901C4", VA = "0x1F901C4")]
		private void HandleDeserializationError(object sender, Newtonsoft.Json.Serialization.ErrorEventArgs errorArgs)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1F90264", Offset = "0x1F90264", VA = "0x1F90264")]
		public void SignalPlaybackCompletion()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1F8B854", Offset = "0x1F8B854", VA = "0x1F8B854")]
		public void MarkAsAutosaveDone()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1F90430", Offset = "0x1F90430", VA = "0x1F90430")]
		public void SketchChanged()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1F90470", Offset = "0x1F90470", VA = "0x1F90470")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1F9054C", Offset = "0x1F9054C", VA = "0x1F9054C")]
		[IteratorStateMachine(typeof(<AutosaveCoroutine>d__93))]
		private IEnumerator<Timeslice> AutosaveCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1F8C760", Offset = "0x1F8C760", VA = "0x1F8C760")]
		private void AbortAutosave()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1F905DC", Offset = "0x1F905DC", VA = "0x1F905DC")]
		public void NewAutosaveFile()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1F90CE0", Offset = "0x1F90CE0", VA = "0x1F90CE0")]
		public string MostRecentAutosaveFile()
		{
			return null;
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1F90C68", Offset = "0x1F90C68", VA = "0x1F90C68")]
		[IteratorStateMachine(typeof(<ShowErrorAfterDelay>d__97))]
		private IEnumerator ShowErrorAfterDelay(string error, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1F90F40", Offset = "0x1F90F40", VA = "0x1F90F40")]
		[AsyncStateMachine(typeof(<CreateSnapshotWithIconsAsync>d__98))]
		public Task<SketchSnapshot> CreateSnapshotWithIconsAsync()
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1F91034", Offset = "0x1F91034", VA = "0x1F91034")]
		public SketchSnapshot CreateSnapshotWithIcons(out IEnumerator<Timeslice> coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1F91238", Offset = "0x1F91238", VA = "0x1F91238")]
		public SaveLoadScript()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public enum FileInfoType
	{
		[Token(Token = "0x4001928")]
		Disk,
		[Token(Token = "0x4001929")]
		Cloud,
		[Token(Token = "0x400192A")]
		None
	}
	[Token(Token = "0x2000415")]
	public interface SceneFileInfo
	{
		[Token(Token = "0x170004F5")]
		FileInfoType InfoType
		{
			[Token(Token = "0x6001C1E")]
			get;
		}

		[Token(Token = "0x170004F6")]
		string HumanName
		{
			[Token(Token = "0x6001C1F")]
			get;
		}

		[Token(Token = "0x170004F7")]
		bool Valid
		{
			[Token(Token = "0x6001C20")]
			get;
		}

		[Token(Token = "0x170004F8")]
		bool Available
		{
			[Token(Token = "0x6001C21")]
			get;
		}

		[Token(Token = "0x170004F9")]
		string FullPath
		{
			[Token(Token = "0x6001C22")]
			get;
		}

		[Token(Token = "0x170004FA")]
		bool Exists
		{
			[Token(Token = "0x6001C23")]
			get;
		}

		[Token(Token = "0x170004FB")]
		bool ReadOnly
		{
			[Token(Token = "0x6001C24")]
			get;
		}

		[Token(Token = "0x170004FC")]
		string AssetId
		{
			[Token(Token = "0x6001C25")]
			get;
		}

		[Token(Token = "0x170004FD")]
		string SourceId
		{
			[Token(Token = "0x6001C26")]
			get;
		}

		[Token(Token = "0x170004FE")]
		int? TriangleCount
		{
			[Token(Token = "0x6001C27")]
			get;
		}

		[Token(Token = "0x6001C28")]
		void Delete();

		[Token(Token = "0x6001C29")]
		bool IsHeaderValid();

		[Token(Token = "0x6001C2A")]
		Stream GetReadStream(string subfileName);
	}
	[Token(Token = "0x2000416")]
	public enum SketchSetType
	{
		[Token(Token = "0x400192C")]
		User,
		[Token(Token = "0x400192D")]
		Curated,
		[Token(Token = "0x400192E")]
		Liked,
		[Token(Token = "0x400192F")]
		Drive
	}
	[Token(Token = "0x2000417")]
	public class SketchCatalog : MonoBehaviour
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchCatalog m_Instance;

		[Token(Token = "0x4001931")]
		public const string kDefaultShowcaseSketchesFolder = "DefaultShowcaseSketches";

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SketchSet[] m_Sets;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1F85B30", Offset = "0x1F85B30", VA = "0x1F85B30")]
		public SketchSet GetSet(SketchSetType eType)
		{
			return null;
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1F93400", Offset = "0x1F93400", VA = "0x1F93400")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x1F93660", Offset = "0x1F93660", VA = "0x1F93660")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1F93748", Offset = "0x1F93748", VA = "0x1F93748")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1F927CC", Offset = "0x1F927CC", VA = "0x1F927CC")]
		public void NotifyUserFileCreated(string fullpath)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x1F9288C", Offset = "0x1F9288C", VA = "0x1F9288C")]
		public void NotifyUserFileChanged(string fullpath)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x1F93830", Offset = "0x1F93830", VA = "0x1F93830")]
		public SketchCatalog()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public class TiltModels70
	{
		[Token(Token = "0x170004FF")]
		public string FilePath
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1F93838", Offset = "0x1F93838", VA = "0x1F93838")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1F93840", Offset = "0x1F93840", VA = "0x1F93840")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000500")]
		public Vector3 Position
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1F93848", Offset = "0x1F93848", VA = "0x1F93848")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x1F93854", Offset = "0x1F93854", VA = "0x1F93854")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000501")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x1F93860", Offset = "0x1F93860", VA = "0x1F93860")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x1F9386C", Offset = "0x1F9386C", VA = "0x1F9386C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000502")]
		public Vector3 Scale
		{
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x1F93878", Offset = "0x1F93878", VA = "0x1F93878")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x1F93884", Offset = "0x1F93884", VA = "0x1F93884")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x1F93890", Offset = "0x1F93890", VA = "0x1F93890")]
		public TiltModels75 Upgrade()
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1F93AC4", Offset = "0x1F93AC4", VA = "0x1F93AC4")]
		public TiltModels70()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public class TiltModels75
	{
		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[JsonIgnore]
		public TrTransform[] m_rawTransforms;

		[Token(Token = "0x17000503")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string FilePath
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x1F93ACC", Offset = "0x1F93ACC", VA = "0x1F93ACC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x1F93AD4", Offset = "0x1F93AD4", VA = "0x1F93AD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string AssetId
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x1F93ADC", Offset = "0x1F93ADC", VA = "0x1F93ADC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0x1F93AE4", Offset = "0x1F93AE4", VA = "0x1F93AE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		[JsonProperty(PropertyName = "InSet", DefaultValueHandling = DefaultValueHandling.Ignore)]
		[DefaultValue(false)]
		public bool InSet_deprecated
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x1F93AEC", Offset = "0x1F93AEC", VA = "0x1F93AEC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x1F93AF4", Offset = "0x1F93AF4", VA = "0x1F93AF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public bool[] PinStates
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x1F93B00", Offset = "0x1F93B00", VA = "0x1F93B00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0x1F93B08", Offset = "0x1F93B08", VA = "0x1F93B08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000507")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TrTransform[] Transforms
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x1F93B10", Offset = "0x1F93B10", VA = "0x1F93B10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0x1F93B18", Offset = "0x1F93B18", VA = "0x1F93B18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000508")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TrTransform[] RawTransforms
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0x1F93B20", Offset = "0x1F93B20", VA = "0x1F93B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x1F88C90", Offset = "0x1F88C90", VA = "0x1F88C90")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		[JsonIgnore]
		public Model.Location Location
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x1F8A910", Offset = "0x1F8A910", VA = "0x1F8A910")]
			get
			{
				return default(Model.Location);
			}
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0x1F88C3C", Offset = "0x1F88C3C", VA = "0x1F88C3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public uint[] GroupIds
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x1F93B28", Offset = "0x1F93B28", VA = "0x1F93B28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x1F93B30", Offset = "0x1F93B30", VA = "0x1F93B30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public int[] LayerIds
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x1F93B38", Offset = "0x1F93B38", VA = "0x1F93B38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x1F93B40", Offset = "0x1F93B40", VA = "0x1F93B40")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1F88C34", Offset = "0x1F88C34", VA = "0x1F88C34")]
		public TiltModels75()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class Guides
	{
		[Serializable]
		[Token(Token = "0x200041B")]
		public class State
		{
			[Token(Token = "0x1700050E")]
			public TrTransform Transform
			{
				[Token(Token = "0x6001C54")]
				[Address(RVA = "0x1F93EEC", Offset = "0x1F93EEC", VA = "0x1F93EEC")]
				[CompilerGenerated]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x6001C55")]
				[Address(RVA = "0x1F93EF8", Offset = "0x1F93EF8", VA = "0x1F93EF8")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700050F")]
			public Vector3 Extents
			{
				[Token(Token = "0x6001C56")]
				[Address(RVA = "0x1F93F04", Offset = "0x1F93F04", VA = "0x1F93F04")]
				[CompilerGenerated]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001C57")]
				[Address(RVA = "0x1F93F10", Offset = "0x1F93F10", VA = "0x1F93F10")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000510")]
			public bool Pinned
			{
				[Token(Token = "0x6001C58")]
				[Address(RVA = "0x1F93F1C", Offset = "0x1F93F1C", VA = "0x1F93F1C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001C59")]
				[Address(RVA = "0x1F93F24", Offset = "0x1F93F24", VA = "0x1F93F24")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000511")]
			public uint GroupId
			{
				[Token(Token = "0x6001C5A")]
				[Address(RVA = "0x1F93F30", Offset = "0x1F93F30", VA = "0x1F93F30")]
				[CompilerGenerated]
				get
				{
					return default(uint);
				}
				[Token(Token = "0x6001C5B")]
				[Address(RVA = "0x1F93F38", Offset = "0x1F93F38", VA = "0x1F93F38")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000512")]
			public int LayerId
			{
				[Token(Token = "0x6001C5C")]
				[Address(RVA = "0x1F93F40", Offset = "0x1F93F40", VA = "0x1F93F40")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001C5D")]
				[Address(RVA = "0x1F93F48", Offset = "0x1F93F48", VA = "0x1F93F48")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x1F93F50", Offset = "0x1F93F50", VA = "0x1F93F50")]
			public State()
			{
			}
		}

		[Token(Token = "0x400193F")]
		private const string kHashedCube = "ldeocipaedc";

		[Token(Token = "0x4001940")]
		private const string kHashedSphere = "jminadgooco";

		[Token(Token = "0x4001941")]
		private const string kHashedCapsule = "pmhghhkcdmp";

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public StencilType Type;

		[Token(Token = "0x1700050C")]
		[JsonProperty(PropertyName = "Type")]
		private string SerializedType
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x1F93B48", Offset = "0x1F93B48", VA = "0x1F93B48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x1F93CC0", Offset = "0x1F93CC0", VA = "0x1F93CC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public State[] States
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x1F93EDC", Offset = "0x1F93EDC", VA = "0x1F93EDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x1F93EE4", Offset = "0x1F93EE4", VA = "0x1F93EE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1F89704", Offset = "0x1F89704", VA = "0x1F89704")]
		public Guides()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class Palette
	{
		[Token(Token = "0x17000513")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		private Color32[] Entries
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x1F93F58", Offset = "0x1F93F58", VA = "0x1F93F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x1F93F60", Offset = "0x1F93F60", VA = "0x1F93F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000514")]
		[JsonIgnore]
		public Color32[] Colors
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x1F93FB0", Offset = "0x1F93FB0", VA = "0x1F93FB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x1F93FB8", Offset = "0x1F93FB8", VA = "0x1F93FB8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1F93FC0", Offset = "0x1F93FC0", VA = "0x1F93FC0")]
		public Palette()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class CustomLights
	{
		[Serializable]
		[Token(Token = "0x200041E")]
		public class DirectionalLight
		{
			[Token(Token = "0x17000518")]
			public Quaternion Orientation
			{
				[Token(Token = "0x6001C6B")]
				[Address(RVA = "0x1F94000", Offset = "0x1F94000", VA = "0x1F94000")]
				[CompilerGenerated]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001C6C")]
				[Address(RVA = "0x1F9400C", Offset = "0x1F9400C", VA = "0x1F9400C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000519")]
			public Color Color
			{
				[Token(Token = "0x6001C6D")]
				[Address(RVA = "0x1F94018", Offset = "0x1F94018", VA = "0x1F94018")]
				[CompilerGenerated]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6001C6E")]
				[Address(RVA = "0x1F94024", Offset = "0x1F94024", VA = "0x1F94024")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x1F94030", Offset = "0x1F94030", VA = "0x1F94030")]
			public DirectionalLight()
			{
			}
		}

		[Token(Token = "0x17000515")]
		public Color32 Ambient
		{
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0x1F93FC8", Offset = "0x1F93FC8", VA = "0x1F93FC8")]
			[CompilerGenerated]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x1F93FD0", Offset = "0x1F93FD0", VA = "0x1F93FD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public DirectionalLight Shadow
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x1F93FD8", Offset = "0x1F93FD8", VA = "0x1F93FD8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x1F93FE0", Offset = "0x1F93FE0", VA = "0x1F93FE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public DirectionalLight NoShadow
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x1F93FE8", Offset = "0x1F93FE8", VA = "0x1F93FE8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x1F93FF0", Offset = "0x1F93FF0", VA = "0x1F93FF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1F93FF8", Offset = "0x1F93FF8", VA = "0x1F93FF8")]
		public CustomLights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public class CustomEnvironment
	{
		[Token(Token = "0x1700051A")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Color32[] GradientColors
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x1F94038", Offset = "0x1F94038", VA = "0x1F94038")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x1F94040", Offset = "0x1F94040", VA = "0x1F94040")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		public Quaternion GradientSkew
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x1F94048", Offset = "0x1F94048", VA = "0x1F94048")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x1F94054", Offset = "0x1F94054", VA = "0x1F94054")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		public Color32 FogColor
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x1F94060", Offset = "0x1F94060", VA = "0x1F94060")]
			[CompilerGenerated]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x1F94068", Offset = "0x1F94068", VA = "0x1F94068")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700051D")]
		public float FogDensity
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x1F94070", Offset = "0x1F94070", VA = "0x1F94070")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1F94078", Offset = "0x1F94078", VA = "0x1F94078")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700051E")]
		public float ReflectionIntensity
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x1F94080", Offset = "0x1F94080", VA = "0x1F94080")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1F94088", Offset = "0x1F94088", VA = "0x1F94088")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x1F94090", Offset = "0x1F94090", VA = "0x1F94090")]
		public CustomEnvironment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000420")]
	public class CameraPathPositionKnotMetadata
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TangentMagnitude;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x1F94098", Offset = "0x1F94098", VA = "0x1F94098")]
		public CameraPathPositionKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public class CameraPathRotationKnotMetadata
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x1F940A0", Offset = "0x1F940A0", VA = "0x1F940A0")]
		public CameraPathRotationKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000422")]
	public class CameraPathSpeedKnotMetadata
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Speed;

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x1F940A8", Offset = "0x1F940A8", VA = "0x1F940A8")]
		public CameraPathSpeedKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000423")]
	public class CameraPathFovKnotMetadata
	{
		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Fov;

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x1F940B0", Offset = "0x1F940B0", VA = "0x1F940B0")]
		public CameraPathFovKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000424")]
	public class CameraPathMetadata
	{
		[Token(Token = "0x1700051F")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public CameraPathPositionKnotMetadata[] PathKnots
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1F940B8", Offset = "0x1F940B8", VA = "0x1F940B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1F940C0", Offset = "0x1F940C0", VA = "0x1F940C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000520")]
		public CameraPathRotationKnotMetadata[] RotationKnots
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1F940C8", Offset = "0x1F940C8", VA = "0x1F940C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1F940D0", Offset = "0x1F940D0", VA = "0x1F940D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		public CameraPathSpeedKnotMetadata[] SpeedKnots
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1F940D8", Offset = "0x1F940D8", VA = "0x1F940D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1F940E0", Offset = "0x1F940E0", VA = "0x1F940E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000522")]
		public CameraPathFovKnotMetadata[] FovKnots
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1F940E8", Offset = "0x1F940E8", VA = "0x1F940E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x1F940F0", Offset = "0x1F940F0", VA = "0x1F940F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x1F940F8", Offset = "0x1F940F8", VA = "0x1F940F8")]
		public CameraPathMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000425")]
	public class LayerMetadata
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string Name;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public bool Visible;

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x1F94100", Offset = "0x1F94100", VA = "0x1F94100")]
		public LayerMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000426")]
	public class TiltImages75b
	{
		[Token(Token = "0x17000523")]
		public string FilePath
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x1F94108", Offset = "0x1F94108", VA = "0x1F94108")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x1F94110", Offset = "0x1F94110", VA = "0x1F94110")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public TrTransform Transform
		{
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x1F94118", Offset = "0x1F94118", VA = "0x1F94118")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1F94128", Offset = "0x1F94128", VA = "0x1F94128")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000525")]
		public float AspectRatio
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1F94138", Offset = "0x1F94138", VA = "0x1F94138")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1F94140", Offset = "0x1F94140", VA = "0x1F94140")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1F94148", Offset = "0x1F94148", VA = "0x1F94148")]
		public TiltImages75 Upgrade()
		{
			return null;
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1F942C8", Offset = "0x1F942C8", VA = "0x1F942C8")]
		public TiltImages75b()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000427")]
	public class TiltImages75
	{
		[Token(Token = "0x17000526")]
		public string FileName
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x1F942D0", Offset = "0x1F942D0", VA = "0x1F942D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x1F942D8", Offset = "0x1F942D8", VA = "0x1F942D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public float AspectRatio
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x1F942E0", Offset = "0x1F942E0", VA = "0x1F942E0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x1F942E8", Offset = "0x1F942E8", VA = "0x1F942E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public bool[] PinStates
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x1F942F0", Offset = "0x1F942F0", VA = "0x1F942F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x1F942F8", Offset = "0x1F942F8", VA = "0x1F942F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public bool[] TintStates
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x1F94300", Offset = "0x1F94300", VA = "0x1F94300")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x1F94308", Offset = "0x1F94308", VA = "0x1F94308")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052A")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TrTransform[] Transforms
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x1F94310", Offset = "0x1F94310", VA = "0x1F94310")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x1F94318", Offset = "0x1F94318", VA = "0x1F94318")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052B")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public uint[] GroupIds
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x1F94320", Offset = "0x1F94320", VA = "0x1F94320")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1F94328", Offset = "0x1F94328", VA = "0x1F94328")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052C")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public int[] LayerIds
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1F94330", Offset = "0x1F94330", VA = "0x1F94330")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1F94338", Offset = "0x1F94338", VA = "0x1F94338")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1F8A1F8", Offset = "0x1F8A1F8", VA = "0x1F8A1F8")]
		public TiltImages75()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000428")]
	public class Mirror
	{
		[Token(Token = "0x1700052D")]
		public TrTransform Transform
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1F94340", Offset = "0x1F94340", VA = "0x1F94340")]
			[CompilerGenerated]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x1F9434C", Offset = "0x1F9434C", VA = "0x1F9434C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1F94358", Offset = "0x1F94358", VA = "0x1F94358")]
		public Mirror()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000429")]
	public class TiltVideo
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Pinned;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrTransform Transform;

		[Token(Token = "0x1700052E")]
		public string FilePath
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x1F94360", Offset = "0x1F94360", VA = "0x1F94360")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x1F94368", Offset = "0x1F94368", VA = "0x1F94368")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052F")]
		public float AspectRatio
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x1F94370", Offset = "0x1F94370", VA = "0x1F94370")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x1F94378", Offset = "0x1F94378", VA = "0x1F94378")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000530")]
		public bool Paused
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x1F94380", Offset = "0x1F94380", VA = "0x1F94380")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x1F94388", Offset = "0x1F94388", VA = "0x1F94388")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public float Time
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x1F94394", Offset = "0x1F94394", VA = "0x1F94394")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x1F9439C", Offset = "0x1F9439C", VA = "0x1F9439C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000532")]
		public float Volume
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1F943A4", Offset = "0x1F943A4", VA = "0x1F943A4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1F943AC", Offset = "0x1F943AC", VA = "0x1F943AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public uint GroupId
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x1F943B4", Offset = "0x1F943B4", VA = "0x1F943B4")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x1F943BC", Offset = "0x1F943BC", VA = "0x1F943BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public int LayerId
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x1F943C4", Offset = "0x1F943C4", VA = "0x1F943C4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x1F943CC", Offset = "0x1F943CC", VA = "0x1F943CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1F8AD58", Offset = "0x1F8AD58", VA = "0x1F8AD58")]
		public TiltVideo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	[Obfuscation(Exclude = true)]
	public class SketchMetadata
	{
		[Serializable]
		[Token(Token = "0x200042B")]
		public struct UnusedSketchTransform
		{
			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion orientation;
		}

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int kSchemaVersion;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnvironmentPreset;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrTransform ThumbnailCameraTransformInRoomSpace;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TrTransform SceneTransformInRoomSpace;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TrTransform CanvasTransformInSceneSpace;

		[Token(Token = "0x17000535")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string AudioPreset
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x1F943D4", Offset = "0x1F943D4", VA = "0x1F943D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x1F943DC", Offset = "0x1F943DC", VA = "0x1F943DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000536")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string[] Authors
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x1F943E4", Offset = "0x1F943E4", VA = "0x1F943E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1F943EC", Offset = "0x1F943EC", VA = "0x1F943EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public Guid[] BrushIndex
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x1F943F4", Offset = "0x1F943F4", VA = "0x1F943F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1F943FC", Offset = "0x1F943FC", VA = "0x1F943FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000538")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string[] RequiredCapabilities
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1F94404", Offset = "0x1F94404", VA = "0x1F94404")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1F9440C", Offset = "0x1F9440C", VA = "0x1F9440C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000539")]
		public UnusedSketchTransform ThumbnailCameraTransform
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x1F9453C", Offset = "0x1F9453C", VA = "0x1F9453C")]
			set
			{
			}
		}

		[Token(Token = "0x1700053A")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public int SchemaVersion
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x1F94610", Offset = "0x1F94610", VA = "0x1F94610")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x1F94618", Offset = "0x1F94618", VA = "0x1F94618")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TiltModels70[] Models
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x1F94620", Offset = "0x1F94620", VA = "0x1F94620")]
			set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TiltModels75[] ModelIndex
		{
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x1F94744", Offset = "0x1F94744", VA = "0x1F94744")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x1F9474C", Offset = "0x1F9474C", VA = "0x1F9474C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TiltImages75b[] Images
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x1F94754", Offset = "0x1F94754", VA = "0x1F94754")]
			set
			{
			}
		}

		[Token(Token = "0x1700053E")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TiltImages75[] ImageIndex
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x1F94878", Offset = "0x1F94878", VA = "0x1F94878")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x1F94880", Offset = "0x1F94880", VA = "0x1F94880")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700053F")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Mirror Mirror
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1F94888", Offset = "0x1F94888", VA = "0x1F94888")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x1F94890", Offset = "0x1F94890", VA = "0x1F94890")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000540")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Guides[] GuideIndex
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1F94898", Offset = "0x1F94898", VA = "0x1F94898")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x1F948A0", Offset = "0x1F948A0", VA = "0x1F948A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000541")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Palette Palette
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x1F948A8", Offset = "0x1F948A8", VA = "0x1F948A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x1F948B0", Offset = "0x1F948B0", VA = "0x1F948B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000542")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public CustomLights Lights
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x1F948B8", Offset = "0x1F948B8", VA = "0x1F948B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x1F948C0", Offset = "0x1F948C0", VA = "0x1F948C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000543")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public CustomEnvironment Environment
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x1F948C8", Offset = "0x1F948C8", VA = "0x1F948C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x1F948D0", Offset = "0x1F948D0", VA = "0x1F948D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000544")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string SourceId
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x1F948D8", Offset = "0x1F948D8", VA = "0x1F948D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x1F948E0", Offset = "0x1F948E0", VA = "0x1F948E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000545")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "Set")]
		public string[] Set_deprecated
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x1F948E8", Offset = "0x1F948E8", VA = "0x1F948E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x1F948F0", Offset = "0x1F948F0", VA = "0x1F948F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000546")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string AssetId
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x1F948F8", Offset = "0x1F948F8", VA = "0x1F948F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0x1F94900", Offset = "0x1F94900", VA = "0x1F94900")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000547")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public TiltVideo[] Videos
		{
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x1F94908", Offset = "0x1F94908", VA = "0x1F94908")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x1F94910", Offset = "0x1F94910", VA = "0x1F94910")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000548")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public LayerMetadata[] Layers
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x1F94918", Offset = "0x1F94918", VA = "0x1F94918")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x1F94920", Offset = "0x1F94920", VA = "0x1F94920")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000549")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public CameraPathMetadata[] CameraPaths
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x1F94928", Offset = "0x1F94928", VA = "0x1F94928")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x1F94930", Offset = "0x1F94930", VA = "0x1F94930")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700054A")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string ApplicationName
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x1F94938", Offset = "0x1F94938", VA = "0x1F94938")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x1F94940", Offset = "0x1F94940", VA = "0x1F94940")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public string ApplicationVersion
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x1F94948", Offset = "0x1F94948", VA = "0x1F94948")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x1F94950", Offset = "0x1F94950", VA = "0x1F94950")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1F94414", Offset = "0x1F94414", VA = "0x1F94414")]
		public bool ShouldSerializeSceneTransformInRoomSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x1F944A8", Offset = "0x1F944A8", VA = "0x1F944A8")]
		public bool ShouldSerializeCanvasTransformInSceneSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x1F94958", Offset = "0x1F94958", VA = "0x1F94958")]
		public SketchMetadata()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public interface Sketch
	{
		[Token(Token = "0x1700054C")]
		SceneFileInfo SceneFileInfo
		{
			[Token(Token = "0x6001CE5")]
			get;
		}

		[Token(Token = "0x1700054D")]
		string[] Authors
		{
			[Token(Token = "0x6001CE6")]
			get;
		}

		[Token(Token = "0x1700054E")]
		Texture2D Icon
		{
			[Token(Token = "0x6001CE7")]
			get;
		}

		[Token(Token = "0x1700054F")]
		bool IconAndMetadataValid
		{
			[Token(Token = "0x6001CE8")]
			get;
		}
	}
	[Token(Token = "0x200042E")]
	public interface SketchSet
	{
		[Token(Token = "0x17000550")]
		SketchSetType Type
		{
			[Token(Token = "0x6001CE9")]
			get;
		}

		[Token(Token = "0x17000551")]
		bool IsReadyForAccess
		{
			[Token(Token = "0x6001CEA")]
			get;
		}

		[Token(Token = "0x17000552")]
		bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6001CEB")]
			get;
		}

		[Token(Token = "0x17000553")]
		bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6001CEC")]
			get;
		}

		[Token(Token = "0x17000554")]
		int NumSketches
		{
			[Token(Token = "0x6001CED")]
			get;
		}

		[Token(Token = "0x14000025")]
		event Action OnChanged;

		[Token(Token = "0x14000026")]
		event Action OnSketchRefreshingChanged;

		[Token(Token = "0x6001CEE")]
		void Init();

		[Token(Token = "0x6001CEF")]
		bool IsSketchIndexValid(int iIndex);

		[Token(Token = "0x6001CF0")]
		void RequestOnlyLoadedMetadata(List<int> requests);

		[Token(Token = "0x6001CF1")]
		bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description);

		[Token(Token = "0x6001CF2")]
		SceneFileInfo GetSketchSceneFileInfo(int iSketchIndex);

		[Token(Token = "0x6001CF3")]
		string GetSketchName(int iSketchIndex);

		[Token(Token = "0x6001CF4")]
		void DeleteSketch(int toDelete);

		[Token(Token = "0x6001CF5")]
		void PrecacheSketchModels(int iSketchIndex);

		[Token(Token = "0x6001CF6")]
		void NotifySketchCreated(string fullpath);

		[Token(Token = "0x6001CF7")]
		void NotifySketchChanged(string fullpath);

		[Token(Token = "0x6001CF8")]
		void RequestRefresh();

		[Token(Token = "0x6001CF9")]
		void Update();
	}
	[Token(Token = "0x200042F")]
	public class SketchSnapshot
	{
		[Token(Token = "0x2000430")]
		[CompilerGenerated]
		private sealed class <TimeslicedConstructor>d__20 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot <>4__this;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Stopwatch <stopwatch>5__2;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <maxTicks>5__3;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<SketchWriter.AdjustedMemoryBrushStroke> <>7__wrap3;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SketchWriter.AdjustedMemoryBrushStroke <strokeSnapshot>5__5;

			[Token(Token = "0x17000559")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001D0D")]
				[Address(RVA = "0x1F9705C", Offset = "0x1F9705C", VA = "0x1F9705C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D0F")]
				[Address(RVA = "0x1F970A4", Offset = "0x1F970A4", VA = "0x1F970A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x1F94B64", Offset = "0x1F94B64", VA = "0x1F94B64")]
			[DebuggerHidden]
			public <TimeslicedConstructor>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x1F95B24", Offset = "0x1F95B24", VA = "0x1F95B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x1F95B40", Offset = "0x1F95B40", VA = "0x1F95B40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x1F966C4", Offset = "0x1F966C4", VA = "0x1F966C4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x1F97064", Offset = "0x1F97064", VA = "0x1F97064", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[CompilerGenerated]
		private sealed class <CreateSnapshotIcons>d__21 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot <>4__this;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RenderTexture hiResTexture;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RenderTexture[] gifTextures;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RenderTexture saveIconTexture;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SaveIconTool <tool>5__2;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SaveIconTool.CameraRigState <iconXform>5__3;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private SaveIconTool.CameraRigState <prevXform>5__4;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private ScreenshotManager <saveIconScreenshotManager>5__5;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Vector3 <basePos>5__6;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private Quaternion <baseRot>5__7;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int <i>5__8;

			[Token(Token = "0x1700055B")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001D13")]
				[Address(RVA = "0x1F97704", Offset = "0x1F97704", VA = "0x1F97704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D15")]
				[Address(RVA = "0x1F9774C", Offset = "0x1F9774C", VA = "0x1F9774C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x1F94B8C", Offset = "0x1F94B8C", VA = "0x1F94B8C")]
			[DebuggerHidden]
			public <CreateSnapshotIcons>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x1F970AC", Offset = "0x1F970AC", VA = "0x1F970AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x1F970B0", Offset = "0x1F970B0", VA = "0x1F970B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x1F9770C", Offset = "0x1F9770C", VA = "0x1F9770C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001996")]
		private const int kNanoSecondsPerSnapshotSlice = 250;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] m_ThumbnailBytes;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_HiResBytes;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_LastThumbnail_SS;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SketchWriter.AdjustedMemoryBrushStroke> m_Strokes;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SketchMetadata m_Metadata;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SaveIconCaptureScript m_SaveIconCapture;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GroupIdMapping m_GroupIdMapping;

		[Token(Token = "0x17000555")]
		public byte[] Thumbnail
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1F94AC4", Offset = "0x1F94AC4", VA = "0x1F94AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x1F94ACC", Offset = "0x1F94ACC", VA = "0x1F94ACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000556")]
		public TrTransform LastThumbnail_SS
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x1F94AD4", Offset = "0x1F94AD4", VA = "0x1F94AD4")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000557")]
		public string SourceId
		{
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x1F92EBC", Offset = "0x1F92EBC", VA = "0x1F92EBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000558")]
		public string AssetId
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x1F8C744", Offset = "0x1F8C744", VA = "0x1F8C744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1F94AE0", Offset = "0x1F94AE0", VA = "0x1F94AE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1F91118", Offset = "0x1F91118", VA = "0x1F91118")]
		public SketchSnapshot(JsonSerializer jsonSerializer, SaveIconCaptureScript saveIconCapture, out IEnumerator<Timeslice> timeslicedConstructor)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1F94AFC", Offset = "0x1F94AFC", VA = "0x1F94AFC")]
		[IteratorStateMachine(typeof(<TimeslicedConstructor>d__20))]
		private IEnumerator<Timeslice> TimeslicedConstructor()
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1F911B0", Offset = "0x1F911B0", VA = "0x1F911B0")]
		[IteratorStateMachine(typeof(<CreateSnapshotIcons>d__21))]
		public IEnumerator<Timeslice> CreateSnapshotIcons(RenderTexture saveIconTexture, RenderTexture hiResTexture, RenderTexture[] gifTextures)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1F94BB4", Offset = "0x1F94BB4", VA = "0x1F94BB4")]
		private static Guid GetForcePrecededBy(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1F917E4", Offset = "0x1F917E4", VA = "0x1F917E4")]
		public string WriteSnapshotToFile(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x2000432")]
	public static class SketchWriter
	{
		[Token(Token = "0x2000433")]
		[Flags]
		public enum StrokeExtension : uint
		{
			[Token(Token = "0x40019B8")]
			MaskSingleWord = 0xFFFFu,
			[Token(Token = "0x40019B9")]
			None = 0u,
			[Token(Token = "0x40019BA")]
			Flags = 1u,
			[Token(Token = "0x40019BB")]
			Scale = 2u,
			[Token(Token = "0x40019BC")]
			Group = 4u,
			[Token(Token = "0x40019BD")]
			Seed = 8u,
			[Token(Token = "0x40019BE")]
			Layer = 0x10u
		}

		[Token(Token = "0x2000434")]
		[Flags]
		public enum ControlPointExtension : uint
		{
			[Token(Token = "0x40019C0")]
			None = 0u,
			[Token(Token = "0x40019C1")]
			Pressure = 1u,
			[Token(Token = "0x40019C2")]
			Timestamp = 2u
		}

		[Token(Token = "0x2000435")]
		public struct AdjustedMemoryBrushStroke
		{
			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint layerIndex;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public StrokeData strokeData;

			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchMemoryScript.StrokeFlags adjustedStrokeFlags;
		}

		[Token(Token = "0x2000436")]
		[CompilerGenerated]
		private sealed class <EnumerateAdjustedSnapshots>d__9 : IEnumerable<AdjustedMemoryBrushStroke>, IEnumerable, IEnumerator<AdjustedMemoryBrushStroke>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AdjustedMemoryBrushStroke <>2__current;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerable<Stroke> strokes;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IEnumerable<Stroke> <>3__strokes;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <resetGroupContinue>5__2;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Dictionary<CanvasScript, uint> <canvasToIndexMap>5__3;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<Stroke> <>7__wrap3;

			[Token(Token = "0x1700055D")]
			private AdjustedMemoryBrushStroke System.Collections.Generic.IEnumerator<TiltBrush.SketchWriter.AdjustedMemoryBrushStroke>.Current
			{
				[Token(Token = "0x6001D21")]
				[Address(RVA = "0x1F987F4", Offset = "0x1F987F4", VA = "0x1F987F4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(AdjustedMemoryBrushStroke);
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D23")]
				[Address(RVA = "0x1F98848", Offset = "0x1F98848", VA = "0x1F98848", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x1F977C8", Offset = "0x1F977C8", VA = "0x1F977C8")]
			[DebuggerHidden]
			public <EnumerateAdjustedSnapshots>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1F98120", Offset = "0x1F98120", VA = "0x1F98120", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x1F9813C", Offset = "0x1F9813C", VA = "0x1F9813C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x1F98744", Offset = "0x1F98744", VA = "0x1F98744")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0x1F98808", Offset = "0x1F98808", VA = "0x1F98808", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0x1F988AC", Offset = "0x1F988AC", VA = "0x1F988AC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AdjustedMemoryBrushStroke> System.Collections.Generic.IEnumerable<TiltBrush.SketchWriter.AdjustedMemoryBrushStroke>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x1F98950", Offset = "0x1F98950", VA = "0x1F98950", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40019B3")]
		private const int REQUIRED_SKETCH_VERSION_MIN = 5;

		[Token(Token = "0x40019B4")]
		private const int REQUIRED_SKETCH_VERSION_MAX = 6;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint SKETCH_SENTINEL;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SKETCH_VERSION;

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1F97754", Offset = "0x1F97754", VA = "0x1F97754")]
		public static void RuntimeSelfCheck()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1F977A8", Offset = "0x1F977A8", VA = "0x1F977A8")]
		private static uint CountOnes(uint val)
		{
			return default(uint);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1F9664C", Offset = "0x1F9664C", VA = "0x1F9664C")]
		[IteratorStateMachine(typeof(<EnumerateAdjustedSnapshots>d__9))]
		public static IEnumerable<AdjustedMemoryBrushStroke> EnumerateAdjustedSnapshots(IEnumerable<Stroke> strokes)
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1F9512C", Offset = "0x1F9512C", VA = "0x1F9512C")]
		public static void WriteMemory(Stream stream, IList<AdjustedMemoryBrushStroke> strokeCopies, GroupIdMapping groupIdMapping, out List<Guid> brushList)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1F8FB78", Offset = "0x1F8FB78", VA = "0x1F8FB78")]
		public static bool ReadMemory(Stream stream, Guid[] brushList, bool bAdditive, out bool isLegacy, out Dictionary<int, int> oldGroupToNewGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1F977FC", Offset = "0x1F977FC", VA = "0x1F977FC")]
		public static List<Stroke> GetStrokes(Stream stream, Guid[] brushList, bool allowFastPath, bool squashLayers = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000438")]
	public class TiltFile
	{
		[Token(Token = "0x2000439")]
		private struct TiltZipHeader
		{
			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint sentinel;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public ushort headerSize;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public ushort headerVersion;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint unused1;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint unused2;
		}

		[Token(Token = "0x200043A")]
		public sealed class AtomicWriter : IDisposable
		{
			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_destination;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_temporaryPath;

			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_finished;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ICSharpCode.SharpZipLib.Zip.ZipOutputStream m_zipstream;

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1F94D94", Offset = "0x1F94D94", VA = "0x1F94D94")]
			public AtomicWriter(string path)
			{
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x1F98E80", Offset = "0x1F98E80", VA = "0x1F98E80")]
			private static void WriteTiltZipHeader(Stream s, TiltZipHeader header)
			{
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x1F94F90", Offset = "0x1F94F90", VA = "0x1F94F90")]
			public Stream GetWriteStream(string subfileName)
			{
				return null;
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1F959F0", Offset = "0x1F959F0", VA = "0x1F959F0")]
			public void Commit()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x1F98FBC", Offset = "0x1F98FBC", VA = "0x1F98FBC")]
			public void Rollback()
			{
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x1F98FFC", Offset = "0x1F98FFC", VA = "0x1F98FFC", Slot = "1")]
			~AtomicWriter()
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x1F99090", Offset = "0x1F99090", VA = "0x1F99090", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x1F98FB4", Offset = "0x1F98FB4", VA = "0x1F98FB4")]
			private static void Rename(string oldpath, string newpath)
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x1F98E18", Offset = "0x1F98E18", VA = "0x1F98E18")]
			private static void Destroy(string path)
			{
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x1F990F8", Offset = "0x1F990F8", VA = "0x1F990F8")]
			private static void RecursiveUnsetReadOnly(string directory)
			{
			}
		}

		[Token(Token = "0x40019D1")]
		private const uint TILT_SENTINEL = 1416391028u;

		[Token(Token = "0x40019D2")]
		private const uint PKZIP_SENTINEL = 67324752u;

		[Token(Token = "0x40019D3")]
		public const string FN_METADATA = "metadata.json";

		[Token(Token = "0x40019D4")]
		public const string FN_METADATA_LEGACY = "main.json";

		[Token(Token = "0x40019D5")]
		public const string FN_SKETCH = "data.sketch";

		[Token(Token = "0x40019D6")]
		public const string FN_THUMBNAIL = "thumbnail.png";

		[Token(Token = "0x40019D7")]
		public const string FN_HI_RES = "hires.png";

		[Token(Token = "0x40019D8")]
		public const string THUMBNAIL_MIME_TYPE = "image/png";

		[Token(Token = "0x40019D9")]
		public const string TILT_MIME_TYPE = "application/vnd.google-tiltbrush.tilt";

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ushort HEADER_SIZE;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static ushort HEADER_VERSION;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Fullpath;

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1F83460", Offset = "0x1F83460", VA = "0x1F83460")]
		public TiltFile(string fullpath)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1F98A78", Offset = "0x1F98A78", VA = "0x1F98A78")]
		private static TiltZipHeader ReadTiltZipHeader(Stream s)
		{
			return default(TiltZipHeader);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1F98B30", Offset = "0x1F98B30", VA = "0x1F98B30")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1F83E14", Offset = "0x1F83E14", VA = "0x1F83E14")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200043B")]
	public class SaveIconCaptureScript : MonoBehaviour
	{
		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_GifCaptureOffset;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_GifTotalAngle;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_GifAngles;

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1F99230", Offset = "0x1F99230", VA = "0x1F99230")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1F9749C", Offset = "0x1F9749C", VA = "0x1F9749C")]
		public void SetSaveIconTransformForGifFrame(Vector3 basePos, Quaternion baseRot, int iFrame)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1F99340", Offset = "0x1F99340", VA = "0x1F99340")]
		public SaveIconCaptureScript()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class SceneScript : MonoBehaviour
	{
		[Token(Token = "0x200043D")]
		public delegate void PoseChangedEventHandler(TrTransform prev, TrTransform current);

		[Token(Token = "0x200043E")]
		public delegate void ActiveCanvasChangedEventHandler(CanvasScript prev, CanvasScript current);

		[Token(Token = "0x200043F")]
		public delegate void LayerCanvasesUpdateEventHandler();

		[Token(Token = "0x2000440")]
		[CompilerGenerated]
		private sealed class <get_AllCanvases>d__32 : IEnumerable<CanvasScript>, IEnumerable, IEnumerator<CanvasScript>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CanvasScript <>2__current;

			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneScript <>4__this;

			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000565")]
			private CanvasScript System.Collections.Generic.IEnumerator<TiltBrush.CanvasScript>.Current
			{
				[Token(Token = "0x6001D72")]
				[Address(RVA = "0x1F9ADC0", Offset = "0x1F9ADC0", VA = "0x1F9ADC0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D74")]
				[Address(RVA = "0x1F9AE08", Offset = "0x1F9AE08", VA = "0x1F9AE08", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x1F9985C", Offset = "0x1F9985C", VA = "0x1F9985C")]
			[DebuggerHidden]
			public <get_AllCanvases>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x1F9AC58", Offset = "0x1F9AC58", VA = "0x1F9AC58", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x1F9AC5C", Offset = "0x1F9AC5C", VA = "0x1F9AC5C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x1F9ADC8", Offset = "0x1F9ADC8", VA = "0x1F9ADC8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x1F9AE10", Offset = "0x1F9AE10", VA = "0x1F9AE10", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<CanvasScript> System.Collections.Generic.IEnumerable<TiltBrush.CanvasScript>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x1F9AEB4", Offset = "0x1F9AEB4", VA = "0x1F9AEB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000441")]
		[CompilerGenerated]
		private sealed class <get_LayerCanvases>d__34 : IEnumerable<CanvasScript>, IEnumerable, IEnumerator<CanvasScript>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CanvasScript <>2__current;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneScript <>4__this;

			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000567")]
			private CanvasScript System.Collections.Generic.IEnumerator<TiltBrush.CanvasScript>.Current
			{
				[Token(Token = "0x6001D7A")]
				[Address(RVA = "0x1F9AFF0", Offset = "0x1F9AFF0", VA = "0x1F9AFF0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D7C")]
				[Address(RVA = "0x1F9B038", Offset = "0x1F9B038", VA = "0x1F9B038", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x1F99890", Offset = "0x1F99890", VA = "0x1F99890")]
			[DebuggerHidden]
			public <get_LayerCanvases>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x1F9AEB8", Offset = "0x1F9AEB8", VA = "0x1F9AEB8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x1F9AEBC", Offset = "0x1F9AEBC", VA = "0x1F9AEBC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x1F9AFF8", Offset = "0x1F9AFF8", VA = "0x1F9AFF8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x1F9B040", Offset = "0x1F9B040", VA = "0x1F9B040", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<CanvasScript> System.Collections.Generic.IEnumerable<TiltBrush.CanvasScript>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1F9B0E4", Offset = "0x1F9B0E4", VA = "0x1F9B0E4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasScript m_MainCanvas;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CanvasScript m_SelectionCanvas;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_bInitialized;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Light[] m_Lights;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<int> m_DeletedLayers;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CanvasScript m_ActiveCanvas;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<CanvasScript> m_LayerCanvases;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TransformExtensions.RelativeAccessor AsScene;

		[NonSerialized]
		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool disableTiltProtection;

		[Token(Token = "0x1700055F")]
		public TrTransform Pose
		{
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x1F8F810", Offset = "0x1F8F810", VA = "0x1F8F810")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x1F8F0B4", Offset = "0x1F8F0B4", VA = "0x1F8F0B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000560")]
		public CanvasScript ActiveCanvas
		{
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x1F997A0", Offset = "0x1F997A0", VA = "0x1F997A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x1F997A8", Offset = "0x1F997A8", VA = "0x1F997A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000561")]
		public CanvasScript MainCanvas
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x1F9984C", Offset = "0x1F9984C", VA = "0x1F9984C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000562")]
		public CanvasScript SelectionCanvas
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x1F99854", Offset = "0x1F99854", VA = "0x1F99854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000563")]
		public IEnumerable<CanvasScript> AllCanvases
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x1F99728", Offset = "0x1F99728", VA = "0x1F99728")]
			[IteratorStateMachine(typeof(<get_AllCanvases>d__32))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000564")]
		public IEnumerable<CanvasScript> LayerCanvases
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x1F986CC", Offset = "0x1F986CC", VA = "0x1F986CC")]
			[IteratorStateMachine(typeof(<get_LayerCanvases>d__34))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000027")]
		public event PoseChangedEventHandler PoseChanged
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x1F99348", Offset = "0x1F99348", VA = "0x1F99348")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x1F993E4", Offset = "0x1F993E4", VA = "0x1F993E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event ActiveCanvasChangedEventHandler ActiveCanvasChanged
		{
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x1F99480", Offset = "0x1F99480", VA = "0x1F99480")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x1F9951C", Offset = "0x1F9951C", VA = "0x1F9951C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event LayerCanvasesUpdateEventHandler LayerCanvasesUpdate
		{
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x1F995B8", Offset = "0x1F995B8", VA = "0x1F995B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x1F99654", Offset = "0x1F99654", VA = "0x1F99654")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1F8F6A8", Offset = "0x1F8F6A8", VA = "0x1F8F6A8")]
		public void ResetLayers(bool notify = false)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1F99C78", Offset = "0x1F99C78", VA = "0x1F99C78")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1F99FAC", Offset = "0x1F99FAC", VA = "0x1F99FAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1F8F8A4", Offset = "0x1F8F8A4", VA = "0x1F8F8A4")]
		public CanvasScript AddLayerNow()
		{
			return null;
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x1F998C4", Offset = "0x1F998C4", VA = "0x1F998C4")]
		public void DestroyLayer(CanvasScript layer)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1F9A2D0", Offset = "0x1F9A2D0", VA = "0x1F9A2D0")]
		public bool IsLayerDeleted(CanvasScript layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1F88BD4", Offset = "0x1F88BD4", VA = "0x1F88BD4")]
		public int GetIndexOfCanvas(CanvasScript canvas)
		{
			return default(int);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1F9A2EC", Offset = "0x1F9A2EC", VA = "0x1F9A2EC")]
		public bool IsLayerDeleted(int layerIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1F9A344", Offset = "0x1F9A344", VA = "0x1F9A344")]
		public int GetNumLights()
		{
			return default(int);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1F9A360", Offset = "0x1F9A360", VA = "0x1F9A360")]
		public Light GetLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1F9A390", Offset = "0x1F9A390", VA = "0x1F9A390")]
		public void ToggleLayerVisibility(int canvasIndex)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1F9A420", Offset = "0x1F9A420", VA = "0x1F9A420")]
		public void ToggleLayerVisibility(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1F9A4A8", Offset = "0x1F9A4A8", VA = "0x1F9A4A8")]
		public void ShowLayer(int canvasIndex)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x1F9A4BC", Offset = "0x1F9A4BC", VA = "0x1F9A4BC")]
		public void ShowLayer(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1F9A514", Offset = "0x1F9A514", VA = "0x1F9A514")]
		public void HideLayer(int canvasIndex)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1F9A528", Offset = "0x1F9A528", VA = "0x1F9A528")]
		public void HideLayer(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1F98010", Offset = "0x1F98010", VA = "0x1F98010")]
		public CanvasScript GetOrCreateLayer(int layerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1F9A580", Offset = "0x1F9A580", VA = "0x1F9A580")]
		public void ClearLayerContents(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1F9A650", Offset = "0x1F9A650", VA = "0x1F9A650")]
		public bool IsLayerVisible(CanvasScript layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1F9A678", Offset = "0x1F9A678", VA = "0x1F9A678")]
		public void MarkLayerAsDeleted(CanvasScript layer)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x1F9A758", Offset = "0x1F9A758", VA = "0x1F9A758")]
		public void MarkLayerAsNotDeleted(CanvasScript layer)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x1F9A7F0", Offset = "0x1F9A7F0", VA = "0x1F9A7F0")]
		public void BroadcastCanvasUpdate()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x1F9A3A4", Offset = "0x1F9A3A4", VA = "0x1F9A3A4")]
		public CanvasScript GetCanvasByLayerIndex(int layerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1F87CA8", Offset = "0x1F87CA8", VA = "0x1F87CA8")]
		public LayerMetadata[] LayerCanvasesSerialized()
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1F9A828", Offset = "0x1F9A828", VA = "0x1F9A828")]
		public SceneScript()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x2000443")]
		public class RequestInstantSceneSwitch : IDisposable
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x18BACFC", Offset = "0x18BACFC", VA = "0x18BACFC")]
			public RequestInstantSceneSwitch()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x18BAD68", Offset = "0x18BAD68", VA = "0x18BAD68", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000444")]
		private enum TransitionState
		{
			[Token(Token = "0x4001A28")]
			FadingToBlack,
			[Token(Token = "0x4001A29")]
			FadingToScene,
			[Token(Token = "0x4001A2A")]
			Scene
		}

		[Token(Token = "0x2000445")]
		private class LightTransition
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Environment.Light m_CurrentValues;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Environment.Light m_InterimValues;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Environment.Light m_DesiredValues;

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x18BADC4", Offset = "0x18BADC4", VA = "0x18BADC4")]
			public void LerpCurrentToOff(float fValue)
			{
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x18BAE74", Offset = "0x18BAE74", VA = "0x18BAE74")]
			public void LerpCurrentToDesired(float fValue)
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x18BAF4C", Offset = "0x18BAF4C", VA = "0x18BAF4C")]
			public LightTransition()
			{
			}
		}

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneSettings m_Instance;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float m_HardBoundsRadiusMeters_SS;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_ReflectionIntensityFallOff;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_SkyboxMaterial;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action FadingToDesiredEnvironment;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_RoomGeometryName;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject m_RoomGeometry;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject m_RoomReverbZone;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Camera> m_Cameras;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_TeleportBoundsHalfWidth;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_ControllerXRayHeight;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TransitionState m_CurrentState;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Environment m_DesiredEnvironment;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Environment m_CurrentEnvironment;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_SkipFade;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_TransitionValue;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Environment.RenderSettingsLite m_CurrentValues;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Environment.RenderSettingsLite m_InterimValues;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<GameObject> m_EnvironmentObjectsLowLOD;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<GameObject> m_EnvironmentObjectsHighLOD;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool m_InhibitSceneReset;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool m_HasCustomLights;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		private bool m_LoadingCustomEnvironment;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Color m_CustomFogColor;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float m_CustomFogDensity;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float m_CustomReflectionIntensity;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private Color m_SkyColorA;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Color m_SkyColorB;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Quaternion m_GradientSkew;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private bool m_FadingOutGradient;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Color m_FadingSkyColorA;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Color m_FadingSkyColorB;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool m_InGradient;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<LightTransition> m_TransitionLights;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private int m_RequestInstantSceneSwitch;

		[Token(Token = "0x17000569")]
		public float HardBoundsRadiusMeters_SS
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x1F996F0", Offset = "0x1F996F0", VA = "0x1F996F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056A")]
		public float TeleportBoundsHalfWidth
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1F9B5C8", Offset = "0x1F9B5C8", VA = "0x1F9B5C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056B")]
		public float ControllerXRayHeight
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x1F9B5D8", Offset = "0x1F9B5D8", VA = "0x1F9B5D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056C")]
		public bool IsTransitioning
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x1F9B5E8", Offset = "0x1F9B5E8", VA = "0x1F9B5E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056D")]
		public Color SkyColorA
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x1F9B5F8", Offset = "0x1F9B5F8", VA = "0x1F9B5F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x1F9B60C", Offset = "0x1F9B60C", VA = "0x1F9B60C")]
			set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public Color SkyColorB
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x1F9B6EC", Offset = "0x1F9B6EC", VA = "0x1F9B6EC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x1F9B700", Offset = "0x1F9B700", VA = "0x1F9B700")]
			set
			{
			}
		}

		[Token(Token = "0x1700056F")]
		public Color FogColor
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x1F9B7C4", Offset = "0x1F9B7C4", VA = "0x1F9B7C4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x1F9B7D8", Offset = "0x1F9B7D8", VA = "0x1F9B7D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000570")]
		public float FogDensity
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x1F9B838", Offset = "0x1F9B838", VA = "0x1F9B838")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x1F9B840", Offset = "0x1F9B840", VA = "0x1F9B840")]
			set
			{
			}
		}

		[Token(Token = "0x17000571")]
		public bool InGradient
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x1F9B8D0", Offset = "0x1F9B8D0", VA = "0x1F9B8D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x1F9B958", Offset = "0x1F9B958", VA = "0x1F9B958")]
			set
			{
			}
		}

		[Token(Token = "0x17000572")]
		public Quaternion GradientOrientation
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x1F9BB6C", Offset = "0x1F9BB6C", VA = "0x1F9BB6C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x1F9BB80", Offset = "0x1F9BB80", VA = "0x1F9BB80")]
			set
			{
			}
		}

		[Token(Token = "0x17000573")]
		public float DefaultReflectionIntensity
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x1F9BD44", Offset = "0x1F9BD44", VA = "0x1F9BD44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000574")]
		public Environment CurrentEnvironment
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x1F9BD60", Offset = "0x1F9BD60", VA = "0x1F9BD60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000575")]
		public bool EnvironmentChanged
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x1F9BD68", Offset = "0x1F9BD68", VA = "0x1F9BD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000576")]
		public CustomEnvironment CustomEnvironment
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1F96774", Offset = "0x1F96774", VA = "0x1F96774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action FogDensityChanged
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x1F9B0E8", Offset = "0x1F9B0E8", VA = "0x1F9B0E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x1F9B184", Offset = "0x1F9B184", VA = "0x1F9B184")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action FogColorChanged
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x1F9B220", Offset = "0x1F9B220", VA = "0x1F9B220")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x1F9B2BC", Offset = "0x1F9B2BC", VA = "0x1F9B2BC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action GradientActiveChanged
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x1F9B358", Offset = "0x1F9B358", VA = "0x1F9B358")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x1F9B3F4", Offset = "0x1F9B3F4", VA = "0x1F9B3F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action SkyboxChanged
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x1F9B490", Offset = "0x1F9B490", VA = "0x1F9B490")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x1F9B52C", Offset = "0x1F9B52C", VA = "0x1F9B52C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x1F9BF80", Offset = "0x1F9BF80", VA = "0x1F9BF80")]
		public static bool IsLowLod(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1F9C028", Offset = "0x1F9C028", VA = "0x1F9C028")]
		public static bool IsHighLod(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1F9C0D0", Offset = "0x1F9C0D0", VA = "0x1F9C0D0")]
		public static bool ExcludeFromPolyExport(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1F9C17C", Offset = "0x1F9C17C", VA = "0x1F9C17C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1F9C240", Offset = "0x1F9C240", VA = "0x1F9C240")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1F8EC6C", Offset = "0x1F8EC6C", VA = "0x1F8EC6C")]
		public void SetCustomEnvironment(CustomEnvironment custom, Environment env)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1F9C3F4", Offset = "0x1F9C3F4", VA = "0x1F9C3F4")]
		public void UpdateReflectionIntensity()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1F9C534", Offset = "0x1F9C534", VA = "0x1F9C534")]
		private void Update_FadingToBlack()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1F9C848", Offset = "0x1F9C848", VA = "0x1F9C848")]
		private void Transition_FadingBlackToFadingScene()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1F9D5EC", Offset = "0x1F9D5EC", VA = "0x1F9D5EC")]
		private void Update_FadingToScene()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1F9DAEC", Offset = "0x1F9DAEC", VA = "0x1F9DAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1F9DF48", Offset = "0x1F9DF48", VA = "0x1F9DF48")]
		private void UpdateEnvironment()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1F9E0BC", Offset = "0x1F9E0BC", VA = "0x1F9E0BC")]
		private void SetActiveList(List<GameObject> list, bool bActive)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1F9CF64", Offset = "0x1F9CF64", VA = "0x1F9CF64")]
		private void CreateEnvironment(Environment.RenderSettingsLite env)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x1F8EC48", Offset = "0x1F8EC48", VA = "0x1F8EC48")]
		public void RecordSkyColorsForFading()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1F8EDDC", Offset = "0x1F8EDDC", VA = "0x1F8EDDC")]
		public void SetDesiredPreset(Environment env, bool forceTransition = false, bool keepSceneTransform = false, bool hasCustomLights = false, bool skipFade = false)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x1F9E208", Offset = "0x1F9E208", VA = "0x1F9E208")]
		public Environment GetDesiredPreset()
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1F9E210", Offset = "0x1F9E210", VA = "0x1F9E210")]
		public void RegisterCamera(Camera rCamera)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1F9E320", Offset = "0x1F9E320", VA = "0x1F9E320")]
		public Color GetContrastColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1F9B9E8", Offset = "0x1F9B9E8", VA = "0x1F9B9E8")]
		public void TransitionToGradient()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x1F9E388", Offset = "0x1F9E388", VA = "0x1F9E388")]
		public Color GetColor(BackdropButton.ColorMode mode)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1F9B8B4", Offset = "0x1F9B8B4", VA = "0x1F9B8B4")]
		private void TriggerFogDensityChanged()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1F9B81C", Offset = "0x1F9B81C", VA = "0x1F9B81C")]
		private void TriggerFogColorChanged()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1F9B6D0", Offset = "0x1F9B6D0", VA = "0x1F9B6D0")]
		private void TriggerSkyboxChanged()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1F9E43C", Offset = "0x1F9E43C", VA = "0x1F9E43C")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class ScreenshotManager : MonoBehaviour
	{
		[Token(Token = "0x2000448")]
		private class CameraInfo
		{
			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRenderer renderer;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Camera camera;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderTexture renderTexture;

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x18BB27C", Offset = "0x18BB27C", VA = "0x18BB27C")]
			public CameraInfo()
			{
			}
		}

		[Token(Token = "0x4001A30")]
		private const float MM_TO_UNITS = 0.010000001f;

		[Token(Token = "0x4001A31")]
		private const float HYSTERESIS_DEGREES = 10f;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraInfo m_LeftInfo;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraInfo m_RightInfo;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] m_RendererUVs;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_LandscapeFov;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_PortraitFov;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_bIsPortraitMode;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_bIsPortraitModeLocked;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer m_Display;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_UseDisplayWidthFromConfigFile;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_DisplayWidth;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_DisplayHeight;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_AutoAlignRig;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool m_UseStereoRig;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_InterAxialOffset;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_ConvergenceFactor;

		[Token(Token = "0x17000577")]
		public bool IsPortrait
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x18BAFD8", Offset = "0x18BAFD8", VA = "0x18BAFD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x18BAFE0", Offset = "0x18BAFE0", VA = "0x18BAFE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000578")]
		public bool IsPortraitModeLocked
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x18BB118", Offset = "0x18BB118", VA = "0x18BB118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x18BB120", Offset = "0x18BB120", VA = "0x18BB120")]
			set
			{
			}
		}

		[Token(Token = "0x17000579")]
		public Camera LeftEye
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x18BB12C", Offset = "0x18BB12C", VA = "0x18BB12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		public Material LeftEyeMaterial
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x18BB1E4", Offset = "0x18BB1E4", VA = "0x18BB1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057B")]
		public bool LeftEyeMaterialRenderTextureExists
		{
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x18BB208", Offset = "0x18BB208", VA = "0x18BB208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057C")]
		private CameraInfo LeftInfo
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x18BB148", Offset = "0x18BB148", VA = "0x18BB148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x18BB284", Offset = "0x18BB284", VA = "0x18BB284")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x18BBBA8", Offset = "0x18BBBA8", VA = "0x18BBBA8")]
		private void RefreshFovs()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x18BB9D8", Offset = "0x18BB9D8", VA = "0x18BB9D8")]
		public void SetScreenshotResolution(int width)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x18BBC44", Offset = "0x18BBC44", VA = "0x18BBC44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x18BBFA8", Offset = "0x18BBFA8", VA = "0x18BBFA8")]
		private void SetRigRotation(float degrees)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x18BC1D8", Offset = "0x18BC1D8", VA = "0x18BC1D8")]
		private float GetRigRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x18BBDDC", Offset = "0x18BBDDC", VA = "0x18BBDDC")]
		private void AlignRigTo(Vector3 desiredUp)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x18BC240", Offset = "0x18BC240", VA = "0x18BC240")]
		private RenderTextureFormat CameraFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x18BB0A4", Offset = "0x18BB0A4", VA = "0x18BB0A4")]
		private void UpdateCameraAspect()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x18BB010", Offset = "0x18BB010", VA = "0x18BB010")]
		private void CreateDisplayRenderTextures()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x18BC2A8", Offset = "0x18BC2A8", VA = "0x18BC2A8")]
		private void CreateDisplayRenderTexture(CameraInfo info, RenderTextureFormat format, string tag)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x18BC518", Offset = "0x18BC518", VA = "0x18BC518")]
		public RenderTexture CreateTemporaryTargetForSave(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x18BC53C", Offset = "0x18BC53C", VA = "0x18BC53C")]
		public void RenderToTexture(RenderTexture rTexture)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x18BC69C", Offset = "0x18BC69C", VA = "0x18BC69C")]
		public static void Save(Stream outf, RenderTexture rTextureToSave, bool bSaveAsPng)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x18BC6E4", Offset = "0x18BC6E4", VA = "0x18BC6E4")]
		public static byte[] SaveToMemory(RenderTexture rTextureToSave, bool bSaveAsPng)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x18BC870", Offset = "0x18BC870", VA = "0x18BC870")]
		public ScreenshotManager()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class SelectionManager : MonoBehaviour
	{
		[Token(Token = "0x200044A")]
		[CompilerGenerated]
		private sealed class <StrokesInGroup>d__58 : IEnumerable<Stroke>, IEnumerable, IEnumerator<Stroke>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Stroke <>2__current;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectionManager <>4__this;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SketchGroupTag group;

			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public SketchGroupTag <>3__group;

			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HashSet<Stroke>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700058D")]
			private Stroke System.Collections.Generic.IEnumerator<TiltBrush.Stroke>.Current
			{
				[Token(Token = "0x6001E1D")]
				[Address(RVA = "0x18C22BC", Offset = "0x18C22BC", VA = "0x18C22BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1F")]
				[Address(RVA = "0x18C2304", Offset = "0x18C2304", VA = "0x18C2304", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x18BD3E4", Offset = "0x18BD3E4", VA = "0x18BD3E4")]
			[DebuggerHidden]
			public <StrokesInGroup>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x18C202C", Offset = "0x18C202C", VA = "0x18C202C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x18C2048", Offset = "0x18C2048", VA = "0x18C2048", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x18C226C", Offset = "0x18C226C", VA = "0x18C226C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x18C22C4", Offset = "0x18C22C4", VA = "0x18C22C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x18C230C", Offset = "0x18C230C", VA = "0x18C230C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Stroke> System.Collections.Generic.IEnumerable<TiltBrush.Stroke>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x18C23B8", Offset = "0x18C23B8", VA = "0x18C23B8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200044B")]
		[CompilerGenerated]
		private sealed class <WidgetsInGroup>d__59 : IEnumerable<GrabWidget>, IEnumerable, IEnumerator<GrabWidget>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GrabWidget <>2__current;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectionManager <>4__this;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SketchGroupTag group;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public SketchGroupTag <>3__group;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HashSet<GrabWidget>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700058F")]
			private GrabWidget System.Collections.Generic.IEnumerator<TiltBrush.GrabWidget>.Current
			{
				[Token(Token = "0x6001E26")]
				[Address(RVA = "0x18C264C", Offset = "0x18C264C", VA = "0x18C264C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E28")]
				[Address(RVA = "0x18C2694", Offset = "0x18C2694", VA = "0x18C2694", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x18BD4A0", Offset = "0x18BD4A0", VA = "0x18BD4A0")]
			[DebuggerHidden]
			public <WidgetsInGroup>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x18C23BC", Offset = "0x18C23BC", VA = "0x18C23BC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x18C23D8", Offset = "0x18C23D8", VA = "0x18C23D8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x18C25FC", Offset = "0x18C25FC", VA = "0x18C25FC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x18C2654", Offset = "0x18C2654", VA = "0x18C2654", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x18C269C", Offset = "0x18C269C", VA = "0x18C269C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GrabWidget> System.Collections.Generic.IEnumerable<TiltBrush.GrabWidget>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x18C2748", Offset = "0x18C2748", VA = "0x18C2748", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SelectionManager m_Instance;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SnapGrid3D m_SnapGridVisualization;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectionWidget m_SelectionWidget;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SketchGroupTag, HashSet<Stroke>> m_GroupToStrokes;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<SketchGroupTag, HashSet<GrabWidget>> m_GroupToWidgets;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<SketchGroupTag, HashSet<Stroke>> m_GroupToSelectedStrokes;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SketchGroupTag, HashSet<GrabWidget>> m_GroupToSelectedWidgets;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SelectionTool m_SelectionTool;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<Stroke> m_SelectedStrokes;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<Stroke> m_SelectedStrokesCopyWhileGrabbingGroup;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<GrabWidget> m_SelectedWidgets;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HashSet<GrabWidget> m_SelectedWidgetsCopyWhileGrabbingGroup;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IsAnimatingTossFromGrabbingGroup;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_IsGrabbingGroup;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private BaseTool.ToolType m_ToolTypeBeforeGrabbingGroup;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_snappingAngle;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_snappingGridSize;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_AngleSnaps;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] m_GridSnaps;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_CurrentSnapAngleIndex;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_CurrentSnapGridIndex;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_RemoveFromSelection;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_bSelectionWidgetNeedsUpdate;

		[Token(Token = "0x1700057D")]
		public bool HasSelection
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x18BC884", Offset = "0x18BC884", VA = "0x18BC884")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057E")]
		public bool SelectionToolIsHot
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x18BC8FC", Offset = "0x18BC8FC", VA = "0x18BC8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057F")]
		public bool SelectionCanBeGrouped
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x18BC98C", Offset = "0x18BC98C", VA = "0x18BC98C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000580")]
		public bool SelectionIsInOneGroup
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x18BC990", Offset = "0x18BC990", VA = "0x18BC990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000581")]
		public int SelectedStrokeCount
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x18BCC48", Offset = "0x18BCC48", VA = "0x18BCC48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000582")]
		public int NumVertsInSelection
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x18BCC90", Offset = "0x18BCC90", VA = "0x18BCC90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000583")]
		public IEnumerable<Stroke> SelectedStrokes
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x18BCFB4", Offset = "0x18BCFB4", VA = "0x18BCFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		public IEnumerable<GrabWidget> SelectedWidgets
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x18BCFBC", Offset = "0x18BCFBC", VA = "0x18BCFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000585")]
		public bool SelectionWasTransformed
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x18BCFC4", Offset = "0x18BCFC4", VA = "0x18BCFC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000586")]
		private bool ShouldShowSelectedStrokes
		{
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x18BD11C", Offset = "0x18BD11C", VA = "0x18BD11C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000587")]
		public TrTransform SelectionTransform
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x18BD160", Offset = "0x18BD160", VA = "0x18BD160")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x18BD250", Offset = "0x18BD250", VA = "0x18BD250")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public bool IsAnimatingTossFromGrabbingGroup
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x18BD334", Offset = "0x18BD334", VA = "0x18BD334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000589")]
		public int CurrentSnapAngleIndex
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x18BD33C", Offset = "0x18BD33C", VA = "0x18BD33C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700058A")]
		public int CurrentSnapGridIndex
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x18BD344", Offset = "0x18BD344", VA = "0x18BD344")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700058B")]
		public float SnappingAngle
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x18BD34C", Offset = "0x18BD34C", VA = "0x18BD34C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700058C")]
		public float SnappingGridSize
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x18BD354", Offset = "0x18BD354", VA = "0x18BD354")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x18BD084", Offset = "0x18BD084", VA = "0x18BD084")]
		public void RemoveFromSelection(bool remove)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x18BD114", Offset = "0x18BD114", VA = "0x18BD114")]
		public bool ShouldRemoveFromSelection()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x18BD35C", Offset = "0x18BD35C", VA = "0x18BD35C")]
		[IteratorStateMachine(typeof(<StrokesInGroup>d__58))]
		public IEnumerable<Stroke> StrokesInGroup(SketchGroupTag group)
		{
			return null;
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x18BD418", Offset = "0x18BD418", VA = "0x18BD418")]
		[IteratorStateMachine(typeof(<WidgetsInGroup>d__59))]
		public IEnumerable<GrabWidget> WidgetsInGroup(SketchGroupTag group)
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x18BD4D4", Offset = "0x18BD4D4", VA = "0x18BD4D4")]
		public void OnStrokeRemovedFromGroup(Stroke stroke, SketchGroupTag oldGroup)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x18BD6CC", Offset = "0x18BD6CC", VA = "0x18BD6CC")]
		public void OnWidgetRemovedFromGroup(GrabWidget widget, SketchGroupTag oldGroup)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x18BD8C4", Offset = "0x18BD8C4", VA = "0x18BD8C4")]
		public void OnStrokeAddedToGroup(Stroke stroke)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x18BDB94", Offset = "0x18BDB94", VA = "0x18BDB94")]
		public void OnWidgetAddedToGroup(GrabWidget widget)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x18BDE64", Offset = "0x18BDE64", VA = "0x18BDE64")]
		public void OnFinishReset()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x18BDEE8", Offset = "0x18BDEE8", VA = "0x18BDEE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x18BE044", Offset = "0x18BE044", VA = "0x18BE044")]
		public void CacheSelectionTool(SelectionTool tool)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x18BE04C", Offset = "0x18BE04C", VA = "0x18BE04C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x18BE0D8", Offset = "0x18BE0D8", VA = "0x18BE0D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x18BE104", Offset = "0x18BE104", VA = "0x18BE104")]
		private void UpdateSelectionVisibility()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x18BE428", Offset = "0x18BE428", VA = "0x18BE428")]
		private void RegisterHighlights()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x18BE614", Offset = "0x18BE614", VA = "0x18BE614")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x18BE9D0", Offset = "0x18BE9D0", VA = "0x18BE9D0")]
		public SelectionWidget StartGrabbingGroupWithWidget(GrabWidget grabWidget)
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x18BECE0", Offset = "0x18BECE0", VA = "0x18BECE0")]
		public void EndGrabbingGroupWithWidget()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x18BE618", Offset = "0x18BE618", VA = "0x18BE618")]
		public void ResolveChanges()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x18BEC24", Offset = "0x18BEC24", VA = "0x18BEC24")]
		public void ClearActiveSelection()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x18BF030", Offset = "0x18BF030", VA = "0x18BF030")]
		public BaseCommand CreateEndSelectionCommand()
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x18BF0E0", Offset = "0x18BF0E0", VA = "0x18BF0E0")]
		public void DeleteSelection()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x18BF1BC", Offset = "0x18BF1BC", VA = "0x18BF1BC")]
		public DeleteSelectionCommand CurrentDeleteSelectionCommand()
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x18BF230", Offset = "0x18BF230", VA = "0x18BF230")]
		public void ForgetStrokesInSelectionCanvas()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x18BF2F4", Offset = "0x18BF2F4", VA = "0x18BF2F4")]
		public void SelectStrokes(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x18BF930", Offset = "0x18BF930", VA = "0x18BF930")]
		public void DeselectStrokes(IEnumerable<Stroke> strokes, [Optional] CanvasScript targetCanvas)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x18BFE74", Offset = "0x18BFE74", VA = "0x18BFE74")]
		private bool IsValidDestination(CanvasScript layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x18BFF04", Offset = "0x18BFF04", VA = "0x18BFF04")]
		public void SelectWidgets(IEnumerable<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x18C0208", Offset = "0x18C0208", VA = "0x18C0208")]
		public void SelectWidget(GrabWidget widget)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x18C0468", Offset = "0x18C0468", VA = "0x18C0468")]
		public void DeselectWidgets(IEnumerable<GrabWidget> widgets, [Optional] CanvasScript targetCanvas)
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x18C09C8", Offset = "0x18C09C8", VA = "0x18C09C8")]
		public void RegisterStrokesInSelectionCanvas(ICollection<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x18C0CF0", Offset = "0x18C0CF0", VA = "0x18C0CF0")]
		public void DeregisterStrokesInSelectionCanvas(ICollection<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x18C1018", Offset = "0x18C1018", VA = "0x18C1018")]
		public void RegisterWidgetsInSelectionCanvas(ICollection<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x18C1340", Offset = "0x18C1340", VA = "0x18C1340")]
		public void DeregisterWidgetsInSelectionCanvas(ICollection<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x18C1668", Offset = "0x18C1668", VA = "0x18C1668")]
		public void InvertSelection()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x18C1788", Offset = "0x18C1788", VA = "0x18C1788")]
		public void FlipSelection()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x18C1A2C", Offset = "0x18C1A2C", VA = "0x18C1A2C")]
		public void SelectAll()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x18C1B80", Offset = "0x18C1B80", VA = "0x18C1B80")]
		public void ToggleGroupSelectedStrokesAndWidgets()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x18BECD4", Offset = "0x18BECD4", VA = "0x18BECD4")]
		public void UpdateSelectionWidget()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x18BF8D8", Offset = "0x18BF8D8", VA = "0x18BF8D8")]
		public bool IsStrokeSelected(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x18C0410", Offset = "0x18C0410", VA = "0x18C0410")]
		public bool IsWidgetSelected(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x18BD5EC", Offset = "0x18BD5EC", VA = "0x18BD5EC")]
		private void RemoveFromGroupToSelectedStrokes(SketchGroupTag group, Stroke stroke)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x18BD7E4", Offset = "0x18BD7E4", VA = "0x18BD7E4")]
		private void RemoveFromGroupToSelectedWidgets(SketchGroupTag group, GrabWidget widget)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x18BDA60", Offset = "0x18BDA60", VA = "0x18BDA60")]
		private void AddToGroupToSelectedStrokes(SketchGroupTag group, Stroke stroke)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x18BDD30", Offset = "0x18BDD30", VA = "0x18BDD30")]
		private void AddToGroupToSelectedWidgets(SketchGroupTag group, GrabWidget widget)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x18C1D90", Offset = "0x18C1D90", VA = "0x18C1D90")]
		private void OnSelectionTransformed(TrTransform xf_SS)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x18BEE58", Offset = "0x18BEE58", VA = "0x18BEE58")]
		private Bounds GetBoundsOfSelectedWidgets_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x18C1DB4", Offset = "0x18C1DB4", VA = "0x18C1DB4")]
		public bool AngleOrPositionSnapEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x18C1DD4", Offset = "0x18C1DD4", VA = "0x18C1DD4")]
		public void SetSnappingAngle(int snapIndex)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x18C1E0C", Offset = "0x18C1E0C", VA = "0x18C1E0C")]
		public void SetSnappingGridSize(int snapIndex)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x18C1F24", Offset = "0x18C1F24", VA = "0x18C1F24")]
		public SelectionManager()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class AssetGetter
	{
		[Token(Token = "0x200044D")]
		public class SnakeToCamelPropertyNameContractResolver : DefaultContractResolver
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x18C296C", Offset = "0x18C296C", VA = "0x18C296C", Slot = "22")]
			protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
			{
				return null;
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x18C29A8", Offset = "0x18C29A8", VA = "0x18C29A8")]
			private string SnakeToCamelCase(string s)
			{
				return null;
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x18C2884", Offset = "0x18C2884", VA = "0x18C2884")]
			public SnakeToCamelPropertyNameContractResolver()
			{
			}
		}

		[Token(Token = "0x200044E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest initialRequest;

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x18C2AA0", Offset = "0x18C2AA0", VA = "0x18C2AA0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x18C2AA8", Offset = "0x18C2AA8", VA = "0x18C2AA8")]
			internal JObject <GetAssetCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200044F")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass17_1
		{
			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrAssetFormat requestedType;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<JToken, bool> <>9__1;

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x18C2ACC", Offset = "0x18C2ACC", VA = "0x18C2ACC")]
			public <>c__DisplayClass17_1()
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x18C2AD4", Offset = "0x18C2AD4", VA = "0x18C2AD4")]
			internal bool <GetAssetCoroutine>b__1(JToken x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000450")]
		[CompilerGenerated]
		private sealed class <GetAssetCoroutine>d__17 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetGetter <>4__this;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass17_1 <>8__2;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private OAuth2Identity <identity>5__2;

			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WebRequest <request>5__3;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private JsonTextReader <jsonReader>5__5;

			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Future<JObject> <f>5__6;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<PolyRawAsset.ElementInfo>.Enumerator <>7__wrap6;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private PolyRawAsset.ElementInfo <e>5__8;

			[Token(Token = "0x17000595")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0x18C48A0", Offset = "0x18C48A0", VA = "0x18C48A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0x18C48E8", Offset = "0x18C48E8", VA = "0x18C48E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x18C2944", Offset = "0x18C2944", VA = "0x18C2944")]
			[DebuggerHidden]
			public <GetAssetCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x18C2BA4", Offset = "0x18C2BA4", VA = "0x18C2BA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x18C2C88", Offset = "0x18C2C88", VA = "0x18C2C88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x18C4590", Offset = "0x18C4590", VA = "0x18C4590")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x18C4640", Offset = "0x18C4640", VA = "0x18C4640")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x18C46F0", Offset = "0x18C46F0", VA = "0x18C46F0")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x18C4850", Offset = "0x18C4850", VA = "0x18C4850")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x18C47A0", Offset = "0x18C47A0", VA = "0x18C47A0")]
			private void <>m__Finally5()
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x18C48A8", Offset = "0x18C48A8", VA = "0x18C48A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Ready;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_URI;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PolyRawAsset m_Asset;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x17000591")]
		public bool IsCanceled
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x18C274C", Offset = "0x18C274C", VA = "0x18C274C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x18C2754", Offset = "0x18C2754", VA = "0x18C2754")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000592")]
		public bool IsReady
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x18C2760", Offset = "0x18C2760", VA = "0x18C2760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000593")]
		public PolyRawAsset Asset
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x18C2768", Offset = "0x18C2768", VA = "0x18C2768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		public string Reason
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x18C2770", Offset = "0x18C2770", VA = "0x18C2770")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x18C2778", Offset = "0x18C2778", VA = "0x18C2778")]
		public AssetGetter(string uri, string assetId, VrAssetFormat assetType, string reason)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x18C28DC", Offset = "0x18C28DC", VA = "0x18C28DC")]
		[IteratorStateMachine(typeof(<GetAssetCoroutine>d__17))]
		public IEnumerator<Null> GetAssetCoroutine()
		{
			return null;
		}
	}
	[Token(Token = "0x2000451")]
	public class AssetLister
	{
		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x18C4A70", Offset = "0x18C4A70", VA = "0x18C4A70")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x18C4A78", Offset = "0x18C4A78", VA = "0x18C4A78")]
			internal JObject <NextPage>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000453")]
		[CompilerGenerated]
		private sealed class <NextPage>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetLister <>4__this;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolySceneFileInfo> files;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x17000598")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0x18C5520", Offset = "0x18C5520", VA = "0x18C5520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000599")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E50")]
				[Address(RVA = "0x18C5568", Offset = "0x18C5568", VA = "0x18C5568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x18C49A4", Offset = "0x18C49A4", VA = "0x18C49A4")]
			[DebuggerHidden]
			public <NextPage>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x18C4A9C", Offset = "0x18C4A9C", VA = "0x18C4A9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x18C4AB8", Offset = "0x18C4AB8", VA = "0x18C4AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x18C5470", Offset = "0x18C5470", VA = "0x18C5470")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x18C5528", Offset = "0x18C5528", VA = "0x18C5528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000454")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x18C5570", Offset = "0x18C5570", VA = "0x18C5570")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x18C5578", Offset = "0x18C5578", VA = "0x18C5578")]
			internal JObject <NextPage>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000455")]
		[CompilerGenerated]
		private sealed class <NextPage>d__7 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetLister <>4__this;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolyAssetCatalog.AssetDetails> files;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string thumbnailSuffix;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private JObject <json>5__3;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private JToken <lastAsset>5__4;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<Null> <cr>5__5;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<JToken> <>7__wrap5;

			[Token(Token = "0x1700059A")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0x18C6650", Offset = "0x18C6650", VA = "0x18C6650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0x18C6698", Offset = "0x18C6698", VA = "0x18C6698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x18C4A48", Offset = "0x18C4A48", VA = "0x18C4A48")]
			[DebuggerHidden]
			public <NextPage>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x18C559C", Offset = "0x18C559C", VA = "0x18C559C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x18C55D4", Offset = "0x18C55D4", VA = "0x18C55D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x18C64F0", Offset = "0x18C64F0", VA = "0x18C64F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x18C65A0", Offset = "0x18C65A0", VA = "0x18C65A0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x18C6658", Offset = "0x18C6658", VA = "0x18C6658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Uri;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_ErrorMessage;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_PageToken;

		[Token(Token = "0x17000597")]
		public bool HasMore
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x18C48F0", Offset = "0x18C48F0", VA = "0x18C48F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x18C4900", Offset = "0x18C4900", VA = "0x18C4900")]
		public AssetLister(string uri, string errorMessage)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x18C492C", Offset = "0x18C492C", VA = "0x18C492C")]
		[IteratorStateMachine(typeof(<NextPage>d__6))]
		public IEnumerator<object> NextPage(List<PolySceneFileInfo> files)
		{
			return null;
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x18C49CC", Offset = "0x18C49CC", VA = "0x18C49CC")]
		[IteratorStateMachine(typeof(<NextPage>d__7))]
		public IEnumerator<Null> NextPage(List<PolyAssetCatalog.AssetDetails> files, string thumbnailSuffix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000456")]
	public class DriveAccess
	{
		[Token(Token = "0x2000457")]
		private class ParentNotFound : Exception
		{
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x18C8538", Offset = "0x18C8538", VA = "0x18C8538")]
			public ParentNotFound(Exception inner)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000458")]
		[CompilerGenerated]
		private struct <InitializeDriveLinkAsync>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x18C85B8", Offset = "0x18C85B8", VA = "0x18C85B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x18C8B68", Offset = "0x18C8B68", VA = "0x18C8B68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000459")]
		[CompilerGenerated]
		private struct <UninitializeAsync>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x18C8B74", Offset = "0x18C8B74", VA = "0x18C8B74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x18C8EE4", Offset = "0x18C8EE4", VA = "0x18C8EE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045A")]
		[CompilerGenerated]
		private struct <GetFilesInFolderAsync>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x18C8F3C", Offset = "0x18C8F3C", VA = "0x18C8F3C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x18C9120", Offset = "0x18C9120", VA = "0x18C9120", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045B")]
		[CompilerGenerated]
		private struct <GetFoldersInFolderAsync>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x18C9178", Offset = "0x18C9178", VA = "0x18C9178", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x18C935C", Offset = "0x18C935C", VA = "0x18C935C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200045C")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task<FileList>> <>9__0;

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x18C93B4", Offset = "0x18C93B4", VA = "0x18C93B4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x18C93BC", Offset = "0x18C93BC", VA = "0x18C93BC")]
			internal Task<FileList> <GetFolderContentsAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045D")]
		[CompilerGenerated]
		private struct <GetFolderContentsAsync>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool getFiles;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool getFolders;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string folderId;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass37_0 <>8__1;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Google.Apis.Drive.v3.Data.File> <items>5__2;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x18C9410", Offset = "0x18C9410", VA = "0x18C9410", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x18C9C1C", Offset = "0x18C9C1C", VA = "0x18C9C1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045F")]
		[CompilerGenerated]
		private struct <GetFolderAsync>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parentId;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string name;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x18C9CD0", Offset = "0x18C9CD0", VA = "0x18C9CD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x18CA294", Offset = "0x18CA294", VA = "0x18CA294", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000461")]
		[CompilerGenerated]
		private struct <GetFileAsync>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parentId;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string name;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x18CA348", Offset = "0x18CA348", VA = "0x18CA348", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x18CA90C", Offset = "0x18CA90C", VA = "0x18CA90C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000463")]
		[CompilerGenerated]
		private struct <DownloadFileAsync>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Stream destStream;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Google.Apis.Drive.v3.Data.File src;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IDownloadProgress> <>u__1;

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x18CA998", Offset = "0x18CA998", VA = "0x18CA998", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x18CAC7C", Offset = "0x18CAC7C", VA = "0x18CAC7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000464")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.CreateRequest createRequest;

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x18CAC88", Offset = "0x18CAC88", VA = "0x18CAC88")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x18CAC90", Offset = "0x18CAC90", VA = "0x18CAC90")]
			internal Task<Google.Apis.Drive.v3.Data.File> <CreateRootFolderAsync>b__5()
			{
				return null;
			}
		}

		[Token(Token = "0x2000466")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass41_2
		{
			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass41_0 CS$<>8__locals2;

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x18CAD48", Offset = "0x18CAD48", VA = "0x18CAD48")]
			public <>c__DisplayClass41_2()
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x18CAD50", Offset = "0x18CAD50", VA = "0x18CAD50")]
			internal Task<FileList> <CreateRootFolderAsync>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x2000467")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass41_3
		{
			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass41_0 CS$<>8__locals3;

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x18CADAC", Offset = "0x18CADAC", VA = "0x18CADAC")]
			public <>c__DisplayClass41_3()
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x18CADB4", Offset = "0x18CADB4", VA = "0x18CADB4")]
			internal Task<FileList> <CreateRootFolderAsync>b__3()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000469")]
		[CompilerGenerated]
		private struct <CreateRootFolderAsync>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass41_0 <>8__1;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass41_2 <>8__2;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass41_3 <>8__3;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<FileList> <>u__2;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x18CAEC4", Offset = "0x18CAEC4", VA = "0x18CAEC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x18CC094", Offset = "0x18CC094", VA = "0x18CC094", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200046A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.GetRequest request;

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x18CC0A0", Offset = "0x18CC0A0", VA = "0x18CC0A0")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x18CC0A8", Offset = "0x18CC0A8", VA = "0x18CC0A8")]
			internal Task<Google.Apis.Drive.v3.Data.File> <GetDeviceFolderAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046B")]
		[CompilerGenerated]
		private struct <GetDeviceFolderAsync>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass42_0 <>8__1;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <folderId>5__2;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x18CC0FC", Offset = "0x18CC0FC", VA = "0x18CC0FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x18CC7B4", Offset = "0x18CC7B4", VA = "0x18CC7B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046C")]
		[CompilerGenerated]
		private struct <CreateDeviceFolderAsync>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x18CC80C", Offset = "0x18CC80C", VA = "0x18CC80C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x18CCA34", Offset = "0x18CCA34", VA = "0x18CCA34", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200046D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest folderRequest;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x18CCA40", Offset = "0x18CCA40", VA = "0x18CCA40")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x18CCA48", Offset = "0x18CCA48", VA = "0x18CCA48")]
			internal Task<FileList> <CreateFolderAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046F")]
		[CompilerGenerated]
		private struct <CreateFolderAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string parentId;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass44_0 <>8__1;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string[] <parts>5__2;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<FileList> <>u__2;

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x18CCB00", Offset = "0x18CCB00", VA = "0x18CCB00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x18CD744", Offset = "0x18CD744", VA = "0x18CD744", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000471")]
		[CompilerGenerated]
		private struct <RefreshFreeSpaceAsync>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken? token;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<About> <>u__1;

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x18CD81C", Offset = "0x18CD81C", VA = "0x18CD81C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x18CDD58", Offset = "0x18CDD58", VA = "0x18CDD58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000472")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.UpdateRequest trashRequest;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x18CDD64", Offset = "0x18CDD64", VA = "0x18CDD64")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x18CDD6C", Offset = "0x18CDD6C", VA = "0x18CDD6C")]
			internal Task<Google.Apis.Drive.v3.Data.File> <TrashSketch>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000473")]
		[CompilerGenerated]
		private struct <TrashSketch>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileName;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass46_0 <>8__1;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x18CDDC0", Offset = "0x18CDDC0", VA = "0x18CDDC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x18CE310", Offset = "0x18CE310", VA = "0x18CE310", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000474")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<long> progress;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream dataStream;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long position;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FilesResource.CreateMediaUpload uploader;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x18CE31C", Offset = "0x18CE31C", VA = "0x18CE31C")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x18CE324", Offset = "0x18CE324", VA = "0x18CE324")]
			internal void <UploadFileAsync>b__0(IUploadProgress p)
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x18CE444", Offset = "0x18CE444", VA = "0x18CE444")]
			internal Task<IUploadProgress> <UploadFileAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000475")]
		[CompilerGenerated]
		private struct <UploadFileAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Google.Apis.Drive.v3.Data.File file;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass47_0 <>8__1;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IUploadProgress> <>u__1;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x18CE488", Offset = "0x18CE488", VA = "0x18CE488", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x18CEB6C", Offset = "0x18CEB6C", VA = "0x18CEB6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000476")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<long> progress;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream dataStream;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long position;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FilesResource.UpdateMediaUpload uploader;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x18CEB78", Offset = "0x18CEB78", VA = "0x18CEB78")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x18CEB80", Offset = "0x18CEB80", VA = "0x18CEB80")]
			internal void <UpdateFileAsync>b__0(IUploadProgress p)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x18CECA0", Offset = "0x18CECA0", VA = "0x18CECA0")]
			internal Task<IUploadProgress> <UpdateFileAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000477")]
		[CompilerGenerated]
		private struct <UpdateFileAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Google.Apis.Drive.v3.Data.File file;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass48_0 <>8__1;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IUploadProgress> <>u__1;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x18CECE4", Offset = "0x18CECE4", VA = "0x18CECE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x18CF3CC", Offset = "0x18CF3CC", VA = "0x18CF3CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000479")]
		[CompilerGenerated]
		private struct <DownloadFileAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fileId;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<IDownloadProgress> <>u__1;

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x18CF550", Offset = "0x18CF550", VA = "0x18CF550", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x18CF918", Offset = "0x18CF918", VA = "0x18CF918", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200047A")]
		[CompilerGenerated]
		private struct <Retry>d__53<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Task<T>> taskSource;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001EC9")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ECA")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200047B")]
		[CompilerGenerated]
		private struct <Retry>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task> taskSource;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x18CF924", Offset = "0x18CF924", VA = "0x18CF924", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x18CFDF8", Offset = "0x18CFDF8", VA = "0x18CFDF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A95")]
		private const double kTimeEpsilon = 2.5;

		[Token(Token = "0x4001A96")]
		private const int kRetryAttempts = 3;

		[Token(Token = "0x4001A97")]
		private const int kRetryInitialWaitMs = 500;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_DeviceFolderId;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_DeviceId;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DriveService m_DriveService;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAndCts m_InitTask;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_Uninitializing;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_Initialized;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GoogleUserSettings m_GoogleUserSettings;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_HasSpaceQuota;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long m_DriveFreeSpace;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnReadyChanged;

		[Token(Token = "0x1700059C")]
		public bool Ready
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x18C66A0", Offset = "0x18C66A0", VA = "0x18C66A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059D")]
		public bool Initializing
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x18C66DC", Offset = "0x18C66DC", VA = "0x18C66DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059E")]
		public string DeviceFolder
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x18C6718", Offset = "0x18C6718", VA = "0x18C6718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059F")]
		public bool HasSpaceQuota
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x18C6720", Offset = "0x18C6720", VA = "0x18C6720")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A0")]
		public long DriveFreeSpace
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x18C6728", Offset = "0x18C6728", VA = "0x18C6728")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x18C6740", Offset = "0x18C6740", VA = "0x18C6740")]
		public DriveAccess(OAuth2Identity googleIdentity, GoogleUserSettings googleUserSettings)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x18C6944", Offset = "0x18C6944", VA = "0x18C6944")]
		private void OnGoogleLogin()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x18C69DC", Offset = "0x18C69DC", VA = "0x18C69DC")]
		private void OnGoogleLogout()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x18C6B08", Offset = "0x18C6B08", VA = "0x18C6B08", Slot = "1")]
		~DriveAccess()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x18C6840", Offset = "0x18C6840", VA = "0x18C6840")]
		private static string GetDeviceId()
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x18C6FDC", Offset = "0x18C6FDC", VA = "0x18C6FDC")]
		private static string GetPCSerialNumber(string target)
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x18C6F40", Offset = "0x18C6F40", VA = "0x18C6F40")]
		private static string GetPcId()
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x18C6C94", Offset = "0x18C6C94", VA = "0x18C6C94")]
		private static string GetAndroidId()
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x18C6948", Offset = "0x18C6948", VA = "0x18C6948")]
		[AsyncStateMachine(typeof(<InitializeDriveLinkAsync>d__33))]
		public void InitializeDriveLinkAsync()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x18C6A10", Offset = "0x18C6A10", VA = "0x18C6A10")]
		[AsyncStateMachine(typeof(<UninitializeAsync>d__34))]
		public Task<bool> UninitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x18C725C", Offset = "0x18C725C", VA = "0x18C725C")]
		[AsyncStateMachine(typeof(<GetFilesInFolderAsync>d__35))]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFilesInFolderAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x18C7360", Offset = "0x18C7360", VA = "0x18C7360")]
		[AsyncStateMachine(typeof(<GetFoldersInFolderAsync>d__36))]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFoldersInFolderAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x18C7464", Offset = "0x18C7464", VA = "0x18C7464")]
		[AsyncStateMachine(typeof(<GetFolderContentsAsync>d__37))]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFolderContentsAsync(string folderId, bool getFiles, bool getFolders, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x18C758C", Offset = "0x18C758C", VA = "0x18C758C")]
		[AsyncStateMachine(typeof(<GetFolderAsync>d__38))]
		public Task<Google.Apis.Drive.v3.Data.File> GetFolderAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x18C769C", Offset = "0x18C769C", VA = "0x18C769C")]
		[AsyncStateMachine(typeof(<GetFileAsync>d__39))]
		public Task<Google.Apis.Drive.v3.Data.File> GetFileAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x18C77AC", Offset = "0x18C77AC", VA = "0x18C77AC")]
		[AsyncStateMachine(typeof(<DownloadFileAsync>d__40))]
		public Task DownloadFileAsync(Google.Apis.Drive.v3.Data.File src, Stream destStream, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x18C789C", Offset = "0x18C789C", VA = "0x18C789C")]
		[AsyncStateMachine(typeof(<CreateRootFolderAsync>d__41))]
		public Task CreateRootFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x18C7978", Offset = "0x18C7978", VA = "0x18C7978")]
		[AsyncStateMachine(typeof(<GetDeviceFolderAsync>d__42))]
		public Task<string> GetDeviceFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x18C7A74", Offset = "0x18C7A74", VA = "0x18C7A74")]
		[AsyncStateMachine(typeof(<CreateDeviceFolderAsync>d__43))]
		public Task CreateDeviceFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x18C7B50", Offset = "0x18C7B50", VA = "0x18C7B50")]
		[AsyncStateMachine(typeof(<CreateFolderAsync>d__44))]
		public Task<Google.Apis.Drive.v3.Data.File> CreateFolderAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x18C7C60", Offset = "0x18C7C60", VA = "0x18C7C60")]
		[AsyncStateMachine(typeof(<RefreshFreeSpaceAsync>d__45))]
		public Task RefreshFreeSpaceAsync([Optional] CancellationToken? token)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x18C7D3C", Offset = "0x18C7D3C", VA = "0x18C7D3C")]
		[AsyncStateMachine(typeof(<TrashSketch>d__46))]
		public Task TrashSketch(string fileName, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x18C7E1C", Offset = "0x18C7E1C", VA = "0x18C7E1C")]
		[AsyncStateMachine(typeof(<UploadFileAsync>d__47))]
		public Task UploadFileAsync(Google.Apis.Drive.v3.Data.File file, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x18C7F10", Offset = "0x18C7F10", VA = "0x18C7F10")]
		[AsyncStateMachine(typeof(<UpdateFileAsync>d__48))]
		public Task UpdateFileAsync(Google.Apis.Drive.v3.Data.File file, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x18C8004", Offset = "0x18C8004", VA = "0x18C8004")]
		[AsyncStateMachine(typeof(<DownloadFileAsync>d__49))]
		public Task DownloadFileAsync(string fileId, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x18C80F8", Offset = "0x18C80F8", VA = "0x18C80F8")]
		public static bool IsNewer(Google.Apis.Drive.v3.Data.File driveFile, FileInfo localFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x18C81E8", Offset = "0x18C81E8", VA = "0x18C81E8")]
		public static bool IsNewer(FileInfo localFile, Google.Apis.Drive.v3.Data.File driveFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x18C82E0", Offset = "0x18C82E0", VA = "0x18C82E0")]
		public static bool IsNewer(FileInfo first, FileInfo second)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[AsyncStateMachine(typeof(<Retry>d__53<>))]
		public static Task<T> Retry<T>(Func<Task<T>> taskSource)
		{
			return null;
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x18C8394", Offset = "0x18C8394", VA = "0x18C8394")]
		[AsyncStateMachine(typeof(<Retry>d__54))]
		public static Task Retry(Func<Task> taskSource)
		{
			return null;
		}
	}
	[Token(Token = "0x200047D")]
	public class DriveSync
	{
		[Token(Token = "0x200047E")]
		public class DataTransferError : Exception
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x18CEAFC", Offset = "0x18CEAFC", VA = "0x18CEAFC")]
			public DataTransferError(string message, Exception inner)
			{
			}
		}

		[Token(Token = "0x200047F")]
		[Flags]
		private enum SyncType : short
		{
			[Token(Token = "0x4001B73")]
			Download = 1,
			[Token(Token = "0x4001B74")]
			Upload = 2,
			[Token(Token = "0x4001B75")]
			UploadAndDownload = 3
		}

		[Serializable]
		[Token(Token = "0x2000480")]
		public enum SyncedFolderType
		{
			[Token(Token = "0x4001B77")]
			Sketches,
			[Token(Token = "0x4001B78")]
			Snapshots,
			[Token(Token = "0x4001B79")]
			Videos,
			[Token(Token = "0x4001B7A")]
			MediaLibrary,
			[Token(Token = "0x4001B7B")]
			Exports,
			[Token(Token = "0x4001B7C")]
			Num
		}

		[Token(Token = "0x2000481")]
		private class SyncedFolder
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string AbsoluteLocalPath;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Name;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ParentDriveId;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Google.Apis.Drive.v3.Data.File Drive;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DirectoryInfo Local;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SyncType SyncType;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool Recursive;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string[] ExcludeExtensions;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SyncedFolderType FolderType;

			[Token(Token = "0x170005A7")]
			public bool Upload
			{
				[Token(Token = "0x6001EEE")]
				[Address(RVA = "0x18D19D8", Offset = "0x18D19D8", VA = "0x18D19D8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005A8")]
			public bool Download
			{
				[Token(Token = "0x6001EEF")]
				[Address(RVA = "0x18D19E4", Offset = "0x18D19E4", VA = "0x18D19E4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x18D19F0", Offset = "0x18D19F0", VA = "0x18D19F0")]
			public SyncedFolder()
			{
			}
		}

		[Token(Token = "0x2000482")]
		public class SyncItem
		{
			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string AbsoluteLocalPath;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ParentId;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string FileId;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool Overwrite;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DateTime LastModified;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool Upload;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public long Size;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public SyncedFolderType FolderType;

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x18D19F8", Offset = "0x18D19F8", VA = "0x18D19F8")]
			public SyncItem()
			{
			}
		}

		[Token(Token = "0x2000483")]
		private class SyncItemQueue
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private SortedDictionary<DateTime, Queue<SyncItem>> m_Queue;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_Count;

			[Token(Token = "0x170005A9")]
			public int Count
			{
				[Token(Token = "0x6001EF2")]
				[Address(RVA = "0x18D1A00", Offset = "0x18D1A00", VA = "0x18D1A00")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x18D0D7C", Offset = "0x18D0D7C", VA = "0x18D0D7C")]
			public SyncItemQueue()
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x18D1A08", Offset = "0x18D1A08", VA = "0x18D1A08")]
			public void Insert(SyncItem item)
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x18D1BE8", Offset = "0x18D1BE8", VA = "0x18D1BE8")]
			public SyncItem Dequeue()
			{
				return null;
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x18D1DA4", Offset = "0x18D1DA4", VA = "0x18D1DA4")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000484")]
		private class UserSyncFlag
		{
			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_PreferenceName;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_Value;

			[Token(Token = "0x170005AA")]
			public bool Value
			{
				[Token(Token = "0x6001EF8")]
				[Address(RVA = "0x18D1E9C", Offset = "0x18D1E9C", VA = "0x18D1E9C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001EF9")]
				[Address(RVA = "0x18D0688", Offset = "0x18D0688", VA = "0x18D0688")]
				set
				{
				}
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x18D0AA8", Offset = "0x18D0AA8", VA = "0x18D0AA8")]
			public UserSyncFlag(string user, string preference)
			{
			}
		}

		[Token(Token = "0x2000485")]
		private class Transfer : IProgress<long>
		{
			[Token(Token = "0x170005AB")]
			public SyncItem Item
			{
				[Token(Token = "0x6001EFA")]
				[Address(RVA = "0x18D1EA4", Offset = "0x18D1EA4", VA = "0x18D1EA4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001EFB")]
				[Address(RVA = "0x18D1EAC", Offset = "0x18D1EAC", VA = "0x18D1EAC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170005AC")]
			public TaskAndCts TaskAndCts
			{
				[Token(Token = "0x6001EFC")]
				[Address(RVA = "0x18D1EB4", Offset = "0x18D1EB4", VA = "0x18D1EB4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001EFD")]
				[Address(RVA = "0x18D1EBC", Offset = "0x18D1EBC", VA = "0x18D1EBC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170005AD")]
			public long BytesTransferred
			{
				[Token(Token = "0x6001EFE")]
				[Address(RVA = "0x18D1EC4", Offset = "0x18D1EC4", VA = "0x18D1EC4")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0x18D1ECC", Offset = "0x18D1ECC", VA = "0x18D1ECC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170005AE")]
			public Task Task
			{
				[Token(Token = "0x6001F00")]
				[Address(RVA = "0x18D1ED4", Offset = "0x18D1ED4", VA = "0x18D1ED4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x18D1EF0", Offset = "0x18D1EF0", VA = "0x18D1EF0")]
			public Transfer(DriveSync ds, SyncItem item)
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x18D1FA8", Offset = "0x18D1FA8", VA = "0x18D1FA8", Slot = "4")]
			public void Report(long value)
			{
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x18D1FB0", Offset = "0x18D1FB0", VA = "0x18D1FB0")]
			public void Cancel()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000487")]
		[CompilerGenerated]
		private struct <InitializeDriveSyncAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x1DD1278", Offset = "0x1DD1278", VA = "0x1DD1278", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x1DD18A8", Offset = "0x1DD18A8", VA = "0x1DD18A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000488")]
		[CompilerGenerated]
		private struct <SetupSyncFoldersAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <deviceRootId>5__2;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Task> <folderSyncs>5__3;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x1DD18B4", Offset = "0x1DD18B4", VA = "0x1DD18B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x1DD2504", Offset = "0x1DD2504", VA = "0x1DD2504", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000489")]
		[CompilerGenerated]
		private struct <UninitializeAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x1DD2510", Offset = "0x1DD2510", VA = "0x1DD2510", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x1DD2C18", Offset = "0x1DD2C18", VA = "0x1DD2C18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200048A")]
		[CompilerGenerated]
		private struct <ClearAllTransfers>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x1DD2C24", Offset = "0x1DD2C24", VA = "0x1DD2C24", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x1DD3240", Offset = "0x1DD3240", VA = "0x1DD3240", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200048B")]
		[CompilerGenerated]
		private struct <SyncLocalFilesAsync>d__51 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x1DD324C", Offset = "0x1DD324C", VA = "0x1DD324C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x1DD3768", Offset = "0x1DD3768", VA = "0x1DD3768", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200048C")]
		[CompilerGenerated]
		private struct <AddSyncedFolderAsync>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string localPath;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string parentId;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SyncType syncType;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
			public bool recursive;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string[] excludeExtensions;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public SyncedFolderType folderType;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SyncedFolder <>7__wrap1;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private SyncedFolder <>7__wrap2;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x1DD3774", Offset = "0x1DD3774", VA = "0x1DD3774", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x1DD3AE0", Offset = "0x1DD3AE0", VA = "0x1DD3AE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200048D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x1DD3AEC", Offset = "0x1DD3AEC", VA = "0x1DD3AEC")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x1DD3AF4", Offset = "0x1DD3AF4", VA = "0x1DD3AF4")]
			internal bool <PrepareAllFolderTransfersAsync>b__0(KeyValuePair<Transfer, object> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x1DD3B5C", Offset = "0x1DD3B5C", VA = "0x1DD3B5C")]
			internal Task <PrepareAllFolderTransfersAsync>b__3(SyncedFolder x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200048E")]
		[CompilerGenerated]
		private struct <PrepareAllFolderTransfersAsync>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass53_0 <>8__1;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transfer[] <>7__wrap1;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x1DD3B80", Offset = "0x1DD3B80", VA = "0x1DD3B80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x1DD4468", Offset = "0x1DD4468", VA = "0x1DD4468", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200048F")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SyncedFolder folder;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<string> localSet;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, FileInfo> localFiles;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HashSet<string> driveSet;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, Google.Apis.Drive.v3.Data.File> driveFiles;

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x1DD4474", Offset = "0x1DD4474", VA = "0x1DD4474")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x1DD447C", Offset = "0x1DD447C", VA = "0x1DD447C")]
			internal bool <EnumerateFolderTransfersAsync>b__1(FileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1DD453C", Offset = "0x1DD453C", VA = "0x1DD453C")]
			internal bool <EnumerateFolderTransfersAsync>b__3(Google.Apis.Drive.v3.Data.File x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x1DD4600", Offset = "0x1DD4600", VA = "0x1DD4600")]
			internal bool <EnumerateFolderTransfersAsync>b__9(KeyValuePair<string, Google.Apis.Drive.v3.Data.File> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1DD46CC", Offset = "0x1DD46CC", VA = "0x1DD46CC")]
			internal bool <EnumerateFolderTransfersAsync>b__12(KeyValuePair<string, FileInfo> x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000492")]
		[CompilerGenerated]
		private struct <EnumerateFolderTransfersAsync>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SyncedFolder folder;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass54_0 <>8__1;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<string, Google.Apis.Drive.v3.Data.File> <driveFolders>5__2;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Dictionary<string, DirectoryInfo> <localFolders>5__3;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private SyncedFolder <>7__wrap3;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__2;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private HashSet<string>.Enumerator <>7__wrap4;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x1DD48F4", Offset = "0x1DD48F4", VA = "0x1DD48F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x1DD6F28", Offset = "0x1DD6F28", VA = "0x1DD6F28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000493")]
		[CompilerGenerated]
		private struct <ManageTransfersAsync>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForUpdate <updateWait>5__2;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x1DD6F34", Offset = "0x1DD6F34", VA = "0x1DD6F34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x1DD7924", Offset = "0x1DD7924", VA = "0x1DD7924", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000494")]
		[CompilerGenerated]
		private struct <UploadItemAsync>d__56 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transfer transfer;

			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SyncItem <item>5__2;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <path>5__3;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Google.Apis.Drive.v3.Data.File <metadata>5__4;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Google.Apis.Drive.v3.Data.File <>7__wrap4;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File.ContentHintsData> <>u__1;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private FileStream <stream>5__6;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x1DD7930", Offset = "0x1DD7930", VA = "0x1DD7930", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x1DD8B34", Offset = "0x1DD8B34", VA = "0x1DD8B34", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000495")]
		[CompilerGenerated]
		private struct <CreateTiltFileContentHintsAsync>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File.ContentHintsData> <>t__builder;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Google.Apis.Drive.v3.Data.File.ContentHintsData <hints>5__2;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stream <thumbStream>5__3;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] <thumbBytes>5__4;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x1DD8B40", Offset = "0x1DD8B40", VA = "0x1DD8B40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x1DD9178", Offset = "0x1DD9178", VA = "0x1DD9178", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000496")]
		[CompilerGenerated]
		private struct <DownloadItemAsync>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transfer transfer;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SyncItem <item>5__2;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <path>5__3;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <tempPath>5__4;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FileStream <stream>5__5;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x1DD91D0", Offset = "0x1DD91D0", VA = "0x1DD91D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x1DD97A8", Offset = "0x1DD97A8", VA = "0x1DD97A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000498")]
		[CompilerGenerated]
		private struct <CancelTransferAsync>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x1DD9820", Offset = "0x1DD9820", VA = "0x1DD9820", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x1DD9B84", Offset = "0x1DD9B84", VA = "0x1DD9B84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B60")]
		public const long kMinimumFreeSpace = 536870912L;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SyncedFolder> m_Folders;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SyncItemQueue m_ToTransfer;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConcurrentDictionary<Transfer, object> m_Transfers;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAndCts m_InitTask;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAndCts m_SyncTask;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAndCts m_UpdateTask;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Uninitializing;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_Initialized;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UserSyncFlag m_SyncEnabled;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UserSyncFlag[] m_SyncedFolderFlags;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DriveAccess m_DriveAccess;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private long m_TotalBytesToTransfer;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long m_PreviousTotalBytesToTransfer;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private long m_BytesTransferred;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_IsCancelling;

		[Token(Token = "0x170005A1")]
		public bool Initializing
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x18D036C", Offset = "0x18D036C", VA = "0x18D036C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A2")]
		public bool Initialized
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x18D03A8", Offset = "0x18D03A8", VA = "0x18D03A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A3")]
		public float Progress
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x18D03B0", Offset = "0x18D03B0", VA = "0x18D03B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A4")]
		public bool SyncEnabled
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x18D0560", Offset = "0x18D0560", VA = "0x18D0560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x18D0580", Offset = "0x18D0580", VA = "0x18D0580")]
			set
			{
			}
		}

		[Token(Token = "0x170005A5")]
		public bool Syncing
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x18D07F8", Offset = "0x18D07F8", VA = "0x18D07F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A6")]
		public bool DriveIsLowOnSpace
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x18D087C", Offset = "0x18D087C", VA = "0x18D087C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action SyncEnabledChanged
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x18D0234", Offset = "0x18D0234", VA = "0x18D0234")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x18D02D0", Offset = "0x18D02D0", VA = "0x18D02D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x18D08B4", Offset = "0x18D08B4", VA = "0x18D08B4")]
		public void InitUserSyncOptions()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x18D0B34", Offset = "0x18D0B34", VA = "0x18D0B34")]
		public void UninitUserSyncOptions()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x18D0B3C", Offset = "0x18D0B3C", VA = "0x18D0B3C")]
		public void ToggleSyncOnFolderOfType(SyncedFolderType type)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x18D0B94", Offset = "0x18D0B94", VA = "0x18D0B94")]
		public bool IsFolderOfTypeSynced(SyncedFolderType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x18D0BEC", Offset = "0x18D0BEC", VA = "0x18D0BEC")]
		public DriveSync(DriveAccess driveAccess, OAuth2Identity googleIdentity)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x18D0DFC", Offset = "0x18D0DFC", VA = "0x18D0DFC")]
		private void OnDriveAccessReady()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x18D06A0", Offset = "0x18D06A0", VA = "0x18D06A0")]
		[AsyncStateMachine(typeof(<InitializeDriveSyncAsync>d__47))]
		public void InitializeDriveSyncAsync()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x18D0E58", Offset = "0x18D0E58", VA = "0x18D0E58")]
		[AsyncStateMachine(typeof(<SetupSyncFoldersAsync>d__48))]
		private Task SetupSyncFoldersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x18D0730", Offset = "0x18D0730", VA = "0x18D0730")]
		[AsyncStateMachine(typeof(<UninitializeAsync>d__49))]
		public Task UninitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x18D0F34", Offset = "0x18D0F34", VA = "0x18D0F34")]
		[AsyncStateMachine(typeof(<ClearAllTransfers>d__50))]
		private Task ClearAllTransfers()
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x18D0FFC", Offset = "0x18D0FFC", VA = "0x18D0FFC")]
		[AsyncStateMachine(typeof(<SyncLocalFilesAsync>d__51))]
		public Task SyncLocalFilesAsync()
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x18D10C4", Offset = "0x18D10C4", VA = "0x18D10C4")]
		[AsyncStateMachine(typeof(<AddSyncedFolderAsync>d__52))]
		private Task AddSyncedFolderAsync(string name, string localPath, string parentId, SyncType syncType, SyncedFolderType folderType, CancellationToken token, bool recursive = false, [Optional] string[] excludeExtensions)
		{
			return null;
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x18D11F4", Offset = "0x18D11F4", VA = "0x18D11F4")]
		[AsyncStateMachine(typeof(<PrepareAllFolderTransfersAsync>d__53))]
		private Task PrepareAllFolderTransfersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x18D12D0", Offset = "0x18D12D0", VA = "0x18D12D0")]
		[AsyncStateMachine(typeof(<EnumerateFolderTransfersAsync>d__54))]
		private Task EnumerateFolderTransfersAsync(SyncedFolder folder, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x18D13BC", Offset = "0x18D13BC", VA = "0x18D13BC")]
		[AsyncStateMachine(typeof(<ManageTransfersAsync>d__55))]
		private Task ManageTransfersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x18D1494", Offset = "0x18D1494", VA = "0x18D1494")]
		[AsyncStateMachine(typeof(<UploadItemAsync>d__56))]
		private Task UploadItemAsync(Transfer transfer, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x18D1584", Offset = "0x18D1584", VA = "0x18D1584")]
		[AsyncStateMachine(typeof(<CreateTiltFileContentHintsAsync>d__57))]
		private Task<Google.Apis.Drive.v3.Data.File.ContentHintsData> CreateTiltFileContentHintsAsync(string path)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x18D1678", Offset = "0x18D1678", VA = "0x18D1678")]
		[AsyncStateMachine(typeof(<DownloadItemAsync>d__58))]
		private Task DownloadItemAsync(Transfer transfer, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x18D1758", Offset = "0x18D1758", VA = "0x18D1758")]
		[AsyncStateMachine(typeof(<CancelTransferAsync>d__59))]
		public Task CancelTransferAsync(string filename)
		{
			return null;
		}
	}
	[Token(Token = "0x200049B")]
	public class DriveSyncFlagsWatcher : MonoBehaviour
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] m_Flags;

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1DDA1C4", Offset = "0x1DDA1C4", VA = "0x1DDA1C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1DDA214", Offset = "0x1DDA214", VA = "0x1DDA214")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1DDA27C", Offset = "0x1DDA27C", VA = "0x1DDA27C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1DDA314", Offset = "0x1DDA314", VA = "0x1DDA314")]
		public DriveSyncFlagsWatcher()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class GoogleDriveSketchSet : SketchSet
	{
		[Token(Token = "0x200049D")]
		public class GoogleDriveFileInfo : SceneFileInfo
		{
			[Token(Token = "0x200049E")]
			[CompilerGenerated]
			private sealed class <LoadThumbnail>d__46 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001C31")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001C32")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001C33")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GoogleDriveFileInfo <>4__this;

				[Token(Token = "0x4001C34")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private UnityWebRequest <request>5__2;

				[Token(Token = "0x4001C35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private UnityWebRequestAsyncOperation <operation>5__3;

				[Token(Token = "0x170005C4")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001F7E")]
					[Address(RVA = "0x1DDB948", Offset = "0x1DDB948", VA = "0x1DDB948", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005C5")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001F80")]
					[Address(RVA = "0x1DDB990", Offset = "0x1DDB990", VA = "0x1DDB990", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0x1DDB748", Offset = "0x1DDB748", VA = "0x1DDB748")]
				[DebuggerHidden]
				public <LoadThumbnail>d__46(int <>1__state)
				{
				}

				[Token(Token = "0x6001F7C")]
				[Address(RVA = "0x1DDB848", Offset = "0x1DDB848", VA = "0x1DDB848", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001F7D")]
				[Address(RVA = "0x1DDB84C", Offset = "0x1DDB84C", VA = "0x1DDB84C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001F7F")]
				[Address(RVA = "0x1DDB950", Offset = "0x1DDB950", VA = "0x1DDB950", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20004A0")]
			[CompilerGenerated]
			private struct <DownloadAsync>d__48 : IAsyncStateMachine
			{
				[Token(Token = "0x4001C38")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001C39")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001C3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GoogleDriveFileInfo <>4__this;

				[Token(Token = "0x4001C3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public CancellationToken token;

				[Token(Token = "0x4001C3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private FileStream <>7__wrap1;

				[Token(Token = "0x4001C3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x6001F83")]
				[Address(RVA = "0x1DDB9D8", Offset = "0x1DDB9D8", VA = "0x1DDB9D8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001F84")]
				[Address(RVA = "0x1DDBFCC", Offset = "0x1DDBFCC", VA = "0x1DDBFCC", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001C28")]
			private const string kCachePath = "DriveCache";

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Google.Apis.Drive.v3.Data.File m_File;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Texture2D m_Thumbnail;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_AbortLoad;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string m_FileName;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TiltFile m_TiltFile;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FileStream m_DownloadStream;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string m_SourceId;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string m_Source;

			[Token(Token = "0x170005B4")]
			public Texture2D Thumbnail
			{
				[Token(Token = "0x6001F63")]
				[Address(RVA = "0x1DDB290", Offset = "0x1DDB290", VA = "0x1DDB290")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B5")]
			public FileInfoType InfoType
			{
				[Token(Token = "0x6001F64")]
				[Address(RVA = "0x1DDB298", Offset = "0x1DDB298", VA = "0x1DDB298", Slot = "4")]
				get
				{
					return default(FileInfoType);
				}
			}

			[Token(Token = "0x170005B6")]
			public string HumanName
			{
				[Token(Token = "0x6001F65")]
				[Address(RVA = "0x1DDB2A0", Offset = "0x1DDB2A0", VA = "0x1DDB2A0", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B7")]
			public bool Valid
			{
				[Token(Token = "0x6001F66")]
				[Address(RVA = "0x1DDB304", Offset = "0x1DDB304", VA = "0x1DDB304", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005B8")]
			public bool Available
			{
				[Token(Token = "0x6001F67")]
				[Address(RVA = "0x1DDB30C", Offset = "0x1DDB30C", VA = "0x1DDB30C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005B9")]
			public string FullPath
			{
				[Token(Token = "0x6001F68")]
				[Address(RVA = "0x1DDB31C", Offset = "0x1DDB31C", VA = "0x1DDB31C", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BA")]
			public bool Exists
			{
				[Token(Token = "0x6001F69")]
				[Address(RVA = "0x1DDB394", Offset = "0x1DDB394", VA = "0x1DDB394", Slot = "9")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005BB")]
			public bool ReadOnly
			{
				[Token(Token = "0x6001F6A")]
				[Address(RVA = "0x1DDB39C", Offset = "0x1DDB39C", VA = "0x1DDB39C", Slot = "10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005BC")]
			public string AssetId
			{
				[Token(Token = "0x6001F6B")]
				[Address(RVA = "0x1DDB3A4", Offset = "0x1DDB3A4", VA = "0x1DDB3A4", Slot = "11")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BD")]
			public string SourceId
			{
				[Token(Token = "0x6001F6C")]
				[Address(RVA = "0x1DDB3AC", Offset = "0x1DDB3AC", VA = "0x1DDB3AC", Slot = "12")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F6D")]
				[Address(RVA = "0x1DDB3B4", Offset = "0x1DDB3B4", VA = "0x1DDB3B4")]
				set
				{
				}
			}

			[Token(Token = "0x170005BE")]
			public int? TriangleCount
			{
				[Token(Token = "0x6001F6E")]
				[Address(RVA = "0x1DDB3BC", Offset = "0x1DDB3BC", VA = "0x1DDB3BC", Slot = "13")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BF")]
			public float Progress
			{
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0x1DDB3C4", Offset = "0x1DDB3C4", VA = "0x1DDB3C4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170005C0")]
			public DateTime LastModifiedTime
			{
				[Token(Token = "0x6001F70")]
				[Address(RVA = "0x1DDB470", Offset = "0x1DDB470", VA = "0x1DDB470")]
				get
				{
					return default(DateTime);
				}
			}

			[Token(Token = "0x170005C1")]
			public string Source
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0x1DDB4EC", Offset = "0x1DDB4EC", VA = "0x1DDB4EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C2")]
			public string Description
			{
				[Token(Token = "0x6001F72")]
				[Address(RVA = "0x1DDA994", Offset = "0x1DDA994", VA = "0x1DDA994")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C3")]
			private string CachePath
			{
				[Token(Token = "0x6001F73")]
				[Address(RVA = "0x1DDB4F4", Offset = "0x1DDB4F4", VA = "0x1DDB4F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x1DDB570", Offset = "0x1DDB570", VA = "0x1DDB570")]
			public GoogleDriveFileInfo(Google.Apis.Drive.v3.Data.File file, string source)
			{
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x1DDB6E4", Offset = "0x1DDB6E4", VA = "0x1DDB6E4", Slot = "14")]
			public void Delete()
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x1DDB724", Offset = "0x1DDB724", VA = "0x1DDB724", Slot = "15")]
			public bool IsHeaderValid()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x1DDB72C", Offset = "0x1DDB72C", VA = "0x1DDB72C", Slot = "16")]
			public Stream GetReadStream(string subfileName)
			{
				return null;
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x1DDB228", Offset = "0x1DDB228", VA = "0x1DDB228")]
			[IteratorStateMachine(typeof(<LoadThumbnail>d__46))]
			public IEnumerator LoadThumbnail()
			{
				return null;
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x1DDA6F4", Offset = "0x1DDA6F4", VA = "0x1DDA6F4")]
			public void UnloadThumbnail()
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x1DDB770", Offset = "0x1DDB770", VA = "0x1DDB770")]
			[AsyncStateMachine(typeof(<DownloadAsync>d__48))]
			public Task DownloadAsync(CancellationToken token)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A2")]
		[CompilerGenerated]
		private struct <EnumerateTiltFilesAsync>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleDriveSketchSet <>4__this;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>7__wrap1;

			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Google.Apis.Drive.v3.Data.File> <deviceFolders>5__4;

			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Task<IEnumerable<GoogleDriveFileInfo>>[] <sketchTasks>5__5;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IEnumerable<GoogleDriveFileInfo>[]> <>u__2;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private object <>u__3;

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x1DDC1CC", Offset = "0x1DDC1CC", VA = "0x1DDC1CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x1DDCCCC", Offset = "0x1DDCCCC", VA = "0x1DDCCCC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20004A3")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Google.Apis.Drive.v3.Data.File folder;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Google.Apis.Drive.v3.Data.File sketchFolder;

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x1DDCCD8", Offset = "0x1DDCCD8", VA = "0x1DDCCD8")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x1DDCCE0", Offset = "0x1DDCCE0", VA = "0x1DDCCE0")]
			internal Task<Google.Apis.Drive.v3.Data.File> <EnumerateTiltFilesForDevice>b__2()
			{
				return null;
			}

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x1DDCD64", Offset = "0x1DDCD64", VA = "0x1DDCD64")]
			internal Task<List<Google.Apis.Drive.v3.Data.File>> <EnumerateTiltFilesForDevice>b__3()
			{
				return null;
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x1DDCDBC", Offset = "0x1DDCDBC", VA = "0x1DDCDBC")]
			internal GoogleDriveFileInfo <EnumerateTiltFilesForDevice>b__1(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A4")]
		[CompilerGenerated]
		private struct <EnumerateTiltFilesForDevice>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IEnumerable<GoogleDriveFileInfo>> <>t__builder;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Google.Apis.Drive.v3.Data.File folder;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass36_0 <>8__1;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__2;

			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x1DDCE44", Offset = "0x1DDCE44", VA = "0x1DDCE44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x1DDD414", Offset = "0x1DDD414", VA = "0x1DDD414", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20004A5")]
		[CompilerGenerated]
		private sealed class <LoadThumbnailsCoroutine>d__37 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> requests;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleDriveSketchSet <>4__this;

			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator[] <loadingCoroutines>5__2;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <stillLoading>5__3;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator[] <>7__wrap3;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap4;

			[Token(Token = "0x170005C6")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001F96")]
				[Address(RVA = "0x1DDD744", Offset = "0x1DDD744", VA = "0x1DDD744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0x1DDD78C", Offset = "0x1DDD78C", VA = "0x1DDD78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x1DDB164", Offset = "0x1DDB164", VA = "0x1DDB164")]
			[DebuggerHidden]
			public <LoadThumbnailsCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x1DDD46C", Offset = "0x1DDD46C", VA = "0x1DDD46C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x1DDD470", Offset = "0x1DDD470", VA = "0x1DDD470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x1DDD74C", Offset = "0x1DDD74C", VA = "0x1DDD74C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Refreshing;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoogleDriveFileInfo[] m_Sketches;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_ThumbnailLoadingCoroutine;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_Changed;

		[Token(Token = "0x170005AF")]
		public SketchSetType Type
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x1DDA31C", Offset = "0x1DDA31C", VA = "0x1DDA31C", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170005B0")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x1DDA324", Offset = "0x1DDA324", VA = "0x1DDA324", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B1")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x1DDA334", Offset = "0x1DDA334", VA = "0x1DDA334", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B2")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x1DDA368", Offset = "0x1DDA368", VA = "0x1DDA368", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B3")]
		public int NumSketches
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x1DDA378", Offset = "0x1DDA378", VA = "0x1DDA378", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnChanged
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x1DDAD38", Offset = "0x1DDAD38", VA = "0x1DDAD38", Slot = "21")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1DDADD4", Offset = "0x1DDADD4", VA = "0x1DDADD4", Slot = "22")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x1DDAE70", Offset = "0x1DDAE70", VA = "0x1DDAE70", Slot = "23")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x1DDAF0C", Offset = "0x1DDAF0C", VA = "0x1DDAF0C", Slot = "24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1DDA390", Offset = "0x1DDA390", VA = "0x1DDA390", Slot = "9")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x1DDA5B8", Offset = "0x1DDA5B8", VA = "0x1DDA5B8", Slot = "10")]
		public bool IsSketchIndexValid(int iIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1DDA5DC", Offset = "0x1DDA5DC", VA = "0x1DDA5DC", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x1DDA7D4", Offset = "0x1DDA7D4", VA = "0x1DDA7D4", Slot = "12")]
		public bool GetSketchIcon(int i, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1DDA9B8", Offset = "0x1DDA9B8", VA = "0x1DDA9B8", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int i)
		{
			return null;
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1DDAA0C", Offset = "0x1DDAA0C", VA = "0x1DDAA0C", Slot = "14")]
		public string GetSketchName(int i)
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1DDAAC8", Offset = "0x1DDAAC8", VA = "0x1DDAAC8", Slot = "15")]
		public void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1DDAB08", Offset = "0x1DDAB08", VA = "0x1DDAB08", Slot = "16")]
		public void PrecacheSketchModels(int i)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x1DDABEC", Offset = "0x1DDABEC", VA = "0x1DDABEC", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1DDABF8", Offset = "0x1DDABF8", VA = "0x1DDABF8", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1DDAC04", Offset = "0x1DDAC04", VA = "0x1DDAC04", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1DDAC08", Offset = "0x1DDAC08", VA = "0x1DDAC08", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1DDAFA8", Offset = "0x1DDAFA8", VA = "0x1DDAFA8")]
		private void OnDriveEnabledChanged()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1DDA464", Offset = "0x1DDA464", VA = "0x1DDA464")]
		private void EnumerateTiltFilesWhenReady()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1DDAC6C", Offset = "0x1DDAC6C", VA = "0x1DDAC6C")]
		[AsyncStateMachine(typeof(<EnumerateTiltFilesAsync>d__35))]
		private Task EnumerateTiltFilesAsync()
		{
			return null;
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x1DDB068", Offset = "0x1DDB068", VA = "0x1DDB068")]
		[AsyncStateMachine(typeof(<EnumerateTiltFilesForDevice>d__36))]
		private Task<IEnumerable<GoogleDriveFileInfo>> EnumerateTiltFilesForDevice(Google.Apis.Drive.v3.Data.File folder, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1DDA760", Offset = "0x1DDA760", VA = "0x1DDA760")]
		[IteratorStateMachine(typeof(<LoadThumbnailsCoroutine>d__37))]
		private IEnumerator<Null> LoadThumbnailsCoroutine(List<int> requests)
		{
			return null;
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1DDB18C", Offset = "0x1DDB18C", VA = "0x1DDB18C")]
		public GoogleDriveSketchSet()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class GoogleUserSettings
	{
		[Token(Token = "0x20004A7")]
		public class LoadSettingsFailed : Exception
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x1DDDF28", Offset = "0x1DDDF28", VA = "0x1DDDF28")]
			public LoadSettingsFailed(string message)
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x1DDDF90", Offset = "0x1DDDF90", VA = "0x1DDDF90")]
			public LoadSettingsFailed(string message, Exception inner)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A8")]
		private class UserData
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string DriveSyncFolderId;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> DeviceDriveFolderIds;

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x1DDE000", Offset = "0x1DDE000", VA = "0x1DDE000")]
			public UserData()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A9")]
		[CompilerGenerated]
		private struct <SetDeviceFolderIdAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string folderId;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string deviceName;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x1DDE07C", Offset = "0x1DDE07C", VA = "0x1DDE07C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x1DDE2D4", Offset = "0x1DDE2D4", VA = "0x1DDE2D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004AA")]
		[CompilerGenerated]
		private struct <InitializeAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cToken;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserData> <>u__1;

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x1DDE2E0", Offset = "0x1DDE2E0", VA = "0x1DDE2E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x1DDE5CC", Offset = "0x1DDE5CC", VA = "0x1DDE5CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20004AB")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemoryStream jsonStream;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x1DDE5D8", Offset = "0x1DDE5D8", VA = "0x1DDE5D8")]
			public <>c__DisplayClass15_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004AE")]
		[CompilerGenerated]
		private struct <SerializeToDriveAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IUploadProgress> <>u__2;

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1DDE698", Offset = "0x1DDE698", VA = "0x1DDE698", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1DDEFD0", Offset = "0x1DDEFD0", VA = "0x1DDEFD0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004B1")]
		[CompilerGenerated]
		private struct <GetSettingsFileIdAsync>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1DDF114", Offset = "0x1DDF114", VA = "0x1DDF114", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1DDF5CC", Offset = "0x1DDF5CC", VA = "0x1DDF5CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004B2")]
		[CompilerGenerated]
		private struct <SetDriveSyncFolderIdAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x1DDF624", Offset = "0x1DDF624", VA = "0x1DDF624", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x1DDF7F4", Offset = "0x1DDF7F4", VA = "0x1DDF7F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20004B3")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemoryStream jsonStream;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.GetRequest downloadRequest;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x1DDF800", Offset = "0x1DDF800", VA = "0x1DDF800")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x1DDF808", Offset = "0x1DDF808", VA = "0x1DDF808")]
			internal Task<IDownloadProgress> <DeserializeFromDriveAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004B4")]
		[CompilerGenerated]
		private struct <DeserializeFromDriveAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserData> <>t__builder;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IDownloadProgress> <>u__2;

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x1DDF858", Offset = "0x1DDF858", VA = "0x1DDF858", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x1DDFF38", Offset = "0x1DDFF38", VA = "0x1DDFF38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C5F")]
		private const string sm_SettingsFileName = "Settings.json";

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UserData m_UserData;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DriveService m_DriveService;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x170005C8")]
		public string DriveSyncFolderId
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x1DDC0D4", Offset = "0x1DDC0D4", VA = "0x1DDC0D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C9")]
		public bool Initialized
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x1DD4458", Offset = "0x1DD4458", VA = "0x1DD4458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1DDD794", Offset = "0x1DDD794", VA = "0x1DDD794")]
		public GoogleUserSettings(OAuth2Identity googleIdentity)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1DDD8D0", Offset = "0x1DDD8D0", VA = "0x1DDD8D0")]
		private void GoogleLoggedOut()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1DDD904", Offset = "0x1DDD904", VA = "0x1DDD904")]
		public string GetDeviceFolderId(string deviceName)
		{
			return null;
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1DDD984", Offset = "0x1DDD984", VA = "0x1DDD984")]
		[AsyncStateMachine(typeof(<SetDeviceFolderIdAsync>d__13))]
		public Task SetDeviceFolderIdAsync(string deviceName, string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1DDDA74", Offset = "0x1DDDA74", VA = "0x1DDDA74")]
		[AsyncStateMachine(typeof(<InitializeAsync>d__14))]
		public Task InitializeAsync(CancellationToken cToken)
		{
			return null;
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1DDDB50", Offset = "0x1DDDB50", VA = "0x1DDDB50")]
		[AsyncStateMachine(typeof(<SerializeToDriveAsync>d__15))]
		private Task<bool> SerializeToDriveAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1DDDC54", Offset = "0x1DDDC54", VA = "0x1DDDC54")]
		[AsyncStateMachine(typeof(<GetSettingsFileIdAsync>d__16))]
		private Task<string> GetSettingsFileIdAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1DDDD50", Offset = "0x1DDDD50", VA = "0x1DDDD50")]
		[AsyncStateMachine(typeof(<SetDriveSyncFolderIdAsync>d__17))]
		public Task SetDriveSyncFolderIdAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1DDDE2C", Offset = "0x1DDDE2C", VA = "0x1DDDE2C")]
		[AsyncStateMachine(typeof(<DeserializeFromDriveAsync>d__18))]
		private Task<UserData> DeserializeFromDriveAsync(CancellationToken token)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B5")]
	public class HttpFileServer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B6")]
		public class HttpFileEntry
		{
			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextAsset Asset;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Path;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool Binary;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string ContentType;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] m_Bytes;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string m_Text;

			[Token(Token = "0x170005CA")]
			public byte[] Bytes
			{
				[Token(Token = "0x6001FC5")]
				[Address(RVA = "0x1DE0618", Offset = "0x1DE0618", VA = "0x1DE0618")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CB")]
			public string Text
			{
				[Token(Token = "0x6001FC6")]
				[Address(RVA = "0x1DE0620", Offset = "0x1DE0620", VA = "0x1DE0620")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x1DE00C4", Offset = "0x1DE00C4", VA = "0x1DE00C4")]
			public void Initialize()
			{
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x1DE0628", Offset = "0x1DE0628", VA = "0x1DE0628")]
			public HttpFileEntry()
			{
			}
		}

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Should start with / and is the path to serve from.")]
		[SerializeField]
		private string m_PathPrefix;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Source folder containing files to serve. Should be outside of /Assets folder.")]
		private string m_SourceFilesPath;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Destination folder inside /Assets that files are copied to.")]
		[SerializeField]
		private string m_DestinationAssetPath;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Files to serve. Use the context menu to refresh these.")]
		[SerializeField]
		private HttpFileEntry[] m_Entries;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, string> m_Substitutions;

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1DDFF90", Offset = "0x1DDFF90", VA = "0x1DDFF90")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1DE016C", Offset = "0x1DE016C", VA = "0x1DE016C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1DE01E8", Offset = "0x1DE01E8", VA = "0x1DE01E8")]
		public void AddSubstitution(string from, string to)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1DE0250", Offset = "0x1DE0250", VA = "0x1DE0250")]
		public void RemoveSubstitution(string from)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1DE02A8", Offset = "0x1DE02A8", VA = "0x1DE02A8")]
		private void ReturnFile(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1DE0610", Offset = "0x1DE0610", VA = "0x1DE0610")]
		public HttpFileServer()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class HttpServer : MonoBehaviour
	{
		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_httpListenerPort;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListener m_HttpListener;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, Action<HttpListenerContext>> m_HttpRequestHandlers;

		[Token(Token = "0x170005CC")]
		public int HttpPort
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x1DE0654", Offset = "0x1DE0654", VA = "0x1DE0654")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1DE065C", Offset = "0x1DE065C", VA = "0x1DE065C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1DE08C0", Offset = "0x1DE08C0", VA = "0x1DE08C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1DE0104", Offset = "0x1DE0104", VA = "0x1DE0104")]
		public void AddHttpHandler(string path, Action<HttpListenerContext> handler)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1DE08E4", Offset = "0x1DE08E4", VA = "0x1DE08E4")]
		public void AddHttpHandler(string path, Func<HttpListenerRequest, string> handler)
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1DE09CC", Offset = "0x1DE09CC", VA = "0x1DE09CC")]
		public void AddRawHttpHandler(string path, Func<HttpListenerContext, HttpListenerContext> handler)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1DE0190", Offset = "0x1DE0190", VA = "0x1DE0190")]
		public void RemoveHttpHandler(string path)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1DE0AB4", Offset = "0x1DE0AB4", VA = "0x1DE0AB4")]
		public bool HttpHandlerExists(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1DE0B0C", Offset = "0x1DE0B0C", VA = "0x1DE0B0C")]
		public HttpServer()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class LocalHttpCodeReceiver : ICodeReceiver
	{
		[Token(Token = "0x20004BD")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NameValueCollection result;

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x1DE1710", Offset = "0x1DE1710", VA = "0x1DE1710")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x1DE1718", Offset = "0x1DE1718", VA = "0x1DE1718")]
			internal string <ReceiveCodeAsync>b__2(string k)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004BF")]
		[CompilerGenerated]
		private struct <ReceiveCodeAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<AuthorizationCodeResponseUrl> <>t__builder;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalHttpCodeReceiver <>4__this;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken taskCancellationToken;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AuthorizationCodeRequestUrl url;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<NameValueCollection> <>u__1;

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x1DE17A8", Offset = "0x1DE17A8", VA = "0x1DE17A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x1DE1E00", Offset = "0x1DE1E00", VA = "0x1DE1E00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_LocalPath;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskCompletionSource<NameValueCollection> m_QueryString;

		[Token(Token = "0x170005CD")]
		public string RedirectUri
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x1DE1458", Offset = "0x1DE1458", VA = "0x1DE1458", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CE")]
		private string FinalRedirectPage
		{
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x1DE14E8", Offset = "0x1DE14E8", VA = "0x1DE14E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1DE154C", Offset = "0x1DE154C", VA = "0x1DE154C")]
		public LocalHttpCodeReceiver(string localPath)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1DE1574", Offset = "0x1DE1574", VA = "0x1DE1574", Slot = "5")]
		[AsyncStateMachine(typeof(<ReceiveCodeAsync>d__7))]
		public Task<AuthorizationCodeResponseUrl> ReceiveCodeAsync(AuthorizationCodeRequestUrl url, CancellationToken taskCancellationToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C0")]
	public class OAuth2CredentialRequest
	{
		[StructLayout(3)]
		[Token(Token = "0x20004C1")]
		[CompilerGenerated]
		private struct <AuthorizeAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserCredential> <>u__2;

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x1DE23DC", Offset = "0x1DE23DC", VA = "0x1DE23DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x1DE28E4", Offset = "0x1DE28E4", VA = "0x1DE28E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C2")]
		[CompilerGenerated]
		private struct <CancelAuthorizationAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<UserCredential> <>u__1;

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x1DE28F0", Offset = "0x1DE28F0", VA = "0x1DE28F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x1DE2C0C", Offset = "0x1DE2C0C", VA = "0x1DE2C0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C3")]
		[CompilerGenerated]
		private struct <Cancel>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x1DE2C18", Offset = "0x1DE2C18", VA = "0x1DE2C18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x1DE2D90", Offset = "0x1DE2D90", VA = "0x1DE2D90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C4")]
		[CompilerGenerated]
		private struct <RevokeCredential>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x1DE2D9C", Offset = "0x1DE2D9C", VA = "0x1DE2D9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x1DE30A0", Offset = "0x1DE30A0", VA = "0x1DE30A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UserCredential m_UserCredential;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskAndCts<UserCredential> m_Authorization;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Task m_Revocation;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly AuthorizationCodeInstalledApp m_AppFlow;

		[Token(Token = "0x170005CF")]
		public UserCredential UserCredential
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x1DE1E58", Offset = "0x1DE1E58", VA = "0x1DE1E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D0")]
		public bool IsAuthorizing
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x1DE1E60", Offset = "0x1DE1E60", VA = "0x1DE1E60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005D1")]
		public bool IsGoogle
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x1DE1E70", Offset = "0x1DE1E70", VA = "0x1DE1E70")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1DE1E78", Offset = "0x1DE1E78", VA = "0x1DE1E78")]
		public OAuth2CredentialRequest(ClientSecrets secrets, IEnumerable<string> scopes, string callbackPath, IDataStore dataStore)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1DE1FA8", Offset = "0x1DE1FA8", VA = "0x1DE1FA8")]
		public OAuth2CredentialRequest(ClientSecrets secrets, IEnumerable<string> scopes, string callbackPath, IDataStore dataStore, string authorizationServerUrl, string tokenServerUrl)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1DE20EC", Offset = "0x1DE20EC", VA = "0x1DE20EC")]
		[AsyncStateMachine(typeof(<AuthorizeAsync>d__13))]
		public Task AuthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1DE21B8", Offset = "0x1DE21B8", VA = "0x1DE21B8")]
		[AsyncStateMachine(typeof(<CancelAuthorizationAsync>d__14))]
		private Task CancelAuthorizationAsync()
		{
			return null;
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1DE2280", Offset = "0x1DE2280", VA = "0x1DE2280")]
		[AsyncStateMachine(typeof(<Cancel>d__15))]
		public Task Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1DE2348", Offset = "0x1DE2348", VA = "0x1DE2348")]
		[AsyncStateMachine(typeof(<RevokeCredential>d__16))]
		public void RevokeCredential()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class OAuth2Identity : MonoBehaviour
	{
		[Token(Token = "0x20004C6")]
		public class UserInfo
		{
			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string email;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D icon;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isGoogle;

			[Token(Token = "0x6002014")]
			[Address(RVA = "0x1DE3EF8", Offset = "0x1DE3EF8", VA = "0x1DE3EF8")]
			public UserInfo()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		public class UserInfoError : Exception
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x1DE3F00", Offset = "0x1DE3F00", VA = "0x1DE3F00")]
			public UserInfoError(string message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C8")]
		[CompilerGenerated]
		private struct <GetAccessToken>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6002016")]
			[Address(RVA = "0x1DE3F68", Offset = "0x1DE3F68", VA = "0x1DE3F68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x1DE416C", Offset = "0x1DE416C", VA = "0x1DE416C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C9")]
		[CompilerGenerated]
		private struct <InitializeAsync>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <forTesting>5__2;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x1DE41C4", Offset = "0x1DE41C4", VA = "0x1DE41C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002019")]
			[Address(RVA = "0x1DE47E4", Offset = "0x1DE47E4", VA = "0x1DE47E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CA")]
		[CompilerGenerated]
		private struct <AuthorizeAsync>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x1DE47F0", Offset = "0x1DE47F0", VA = "0x1DE47F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0x1DE4A38", Offset = "0x1DE4A38", VA = "0x1DE4A38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CB")]
		[CompilerGenerated]
		private struct <ReauthorizeAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600201C")]
			[Address(RVA = "0x1DE4A44", Offset = "0x1DE4A44", VA = "0x1DE4A44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x1DE4BF8", Offset = "0x1DE4BF8", VA = "0x1DE4BF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CC")]
		[CompilerGenerated]
		private struct <LoginAsync>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600201E")]
			[Address(RVA = "0x1DE4C04", Offset = "0x1DE4C04", VA = "0x1DE4C04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x1DE4F34", Offset = "0x1DE4F34", VA = "0x1DE4F34", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CD")]
		[CompilerGenerated]
		private struct <Authenticate>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest www;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6002020")]
			[Address(RVA = "0x1DE4F40", Offset = "0x1DE4F40", VA = "0x1DE4F40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002021")]
			[Address(RVA = "0x1DE5174", Offset = "0x1DE5174", VA = "0x1DE5174", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CE")]
		[CompilerGenerated]
		private struct <GetUserInfoAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forTesting;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserInfo> <>u__1;

			[Token(Token = "0x6002022")]
			[Address(RVA = "0x1DE5180", Offset = "0x1DE5180", VA = "0x1DE5180", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002023")]
			[Address(RVA = "0x1DE5494", Offset = "0x1DE5494", VA = "0x1DE5494", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004D0")]
		[CompilerGenerated]
		private struct <GetUserInfoSketchfabAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserInfo> <>t__builder;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchfabService.MeDetail <ret>5__2;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<SketchfabService.MeDetail> <>u__1;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UserInfo <>7__wrap2;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UserInfo <>7__wrap3;

			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<Texture2D> <>u__2;

			[Token(Token = "0x6002028")]
			[Address(RVA = "0x1DE5590", Offset = "0x1DE5590", VA = "0x1DE5590", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x1DE5A74", Offset = "0x1DE5A74", VA = "0x1DE5A74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004D1")]
		[CompilerGenerated]
		private struct <GetUserInfoGoogleAsync>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserInfo> <>t__builder;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forTesting;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UserInfo <user>5__2;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Person> <>u__1;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UserInfo <>7__wrap2;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<Texture2D> <>u__2;

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x1DE5ACC", Offset = "0x1DE5ACC", VA = "0x1DE5ACC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0x1DE6344", Offset = "0x1DE6344", VA = "0x1DE6344", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SecretsConfig.Service m_Service;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_OAuthScopes;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] m_AdditionalDesktopOAuthScopes;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_CallbackPath;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D m_LoggedInTexture;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_TokenStorePrefix;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Server URLs should be blank if using Google authorization")]
		[SerializeField]
		private string m_AuthorizationServerUrl;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_TokenServerUrl;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UserInfo m_User;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerPrefsDataStore m_TokenDataStore;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OAuth2CredentialRequest m_CredentialRequest;

		[Token(Token = "0x170005D2")]
		public bool IsGoogle
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x1DE34C8", Offset = "0x1DE34C8", VA = "0x1DE34C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005D3")]
		public UserCredential UserCredential
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0x1DDE5B4", Offset = "0x1DDE5B4", VA = "0x1DDE5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D4")]
		private SecretsConfig.ServiceAuthData ServiceAuthData
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x1DE34D8", Offset = "0x1DE34D8", VA = "0x1DE34D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D5")]
		public string ClientId
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x1DE353C", Offset = "0x1DE353C", VA = "0x1DE353C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D6")]
		private string ClientSecret
		{
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x1DE3554", Offset = "0x1DE3554", VA = "0x1DE3554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D7")]
		public UserInfo Profile
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0x1DE356C", Offset = "0x1DE356C", VA = "0x1DE356C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x1DE3574", Offset = "0x1DE3574", VA = "0x1DE3574")]
			set
			{
			}
		}

		[Token(Token = "0x170005D8")]
		public bool LoggedIn
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x1DD1860", Offset = "0x1DD1860", VA = "0x1DD1860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005D9")]
		public bool HasAccessToken
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x1DE35F4", Offset = "0x1DE35F4", VA = "0x1DE35F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000031")]
		public static event Action<OAuth2Identity> ProfileUpdated
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x1DE30AC", Offset = "0x1DE30AC", VA = "0x1DE30AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x1DE3178", Offset = "0x1DE3178", VA = "0x1DE3178")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnSuccessfulAuthorization
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x1DE3244", Offset = "0x1DE3244", VA = "0x1DE3244")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x1DE32E0", Offset = "0x1DE32E0", VA = "0x1DE32E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action OnLogout
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x1DDD834", Offset = "0x1DDD834", VA = "0x1DDD834")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x1DE337C", Offset = "0x1DE337C", VA = "0x1DE337C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1DE3418", Offset = "0x1DE3418", VA = "0x1DE3418")]
		public static string SetImageUrlOptions(string originalUrl)
		{
			return null;
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1DE3630", Offset = "0x1DE3630", VA = "0x1DE3630")]
		[AsyncStateMachine(typeof(<GetAccessToken>d__40))]
		public Task<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1DE3720", Offset = "0x1DE3720", VA = "0x1DE3720")]
		private void Awake()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1DE3734", Offset = "0x1DE3734", VA = "0x1DE3734")]
		[AsyncStateMachine(typeof(<InitializeAsync>d__42))]
		public Task InitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1DE3800", Offset = "0x1DE3800", VA = "0x1DE3800")]
		[AsyncStateMachine(typeof(<AuthorizeAsync>d__43))]
		public Task AuthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1DE38C8", Offset = "0x1DE38C8", VA = "0x1DE38C8")]
		[AsyncStateMachine(typeof(<ReauthorizeAsync>d__44))]
		public Task ReauthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1DE3990", Offset = "0x1DE3990", VA = "0x1DE3990")]
		[AsyncStateMachine(typeof(<LoginAsync>d__45))]
		public void LoginAsync()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1DE3A24", Offset = "0x1DE3A24", VA = "0x1DE3A24")]
		public void Logout()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1DE3B48", Offset = "0x1DE3B48", VA = "0x1DE3B48")]
		[AsyncStateMachine(typeof(<Authenticate>d__47))]
		public Task Authenticate(UnityWebRequest www)
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1DE3C24", Offset = "0x1DE3C24", VA = "0x1DE3C24")]
		[AsyncStateMachine(typeof(<GetUserInfoAsync>d__48))]
		private Task GetUserInfoAsync(bool onStartup = false, bool forTesting = false)
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1DE3D00", Offset = "0x1DE3D00", VA = "0x1DE3D00")]
		[AsyncStateMachine(typeof(<GetUserInfoSketchfabAsync>d__49))]
		private Task<UserInfo> GetUserInfoSketchfabAsync(bool forTesting)
		{
			return null;
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1DE3DF4", Offset = "0x1DE3DF4", VA = "0x1DE3DF4")]
		[AsyncStateMachine(typeof(<GetUserInfoGoogleAsync>d__50))]
		private Task<UserInfo> GetUserInfoGoogleAsync(bool forTesting)
		{
			return null;
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1DE3EF0", Offset = "0x1DE3EF0", VA = "0x1DE3EF0")]
		public OAuth2Identity()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class PlayerPrefsDataStore : IDataStore
	{
		[StructLayout(3)]
		[Token(Token = "0x20004D7")]
		[CompilerGenerated]
		private struct <DeferAction>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x600203E")]
			[Address(RVA = "0xCB5D10", Offset = "0xCB5D10", VA = "0xCB5D10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0xCB6050", Offset = "0xCB6050", VA = "0xCB6050", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Prefix;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, string> m_Data;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConcurrentQueue<Action> m_UpdateActions;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_KeysKey;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xCB55B8", Offset = "0xCB55B8", VA = "0xCB55B8")]
		public PlayerPrefsDataStore(string prefix)
		{
		}

		[Token(Token = "0x600202D")]
		public Task StoreAsync<T>(string key, T value)
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		public Task DeleteAsync<T>(string key)
		{
			return null;
		}

		[Token(Token = "0x600202F")]
		public Task<T> GetAsync<T>(string key)
		{
			return null;
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xCB5868", Offset = "0xCB5868", VA = "0xCB5868", Slot = "7")]
		public Task ClearAsync()
		{
			return null;
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xCB5A90", Offset = "0xCB5A90", VA = "0xCB5A90")]
		public TokenResponse UserTokens()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xCB580C", Offset = "0xCB580C", VA = "0xCB580C")]
		private string CreateKeyName(string key)
		{
			return null;
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xCB59F4", Offset = "0xCB59F4", VA = "0xCB59F4")]
		[AsyncStateMachine(typeof(<DeferAction>d__11))]
		private void DeferAction(Action action)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xCB5B1C", Offset = "0xCB5B1C", VA = "0xCB5B1C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class PolySketchSet : SketchSet
	{
		[Token(Token = "0x20004D9")]
		private class PolySketch : Sketch
		{
			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_DownloadIndex;

			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PolySceneFileInfo m_FileInfo;

			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Texture2D m_Icon;

			[Token(Token = "0x170005E0")]
			public SceneFileInfo SceneFileInfo
			{
				[Token(Token = "0x6002067")]
				[Address(RVA = "0xCB7F34", Offset = "0xCB7F34", VA = "0xCB7F34", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E1")]
			public string[] Authors
			{
				[Token(Token = "0x6002068")]
				[Address(RVA = "0xCB6760", Offset = "0xCB6760", VA = "0xCB6760", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E2")]
			public Texture2D Icon
			{
				[Token(Token = "0x6002069")]
				[Address(RVA = "0xCB7F3C", Offset = "0xCB7F3C", VA = "0xCB7F3C", Slot = "6")]
				get
				{
					return null;
				}
				[Token(Token = "0x600206A")]
				[Address(RVA = "0xCB7F44", Offset = "0xCB7F44", VA = "0xCB7F44")]
				set
				{
				}
			}

			[Token(Token = "0x170005E3")]
			public bool IconAndMetadataValid
			{
				[Token(Token = "0x600206B")]
				[Address(RVA = "0xCB7F4C", Offset = "0xCB7F4C", VA = "0xCB7F4C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005E4")]
			public PolySceneFileInfo PolySceneFileInfo
			{
				[Token(Token = "0x600206E")]
				[Address(RVA = "0xCB7FD4", Offset = "0xCB7FD4", VA = "0xCB7FD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xCB7FAC", Offset = "0xCB7FAC", VA = "0xCB7FAC")]
			public PolySketch(PolySceneFileInfo info)
			{
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0xCB6598", Offset = "0xCB6598", VA = "0xCB6598")]
			public void UnloadIcon()
			{
			}
		}

		[Token(Token = "0x20004DB")]
		[CompilerGenerated]
		private sealed class <PeriodicRefreshCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002077")]
				[Address(RVA = "0xCB81CC", Offset = "0xCB81CC", VA = "0xCB81CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002079")]
				[Address(RVA = "0xCB8214", Offset = "0xCB8214", VA = "0xCB8214", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0xCB6F7C", Offset = "0xCB6F7C", VA = "0xCB6F7C")]
			[DebuggerHidden]
			public <PeriodicRefreshCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0xCB8098", Offset = "0xCB8098", VA = "0xCB8098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0xCB809C", Offset = "0xCB809C", VA = "0xCB809C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0xCB81D4", Offset = "0xCB81D4", VA = "0xCB81D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		[CompilerGenerated]
		private sealed class <Refresh>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x170005E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207D")]
				[Address(RVA = "0xCB84B0", Offset = "0xCB84B0", VA = "0xCB84B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207F")]
				[Address(RVA = "0xCB84F8", Offset = "0xCB84F8", VA = "0xCB84F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0xCB700C", Offset = "0xCB700C", VA = "0xCB700C")]
			[DebuggerHidden]
			public <Refresh>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0xCB821C", Offset = "0xCB821C", VA = "0xCB821C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207C")]
			[Address(RVA = "0xCB8220", Offset = "0xCB8220", VA = "0xCB8220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0xCB84B8", Offset = "0xCB84B8", VA = "0xCB84B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, PolySketch> assetIds;

			[Token(Token = "0x6002080")]
			[Address(RVA = "0xCB8500", Offset = "0xCB8500", VA = "0xCB8500")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0xCB8508", Offset = "0xCB8508", VA = "0xCB8508")]
			internal bool <PopulateSketchesCoroutine>b__0(PolySceneFileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002082")]
			[Address(RVA = "0xCB8534", Offset = "0xCB8534", VA = "0xCB8534")]
			internal bool <PopulateSketchesCoroutine>b__1(PolySketch s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004DE")]
		[CompilerGenerated]
		private sealed class <PopulateSketchesCoroutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass55_0 <>8__1;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<PolySketch> <sketches>5__2;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <fromEmpty>5__3;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <loadSketchCount>5__4;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AssetLister <lister>5__5;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<PolySceneFileInfo> <infos>5__6;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <changed>5__7;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <pagesFetched>5__8;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<object> <cr>5__9;

			[Token(Token = "0x170005E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002087")]
				[Address(RVA = "0xCB9EA8", Offset = "0xCB9EA8", VA = "0xCB9EA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002089")]
				[Address(RVA = "0xCB9EF0", Offset = "0xCB9EF0", VA = "0xCB9EF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0xCB709C", Offset = "0xCB709C", VA = "0xCB709C")]
			[DebuggerHidden]
			public <PopulateSketchesCoroutine>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6002084")]
			[Address(RVA = "0xCB85A4", Offset = "0xCB85A4", VA = "0xCB85A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0xCB85C0", Offset = "0xCB85C0", VA = "0xCB85C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0xCB9D78", Offset = "0xCB9D78", VA = "0xCB9D78")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0xCB9EB0", Offset = "0xCB9EB0", VA = "0xCB9EB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004DF")]
		[CompilerGenerated]
		private struct <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool notifyOnError;
		}

		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private sealed class <DownloadFilesCoroutine>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<PolySketch> sketches;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass57_0 <>8__1;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] <downloadBuffer>5__2;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<PolySketch>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private PolySceneFileInfo <sceneFileInfo>5__4;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityWebRequest <www>5__5;

			[Token(Token = "0x170005EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002091")]
				[Address(RVA = "0xCBAB44", Offset = "0xCBAB44", VA = "0xCBAB44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002093")]
				[Address(RVA = "0xCBAB8C", Offset = "0xCBAB8C", VA = "0xCBAB8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0xCB7228", Offset = "0xCB7228", VA = "0xCB7228")]
			[DebuggerHidden]
			public <DownloadFilesCoroutine>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0xCB9EF8", Offset = "0xCB9EF8", VA = "0xCB9EF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0xCBA00C", Offset = "0xCBA00C", VA = "0xCBA00C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208D")]
			[Address(RVA = "0xCBA97C", Offset = "0xCBA97C", VA = "0xCBA97C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600208E")]
			[Address(RVA = "0xCBA8CC", Offset = "0xCBA8CC", VA = "0xCBA8CC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0xCBAAF4", Offset = "0xCBAAF4", VA = "0xCBAAF4")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6002090")]
			[Address(RVA = "0xCBAA44", Offset = "0xCBAA44", VA = "0xCBAA44")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x6002092")]
			[Address(RVA = "0xCBAB4C", Offset = "0xCBAB4C", VA = "0xCBAB4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[CompilerGenerated]
		private sealed class <DeleteOldSketchesCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Future<bool> <task>5__2;

			[Token(Token = "0x170005ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002097")]
				[Address(RVA = "0xCBACF8", Offset = "0xCBACF8", VA = "0xCBACF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002099")]
				[Address(RVA = "0xCBAD40", Offset = "0xCBAD40", VA = "0xCBAD40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002094")]
			[Address(RVA = "0xCB72B8", Offset = "0xCB72B8", VA = "0xCB72B8")]
			[DebuggerHidden]
			public <DeleteOldSketchesCoroutine>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0xCBAB94", Offset = "0xCBAB94", VA = "0xCBAB94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0xCBAB98", Offset = "0xCBAB98", VA = "0xCBAB98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0xCBAD00", Offset = "0xCBAD00", VA = "0xCBAD00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E2")]
		[CompilerGenerated]
		private sealed class <TextureLoaderCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<int>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600209E")]
				[Address(RVA = "0xCBB0D0", Offset = "0xCBB0D0", VA = "0xCBB0D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020A0")]
				[Address(RVA = "0xCBB118", Offset = "0xCBB118", VA = "0xCBB118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0xCB72E0", Offset = "0xCB72E0", VA = "0xCB72E0")]
			[DebuggerHidden]
			public <TextureLoaderCoroutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0xCBAD48", Offset = "0xCBAD48", VA = "0xCBAD48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0xCBAD64", Offset = "0xCBAD64", VA = "0xCBAD64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600209D")]
			[Address(RVA = "0xCBB080", Offset = "0xCBB080", VA = "0xCBB080")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0xCBB0D8", Offset = "0xCBB0D8", VA = "0xCBB0D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D23")]
		private const int kDownloadBufferSize = 1048576;

		[Token(Token = "0x4001D24")]
		private const string kIntroSketchAssetId = "agqmaia62KE";

		[Token(Token = "0x4001D25")]
		private const int kIntroSketchIndex = 1;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<PolySketch> m_Sketches;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, PolySketch> m_AssetIds;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_TotalCount;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VrAssetService m_AssetService;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour m_Parent;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Ready;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_RefreshRequested;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_NeedsLogin;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private bool m_LoggedIn;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_ActivelyRefreshingSketches;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_MaximumSceneTriangles;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private SketchSetType m_Type;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_CacheDir;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_RefreshCoroutine;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_CooldownTimer;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<int> m_RequestedIcons;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_TextureLoaderCoroutine;

		[Token(Token = "0x170005DA")]
		public SketchSetType Type
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xCB605C", Offset = "0xCB605C", VA = "0xCB605C", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170005DB")]
		public VrAssetService VrAssetService
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xCB6064", Offset = "0xCB6064", VA = "0xCB6064")]
			set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xCB6348", Offset = "0xCB6348", VA = "0xCB6348", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005DD")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6002045")]
			[Address(RVA = "0xCB6350", Offset = "0xCB6350", VA = "0xCB6350", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xCB6358", Offset = "0xCB6358", VA = "0xCB6358")]
			private set
			{
			}
		}

		[Token(Token = "0x170005DE")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xCB6384", Offset = "0xCB6384", VA = "0xCB6384", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005DF")]
		public int NumSketches
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xCB638C", Offset = "0xCB638C", VA = "0xCB638C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000034")]
		public event Action OnChanged
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0xCB6D0C", Offset = "0xCB6D0C", VA = "0xCB6D0C", Slot = "21")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002055")]
			[Address(RVA = "0xCB6DA8", Offset = "0xCB6DA8", VA = "0xCB6DA8", Slot = "22")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0xCB6E44", Offset = "0xCB6E44", VA = "0xCB6E44", Slot = "23")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002057")]
			[Address(RVA = "0xCB6EE0", Offset = "0xCB6EE0", VA = "0xCB6EE0", Slot = "24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xCB606C", Offset = "0xCB606C", VA = "0xCB606C")]
		public PolySketchSet(MonoBehaviour parent, SketchSetType type, int maxSceneTriangles, bool needsLogin = false)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xCB62CC", Offset = "0xCB62CC", VA = "0xCB62CC", Slot = "9")]
		public void Init()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xCB6394", Offset = "0xCB6394", VA = "0xCB6394", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xCB6398", Offset = "0xCB6398", VA = "0xCB6398", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xCB639C", Offset = "0xCB639C", VA = "0xCB639C", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xCB63A8", Offset = "0xCB63A8", VA = "0xCB63A8", Slot = "10")]
		public bool IsSketchIndexValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xCB63C4", Offset = "0xCB63C4", VA = "0xCB63C4", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xCB6664", Offset = "0xCB6664", VA = "0xCB6664", Slot = "12")]
		public bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xCB681C", Offset = "0xCB681C", VA = "0xCB681C", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int i)
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xCB68A0", Offset = "0xCB68A0", VA = "0xCB68A0", Slot = "14")]
		public string GetSketchName(int i)
		{
			return null;
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xCB699C", Offset = "0xCB699C", VA = "0xCB699C", Slot = "16")]
		public void PrecacheSketchModels(int i)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xCB6A9C", Offset = "0xCB6A9C", VA = "0xCB6A9C", Slot = "15")]
		public void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xCB6ADC", Offset = "0xCB6ADC", VA = "0xCB6ADC", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xCB6CA4", Offset = "0xCB6CA4", VA = "0xCB6CA4")]
		[IteratorStateMachine(typeof(<PeriodicRefreshCoroutine>d__53))]
		private IEnumerator PeriodicRefreshCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xCB6FA4", Offset = "0xCB6FA4", VA = "0xCB6FA4")]
		[IteratorStateMachine(typeof(<Refresh>d__54))]
		private IEnumerator Refresh()
		{
			return null;
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xCB7034", Offset = "0xCB7034", VA = "0xCB7034")]
		[IteratorStateMachine(typeof(<PopulateSketchesCoroutine>d__55))]
		private IEnumerator PopulateSketchesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xCB70C4", Offset = "0xCB70C4", VA = "0xCB70C4")]
		private void RemoveFailedDownloads(List<PolySketch> sketches)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xCB71C0", Offset = "0xCB71C0", VA = "0xCB71C0")]
		[IteratorStateMachine(typeof(<DownloadFilesCoroutine>d__57))]
		private IEnumerator DownloadFilesCoroutine(List<PolySketch> sketches)
		{
			return null;
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xCB7250", Offset = "0xCB7250", VA = "0xCB7250")]
		[IteratorStateMachine(typeof(<DeleteOldSketchesCoroutine>d__58))]
		private IEnumerator DeleteOldSketchesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xCB65FC", Offset = "0xCB65FC", VA = "0xCB65FC")]
		[IteratorStateMachine(typeof(<TextureLoaderCoroutine>d__59))]
		private IEnumerator TextureLoaderCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xCB7308", Offset = "0xCB7308", VA = "0xCB7308")]
		private static string CacheDir(SketchSetType type)
		{
			return null;
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xCB7450", Offset = "0xCB7450", VA = "0xCB7450")]
		private static int CompareSketchesByTriangleCountAndDownloadIndex(PolySketch a, PolySketch b)
		{
			return default(int);
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xCB74AC", Offset = "0xCB74AC", VA = "0xCB74AC")]
		private static int CloudSketchComplexityBucket(PolySketch s)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004E3")]
	public class PolySceneFileInfo : SceneFileInfo
	{
		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_AssetId;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_HumanName;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_License;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_localTiltFile;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_localIcon;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_TiltFileUrl;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_IconUrl;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_GltfTriangleCount;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TiltFile m_DownloadedFile;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_IconDownloaded;

		[Token(Token = "0x170005F1")]
		public FileInfoType InfoType
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xCBB190", Offset = "0xCBB190", VA = "0xCBB190", Slot = "4")]
			get
			{
				return default(FileInfoType);
			}
		}

		[Token(Token = "0x170005F2")]
		public string HumanName
		{
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0xCBB198", Offset = "0xCBB198", VA = "0xCBB198", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F3")]
		public string Author
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0xCBB1A0", Offset = "0xCBB1A0", VA = "0xCBB1A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0xCBB1A8", Offset = "0xCBB1A8", VA = "0xCBB1A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public bool Valid
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0xCBB1B0", Offset = "0xCBB1B0", VA = "0xCBB1B0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F5")]
		public bool Available
		{
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0xCBB1B8", Offset = "0xCBB1B8", VA = "0xCBB1B8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F6")]
		public string FullPath
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xCBB1C8", Offset = "0xCBB1C8", VA = "0xCBB1C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F7")]
		public bool Exists
		{
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0xCBB1D0", Offset = "0xCBB1D0", VA = "0xCBB1D0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F8")]
		public bool ReadOnly
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0xCBB1D8", Offset = "0xCBB1D8", VA = "0xCBB1D8", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F9")]
		public string SourceId
		{
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0xCBB1E0", Offset = "0xCBB1E0", VA = "0xCBB1E0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FA")]
		public string AssetId
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0xCBB230", Offset = "0xCBB230", VA = "0xCBB230", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FB")]
		public string TiltFileUrl
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0xCBB238", Offset = "0xCBB238", VA = "0xCBB238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FC")]
		public string IconUrl
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0xCBB240", Offset = "0xCBB240", VA = "0xCBB240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FD")]
		public string License
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0xCBB248", Offset = "0xCBB248", VA = "0xCBB248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		public string TiltPath
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0xCBB250", Offset = "0xCBB250", VA = "0xCBB250")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0xCBB258", Offset = "0xCBB258", VA = "0xCBB258")]
			set
			{
			}
		}

		[Token(Token = "0x170005FF")]
		public string IconPath
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0xCBB260", Offset = "0xCBB260", VA = "0xCBB260")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0xCBB268", Offset = "0xCBB268", VA = "0xCBB268")]
			set
			{
			}
		}

		[Token(Token = "0x17000600")]
		public bool IconDownloaded
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xCBB270", Offset = "0xCBB270", VA = "0xCBB270")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xCBB278", Offset = "0xCBB278", VA = "0xCBB278")]
			set
			{
			}
		}

		[Token(Token = "0x17000601")]
		public bool TiltDownloaded
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0xCB8088", Offset = "0xCB8088", VA = "0xCB8088")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0xCBA9CC", Offset = "0xCBA9CC", VA = "0xCBA9CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000602")]
		public int? TriangleCount
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xCBB284", Offset = "0xCBB284", VA = "0xCBB284", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000603")]
		public int GltfTriangleCount
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xCBB300", Offset = "0xCBB300", VA = "0xCBB300")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xCB96E0", Offset = "0xCB96E0", VA = "0xCB96E0")]
		public PolySceneFileInfo(JToken json)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xCBB120", Offset = "0xCBB120", VA = "0xCBB120", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xCBB1E8", Offset = "0xCBB1E8", VA = "0xCBB1E8", Slot = "14")]
		public void Delete()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xCBB228", Offset = "0xCBB228", VA = "0xCBB228", Slot = "15")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xCBB2E4", Offset = "0xCBB2E4", VA = "0xCBB2E4", Slot = "16")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E5")]
	internal class ProfileButton : OptionButton
	{
		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Texture2D m_AnonymousTexture;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string m_LoggedInText;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private string m_LogInText;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private OAuth2Identity m_Identity;

		[Token(Token = "0x4001D77")]
		private const string kIconSizeSuffix = "?sz=128";

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xCBB48C", Offset = "0xCBB48C", VA = "0xCBB48C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xCBB680", Offset = "0xCBB680", VA = "0xCBB680", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xCBB75C", Offset = "0xCBB75C", VA = "0xCBB75C", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xCBB52C", Offset = "0xCBB52C", VA = "0xCBB52C")]
		private void RefreshButtons()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xCBB7E8", Offset = "0xCBB7E8", VA = "0xCBB7E8")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xCBB7EC", Offset = "0xCBB7EC", VA = "0xCBB7EC", Slot = "38")]
		public override void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xCBB8DC", Offset = "0xCBB8DC", VA = "0xCBB8DC", Slot = "25")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xCBB9C4", Offset = "0xCBB9C4", VA = "0xCBB9C4")]
		public ProfileButton()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class ReplaceTiltBrushAppName : MonoBehaviour
	{
		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xCBB9CC", Offset = "0xCBB9CC", VA = "0xCBB9CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xCBBA6C", Offset = "0xCBBA6C", VA = "0xCBBA6C")]
		public ReplaceTiltBrushAppName()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	internal class SketchfabService
	{
		[Token(Token = "0x20004E8")]
		public interface Paginated
		{
			[Token(Token = "0x17000604")]
			string NextUri
			{
				[Token(Token = "0x60020D3")]
				get;
			}

			[Token(Token = "0x17000605")]
			string PreviousUri
			{
				[Token(Token = "0x60020D4")]
				get;
			}
		}

		[Serializable]
		[Token(Token = "0x20004E9")]
		[UsedImplicitly]
		public class AvatarRelated
		{
			[Serializable]
			[Token(Token = "0x20004EA")]
			[UsedImplicitly]
			public class inline_model
			{
				[Token(Token = "0x4001D7D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x4001D7E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int width;

				[Token(Token = "0x4001D7F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int height;

				[Token(Token = "0x4001D80")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int size;

				[Token(Token = "0x60020D6")]
				[Address(RVA = "0xCBC168", Offset = "0xCBC168", VA = "0xCBC168")]
				public inline_model()
				{
				}
			}

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model[] images;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uri;

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xCBC160", Offset = "0xCBC160", VA = "0xCBC160")]
			public AvatarRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		[UsedImplicitly]
		public class TagRelated
		{
			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string slug;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uri;

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xCBC170", Offset = "0xCBC170", VA = "0xCBC170")]
			public TagRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EC")]
		[UsedImplicitly]
		public class ThumbnailsRelated
		{
			[Serializable]
			[Token(Token = "0x20004ED")]
			[UsedImplicitly]
			public class inline_model_2
			{
				[Token(Token = "0x4001D84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x4001D85")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int width;

				[Token(Token = "0x4001D86")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int size;

				[Token(Token = "0x4001D87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string uid;

				[Token(Token = "0x4001D88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int height;

				[Token(Token = "0x60020D9")]
				[Address(RVA = "0xCBC180", Offset = "0xCBC180", VA = "0xCBC180")]
				public inline_model_2()
				{
				}
			}

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model_2[] images;

			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xCBC178", Offset = "0xCBC178", VA = "0xCBC178")]
			public ThumbnailsRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EE")]
		[UsedImplicitly]
		public class UserRelated
		{
			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string profileUrl;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string account;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string displayName;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string uid;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AvatarRelated[] avatars;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string uri;

			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xCBC188", Offset = "0xCBC188", VA = "0xCBC188")]
			public UserRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EF")]
		[UsedImplicitly]
		public class Options
		{
			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, string> background;

			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xCBC190", Offset = "0xCBC190", VA = "0xCBC190")]
			public void SetBackgroundColor(Color color)
			{
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xCBC2A4", Offset = "0xCBC2A4", VA = "0xCBC2A4")]
			public Options()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F0")]
		[UsedImplicitly]
		public class MeDetail
		{
			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string uid;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string modelsUrl;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int modelCount;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string email;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string website;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string account;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string displayName;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string profileUrl;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string uri;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string username;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AvatarRelated avatar;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool isLimited;

			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xCBC2AC", Offset = "0xCBC2AC", VA = "0xCBC2AC")]
			public MeDetail()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F1")]
		[UsedImplicitly]
		public class ModelDetail
		{
			[Serializable]
			[Token(Token = "0x20004F2")]
			[UsedImplicitly]
			public class File
			{
				[Token(Token = "0x4001DB0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int wireframeSize;

				[Token(Token = "0x4001DB1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int flag;

				[Token(Token = "0x4001DB2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string version;

				[Token(Token = "0x4001DB3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int modelSize;

				[Token(Token = "0x4001DB4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string uri;

				[Token(Token = "0x4001DB5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public int osgjsSize;

				[Token(Token = "0x4001DB6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public JObject metadata;

				[Token(Token = "0x60020DF")]
				[Address(RVA = "0xCBC2BC", Offset = "0xCBC2BC", VA = "0xCBC2BC")]
				public File()
				{
				}
			}

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JObject status;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public File[] files;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TagRelated[] tags;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string viewerUrl;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string publishedAt;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int likeCount;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int commentCount;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int vertexCount;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UserRelated user;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isDownloadable;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string description;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string name;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public JObject license;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string editorUrl;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string uri;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int faceCount;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public ThumbnailsRelated thumbnails;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public JObject options;

			[Token(Token = "0x60020DE")]
			[Address(RVA = "0xCBC2B4", Offset = "0xCBC2B4", VA = "0xCBC2B4")]
			public ModelDetail()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F3")]
		[UsedImplicitly]
		public class ModelDownload
		{
			[Serializable]
			[Token(Token = "0x20004F4")]
			[UsedImplicitly]
			public class inline_model_1
			{
				[Token(Token = "0x4001DB8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x4001DB9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int expires;

				[Token(Token = "0x60020E1")]
				[Address(RVA = "0xCBC2CC", Offset = "0xCBC2CC", VA = "0xCBC2CC")]
				public inline_model_1()
				{
				}
			}

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model_1 gltf;

			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xCBC2C4", Offset = "0xCBC2C4", VA = "0xCBC2C4")]
			public ModelDownload()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F5")]
		[UsedImplicitly]
		public class ModelLikesResponse : Paginated
		{
			[Serializable]
			[Token(Token = "0x20004F6")]
			[UsedImplicitly]
			public class ModelLikesList
			{
				[Token(Token = "0x4001DBD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string uid;

				[Token(Token = "0x4001DBE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string viewerUrl;

				[Token(Token = "0x4001DBF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public bool isProtected;

				[Token(Token = "0x4001DC0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int vertexCount;

				[Token(Token = "0x4001DC1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public UserRelated user;

				[Token(Token = "0x4001DC2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public bool isDownloadable;

				[Token(Token = "0x4001DC3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string description;

				[Token(Token = "0x4001DC4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public string name;

				[Token(Token = "0x4001DC5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public string uri;

				[Token(Token = "0x4001DC6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				public int faceCount;

				[Token(Token = "0x4001DC7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				public ThumbnailsRelated thumbnails;

				[Token(Token = "0x60020E5")]
				[Address(RVA = "0xCBC2EC", Offset = "0xCBC2EC", VA = "0xCBC2EC")]
				public ModelLikesList()
				{
				}
			}

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string previous;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string next;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ModelLikesList[] results;

			[Token(Token = "0x17000606")]
			private string TiltBrush.SketchfabService.Paginated.NextUri
			{
				[Token(Token = "0x60020E2")]
				[Address(RVA = "0xCBC2D4", Offset = "0xCBC2D4", VA = "0xCBC2D4", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000607")]
			private string TiltBrush.SketchfabService.Paginated.PreviousUri
			{
				[Token(Token = "0x60020E3")]
				[Address(RVA = "0xCBC2DC", Offset = "0xCBC2DC", VA = "0xCBC2DC", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xCBC2E4", Offset = "0xCBC2E4", VA = "0xCBC2E4")]
			public ModelLikesResponse()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F7")]
		[UsedImplicitly]
		public struct CreateResponse
		{
			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string uid;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string uri;
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F9")]
		[CompilerGenerated]
		private struct <GetUserInfo>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<MeDetail> <>t__builder;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x60020E9")]
			[Address(RVA = "0xCBC2F4", Offset = "0xCBC2F4", VA = "0xCBC2F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020EA")]
			[Address(RVA = "0xCBC588", Offset = "0xCBC588", VA = "0xCBC588", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004FA")]
		[CompilerGenerated]
		private struct <GetModelDetail>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ModelDetail> <>t__builder;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xCBC5E0", Offset = "0xCBC5E0", VA = "0xCBC5E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xCBC894", Offset = "0xCBC894", VA = "0xCBC894", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004FB")]
		[CompilerGenerated]
		private struct <GetModelDownload>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ModelDownload> <>t__builder;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0xCBC8EC", Offset = "0xCBC8EC", VA = "0xCBC8EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xCBCBB8", Offset = "0xCBCBB8", VA = "0xCBCBB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004FD")]
		[CompilerGenerated]
		private struct <CreateModel>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<CreateResponse> <>t__builder;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Options options;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IProgress<double> progress;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string zipPath;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public CancellationToken token;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string temporaryDirectory;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xCBCCF8", Offset = "0xCBCCF8", VA = "0xCBCCF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xCBD724", Offset = "0xCBD724", VA = "0xCBD724", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D78")]
		public const string kModelLandingPage = "https://sketchfab.com/3d-models/";

		[Token(Token = "0x4001D79")]
		private const string kApiHost = "https://api.sketchfab.com";

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly OAuth2Identity m_identity;

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xCBBA74", Offset = "0xCBBA74", VA = "0xCBBA74")]
		public SketchfabService(OAuth2Identity identity)
		{
		}

		[Token(Token = "0x60020CD")]
		public Task<T> GetNextPageAsync<T>(Task<T> task) where T : Paginated
		{
			return null;
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xCBBA9C", Offset = "0xCBBA9C", VA = "0xCBBA9C")]
		[AsyncStateMachine(typeof(<GetUserInfo>d__11))]
		public Task<MeDetail> GetUserInfo()
		{
			return null;
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xCBBB8C", Offset = "0xCBBB8C", VA = "0xCBBB8C")]
		[AsyncStateMachine(typeof(<GetModelDetail>d__13))]
		public Task<ModelDetail> GetModelDetail(string uid)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xCBBC88", Offset = "0xCBBC88", VA = "0xCBBC88")]
		[AsyncStateMachine(typeof(<GetModelDownload>d__15))]
		public Task<ModelDownload> GetModelDownload(string uid)
		{
			return null;
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xCBBD84", Offset = "0xCBBD84", VA = "0xCBBD84")]
		public Task<ModelLikesResponse> GetMeLikes()
		{
			return null;
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xCBC028", Offset = "0xCBC028", VA = "0xCBC028")]
		[AsyncStateMachine(typeof(<CreateModel>d__19))]
		public Task<CreateResponse> CreateModel(string name, string zipPath, IProgress<double> progress, CancellationToken token, [Optional] Options options, [Optional] string temporaryDirectory)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FE")]
	internal class UploadPopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x20004FF")]
		private enum DisplayMode
		{
			[Token(Token = "0x4001E00")]
			Blank,
			[Token(Token = "0x4001E01")]
			Loggedout,
			[Token(Token = "0x4001E02")]
			Confirming,
			[Token(Token = "0x4001E03")]
			Uploading,
			[Token(Token = "0x4001E04")]
			UploadComplete,
			[Token(Token = "0x4001E05")]
			UploadFailed,
			[Token(Token = "0x4001E06")]
			UploadingDenied,
			[Token(Token = "0x4001E07")]
			Waiting,
			[Token(Token = "0x4001E08")]
			EmbeddedMediaWarningPoly,
			[Token(Token = "0x4001E09")]
			EmbeddedMediaWarningSketchfab,
			[Token(Token = "0x4001E0A")]
			NothingToUploadWarning,
			[Token(Token = "0x4001E0B")]
			ConnectionError,
			[Token(Token = "0x4001E0C")]
			OutOfDate
		}

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Renderer m_Progress;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_LoginOnDesktopObjects;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_ConfirmObjects;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_PolyLoggedInObjects;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_PolyLoggedOutObjects;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_SketchfabLoggedInObjects;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject m_SketchfabLoggedOutObjects;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private TextMeshPro m_PolyUserName;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TextMeshPro m_SketchfabUserName;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Renderer m_GooglePhoto;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Renderer m_SketchfabPhoto;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_UploadObjects;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject m_UploadCompleteObjects;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject m_UploadFailedObjects;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private TextMeshPro m_UploadFailedMessage;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject m_UploadingDeniedObjects;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private GameObject m_WaitObjects;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject m_EmbeddedMediaWarningPoly;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GameObject m_EmbeddedMediaWarningSketchfab;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject m_NothingToUploadWarning;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_ConnectionErrorObjects;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject m_OutOfDateObjects;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private VrAssetService m_AssetService;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Cloud m_LoggingInType;

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xCBD77C", Offset = "0xCBD77C", VA = "0xCBD77C", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xCBDB98", Offset = "0xCBDB98", VA = "0xCBDB98")]
		private void SetMode(DisplayMode displayMode)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xCBD9B0", Offset = "0xCBD9B0", VA = "0xCBD9B0")]
		private void InitUI()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xCBDE14", Offset = "0xCBDE14", VA = "0xCBDE14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xCBDF18", Offset = "0xCBDF18", VA = "0xCBDF18", Slot = "5")]
		public override void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xCBDF1C", Offset = "0xCBDF1C", VA = "0xCBDF1C", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xCBDCF8", Offset = "0xCBDCF8", VA = "0xCBDCF8")]
		private (TextMeshPro, GameObject, GameObject, Renderer) GetUiFor(Cloud cloud)
		{
			return default((TextMeshPro, GameObject, GameObject, Renderer));
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xCBDAD0", Offset = "0xCBDAD0", VA = "0xCBDAD0")]
		private void RefreshUploadButton(Cloud backend)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xCBE134", Offset = "0xCBE134", VA = "0xCBE134")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xCBE13C", Offset = "0xCBE13C", VA = "0xCBE13C")]
		private void OnClose()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xCBE180", Offset = "0xCBE180", VA = "0xCBE180")]
		private void OnOperationStackChanged()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xCBE2B0", Offset = "0xCBE2B0", VA = "0xCBE2B0")]
		public void UserPressedLoginButton(int param)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xCBE2D8", Offset = "0xCBE2D8", VA = "0xCBE2D8")]
		public void UserPressedUploadButton(Cloud cloud, Action onSafeToUpload)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xCBE3E4", Offset = "0xCBE3E4", VA = "0xCBE3E4")]
		public UploadPopUpWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000500")]
	public enum Cloud
	{
		[Token(Token = "0x4001E0E")]
		None,
		[Token(Token = "0x4001E0F")]
		Poly,
		[Token(Token = "0x4001E10")]
		Sketchfab
	}
	[Serializable]
	[Token(Token = "0x2000501")]
	public enum VrAssetFormat
	{
		[Token(Token = "0x4001E12")]
		Unknown,
		[Token(Token = "0x4001E13")]
		TILT,
		[Token(Token = "0x4001E14")]
		GLTF,
		[Token(Token = "0x4001E15")]
		GLTF2
	}
	[Token(Token = "0x2000502")]
	public class VrAssetService : MonoBehaviour
	{
		[Token(Token = "0x2000503")]
		private enum UploadStep
		{
			[Token(Token = "0x4001E2F")]
			CreateGltf,
			[Token(Token = "0x4001E30")]
			CreateTilt,
			[Token(Token = "0x4001E31")]
			ZipElements,
			[Token(Token = "0x4001E32")]
			UploadElements,
			[Token(Token = "0x4001E33")]
			UpdateAssetData,
			[Token(Token = "0x4001E34")]
			Done
		}

		[Token(Token = "0x2000504")]
		private class StreamWithReadProgress : WrappedStream
		{
			[Token(Token = "0x17000613")]
			public int TotalRead
			{
				[Token(Token = "0x6002123")]
				[Address(RVA = "0xCBFBA8", Offset = "0xCBFBA8", VA = "0xCBFBA8")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002124")]
				[Address(RVA = "0xCBFBB0", Offset = "0xCBFBB0", VA = "0xCBFBB0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6002125")]
			[Address(RVA = "0xCBFBB8", Offset = "0xCBFBB8", VA = "0xCBFBB8")]
			public StreamWithReadProgress(string filename)
			{
			}

			[Token(Token = "0x6002126")]
			[Address(RVA = "0xCBFBF8", Offset = "0xCBFBF8", VA = "0xCBFBF8", Slot = "34")]
			public override int Read(byte[] buffer, int offset, int count)
			{
				return default(int);
			}

			[Token(Token = "0x6002127")]
			[Address(RVA = "0xCBFC1C", Offset = "0xCBFC1C", VA = "0xCBFC1C", Slot = "36")]
			public override int ReadByte()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000505")]
		private class UploadInfo : IProgress<double>
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly FileInfo m_sourceFile;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly byte[] m_sourceData;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly string m_remoteName;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly long m_length;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string m_elementId;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public double m_uploadPercent;

			[Token(Token = "0x6002128")]
			[Address(RVA = "0xCBFC40", Offset = "0xCBFC40", VA = "0xCBFC40")]
			public UploadInfo(string sourceFile, string remoteName)
			{
			}

			[Token(Token = "0x6002129")]
			[Address(RVA = "0xCBFCD4", Offset = "0xCBFCD4", VA = "0xCBFCD4")]
			public UploadInfo(byte[] data, string remoteName)
			{
			}

			[Token(Token = "0x600212A")]
			[Address(RVA = "0xCBFD10", Offset = "0xCBFD10", VA = "0xCBFD10")]
			public void SetUploaded(string elementId)
			{
			}

			[Token(Token = "0x600212B")]
			[Address(RVA = "0xCBFD18", Offset = "0xCBFD18", VA = "0xCBFD18")]
			public Stream OpenStream()
			{
				return null;
			}

			[Token(Token = "0x600212C")]
			[Address(RVA = "0xCBFD9C", Offset = "0xCBFD9C", VA = "0xCBFD9C", Slot = "4")]
			private void System.IProgress<System.Double>.Report(double value)
			{
			}
		}

		[Token(Token = "0x2000506")]
		private class TemporaryUploadDirectory : IDisposable
		{
			[Token(Token = "0x17000614")]
			public string Value
			{
				[Token(Token = "0x600212D")]
				[Address(RVA = "0xCBFDA4", Offset = "0xCBFDA4", VA = "0xCBFDA4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0xCBFDAC", Offset = "0xCBFDAC", VA = "0xCBFDAC")]
			public TemporaryUploadDirectory()
			{
			}

			[Token(Token = "0x600212F")]
			[Address(RVA = "0xCBFF28", Offset = "0xCBFF28", VA = "0xCBFF28", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000507")]
		private enum PolyStatus
		{
			[Token(Token = "0x4001E3E")]
			Ok,
			[Token(Token = "0x4001E3F")]
			Disabled,
			[Token(Token = "0x4001E40")]
			NoConnection
		}

		[StructLayout(3)]
		[Token(Token = "0x2000508")]
		[CompilerGenerated]
		private struct <IsMutableAssetIdAsync>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetId;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FileInfoType type;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string userId;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string apiHost;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002130")]
			[Address(RVA = "0xCBFF5C", Offset = "0xCBFF5C", VA = "0xCBFF5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002131")]
			[Address(RVA = "0xCC054C", Offset = "0xCC054C", VA = "0xCC054C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000509")]
		[CompilerGenerated]
		private struct <UploadCurrentSketchAsync>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDemoUpload;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VrAssetService <>4__this;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TemporaryUploadDirectory <tempUploadDir>5__2;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<(string url, long bytes)> <>u__2;

			[Token(Token = "0x6002132")]
			[Address(RVA = "0xCC05A4", Offset = "0xCC05A4", VA = "0xCC05A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002133")]
			[Address(RVA = "0xCC131C", Offset = "0xCC131C", VA = "0xCC131C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050A")]
		[CompilerGenerated]
		private struct <VerifyPolyConnectionAndCheckApiVersionAsync>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VrAssetService <>4__this;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<PolyStatus> <>u__1;

			[Token(Token = "0x6002134")]
			[Address(RVA = "0xCC1328", Offset = "0xCC1328", VA = "0xCC1328", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002135")]
			[Address(RVA = "0xCC1508", Offset = "0xCC1508", VA = "0xCC1508", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050B")]
		[CompilerGenerated]
		private struct <GetPolyStatus>d__60 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<PolyStatus> <>t__builder;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002136")]
			[Address(RVA = "0xCC1514", Offset = "0xCC1514", VA = "0xCC1514", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0xCC18C8", Offset = "0xCC18C8", VA = "0xCC18C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private struct <CreateZipFileAsync>d__63 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] paths;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string zipName;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string rootDir;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VrAssetService <>4__this;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long <totalLength>5__2;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private long <read>5__3;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private FileStream <zip>5__4;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ZipArchive <archive>5__5;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private string[] <>7__wrap5;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <>7__wrap6;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Stream <writer>5__8;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private StreamWithReadProgress <reader>5__9;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Task <task>5__10;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private long <prev>5__11;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private object <>u__1;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600213B")]
			[Address(RVA = "0xCC1A08", Offset = "0xCC1A08", VA = "0xCC1A08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600213C")]
			[Address(RVA = "0xCC2610", Offset = "0xCC2610", VA = "0xCC2610", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200050E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass64_0
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string gltfFile;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VrAssetService <>4__this;

			[Token(Token = "0x600213D")]
			[Address(RVA = "0xCC261C", Offset = "0xCC261C", VA = "0xCC261C")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x600213E")]
			[Address(RVA = "0xCC2624", Offset = "0xCC2624", VA = "0xCC2624")]
			internal ExportGlTF.ExportResults <UploadCurrentSketchSketchfabAsync>b__1()
			{
				return default(ExportGlTF.ExportResults);
			}

			[Token(Token = "0x600213F")]
			[Address(RVA = "0xCC26F4", Offset = "0xCC26F4", VA = "0xCC26F4")]
			internal void <UploadCurrentSketchSketchfabAsync>b__0(double d)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050F")]
		[CompilerGenerated]
		private struct <UploadCurrentSketchSketchfabAsync>d__64 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(string, long)> <>t__builder;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrAssetService <>4__this;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string tempUploadDir;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass64_0 <>8__1;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DiskSceneFileInfo <fileInfo>5__2;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private ExportGlTF.ExportResults <exportResults>5__3;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private SketchfabService.Options <options>5__4;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private string <zipName>5__5;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private long <uploadLength>5__6;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TaskAwaiter<ExportGlTF.ExportResults> <>u__1;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TaskAwaiter<byte[]> <>u__2;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private TaskAwaiter<SketchfabService.CreateResponse> <>u__4;

			[Token(Token = "0x6002140")]
			[Address(RVA = "0xCC2710", Offset = "0xCC2710", VA = "0xCC2710", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002141")]
			[Address(RVA = "0xCC3160", Offset = "0xCC3160", VA = "0xCC3160", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000510")]
		[CompilerGenerated]
		private struct <CreateTiltForUploadAsync>d__65 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<byte[]> <>t__builder;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrAssetService <>4__this;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DiskSceneFileInfo fileInfo;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<SketchSnapshot> <>u__1;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private object <>u__2;

			[Token(Token = "0x6002142")]
			[Address(RVA = "0xCC31B8", Offset = "0xCC31B8", VA = "0xCC31B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002143")]
			[Address(RVA = "0xCC37E0", Offset = "0xCC37E0", VA = "0xCC37E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000511")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x6002144")]
			[Address(RVA = "0xCC3838", Offset = "0xCC3838", VA = "0xCC3838")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0xCC3840", Offset = "0xCC3840", VA = "0xCC3840")]
			internal JObject <InsertSketchInfo>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000512")]
		[CompilerGenerated]
		private sealed class <InsertSketchInfo>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetId;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass68_0 <>8__1;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolySceneFileInfo> infos;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int index;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x17000615")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600214A")]
				[Address(RVA = "0xCC40DC", Offset = "0xCC40DC", VA = "0xCC40DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000616")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214C")]
				[Address(RVA = "0xCC4124", Offset = "0xCC4124", VA = "0xCC4124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0xCBF7A4", Offset = "0xCBF7A4", VA = "0xCBF7A4")]
			[DebuggerHidden]
			public <InsertSketchInfo>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0xCC38A4", Offset = "0xCC38A4", VA = "0xCC38A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002148")]
			[Address(RVA = "0xCC38C0", Offset = "0xCC38C0", VA = "0xCC38C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0xCC402C", Offset = "0xCC402C", VA = "0xCC402C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0xCC40E4", Offset = "0xCC40E4", VA = "0xCC40E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000513")]
		[CompilerGenerated]
		private sealed class <LoadTiltFile>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <path>5__2;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WebRequest <request>5__3;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__5;

			[Token(Token = "0x17000617")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002152")]
				[Address(RVA = "0xCC49E4", Offset = "0xCC49E4", VA = "0xCC49E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000618")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002154")]
				[Address(RVA = "0xCC4A2C", Offset = "0xCC4A2C", VA = "0xCC4A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0xCBFA64", Offset = "0xCBFA64", VA = "0xCBFA64")]
			[DebuggerHidden]
			public <LoadTiltFile>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x600214E")]
			[Address(RVA = "0xCC412C", Offset = "0xCC412C", VA = "0xCC412C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0xCC4168", Offset = "0xCC4168", VA = "0xCC4168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002150")]
			[Address(RVA = "0xCC4884", Offset = "0xCC4884", VA = "0xCC4884")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0xCC4934", Offset = "0xCC4934", VA = "0xCC4934")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002153")]
			[Address(RVA = "0xCC49EC", Offset = "0xCC49EC", VA = "0xCC49EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E16")]
		private const string kGltfName = "sketch.gltf";

		[Token(Token = "0x4001E17")]
		public const string kApiHost = "https://poly.googleapis.com";

		[Token(Token = "0x4001E18")]
		private const string kAssetLandingPage = "https://vr.google.com/sketches/uploads/publish/";

		[Token(Token = "0x4001E19")]
		private const string kListAssetsUri = "/v1/assets";

		[Token(Token = "0x4001E1A")]
		private const string kUserAssetsUri = "/v1/users/me/assets";

		[Token(Token = "0x4001E1B")]
		private const string kUserLikesUri = "/v1/users/me/likedassets";

		[Token(Token = "0x4001E1C")]
		private const string kGetVersionUri = "/$discovery/rest?version=v1";

		[Token(Token = "0x4001E1D")]
		public const string kCreativeCommonsLicense = "CREATIVE_COMMONS_BY";

		[Token(Token = "0x4001E1E")]
		private const string kPolyApiVersion = "v1";

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TrTransform kPolyFromUnity;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<string, string> kGltfMimetypes;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double[] kProgressSteps;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static VrAssetService m_Instance;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AssetsPerPage;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float m_SketchbookRefreshInterval;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_UploadProgress;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_LastUploadFailed;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_LastUploadErrorMessage;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_LastUploadErrorDetails;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_UserCanceledLastUpload;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_LastUploadCompleteUrl;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAndCts<(string url, long bytes)> m_UploadTask;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_PolyAccountId;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PolyStatus m_PolyStatus;

		[Token(Token = "0x17000608")]
		public static string kPolyApiKey
		{
			[Token(Token = "0x6002102")]
			[Address(RVA = "0xCBE3EC", Offset = "0xCBE3EC", VA = "0xCBE3EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000609")]
		public static string ApiHost
		{
			[Token(Token = "0x6002103")]
			[Address(RVA = "0xCBE444", Offset = "0xCBE444", VA = "0xCBE444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060A")]
		public bool Available
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0xCB6C94", Offset = "0xCB6C94", VA = "0xCB6C94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060B")]
		public bool NoConnection
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0xCB96D0", Offset = "0xCB96D0", VA = "0xCB96D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060C")]
		public float UploadProgress
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0xCBE960", Offset = "0xCBE960", VA = "0xCBE960")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700060D")]
		public bool LastUploadFailed
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0xCBE968", Offset = "0xCBE968", VA = "0xCBE968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060E")]
		public string LastUploadErrorMessage
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xCBE970", Offset = "0xCBE970", VA = "0xCBE970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060F")]
		public string LastUploadErrorDetails
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0xCBE978", Offset = "0xCBE978", VA = "0xCBE978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		public bool UserCanceledLastUpload
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0xCBE980", Offset = "0xCBE980", VA = "0xCBE980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000611")]
		public string LastUploadCompleteUrl
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0xCBE988", Offset = "0xCBE988", VA = "0xCBE988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000612")]
		private string AssetLandingPage
		{
			[Token(Token = "0x600210E")]
			[Address(RVA = "0xCBE990", Offset = "0xCBE990", VA = "0xCBE990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xCBE4B0", Offset = "0xCBE4B0", VA = "0xCBE4B0")]
		[AsyncStateMachine(typeof(<IsMutableAssetIdAsync>d__21))]
		public static Task<bool> IsMutableAssetIdAsync(FileInfoType type, string assetId, string userId, string apiHost)
		{
			return null;
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xCBE5C8", Offset = "0xCBE5C8", VA = "0xCBE5C8")]
		static VrAssetService()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xCBE9F8", Offset = "0xCBE9F8", VA = "0xCBE9F8")]
		private void SetUploadProgress(UploadStep step, double pct)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xCBEAE4", Offset = "0xCBEAE4", VA = "0xCBEAE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xCBEB40", Offset = "0xCBEB40", VA = "0xCBEB40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xCBE168", Offset = "0xCBE168", VA = "0xCBE168")]
		public void ConsumeUploadResults()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xCBED6C", Offset = "0xCBED6C", VA = "0xCBED6C")]
		[AsyncStateMachine(typeof(<UploadCurrentSketchAsync>d__57))]
		public Task UploadCurrentSketchAsync(Cloud backend, bool isDemoUpload)
		{
			return null;
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xCBEE4C", Offset = "0xCBEE4C", VA = "0xCBEE4C")]
		public void CancelUpload()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xCBECD8", Offset = "0xCBECD8", VA = "0xCBECD8")]
		[AsyncStateMachine(typeof(<VerifyPolyConnectionAndCheckApiVersionAsync>d__59))]
		private void VerifyPolyConnectionAndCheckApiVersionAsync()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xCBEEA4", Offset = "0xCBEEA4", VA = "0xCBEEA4")]
		[AsyncStateMachine(typeof(<GetPolyStatus>d__60))]
		private static Task<PolyStatus> GetPolyStatus()
		{
			return null;
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xCBEF88", Offset = "0xCBEF88", VA = "0xCBEF88")]
		private DiskSceneFileInfo GetWritableFile()
		{
			return default(DiskSceneFileInfo);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xCBF108", Offset = "0xCBF108", VA = "0xCBF108")]
		public static string GetRelativePath(string fromDir, string toFile)
		{
			return null;
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xCBF240", Offset = "0xCBF240", VA = "0xCBF240")]
		[AsyncStateMachine(typeof(<CreateZipFileAsync>d__63))]
		private Task CreateZipFileAsync(string zipName, string rootDir, string[] paths, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xCBF33C", Offset = "0xCBF33C", VA = "0xCBF33C")]
		[AsyncStateMachine(typeof(<UploadCurrentSketchSketchfabAsync>d__64))]
		private Task<(string, long)> UploadCurrentSketchSketchfabAsync(CancellationToken token, string tempUploadDir, bool _)
		{
			return null;
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xCBF44C", Offset = "0xCBF44C", VA = "0xCBF44C")]
		[AsyncStateMachine(typeof(<CreateTiltForUploadAsync>d__65))]
		private Task<byte[]> CreateTiltForUploadAsync(DiskSceneFileInfo fileInfo)
		{
			return null;
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xCBF558", Offset = "0xCBF558", VA = "0xCBF558")]
		public AssetGetter GetAsset(string assetId, VrAssetFormat type, string reason)
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xCB9B78", Offset = "0xCB9B78", VA = "0xCB9B78")]
		public AssetLister ListAssets(SketchSetType type)
		{
			return null;
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xCB9E28", Offset = "0xCB9E28", VA = "0xCB9E28")]
		[IteratorStateMachine(typeof(<InsertSketchInfo>d__68))]
		public IEnumerator<object> InsertSketchInfo(string assetId, int index, List<PolySceneFileInfo> infos)
		{
			return null;
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xCBF7CC", Offset = "0xCBF7CC", VA = "0xCBF7CC")]
		public AssetLister ListAssets(PolySetType type)
		{
			return null;
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xCBF9FC", Offset = "0xCBF9FC", VA = "0xCBF9FC")]
		[IteratorStateMachine(typeof(<LoadTiltFile>d__70))]
		public IEnumerator LoadTiltFile(string id)
		{
			return null;
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xCBFA8C", Offset = "0xCBFA8C", VA = "0xCBFA8C")]
		public VrAssetService()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class VrAssetServiceException : Exception
	{
		[Token(Token = "0x17000619")]
		public string UserFriendly
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xCC4A34", Offset = "0xCC4A34", VA = "0xCC4A34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002156")]
			[Address(RVA = "0xCC4A3C", Offset = "0xCC4A3C", VA = "0xCC4A3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xCBFEB0", Offset = "0xCBFEB0", VA = "0xCBFEB0")]
		public VrAssetServiceException(string userFriendly, [Optional] Exception inner)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xCC4A44", Offset = "0xCC4A44", VA = "0xCC4A44")]
		public VrAssetServiceException(string userFriendly, string details, [Optional] Exception inner)
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class WebRequest
	{
		[Token(Token = "0x2000516")]
		public struct Reply
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private byte[] bytes;

			[Token(Token = "0x17000620")]
			public byte[] Raw
			{
				[Token(Token = "0x6002176")]
				[Address(RVA = "0xCC6974", Offset = "0xCC6974", VA = "0xCC6974")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000621")]
			public string Text
			{
				[Token(Token = "0x6002177")]
				[Address(RVA = "0xCC697C", Offset = "0xCC697C", VA = "0xCC697C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000622")]
			public JObject JObject
			{
				[Token(Token = "0x6002178")]
				[Address(RVA = "0xCC0524", Offset = "0xCC0524", VA = "0xCC0524")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0xCC69C0", Offset = "0xCC69C0", VA = "0xCC69C0")]
			public Reply(byte[] bytes)
			{
			}

			[Token(Token = "0x600217A")]
			public T Deserialize<T>()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x2000517")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string temporaryFileName;

			[Token(Token = "0x600217B")]
			[Address(RVA = "0xCC69C8", Offset = "0xCC69C8", VA = "0xCC69C8")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0xCC69D0", Offset = "0xCC69D0", VA = "0xCC69D0")]
			internal byte[] <SendNamedDataAsync>b__2()
			{
				return null;
			}
		}

		[Token(Token = "0x2000518")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string wrapperType;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass44_0 CS$<>8__locals1;

			[Token(Token = "0x600217D")]
			[Address(RVA = "0xCC69DC", Offset = "0xCC69DC", VA = "0xCC69DC")]
			public <>c__DisplayClass44_1()
			{
			}

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xCC69E4", Offset = "0xCC69E4", VA = "0xCC69E4")]
			internal UploadHandler <SendNamedDataAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000519")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass44_2
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] fileContents;

			[Token(Token = "0x600217F")]
			[Address(RVA = "0xCC6A64", Offset = "0xCC6A64", VA = "0xCC6A64")]
			public <>c__DisplayClass44_2()
			{
			}

			[Token(Token = "0x6002180")]
			[Address(RVA = "0xCC6A6C", Offset = "0xCC6A6C", VA = "0xCC6A6C")]
			internal UploadHandler <SendNamedDataAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200051A")]
		[CompilerGenerated]
		private struct <SendNamedDataAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Reply> <>t__builder;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebRequest <>4__this;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string destFilename;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parameterName;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string contentType;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IEnumerable<(string key, string val)> moreParams;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string temporaryDirectory;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Stream srcData;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass44_1 <>8__1;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private <>c__DisplayClass44_2 <>8__2;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public CancellationToken? token;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private <>c__DisplayClass44_0 <>8__3;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private byte[] <suffix>5__2;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <debugId>5__3;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Stream <outputStream>5__4;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private long <srcLength>5__5;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Task <task>5__6;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private object <>u__1;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TaskAwaiter<byte[]> <>u__2;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TaskAwaiter<Reply> <>u__3;

			[Token(Token = "0x6002181")]
			[Address(RVA = "0xCC6AD4", Offset = "0xCC6AD4", VA = "0xCC6AD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0xCC780C", Offset = "0xCC780C", VA = "0xCC780C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200051C")]
		[CompilerGenerated]
		private struct <SendAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Reply> <>t__builder;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int? debugId;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken? token;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WebRequest <>4__this;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<UploadHandler> payloadCreator;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string contentType;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool isCompressed;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <debugId_>5__2;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CancellationToken <realToken>5__3;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <retries>5__4;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <retryIndex>5__5;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UnityWebRequest <www>5__6;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UploadHandler <payload>5__7;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UnityWebRequestAsyncOperation <sendTask>5__8;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private object <>u__2;

			[Token(Token = "0x6002185")]
			[Address(RVA = "0xCC78DC", Offset = "0xCC78DC", VA = "0xCC78DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0xCC9A88", Offset = "0xCC9A88", VA = "0xCC9A88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool kEnableHttpCompression;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] kInterestingRequestHeaders;

		[Token(Token = "0x4001E95")]
		private const int kNumRetries = 3;

		[Token(Token = "0x4001E96")]
		private const int kDebugRequestLogLength = 2000;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int sm_DebugRequestNextId;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Encoding sm_StrictAscii;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Uri;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Method;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OAuth2Identity m_Identity;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] m_Result;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_UploadedBytes;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float? m_PreUploadProgress;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Progress;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Done;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_Compressed;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_UploadDescription;

		[Token(Token = "0x1700061A")]
		public bool Done
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0xCC557C", Offset = "0xCC557C", VA = "0xCC557C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061B")]
		public string Result
		{
			[Token(Token = "0x6002166")]
			[Address(RVA = "0xCC3860", Offset = "0xCC3860", VA = "0xCC3860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061C")]
		public byte[] ResultBytes
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xCC5584", Offset = "0xCC5584", VA = "0xCC5584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061D")]
		public int UploadedBytes
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0xCC558C", Offset = "0xCC558C", VA = "0xCC558C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700061E")]
		public float Progress
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0xCC5594", Offset = "0xCC5594", VA = "0xCC5594")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700061F")]
		public IProgress<double> ProgressObject
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xCC5618", Offset = "0xCC5618", VA = "0xCC5618")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xCC5620", Offset = "0xCC5620", VA = "0xCC5620")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xCC4AF8", Offset = "0xCC4AF8", VA = "0xCC4AF8")]
		private static string RequestDebugGetLogFile(int id, string description, string ext, int retryIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xCC4E50", Offset = "0xCC4E50", VA = "0xCC4E50")]
		private static int RequestDebugGetNewId()
		{
			return default(int);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xCC4ED0", Offset = "0xCC4ED0", VA = "0xCC4ED0")]
		private static void RequestDebugLogFile(int id, string description, string sourceFile)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xCC5010", Offset = "0xCC5010", VA = "0xCC5010")]
		private static void RequestDebugLogText(int id, string description, string text, int retryIndex = 0)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xCC5150", Offset = "0xCC5150", VA = "0xCC5150")]
		private static void RequestDebugLogBytes(int id, string description, byte[] bytes, int retryIndex = 0)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xCC5298", Offset = "0xCC5298", VA = "0xCC5298")]
		private static bool IsTransientServerError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xCC52A8", Offset = "0xCC52A8", VA = "0xCC52A8")]
		private static bool IsAuthError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xCC52B4", Offset = "0xCC52B4", VA = "0xCC52B4")]
		private static bool IsSuccess(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xCC52C4", Offset = "0xCC52C4", VA = "0xCC52C4")]
		private static bool IsForbiddenError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xCC52D0", Offset = "0xCC52D0", VA = "0xCC52D0")]
		private static Stream OpenFileForWrite(string filename, bool compress)
		{
			return null;
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xCC535C", Offset = "0xCC535C", VA = "0xCC535C")]
		public static string RedactUriForError(string uriString)
		{
			return null;
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xCC54D4", Offset = "0xCC54D4", VA = "0xCC54D4")]
		public static Task<Reply> GetAsync(string uri)
		{
			return null;
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xCBBF10", Offset = "0xCBBF10", VA = "0xCBBF10")]
		public WebRequest(string uri, OAuth2Identity identity, string method = "GET", bool compress = false)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xCBD5E0", Offset = "0xCBD5E0", VA = "0xCBD5E0")]
		[AsyncStateMachine(typeof(<SendNamedDataAsync>d__44))]
		public Task<Reply> SendNamedDataAsync(string parameterName, Stream srcData, string destFilename, string contentType, [CanBeNull] IEnumerable<(string key, string val)> moreParams, CancellationToken? token, [Optional] string temporaryDirectory)
		{
			return null;
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xCBC00C", Offset = "0xCBC00C", VA = "0xCBC00C")]
		public Task<Reply> SendAsync()
		{
			return null;
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xCC5764", Offset = "0xCC5764", VA = "0xCC5764")]
		public Task<Reply> SendAsync(byte[] uncompressedData, string contentType)
		{
			return null;
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xCC5628", Offset = "0xCC5628", VA = "0xCC5628")]
		[AsyncStateMachine(typeof(<SendAsync>d__47))]
		public Task<Reply> SendAsync(Func<UploadHandler> payloadCreator, string contentType, bool isCompressed, [Optional] CancellationToken? token, [Optional] int? debugId)
		{
			return null;
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xCC5918", Offset = "0xCC5918", VA = "0xCC5918")]
		private static string GetResponseHeadersAsString(UnityWebRequest www)
		{
			return null;
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xCC5AF0", Offset = "0xCC5AF0", VA = "0xCC5AF0")]
		private static float BackoffSeconds(int retries)
		{
			return default(float);
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xCC5B00", Offset = "0xCC5B00", VA = "0xCC5B00")]
		private static (byte[], byte[], string) SerializeMultipartForm(string parameterName, string destFilename, string contentType, [CanBeNull] IEnumerable<(string key, string val)> moreParams)
		{
			return default((byte[], byte[], string));
		}
	}
	[Token(Token = "0x200051E")]
	internal class YouTube : MonoBehaviour
	{
		[Token(Token = "0x200051F")]
		[CompilerGenerated]
		private sealed class <ShareVideo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTube <>4__this;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <filesize>5__2;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x17000625")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002195")]
				[Address(RVA = "0xCCABF4", Offset = "0xCCABF4", VA = "0xCCABF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000626")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002197")]
				[Address(RVA = "0xCCAC3C", Offset = "0xCCAC3C", VA = "0xCCAC3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002190")]
			[Address(RVA = "0xCC9EB0", Offset = "0xCC9EB0", VA = "0xCC9EB0")]
			[DebuggerHidden]
			public <ShareVideo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0xCCA184", Offset = "0xCCA184", VA = "0xCCA184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0xCCA1C0", Offset = "0xCCA1C0", VA = "0xCCA1C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0xCCAA94", Offset = "0xCCAA94", VA = "0xCCAA94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0xCCAB44", Offset = "0xCCAB44", VA = "0xCCAB44")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002196")]
			[Address(RVA = "0xCCABFC", Offset = "0xCCABFC", VA = "0xCCABFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_UploadUri;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_ChannelListUri;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_UserInfoUri;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_RevokeUri;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_UploadedMessage;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_AuthorizeMessage;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_DefaultTitle;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_DefaultDescription;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static YouTube m_Instance;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_UploadsInProgress;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FileStream m_UploadStream;

		[Token(Token = "0x17000623")]
		public bool AuthNeeded
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0xCC9D88", Offset = "0xCC9D88", VA = "0xCC9D88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000624")]
		public bool InProgress
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xCC9DB4", Offset = "0xCC9DB4", VA = "0xCC9DB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xCC9DC4", Offset = "0xCC9DC4", VA = "0xCC9DC4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xCC9E10", Offset = "0xCC9E10", VA = "0xCC9E10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xCC9E3C", Offset = "0xCC9E3C", VA = "0xCC9E3C")]
		[IteratorStateMachine(typeof(<ShareVideo>d__17))]
		public IEnumerator ShareVideo(string filename)
		{
			return null;
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xCC9ED8", Offset = "0xCC9ED8", VA = "0xCC9ED8")]
		private UnityWebRequest InitResumableUpload(string filename, long size)
		{
			return null;
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xCCA17C", Offset = "0xCCA17C", VA = "0xCCA17C")]
		public YouTube()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class GroupManager
	{
		[Token(Token = "0x4001EE6")]
		public const uint kIdSketchGroupTagNone = 0u;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint m_nextUnusedCookie;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<uint, SketchGroupTag> m_idToGroup;

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xCCAC44", Offset = "0xCCAC44", VA = "0xCCAC44")]
		public GroupManager()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xCCACDC", Offset = "0xCCACDC", VA = "0xCCACDC")]
		public SketchGroupTag NewUnusedGroup()
		{
			return default(SketchGroupTag);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xCCACF0", Offset = "0xCCACF0", VA = "0xCCACF0")]
		public SketchGroupTag GetGroupFromId(uint id)
		{
			return default(SketchGroupTag);
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xCCAC60", Offset = "0xCCAC60", VA = "0xCCAC60")]
		public void ResetGroups()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xCCADE4", Offset = "0xCCADE4", VA = "0xCCADE4")]
		public static void MoveStrokesToNewGroups(List<Stroke> strokes, Dictionary<int, int> oldGroupToNewGroup)
		{
		}
	}
	[Token(Token = "0x2000521")]
	public struct SketchGroupTag : IEquatable<SketchGroupTag>
	{
		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchGroupTag None;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly uint cookie;

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xCCB0D8", Offset = "0xCCB0D8", VA = "0xCCB0D8")]
		public SketchGroupTag(uint cookie)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xCCB0E0", Offset = "0xCCB0E0", VA = "0xCCB0E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xCCB158", Offset = "0xCCB158", VA = "0xCCB158", Slot = "4")]
		public bool Equals(SketchGroupTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xCCB168", Offset = "0xCCB168", VA = "0xCCB168", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xCCB170", Offset = "0xCCB170", VA = "0xCCB170")]
		public static bool operator ==(SketchGroupTag lhs, SketchGroupTag rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xCCB0CC", Offset = "0xCCB0CC", VA = "0xCCB0CC")]
		public static bool operator !=(SketchGroupTag lhs, SketchGroupTag rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xCCB17C", Offset = "0xCCB17C", VA = "0xCCB17C")]
		[Obsolete]
		public static bool operator ==(SketchGroupTag lhs, string rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xCCB1BC", Offset = "0xCCB1BC", VA = "0xCCB1BC")]
		[Obsolete]
		public static bool operator !=(SketchGroupTag lhs, string rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000522")]
	public class GroupIdMapping
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<SketchGroupTag, uint> m_GroupToConsecutiveIdMapping;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_NextId;

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xCCB244", Offset = "0xCCB244", VA = "0xCCB244")]
		public uint GetId(SketchGroupTag group)
		{
			return default(uint);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xCCB334", Offset = "0xCCB334", VA = "0xCCB334")]
		public GroupIdMapping()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class SketchBinaryReader : IDisposable
	{
		[Token(Token = "0x4001EED")]
		private const long kGibibyte = 1073741824L;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream m_stream;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_buf16;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] m_bufBig;

		[Token(Token = "0x17000627")]
		public Stream BaseStream
		{
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0xCCB3B8", Offset = "0xCCB3B8", VA = "0xCCB3B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0xCCB3C0", Offset = "0xCCB3C0", VA = "0xCCB3C0")]
			set
			{
			}
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xCCB3C8", Offset = "0xCCB3C8", VA = "0xCCB3C8")]
		public SketchBinaryReader(Stream stream)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xCCB434", Offset = "0xCCB434", VA = "0xCCB434", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xCCB43C", Offset = "0xCCB43C", VA = "0xCCB43C")]
		public uint UInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xCCB4BC", Offset = "0xCCB4BC", VA = "0xCCB4BC")]
		public float Float()
		{
			return default(float);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xCCB540", Offset = "0xCCB540", VA = "0xCCB540")]
		public int Int32()
		{
			return default(int);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xCCB544", Offset = "0xCCB544", VA = "0xCCB544")]
		public Vector3 Vec3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xCCB584", Offset = "0xCCB584", VA = "0xCCB584")]
		public Color Color()
		{
			return default(Color);
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xCCB5DC", Offset = "0xCCB5DC", VA = "0xCCB5DC")]
		public Quaternion Quaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xCCB634", Offset = "0xCCB634", VA = "0xCCB634")]
		private void LazyCreateBigBuffer()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xCCB68C", Offset = "0xCCB68C", VA = "0xCCB68C")]
		public bool ReadInto(IntPtr dest, long length)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xCCB7AC", Offset = "0xCCB7AC", VA = "0xCCB7AC")]
		public bool Skip(uint length)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xCCB858", Offset = "0xCCB858", VA = "0xCCB858")]
		private static bool SlowSkip(Stream stream, byte[] buffer, uint length)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xCCB8D0", Offset = "0xCCB8D0", VA = "0xCCB8D0")]
		public bool ReadIntoExact(List<Vector2> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xCCBACC", Offset = "0xCCBACC", VA = "0xCCBACC")]
		public bool ReadIntoExact(List<Vector3> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xCCBCCC", Offset = "0xCCBCCC", VA = "0xCCBCCC")]
		public bool ReadIntoExact(List<Vector4> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xCCBEC8", Offset = "0xCCBEC8", VA = "0xCCBEC8")]
		public bool ReadIntoExact(List<Color32> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xCCC0C4", Offset = "0xCCC0C4", VA = "0xCCC0C4")]
		public bool ReadIntoExact(List<int> lst, int expectedCount)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000524")]
	public class SketchBinaryWriter : IDisposable
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream m_stream;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_buf16;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] m_bufBig;

		[Token(Token = "0x17000628")]
		public Stream BaseStream
		{
			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x130568C", Offset = "0x130568C", VA = "0x130568C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x1305694", Offset = "0x1305694", VA = "0x1305694")]
			set
			{
			}
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x130569C", Offset = "0x130569C", VA = "0x130569C")]
		public SketchBinaryWriter(Stream stream)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1305708", Offset = "0x1305708", VA = "0x1305708", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1305710", Offset = "0x1305710", VA = "0x1305710")]
		public void Color(Color color)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x130576C", Offset = "0x130576C", VA = "0x130576C")]
		public void Vec3(Vector3 v)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x13057A8", Offset = "0x13057A8", VA = "0x13057A8")]
		public void Quaternion(Quaternion v)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x13057FC", Offset = "0x13057FC", VA = "0x13057FC")]
		public void Int32(int x)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1305800", Offset = "0x1305800", VA = "0x1305800")]
		public void UInt32(uint x)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1305764", Offset = "0x1305764", VA = "0x1305764")]
		public void Float(float x)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x13058A0", Offset = "0x13058A0", VA = "0x13058A0")]
		public void Write(IntPtr src, long length)
		{
		}

		[Token(Token = "0x60021C6")]
		public long WriteRaw<T>(List<T> lst) where T : struct
		{
			return default(long);
		}

		[Token(Token = "0x60021C7")]
		public long WriteRaw<T>(T[] array, int count) where T : struct
		{
			return default(long);
		}

		[Token(Token = "0x60021C8")]
		public void WriteLengthPrefixed<T>(List<T> lst) where T : struct
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class SketchControlsScript : MonoBehaviour
	{
		[Token(Token = "0x2000526")]
		public enum GlobalCommands
		{
			[Token(Token = "0x4001F89")]
			Null = 0,
			[Token(Token = "0x4001F8A")]
			Save = 1,
			[Token(Token = "0x4001F8B")]
			SaveNew = 2,
			[Token(Token = "0x4001F8C")]
			Load = 3,
			[Token(Token = "0x4001F8D")]
			NewSketch = 4,
			[Token(Token = "0x4001F8E")]
			StraightEdge = 5,
			[Token(Token = "0x4001F8F")]
			AutoOrient = 6,
			[Token(Token = "0x4001F90")]
			Undo = 7,
			[Token(Token = "0x4001F91")]
			Redo = 8,
			[Token(Token = "0x4001F92")]
			Tiltasaurus = 9,
			[Token(Token = "0x4001F93")]
			LightingHdr = 10,
			[Token(Token = "0x4001F94")]
			AudioVisualization = 11,
			[Token(Token = "0x4001F95")]
			ResetAllPanels = 12,
			[Token(Token = "0x4001F96")]
			SketchOrigin = 13,
			[Token(Token = "0x4001F97")]
			SymmetryPlane = 14,
			[Token(Token = "0x4001F98")]
			SymmetryFour = 15,
			[Token(Token = "0x4001F99")]
			ViewOnly = 16,
			[Token(Token = "0x4001F9A")]
			SaveGallery = 17,
			[Token(Token = "0x4001F9B")]
			LightingLdr = 18,
			[Token(Token = "0x4001F9C")]
			ShowSketchFolder = 19,
			[Token(Token = "0x4001F9D")]
			About = 20,
			[Token(Token = "0x4001F9E")]
			LoadNamedFile = 21,
			[Token(Token = "0x4001F9F")]
			DropCam = 22,
			[Token(Token = "0x4001FA0")]
			CuratedGallery = 23,
			[Token(Token = "0x4001FA1")]
			Unused_UploadToCloud = 24,
			[Token(Token = "0x4001FA2")]
			AnalyticsEnabled_Deprecated = 25,
			[Token(Token = "0x4001FA3")]
			Credits = 26,
			[Token(Token = "0x4001FA4")]
			LogOutOfGenericCloud = 27,
			[Token(Token = "0x4001FA5")]
			DraftingVisibility = 28,
			[Token(Token = "0x4001FA6")]
			DeleteSketch = 29,
			[Token(Token = "0x4001FA7")]
			ShowWindowGUI = 30,
			[Token(Token = "0x4001FA8")]
			MorePanels = 31,
			[Token(Token = "0x4001FA9")]
			Cameras = 32,
			[Token(Token = "0x4001FAA")]
			FAQ = 33,
			[Token(Token = "0x4001FAB")]
			ExportRaw = 34,
			[Token(Token = "0x4001FAC")]
			IRC = 35,
			[Token(Token = "0x4001FAD")]
			YouTubeChat = 36,
			[Token(Token = "0x4001FAE")]
			CameraOptions = 37,
			[Token(Token = "0x4001FAF")]
			StencilsDisabled = 38,
			[Token(Token = "0x4001FB0")]
			AdvancedTools = 39,
			[Token(Token = "0x4001FB1")]
			FloatingPanelsMode = 40,
			[Token(Token = "0x4001FB2")]
			StraightEdgeMeterDisplay = 41,
			[Token(Token = "0x4001FB3")]
			Sketchbook = 42,
			[Token(Token = "0x4001FB4")]
			ExportAll = 43,
			[Token(Token = "0x4001FB5")]
			Lights = 44,
			[Token(Token = "0x4001FB6")]
			SaveAndUpload = 45,
			[Token(Token = "0x4001FB7")]
			StraightEdgeShape = 46,
			[Token(Token = "0x4001FB8")]
			SaveOptions = 47,
			[Token(Token = "0x4001FB9")]
			SketchbookMenu = 48,
			[Token(Token = "0x4001FBA")]
			Disco = 49,
			[Token(Token = "0x4001FBB")]
			ViewOnlineGallery = 50,
			[Token(Token = "0x4001FBC")]
			CancelUpload = 51,
			[Token(Token = "0x4001FBD")]
			AdvancedPanelsToggle = 52,
			[Token(Token = "0x4001FBE")]
			Music = 53,
			[Token(Token = "0x4001FBF")]
			Duplicate = 54,
			[Token(Token = "0x4001FC0")]
			ToggleGroupStrokesAndWidgets = 55,
			[Token(Token = "0x4001FC1")]
			SaveModel = 56,
			[Token(Token = "0x4001FC2")]
			ViewPolyPage = 57,
			[Token(Token = "0x4001FC3")]
			ViewPolyGallery = 58,
			[Token(Token = "0x4001FC4")]
			ExportListed = 59,
			[Token(Token = "0x4001FC5")]
			RenderCameraPath = 60,
			[Token(Token = "0x4001FC6")]
			ToggleProfiling = 61,
			[Token(Token = "0x4001FC7")]
			DoAutoProfile = 62,
			[Token(Token = "0x4001FC8")]
			DoAutoProfileAndQuit = 63,
			[Token(Token = "0x4001FC9")]
			ToggleSettings = 64,
			[Token(Token = "0x4001FCA")]
			SummonMirror = 65,
			[Token(Token = "0x4001FCB")]
			InvertSelection = 66,
			[Token(Token = "0x4001FCC")]
			SelectAll = 67,
			[Token(Token = "0x4001FCD")]
			FlipSelection = 68,
			[Token(Token = "0x4001FCE")]
			ToggleBrushLab = 69,
			[Token(Token = "0x4001FCF")]
			ReleaseNotes = 70,
			[Token(Token = "0x4001FD0")]
			ToggleCameraPostEffects = 71,
			[Token(Token = "0x4001FD1")]
			ToggleWatermark = 72,
			[Token(Token = "0x4001FD2")]
			AccountInfo = 73,
			[Token(Token = "0x4001FD3")]
			LoadConfirmUnsaved = 74,
			[Token(Token = "0x4001FD4")]
			LoadConfirmComplex = 75,
			[Token(Token = "0x4001FD5")]
			MemoryWarning = 76,
			[Token(Token = "0x4001FD6")]
			MemoryExceeded = 77,
			[Token(Token = "0x4001FD7")]
			ViewLastUpload = 78,
			[Token(Token = "0x4001FD8")]
			LoadConfirmComplexHigh = 79,
			[Token(Token = "0x4001FD9")]
			ShowTos = 80,
			[Token(Token = "0x4001FDA")]
			ShowPrivacy = 81,
			[Token(Token = "0x4001FDB")]
			ShowQuestSideLoading = 82,
			[Token(Token = "0x4001FDC")]
			AshleysSketch = 83,
			[Token(Token = "0x4001FDD")]
			UnloadReferenceImageCatalog = 84,
			[Token(Token = "0x4001FDE")]
			SaveOnLocalChanges = 85,
			[Token(Token = "0x4001FDF")]
			ToggleCameraPathVisuals = 86,
			[Token(Token = "0x4001FE0")]
			ToggleCameraPathPreview = 87,
			[Token(Token = "0x4001FE1")]
			DeleteCameraPath = 88,
			[Token(Token = "0x4001FE2")]
			RecordCameraPath = 89,
			[Token(Token = "0x4001FE3")]
			SelectCameraPath = 90,
			[Token(Token = "0x4001FE4")]
			ToggleAutosimplification = 91,
			[Token(Token = "0x4001FE5")]
			ShowGoogleDrive = 92,
			[Token(Token = "0x4001FE6")]
			GoogleDriveSync_Folder = 93,
			[Token(Token = "0x4001FE7")]
			GoogleDriveSync = 94,
			[Token(Token = "0x4001FE8")]
			LoginToGenericCloud = 95,
			[Token(Token = "0x4001FE9")]
			UploadToGenericCloud = 96,
			[Token(Token = "0x4001FEA")]
			LoadWaitOnDownload = 97,
			[Token(Token = "0x4001FEB")]
			SignOutConfirm = 98,
			[Token(Token = "0x4001FEC")]
			ReadOnlyNotice = 99,
			[Token(Token = "0x4001FED")]
			ShowContribution = 100,
			[Token(Token = "0x4001FEE")]
			OpenScriptsCommandsList = 6000,
			[Token(Token = "0x4001FEF")]
			OpenScriptsList = 6001,
			[Token(Token = "0x4001FF0")]
			OpenExampleScriptsList = 6002,
			[Token(Token = "0x4001FF1")]
			SymmetryTwoHanded = 6003,
			[Token(Token = "0x4001FF2")]
			OpenColorOptionsPopup = 7000,
			[Token(Token = "0x4001FF3")]
			ChangeSnapAngle = 8000,
			[Token(Token = "0x4001FF4")]
			MergeBrushStrokes = 10000
		}

		[Token(Token = "0x2000527")]
		public enum ControlsType
		{
			[Token(Token = "0x4001FF6")]
			KeyboardMouse,
			[Token(Token = "0x4001FF7")]
			SixDofControllers,
			[Token(Token = "0x4001FF8")]
			ViewingOnly
		}

		[Token(Token = "0x2000528")]
		public enum DraftingVisibilityOption
		{
			[Token(Token = "0x4001FFA")]
			Visible,
			[Token(Token = "0x4001FFB")]
			Transparent,
			[Token(Token = "0x4001FFC")]
			Hidden
		}

		[Token(Token = "0x2000529")]
		public enum InputState
		{
			[Token(Token = "0x4001FFE")]
			Standard,
			[Token(Token = "0x4001FFF")]
			Pan,
			[Token(Token = "0x4002000")]
			Rotation,
			[Token(Token = "0x4002001")]
			HeadLock,
			[Token(Token = "0x4002002")]
			ControllerLock,
			[Token(Token = "0x4002003")]
			PushPull,
			[Token(Token = "0x4002004")]
			BrushSize,
			[Token(Token = "0x4002005")]
			Save,
			[Token(Token = "0x4002006")]
			Load,
			[Token(Token = "0x4002007")]
			Num
		}

		[Token(Token = "0x200052A")]
		public enum LoadSpeed
		{
			[Token(Token = "0x4002009")]
			Normal = -1,
			[Token(Token = "0x400200A")]
			Quick = 1
		}

		[Token(Token = "0x200052B")]
		private class GazeResult
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_HitWithGaze;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_HitWithController;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool m_WithinView;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_ControllerDistance;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 m_GazePosition;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 m_ControllerPosition;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InputManager.ControllerName m_ControllerName;

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x13059D8", Offset = "0x13059D8", VA = "0x13059D8")]
			public GazeResult()
			{
			}
		}

		[Token(Token = "0x200052C")]
		private class GrabWidgetControllerInfo
		{
			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputManager.ControllerName m_Name;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TrTransform m_BaseControllerXf;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public TrTransform m_BaseWidgetXf_LS;

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x13059E0", Offset = "0x13059E0", VA = "0x13059E0")]
			public GrabWidgetControllerInfo()
			{
			}
		}

		[Token(Token = "0x200052D")]
		private struct GrabWidgetHoldPoint
		{
			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputManager.ControllerName m_Name;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_BirthTime;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 m_Pos;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Quaternion m_Rot;
		}

		[Token(Token = "0x200052E")]
		private class InputStateConfig
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_AllowDrawing;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_AllowMovement;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool m_ShowGizmo;

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x13059E8", Offset = "0x13059E8", VA = "0x13059E8")]
			public InputStateConfig()
			{
			}
		}

		[Token(Token = "0x200052F")]
		private enum FadeState
		{
			[Token(Token = "0x400201D")]
			None,
			[Token(Token = "0x400201E")]
			FadeOn,
			[Token(Token = "0x400201F")]
			FadeOff
		}

		[Token(Token = "0x2000530")]
		private enum GrabWidgetState
		{
			[Token(Token = "0x4002021")]
			None,
			[Token(Token = "0x4002022")]
			OneHand,
			[Token(Token = "0x4002023")]
			TwoHands
		}

		[Token(Token = "0x2000531")]
		private enum GrabWorldState
		{
			[Token(Token = "0x4002025")]
			Normal,
			[Token(Token = "0x4002026")]
			ResettingTransform,
			[Token(Token = "0x4002027")]
			ResetDone
		}

		[Token(Token = "0x2000532")]
		private enum WorldTransformResetState
		{
			[Token(Token = "0x4002029")]
			Default,
			[Token(Token = "0x400202A")]
			Requested,
			[Token(Token = "0x400202B")]
			FadingToBlack,
			[Token(Token = "0x400202C")]
			FadingToScene
		}

		[Token(Token = "0x2000533")]
		private enum RotationType
		{
			[Token(Token = "0x400202E")]
			All,
			[Token(Token = "0x400202F")]
			RollOnly
		}

		[Token(Token = "0x2000534")]
		private enum GrabIntersectionState
		{
			[Token(Token = "0x4002031")]
			RequestIntersections,
			[Token(Token = "0x4002032")]
			ReadBrush,
			[Token(Token = "0x4002033")]
			ReadWand
		}

		[Token(Token = "0x2000535")]
		private struct GrabState
		{
			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputManager.ControllerName name;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TrTransform grabTransform;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool grabbingWorld;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool grabbingGroup;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool startedGrabInsideWidget;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool eatInput;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GrabWidget lastWidgetIntersect;

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x13059F0", Offset = "0x13059F0", VA = "0x13059F0")]
			public void SetHadBestGrabAndTriggerHaptics(GrabWidgetData data)
			{
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x1305BA8", Offset = "0x1305BA8", VA = "0x1305BA8")]
			public void ClearInsideWidget()
			{
			}
		}

		[Token(Token = "0x2000536")]
		private struct GpuIntersectionResult
		{
			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GpuIntersector.FutureModelResult result;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<GpuIntersector.ModelResult> resultList;
		}

		[Token(Token = "0x2000537")]
		[CompilerGenerated]
		private sealed class <DelayedHidePanels>d__241 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frames;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <stall>5__2;

			[Token(Token = "0x17000636")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6002270")]
				[Address(RVA = "0x1305C6C", Offset = "0x1305C6C", VA = "0x1305C6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000637")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002272")]
				[Address(RVA = "0x1305CB4", Offset = "0x1305CB4", VA = "0x1305CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x1305BB0", Offset = "0x1305BB0", VA = "0x1305BB0")]
			[DebuggerHidden]
			public <DelayedHidePanels>d__241(int <>1__state)
			{
			}

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x1305BD8", Offset = "0x1305BD8", VA = "0x1305BD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0x1305BDC", Offset = "0x1305BDC", VA = "0x1305BDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0x1305C74", Offset = "0x1305C74", VA = "0x1305C74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000539")]
		[CompilerGenerated]
		private sealed class <RenderPathAndQuit>d__305 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x17000638")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002285")]
				[Address(RVA = "0x13060B4", Offset = "0x13060B4", VA = "0x13060B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000639")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002287")]
				[Address(RVA = "0x13060FC", Offset = "0x13060FC", VA = "0x13060FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x1305FD0", Offset = "0x1305FD0", VA = "0x1305FD0")]
			[DebuggerHidden]
			public <RenderPathAndQuit>d__305(int <>1__state)
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x1305FF8", Offset = "0x1305FF8", VA = "0x1305FF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x1305FFC", Offset = "0x1305FFC", VA = "0x1305FFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x13060BC", Offset = "0x13060BC", VA = "0x13060BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053A")]
		[CompilerGenerated]
		private sealed class <ExportListAndQuit>d__306 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator<Null> <coroutine>5__2;

			[Token(Token = "0x1700063A")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0x1306850", Offset = "0x1306850", VA = "0x1306850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228E")]
				[Address(RVA = "0x1306898", Offset = "0x1306898", VA = "0x1306898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002288")]
			[Address(RVA = "0x1306104", Offset = "0x1306104", VA = "0x1306104")]
			[DebuggerHidden]
			public <ExportListAndQuit>d__306(int <>1__state)
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0x130612C", Offset = "0x130612C", VA = "0x130612C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0x1306148", Offset = "0x1306148", VA = "0x1306148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0x13067A0", Offset = "0x13067A0", VA = "0x13067A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x1306858", Offset = "0x1306858", VA = "0x1306858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053B")]
		[CompilerGenerated]
		private sealed class <LoadAndExportList>d__308 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> filenames;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string>.Enumerator <>7__wrap1;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <coroutine>5__3;

			[Token(Token = "0x1700063C")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0x1306D54", Offset = "0x1306D54", VA = "0x1306D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002296")]
				[Address(RVA = "0x1306D9C", Offset = "0x1306D9C", VA = "0x1306D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x13068A0", Offset = "0x13068A0", VA = "0x13068A0")]
			[DebuggerHidden]
			public <LoadAndExportList>d__308(int <>1__state)
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0x13068C8", Offset = "0x13068C8", VA = "0x13068C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x1306980", Offset = "0x1306980", VA = "0x1306980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x1306D04", Offset = "0x1306D04", VA = "0x1306D04")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0x1306C54", Offset = "0x1306C54", VA = "0x1306C54")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x1306D5C", Offset = "0x1306D5C", VA = "0x1306D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053C")]
		[CompilerGenerated]
		private sealed class <LoadAndExportAll>d__309 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchSet <sketchSet>5__2;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <coroutine>5__4;

			[Token(Token = "0x1700063E")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x600229B")]
				[Address(RVA = "0x13072E0", Offset = "0x13072E0", VA = "0x13072E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229D")]
				[Address(RVA = "0x1307328", Offset = "0x1307328", VA = "0x1307328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0x1306DA4", Offset = "0x1306DA4", VA = "0x1306DA4")]
			[DebuggerHidden]
			public <LoadAndExportAll>d__309(int <>1__state)
			{
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1306DCC", Offset = "0x1306DCC", VA = "0x1306DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0x1306DE8", Offset = "0x1306DE8", VA = "0x1306DE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x1307230", Offset = "0x1307230", VA = "0x1307230")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x13072E8", Offset = "0x13072E8", VA = "0x13072E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053D")]
		[CompilerGenerated]
		private sealed class <LoadTiltFile>d__310 : IEnumerable<Null>, IEnumerable, IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string filename;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__filename;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SceneSettings.RequestInstantSceneSwitch <unused>5__2;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x17000640")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60022A2")]
				[Address(RVA = "0x13076F0", Offset = "0x13076F0", VA = "0x13076F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000641")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A4")]
				[Address(RVA = "0x1307738", Offset = "0x1307738", VA = "0x1307738", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x1307330", Offset = "0x1307330", VA = "0x1307330")]
			[DebuggerHidden]
			public <LoadTiltFile>d__310(int <>1__state)
			{
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0x1307364", Offset = "0x1307364", VA = "0x1307364", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x1307384", Offset = "0x1307384", VA = "0x1307384", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x1307640", Offset = "0x1307640", VA = "0x1307640")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x13076F8", Offset = "0x13076F8", VA = "0x13076F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x1307740", Offset = "0x1307740", VA = "0x1307740", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Null> System.Collections.Generic.IEnumerable<TiltBrush.Null>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x13077EC", Offset = "0x13077EC", VA = "0x13077EC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200053E")]
		[CompilerGenerated]
		private sealed class <LoadAndExport>d__311 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Null> <>7__wrap1;

			[Token(Token = "0x17000642")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0x1307DA8", Offset = "0x1307DA8", VA = "0x1307DA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000643")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AE")]
				[Address(RVA = "0x1307DF0", Offset = "0x1307DF0", VA = "0x1307DF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x13077F0", Offset = "0x13077F0", VA = "0x13077F0")]
			[DebuggerHidden]
			public <LoadAndExport>d__311(int <>1__state)
			{
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x1307818", Offset = "0x1307818", VA = "0x1307818", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x130784C", Offset = "0x130784C", VA = "0x130784C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x1307C48", Offset = "0x1307C48", VA = "0x1307C48")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x1307CF8", Offset = "0x1307CF8", VA = "0x1307CF8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x1307DB0", Offset = "0x1307DB0", VA = "0x1307DB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053F")]
		[CompilerGenerated]
		private sealed class <DoProfiling>d__334 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool andQuit;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private TrTransform <oldWandPose>5__2;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private TrTransform <oldBrushPose>5__3;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private App.AppState <oldState>5__4;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TrTransform <camPose>5__5;

			[Token(Token = "0x17000644")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B2")]
				[Address(RVA = "0x13088D4", Offset = "0x13088D4", VA = "0x13088D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000645")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B4")]
				[Address(RVA = "0x130891C", Offset = "0x130891C", VA = "0x130891C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x1307DF8", Offset = "0x1307DF8", VA = "0x1307DF8")]
			[DebuggerHidden]
			public <DoProfiling>d__334(int <>1__state)
			{
			}

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x1307E20", Offset = "0x1307E20", VA = "0x1307E20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x1307E24", Offset = "0x1307E24", VA = "0x1307E24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x13088DC", Offset = "0x13088DC", VA = "0x13088DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EF4")]
		public const string kRemoveHeadsetFyi = "Remove headset to view.";

		[Token(Token = "0x4001EF5")]
		private const string kTiltBrushGalleryUrl = "https://poly.google.com/tiltbrush";

		[Token(Token = "0x4001EF6")]
		private const string kBlocksGalleryUrl = "https://poly.google.com/blocks";

		[Token(Token = "0x4001EF7")]
		private const string kPolyMainPageUri = "https://poly.google.com";

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchControlsScript m_Instance;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool sm_enableGrabHaptics;

		[Token(Token = "0x4001EFA")]
		private const float kControlPointHistoryMaxTime = 0.1f;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_SketchSurface;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SketchMemoryScript.PlaybackMode m_DefaultSketchPlaybackMode;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_GazeMaxAngleFromPointing;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_GazeMaxAngleFacingToForward;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_AtlasIconTextures;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveIconTool m_SaveIconTool;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_CreditsSketchFilename;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_AshleysSketchFilename;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DefaultSketchLoadSpeed;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_TransformGizmoPrefab;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_RotationIconPrefab;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_GazeMaxAngleFromFacing;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_GazeMaxDistance;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_GazeControllerPointingDistance;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_GazePanelDectivationDelay;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_UIReticle;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_UIReticleMobile;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_UIReticleSixDofController;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_DoubleTapWindow;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_PushPullScale;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RotationCursorScript m_RotationCursor;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_RotationMaxAngle;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_RotationScalar;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_RotationRollScalar;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_PanScalar;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_AdjustToolSizeScalar;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject m_IRCChatPrefab;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject m_YouTubeChatPrefab;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject m_Decor;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BaseTool.ToolType m_InitialTool;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_ReleaseNotesURL;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_HelpCenterURL;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string m_ThirdPartyNoticesURL;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string m_TosURL;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string m_PrivacyURL;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_QuestSideLoadingHowToURL;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Multiline]
		[SerializeField]
		private string m_ContributionPromoText;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string m_ContributionURL;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float m_WorldTransformMinScale;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float m_WorldTransformMaxScale;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[Header("Undo/Redo Hold")]
		private float m_UndoRedoHold_DurationBeforeStart;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float m_UndoRedoHold_RepeatInterval;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Header("Pin Cushion")]
		[SerializeField]
		private GameObject m_PinCushionPrefab;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Header("Grabbing and tossing")]
		[SerializeField]
		private float m_GrabWorldFadeSpeed;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private Color m_GrabWorldGridColor;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private ControllerGrabVisuals m_ControllerGrabVisuals;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float m_WidgetGpuIntersectionRadius;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[Header("Saving")]
		[SerializeField]
		private int m_NumStrokesForSaveIcon;

		[NonSerialized]
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Color m_GrabHighlightActiveColor;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float m_TossThresholdMeters;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float m_TossMaxPivotDistMeters;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SketchSurfacePanel m_SketchSurfacePanel;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private SketchMemoryScript.PlaybackMode m_SketchPlaybackMode;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject m_TransformGizmo;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TransformGizmoScript m_TransformGizmoScript;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject m_RotationIcon;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float m_MouseDeltaX;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float m_MouseDeltaY;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float m_MouseDeltaXScaled;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float m_MouseDeltaYScaled;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float m_PositionOffsetResetTapTime;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private bool m_EatToolScaleInput;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private PanelManager m_PanelManager;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private WidgetManager m_WidgetManager;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private PinCushion m_PinCushion;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool m_EatPinCushionInput;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private Ray m_CurrentGazeRay;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private Quaternion m_CurrentHeadOrientation;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private GazeResult[] m_GazeResults;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int m_CurrentGazeObject;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool m_EatInputGazeObject;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 m_CurrentGazeHitPoint;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Ray m_GazeControllerRay;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Ray m_GazeControllerRayActivePanel;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private bool m_ForcePanelActivation;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float m_GazePanelDectivationCountdown;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool m_PanelsVisibilityRequested;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24D")]
		private bool m_HeadOffset;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float m_UndoHold_Timer;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private float m_RedoHold_Timer;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private GrabState m_GrabBrush;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private GrabState m_GrabWand;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private WorldTransformResetState m_WorldTransformResetState;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private TrTransform m_WorldTransformResetXf;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private GrabWorldState m_GrabWorldState;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float m_WorldTransformFadeAmount;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool m_AllowWorldTransformLastFrame;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool m_WorldBeingGrabbed;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private TrTransform m_xfDropCamReset_RS;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Queue<GpuIntersectionResult> m_BrushResults;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Queue<GpuIntersectionResult> m_WandResults;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int m_WidgetGpuIntersectionLayer;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private GrabWidget m_CurrentGrabWidget;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private GrabWidget m_MaybeDriftingGrabWidget;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private GrabWidget m_PotentialGrabWidgetBrush;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private GrabWidget m_PotentialGrabWidgetWand;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private bool m_PotentialGrabWidgetBrushValid;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
		private bool m_PotentialGrabWidgetWandValid;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private GrabWidgetData m_BackupBrushGrabData;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private GrabWidgetData m_BackupWandGrabData;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private GrabWidgetState m_GrabWidgetState;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private GrabWidgetControllerInfo m_GrabWidgetOneHandInfo;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private TrTransform m_GrabWidgetTwoHandBrushPrev;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private TrTransform m_GrabWidgetTwoHandWandPrev;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private Queue<GrabWidgetHoldPoint> m_GrabWidgetHoldHistory;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Quaternion m_RotationOrigin;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private Vector2 m_RotationCursorOffset;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private bool m_RotationRollActive;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		private float m_RotationResetTapTime;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private RotationType m_CurrentRotationType;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private bool m_AutoOrientAfterRotation;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private Vector3 m_SurfaceForward;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		private Vector3 m_SurfaceRight;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private Vector3 m_SurfaceUp;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private Vector3 m_SurfaceLockOffset;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private Vector3 m_SurfaceLockBaseSurfacePosition;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		private Vector3 m_SurfaceLockBaseControllerPosition;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private Quaternion m_SurfaceLockBaseHeadRotation;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Quaternion m_SurfaceLockBaseControllerRotation;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private Quaternion m_SurfaceLockBaseSurfaceRotation;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private InputManager.ControllerName m_SurfaceLockActingController;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float m_SurfaceLockControllerBaseScalar;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private float m_SurfaceLockControllerScalar;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private bool m_PositioningPanelWithHead;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private Quaternion m_PositioningPanelBaseHeadRotation;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private Vector3 m_PositioningPanelOffset;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private float m_PositioningTimer;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private float m_PositioningSpeed;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private DraftingVisibilityOption m_DraftingVisibility;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private Vector3 m_SketchOrigin;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		private ControlsType m_ControlsType;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private GrabWidget m_IRCChatWidget;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private GrabWidget m_YouTubeChatWidget;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private MultiCamCaptureRig m_MultiCamCaptureRig;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private CameraPathCaptureRig m_CameraPathCaptureRig;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		private bool m_ViewOnly;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private InputState m_CurrentInputState;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private InputStateConfig[] m_InputStateConfigs;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		private GrabIntersectionState m_CurrentGrabIntersectionState;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private float m_WorldTransformSpeedSmoothed;

		[Token(Token = "0x17000629")]
		public MultiCamCaptureRig MultiCamCaptureRig
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x188E2B4", Offset = "0x188E2B4", VA = "0x188E2B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062A")]
		public CameraPathCaptureRig CameraPathCaptureRig
		{
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x188E2BC", Offset = "0x188E2BC", VA = "0x188E2BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062B")]
		public ControllerGrabVisuals ControllerGrabVisuals
		{
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x188E2C4", Offset = "0x188E2C4", VA = "0x188E2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062C")]
		public SketchMemoryScript.PlaybackMode SketchPlaybackMode
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x188E2CC", Offset = "0x188E2CC", VA = "0x188E2CC")]
			get
			{
				return default(SketchMemoryScript.PlaybackMode);
			}
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x188E2D4", Offset = "0x188E2D4", VA = "0x188E2D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700062D")]
		public Transform m_Canvas
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x188E2DC", Offset = "0x188E2DC", VA = "0x188E2DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062E")]
		public ControlsType ActiveControlsType
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x188E328", Offset = "0x188E328", VA = "0x188E328")]
			get
			{
				return default(ControlsType);
			}
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x188E330", Offset = "0x188E330", VA = "0x188E330")]
			set
			{
			}
		}

		[Token(Token = "0x1700062F")]
		public float WorldTransformMinScale
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x188E338", Offset = "0x188E338", VA = "0x188E338")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000630")]
		public float WorldTransformMaxScale
		{
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x188E374", Offset = "0x188E374", VA = "0x188E374")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000631")]
		public float GazeMaxDistance
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x188E3D4", Offset = "0x188E3D4", VA = "0x188E3D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000632")]
		public InputManager.ControllerName OneHandGrabController
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x188E3DC", Offset = "0x188E3DC", VA = "0x188E3DC")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x17000633")]
		private TrTransform GrabbedPose
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x188EE24", Offset = "0x188EE24", VA = "0x188EE24")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x188EE60", Offset = "0x188EE60", VA = "0x188EE60")]
			set
			{
			}
		}

		[Token(Token = "0x17000634")]
		public bool AtlasIconTextures
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x188EF94", Offset = "0x188EF94", VA = "0x188EF94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000635")]
		public IconTextureAtlas IconTextureAtlas
		{
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x188EF9C", Offset = "0x188EF9C", VA = "0x188EF9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x188E3AC", Offset = "0x188E3AC", VA = "0x188E3AC")]
		public void SetInitialTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x188E3B4", Offset = "0x188E3B4", VA = "0x188E3B4")]
		public void SetInFreePaintMode(bool bFreePaint)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x188E45C", Offset = "0x188E45C", VA = "0x188E45C")]
		public InputManager.ControllerName PotentialOneHandGrabController(GrabWidget widget)
		{
			return default(InputManager.ControllerName);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x188E518", Offset = "0x188E518", VA = "0x188E518")]
		public Vector3 GetSurfaceForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x188E528", Offset = "0x188E528", VA = "0x188E528")]
		public Vector3 GetSurfaceUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x188E538", Offset = "0x188E538", VA = "0x188E538")]
		public Vector3 GetSurfaceRight()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x188E548", Offset = "0x188E548", VA = "0x188E548")]
		public Vector3 GetSketchOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x188E558", Offset = "0x188E558", VA = "0x188E558")]
		public float GetDefaultSketchLoadSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x188E560", Offset = "0x188E560", VA = "0x188E560")]
		public Quaternion GetCurrentHeadOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x188E574", Offset = "0x188E574", VA = "0x188E574")]
		public Vector3 GetUIReticlePos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x188E59C", Offset = "0x188E59C", VA = "0x188E59C")]
		public Vector3 GetSweetSpotPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x188E5CC", Offset = "0x188E5CC", VA = "0x188E5CC")]
		public void SetSketchOrigin(Vector3 vOrigin)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x188E5DC", Offset = "0x188E5DC", VA = "0x188E5DC")]
		public void EatGazeObjectInput()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x188E66C", Offset = "0x188E66C", VA = "0x188E66C")]
		public void EatToolScaleInput()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x188E678", Offset = "0x188E678", VA = "0x188E678")]
		public void EatGrabInput()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x188E688", Offset = "0x188E688", VA = "0x188E688")]
		public bool ShouldRespondToPadInput(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x188E734", Offset = "0x188E734", VA = "0x188E734")]
		public void ForcePanelActivation(bool bForce)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x188E74C", Offset = "0x188E74C", VA = "0x188E74C")]
		public bool IsUserInteractingWithUI()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x188E770", Offset = "0x188E770", VA = "0x188E770")]
		public bool IsUIBlockingUndoRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x188E7B0", Offset = "0x188E7B0", VA = "0x188E7B0")]
		public bool IsUserAbleToInteractWithAnyWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x188E870", Offset = "0x188E870", VA = "0x188E870")]
		public bool IsUserInteractingWithAnyWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x188E8D0", Offset = "0x188E8D0", VA = "0x188E8D0")]
		public bool IsUserGrabbingAnyPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x188E988", Offset = "0x188E988", VA = "0x188E988")]
		public bool IsUsersBrushIntersectingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x188EA48", Offset = "0x188EA48", VA = "0x188EA48")]
		public bool IsUserIntersectingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x188EB1C", Offset = "0x188EB1C", VA = "0x188EB1C")]
		public bool IsUserInteractingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x188EBD4", Offset = "0x188EBD4", VA = "0x188EBD4")]
		public bool IsUserGrabbingWorld()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x188EBF4", Offset = "0x188EBF4", VA = "0x188EBF4")]
		public bool IsUserGrabbingWorldWithBrushHand()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x188EBFC", Offset = "0x188EBFC", VA = "0x188EBFC")]
		public bool IsUserTransformingWorld()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x188EC1C", Offset = "0x188EC1C", VA = "0x188EC1C")]
		public float GetGazePanelActivationRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x188EC2C", Offset = "0x188EC2C", VA = "0x188EC2C")]
		public bool IsCurrentGrabWidgetPinned()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x188EC64", Offset = "0x188EC64", VA = "0x188EC64")]
		public bool CanCurrentGrabWidgetBePinned()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x188EC98", Offset = "0x188EC98", VA = "0x188EC98")]
		public bool DidUserGrabWithBothInside()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x188ECB8", Offset = "0x188ECB8", VA = "0x188ECB8")]
		public bool IsUserGrabbingWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x188ED24", Offset = "0x188ED24", VA = "0x188ED24")]
		public bool IsUserTwoHandGrabbingWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x188ED34", Offset = "0x188ED34", VA = "0x188ED34")]
		public bool IsPinCushionShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x188ED50", Offset = "0x188ED50", VA = "0x188ED50")]
		public bool IsUserLookingAtPanel(BasePanel panel)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x188EE04", Offset = "0x188EE04", VA = "0x188EE04")]
		public SaveIconTool GetSaveIconTool()
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x188EE0C", Offset = "0x188EE0C", VA = "0x188EE0C")]
		public DropCamWidget GetDropCampWidget()
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x188EE14", Offset = "0x188EE14", VA = "0x188EE14")]
		public bool IsGrabWorldStateStable()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x188EEA4", Offset = "0x188EEA4", VA = "0x188EEA4")]
		public Transform GazeObjectTransform()
		{
			return null;
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x188EEE4", Offset = "0x188EEE4", VA = "0x188EEE4")]
		public void ForceShowUIReticle(bool bVisible)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x188EF04", Offset = "0x188EF04", VA = "0x188EF04")]
		public void SetUIReticleTransform(Vector3 vPos, Vector3 vForward)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x188EFE4", Offset = "0x188EFE4", VA = "0x188EFE4")]
		private void DismissPopupOnCurrentGazeObject(bool force)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x188F02C", Offset = "0x188F02C", VA = "0x188F02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x188F6BC", Offset = "0x188F6BC", VA = "0x188F6BC")]
		public void InitGazePanels()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x188F810", Offset = "0x188F810", VA = "0x188F810")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x188F858", Offset = "0x188F858", VA = "0x188F858")]
		private void Start()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x188FD3C", Offset = "0x188FD3C", VA = "0x188FD3C")]
		[IteratorStateMachine(typeof(<DelayedHidePanels>d__241))]
		private IEnumerator<Timeslice> DelayedHidePanels(int frames)
		{
			return null;
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x188FE1C", Offset = "0x188FE1C", VA = "0x188FE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x188FF2C", Offset = "0x188FF2C", VA = "0x188FF2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x188FF7C", Offset = "0x188FF7C", VA = "0x188FF7C")]
		public bool IsFreepaintToolReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1890064", Offset = "0x1890064", VA = "0x1890064")]
		public void UpdateControls()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x189509C", Offset = "0x189509C", VA = "0x189509C")]
		public void UpdateControlsPostIntro()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x18952A0", Offset = "0x18952A0", VA = "0x18952A0")]
		public void UpdateControlsForLoading()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1895338", Offset = "0x1895338", VA = "0x1895338")]
		public void UpdateControlsForReset()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x18953C0", Offset = "0x18953C0", VA = "0x18953C0")]
		public void UpdateControlsForUploading()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x18953F4", Offset = "0x18953F4", VA = "0x18953F4")]
		public void UpdateControlsForMemoryExceeded()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1890AEC", Offset = "0x1890AEC", VA = "0x1890AEC")]
		private void UpdatePinCushionVisibility()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1895454", Offset = "0x1895454", VA = "0x1895454")]
		private bool CanUsePinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1890668", Offset = "0x1890668", VA = "0x1890668")]
		private void UpdateCurrentGazeRay()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1890560", Offset = "0x1890560", VA = "0x1890560")]
		public void UpdateGazeObjectsAnimationState()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1890944", Offset = "0x1890944", VA = "0x1890944")]
		private void UpdateBaseInput()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x18950F4", Offset = "0x18950F4", VA = "0x18950F4")]
		private void UpdateSwapControllers()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1892754", Offset = "0x1892754", VA = "0x1892754")]
		private void UpdateStandardInput()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1898808", Offset = "0x1898808", VA = "0x1898808")]
		private bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x1898948", Offset = "0x1898948", VA = "0x1898948")]
		private bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1898914", Offset = "0x1898914", VA = "0x1898914")]
		private bool ShouldRepeatUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x1898A54", Offset = "0x1898A54", VA = "0x1898A54")]
		private bool ShouldRepeatRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1890BD8", Offset = "0x1890BD8", VA = "0x1890BD8")]
		private void UpdateGrab()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x1898A88", Offset = "0x1898A88", VA = "0x1898A88")]
		private void UpdateGrab_WasNone(GrabWidget rPrevPotentialBrush, GrabWidget rPrevPotentialWand)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1898F74", Offset = "0x1898F74", VA = "0x1898F74")]
		private void UpdateGrab_WasOneHand(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x1899764", Offset = "0x1899764", VA = "0x1899764")]
		private void UpdateGrab_WasTwoHands(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x189BF60", Offset = "0x189BF60", VA = "0x189BF60")]
		private void UpdateGrab_ContinuesTwoHands()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x189B0D0", Offset = "0x189B0D0", VA = "0x189B0D0")]
		private void UpdateGrab_NoneToOne(InputManager.ControllerName controllerName)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x189BA00", Offset = "0x189BA00", VA = "0x189BA00")]
		private void UpdateGrab_ToNone(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x189AAA8", Offset = "0x189AAA8", VA = "0x189AAA8")]
		private void RequestWidgetIntersection(List<GrabWidgetData> candidates, InputManager.ControllerName controllerName)
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x189ADC4", Offset = "0x189ADC4", VA = "0x189ADC4")]
		private GrabWidgetData GetBestWidget(List<GrabWidgetData> candidates, Queue<GpuIntersectionResult> resultQueue)
		{
			return null;
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x189BDAC", Offset = "0x189BDAC", VA = "0x189BDAC")]
		private void InitializeGrabWidgetControllerInfo(GrabWidgetControllerInfo info)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x189C7C8", Offset = "0x189C7C8", VA = "0x189C7C8")]
		private TrTransform GetWorkingTransform(GrabWidget w)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x189C8CC", Offset = "0x189C8CC", VA = "0x189C8CC")]
		public void RequestWorldTransformReset(bool toSavedXf = false)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1894E34", Offset = "0x1894E34", VA = "0x1894E34")]
		private void UpdateWorldTransformReset()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x189CAC8", Offset = "0x189CAC8", VA = "0x189CAC8")]
		private bool CheckToggleTiltProtection()
		{
			return default(bool);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x1899B54", Offset = "0x1899B54", VA = "0x1899B54")]
		private void UpdateGrab_World()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x189CBA8", Offset = "0x189CBA8", VA = "0x189CBA8")]
		private static Vector3 GetOverlap_Antisphere_Sphere(Vector3 lhsCenter, float lhsRadius, Vector3 rhsCenter, float rhsRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x189CCF8", Offset = "0x189CCF8", VA = "0x189CCF8")]
		public static bool IsValidScenePose(TrTransform xf, float radialBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x189CF3C", Offset = "0x189CF3C", VA = "0x189CF3C")]
		public static TrTransform MakeValidSceneMove(TrTransform scene0, TrTransform scene1, float radialBounds)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x189CDCC", Offset = "0x189CDCC", VA = "0x189CDCC")]
		public static TrTransform MakeValidScenePose(TrTransform scenePose, float radialBounds)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x189C778", Offset = "0x189C778", VA = "0x189C778")]
		private void ClearGrabWidgetHoldHistory()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x189BB54", Offset = "0x189BB54", VA = "0x189BB54")]
		private void UpdateGrabWidgetHoldHistory(InputManager.ControllerName name)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x189B3CC", Offset = "0x189B3CC", VA = "0x189B3CC")]
		private bool GetGrabWidgetHoldHistory(out Vector3 vLinearVelocity, out Vector3 vAngularVelocity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x189BD0C", Offset = "0x189BD0C", VA = "0x189BD0C")]
		private bool IsControllerNearWidget(InputManager.ControllerName name, GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1890ECC", Offset = "0x1890ECC", VA = "0x1890ECC")]
		private void RefreshCurrentGazeObject()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1892100", Offset = "0x1892100", VA = "0x1892100")]
		private void UpdateActiveGazeObject()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x189C850", Offset = "0x189C850", VA = "0x189C850")]
		public void ResetActivePanel()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1893818", Offset = "0x1893818", VA = "0x1893818")]
		private void UpdatePanInput()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1893A24", Offset = "0x1893A24", VA = "0x1893A24")]
		private void UpdateRotationInput()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1894524", Offset = "0x1894524", VA = "0x1894524")]
		private void UpdateHeadLockInput()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1894838", Offset = "0x1894838", VA = "0x1894838")]
		private void UpdateControllerLock()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1894B64", Offset = "0x1894B64", VA = "0x1894B64")]
		private void UpdatePushPullInput()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1894D24", Offset = "0x1894D24", VA = "0x1894D24")]
		private void UpdateSaveInput()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1894DAC", Offset = "0x1894DAC", VA = "0x1894DAC")]
		private void UpdateLoadInput()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x189D9FC", Offset = "0x189D9FC", VA = "0x189D9FC")]
		private void OnBrushSetToDefault()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x189DAAC", Offset = "0x189DAAC", VA = "0x189DAAC")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x189DF58", Offset = "0x189DF58", VA = "0x189DF58")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x18982D8", Offset = "0x18982D8", VA = "0x18982D8")]
		private void SwitchState(InputState rDesiredState)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x189BCF4", Offset = "0x189BCF4", VA = "0x189BCF4")]
		public void RequestPanelsVisibility(bool bVisible)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x189D24C", Offset = "0x189D24C", VA = "0x189D24C")]
		private Quaternion OrientSketchSurfaceToUp()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x189D624", Offset = "0x189D624", VA = "0x189D624")]
		private Quaternion OrientSketchSurfaceToForward()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x188FB6C", Offset = "0x188FB6C", VA = "0x188FB6C")]
		private void ResetGrabbedPose(bool everything = false)
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x189E008", Offset = "0x189E008", VA = "0x189E008")]
		public void ResetSketchSurfaceOrientation()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1890904", Offset = "0x1890904", VA = "0x1890904")]
		private float GetAppropriateMovementScalar()
		{
			return default(float);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x189E0F8", Offset = "0x189E0F8", VA = "0x189E0F8")]
		[IteratorStateMachine(typeof(<RenderPathAndQuit>d__305))]
		private IEnumerator RenderPathAndQuit()
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x189E160", Offset = "0x189E160", VA = "0x189E160")]
		[IteratorStateMachine(typeof(<ExportListAndQuit>d__306))]
		private IEnumerator<Null> ExportListAndQuit()
		{
			return null;
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x189E1C8", Offset = "0x189E1C8", VA = "0x189E1C8")]
		private void QuitApp()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x189E1D0", Offset = "0x189E1D0", VA = "0x189E1D0")]
		[IteratorStateMachine(typeof(<LoadAndExportList>d__308))]
		private IEnumerator<Null> LoadAndExportList(List<string> filenames)
		{
			return null;
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x189E244", Offset = "0x189E244", VA = "0x189E244")]
		[IteratorStateMachine(typeof(<LoadAndExportAll>d__309))]
		private IEnumerator<Null> LoadAndExportAll()
		{
			return null;
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x189E2AC", Offset = "0x189E2AC", VA = "0x189E2AC")]
		[IteratorStateMachine(typeof(<LoadTiltFile>d__310))]
		public IEnumerable<Null> LoadTiltFile(string filename)
		{
			return null;
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x189E324", Offset = "0x189E324", VA = "0x189E324")]
		[IteratorStateMachine(typeof(<LoadAndExport>d__311))]
		private IEnumerator<Null> LoadAndExport(string filename)
		{
			return null;
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x18981C4", Offset = "0x18981C4", VA = "0x18981C4")]
		private IEnumerator<Null> ExportCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x189E398", Offset = "0x189E398", VA = "0x189E398")]
		private void SaveModel()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x189E39C", Offset = "0x189E39C", VA = "0x189E39C")]
		public void GenerateReplacementSaveIcon()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x189E530", Offset = "0x189E530", VA = "0x189E530")]
		public void GenerateBestGuessSaveIcon()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x189E574", Offset = "0x189E574", VA = "0x189E574")]
		public TrTransform GenerateBestGuessSaveIconTransform(int itemsToEnumerate = 0)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x189EC2C", Offset = "0x189EC2C", VA = "0x189EC2C")]
		public void GenerateBoundingBoxSaveIcon()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x189EF54", Offset = "0x189EF54", VA = "0x189EF54")]
		private void MergeBrushStrokes(SceneFileInfo fileInfo)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x189F0EC", Offset = "0x189F0EC", VA = "0x189F0EC")]
		private void LoadSketch(SceneFileInfo fileInfo, bool quickload = false, bool additive = false)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x18955CC", Offset = "0x18955CC", VA = "0x18955CC")]
		public void IssueGlobalCommand(GlobalCommands rEnum, int iParam1 = -1, int iParam2 = -1, [Optional] string sParam)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x189F338", Offset = "0x189F338", VA = "0x189F338")]
		private void LoadNamed(string path, bool quickload, bool additive)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x189FAB8", Offset = "0x189FAB8", VA = "0x189FAB8")]
		private void OpenUrl(string url)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x189FB90", Offset = "0x189FB90", VA = "0x189FB90")]
		public bool IsCommandActive(GlobalCommands rEnum, int iParam = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x189F538", Offset = "0x189F538", VA = "0x189F538")]
		public void NewSketch(bool fade)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x189C9A8", Offset = "0x189C9A8", VA = "0x189C9A8")]
		private bool WorldIsReset(bool toSavedXf)
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x18A00F4", Offset = "0x18A00F4", VA = "0x18A00F4")]
		public bool IsCommandAvailable(GlobalCommands rEnum, int iParam = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x18A0BCC", Offset = "0x18A0BCC", VA = "0x18A0BCC")]
		public bool SketchHasChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x18A1028", Offset = "0x18A1028", VA = "0x18A1028")]
		public void OpenPanelOfType(BasePanel.PanelType type, TrTransform trSpawnXf)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x18A1070", Offset = "0x18A1070", VA = "0x18A1070")]
		public void RestoreFloatingPanels()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x188FDB4", Offset = "0x188FDB4", VA = "0x188FDB4")]
		public void UpdateDraftingVisibility()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x189F904", Offset = "0x189F904", VA = "0x189F904")]
		private void ToggleProfiling()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x189FA70", Offset = "0x189FA70", VA = "0x189FA70")]
		private void DoAutoProfile()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x189FA94", Offset = "0x189FA94", VA = "0x189FA94")]
		private void DoAutoProfileAndQuit()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x18A10C0", Offset = "0x18A10C0", VA = "0x18A10C0")]
		[IteratorStateMachine(typeof(<DoProfiling>d__334))]
		private IEnumerator DoProfiling(bool andQuit = false)
		{
			return null;
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x18A113C", Offset = "0x18A113C", VA = "0x18A113C")]
		public SketchControlsScript()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public static class EnumExtensions
	{
		[Token(Token = "0x60022B5")]
		public static bool HasFlag<T>(this T flags, T flag) where T : struct, IConvertible
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000541")]
	public class SketchMemoryScript : MonoBehaviour
	{
		[Token(Token = "0x2000542")]
		[Flags]
		public enum StrokeFlags
		{
			[Token(Token = "0x4002091")]
			None = 0,
			[Token(Token = "0x4002092")]
			Deprecated1 = 1,
			[Token(Token = "0x4002093")]
			IsGroupContinue = 2
		}

		[Token(Token = "0x2000543")]
		public enum PlaybackMode
		{
			[Token(Token = "0x4002095")]
			Distance,
			[Token(Token = "0x4002096")]
			Timestamps
		}

		[Token(Token = "0x2000545")]
		[CompilerGenerated]
		private sealed class <RepaintCoroutine>d__85 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SketchMemoryScript <>4__this;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <numStrokes>5__2;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <strokesRepainted>5__3;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalPrevVerts>5__4;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVerts>5__5;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool[] <batchEnabled>5__6;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <batchEnabledIndex>5__7;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private LinkedListNode<Stroke> <node>5__8;

			[Token(Token = "0x17000652")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002305")]
				[Address(RVA = "0x130E4D0", Offset = "0x130E4D0", VA = "0x130E4D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000653")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002307")]
				[Address(RVA = "0x130E518", Offset = "0x130E518", VA = "0x130E518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x130C2DC", Offset = "0x130C2DC", VA = "0x130C2DC")]
			[DebuggerHidden]
			public <RepaintCoroutine>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x130DCF0", Offset = "0x130DCF0", VA = "0x130DCF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002304")]
			[Address(RVA = "0x130DCF4", Offset = "0x130DCF4", VA = "0x130DCF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0x130E4D8", Offset = "0x130E4D8", VA = "0x130E4D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchMemoryScript m_Instance;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_UndoBatchMeshPrefab;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_UndoBatchMesh;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_SanityCheckStrokes;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_LastCheckedVertCount;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_MemoryWarningVertCount;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stack<BaseCommand> m_OperationStack;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stack<BaseCommand> m_RedoStack;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LinkedList<Stroke> m_MemoryList;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LinkedListNode<Stroke> m_CurrentNodeByTime;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IScenePlayback m_ScenePlayback;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_IsInitialPlay;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private PlaybackMode m_PlaybackMode;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_DistancePerSecond;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_LastOperationStackCount;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_HasVisibleObjects;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_MemoryExceeded;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool m_MemoryWarningAccepted;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<Stroke> m_DeleteStrokes;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BaseCommand m_RepaintStrokeParent;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TrTransform m_xfSketchInitial_RS;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_RepaintCoroutine;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_RepaintProgress;

		[Token(Token = "0x17000646")]
		public float RepaintProgress
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x1308A78", Offset = "0x1308A78", VA = "0x1308A78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000647")]
		public TrTransform InitialSketchTransform
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x1308A90", Offset = "0x1308A90", VA = "0x1308A90")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x1308A9C", Offset = "0x1308A9C", VA = "0x1308A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000648")]
		public bool IsPlayingBack
		{
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x1308AA8", Offset = "0x1308AA8", VA = "0x1308AA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000649")]
		public float PlaybackMetersPerSecond
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x1308AB8", Offset = "0x1308AB8", VA = "0x1308AB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700064A")]
		public bool MemoryExceeded
		{
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x1308BA4", Offset = "0x1308BA4", VA = "0x1308BA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700064B")]
		public bool MemoryWarningAccepted
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x1308BAC", Offset = "0x1308BAC", VA = "0x1308BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x1308BB4", Offset = "0x1308BB4", VA = "0x1308BB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700064C")]
		public float MemoryExceededRatio
		{
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x1308C10", Offset = "0x1308C10", VA = "0x1308C10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700064D")]
		public int StrokeCount
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x1308C24", Offset = "0x1308C24", VA = "0x1308C24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700064E")]
		public LinkedList<Stroke> GetMemoryList
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x1308C6C", Offset = "0x1308C6C", VA = "0x1308C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064F")]
		public Stroke MostRecentStroke
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x1308CE8", Offset = "0x1308CE8", VA = "0x1308CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000650")]
		public LinkedListNode<Stroke> FirstNodeByTime
		{
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x1308D30", Offset = "0x1308D30", VA = "0x1308D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000651")]
		public LinkedListNode<Stroke> CurrentNodeByTime
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x1308D78", Offset = "0x1308D78", VA = "0x1308D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OperationStackChanged
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x1308924", Offset = "0x1308924", VA = "0x1308924")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x13089C0", Offset = "0x13089C0", VA = "0x13089C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1308A5C", Offset = "0x1308A5C", VA = "0x1308A5C")]
		public static void SetFlag(ref StrokeFlags flags, StrokeFlags flag, bool flagValue)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1308ACC", Offset = "0x1308ACC", VA = "0x1308ACC")]
		public float GetDrawnPercent()
		{
			return default(float);
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1308B9C", Offset = "0x1308B9C", VA = "0x1308B9C")]
		public bool HasVisibleObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x1308C74", Offset = "0x1308C74", VA = "0x1308C74")]
		public Stroke GetStrokeAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1308D80", Offset = "0x1308D80", VA = "0x1308D80")]
		public void SetLastOperationStackCount()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1308DCC", Offset = "0x1308DCC", VA = "0x1308DCC")]
		public bool WillVertCountPutUsOverTheMemoryLimit(int numVerts)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1308EC8", Offset = "0x1308EC8", VA = "0x1308EC8")]
		private void CheckSketchForOverMemoryLimit()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x1309060", Offset = "0x1309060", VA = "0x1309060")]
		public bool IsMemoryDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x13091C4", Offset = "0x13091C4", VA = "0x13091C4")]
		public bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x1309214", Offset = "0x1309214", VA = "0x1309214")]
		public bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x1309264", Offset = "0x1309264", VA = "0x1309264")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x13093C8", Offset = "0x13093C8", VA = "0x13093C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1309B4C", Offset = "0x1309B4C", VA = "0x1309B4C")]
		public Stroke DuplicateStroke(Stroke srcStroke, CanvasScript canvas, TrTransform? transform)
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x13099F8", Offset = "0x13099F8", VA = "0x13099F8")]
		public void PerformAndRecordCommand(BaseCommand command, bool discardIfNotMerged = false)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x130A360", Offset = "0x130A360", VA = "0x130A360")]
		public void RecordCommand(BaseCommand command)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x130A464", Offset = "0x130A464", VA = "0x130A464")]
		public double GetApproximateLatestTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x130A59C", Offset = "0x130A59C", VA = "0x130A59C")]
		public double GetEarliestTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x130A694", Offset = "0x130A694", VA = "0x130A694")]
		private static bool StrokeTimeLT(Stroke a, Stroke b)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x130A6D0", Offset = "0x130A6D0", VA = "0x130A6D0")]
		private static bool StrokeTimeLTE(Stroke a, Stroke b)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x130A0F8", Offset = "0x130A0F8", VA = "0x130A0F8")]
		public void MemoryListAdd(Stroke stroke)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x130A6F4", Offset = "0x130A6F4", VA = "0x130A6F4")]
		public void MemorizeBatchedBrushStroke(BatchSubset subset, Color rColor, Guid brushGuid, float fBrushSize, float brushScale, List<PointerManager.ControlPoint> rControlPoints, StrokeFlags strokeFlags, StencilWidget stencil, float lineLength, int seed)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x130AE40", Offset = "0x130AE40", VA = "0x130AE40")]
		public void MemorizeBrushStroke(BaseBrushScript brushScript, Color rColor, Guid brushGuid, float fBrushSize, float brushScale, List<PointerManager.ControlPoint> rControlPoints, StrokeFlags strokeFlags, StencilWidget stencil, float lineLength)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x130B038", Offset = "0x130B038", VA = "0x130B038")]
		public void MemorizeDeleteSelection(Stroke strokeObj)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x130B178", Offset = "0x130B178", VA = "0x130B178")]
		public void MemorizeDeleteSelection(GameObject rObject)
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x130B224", Offset = "0x130B224", VA = "0x130B224")]
		public bool MemorizeStrokeRepaint(Stroke stroke, bool recolor, bool rebrush, bool resize, bool jitter = false, bool force = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x130B720", Offset = "0x130B720", VA = "0x130B720")]
		public bool MemorizeStrokeRepaint(GameObject rObject, bool recolor, bool rebrush, bool resize, bool jitter = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x130B804", Offset = "0x130B804", VA = "0x130B804")]
		public void RemoveMemoryObject(Stroke stroke)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x130B934", Offset = "0x130B934", VA = "0x130B934")]
		public void SanitizeMemoryList()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x130BA10", Offset = "0x130BA10", VA = "0x130BA10")]
		public List<Stroke> GetAllUnselectedActiveStrokes()
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x13097E0", Offset = "0x13097E0", VA = "0x13097E0")]
		public void ClearRedo()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x130BB28", Offset = "0x130BB28", VA = "0x130BB28")]
		public void ClearMemory()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x130C274", Offset = "0x130C274", VA = "0x130C274")]
		[IteratorStateMachine(typeof(<RepaintCoroutine>d__85))]
		public IEnumerator<float> RepaintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x130C304", Offset = "0x130C304", VA = "0x130C304")]
		public void StepBack()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x130C3A4", Offset = "0x130C3A4", VA = "0x130C3A4")]
		public void StepForward()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x130C444", Offset = "0x130C444", VA = "0x130C444")]
		public static IEnumerable<Stroke> AllStrokes()
		{
			return null;
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x130C498", Offset = "0x130C498", VA = "0x130C498")]
		public static int AllStrokesCount()
		{
			return default(int);
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1309968", Offset = "0x1309968", VA = "0x1309968")]
		public static void InitUndoObject(BaseBrushScript rBrushScript)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x130997C", Offset = "0x130997C", VA = "0x130997C")]
		public static void InitUndoObject(BatchSubset subset)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x130C504", Offset = "0x130C504", VA = "0x130C504")]
		public void UnrenderStrokeMemoryObject(Stroke stroke)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x130C634", Offset = "0x130C634", VA = "0x130C634")]
		public void SetPlaybackMode(PlaybackMode mode, float distancePerSecond)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x130C640", Offset = "0x130C640", VA = "0x130C640")]
		public void SpeedUpMemoryDrawingSpeed()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x130C654", Offset = "0x130C654", VA = "0x130C654")]
		public void QuickLoadDrawingMemory()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x130C700", Offset = "0x130C700", VA = "0x130C700")]
		public void BeginDrawingFromMemory(bool bDrawFromStart, bool forEdit = false, bool playAudio = true)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x130C874", Offset = "0x130C874", VA = "0x130C874")]
		public bool ContinueDrawingFromMemory()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x130CB18", Offset = "0x130CB18", VA = "0x130CB18")]
		private void SortMemoryList()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x130CCC4", Offset = "0x130CCC4", VA = "0x130CCC4")]
		public void Redraw(bool doSort)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x130D144", Offset = "0x130D144", VA = "0x130D144")]
		private static string Compare(Vector3[] oldVerts, int iOldVert0, int iOldVert1, int[] oldTris, int iOldTri0, int iOldTri1, Vector2[] oldUv0s, BaseBrushScript newBrush)
		{
			return null;
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x130D400", Offset = "0x130D400", VA = "0x130D400")]
		private static void SanityCheckVersusReplacementBrush(Stroke oldStroke)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x130D6A4", Offset = "0x130D6A4", VA = "0x130D6A4")]
		private static string Compare(Mesh oldMesh, BaseBrushScript newBrush)
		{
			return null;
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x130A9A8", Offset = "0x130A9A8", VA = "0x130A9A8")]
		private static void SanityCheckGeometryGeneration(Stroke oldStroke)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x130A054", Offset = "0x130A054", VA = "0x130A054")]
		private static void UpdateTimestampsToCurrentSketchTime(Stroke stroke)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x130D710", Offset = "0x130D710", VA = "0x130D710")]
		public static LinkedListNode<Stroke> GetNodeAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x130D7BC", Offset = "0x130D7BC", VA = "0x130D7BC")]
		public static List<Stroke> GetStrokesBetween(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x130D9C0", Offset = "0x130D9C0", VA = "0x130D9C0")]
		public SketchMemoryScript()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class StraightEdgeGuideScript : MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		public enum Shape
		{
			[Token(Token = "0x40020B3")]
			None = -1,
			[Token(Token = "0x40020B4")]
			Line,
			[Token(Token = "0x40020B5")]
			Circle,
			[Token(Token = "0x40020B6")]
			Sphere
		}

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MinDisplayLength;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_SnapDisabledDelay;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D[] m_ShapeTextures;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_MeterYOffset;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_MeterDisplay;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_ShowMeter;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_vOrigin_CS;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_TargetPos_CS;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_SnapEnabledTimeStamp;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_SnapActive;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Shape m_CurrentShape;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Shape m_TempShape;

		[Token(Token = "0x17000654")]
		public Shape CurrentShape
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0x130E574", Offset = "0x130E574", VA = "0x130E574")]
			get
			{
				return default(Shape);
			}
		}

		[Token(Token = "0x17000655")]
		public Shape TempShape
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x130E57C", Offset = "0x130E57C", VA = "0x130E57C")]
			get
			{
				return default(Shape);
			}
		}

		[Token(Token = "0x17000656")]
		public bool SnapEnabled
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0x130E5B0", Offset = "0x130E5B0", VA = "0x130E5B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600230F")]
			[Address(RVA = "0x130E5DC", Offset = "0x130E5DC", VA = "0x130E5DC")]
			set
			{
			}
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x130E584", Offset = "0x130E584", VA = "0x130E584")]
		public Vector3 GetTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x130E590", Offset = "0x130E590", VA = "0x130E590")]
		public bool IsShowingMeter()
		{
			return default(bool);
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x130E598", Offset = "0x130E598", VA = "0x130E598")]
		public void FlipMeter()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x130E5A8", Offset = "0x130E5A8", VA = "0x130E5A8")]
		public void ForceSnapDisabled()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x130E5FC", Offset = "0x130E5FC", VA = "0x130E5FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x130E6CC", Offset = "0x130E6CC", VA = "0x130E6CC")]
		public void ShowGuide(Vector3 vOrigin)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x130E650", Offset = "0x130E650", VA = "0x130E650")]
		public void HideGuide()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x130E7C4", Offset = "0x130E7C4", VA = "0x130E7C4")]
		public void SetTempShape(Shape s)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x130E7D8", Offset = "0x130E7D8", VA = "0x130E7D8")]
		public void ResolveTempShape()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x130E84C", Offset = "0x130E84C", VA = "0x130E84C")]
		public Texture2D GetCurrentButtonTexture()
		{
			return null;
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x130E880", Offset = "0x130E880", VA = "0x130E880")]
		public static Vector3 ApplySnap(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x130EB74", Offset = "0x130EB74", VA = "0x130EB74")]
		private void UpdateMeter(Vector3 vOrigin, Vector3 vTarget)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x130F218", Offset = "0x130F218", VA = "0x130F218")]
		public void UpdateTarget(Vector3 vPointer)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x130F3CC", Offset = "0x130F3CC", VA = "0x130F3CC")]
		public StraightEdgeGuideScript()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class Stroke : StrokeData
	{
		[Token(Token = "0x2000549")]
		public enum Type
		{
			[Token(Token = "0x40020C2")]
			NotCreated,
			[Token(Token = "0x40020C3")]
			BrushStroke,
			[Token(Token = "0x40020C4")]
			BatchedBrushStroke
		}

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Type m_Type;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasScript m_IntendedCanvas;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasScript m_PreviousCanvas;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject m_Object;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BatchSubset m_BatchSubset;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LinkedListNode<Stroke> m_NodeByTime;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LinkedListNode<Stroke> m_PlaybackNode;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StrokeData m_CopyForSaveThread;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool[] m_ControlPointsToDrop;

		[Token(Token = "0x17000657")]
		public SketchGroupTag Group
		{
			[Token(Token = "0x600231A")]
			[Address(RVA = "0x130F3E8", Offset = "0x130F3E8", VA = "0x130F3E8")]
			get
			{
				return default(SketchGroupTag);
			}
			[Token(Token = "0x600231B")]
			[Address(RVA = "0x130F3F0", Offset = "0x130F3F0", VA = "0x130F3F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0x130D5C8", Offset = "0x130D5C8", VA = "0x130D5C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000659")]
		public bool IsGeometryEnabled
		{
			[Token(Token = "0x600231D")]
			[Address(RVA = "0x130DB64", Offset = "0x130DB64", VA = "0x130DB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065A")]
		public bool IsVisibleForPlayback
		{
			[Token(Token = "0x600231E")]
			[Address(RVA = "0x130F47C", Offset = "0x130F47C", VA = "0x130F47C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065B")]
		public uint HeadTimestampMs
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0x130A66C", Offset = "0x130A66C", VA = "0x130A66C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700065C")]
		public uint TailTimestampMs
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x130A540", Offset = "0x130A540", VA = "0x130A540")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700065D")]
		public float SizeInLocalSpace
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x130F484", Offset = "0x130F484", VA = "0x130F484")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700065E")]
		public float SizeInRoomSpace
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x130F490", Offset = "0x130F490", VA = "0x130F490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700065F")]
		public Transform StrokeTransform
		{
			[Token(Token = "0x6002323")]
			[Address(RVA = "0x130F51C", Offset = "0x130F51C", VA = "0x130F51C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x130A8F4", Offset = "0x130A8F4", VA = "0x130A8F4")]
		public Stroke()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x1309CA0", Offset = "0x1309CA0", VA = "0x1309CA0")]
		public Stroke(Stroke existing)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x130F6AC", Offset = "0x130F6AC", VA = "0x130F6AC")]
		public StrokeData GetCopyForSaveThread()
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x130F718", Offset = "0x130F718", VA = "0x130F718")]
		public void InvalidateCopy()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x130C268", Offset = "0x130C268", VA = "0x130C268")]
		public void DestroyStroke()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x130C56C", Offset = "0x130C56C", VA = "0x130C56C")]
		public void Uncreate()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x1309E98", Offset = "0x1309E98", VA = "0x1309E98")]
		public void Recreate([Optional] TrTransform? leftTransform, [Optional] CanvasScript canvas)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x1309DA0", Offset = "0x1309DA0", VA = "0x1309DA0")]
		public void CopyGeometry(CanvasScript targetCanvas, Stroke baseStroke)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x130F87C", Offset = "0x130F87C", VA = "0x130F87C")]
		private void LeftTransformControlPoints(TrTransform leftTransform)
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x130F720", Offset = "0x130F720", VA = "0x130F720")]
		public void SetParent(CanvasScript canvas)
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x130F9FC", Offset = "0x130F9FC", VA = "0x130F9FC")]
		public void SetParentKeepWorldPosition(CanvasScript canvas, [Optional] TrTransform? leftTransform)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x130FD94", Offset = "0x130FD94", VA = "0x130FD94")]
		public void Hide(bool hide)
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class StrokeData
	{
		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color m_Color;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Guid m_BrushGuid;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BrushSize;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BrushScale;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerManager.ControlPoint[] m_ControlPoints;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SketchMemoryScript.StrokeFlags m_Flags;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_Seed;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SketchGroupTag m_Group;

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x130F5B4", Offset = "0x130F5B4", VA = "0x130F5B4")]
		public StrokeData([Optional] StrokeData existing)
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class SwitchAppName : MonoBehaviour
	{
		[Token(Token = "0x6002331")]
		[Address(RVA = "0x130FEF8", Offset = "0x130FEF8", VA = "0x130FEF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1310048", Offset = "0x1310048", VA = "0x1310048")]
		private string Switch(string target)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x13100B4", Offset = "0x13100B4", VA = "0x13100B4")]
		public SwitchAppName()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class Switchboard
	{
		[Token(Token = "0x14000037")]
		public event Action ToolChanged
		{
			[Token(Token = "0x6002334")]
			[Address(RVA = "0x13100BC", Offset = "0x13100BC", VA = "0x13100BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002335")]
			[Address(RVA = "0x1310158", Offset = "0x1310158", VA = "0x1310158")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action MirrorVisibilityChanged
		{
			[Token(Token = "0x6002336")]
			[Address(RVA = "0x13101F4", Offset = "0x13101F4", VA = "0x13101F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x1310290", Offset = "0x1310290", VA = "0x1310290")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action PanelDismissed
		{
			[Token(Token = "0x6002338")]
			[Address(RVA = "0x131032C", Offset = "0x131032C", VA = "0x131032C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002339")]
			[Address(RVA = "0x13103C8", Offset = "0x13103C8", VA = "0x13103C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action StencilModeChanged
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0x1310464", Offset = "0x1310464", VA = "0x1310464")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600233B")]
			[Address(RVA = "0x1310500", Offset = "0x1310500", VA = "0x1310500")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action StencilAttractDistChanged
		{
			[Token(Token = "0x600233C")]
			[Address(RVA = "0x131059C", Offset = "0x131059C", VA = "0x131059C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600233D")]
			[Address(RVA = "0x1310638", Offset = "0x1310638", VA = "0x1310638")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action AudioReactiveStateChanged
		{
			[Token(Token = "0x600233E")]
			[Address(RVA = "0x13106D4", Offset = "0x13106D4", VA = "0x13106D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600233F")]
			[Address(RVA = "0x1310770", Offset = "0x1310770", VA = "0x1310770")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action MemoryExceededChanged
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0x131080C", Offset = "0x131080C", VA = "0x131080C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002341")]
			[Address(RVA = "0x13108A8", Offset = "0x13108A8", VA = "0x13108A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action MemoryWarningAcceptedChanged
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0x1310944", Offset = "0x1310944", VA = "0x1310944")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x13109E0", Offset = "0x13109E0", VA = "0x13109E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action CameraPathVisibilityChanged
		{
			[Token(Token = "0x6002344")]
			[Address(RVA = "0x1310A7C", Offset = "0x1310A7C", VA = "0x1310A7C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002345")]
			[Address(RVA = "0x1310B18", Offset = "0x1310B18", VA = "0x1310B18")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event Action CameraPathKnotChanged
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0x1310BB4", Offset = "0x1310BB4", VA = "0x1310BB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002347")]
			[Address(RVA = "0x1310C50", Offset = "0x1310C50", VA = "0x1310C50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action CameraPathDeleted
		{
			[Token(Token = "0x6002348")]
			[Address(RVA = "0x1310CEC", Offset = "0x1310CEC", VA = "0x1310CEC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002349")]
			[Address(RVA = "0x1310D88", Offset = "0x1310D88", VA = "0x1310D88")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action<CameraPathTool.Mode> CameraPathModeChanged
		{
			[Token(Token = "0x600234A")]
			[Address(RVA = "0x1310E24", Offset = "0x1310E24", VA = "0x1310E24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600234B")]
			[Address(RVA = "0x1310ED4", Offset = "0x1310ED4", VA = "0x1310ED4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action CameraPathCreated
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x1310F84", Offset = "0x1310F84", VA = "0x1310F84")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x1311020", Offset = "0x1311020", VA = "0x1311020")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action CurrentCameraPathChanged
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x13110BC", Offset = "0x13110BC", VA = "0x13110BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x1311158", Offset = "0x1311158", VA = "0x1311158")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action AllWidgetsDestroyed
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x13111F4", Offset = "0x13111F4", VA = "0x13111F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x1311290", Offset = "0x1311290", VA = "0x1311290")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action SelectionChanged
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0x131132C", Offset = "0x131132C", VA = "0x131132C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x13113C8", Offset = "0x13113C8", VA = "0x13113C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action<VideoWidget> VideoWidgetActivated
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0x1311464", Offset = "0x1311464", VA = "0x1311464")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x1311514", Offset = "0x1311514", VA = "0x1311514")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action VideoRecordingStopped
		{
			[Token(Token = "0x6002356")]
			[Address(RVA = "0x13115C4", Offset = "0x13115C4", VA = "0x13115C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x1311660", Offset = "0x1311660", VA = "0x1311660")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x13116FC", Offset = "0x13116FC", VA = "0x13116FC")]
		public void TriggerAdvancedPanelsChanged()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1311740", Offset = "0x1311740", VA = "0x1311740")]
		public void TriggerToolChanged()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x131175C", Offset = "0x131175C", VA = "0x131175C")]
		public void TriggerMirrorVisibilityChanged()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1311778", Offset = "0x1311778", VA = "0x1311778")]
		public void TriggerPanelDismissed()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1311794", Offset = "0x1311794", VA = "0x1311794")]
		public void TriggerStencilModeChanged()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x13117B0", Offset = "0x13117B0", VA = "0x13117B0")]
		public void TriggerStencilAttractDistChanged()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x13117CC", Offset = "0x13117CC", VA = "0x13117CC")]
		public void TriggerAudioReactiveStateChanged()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x1309044", Offset = "0x1309044", VA = "0x1309044")]
		public void TriggerMemoryExceededChanged()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x1308BF4", Offset = "0x1308BF4", VA = "0x1308BF4")]
		public void TriggerMemoryWarningAcceptedChanged()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x13117E8", Offset = "0x13117E8", VA = "0x13117E8")]
		public void TriggerCameraPathVisibilityChanged()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1311804", Offset = "0x1311804", VA = "0x1311804")]
		public void TriggerCameraPathKnotChanged()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x1311820", Offset = "0x1311820", VA = "0x1311820")]
		public void TriggerCameraPathDeleted()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x131183C", Offset = "0x131183C", VA = "0x131183C")]
		public void TriggerCameraPathModeChanged(CameraPathTool.Mode mode)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x1311858", Offset = "0x1311858", VA = "0x1311858")]
		public void TriggerCameraPathCreated()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1311874", Offset = "0x1311874", VA = "0x1311874")]
		public void TriggerCurrentCameraPathChanged()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1311890", Offset = "0x1311890", VA = "0x1311890")]
		public void TriggerAllWidgetsDestroyed()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x13118AC", Offset = "0x13118AC", VA = "0x13118AC")]
		public void TriggerSelectionChanged()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x13118C8", Offset = "0x13118C8", VA = "0x13118C8")]
		public void TriggerVideoWidgetActivated(VideoWidget widget)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x13118E4", Offset = "0x13118E4", VA = "0x13118E4")]
		public void TriggerVideoRecordingStopped()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1311900", Offset = "0x1311900", VA = "0x1311900")]
		public Switchboard()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class SystemAudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x200054E")]
		public enum State
		{
			[Token(Token = "0x40020F3")]
			Disabled,
			[Token(Token = "0x40020F4")]
			Looking,
			[Token(Token = "0x40020F5")]
			Capturing
		}

		[Token(Token = "0x200054F")]
		public class StereoBuffer
		{
			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] m_LChannelValues;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float[] m_RChannelValues;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_iOldestValue;

			[Token(Token = "0x17000660")]
			public int Capacity
			{
				[Token(Token = "0x6002374")]
				[Address(RVA = "0x1311A38", Offset = "0x1311A38", VA = "0x1311A38")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000661")]
			public int OldestIndex
			{
				[Token(Token = "0x6002375")]
				[Address(RVA = "0x1311A54", Offset = "0x1311A54", VA = "0x1311A54")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000662")]
			public float[] LChannel
			{
				[Token(Token = "0x6002376")]
				[Address(RVA = "0x1311A5C", Offset = "0x1311A5C", VA = "0x1311A5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000663")]
			public float[] RChannel
			{
				[Token(Token = "0x6002377")]
				[Address(RVA = "0x1311A64", Offset = "0x1311A64", VA = "0x1311A64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0x1311A6C", Offset = "0x1311A6C", VA = "0x1311A6C")]
			public StereoBuffer(int iBufferSize)
			{
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x1311AE8", Offset = "0x1311AE8", VA = "0x1311AE8")]
			public void Add(float left, float right)
			{
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0x1311B48", Offset = "0x1311B48", VA = "0x1311B48")]
			public void CopyFrom(StereoBuffer source)
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x1311BA4", Offset = "0x1311BA4", VA = "0x1311BA4")]
			public float GetValuesSum()
			{
				return default(float);
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x1311C2C", Offset = "0x1311C2C", VA = "0x1311C2C")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Audio Source")]
		private float m_AttachToDeviceDataThreshold;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_DetachFromDeviceDataThreshold;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectDeviceTimeoutDuration;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_AbandonDeviceTimeoutDuration;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_NormalizationDecayWindowSecs;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_NormalizationMaxMultiplier;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State m_State;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_SourcePeak;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_LChannelTempBuffer;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_RChannelTempBuffer;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_nCapturesFound;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SelectNextCaptureTimer;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_SearchFoundNoAudio;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_AbandondDeviceTimeoutTimer;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StereoBuffer m_HotValues;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StereoBuffer m_OperateValues;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_SampleRate;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_FriendlyName;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_FoundDevice;

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1311908", Offset = "0x1311908", VA = "0x1311908")]
		public static bool FoundDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1311950", Offset = "0x1311950", VA = "0x1311950")]
		public bool AudioDeviceSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1311960", Offset = "0x1311960", VA = "0x1311960")]
		public int GetAudioDeviceSampleRate()
		{
			return default(int);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1311968", Offset = "0x1311968", VA = "0x1311968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1311970", Offset = "0x1311970", VA = "0x1311970")]
		public string GetCaptureStatusMessage()
		{
			return null;
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1311A10", Offset = "0x1311A10", VA = "0x1311A10")]
		public void Activate(float unused)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1311A14", Offset = "0x1311A14", VA = "0x1311A14")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1311A18", Offset = "0x1311A18", VA = "0x1311A18")]
		public SystemAudioMonitor()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class FutureFailed : Exception
	{
		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1311C78", Offset = "0x1311C78", VA = "0x1311C78")]
		public FutureFailed(string message)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1311CE0", Offset = "0x1311CE0", VA = "0x1311CE0")]
		public FutureFailed(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1311D64", Offset = "0x1311D64", VA = "0x1311D64")]
		public FutureFailed(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class Future<T>
	{
		[Token(Token = "0x2000552")]
		public enum State
		{
			[Token(Token = "0x4002102")]
			Start,
			[Token(Token = "0x4002103")]
			Running,
			[Token(Token = "0x4002104")]
			Done,
			[Token(Token = "0x4002105")]
			Error
		}

		[Token(Token = "0x2000553")]
		public struct Awaiter : INotifyCompletion
		{
			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Future<T> m_future;

			[Token(Token = "0x17000664")]
			public bool IsCompleted
			{
				[Token(Token = "0x6002386")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002385")]
			public Awaiter(Future<T> future)
			{
			}

			[Token(Token = "0x6002387")]
			public T GetResult()
			{
				return (T)null;
			}

			[Token(Token = "0x6002388")]
			private void System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(Action continuation)
			{
			}
		}

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected State m_state;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object m_lock;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception m_error;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_closed;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> m_cleanupFunction;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_result;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Thread m_thread;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<(Action, SynchronizationContext)> m_continuations;

		[Token(Token = "0x6002380")]
		public Future(Func<T> computation, [Optional] Action<T> cleanupFunction, bool longRunning = false)
		{
		}

		[Token(Token = "0x6002381")]
		public void Close(bool interrupt = false)
		{
		}

		[Token(Token = "0x6002382")]
		public bool TryGetResult(out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x6002383")]
		public Awaiter GetAwaiter()
		{
			return default(Awaiter);
		}

		[Token(Token = "0x6002384")]
		private T GetResultForAwaiter()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000557")]
	internal class RateLimiter
	{
		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_lastFrame;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint m_eventCount;

		[Token(Token = "0x17000665")]
		public uint MaxEventsPerFrame
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x1311DF8", Offset = "0x1311DF8", VA = "0x1311DF8")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x1311E00", Offset = "0x1311E00", VA = "0x1311E00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x1311E08", Offset = "0x1311E08", VA = "0x1311E08")]
		public RateLimiter()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x1311E28", Offset = "0x1311E28", VA = "0x1311E28")]
		public RateLimiter(uint maxEventsPerFrame)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1311E50", Offset = "0x1311E50", VA = "0x1311E50")]
		public bool IsBlocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000558")]
	internal class AwaitableRateLimiter
	{
		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly float m_rate;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int m_maxCount;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SemaphoreSlim m_semaphore;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_partialItems;

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x1311EAC", Offset = "0x1311EAC", VA = "0x1311EAC")]
		public AwaitableRateLimiter(float rate, int maxCount)
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x1311FB4", Offset = "0x1311FB4", VA = "0x1311FB4")]
		public Task WaitAsync()
		{
			return null;
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x1311FD0", Offset = "0x1311FD0", VA = "0x1311FD0")]
		public void Tick(float dt)
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class TaskAndCts
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task Task;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationTokenSource Cts;

		[Token(Token = "0x17000666")]
		public CancellationToken Token
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x1312064", Offset = "0x1312064", VA = "0x1312064")]
			get
			{
				return default(CancellationToken);
			}
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x1312080", Offset = "0x1312080", VA = "0x1312080")]
		public TaskAndCts()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x13120EC", Offset = "0x13120EC", VA = "0x13120EC")]
		public void Cancel()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class TaskAndCts<T>
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Task<T> Task;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CancellationTokenSource Cts;

		[Token(Token = "0x17000667")]
		public CancellationToken Token
		{
			[Token(Token = "0x600239B")]
			get
			{
				return default(CancellationToken);
			}
		}

		[Token(Token = "0x600239C")]
		public TaskAndCts()
		{
		}

		[Token(Token = "0x600239D")]
		public void Cancel()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class TextMeasureScript : MonoBehaviour
	{
		[Token(Token = "0x200055C")]
		private struct TextParams : IEquatable<TextParams>
		{
			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_CharSize;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_FontSize;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Font m_Font;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Text;

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x13126C8", Offset = "0x13126C8", VA = "0x13126C8", Slot = "4")]
			public bool Equals(TextParams other)
			{
				return default(bool);
			}

			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x1312768", Offset = "0x1312768", VA = "0x1312768", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x13127F8", Offset = "0x13127F8", VA = "0x13127F8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x1312850", Offset = "0x1312850", VA = "0x1312850")]
			public static bool operator ==(TextParams a, TextParams b)
			{
				return default(bool);
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x13128F0", Offset = "0x13128F0", VA = "0x13128F0")]
			public static bool operator !=(TextParams a, TextParams b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TextMeasureScript m_Instance;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh m_TextMesh;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_TextRenderer;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<TextParams, Vector2> m_StringSizeMap;

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1312108", Offset = "0x1312108", VA = "0x1312108")]
		private void Awake()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x13121F4", Offset = "0x13121F4", VA = "0x13121F4")]
		public static float GetTextWidth(TextMesh text)
		{
			return default(float);
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x131239C", Offset = "0x131239C", VA = "0x131239C")]
		public static float GetTextHeight(TextMesh text)
		{
			return default(float);
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x13122AC", Offset = "0x13122AC", VA = "0x13122AC")]
		public float GetTextWidth(float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(float);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1312454", Offset = "0x1312454", VA = "0x1312454")]
		public float GetTextHeight(float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(float);
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1312548", Offset = "0x1312548", VA = "0x1312548")]
		private Vector2 AddNewString(TextParams rParams, float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x13126C0", Offset = "0x13126C0", VA = "0x13126C0")]
		public TextMeasureScript()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class TextMeshProTint : MonoBehaviour
	{
		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Color;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_SiblingText;

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x1312990", Offset = "0x1312990", VA = "0x1312990")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x13129FC", Offset = "0x13129FC", VA = "0x13129FC")]
		public TextMeshProTint()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class CHRFont : ScriptableObject
	{
		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, List<List<Vector2>>> _outlines;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, float> _widths;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Height;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DataRaw;

		[Token(Token = "0x17000668")]
		public Dictionary<int, List<List<Vector2>>> Outlines
		{
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x1312A04", Offset = "0x1312A04", VA = "0x1312A04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000669")]
		public Dictionary<int, float> Widths
		{
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0x1312A0C", Offset = "0x1312A0C", VA = "0x1312A0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x1312A14", Offset = "0x1312A14", VA = "0x1312A14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1312F78", Offset = "0x1312F78", VA = "0x1312F78")]
		public CHRFont()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class TextToStrokes
	{
		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CHRFont _font;

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x1312F80", Offset = "0x1312F80", VA = "0x1312F80")]
		public TextToStrokes(CHRFont font)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1312FA8", Offset = "0x1312FA8", VA = "0x1312FA8")]
		public List<List<Vector3>> Build(string text)
		{
			return null;
		}
	}
	[Token(Token = "0x2000561")]
	public class TextureScale
	{
		[Token(Token = "0x2000562")]
		public class SharedData
		{
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int finishCount;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mutex mutex;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color32[] newColors;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] texColors;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int texWidth;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int newWidth;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ratioX;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float ratioY;

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x1313A20", Offset = "0x1313A20", VA = "0x1313A20")]
			public SharedData()
			{
			}
		}

		[Token(Token = "0x2000563")]
		public class ThreadData
		{
			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharedData shared;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int start;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int end;

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x1313A28", Offset = "0x1313A28", VA = "0x1313A28")]
			public ThreadData()
			{
			}
		}

		[Token(Token = "0x2000564")]
		private struct ColorBuffer
		{
			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr dealloc;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public unsafe Color32* array;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int length;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int width;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int height;

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x1313590", Offset = "0x1313590", VA = "0x1313590")]
			public unsafe ColorBuffer(Color32[] c, Color32* pc, int width_, int height_)
			{
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x13137AC", Offset = "0x13137AC", VA = "0x13137AC")]
			public ColorBuffer(int width_, int height_)
			{
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x1313834", Offset = "0x1313834", VA = "0x1313834")]
			public void Deallocate()
			{
			}
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x131331C", Offset = "0x131331C", VA = "0x131331C")]
		public static Color32[] BlockingBilinear(Color32[] texColors, int texWidth, int texHeight, Color32[] newColors, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x131350C", Offset = "0x131350C", VA = "0x131350C")]
		private static int moveTowardsLog(int start, int desired)
		{
			return default(int);
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x13133C8", Offset = "0x13133C8", VA = "0x13133C8")]
		private static void Bilinear(Color32[] texColors, int texWidth, int texHeight, Color32[] newColors, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1313614", Offset = "0x1313614", VA = "0x1313614")]
		private unsafe static void SinglePassBilinear(Color32* texColors, int texLen, int texWidth, int texHeight, Color32* newColors, int newLen, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x13139A4", Offset = "0x13139A4", VA = "0x13139A4")]
		public static bool SafeCompress(Texture2D tex, bool highQuality = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x13138DC", Offset = "0x13138DC", VA = "0x13138DC")]
		private static Color32 ColorLerpUnclamped(Color32 c1, Color32 c2, float value)
		{
			return default(Color32);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1313A18", Offset = "0x1313A18", VA = "0x1313A18")]
		public TextureScale()
		{
		}
	}
	[Token(Token = "0x2000565")]
	[CreateAssetMenu(fileName = "Manifest", menuName = "Tilt Brush Manifest")]
	public class TiltBrushManifest : ScriptableObject
	{
		[Token(Token = "0x2000566")]
		[CompilerGenerated]
		private sealed class <AllBrushesAndAncestors>d__5 : IEnumerable<BrushDescriptor>, IEnumerable, IEnumerator<BrushDescriptor>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BrushDescriptor <>2__current;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TiltBrushManifest <>4__this;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<BrushDescriptor> <>7__wrap1;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private BrushDescriptor <current>5__3;

			[Token(Token = "0x1700066A")]
			private BrushDescriptor System.Collections.Generic.IEnumerator<TiltBrush.BrushDescriptor>.Current
			{
				[Token(Token = "0x60023CB")]
				[Address(RVA = "0x1313FF8", Offset = "0x1313FF8", VA = "0x1313FF8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CD")]
				[Address(RVA = "0x1314040", Offset = "0x1314040", VA = "0x1314040", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x1313B48", Offset = "0x1313B48", VA = "0x1313B48")]
			[DebuggerHidden]
			public <AllBrushesAndAncestors>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x1313BF8", Offset = "0x1313BF8", VA = "0x1313BF8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x1313C14", Offset = "0x1313C14", VA = "0x1313C14", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x1313F48", Offset = "0x1313F48", VA = "0x1313F48")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x1314000", Offset = "0x1314000", VA = "0x1314000", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x1314048", Offset = "0x1314048", VA = "0x1314048", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<BrushDescriptor> System.Collections.Generic.IEnumerable<TiltBrush.BrushDescriptor>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x13140EC", Offset = "0x13140EC", VA = "0x13140EC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrushDescriptor[] Brushes;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Environment[] Environments;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BrushDescriptor[] CompatibilityBrushes;

		[Token(Token = "0x60023C1")]
		private void AppendUnique<T>(ref T[] lhs, T[] rhs) where T : class
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x1313A30", Offset = "0x1313A30", VA = "0x1313A30")]
		public void AppendFrom(TiltBrushManifest rhs)
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x1313AD0", Offset = "0x1313AD0", VA = "0x1313AD0")]
		[IteratorStateMachine(typeof(<AllBrushesAndAncestors>d__5))]
		private IEnumerable<BrushDescriptor> AllBrushesAndAncestors()
		{
			return null;
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x1313B7C", Offset = "0x1313B7C", VA = "0x1313B7C")]
		public List<BrushDescriptor> UniqueBrushes()
		{
			return null;
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1313BEC", Offset = "0x1313BEC", VA = "0x1313BEC")]
		[ContextMenu("Export Brush GUIDs")]
		public void ExportBrushGuids()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1313BF0", Offset = "0x1313BF0", VA = "0x1313BF0")]
		public TiltBrushManifest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000567")]
	public struct TiltMeterState
	{
		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_Description;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color m_Color;
	}
	[Token(Token = "0x2000568")]
	public class TiltMeterScript : MonoBehaviour
	{
		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TiltMeterScript m_Instance;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TiltMeterState[] m_MeterStates;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_MaxMeterDescription;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_BrushSizeAffectsCost;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_WidgetCostScalar;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_MeterIndex;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_MeterAmount;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_MeterAmountFull;

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x13140F0", Offset = "0x13140F0", VA = "0x13140F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1314140", Offset = "0x1314140", VA = "0x1314140")]
		public float GetUnifiedValue()
		{
			return default(float);
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1314158", Offset = "0x1314158", VA = "0x1314158")]
		public float GetMeterFullRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1314194", Offset = "0x1314194", VA = "0x1314194")]
		public Color GetMeterBGColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1314200", Offset = "0x1314200", VA = "0x1314200")]
		public Color GetMeterColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1314248", Offset = "0x1314248", VA = "0x1314248")]
		public Color GetMeterColorAbsolute(float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1314304", Offset = "0x1314304", VA = "0x1314304")]
		public string GetMeterText()
		{
			return null;
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x130C26C", Offset = "0x130C26C", VA = "0x130C26C")]
		public void ResetMeter()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x130ADA8", Offset = "0x130ADA8", VA = "0x130ADA8")]
		public void AdjustMeter(Stroke stroke, bool up)
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x131459C", Offset = "0x131459C", VA = "0x131459C")]
		public void AdjustMeterWithWidget(int iWidgetCost, bool up)
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x13144DC", Offset = "0x13144DC", VA = "0x13144DC")]
		private void AdjustMeter(BatchSubset subset, float fBrushSize, bool bAddToMeter)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x13143C4", Offset = "0x13143C4", VA = "0x13143C4")]
		private void AdjustMeter(GameObject rBrushStroke, float fBrushSize, bool bAddToMeter)
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x13145D0", Offset = "0x13145D0", VA = "0x13145D0")]
		private void AdjustMeter(float fAmount)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x1314678", Offset = "0x1314678", VA = "0x1314678")]
		public TiltMeterScript()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class TiltMeterVisualsScript : MonoBehaviour
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_MeterBarTransform;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_MeterBGRenderer;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMesh m_CurrentPerformanceLevel;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_UpdateInterval;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_UpdateTimer;

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x1314698", Offset = "0x1314698", VA = "0x1314698")]
		private void Update()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x13149C8", Offset = "0x13149C8", VA = "0x13149C8")]
		public TiltMeterVisualsScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public class TiltasaurusContent
	{
		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TiltasaurusCategory> Categories;

		[NonSerialized]
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TiltasaurusCategory> UsedCategories;

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x13149D8", Offset = "0x13149D8", VA = "0x13149D8")]
		public void Init()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1314C54", Offset = "0x1314C54", VA = "0x1314C54")]
		public TiltasaurusContent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class TiltasaurusCategory
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Words;

		[NonSerialized]
		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> UsedWords;

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1314B90", Offset = "0x1314B90", VA = "0x1314B90")]
		public void Init()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1314C5C", Offset = "0x1314C5C", VA = "0x1314C5C")]
		public TiltasaurusCategory()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class Tiltasaurus : MonoBehaviour
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Tiltasaurus m_Instance;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_Filename;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TiltasaurusContent m_Content;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TiltasaurusCategory m_ActiveCategory;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_ActivePrompt;

		[Token(Token = "0x1700066C")]
		public string Prompt
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x1314C64", Offset = "0x1314C64", VA = "0x1314C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066D")]
		public string Category
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x1314C6C", Offset = "0x1314C6C", VA = "0x1314C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1314C84", Offset = "0x1314C84", VA = "0x1314C84")]
		public bool TiltasaurusAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E7")]
		private static int RandomIndex<T>(List<T> list)
		{
			return default(int);
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1314C94", Offset = "0x1314C94", VA = "0x1314C94")]
		private TiltasaurusCategory ChooseNonEmptyCategory()
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1314E10", Offset = "0x1314E10", VA = "0x1314E10")]
		public void ChooseNewPrompt()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1314F68", Offset = "0x1314F68", VA = "0x1314F68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1314FB4", Offset = "0x1314FB4", VA = "0x1314FB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1315110", Offset = "0x1315110", VA = "0x1315110")]
		public Tiltasaurus()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class BaseSelectionTool : BaseTool
	{
		[Token(Token = "0x200056E")]
		public class SelectionObject
		{
			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Object;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_ComplexObject;

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x1316584", Offset = "0x1316584", VA = "0x1316584")]
			public SelectionObject()
			{
			}
		}

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer m_Border;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_SelectionRing;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 m_SelectionRange;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_SelectionProgressBar;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer m_SelectionProgressBarRenderer;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_SelectionProgressBarBaseScale;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_SelectionProgressBarBasePosition;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMesh m_SelectionText;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_DescriptionText;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Renderer m_ConfirmationTextRenderer;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color m_ConfirmationTextColor;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_SelectionCurrentSize;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_SelectionObjectIndex;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_SelectionObjectChildIndex;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_SelectionVertIndex;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Stopwatch m_SelectionStopwatch;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected List<SelectionObject> m_CurrentSelection;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_SelectionPositionPrev;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_SelectionRadiusPrev;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool m_SelectionInfoQueryComplete;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		protected bool m_SelectionInfoQueryWasComplete;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		protected bool m_SelectionInfoValid;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Color m_SelectionColor;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1315118", Offset = "0x1315118", VA = "0x1315118", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1315320", Offset = "0x1315320", VA = "0x1315320", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x13153CC", Offset = "0x13153CC", VA = "0x13153CC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x131627C", Offset = "0x131627C", VA = "0x131627C", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x131633C", Offset = "0x131633C", VA = "0x131633C", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x1316378", Offset = "0x1316378", VA = "0x1316378", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x1316388", Offset = "0x1316388", VA = "0x1316388", Slot = "22")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x13164B0", Offset = "0x13164B0", VA = "0x13164B0", Slot = "24")]
		public override void SetToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x1315340", Offset = "0x1315340", VA = "0x1315340")]
		private void ResetSelection()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x1315470", Offset = "0x1315470", VA = "0x1315470")]
		private void UpdateSelection()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x1315CCC", Offset = "0x1315CCC", VA = "0x1315CCC")]
		private void GetInfoFromSelection()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x131654C", Offset = "0x131654C", VA = "0x131654C")]
		private float SignedDistancePlanePoint(ref Vector3 rPlaneNormal, ref Vector3 rPlanePoint, ref Vector3 rPoint)
		{
			return default(float);
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x131658C", Offset = "0x131658C", VA = "0x131658C")]
		private void DebugDrawBounds()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1316744", Offset = "0x1316744", VA = "0x1316744")]
		private void DebugDrawBox(Bounds rBounds, Vector3 vPos)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x1316BC4", Offset = "0x1316BC4", VA = "0x1316BC4")]
		public BaseSelectionTool()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class BaseStrokeIntersectionTool : BaseTool
	{
		[Serializable]
		[Token(Token = "0x2000570")]
		protected enum IntersectionResetBehavior
		{
			[Token(Token = "0x400218A")]
			None,
			[Token(Token = "0x400218B")]
			ResetPosition,
			[Token(Token = "0x400218C")]
			ResetDetection
		}

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private IntersectionResetBehavior m_IntersectionResetBehavior;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_TimeSliceInMS;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected float m_PointerForwardOffset;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GpuIntersector.FutureBatchResult m_GpuFutureResult;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GpuIntersector.BatchResult> m_GpuFutureResultList;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GpuIntersector.BatchResult> m_GpuOldResultList;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_GpuConsumedResults;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasScript m_CurrentCanvas;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected CanvasScript m_PreviousCanvas;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Stopwatch m_DetectionStopwatch;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int m_DetectionObjectIndex;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected int m_DetectionVertIndex;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int m_BatchPoolIndex;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int m_BatchObjectIndex;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int m_BatchVertGroupIndex;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int m_BatchTriIndexIndex;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float m_TimeSlice;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int m_TimeSliceInTicks;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool m_TimesUp;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool m_ResetDetection;

		[NonSerialized]
		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Batch m_BatchFilter;

		[Token(Token = "0x1700066E")]
		public virtual bool altSelect
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x1316D38", Offset = "0x1316D38", VA = "0x1316D38", Slot = "36")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x1316BCC", Offset = "0x1316BCC", VA = "0x1316BCC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x1316C94", Offset = "0x1316C94", VA = "0x1316C94")]
		protected void ResetDetection()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1316DA0", Offset = "0x1316DA0", VA = "0x1316DA0", Slot = "37")]
		protected virtual void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1316DA4", Offset = "0x1316DA4", VA = "0x1316DA4", Slot = "38")]
		protected virtual void HandleIntersection(Stroke stroke)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1316DA8", Offset = "0x1316DA8", VA = "0x1316DA8", Slot = "39")]
		protected virtual bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x1316DD4", Offset = "0x1316DD4", VA = "0x1316DD4", Slot = "40")]
		protected virtual bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1316DDC", Offset = "0x1316DDC", VA = "0x1316DDC", Slot = "41")]
		protected virtual bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x1316E9C", Offset = "0x1316E9C", VA = "0x1316E9C", Slot = "42")]
		public virtual void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x1316EA0", Offset = "0x1316EA0", VA = "0x1316EA0", Slot = "43")]
		protected virtual int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x1316EA8", Offset = "0x1316EA8", VA = "0x1316EA8")]
		private void DoIntersectionResets()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1316CA0", Offset = "0x1316CA0", VA = "0x1316CA0")]
		protected void ClearGpuFutureLists()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1316ED0", Offset = "0x1316ED0", VA = "0x1316ED0")]
		private bool UpdateGpuIntersection(Vector3 vDetectionCenter_GS, float size_GS)
		{
			return default(bool);
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1317174", Offset = "0x1317174", VA = "0x1317174")]
		protected void UpdateBatchedBrushDetection(Vector3 vDetectionCenter_GS)
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1317EFC", Offset = "0x1317EFC", VA = "0x1317EFC")]
		protected void UpdateSolitaryBrushDetection(Vector3 vDetectionCenter_GS)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x13185C8", Offset = "0x13185C8", VA = "0x13185C8")]
		protected void DebugDrawBounds()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x13189E8", Offset = "0x13189E8", VA = "0x13189E8")]
		protected void DebugDrawBox(Bounds rBounds, Vector3 vPos, Color rColor)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1318E94", Offset = "0x1318E94", VA = "0x1318E94")]
		public BaseStrokeIntersectionTool()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class BaseTool : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		public enum ToolType
		{
			[Token(Token = "0x400219A")]
			SketchSurface = 0,
			[Token(Token = "0x400219B")]
			Selection = 1,
			[Token(Token = "0x400219C")]
			ColorPicker = 2,
			[Token(Token = "0x400219D")]
			BrushPicker = 3,
			[Token(Token = "0x400219E")]
			BrushAndColorPicker = 4,
			[Token(Token = "0x400219F")]
			SketchOrigin = 5,
			[Token(Token = "0x40021A0")]
			AutoGif = 6,
			[Token(Token = "0x40021A1")]
			CanvasTool = 7,
			[Token(Token = "0x40021A2")]
			TransformTool = 8,
			[Token(Token = "0x40021A3")]
			StampTool = 9,
			[Token(Token = "0x40021A4")]
			FreePaintTool = 10,
			[Token(Token = "0x40021A5")]
			EraserTool = 11,
			[Token(Token = "0x40021A6")]
			ScreenshotTool = 12,
			[Token(Token = "0x40021A7")]
			DropperTool = 13,
			[Token(Token = "0x40021A8")]
			SaveIconTool = 14,
			[Token(Token = "0x40021A9")]
			ThreeDofViewingTool = 15,
			[Token(Token = "0x40021AA")]
			MultiCamTool = 16,
			[Token(Token = "0x40021AB")]
			TeleportTool = 17,
			[Token(Token = "0x40021AC")]
			RepaintTool = 18,
			[Token(Token = "0x40021AD")]
			RecolorTool = 19,
			[Token(Token = "0x40021AE")]
			RebrushTool = 20,
			[Token(Token = "0x40021AF")]
			SelectionTool = 21,
			[Token(Token = "0x40021B0")]
			PinTool = 22,
			[Token(Token = "0x40021B1")]
			EmptyTool = 23,
			[Token(Token = "0x40021B2")]
			CameraPathTool = 24,
			[Token(Token = "0x40021B3")]
			FlyTool = 25,
			[Token(Token = "0x40021B4")]
			SnipTool = 11000,
			[Token(Token = "0x40021B5")]
			JoinTool = 11001
		}

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ToolType m_Type;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_ShowTransformGizmo;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		protected bool m_ExitOnAbortCommand;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		protected bool m_ScalingSupported;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform m_Parent;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected SketchSurfacePanel m_SketchSurface;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 m_ParentBaseScale;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_ParentScale;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_RequestExit;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool m_EatInput;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		protected bool m_AllowDrawing;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		protected bool m_ToolHidden;

		[Token(Token = "0x1700066F")]
		public virtual float ButtonHoldDuration
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x12884A4", Offset = "0x12884A4", VA = "0x12884A4", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000670")]
		public bool IsEatingInput
		{
			[Token(Token = "0x6002410")]
			[Address(RVA = "0x12884AC", Offset = "0x12884AC", VA = "0x12884AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x12884B4", Offset = "0x12884B4", VA = "0x12884B4")]
		public bool ExitRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x12884BC", Offset = "0x12884BC", VA = "0x12884BC")]
		public bool ToolHidden()
		{
			return default(bool);
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x12884C4", Offset = "0x12884C4", VA = "0x12884C4")]
		public void EatInput()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x12884D0", Offset = "0x12884D0", VA = "0x12884D0")]
		public void AllowDrawing(bool bAllow)
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x12884DC", Offset = "0x12884DC", VA = "0x12884DC", Slot = "5")]
		public virtual bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x12884E4", Offset = "0x12884E4", VA = "0x12884E4", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x12885AC", Offset = "0x12885AC", VA = "0x12885AC", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1288644", Offset = "0x1288644", VA = "0x1288644", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x12886DC", Offset = "0x12886DC", VA = "0x12886DC", Slot = "9")]
		protected virtual void OnSwap()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x12886E0", Offset = "0x12886E0", VA = "0x12886E0", Slot = "10")]
		public virtual void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x12886EC", Offset = "0x12886EC", VA = "0x12886EC", Slot = "11")]
		public virtual bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x12886F4", Offset = "0x12886F4", VA = "0x12886F4", Slot = "12")]
		public virtual bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x12886FC", Offset = "0x12886FC", VA = "0x12886FC", Slot = "13")]
		public virtual void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1288820", Offset = "0x1288820", VA = "0x1288820", Slot = "14")]
		public virtual void LateUpdateTool()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x1288824", Offset = "0x1288824", VA = "0x1288824", Slot = "15")]
		public virtual void UpdateTool()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x12888E4", Offset = "0x12888E4", VA = "0x12888E4", Slot = "16")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x12888E8", Offset = "0x12888E8", VA = "0x12888E8")]
		public bool ScalingSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x12888F0", Offset = "0x12888F0", VA = "0x12888F0", Slot = "17")]
		public virtual void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x12888F4", Offset = "0x12888F4", VA = "0x12888F4", Slot = "18")]
		public virtual void Monitor()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x12888F8", Offset = "0x12888F8", VA = "0x12888F8", Slot = "19")]
		public virtual float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1288918", Offset = "0x1288918", VA = "0x1288918", Slot = "20")]
		public virtual float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1288920", Offset = "0x1288920", VA = "0x1288920", Slot = "21")]
		public virtual float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1288928", Offset = "0x1288928", VA = "0x1288928", Slot = "22")]
		public virtual void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x128892C", Offset = "0x128892C", VA = "0x128892C", Slot = "23")]
		public virtual void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x1288930", Offset = "0x1288930", VA = "0x1288930", Slot = "24")]
		public virtual void SetToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1288934", Offset = "0x1288934", VA = "0x1288934", Slot = "25")]
		public virtual void BacksideActive(bool bActive)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1288938", Offset = "0x1288938", VA = "0x1288938", Slot = "26")]
		public virtual bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1288940", Offset = "0x1288940", VA = "0x1288940", Slot = "27")]
		public virtual bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1288948", Offset = "0x1288948", VA = "0x1288948", Slot = "28")]
		public virtual bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1288950", Offset = "0x1288950", VA = "0x1288950", Slot = "29")]
		public virtual bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1288958", Offset = "0x1288958", VA = "0x1288958", Slot = "30")]
		public virtual bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1288960", Offset = "0x1288960", VA = "0x1288960", Slot = "31")]
		public virtual bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1288968", Offset = "0x1288968", VA = "0x1288968", Slot = "32")]
		public virtual bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1288970", Offset = "0x1288970", VA = "0x1288970", Slot = "33")]
		public virtual bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1288978", Offset = "0x1288978", VA = "0x1288978", Slot = "34")]
		public virtual bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x12889D8", Offset = "0x12889D8", VA = "0x12889D8", Slot = "35")]
		public virtual void EnableRenderer(bool enable)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1288A00", Offset = "0x1288A00", VA = "0x1288A00")]
		protected bool PointInTriangle(ref Vector3 rPoint, ref Vector3 rA, ref Vector3 rB, ref Vector3 rC)
		{
			return default(bool);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1288A70", Offset = "0x1288A70", VA = "0x1288A70")]
		protected bool SameSide(ref Vector3 rPoint1, ref Vector3 rPoint2, ref Vector3 rA, ref Vector3 rB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1288B10", Offset = "0x1288B10", VA = "0x1288B10")]
		protected bool SegmentSphereIntersection(Vector3 vSegA, Vector3 vSegB, Vector3 vSphereCenter, float fSphereRadSq)
		{
			return default(bool);
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1288CFC", Offset = "0x1288CFC", VA = "0x1288CFC")]
		public BaseTool()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class BrushNColorTool : BaseSelectionTool
	{
		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMesh m_SelectionTextExtra;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_SelectionTextExtraColor;

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1288D0C", Offset = "0x1288D0C", VA = "0x1288D0C", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1288D90", Offset = "0x1288D90", VA = "0x1288D90", Slot = "23")]
		public override void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1288DAC", Offset = "0x1288DAC", VA = "0x1288DAC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1288F44", Offset = "0x1288F44", VA = "0x1288F44")]
		public BrushNColorTool()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class BrushSelectionTool : BaseSelectionTool
	{
		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMesh m_SelectionTextExtra;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_SelectionTextExtraColor;

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1288F4C", Offset = "0x1288F4C", VA = "0x1288F4C", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1288FD0", Offset = "0x1288FD0", VA = "0x1288FD0", Slot = "23")]
		public override void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1288FEC", Offset = "0x1288FEC", VA = "0x1288FEC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1289134", Offset = "0x1289134", VA = "0x1289134")]
		public BrushSelectionTool()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class CameraPathTool : BaseTool
	{
		[Token(Token = "0x2000576")]
		public enum Mode
		{
			[Token(Token = "0x40021CA")]
			AddPositionKnot,
			[Token(Token = "0x40021CB")]
			AddRotationKnot,
			[Token(Token = "0x40021CC")]
			AddSpeedKnot,
			[Token(Token = "0x40021CD")]
			AddFovKnot,
			[Token(Token = "0x40021CE")]
			RemoveKnot,
			[Token(Token = "0x40021CF")]
			Recording
		}

		[Token(Token = "0x2000577")]
		public enum ExtendPathType
		{
			[Token(Token = "0x40021D1")]
			None,
			[Token(Token = "0x40021D2")]
			ExtendAtHead,
			[Token(Token = "0x40021D3")]
			ExtendAtTail,
			[Token(Token = "0x40021D4")]
			Loop
		}

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_PositionKnot;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_RotationKnot;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_SpeedKnot;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_FovKnot;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_RemoveKnot;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Mode m_Mode;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CameraPathWidget m_PrevLastValidPath;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CameraPathWidget m_LastValidPath;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_LastValidPosition;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CameraPathWidget m_ExtendPath;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ExtendPathType m_ExtendPathType;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private KnotDescriptor m_LastPlacedKnot;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CameraPathWidget m_LastPlacedKnotPath;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TrTransform m_LastPlacedKnotXf_LS;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private KnotSegment m_PreviewSegment;

		[Token(Token = "0x17000671")]
		public Mode CurrentMode
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x128913C", Offset = "0x128913C", VA = "0x128913C")]
			get
			{
				return default(Mode);
			}
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1289144", Offset = "0x1289144", VA = "0x1289144", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x12892B8", Offset = "0x12892B8", VA = "0x12892B8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1289358", Offset = "0x1289358", VA = "0x1289358", Slot = "10")]
		public override void HideTool(bool hide)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x128939C", Offset = "0x128939C", VA = "0x128939C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x12893DC", Offset = "0x12893DC", VA = "0x12893DC", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x12894B4", Offset = "0x12894B4", VA = "0x12894B4", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x128A480", Offset = "0x128A480", VA = "0x128A480", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x128A308", Offset = "0x128A308", VA = "0x128A308")]
		private void CheckToRemoveKnot(Vector3 pos)
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x128ADA8", Offset = "0x128ADA8", VA = "0x128ADA8")]
		private void OnCameraPathModeChanged(Mode newMode)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x128A40C", Offset = "0x128A40C", VA = "0x128A40C")]
		private void HideAllMeshes()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1289230", Offset = "0x1289230", VA = "0x1289230")]
		private void RefreshMeshVisibility()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x128ADB0", Offset = "0x128ADB0", VA = "0x128ADB0", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x128ADC0", Offset = "0x128ADC0", VA = "0x128ADC0", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x128ADD0", Offset = "0x128ADD0", VA = "0x128ADD0", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x128ADE0", Offset = "0x128ADE0", VA = "0x128ADE0", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x128ADF0", Offset = "0x128ADF0", VA = "0x128ADF0", Slot = "32")]
		public override bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x128AE00", Offset = "0x128AE00", VA = "0x128AE00", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x128AE10", Offset = "0x128AE10", VA = "0x128AE10", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x128AE20", Offset = "0x128AE20", VA = "0x128AE20")]
		public CameraPathTool()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class ColorSelectionTool : BaseSelectionTool
	{
		[Token(Token = "0x6002455")]
		[Address(RVA = "0x128AE30", Offset = "0x128AE30", VA = "0x128AE30", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x128AF20", Offset = "0x128AF20", VA = "0x128AF20")]
		public ColorSelectionTool()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class DropperTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x200057A")]
		private enum State
		{
			[Token(Token = "0x40021EC")]
			Enter,
			[Token(Token = "0x40021ED")]
			Standard,
			[Token(Token = "0x40021EE")]
			Exit,
			[Token(Token = "0x40021EF")]
			Off
		}

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform m_DropperTransform;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_DropperConeRenderer;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Renderer m_DropperRenderer;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform m_DropperDescription;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Transform m_DropperBrushDescription;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TextMesh m_DropperBrushDescriptionText;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Transform m_DropperColorDescription;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Transform m_DropperColorDescriptionSwatch;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_DropperBrushSelectRadius;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Renderer m_DropperColorDescriptionSwatchRenderer;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Renderer[] m_DescriptionRenderers;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool m_ValidBrushFoundThisFrame;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool m_SelectionValid;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Color m_SelectionColor;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Stroke m_SelectionStroke;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private State m_CurrentState;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float m_EnterAmount;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float m_ReferenceImageCollisionDepth;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Transform m_OffsetTransform;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 m_OffsetTransformBaseScale;

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x128AF28", Offset = "0x128AF28", VA = "0x128AF28")]
		public void DisableRequestExit_HackForSceneSurgeon()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x128AF30", Offset = "0x128AF30", VA = "0x128AF30", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x128B090", Offset = "0x128B090", VA = "0x128B090", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x128B0FC", Offset = "0x128B0FC", VA = "0x128B0FC", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x128B160", Offset = "0x128B160", VA = "0x128B160")]
		private void Update()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x128AFEC", Offset = "0x128AFEC", VA = "0x128AFEC")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x128B258", Offset = "0x128B258", VA = "0x128B258", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x128BA10", Offset = "0x128BA10", VA = "0x128BA10", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x128BB34", Offset = "0x128BB34", VA = "0x128BB34", Slot = "38")]
		protected override void HandleIntersection(Stroke stroke)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x128B05C", Offset = "0x128B05C", VA = "0x128B05C")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x128BBBC", Offset = "0x128BBBC", VA = "0x128BBBC", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x128B85C", Offset = "0x128B85C", VA = "0x128B85C")]
		private void SetDescriptionInfo(Color rColor, float fSize, BrushDescriptor rBrush, [Optional] Stroke stroke)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x128BBC4", Offset = "0x128BBC4", VA = "0x128BBC4")]
		public DropperTool()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class EraserTool : StrokeModificationTool
	{
		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_MaxSpinSpeed;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_SpinSpeedAcceleration;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_SpinSpeedDecay;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_SpinSpeed;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float m_SpinAmount;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x128BBD4", Offset = "0x128BBD4", VA = "0x128BBD4", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x128BC68", Offset = "0x128BC68", VA = "0x128BC68", Slot = "45")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x128BDB0", Offset = "0x128BDB0", VA = "0x128BDB0", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x128C048", Offset = "0x128C048", VA = "0x128C048", Slot = "42")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x128C0B8", Offset = "0x128C0B8", VA = "0x128C0B8", Slot = "40")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x128C0C0", Offset = "0x128C0C0", VA = "0x128C0C0", Slot = "39")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x128C308", Offset = "0x128C308", VA = "0x128C308", Slot = "41")]
		protected override bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x128C384", Offset = "0x128C384", VA = "0x128C384", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x128C408", Offset = "0x128C408", VA = "0x128C408")]
		public EraserTool()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class FreePaintTool : BaseTool
	{
		[Token(Token = "0x200057D")]
		public class BrushGhost
		{
			[Token(Token = "0x200057E")]
			public enum PathModeID
			{
				[Token(Token = "0x400223B")]
				Orbit,
				[Token(Token = "0x400223C")]
				Trail
			}

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Renderer renderer;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool _enabled;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public PathModeID pathMode;

			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrTransform transformTr;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TrTransform goalTr;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion tilt;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float _lerpT;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float _radius;

			[Token(Token = "0x17000684")]
			public bool enabled
			{
				[Token(Token = "0x60024BA")]
				[Address(RVA = "0x12918F0", Offset = "0x12918F0", VA = "0x12918F0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60024BB")]
				[Address(RVA = "0x128E284", Offset = "0x128E284", VA = "0x128E284")]
				set
				{
				}
			}

			[Token(Token = "0x17000685")]
			public float lerpT
			{
				[Token(Token = "0x60024BE")]
				[Address(RVA = "0x1291BF0", Offset = "0x1291BF0", VA = "0x1291BF0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60024BF")]
				[Address(RVA = "0x128E8DC", Offset = "0x128E8DC", VA = "0x128E8DC")]
				set
				{
				}
			}

			[Token(Token = "0x17000686")]
			public float radius
			{
				[Token(Token = "0x60024C0")]
				[Address(RVA = "0x1291C70", Offset = "0x1291C70", VA = "0x1291C70")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60024C1")]
				[Address(RVA = "0x128E360", Offset = "0x128E360", VA = "0x128E360")]
				set
				{
				}
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x128E164", Offset = "0x128E164", VA = "0x128E164")]
			public BrushGhost(Transform transform)
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x12918F8", Offset = "0x12918F8", VA = "0x12918F8")]
			private TrTransform Orbit(float radius)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x1291B30", Offset = "0x1291B30", VA = "0x1291B30")]
			private TrTransform Trail()
			{
				return default(TrTransform);
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x1291BF8", Offset = "0x1291BF8", VA = "0x1291BF8")]
			private void Update()
			{
			}
		}

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_BimanualGuideLine;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_BimanualGuideLineOutline;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_BimanualGuideLineRenderer;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_BimanualGuideLineOutlineRenderer;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_BimanualGuideLineDrawInTime;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_BimanualGuideIntersect;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform m_BimanualGuideIntersectOutline;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Renderer m_BimanualGuideIntersectRenderer;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Renderer m_BimanualGuideIntersectOutlineRenderer;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_BimanualGuideIntersectVisible;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_BimanualGuideLineT;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_BimanualGuideIntensity;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_BimanualGuideLineHorizontalOffset;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_BimanualGuideLineOutlineWidth;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_BimanualGuideLineBaseWidth;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_BimanualGuideHintIntensity;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_BimanualGuideDrawInDuration;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_BimanualTape;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_bimanualControlPointerPosition;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 m_btCursorPos;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion m_btCursorRot;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_btIntersectGoal;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private List<Transform> m_brushGhosts;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<BrushGhost> _brushGhosts;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _brushGhostOrbitalRadius;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private TrTransform _brushGhostTransform;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private TrTransform _brushGhostGoal;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Quaternion _brushGhostTilt;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float _brushGhostLerpT;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool m_GridSnapActive;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool m_LazyInputActive;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_LazyInputTangentMode;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		private bool m_showLazyInputVisuals;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_lazyInputRate;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool m_RevolverActive;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float m_RevolverRadius;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float m_RevolverAngle;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float m_RevolverVelocity;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Quaternion m_RevolverBrushRotationOffset;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float m_AdjustSizeScalar;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private float m_HapticInterval;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private float m_HapticSizeUp;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private float m_HapticSizeDown;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool m_PaintingActive;

		[Token(Token = "0x400222C")]
		private const float TapDelayTime = 0.333f;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Quaternion sm_OrientationAdjust;

		[Token(Token = "0x17000672")]
		private float BrushGhostOrbitalRadius
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x128E2AC", Offset = "0x128E2AC", VA = "0x128E2AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x128E2B4", Offset = "0x128E2B4", VA = "0x128E2B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000673")]
		private TrTransform BrushGhostTransform
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x128E368", Offset = "0x128E368", VA = "0x128E368")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x128E37C", Offset = "0x128E37C", VA = "0x128E37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000674")]
		private TrTransform BrushGhostGoal
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x128E490", Offset = "0x128E490", VA = "0x128E490")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002480")]
			[Address(RVA = "0x128E4A0", Offset = "0x128E4A0", VA = "0x128E4A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000675")]
		private Quaternion BrushGhostTilt
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x128E5B0", Offset = "0x128E5B0", VA = "0x128E5B0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002482")]
			[Address(RVA = "0x128E5C4", Offset = "0x128E5C4", VA = "0x128E5C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000676")]
		private float BrushGhostLerpT
		{
			[Token(Token = "0x6002483")]
			[Address(RVA = "0x128E6D8", Offset = "0x128E6D8", VA = "0x128E6D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002484")]
			[Address(RVA = "0x128E6E0", Offset = "0x128E6E0", VA = "0x128E6E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000677")]
		public bool m_brushTrigger
		{
			[Token(Token = "0x6002492")]
			[Address(RVA = "0x12908E4", Offset = "0x12908E4", VA = "0x12908E4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x12908EC", Offset = "0x12908EC", VA = "0x12908EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000678")]
		public bool m_brushTriggerDown
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x12908F8", Offset = "0x12908F8", VA = "0x12908F8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x1290900", Offset = "0x1290900", VA = "0x1290900")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000679")]
		public bool m_wandTrigger
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x129090C", Offset = "0x129090C", VA = "0x129090C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x1290914", Offset = "0x1290914", VA = "0x1290914")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067A")]
		public bool m_wandTriggerDown
		{
			[Token(Token = "0x6002498")]
			[Address(RVA = "0x1290920", Offset = "0x1290920", VA = "0x1290920")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x1290928", Offset = "0x1290928", VA = "0x1290928")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067B")]
		public bool m_brushUndoButton
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x1290934", Offset = "0x1290934", VA = "0x1290934")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x129093C", Offset = "0x129093C", VA = "0x129093C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067C")]
		public bool m_brushUndoButtonDown
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x1290948", Offset = "0x1290948", VA = "0x1290948")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x1290950", Offset = "0x1290950", VA = "0x1290950")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		public bool m_brushUndoButtonUp
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x129095C", Offset = "0x129095C", VA = "0x129095C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x1290964", Offset = "0x1290964", VA = "0x1290964")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067E")]
		public bool m_brushUndoButtonTapped
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x1290970", Offset = "0x1290970", VA = "0x1290970")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x1290978", Offset = "0x1290978", VA = "0x1290978")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067F")]
		private bool m_brushUndoButtonTapInvalid
		{
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x1290984", Offset = "0x1290984", VA = "0x1290984")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x129098C", Offset = "0x129098C", VA = "0x129098C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000680")]
		private float m_brushUndoButtonTapExpiry
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1290998", Offset = "0x1290998", VA = "0x1290998")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x12909A0", Offset = "0x12909A0", VA = "0x12909A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000681")]
		public bool m_brushUndoButtonHeld
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x12909A8", Offset = "0x12909A8", VA = "0x12909A8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x12909B0", Offset = "0x12909B0", VA = "0x12909B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000682")]
		public float m_brushTriggerRatio
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x12909BC", Offset = "0x12909BC", VA = "0x12909BC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x12909C4", Offset = "0x12909C4", VA = "0x12909C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000683")]
		public float m_wandTriggerRatio
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x12909CC", Offset = "0x12909CC", VA = "0x12909CC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x12909D4", Offset = "0x12909D4", VA = "0x12909D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x128C410", Offset = "0x128C410", VA = "0x128C410", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x128C420", Offset = "0x128C420", VA = "0x128C420")]
		private void InitBimanualTape()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x128C768", Offset = "0x128C768", VA = "0x128C768")]
		private void BeginBimanualTape()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x128C6B0", Offset = "0x128C6B0", VA = "0x128C6B0")]
		private void EndBimanualTape()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x128CA4C", Offset = "0x128CA4C", VA = "0x128CA4C")]
		private void UpdateBimanualGuideLineT()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x128CAD4", Offset = "0x128CAD4", VA = "0x128CAD4")]
		private void UpdateBimanualGuideVisuals()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x128D2EC", Offset = "0x128D2EC", VA = "0x128D2EC")]
		private void BeginBimanualIntersect()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x128CA0C", Offset = "0x128CA0C", VA = "0x128CA0C")]
		private void EndBimanualIntersect()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x128D388", Offset = "0x128D388", VA = "0x128D388")]
		private void UpdateBimanualIntersectVisuals()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x128D7D8", Offset = "0x128D7D8", VA = "0x128D7D8", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x128D7E0", Offset = "0x128D7E0", VA = "0x128D7E0")]
		private void ApplyBimanualTape(ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x128C524", Offset = "0x128C524", VA = "0x128C524")]
		private void InitBrushGhosts()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x128E1D0", Offset = "0x128E1D0", VA = "0x128E1D0")]
		private void BeginBrushGhosts(BrushGhost.PathModeID pathMode)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x128C980", Offset = "0x128C980", VA = "0x128C980")]
		private void EndBrushGhosts()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x128E930", Offset = "0x128E930", VA = "0x128E930")]
		private static Vector3 WorldToCanvasPos(Matrix4x4 matrix, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x128CF74", Offset = "0x128CF74", VA = "0x128CF74")]
		public static Vector3 SnapToGrid(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x128E06C", Offset = "0x128E06C", VA = "0x128E06C")]
		private void UpdateLazyInputRate()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x128E988", Offset = "0x128E988", VA = "0x128E988")]
		private static TrTransform TangentLazyLerp(TrTransform startTx, TrTransform endTx, float lerpT)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x128F12C", Offset = "0x128F12C", VA = "0x128F12C")]
		private static TrTransform NormalLazyLerp(TrTransform startTx, TrTransform endTx, float lerpT)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x128F268", Offset = "0x128F268", VA = "0x128F268")]
		private static TrTransform LazyLerp(TrTransform startTx, TrTransform endTx, float lerpT, bool tangentMode)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x128F378", Offset = "0x128F378", VA = "0x128F378")]
		private void ApplyLazyInput(ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x128F620", Offset = "0x128F620", VA = "0x128F620")]
		private void UpdateLazyInputVisuals()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x128FC74", Offset = "0x128FC74", VA = "0x128FC74")]
		private void BeginLazyInputVisuals()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x128F5C4", Offset = "0x128F5C4", VA = "0x128F5C4")]
		private void EndLazyInputVisuals()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x128FD38", Offset = "0x128FD38", VA = "0x128FD38")]
		private void BeginRevolver()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x128FD74", Offset = "0x128FD74", VA = "0x128FD74")]
		private void SetRevolverRadius(float lerpRate)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x128FEAC", Offset = "0x128FEAC", VA = "0x128FEAC")]
		private void ApplyRevolver(ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x12909DC", Offset = "0x12909DC", VA = "0x12909DC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x12909F8", Offset = "0x12909F8", VA = "0x12909F8", Slot = "5")]
		public override bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1290A54", Offset = "0x1290A54", VA = "0x1290A54", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1290B18", Offset = "0x1290B18", VA = "0x1290B18", Slot = "11")]
		public override bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1290B20", Offset = "0x1290B20", VA = "0x1290B20", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x12912FC", Offset = "0x12912FC", VA = "0x12912FC", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x129136C", Offset = "0x129136C", VA = "0x129136C", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1291034", Offset = "0x1291034", VA = "0x1291034")]
		private void PositionPointer()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x129161C", Offset = "0x129161C", VA = "0x129161C", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x12917B0", Offset = "0x12917B0", VA = "0x12917B0", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1291808", Offset = "0x1291808", VA = "0x1291808", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1291854", Offset = "0x1291854", VA = "0x1291854")]
		public FreePaintTool()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class JoinTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x2000580")]
		private enum State
		{
			[Token(Token = "0x400224E")]
			Enter,
			[Token(Token = "0x400224F")]
			Standard,
			[Token(Token = "0x4002250")]
			Exit,
			[Token(Token = "0x4002251")]
			Off
		}

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform m_DropperTransform;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_DropperConeRenderer;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Renderer m_DropperRenderer;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_DropperBrushSelectRadius;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Renderer m_DropperColorDescriptionSwatchRenderer;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_ValidBrushFoundThisFrame;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool m_SelectionValid;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Color m_SelectionColor;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Stroke m_SelectionStroke;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private State m_CurrentState;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float m_EnterAmount;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform m_OffsetTransform;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 m_OffsetTransformBaseScale;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Stroke m_StrokeA;

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1291C78", Offset = "0x1291C78", VA = "0x1291C78")]
		public void DisableRequestExit_HackForSceneSurgeon()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1291C80", Offset = "0x1291C80", VA = "0x1291C80", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1291D08", Offset = "0x1291D08", VA = "0x1291D08", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1291D74", Offset = "0x1291D74", VA = "0x1291D74", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1291DD8", Offset = "0x1291DD8", VA = "0x1291DD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1291CCC", Offset = "0x1291CCC", VA = "0x1291CCC")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x1291E70", Offset = "0x1291E70", VA = "0x1291E70", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x1291F98", Offset = "0x1291F98", VA = "0x1291F98")]
		private int ClosestControlPoint(Stroke stroke)
		{
			return default(int);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x1292104", Offset = "0x1292104", VA = "0x1292104", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x1292228", Offset = "0x1292228", VA = "0x1292228", Slot = "38")]
		protected override void HandleIntersection(Stroke strokeB)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x1291CD4", Offset = "0x1291CD4", VA = "0x1291CD4")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x129239C", Offset = "0x129239C", VA = "0x129239C", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x12923A4", Offset = "0x12923A4", VA = "0x12923A4")]
		public JoinTool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000581")]
	public class MultiCamAttach
	{
		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_JointTransform;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_OffsetTransform;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_AttachPoint;

		[NonSerialized]
		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_OffsetBaseScale;

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x12923B4", Offset = "0x12923B4", VA = "0x12923B4")]
		public MultiCamAttach()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class MultiCamTool : BaseTool
	{
		[Token(Token = "0x2000583")]
		public enum GifMovementStyle
		{
			[Token(Token = "0x40022BC")]
			HorizontalArc,
			[Token(Token = "0x40022BD")]
			HorizontalLine,
			[Token(Token = "0x40022BE")]
			VerticalCircle
		}

		[Token(Token = "0x2000584")]
		public enum State
		{
			[Token(Token = "0x40022C0")]
			Enter,
			[Token(Token = "0x40022C1")]
			Standard,
			[Token(Token = "0x40022C2")]
			Exit,
			[Token(Token = "0x40022C3")]
			Off
		}

		[Token(Token = "0x2000585")]
		private enum GifCreationState
		{
			[Token(Token = "0x40022C5")]
			Ready,
			[Token(Token = "0x40022C6")]
			Capturing,
			[Token(Token = "0x40022C7")]
			Building
		}

		[Token(Token = "0x2000586")]
		private enum VideoState
		{
			[Token(Token = "0x40022C9")]
			Ready,
			[Token(Token = "0x40022CA")]
			Capturing,
			[Token(Token = "0x40022CB")]
			Processing,
			[Token(Token = "0x40022CC")]
			ReadyToShare,
			[Token(Token = "0x40022CD")]
			Previewing
		}

		[Serializable]
		[Token(Token = "0x2000587")]
		public class GifPreset
		{
			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GifMovementStyle style;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Range(0f, 5f)]
			public float focalPoint;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Range(0f, 0.5f)]
			public float movementRadius;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int frames;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frameDelay;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool advancesTime;

			[Token(Token = "0x600251E")]
			[Address(RVA = "0x1298C38", Offset = "0x1298C38", VA = "0x1298C38")]
			public GifPreset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[CompilerGenerated]
		private sealed class <TakeScreenshotAsync>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamTool <>4__this;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveName;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RenderTexture <tmp>5__2;

			[Token(Token = "0x17000692")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002523")]
				[Address(RVA = "0x1299590", Offset = "0x1299590", VA = "0x1299590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000693")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002525")]
				[Address(RVA = "0x12995D8", Offset = "0x12995D8", VA = "0x12995D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0x129830C", Offset = "0x129830C", VA = "0x129830C")]
			[DebuggerHidden]
			public <TakeScreenshotAsync>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6002520")]
			[Address(RVA = "0x1298C40", Offset = "0x1298C40", VA = "0x1298C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0x1298C6C", Offset = "0x1298C6C", VA = "0x1298C6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002522")]
			[Address(RVA = "0x1299564", Offset = "0x1299564", VA = "0x1299564")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002524")]
			[Address(RVA = "0x1299598", Offset = "0x1299598", VA = "0x1299598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000589")]
		[CompilerGenerated]
		private sealed class <AutoGifStateCapturing>d__181 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamTool <>4__this;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Texture2D <tempTex>5__2;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScreenshotManager <rMgr>5__3;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <camera>5__4;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TrTransform <baseXf>5__5;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <nCapture>5__6;

			[Token(Token = "0x17000694")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002529")]
				[Address(RVA = "0x1299B74", Offset = "0x1299B74", VA = "0x1299B74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000695")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600252B")]
				[Address(RVA = "0x1299BBC", Offset = "0x1299BBC", VA = "0x1299BBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0x129839C", Offset = "0x129839C", VA = "0x129839C")]
			[DebuggerHidden]
			public <AutoGifStateCapturing>d__181(int <>1__state)
			{
			}

			[Token(Token = "0x6002527")]
			[Address(RVA = "0x12995E0", Offset = "0x12995E0", VA = "0x12995E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002528")]
			[Address(RVA = "0x12995E4", Offset = "0x12995E4", VA = "0x12995E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600252A")]
			[Address(RVA = "0x1299B7C", Offset = "0x1299B7C", VA = "0x1299B7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058A")]
		[CompilerGenerated]
		private sealed class <Blink>d__189 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x17000696")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600252F")]
				[Address(RVA = "0xE4A978", Offset = "0xE4A978", VA = "0xE4A978", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000697")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002531")]
				[Address(RVA = "0xE4A9C0", Offset = "0xE4A9C0", VA = "0xE4A9C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600252C")]
			[Address(RVA = "0xE4A858", Offset = "0xE4A858", VA = "0xE4A858")]
			[DebuggerHidden]
			public <Blink>d__189(int <>1__state)
			{
			}

			[Token(Token = "0x600252D")]
			[Address(RVA = "0xE4A880", Offset = "0xE4A880", VA = "0xE4A880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600252E")]
			[Address(RVA = "0xE4A884", Offset = "0xE4A884", VA = "0xE4A884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002530")]
			[Address(RVA = "0xE4A980", Offset = "0xE4A980", VA = "0xE4A980", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002256")]
		private const float kProgressRingGrowRate = 8f;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 kProgressRingBaseScale;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Header("Objects")]
		private MultiCamAttach[] m_Cameras;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HintObjectScript m_SwipeHintObject;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer[] m_GifProgressRings;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_SwipeHintDelay;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_FrameGapChangeSpeed;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Header("Screenshot Processing")]
		private float m_MinTimeBetweenShots;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private int m_ScreenshotWidth;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int m_ScreenshotHeight;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Header("AutoGif Processing")]
		[SerializeField]
		private int m_AutoGifWidth;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_AutoGifHeight;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GifPreset[] m_AutoGifPresets;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("TimeGif Processing")]
		[SerializeField]
		private Transform m_TimeGifTimeBar;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshPro m_TimeGifTimeText;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Renderer m_TimeGifMesh;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private int m_TimeGifWidth;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int m_TimeGifHeight;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_TimeGifDuration;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private int m_TimeGifFPS;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[Header("Quality")]
		[Range(0.125f, 4f)]
		private float m_superSampling;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Video Processing")]
		[SerializeField]
		private TextMeshPro m_VideoRecordTimer;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject m_VideoSavingRoot;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_VideoSavingText;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_VideoPlaybackText;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string m_VideoPreviewToolText;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string m_VideoReadyToolText;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private int m_VideoPlaybackNumLoops;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_VideoPlaybackRoot;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_VideoPlaybackProgressLeftAlign;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_VideoPlaybackProgressMesh;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_VideoRecordIcon;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_UploadingIcon;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TextMeshPro m_UploadingHeader;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Texture m_UploadIconTexture;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Texture m_ProfileIconTexture;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_VideoRecordingIndicator;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Color m_VideoRecordingIndicatorColor1;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Color m_VideoRecordingIndicatorColor2;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color m_VideoPreviewingIndicatorColor1;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Color m_VideoPreviewingIndicatorColor2;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private float m_VideoCaptureMinDuration;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private TextMeshPro m_VideoRecordAudioHeader;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private TextMeshPro m_VideoRecordAudioDesc;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_VideoRecorderAudioSearchVisuals;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Renderer m_VideoRecorderAudioSearchIcon;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Texture2D m_VideoRecorderAudioSearchIconGood;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Texture2D m_VideoRecorderAudioSearchIconBad;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Color m_VideoRecordAudioDescColor;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private string m_AudioLookingText;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private string m_AudioFoundText;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private string m_AudioNoneText;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private float m_AudioFoundShowDuration;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private TextMeshPro m_VideoToolText;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private string m_UploadingText;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private string m_AuthNeededText;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[Header("Animation")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float m_CameraChangeTriggerT;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float m_CameraChangeSpeed;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float m_CameraChangeJoystickTDelay;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[Header("Misc")]
		[SerializeField]
		private Vector3 m_SketchSurfaceAdditionalRotation;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[Header("YouTube")]
		private BaseButton m_YouTubeIcon;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private TextMeshPro m_YouTubeName;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private TextMeshPro m_YouTubeEmail;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private bool m_LockToController;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float m_ShotTimer;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool m_EatPadInput;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private State m_CurrentState;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float m_EnterAmount;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string m_SnapshotDirectory;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string m_VideoDirectory;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private int m_CurrentCameraIndex;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int m_DesiredCameraIndex;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool m_CameraChangePositive;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float m_CameraChangeT;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float m_CameraChangeJoystickTimer;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int m_iGifPreset;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float m_TimeGifCaptureTimer;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float m_TimeGifCaptureInterval;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float m_TimeGifCaptureIntervalTimer;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float m_TimedGifTimeBarBaseScaleY;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private string m_TimedGifSaveName;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private GifCreationState m_AutoGifCreationState;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private GifCreationState m_TimeGifCreationState;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private VideoState m_CurrentVideoState;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool m_LookingForAudio;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x295")]
		private bool m_AudioHasBeenRequested;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float m_AudioFoundCountdown;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private List<Color32[]> m_Captures;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private float m_ProgressRingSize;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private GifEncodeTask m_Task;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private bool m_SwipeBlinkRequested;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
		private bool m_SwipeBlinkShowing;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float m_SwipeHintCountdown;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private string m_VideoCaptureFile;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private IEnumerator m_UploadIconBlinker;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool m_WaitingForAuth;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private List<int> m_ActiveCameras;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private bool m_OauthMonitored;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int m_RenderGap;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private float m_CurrentGap;

		[Token(Token = "0x17000687")]
		private GifPreset CurrentPreset
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x12923BC", Offset = "0x12923BC", VA = "0x12923BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000688")]
		private GifMovementStyle m_GifStyle
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x12923F0", Offset = "0x12923F0", VA = "0x12923F0")]
			get
			{
				return default(GifMovementStyle);
			}
		}

		[Token(Token = "0x17000689")]
		private float m_GifFocalPointMeters
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x129240C", Offset = "0x129240C", VA = "0x129240C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068A")]
		private float m_GifMovementRadiusMeters
		{
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x1292428", Offset = "0x1292428", VA = "0x1292428")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068B")]
		private int m_GifFrames
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x1292444", Offset = "0x1292444", VA = "0x1292444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700068C")]
		private float m_FrameDelay
		{
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x1292460", Offset = "0x1292460", VA = "0x1292460")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068D")]
		private bool m_GifAdvancesTime
		{
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x129247C", Offset = "0x129247C", VA = "0x129247C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068E")]
		private MultiCamStyle CurrentCameraStyle
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x1292498", Offset = "0x1292498", VA = "0x1292498")]
			get
			{
				return default(MultiCamStyle);
			}
		}

		[Token(Token = "0x1700068F")]
		private float GifProgressRingsSize
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x12924A0", Offset = "0x12924A0", VA = "0x12924A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x12924A8", Offset = "0x12924A8", VA = "0x12924A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000690")]
		private bool GifProgressRingsEnabled
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x1292530", Offset = "0x1292530", VA = "0x1292530")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x1292560", Offset = "0x1292560", VA = "0x1292560")]
			set
			{
			}
		}

		[Token(Token = "0x17000691")]
		private float GifProgressRingsProgress
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x12925C8", Offset = "0x12925C8", VA = "0x12925C8")]
			set
			{
			}
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1292670", Offset = "0x1292670", VA = "0x1292670")]
		private void SetCameraActive(int cameraIndex, bool active)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x129273C", Offset = "0x129273C", VA = "0x129273C")]
		private VideoRecorder GetVideoRecorder(int cameraIndex)
		{
			return null;
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x12927E8", Offset = "0x12927E8", VA = "0x12927E8", Slot = "12")]
		public override bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x12927F0", Offset = "0x12927F0", VA = "0x12927F0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1292FBC", Offset = "0x1292FBC", VA = "0x1292FBC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1292DAC", Offset = "0x1292DAC", VA = "0x1292DAC")]
		private void InitSavePaths()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1293058", Offset = "0x1293058", VA = "0x1293058", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1293940", Offset = "0x1293940", VA = "0x1293940", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x1293E30", Offset = "0x1293E30", VA = "0x1293E30", Slot = "18")]
		public override void Monitor()
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x1293F68", Offset = "0x1293F68", VA = "0x1293F68")]
		private bool CanCapture()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1293FB0", Offset = "0x1293FB0", VA = "0x1293FB0")]
		public void ExternalObjectNextCameraStyle()
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x12941D4", Offset = "0x12941D4", VA = "0x12941D4")]
		public void ExternalObjectForceCameraStyle(MultiCamStyle style)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1294038", Offset = "0x1294038", VA = "0x1294038")]
		private bool CanSwitchCameras()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x12941F4", Offset = "0x12941F4", VA = "0x12941F4")]
		private bool PadSelectionAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x129412C", Offset = "0x129412C", VA = "0x129412C")]
		private void SetDesiredCameraIndex(int i)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1292BF4", Offset = "0x1292BF4", VA = "0x1292BF4")]
		private void SetCurrentCameraToDesired()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x12942CC", Offset = "0x12942CC", VA = "0x12942CC")]
		private void ClearTimeGifCapture()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1293EB4", Offset = "0x1293EB4", VA = "0x1293EB4")]
		private void ReportGifTaskDone()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x12943E4", Offset = "0x12943E4", VA = "0x12943E4")]
		private void UpdateMultiCamTransform()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x12947FC", Offset = "0x12947FC", VA = "0x12947FC")]
		private void UpdateCameraVisualTransforms()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1294B04", Offset = "0x1294B04", VA = "0x1294B04")]
		private void UpdateCameraManagerTransforms()
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1294D10", Offset = "0x1294D10", VA = "0x1294D10", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x12964A0", Offset = "0x12964A0", VA = "0x12964A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x1297BA0", Offset = "0x1297BA0", VA = "0x1297BA0", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1295B6C", Offset = "0x1295B6C", VA = "0x1295B6C")]
		public static string GetSaveName(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x1297BA4", Offset = "0x1297BA4", VA = "0x1297BA4")]
		private ScreenshotManager GetScreenshotManager(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1292CA4", Offset = "0x1292CA4", VA = "0x1292CA4")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1293D48", Offset = "0x1293D48", VA = "0x1293D48")]
		private void TurnOff()
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1293734", Offset = "0x1293734", VA = "0x1293734")]
		private void TurnOn()
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x1297C18", Offset = "0x1297C18", VA = "0x1297C18", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x1297DF0", Offset = "0x1297DF0", VA = "0x1297DF0", Slot = "19")]
		public override float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1297F7C", Offset = "0x1297F7C", VA = "0x1297F7C", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x1297F8C", Offset = "0x1297F8C", VA = "0x1297F8C", Slot = "31")]
		public override bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1297F94", Offset = "0x1297F94", VA = "0x1297F94", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x129807C", Offset = "0x129807C", VA = "0x129807C", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1298164", Offset = "0x1298164", VA = "0x1298164", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x12981B8", Offset = "0x12981B8", VA = "0x12981B8", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x12981DC", Offset = "0x12981DC", VA = "0x12981DC", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1296268", Offset = "0x1296268", VA = "0x1296268")]
		private void InitAudioSearch()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x12979B8", Offset = "0x12979B8", VA = "0x12979B8")]
		private void UpdateAudioSearch()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x12931EC", Offset = "0x12931EC", VA = "0x12931EC")]
		private void StopAudioSearch()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x1298230", Offset = "0x1298230", VA = "0x1298230")]
		private void RefreshAudioDescText(bool bCapturing)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x1296064", Offset = "0x1296064", VA = "0x1296064")]
		public void StartVideoCapture(string filePath, bool offlineRender = false)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x12932F4", Offset = "0x12932F4", VA = "0x12932F4")]
		private void StopVideoCapture(bool showInfoCard)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x1295678", Offset = "0x1295678", VA = "0x1295678")]
		private void UpdateVideoCaptureState()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x1295E8C", Offset = "0x1295E8C", VA = "0x1295E8C")]
		[IteratorStateMachine(typeof(<TakeScreenshotAsync>d__175))]
		private IEnumerator TakeScreenshotAsync(string saveName)
		{
			return null;
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x1293AFC", Offset = "0x1293AFC", VA = "0x1293AFC")]
		private void SetTimeBar(float fTime)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x1295FA4", Offset = "0x1295FA4", VA = "0x1295FA4")]
		private void TimeGifTransitionReadyToCapturing(string saveName)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x12975F0", Offset = "0x12975F0", VA = "0x12975F0")]
		private void TimeGifCapture()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x1297810", Offset = "0x1297810", VA = "0x1297810")]
		private void TimeGifTransitionCapturingToBuilding()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1295F00", Offset = "0x1295F00", VA = "0x1295F00")]
		private void AutoGifTransitionReadyToCapturing()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1298334", Offset = "0x1298334", VA = "0x1298334")]
		[IteratorStateMachine(typeof(<AutoGifStateCapturing>d__181))]
		private IEnumerator AutoGifStateCapturing()
		{
			return null;
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1297398", Offset = "0x1297398", VA = "0x1297398")]
		private void AutoGifTransitionCapturingToBuilding(string saveName)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x12983C4", Offset = "0x12983C4", VA = "0x12983C4")]
		private bool GifMovementIsSymmetric()
		{
			return default(bool);
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x129750C", Offset = "0x129750C", VA = "0x129750C")]
		private TrTransform GetGifTransform(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x1292E38", Offset = "0x1292E38", VA = "0x1292E38")]
		private void AdjustGifPreset(int i)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x1298408", Offset = "0x1298408", VA = "0x1298408")]
		private TrTransform GetGifTransform_HorizontalArc(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1298688", Offset = "0x1298688", VA = "0x1298688")]
		private TrTransform GetGifTransform_HorizontalLine(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x12988C4", Offset = "0x12988C4", VA = "0x12988C4")]
		private TrTransform GetGifTransform_VerticalCircle(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x12961F0", Offset = "0x12961F0", VA = "0x12961F0")]
		[IteratorStateMachine(typeof(<Blink>d__189))]
		private IEnumerator Blink(GameObject obj, float seconds = 1f)
		{
			return null;
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1293C4C", Offset = "0x1293C4C", VA = "0x1293C4C")]
		private void RefreshYouTubeIcon()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1298B48", Offset = "0x1298B48", VA = "0x1298B48")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1298B4C", Offset = "0x1298B4C", VA = "0x1298B4C")]
		public MultiCamTool()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class PinTool : ToggleStrokeModificationTool
	{
		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool m_InPinningMode;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool m_IntersectionThisFrame;

		[Token(Token = "0x17000698")]
		public bool InPinMode
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0xE4A9C8", Offset = "0xE4A9C8", VA = "0xE4A9C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xE4A9D0", Offset = "0xE4A9D0", VA = "0xE4A9D0")]
		public bool CanToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xE4AA94", Offset = "0xE4AA94", VA = "0xE4AA94", Slot = "47")]
		protected override bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xE4AA9C", Offset = "0xE4AA9C", VA = "0xE4AA9C", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xE4AC24", Offset = "0xE4AC24", VA = "0xE4AC24", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xE4AEEC", Offset = "0xE4AEEC", VA = "0xE4AEEC")]
		public void PinToolCallback()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xE4ADD0", Offset = "0xE4ADD0", VA = "0xE4ADD0")]
		public void RefreshPinState()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xE4AF00", Offset = "0xE4AF00", VA = "0xE4AF00", Slot = "48")]
		protected override void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xE4AFD4", Offset = "0xE4AFD4", VA = "0xE4AFD4", Slot = "49")]
		public override void OnUpdateDetection()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xE4B4F8", Offset = "0xE4B4F8", VA = "0xE4B4F8", Slot = "43")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xE4B594", Offset = "0xE4B594", VA = "0xE4B594", Slot = "40")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xE4B6B4", Offset = "0xE4B6B4", VA = "0xE4B6B4", Slot = "42")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xE4B744", Offset = "0xE4B744", VA = "0xE4B744", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xE4B7D0", Offset = "0xE4B7D0", VA = "0xE4B7D0")]
		public PinTool()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class RepaintTool : StrokeModificationTool
	{
		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_SpinSpeedAcceleration;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_MaxSpinSpeed;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_SpinSpeedDecay;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_SpinSpeed;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float m_SpinAmount;

		[NonSerialized]
		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool RecolorOn;

		[NonSerialized]
		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool RebrushOn;

		[NonSerialized]
		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public bool ResizeOn;

		[NonSerialized]
		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public bool JitterOn;

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xE4B838", Offset = "0xE4B838", VA = "0xE4B838", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xE4B990", Offset = "0xE4B990", VA = "0xE4B990")]
		private void UpdateMaterialColors()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xE4BA84", Offset = "0xE4BA84", VA = "0xE4BA84", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xE4BB38", Offset = "0xE4BB38", VA = "0xE4BB38", Slot = "42")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xE4BBA8", Offset = "0xE4BBA8", VA = "0xE4BBA8", Slot = "40")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xE4BBB0", Offset = "0xE4BBB0", VA = "0xE4BBB0", Slot = "46")]
		protected override void UpdateDetection()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xE4BCE0", Offset = "0xE4BCE0", VA = "0xE4BCE0", Slot = "45")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xE4BF30", Offset = "0xE4BF30", VA = "0xE4BF30", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xE4C1C8", Offset = "0xE4C1C8", VA = "0xE4C1C8", Slot = "39")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xE4C3F0", Offset = "0xE4C3F0", VA = "0xE4C3F0", Slot = "41")]
		protected override bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xE4C490", Offset = "0xE4C490", VA = "0xE4C490", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xE4C514", Offset = "0xE4C514", VA = "0xE4C514")]
		public RepaintTool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058D")]
	public struct AdHocRigidAttachment
	{
		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform parent;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform child;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 localPosition;

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xE4C544", Offset = "0xE4C544", VA = "0xE4C544")]
		public void Apply()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class SaveIconTool : BaseTool
	{
		[Token(Token = "0x200058F")]
		public struct CameraRigState
		{
			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 vRigPosition;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion qRigRotation;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion qAutoOrientJointLocalRotation;

			[Token(Token = "0x6002565")]
			[Address(RVA = "0xE4D3A4", Offset = "0xE4D3A4", VA = "0xE4D3A4")]
			public void SetLossyTransform(Vector3 pos, Quaternion rot)
			{
			}

			[Token(Token = "0x6002566")]
			[Address(RVA = "0xE4D4C8", Offset = "0xE4D4C8", VA = "0xE4D4C8")]
			public void SetLossyTransform(TrTransform transform)
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0xE4D540", Offset = "0xE4D540", VA = "0xE4D540")]
			public void GetLossyTransform(out Vector3 pos, out Quaternion rot)
			{
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0xE4D5DC", Offset = "0xE4D5DC", VA = "0xE4D5DC")]
			public TrTransform GetLossyTrTransform()
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x2000590")]
		public enum State
		{
			[Token(Token = "0x400230C")]
			Enter,
			[Token(Token = "0x400230D")]
			WaitingForPicture,
			[Token(Token = "0x400230E")]
			Off
		}

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_CameraScreen;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AdHocRigidAttachment m_CameraRigAttachment;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ScreenshotManager m_SaveIconScreenshotManager;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_LockToController;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_CameraController;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0.125f, 4f)]
		[SerializeField]
		private float m_superSampling;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private State m_CurrentState;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_EnterAmount;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int m_HapticCountTotal;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_HapticInterval;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_HapticCounterWand;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_HapticTimerWand;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_HapticCounterBrush;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_HapticTimerBrush;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_HapticBuzzLength;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform m_CameraRigAutoOrientJoint;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CameraRigState m_LastSaveCameraRigState;

		[Token(Token = "0x17000699")]
		public ScreenshotManager ScreenshotManager
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xE4C5EC", Offset = "0xE4C5EC", VA = "0xE4C5EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069A")]
		public Transform CameraRig
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xE4C5F4", Offset = "0xE4C5F4", VA = "0xE4C5F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069B")]
		public CameraRigState LastSaveCameraRigState
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xE4C5FC", Offset = "0xE4C5FC", VA = "0xE4C5FC")]
			get
			{
				return default(CameraRigState);
			}
		}

		[Token(Token = "0x1700069C")]
		public CameraRigState CurrentCameraRigState
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xE4C610", Offset = "0xE4C610", VA = "0xE4C610")]
			get
			{
				return default(CameraRigState);
			}
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xE4C6B4", Offset = "0xE4C6B4", VA = "0xE4C6B4")]
			set
			{
			}
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xE4C718", Offset = "0xE4C718", VA = "0xE4C718", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xE4C9AC", Offset = "0xE4C9AC", VA = "0xE4C9AC", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xE4C9DC", Offset = "0xE4C9DC", VA = "0xE4C9DC", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xE4CB70", Offset = "0xE4CB70", VA = "0xE4CB70", Slot = "9")]
		protected override void OnSwap()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xE4CBEC", Offset = "0xE4CBEC", VA = "0xE4CBEC", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xE4CC60", Offset = "0xE4CC60", VA = "0xE4CC60", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xE4CFA0", Offset = "0xE4CFA0", VA = "0xE4CFA0", Slot = "26")]
		public override bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xE4CFA8", Offset = "0xE4CFA8", VA = "0xE4CFA8")]
		private void Update()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xE4D13C", Offset = "0xE4D13C", VA = "0xE4D13C", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xE4D158", Offset = "0xE4D158", VA = "0xE4D158")]
		public void ProgrammaticCaptureSaveIcon(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xE4D020", Offset = "0xE4D020", VA = "0xE4D020")]
		private void UpdateTransformsFromControllers()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xE4D404", Offset = "0xE4D404", VA = "0xE4D404")]
		private Vector3 TransformOffset(Transform rBase, Vector3 vOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xE4CB2C", Offset = "0xE4CB2C", VA = "0xE4CB2C")]
		private void UpdateToolScale()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xE4D47C", Offset = "0xE4D47C", VA = "0xE4D47C", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xE4D484", Offset = "0xE4D484", VA = "0xE4D484", Slot = "32")]
		public override bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xE4D48C", Offset = "0xE4D48C", VA = "0xE4D48C", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xE4D494", Offset = "0xE4D494", VA = "0xE4D494", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xE4D49C", Offset = "0xE4D49C", VA = "0xE4D49C", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xE4D4A4", Offset = "0xE4D4A4", VA = "0xE4D4A4")]
		public SaveIconTool()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class SelectionTool : ToggleStrokeModificationTool
	{
		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private float m_DuplicateHoldDuration;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool m_ActiveSelectionHasAtLeastOneObject;

		[Token(Token = "0x1700069D")]
		public override float ButtonHoldDuration
		{
			[Token(Token = "0x6002569")]
			[Address(RVA = "0xE4D674", Offset = "0xE4D674", VA = "0xE4D674", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xE4D67C", Offset = "0xE4D67C", VA = "0xE4D67C", Slot = "47")]
		protected override bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xE4D6D8", Offset = "0xE4D6D8", VA = "0xE4D6D8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xE4D760", Offset = "0xE4D760", VA = "0xE4D760", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xE4D8DC", Offset = "0xE4D8DC", VA = "0xE4D8DC", Slot = "19")]
		public override float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xE4DA68", Offset = "0xE4DA68", VA = "0xE4DA68", Slot = "48")]
		protected override void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xE4DB64", Offset = "0xE4DB64", VA = "0xE4DB64", Slot = "50")]
		public override void OnDoubleTap()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xE4DC08", Offset = "0xE4DC08", VA = "0xE4DC08", Slot = "49")]
		public override void OnUpdateDetection()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xE4E27C", Offset = "0xE4E27C", VA = "0xE4E27C", Slot = "43")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xE4E2EC", Offset = "0xE4E2EC", VA = "0xE4E2EC", Slot = "40")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xE4E748", Offset = "0xE4E748", VA = "0xE4E748", Slot = "39")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xE4D860", Offset = "0xE4D860", VA = "0xE4D860")]
		private void EndSelection()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xE4E1A4", Offset = "0xE4E1A4", VA = "0xE4E1A4")]
		private void FinalizeSelectionBatch()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xE4EC2C", Offset = "0xE4EC2C", VA = "0xE4EC2C", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xE4ED20", Offset = "0xE4ED20", VA = "0xE4ED20")]
		public SelectionTool()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class SketchOriginTool : BaseTool
	{
		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_ParentPosition;

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xE4ED60", Offset = "0xE4ED60", VA = "0xE4ED60", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xE4EEC8", Offset = "0xE4EEC8", VA = "0xE4EEC8", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xE4EF50", Offset = "0xE4EF50", VA = "0xE4EF50")]
		public SketchOriginTool()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class SketchSurfaceTool : BaseTool
	{
		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_FrontSide;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_BackSide;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color m_FrontSideColor;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color m_BackSideColor;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_AdjustBrushSizeScalar;

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xE4EF58", Offset = "0xE4EF58", VA = "0xE4EF58", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xE4F004", Offset = "0xE4F004", VA = "0xE4F004", Slot = "5")]
		public override bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xE4F00C", Offset = "0xE4F00C", VA = "0xE4F00C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xE4F08C", Offset = "0xE4F08C", VA = "0xE4F08C", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xE4F1BC", Offset = "0xE4F1BC", VA = "0xE4F1BC", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xE4F240", Offset = "0xE4F240", VA = "0xE4F240", Slot = "25")]
		public override void BacksideActive(bool bActive)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xE4F288", Offset = "0xE4F288", VA = "0xE4F288")]
		public SketchSurfaceTool()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class SnipTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x2000595")]
		private enum State
		{
			[Token(Token = "0x4002327")]
			Enter,
			[Token(Token = "0x4002328")]
			Standard,
			[Token(Token = "0x4002329")]
			Exit,
			[Token(Token = "0x400232A")]
			Off
		}

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform m_DropperTransform;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_DropperConeRenderer;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Renderer m_DropperRenderer;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_DropperBrushSelectRadius;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Renderer m_DropperColorDescriptionSwatchRenderer;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_ValidBrushFoundThisFrame;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool m_SelectionValid;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Color m_SelectionColor;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Stroke m_SelectionStroke;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private State m_CurrentState;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float m_EnterAmount;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform m_OffsetTransform;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 m_OffsetTransformBaseScale;

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xE4F290", Offset = "0xE4F290", VA = "0xE4F290")]
		public void DisableRequestExit_HackForSceneSurgeon()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xE4F298", Offset = "0xE4F298", VA = "0xE4F298", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xE4F318", Offset = "0xE4F318", VA = "0xE4F318", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xE4F384", Offset = "0xE4F384", VA = "0xE4F384", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xE4F3F0", Offset = "0xE4F3F0", VA = "0xE4F3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xE4F2DC", Offset = "0xE4F2DC", VA = "0xE4F2DC")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xE4F488", Offset = "0xE4F488", VA = "0xE4F488", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xE4F55C", Offset = "0xE4F55C", VA = "0xE4F55C")]
		private int ClosestControlPoint(Stroke stroke)
		{
			return default(int);
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xE4F6C8", Offset = "0xE4F6C8", VA = "0xE4F6C8", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xE4F7EC", Offset = "0xE4F7EC", VA = "0xE4F7EC", Slot = "38")]
		protected override void HandleIntersection(Stroke stroke)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xE4F2E4", Offset = "0xE4F2E4", VA = "0xE4F2E4")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xE4F964", Offset = "0xE4F964", VA = "0xE4F964", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xE4F96C", Offset = "0xE4F96C", VA = "0xE4F96C")]
		public SnipTool()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class StrokeModificationTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x2000597")]
		private enum AudioState
		{
			[Token(Token = "0x400233F")]
			Off,
			[Token(Token = "0x4002340")]
			FadingIn,
			[Token(Token = "0x4002341")]
			On,
			[Token(Token = "0x4002342")]
			FadingOut
		}

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform m_ToolTransform;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Renderer m_ToolDescriptionText;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 m_SizeRange;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float m_CurrentSize;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected bool m_LockToController;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material m_ToolColdMaterial;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Material m_ToolHotMaterial;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool m_ToolWasHot;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_HapticInterval;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_HapticSizeUp;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_HapticSizeDown;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GvrAudioSource m_ToolAudio;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AudioState m_CurrentAudioState;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float m_AudioFadeRatio;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float m_AudioVolumeMax;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_AudioAttackSpeed;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioClip[] m_ModifyStrokeSounds;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_ModifyStrokeMinTriggerTime;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_ModifyStrokeTimestamp;

		[Token(Token = "0x1700069E")]
		public virtual bool IsHot
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE4F97C", Offset = "0xE4F97C", VA = "0xE4F97C", Slot = "44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xE4FA08", Offset = "0xE4FA08", VA = "0xE4FA08", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xE4BB20", Offset = "0xE4BB20", VA = "0xE4BB20", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xE4FAF8", Offset = "0xE4FAF8", VA = "0xE4FAF8", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xE4BE74", Offset = "0xE4BE74", VA = "0xE4BE74")]
		protected void RequestPlayAudio(bool bPlay)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xE4DBD0", Offset = "0xE4DBD0", VA = "0xE4DBD0")]
		protected void HardStopAudio()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xE4FB78", Offset = "0xE4FB78", VA = "0xE4FB78", Slot = "11")]
		public override bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xE4FB80", Offset = "0xE4FB80", VA = "0xE4FB80", Slot = "43")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xE4FBC4", Offset = "0xE4FBC4", VA = "0xE4FBC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xE4FD24", Offset = "0xE4FD24", VA = "0xE4FD24", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xE4FD74", Offset = "0xE4FD74", VA = "0xE4FD74", Slot = "45")]
		protected virtual void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xE4FD78", Offset = "0xE4FD78", VA = "0xE4FD78", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xE4BBF0", Offset = "0xE4BBF0", VA = "0xE4BBF0", Slot = "46")]
		protected virtual void UpdateDetection()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xE4FF34", Offset = "0xE4FF34", VA = "0xE4FF34", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xE500D4", Offset = "0xE500D4", VA = "0xE500D4", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xE500DC", Offset = "0xE500DC", VA = "0xE500DC", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xE4C30C", Offset = "0xE4C30C", VA = "0xE4C30C")]
		protected void PlayModifyStrokeSound()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xE50118", Offset = "0xE50118", VA = "0xE50118", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xE4C530", Offset = "0xE4C530", VA = "0xE4C530")]
		public StrokeModificationTool()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class TeleportTool : BaseTool
	{
		[Token(Token = "0x2000599")]
		public enum BoundsState
		{
			[Token(Token = "0x4002367")]
			FadingInDelay,
			[Token(Token = "0x4002368")]
			FadingIn,
			[Token(Token = "0x4002369")]
			Showing,
			[Token(Token = "0x400236A")]
			FadingOut,
			[Token(Token = "0x400236B")]
			Off
		}

		[Token(Token = "0x200059A")]
		public enum TeleportFadeState
		{
			[Token(Token = "0x400236D")]
			FadeToScene,
			[Token(Token = "0x400236E")]
			FadingToBlack,
			[Token(Token = "0x400236F")]
			Default
		}

		[Token(Token = "0x200059B")]
		public enum ToolState
		{
			[Token(Token = "0x4002371")]
			Enter,
			[Token(Token = "0x4002372")]
			Active,
			[Token(Token = "0x4002373")]
			Off
		}

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_TeleportBounds;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DynamicBounds m_TeleportBoundsCurrent;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private DynamicBounds m_TeleportBoundsDesired;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_TeleportParabolaPoints;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_TeleportParabolaSpeed;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_TeleportParabolaGravity;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_TeleportParabolaMaxY;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_TeleportParabolaDampen;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_BadTeleportIcon;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform m_TeleportPlaceIcon;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector2 m_TeleportPlaceIconShrinkRange;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_BoundsEnterDelay;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_BoundsEnterSpeed;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_TeleportFadeSpeed;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_LockToController;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform m_BrushController;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_TeleportPlaceIconBaseScale;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_HideValidTeleportParabola;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_TeleportParabolaFadeAmount;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_BoundsEnterDelayCountdown;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_BoundsShowAmount;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private BoundsState m_BoundsState;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TeleportFadeState m_TeleportFadeState;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_TeleportFadeAmount;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_TeleportForceBoundsPosition;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_BadTeleportIconEnterAmount;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LineRenderer m_TeleportParabola;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Ray m_LastParabolaRay;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_LastParabolaTime;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 m_LastParabolaVelocity;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ToolState m_CurrentState;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_EnterAmount;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector3 m_TeleportTargetVector;

		[Token(Token = "0x1700069F")]
		private float BoundsRadius
		{
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0xE5013C", Offset = "0xE5013C", VA = "0xE5013C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xE50190", Offset = "0xE50190", VA = "0xE50190")]
		private bool CanTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xE50334", Offset = "0xE50334", VA = "0xE50334", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xE50524", Offset = "0xE50524", VA = "0xE50524", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xE505D0", Offset = "0xE505D0", VA = "0xE505D0", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xE50944", Offset = "0xE50944", VA = "0xE50944")]
		private bool UpdateTool_PlaceParabola()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xE51118", Offset = "0xE51118", VA = "0xE51118", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xE516E4", Offset = "0xE516E4", VA = "0xE516E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xE519B8", Offset = "0xE519B8", VA = "0xE519B8", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xE518A4", Offset = "0xE518A4", VA = "0xE518A4")]
		private void UpdateTransformsFromControllers()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xE519D4", Offset = "0xE519D4", VA = "0xE519D4")]
		private Vector3 TransformOffset(Transform rBase, Vector3 vOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xE50790", Offset = "0xE50790", VA = "0xE50790")]
		private void UpdateToolScale()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xE507DC", Offset = "0xE507DC", VA = "0xE507DC")]
		private void UpdateBoundsScale(float fScale)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xE50848", Offset = "0xE50848", VA = "0xE50848")]
		private void UpdateIconScale()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xE5057C", Offset = "0xE5057C", VA = "0xE5057C")]
		private void SetBoundsVisibility(bool bShow)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xE50FE8", Offset = "0xE50FE8", VA = "0xE50FE8")]
		private void SetTeleportParabola()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xE51A4C", Offset = "0xE51A4C", VA = "0xE51A4C")]
		private Vector3 GetPositionOnParabola(Vector3 vInitialPos, Vector3 vVel, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xE51AF0", Offset = "0xE51AF0", VA = "0xE51AF0", Slot = "26")]
		public override bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xE51AF8", Offset = "0xE51AF8", VA = "0xE51AF8", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xE51B08", Offset = "0xE51B08", VA = "0xE51B08", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xE51B18", Offset = "0xE51B18", VA = "0xE51B18", Slot = "31")]
		public override bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xE51B20", Offset = "0xE51B20", VA = "0xE51B20", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xE51B30", Offset = "0xE51B30", VA = "0xE51B30", Slot = "35")]
		public override void EnableRenderer(bool enable)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xE51B78", Offset = "0xE51B78", VA = "0xE51B78", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xE51B88", Offset = "0xE51B88", VA = "0xE51B88", Slot = "12")]
		public override bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xE51B90", Offset = "0xE51B90", VA = "0xE51B90")]
		public TeleportTool()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class ToggleStrokeModificationTool : StrokeModificationTool
	{
		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material m_ToolHotOffMaterial;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		protected Renderer m_OnMesh;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		protected Renderer m_OffMesh;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		protected Renderer m_HighlightMesh;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected Renderer m_OnRotationMesh;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		protected Renderer m_OffRotationMesh;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private float m_ToggleAnimationDuration;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		protected float m_HapticsToggleOn;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		protected float m_HapticsToggleOff;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float m_HapticsIntersection;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool m_AllowDoubleTap;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private float m_DoubleTapDuration;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private float m_MaxSpinSpeed;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private float m_SpinSpeedAcceleration;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float m_SpinSpeedDecay;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_SpinSpeed;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float m_SpinAmount;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected bool m_CurrentlyHot;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool m_ToggleAnimationSwitched;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float m_ToggleAnimationRemaining;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Queue<float> m_DoubleTapTimes;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool m_EatDoubleTapInput;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected float m_LastIntersectionTime;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 m_OnRotationMeshBaseLocalPosition;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Vector3 m_OffRotationMeshBaseLocalPosition;

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xE51BC8", Offset = "0xE51BC8", VA = "0xE51BC8")]
		private void ClearDoubleTapTimes()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xE51C54", Offset = "0xE51C54", VA = "0xE51C54", Slot = "47")]
		protected virtual bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xE4AABC", Offset = "0xE4AABC", VA = "0xE4AABC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xE4ADA0", Offset = "0xE4ADA0", VA = "0xE4ADA0", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xE51C9C", Offset = "0xE51C9C", VA = "0xE51C9C", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xE51DD8", Offset = "0xE51DD8", VA = "0xE51DD8", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xE4AEF0", Offset = "0xE4AEF0", VA = "0xE4AEF0")]
		public void StartToggleAnimation()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xE51C5C", Offset = "0xE51C5C", VA = "0xE51C5C")]
		protected void ResetToggleAnimation()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xE51DE8", Offset = "0xE51DE8", VA = "0xE51DE8")]
		private void UpdateToggleAnimation()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xE51F0C", Offset = "0xE51F0C", VA = "0xE51F0C", Slot = "48")]
		protected virtual void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xE4AB90", Offset = "0xE4AB90", VA = "0xE4AB90")]
		protected void UpdateMesh()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xE4B15C", Offset = "0xE4B15C", VA = "0xE4B15C")]
		protected void ResetToolRotation()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xE51F10", Offset = "0xE51F10", VA = "0xE51F10", Slot = "45")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xE52214", Offset = "0xE52214", VA = "0xE52214", Slot = "37")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xE52548", Offset = "0xE52548", VA = "0xE52548", Slot = "46")]
		protected override void UpdateDetection()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xE52850", Offset = "0xE52850", VA = "0xE52850", Slot = "49")]
		public virtual void OnUpdateDetection()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xE52854", Offset = "0xE52854", VA = "0xE52854", Slot = "50")]
		public virtual void OnDoubleTap()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xE52858", Offset = "0xE52858", VA = "0xE52858", Slot = "42")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xE4B6D4", Offset = "0xE4B6D4", VA = "0xE4B6D4")]
		protected void HapticFeedback()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xE5285C", Offset = "0xE5285C", VA = "0xE5285C", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xE4B804", Offset = "0xE4B804", VA = "0xE4B804")]
		public ToggleStrokeModificationTool()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class TransformGizmoScript : MonoBehaviour
	{
		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] m_AxesColors;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_Axes;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_ActiveAxisColor;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_InactiveAxisColor;

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xE5286C", Offset = "0xE5286C", VA = "0xE5286C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xE52970", Offset = "0xE52970", VA = "0xE52970")]
		public void SetTransformForPushPull()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xE52A9C", Offset = "0xE52A9C", VA = "0xE52A9C")]
		public void SetTransformForPan()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xE52870", Offset = "0xE52870", VA = "0xE52870")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xE52BC8", Offset = "0xE52BC8", VA = "0xE52BC8")]
		public TransformGizmoScript()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class AdvancedPanelsPromo : BasePromo
	{
		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_TimeBeforeDisplay;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_TimeBeforeReadDismiss;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_ReadDismissTimer;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HintObjectScript m_CustomHintObject;

		[Token(Token = "0x170006A0")]
		public override string PrefsKey
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0xE52C24", Offset = "0xE52C24", VA = "0xE52C24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xE52BD0", Offset = "0xE52BD0", VA = "0xE52BD0")]
		public AdvancedPanelsPromo()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xE52C64", Offset = "0xE52C64", VA = "0xE52C64", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xE52EC0", Offset = "0xE52EC0", VA = "0xE52EC0", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xE52F58", Offset = "0xE52F58", VA = "0xE52F58", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xE53128", Offset = "0xE53128", VA = "0xE53128", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public enum PromoType
	{
		[Token(Token = "0x4002397")]
		BrushSize,
		[Token(Token = "0x4002398")]
		TriggerToPin,
		[Token(Token = "0x4002399")]
		FloatingPanel,
		[Token(Token = "0x400239A")]
		ShareSketch,
		[Token(Token = "0x400239B")]
		Selection,
		[Token(Token = "0x400239C")]
		Duplicate,
		[Token(Token = "0x400239D")]
		InteractIntroPanel,
		[Token(Token = "0x400239E")]
		TriggerToUnpin,
		[Token(Token = "0x400239F")]
		SaveIcon,
		[Token(Token = "0x40023A0")]
		Deselection,
		[Token(Token = "0x40023A1")]
		AdvancedPanels
	}
	[Token(Token = "0x20005A0")]
	public abstract class BasePromo
	{
		[Token(Token = "0x20005A1")]
		protected enum RequestingState
		{
			[Token(Token = "0x40023A6")]
			None,
			[Token(Token = "0x40023A7")]
			ToDisplay,
			[Token(Token = "0x40023A8")]
			ToHide
		}

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PromoType m_PromoType;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HintObjectScript m_HintObject;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RequestingState m_Request;

		[Token(Token = "0x170006A1")]
		public PromoType PromoType
		{
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xE53208", Offset = "0xE53208", VA = "0xE53208")]
			get
			{
				return default(PromoType);
			}
		}

		[Token(Token = "0x170006A2")]
		public abstract string PrefsKey
		{
			[Token(Token = "0x60025DD")]
			get;
		}

		[Token(Token = "0x170006A3")]
		public bool ReadyToDisplay
		{
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xE53210", Offset = "0xE53210", VA = "0xE53210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A4")]
		public bool ShouldBeHidden
		{
			[Token(Token = "0x60025DF")]
			[Address(RVA = "0xE53220", Offset = "0xE53220", VA = "0xE53220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xE52BFC", Offset = "0xE52BFC", VA = "0xE52BFC")]
		public BasePromo(PromoType type)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xE53230", Offset = "0xE53230", VA = "0xE53230")]
		public void Display()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xE532B8", Offset = "0xE532B8", VA = "0xE532B8", Slot = "5")]
		protected virtual void OnDisplay()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xE532BC", Offset = "0xE532BC", VA = "0xE532BC")]
		public void Hide()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xE5335C", Offset = "0xE5335C", VA = "0xE5335C", Slot = "6")]
		protected virtual void OnHide()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xE53360", Offset = "0xE53360", VA = "0xE53360", Slot = "7")]
		public virtual void OnIdle()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xE53364", Offset = "0xE53364", VA = "0xE53364", Slot = "8")]
		public virtual void OnActive()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xE53368", Offset = "0xE53368", VA = "0xE53368", Slot = "9")]
		public virtual void OnComplete()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class BrushSizePromo : BasePromo
	{
		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_BrushSizeHintLastPos;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_BrushSizeHintLastPosSet;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_BrushSizeHintMovementAmount;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_BrushSizeHintSwipeTotal;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_PreventHint;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_PlayedAudioCue;

		[Token(Token = "0x170006A5")]
		public override string PrefsKey
		{
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xE533F4", Offset = "0xE533F4", VA = "0xE533F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xE5336C", Offset = "0xE5336C", VA = "0xE5336C")]
		public BrushSizePromo()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xE53434", Offset = "0xE53434", VA = "0xE53434", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xE53504", Offset = "0xE53504", VA = "0xE53504", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xE53928", Offset = "0xE53928", VA = "0xE53928", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class ControllerConsoleMessage : MonoBehaviour
	{
		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_Message;

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xE53A78", Offset = "0xE53A78", VA = "0xE53A78")]
		private void Start()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xE53ADC", Offset = "0xE53ADC", VA = "0xE53ADC")]
		public ControllerConsoleMessage()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class ControllerTutorialScript : MonoBehaviour
	{
		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_HapticBuzzLength;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_HapticPulses;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_MeshMaterialInactive;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_TriggerMaterialInactive;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_OriginalMeshMaterial;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_OriginalTriggerMaterial;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BaseControllerBehavior m_BaseBehavior;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer m_Mesh;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer m_Trigger;

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xE53AE4", Offset = "0xE53AE4", VA = "0xE53AE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xE53B90", Offset = "0xE53B90", VA = "0xE53B90")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xE53AE8", Offset = "0xE53AE8", VA = "0xE53AE8")]
		private void InitCachedComponents()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xE53BD0", Offset = "0xE53BD0", VA = "0xE53BD0")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xE53CC0", Offset = "0xE53CC0", VA = "0xE53CC0")]
		public void Activate(bool bActivate)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xE53E2C", Offset = "0xE53E2C", VA = "0xE53E2C")]
		public void DisableTutorialObject()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xE53E50", Offset = "0xE53E50", VA = "0xE53E50")]
		public ControllerTutorialScript()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class DeselectionPromo : BasePromo
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x170006A6")]
		public override string PrefsKey
		{
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xE53E64", Offset = "0xE53E64", VA = "0xE53E64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xE53EA4", Offset = "0xE53EA4", VA = "0xE53EA4")]
		public DeselectionPromo()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xE53ECC", Offset = "0xE53ECC", VA = "0xE53ECC", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xE53FCC", Offset = "0xE53FCC", VA = "0xE53FCC", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xE54058", Offset = "0xE54058", VA = "0xE54058", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xE54070", Offset = "0xE54070", VA = "0xE54070", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class DuplicatePromo : BasePromo
	{
		[Token(Token = "0x170006A7")]
		public override string PrefsKey
		{
			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xE5413C", Offset = "0xE5413C", VA = "0xE5413C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xE5417C", Offset = "0xE5417C", VA = "0xE5417C")]
		public DuplicatePromo()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xE5419C", Offset = "0xE5419C", VA = "0xE5419C", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xE542CC", Offset = "0xE542CC", VA = "0xE542CC", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xE542D4", Offset = "0xE542D4", VA = "0xE542D4", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xE543F0", Offset = "0xE543F0", VA = "0xE543F0", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class FloatingPanelPromo : BasePromo
	{
		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BasePanel m_Panel;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BasePanel m_InitialPanel;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_TossState;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_RequireNewPanelToDisplay;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_NumPanelsGrabbed;

		[Token(Token = "0x170006A8")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0xE54588", Offset = "0xE54588", VA = "0xE54588", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A9")]
		private bool TossState
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xE545C8", Offset = "0xE545C8", VA = "0xE545C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002605")]
			[Address(RVA = "0xE545D0", Offset = "0xE545D0", VA = "0xE545D0")]
			set
			{
			}
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xE54494", Offset = "0xE54494", VA = "0xE54494")]
		private bool ShouldShowTossVisuals()
		{
			return default(bool);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xE5482C", Offset = "0xE5482C", VA = "0xE5482C")]
		public FloatingPanelPromo()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xE549E8", Offset = "0xE549E8", VA = "0xE549E8", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xE54ADC", Offset = "0xE54ADC", VA = "0xE54ADC", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xE54C78", Offset = "0xE54C78", VA = "0xE54C78", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xE554C4", Offset = "0xE554C4", VA = "0xE554C4", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xE548D4", Offset = "0xE548D4", VA = "0xE548D4")]
		private void RequestDisplayForGrabState()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xE552F8", Offset = "0xE552F8", VA = "0xE552F8")]
		private void RequestDisplayForTossState()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xE55088", Offset = "0xE55088", VA = "0xE55088")]
		private void AlignHintLine()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class GripHintScript : MonoBehaviour
	{
		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_ArrowTransform;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_ArrowBasePosition;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_ArrowBobSpeed;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_ArrowBobScalar;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_ArrowBobValue;

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xE55B68", Offset = "0xE55B68", VA = "0xE55B68")]
		private void Awake()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xE55B94", Offset = "0xE55B94", VA = "0xE55B94")]
		private void Update()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xE55BFC", Offset = "0xE55BFC", VA = "0xE55BFC")]
		public GripHintScript()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class HintArrowLineScript : MonoBehaviour
	{
		[Token(Token = "0x20005AA")]
		private class Arrow
		{
			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_DistanceToTarget;

			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_Arrow;

			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 m_BaseScale;

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xE55F8C", Offset = "0xE55F8C", VA = "0xE55F8C")]
			public void SetScale(float scale)
			{
			}

			[Token(Token = "0x600261C")]
			[Address(RVA = "0xE55FD8", Offset = "0xE55FD8", VA = "0xE55FD8")]
			public Arrow()
			{
			}
		}

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ArrowPrefab;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_ArrowSpacing;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_MovementSpeed;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_ScaleDistance;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DisappearDistance;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GlobalModeScaleDistance;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GlobalModeDisappearDistance;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_AutoUpdate;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_AutoPositionOffset;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_AutoRotationOrigin;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 m_AutoRotationTarget;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_GlobalMode;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Arrow> m_Arrows;

		[Token(Token = "0x170006AA")]
		public bool GlobalMode
		{
			[Token(Token = "0x6002611")]
			[Address(RVA = "0xE55C04", Offset = "0xE55C04", VA = "0xE55C04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002612")]
			[Address(RVA = "0xE55C0C", Offset = "0xE55C0C", VA = "0xE55C0C")]
			set
			{
			}
		}

		[Token(Token = "0x170006AB")]
		private float DisappearDistance
		{
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xE55C18", Offset = "0xE55C18", VA = "0xE55C18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AC")]
		private float ScaleDistance
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xE55C34", Offset = "0xE55C34", VA = "0xE55C34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xE55C50", Offset = "0xE55C50", VA = "0xE55C50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xE55CC4", Offset = "0xE55CC4", VA = "0xE55CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xE55660", Offset = "0xE55660", VA = "0xE55660")]
		public void UpdateLine(TrTransform origin, TrTransform target)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xE54B80", Offset = "0xE54B80", VA = "0xE54B80")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xE55FE0", Offset = "0xE55FE0", VA = "0xE55FE0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xE563A0", Offset = "0xE563A0", VA = "0xE563A0")]
		public HintArrowLineScript()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class HintObjectScript : MonoBehaviour
	{
		[Token(Token = "0x20005AC")]
		public enum State
		{
			[Token(Token = "0x40023E3")]
			Deactivated,
			[Token(Token = "0x40023E4")]
			Activating,
			[Token(Token = "0x40023E5")]
			Active,
			[Token(Token = "0x40023E6")]
			Deactivating
		}

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_HintObject;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_HintObjectParent;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_HintObjectScale;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_ActiveMinShowAngle;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_ScaleXOnly;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMesh m_HintText;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ActivateSpeed;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_ActivateTimer;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3? m_OriginalHintObjectPosition;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion? m_OriginalHintObjectRotation;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_UnparentOnEnable;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_CurrentState;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_ActiveStatePrevTimer;

		[Token(Token = "0x170006AD")]
		private bool HintObjectReparented
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0xE567A0", Offset = "0xE567A0", VA = "0xE567A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xE563C8", Offset = "0xE563C8", VA = "0xE563C8")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xE54798", Offset = "0xE54798", VA = "0xE54798")]
		public void SetHintText(string text)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xE563D8", Offset = "0xE563D8", VA = "0xE563D8")]
		public string GetHintText()
		{
			return null;
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xE56474", Offset = "0xE56474", VA = "0xE56474")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xE530AC", Offset = "0xE530AC", VA = "0xE530AC")]
		public void Activate(bool bActivate)
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xE566F0", Offset = "0xE566F0", VA = "0xE566F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xE56854", Offset = "0xE56854", VA = "0xE56854")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xE56C48", Offset = "0xE56C48", VA = "0xE56C48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xE56CE8", Offset = "0xE56CE8", VA = "0xE56CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xE568D4", Offset = "0xE568D4", VA = "0xE568D4")]
		private void ParentHintObject()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xE56534", Offset = "0xE56534", VA = "0xE56534")]
		private void UnparentHintObject()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xE564B4", Offset = "0xE564B4", VA = "0xE564B4")]
		private void UpdateScale(float fScale)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xE56E60", Offset = "0xE56E60", VA = "0xE56E60")]
		private void UpdateActive()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xE57008", Offset = "0xE57008", VA = "0xE57008")]
		public HintObjectScript()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class InteractIntroPanelPromo : BasePromo
	{
		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_SwappingControls;

		[Token(Token = "0x170006AE")]
		public override string PrefsKey
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0xE5702C", Offset = "0xE5702C", VA = "0xE5702C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xE5706C", Offset = "0xE5706C", VA = "0xE5706C")]
		public InteractIntroPanelPromo()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xE570FC", Offset = "0xE570FC", VA = "0xE570FC", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xE5718C", Offset = "0xE5718C", VA = "0xE5718C", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xE57328", Offset = "0xE57328", VA = "0xE57328")]
		private void AlignHintLine()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xE57614", Offset = "0xE57614", VA = "0xE57614", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xE576FC", Offset = "0xE576FC", VA = "0xE576FC", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public interface IPromoFactory
	{
		[Token(Token = "0x170006AF")]
		PromoType InstanceType
		{
			[Token(Token = "0x6002634")]
			get;
		}

		[Token(Token = "0x170006B0")]
		string PrefsKey
		{
			[Token(Token = "0x6002635")]
			get;
		}

		[Token(Token = "0x6002633")]
		BasePromo CreateInstance();
	}
	[Token(Token = "0x20005AF")]
	public class PromoFactory<T> : IPromoFactory where T : BasePromo, new()
	{
		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PromoType m_Type;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_KeySuffix;

		[Token(Token = "0x170006B1")]
		public PromoType InstanceType
		{
			[Token(Token = "0x6002638")]
			get
			{
				return default(PromoType);
			}
		}

		[Token(Token = "0x170006B2")]
		public string PrefsKey
		{
			[Token(Token = "0x6002639")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002636")]
		public PromoFactory(PromoType type, string keySuffix)
		{
		}

		[Token(Token = "0x6002637")]
		public BasePromo CreateInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x20005B0")]
	public class PromoManager : MonoBehaviour
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PromoManager m_Instance;

		[Token(Token = "0x40023EB")]
		public const string kPromoPrefix = "Promo_";

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Button Promos")]
		[SerializeField]
		private GameObject m_ButtonHighlightPrefab;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Share Sketch Promo")]
		[SerializeField]
		private Material m_BorderMaterial;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_HintLinePrefab;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("Brush Size Promo")]
		private float m_BrushSizeHintShowDistance;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_BrushSizeHintPreventSwipeAmount;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_BrushSizeHintCancelSwipeAmount;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Floating Panel Promo")]
		[SerializeField]
		[TextArea]
		private string m_GrabPanelHintText;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[TextArea]
		private string m_TossPanelHintText;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<PromoType, IPromoFactory> m_Factories;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<BasePromo> m_RequestedPromos;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BasePromo m_DisplayedPromo;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HintArrowLineScript m_HintLine;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject m_ButtonHighlightMesh;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_ButtonHighlightMeshBasePos;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_ButtonHighlightMeshBaseScale;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_RequestedAdvancedPanelsThisSession;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_RequestedFloatingPanelsThisSession;

		[Token(Token = "0x170006B3")]
		public Material SharePromoMaterial
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xE5780C", Offset = "0xE5780C", VA = "0xE5780C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B4")]
		public HintArrowLineScript HintLine
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xE57814", Offset = "0xE57814", VA = "0xE57814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B5")]
		public GameObject ButtonHighlight
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xE5781C", Offset = "0xE5781C", VA = "0xE5781C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B6")]
		public float BrushSizeHintShowDistance
		{
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xE57824", Offset = "0xE57824", VA = "0xE57824")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B7")]
		public float BrushSizeHintPreventSwipeAmount
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0xE5782C", Offset = "0xE5782C", VA = "0xE5782C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B8")]
		public float BrushSizeHintCancelSwipeAmount
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xE57834", Offset = "0xE57834", VA = "0xE57834")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B9")]
		public string GrabPanelHintText
		{
			[Token(Token = "0x6002640")]
			[Address(RVA = "0xE5783C", Offset = "0xE5783C", VA = "0xE5783C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006BA")]
		public string TossPanelHintText
		{
			[Token(Token = "0x6002641")]
			[Address(RVA = "0xE57844", Offset = "0xE57844", VA = "0xE57844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006BB")]
		public IEnumerable<BasePromo> RequestedPromos
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xE5784C", Offset = "0xE5784C", VA = "0xE5784C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006BC")]
		public bool ShouldPausePromos
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xE537B4", Offset = "0xE537B4", VA = "0xE537B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xE52E04", Offset = "0xE52E04", VA = "0xE52E04")]
		public void ResetButtonHighlightXf()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xE57854", Offset = "0xE57854", VA = "0xE57854")]
		private string ListRequests()
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xE57BEC", Offset = "0xE57BEC", VA = "0xE57BEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xE584A4", Offset = "0xE584A4", VA = "0xE584A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xE4C7FC", Offset = "0xE4C7FC", VA = "0xE4C7FC")]
		public void RequestPromo(PromoType promo)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xE4DF58", Offset = "0xE4DF58", VA = "0xE4DF58")]
		public void RecordCompletion(PromoType promo)
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xE58728", Offset = "0xE58728", VA = "0xE58728")]
		public bool HasPromoBeenCompleted(PromoType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xE58800", Offset = "0xE58800", VA = "0xE58800")]
		public void RequestAdvancedPanelsPromo()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xE588BC", Offset = "0xE588BC", VA = "0xE588BC")]
		public void RequestFloatingPanelsPromo()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xE588E4", Offset = "0xE588E4", VA = "0xE588E4")]
		public PromoManager()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class SaveIconPromo : BasePromo
	{
		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_SwappingControls;

		[Token(Token = "0x170006BD")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0xE58B24", Offset = "0xE58B24", VA = "0xE58B24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xE58B64", Offset = "0xE58B64", VA = "0xE58B64")]
		public SaveIconPromo()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xE58BEC", Offset = "0xE58BEC", VA = "0xE58BEC", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xE58C58", Offset = "0xE58C58", VA = "0xE58C58", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xE58D54", Offset = "0xE58D54", VA = "0xE58D54", Slot = "6")]
		protected override void OnHide()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class SelectionPromo : BasePromo
	{
		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x170006BE")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xE58DDC", Offset = "0xE58DDC", VA = "0xE58DDC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xE58E1C", Offset = "0xE58E1C", VA = "0xE58E1C")]
		public SelectionPromo()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xE58E44", Offset = "0xE58E44", VA = "0xE58E44", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xE58F44", Offset = "0xE58F44", VA = "0xE58F44", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xE58FD0", Offset = "0xE58FD0", VA = "0xE58FD0", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xE58FE8", Offset = "0xE58FE8", VA = "0xE58FE8", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class ShareSketchPromo : BasePromo
	{
		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_LastSaveFileHumanName;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_TimeBeforeDisplay;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x170006BF")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xE5924C", Offset = "0xE5924C", VA = "0xE5924C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xE59148", Offset = "0xE59148", VA = "0xE59148")]
		public ShareSketchPromo()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xE5928C", Offset = "0xE5928C", VA = "0xE5928C", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xE59554", Offset = "0xE59554", VA = "0xE59554", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xE5964C", Offset = "0xE5964C", VA = "0xE5964C", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xE59A84", Offset = "0xE59A84", VA = "0xE59A84", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class TriggerToPinPromo : BasePromo
	{
		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private InputManager.ControllerName m_Controller;

		[Token(Token = "0x170006C0")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002665")]
			[Address(RVA = "0xE59C54", Offset = "0xE59C54", VA = "0xE59C54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xE59C94", Offset = "0xE59C94", VA = "0xE59C94")]
		public TriggerToPinPromo()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xE59CB4", Offset = "0xE59CB4", VA = "0xE59CB4", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xE59D8C", Offset = "0xE59D8C", VA = "0xE59D8C", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xE59E44", Offset = "0xE59E44", VA = "0xE59E44", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xE59E4C", Offset = "0xE59E4C", VA = "0xE59E4C", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class TriggerToUnpinPromo : BasePromo
	{
		[Token(Token = "0x170006C1")]
		public override string PrefsKey
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0xE59EF0", Offset = "0xE59EF0", VA = "0xE59EF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xE59F30", Offset = "0xE59F30", VA = "0xE59F30")]
		public TriggerToUnpinPromo()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xE59F50", Offset = "0xE59F50", VA = "0xE59F50", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xE5A020", Offset = "0xE5A020", VA = "0xE5A020", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xE5A028", Offset = "0xE5A028", VA = "0xE5A028", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xE5A0A0", Offset = "0xE5A0A0", VA = "0xE5A0A0", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class TutorialControllerSwitcherScript : MonoBehaviour
	{
		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_ViveControllers;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_RiftControllers;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_WmrControllers;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] m_QuestControllers;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_KnucklesControllers;

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xE5A118", Offset = "0xE5A118", VA = "0xE5A118")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xE5A1D8", Offset = "0xE5A1D8", VA = "0xE5A1D8")]
		private void ActivateControllers(GameObject[] gameObjects, bool isActive)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xE5A240", Offset = "0xE5A240", VA = "0xE5A240")]
		public TutorialControllerSwitcherScript()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class TutorialDuplicateScript : MonoBehaviour
	{
		[Token(Token = "0x20005BA")]
		private enum AnimationState
		{
			[Token(Token = "0x4002414")]
			Selected,
			[Token(Token = "0x4002415")]
			Duplicated
		}

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter m_Stroke;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter m_StrokeDuplicate;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_SelectDuration;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DuplicateDuration;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationState m_AnimState;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_Timer;

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xE5A248", Offset = "0xE5A248", VA = "0xE5A248")]
		private void Update()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xE5A3A8", Offset = "0xE5A3A8", VA = "0xE5A3A8")]
		public TutorialDuplicateScript()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class TutorialHighlightScript : MonoBehaviour
	{
		[Token(Token = "0x20005BC")]
		private enum HighlightState
		{
			[Token(Token = "0x400241E")]
			NoGrab,
			[Token(Token = "0x400241F")]
			MoveIn,
			[Token(Token = "0x4002420")]
			Activate,
			[Token(Token = "0x4002421")]
			MoveOut
		}

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_StateDuration;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Highlight;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Controller;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_StartPos;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_EndPos;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HighlightState m_State;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Timer;

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xE5A3B0", Offset = "0xE5A3B0", VA = "0xE5A3B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xE5A538", Offset = "0xE5A538", VA = "0xE5A538")]
		public TutorialHighlightScript()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public enum TutorialType
	{
		[Token(Token = "0x4002423")]
		NextTip,
		[Token(Token = "0x4002424")]
		UndoRedo,
		[Token(Token = "0x4002425")]
		WorldTransform,
		[Token(Token = "0x4002426")]
		WorldTransformReset,
		[Token(Token = "0x4002427")]
		Grip,
		[Token(Token = "0x4002428")]
		ScaleModel,
		[Token(Token = "0x4002429")]
		PinModel,
		[Token(Token = "0x400242A")]
		SnapModel,
		[Token(Token = "0x400242B")]
		SnapLine,
		[Token(Token = "0x400242C")]
		DrawOnGuides,
		[Token(Token = "0x400242D")]
		ColorPalette,
		[Token(Token = "0x400242E")]
		SwapControllers,
		[Token(Token = "0x400242F")]
		Duplicate,
		[Token(Token = "0x4002430")]
		PinCushion,
		[Token(Token = "0x4002431")]
		ControllerConsole,
		[Token(Token = "0x4002432")]
		TossToDismiss,
		[Token(Token = "0x4002433")]
		Num
	}
	[Token(Token = "0x20005BE")]
	public enum IntroTutorialState
	{
		[Token(Token = "0x4002435")]
		ActivateBrush,
		[Token(Token = "0x4002436")]
		WaitForBrushStrokeStart,
		[Token(Token = "0x4002437")]
		WaitForBrushStrokeEnd,
		[Token(Token = "0x4002438")]
		SwipeToUnlockPanels,
		[Token(Token = "0x4002439")]
		WaitForSwipe,
		[Token(Token = "0x400243A")]
		ActivatePanels,
		[Token(Token = "0x400243B")]
		DelayForPointToPanelHint,
		[Token(Token = "0x400243C")]
		WaitForPanelInteract,
		[Token(Token = "0x400243D")]
		InitializeForNoCreation,
		[Token(Token = "0x400243E")]
		Done
	}
	[Serializable]
	[Token(Token = "0x20005BF")]
	public struct TutorialPrefabMap
	{
		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_TutorialPrefab;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TutorialType m_Type;
	}
	[Token(Token = "0x20005C0")]
	public class TutorialManager : MonoBehaviour
	{
		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TutorialManager m_Instance;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Intro Tutorial")]
		[SerializeField]
		private AudioClip m_IntroBeginSound;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_IntroPaintRegisterDistance;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_IntroPointHintDelay;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_IntroSwipeAdvanceAmount;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_PointHintPrefab;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Tutorial Panel")]
		private TutorialPrefabMap[] m_PrefabMap;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Light Gizmo Tutorial")]
		[SerializeField]
		private GameObject m_LightGizmoHintPrefab;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_LightGizmoHoverTimeBeforeHint;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private IntroTutorialState m_IntroState;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_IntroSwipeTotal;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_IntroStateCountdown;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HintArrowLineScript m_IntroPointHintArrowLine;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_IntroPaintLastPos;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_IntroPaintMovementAmount;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IntroPaintWasPainting;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HintObjectScript m_LightGizmoHint;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_LightGizmoHoverTimer;

		[Token(Token = "0x170006C2")]
		public IntroTutorialState IntroState
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0xE5A550", Offset = "0xE5A550", VA = "0xE5A550")]
			get
			{
				return default(IntroTutorialState);
			}
			[Token(Token = "0x6002678")]
			[Address(RVA = "0xE5A548", Offset = "0xE5A548", VA = "0xE5A548")]
			set
			{
			}
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xE5A558", Offset = "0xE5A558", VA = "0xE5A558")]
		public bool TutorialActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xE5A568", Offset = "0xE5A568", VA = "0xE5A568")]
		public bool TutorialPanelsHaveSpawned()
		{
			return default(bool);
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xE5A578", Offset = "0xE5A578", VA = "0xE5A578")]
		private void Awake()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xE5A5C4", Offset = "0xE5A5C4", VA = "0xE5A5C4")]
		public GameObject GetTutorialPrefab(TutorialType type)
		{
			return null;
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xE5A628", Offset = "0xE5A628", VA = "0xE5A628")]
		public void UpdateIntroTutorial()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xE5AEC0", Offset = "0xE5AEC0", VA = "0xE5AEC0")]
		private void AlignPointLineToPanels()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xE5B124", Offset = "0xE5B124", VA = "0xE5B124")]
		public void EnableQuickLoadTutorial(bool bEnable)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xE5ADB4", Offset = "0xE5ADB4", VA = "0xE5ADB4")]
		public void EnablePointAtPanelHint(bool bEnable)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xE5ABC4", Offset = "0xE5ABC4", VA = "0xE5ABC4")]
		public void ActivateControllerTutorial(InputManager.ControllerName eName, bool bActivate)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xE5B230", Offset = "0xE5B230", VA = "0xE5B230")]
		public void UpdateLightGizmoHint()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xE5B500", Offset = "0xE5B500", VA = "0xE5B500")]
		public void ClearLightGizmoHint()
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xE5ACE4", Offset = "0xE5ACE4", VA = "0xE5ACE4")]
		public void DisableControllerTutorial(InputManager.ControllerName eName)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xE5B560", Offset = "0xE5B560", VA = "0xE5B560")]
		public TutorialManager()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class TutorialPointScript : MonoBehaviour
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_BrushControllerAnchor;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_WandControllerAnchor;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_WandPanel;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_PointingLine;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RotationScalar;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_TranslateScalar;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_AnimationSpeed;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_PanelScaleAmount;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 m_PanelActivationRange;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_PointingLineEmissionAmount;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_AnimationValue;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_TranslateBase;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_RotationBase;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_PanelScaleBase;

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xE5B57C", Offset = "0xE5B57C", VA = "0xE5B57C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xE5B660", Offset = "0xE5B660", VA = "0xE5B660")]
		private void Update()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xE5B788", Offset = "0xE5B788", VA = "0xE5B788")]
		public TutorialPointScript()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class TutorialQuickToolScript : MonoBehaviour
	{
		[Token(Token = "0x20005C3")]
		private enum AnimationState
		{
			[Token(Token = "0x400246F")]
			ShowQuickTool,
			[Token(Token = "0x4002470")]
			PauseOnPaint,
			[Token(Token = "0x4002471")]
			SwitchTool,
			[Token(Token = "0x4002472")]
			PauseOnOther,
			[Token(Token = "0x4002473")]
			SwitchBack,
			[Token(Token = "0x4002474")]
			PauseBeforeClose,
			[Token(Token = "0x4002475")]
			HideQuickTool,
			[Token(Token = "0x4002476")]
			ResetPause
		}

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_QuickTool;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Controller;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_PaintCircle;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_OtherCircle;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_ShowHideSpeed;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_MoveSpeed;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_ToolPauseDuration;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_ResetPauseDuration;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_DefaultRotation;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private AnimationState m_AnimState;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_Timer;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_SwitchPosition;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_SwitchRotation;

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xE5B7A4", Offset = "0xE5B7A4", VA = "0xE5B7A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xE5B8BC", Offset = "0xE5B8BC", VA = "0xE5B8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xE5BD54", Offset = "0xE5BD54", VA = "0xE5BD54")]
		public TutorialQuickToolScript()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class TutorialScaleScript : MonoBehaviour
	{
		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_LeftController;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_RightController;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Mesh;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_StateDuration;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_AnimatingIn;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Timer;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_StartPos;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_StartSize;

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xE5BD5C", Offset = "0xE5BD5C", VA = "0xE5BD5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xE5BDB4", Offset = "0xE5BDB4", VA = "0xE5BDB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xE5BF98", Offset = "0xE5BF98", VA = "0xE5BF98")]
		public TutorialScaleScript()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class TutorialSnapScript : MonoBehaviour
	{
		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Unsnapped;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Snapped;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_SwapTime;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_Time;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_ShowingSnapped;

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xE5BFA0", Offset = "0xE5BFA0", VA = "0xE5BFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xE5C034", Offset = "0xE5C034", VA = "0xE5C034")]
		public TutorialSnapScript()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class TutorialTapScript : MonoBehaviour
	{
		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("m_ControllerWand")]
		[SerializeField]
		private Transform m_GeometryWandPanel;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FormerlySerializedAs("m_ControllerBrush")]
		[SerializeField]
		private Transform m_GeometryBrushStroke;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_GeometryViveLeft;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_GeometryViveRight;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[FormerlySerializedAs("m_ControllerRiftWand")]
		[SerializeField]
		private Transform m_GeometryRiftLeft;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FormerlySerializedAs("m_ControllerRiftBrush")]
		[SerializeField]
		private Transform m_GeometryRiftRight;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_GeometryWmrLeft;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_GeometryWmrRight;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_GeometryQuestLeft;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_GeometryQuestRight;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_GeometryKnucklesLeft;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_GeometryKnucklesRight;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_AnimationSpeedClick;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_AnimationSpeedRepel;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_ClickTime;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_MovementScale;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_ControllerGeometryLeft;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_ControllerGeometryRight;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_AnimationValue;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_ControllerBasePosA;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_ControllerBasePosB;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_Flipped;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_RepelTime;

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xE5C03C", Offset = "0xE5C03C", VA = "0xE5C03C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xE5C10C", Offset = "0xE5C10C", VA = "0xE5C10C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xE5C304", Offset = "0xE5C304", VA = "0xE5C304")]
		public TutorialTapScript()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class TutorialTossScript : MonoBehaviour
	{
		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_ControllerAnchor;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_GripGlowAnchor;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Panel;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_RotationScalars;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_TranslateScalars;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_AnimationSpeed;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_AnimationLength;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_TranslatePoint;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_ScalePoint;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_ScaleEnd;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_AnimationValue;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_RotationBase;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_TranslateBase;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_PanelScaleBase;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_GripGlowScaleBase;

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x12E603C", Offset = "0x12E603C", VA = "0x12E603C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x12E60D8", Offset = "0x12E60D8", VA = "0x12E60D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x12E6298", Offset = "0x12E6298", VA = "0x12E6298")]
		public TutorialTossScript()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class TwitchChat : BaseChatScript
	{
		[Token(Token = "0x6002698")]
		[Address(RVA = "0x12E62B4", Offset = "0x12E62B4", VA = "0x12E62B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x12E6350", Offset = "0x12E6350", VA = "0x12E6350")]
		public TwitchChat()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class UndoBaseAnimScript : MonoBehaviour
	{
		[Token(Token = "0x20005CA")]
		protected enum HideState
		{
			[Token(Token = "0x40024B0")]
			Hiding,
			[Token(Token = "0x40024B1")]
			Hidden
		}

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HideState m_CurrentHideState;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float m_HiddenAmount;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_HideSpeed;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_DestroyOnHide;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		protected bool m_TargetMainPointer;

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x12E6358", Offset = "0x12E6358", VA = "0x12E6358")]
		protected void OnAwake()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x12E6384", Offset = "0x12E6384", VA = "0x12E6384")]
		protected void InitForHiding()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x12E63C4", Offset = "0x12E63C4", VA = "0x12E63C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x12E64C0", Offset = "0x12E64C0", VA = "0x12E64C0", Slot = "4")]
		protected virtual void AnimateHiding()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x12E64C4", Offset = "0x12E64C4", VA = "0x12E64C4")]
		protected Vector3 GetAnimationTarget_CS()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x12E657C", Offset = "0x12E657C", VA = "0x12E657C")]
		public UndoBaseAnimScript()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class UndoMeshAnimScript : UndoBaseAnimScript
	{
		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_vOriginalPos_CS;

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x12E6594", Offset = "0x12E6594", VA = "0x12E6594")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x12E6598", Offset = "0x12E6598", VA = "0x12E6598")]
		public void Init()
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x12E6638", Offset = "0x12E6638", VA = "0x12E6638", Slot = "4")]
		protected override void AnimateHiding()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x12E6764", Offset = "0x12E6764", VA = "0x12E6764")]
		public UndoMeshAnimScript()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class UndoParticleAnimScript : UndoBaseAnimScript
	{
		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_ParticleCount;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.Particle[] m_Particles;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] m_WorkingParticles;

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x12E677C", Offset = "0x12E677C", VA = "0x12E677C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x12E6780", Offset = "0x12E6780", VA = "0x12E6780")]
		public void Init(ParticleSystem.Particle[] aParticles, int iParticleCount)
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x12E684C", Offset = "0x12E684C", VA = "0x12E684C", Slot = "4")]
		protected override void AnimateHiding()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x12E69C4", Offset = "0x12E69C4", VA = "0x12E69C4")]
		public UndoParticleAnimScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005CD")]
	public class UserConfig
	{
		[Serializable]
		[Token(Token = "0x20005CE")]
		public struct YouTubeConfig
		{
			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ChannelID;
		}

		[Serializable]
		[Token(Token = "0x20005CF")]
		public struct FlagsConfig
		{
			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool DisableAudio;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool DisableAutosave;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool DisablePoly;

			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool UnlockScale;

			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool GuideToggleVisiblityOnly;

			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool HighResolutionSnapshots;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool ShowDroppedFrames;

			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool EnableApiRemoteCalls;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool EnableApiCorsHeaders;

			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			private bool? m_ShowDangerousBrushes;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			private bool? m_PostEffectsOnCapture;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			private bool? m_ShowWatermark;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			private bool? m_ShowHeadset;

			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			private bool? m_ShowControllers;

			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int? m_SnapshotHeight;

			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int? m_SnapshotWidth;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float? m_Fov;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool? m_PolyModelPreload;

			[Token(Token = "0x170006C3")]
			public bool ShowDangerousBrushes
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0x12E69E4", Offset = "0x12E69E4", VA = "0x12E69E4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026AA")]
				[Address(RVA = "0x12E6A4C", Offset = "0x12E6A4C", VA = "0x12E6A4C")]
				set
				{
				}
			}

			[Token(Token = "0x170006C4")]
			public bool PostEffectsOnCaptureValid
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0x12E6AB4", Offset = "0x12E6AB4", VA = "0x12E6AB4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006C5")]
			public bool PostEffectsOnCapture
			{
				[Token(Token = "0x60026AC")]
				[Address(RVA = "0x12E6AF0", Offset = "0x12E6AF0", VA = "0x12E6AF0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026AD")]
				[Address(RVA = "0x12E6B4C", Offset = "0x12E6B4C", VA = "0x12E6B4C")]
				set
				{
				}
			}

			[Token(Token = "0x170006C6")]
			public bool ShowWatermarkValid
			{
				[Token(Token = "0x60026AE")]
				[Address(RVA = "0x12E6BB4", Offset = "0x12E6BB4", VA = "0x12E6BB4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006C7")]
			public bool ShowWatermark
			{
				[Token(Token = "0x60026AF")]
				[Address(RVA = "0x12E6BF0", Offset = "0x12E6BF0", VA = "0x12E6BF0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026B0")]
				[Address(RVA = "0x12E6C4C", Offset = "0x12E6C4C", VA = "0x12E6C4C")]
				set
				{
				}
			}

			[Token(Token = "0x170006C8")]
			public bool ShowHeadset
			{
				[Token(Token = "0x60026B1")]
				[Address(RVA = "0x12E6CB4", Offset = "0x12E6CB4", VA = "0x12E6CB4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026B2")]
				[Address(RVA = "0x12E6D10", Offset = "0x12E6D10", VA = "0x12E6D10")]
				set
				{
				}
			}

			[Token(Token = "0x170006C9")]
			public bool ShowControllers
			{
				[Token(Token = "0x60026B3")]
				[Address(RVA = "0x12E6D78", Offset = "0x12E6D78", VA = "0x12E6D78")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026B4")]
				[Address(RVA = "0x12E6DD4", Offset = "0x12E6DD4", VA = "0x12E6DD4")]
				set
				{
				}
			}

			[Token(Token = "0x170006CA")]
			public int SnapshotHeight
			{
				[Token(Token = "0x60026B5")]
				[Address(RVA = "0x12E6E3C", Offset = "0x12E6E3C", VA = "0x12E6E3C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026B6")]
				[Address(RVA = "0x12E6E8C", Offset = "0x12E6E8C", VA = "0x12E6E8C")]
				set
				{
				}
			}

			[Token(Token = "0x170006CB")]
			public int SnapshotWidth
			{
				[Token(Token = "0x60026B7")]
				[Address(RVA = "0x12E6FD8", Offset = "0x12E6FD8", VA = "0x12E6FD8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026B8")]
				[Address(RVA = "0x12E7028", Offset = "0x12E7028", VA = "0x12E7028")]
				set
				{
				}
			}

			[Token(Token = "0x170006CC")]
			public bool FovValid
			{
				[Token(Token = "0x60026B9")]
				[Address(RVA = "0x12E7174", Offset = "0x12E7174", VA = "0x12E7174")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006CD")]
			public float Fov
			{
				[Token(Token = "0x60026BA")]
				[Address(RVA = "0x12E71B0", Offset = "0x12E71B0", VA = "0x12E71B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026BB")]
				[Address(RVA = "0x12E720C", Offset = "0x12E720C", VA = "0x12E720C")]
				set
				{
				}
			}

			[Token(Token = "0x170006CE")]
			public bool PolyModelPreloadValid
			{
				[Token(Token = "0x60026BC")]
				[Address(RVA = "0x12E73B0", Offset = "0x12E73B0", VA = "0x12E73B0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006CF")]
			public bool PolyModelPreload
			{
				[Token(Token = "0x60026BD")]
				[Address(RVA = "0x12E73EC", Offset = "0x12E73EC", VA = "0x12E73EC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026BE")]
				[Address(RVA = "0x12E7460", Offset = "0x12E7460", VA = "0x12E7460")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D0")]
		public struct DemoConfig
		{
			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Enabled;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint? Duration;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool PublishAutomatically;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_PublishTitle;

			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_PublishDescription;

			[Token(Token = "0x170006D0")]
			public string PublishTitle
			{
				[Token(Token = "0x60026BF")]
				[Address(RVA = "0x12E74C8", Offset = "0x12E74C8", VA = "0x12E74C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026C0")]
				[Address(RVA = "0x12E7518", Offset = "0x12E7518", VA = "0x12E7518")]
				set
				{
				}
			}

			[Token(Token = "0x170006D1")]
			public string PublishDescription
			{
				[Token(Token = "0x60026C1")]
				[Address(RVA = "0x12E7520", Offset = "0x12E7520", VA = "0x12E7520")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026C2")]
				[Address(RVA = "0x12E7570", Offset = "0x12E7570", VA = "0x12E7570")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D1")]
		public struct BrushConfig
		{
			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<string, string[]> m_AddTagsToBrushes;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, string[]> m_RemoveTagsFromBrushes;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string[] m_IncludeTags;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string[] m_ExcludeTags;

			[Token(Token = "0x170006D2")]
			public Dictionary<string, string[]> AddTagsToBrushes
			{
				[Token(Token = "0x60026C3")]
				[Address(RVA = "0x12E7578", Offset = "0x12E7578", VA = "0x12E7578")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026C4")]
				[Address(RVA = "0x12E75F8", Offset = "0x12E75F8", VA = "0x12E75F8")]
				set
				{
				}
			}

			[Token(Token = "0x170006D3")]
			public Dictionary<string, string[]> RemoveTagsFromBrushes
			{
				[Token(Token = "0x60026C5")]
				[Address(RVA = "0x12E7600", Offset = "0x12E7600", VA = "0x12E7600")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026C6")]
				[Address(RVA = "0x12E7680", Offset = "0x12E7680", VA = "0x12E7680")]
				set
				{
				}
			}

			[Token(Token = "0x170006D4")]
			public string[] IncludeTags
			{
				[Token(Token = "0x60026C7")]
				[Address(RVA = "0x12E7688", Offset = "0x12E7688", VA = "0x12E7688")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026C8")]
				[Address(RVA = "0x12E7804", Offset = "0x12E7804", VA = "0x12E7804")]
				set
				{
				}
			}

			[Token(Token = "0x170006D5")]
			public string[] ExcludeTags
			{
				[Token(Token = "0x60026C9")]
				[Address(RVA = "0x12E780C", Offset = "0x12E780C", VA = "0x12E780C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026CA")]
				[Address(RVA = "0x12E7898", Offset = "0x12E7898", VA = "0x12E7898")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D2")]
		public struct ExportConfig
		{
			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool? m_ExportBinaryFbx;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string m_ExportFbxVersion;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool? m_ExportStrokeTimestamp;

			[Token(Token = "0x170006D6")]
			public bool ExportBinaryFbx
			{
				[Token(Token = "0x60026CB")]
				[Address(RVA = "0x12E78A0", Offset = "0x12E78A0", VA = "0x12E78A0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026CC")]
				[Address(RVA = "0x12E78FC", Offset = "0x12E78FC", VA = "0x12E78FC")]
				set
				{
				}
			}

			[Token(Token = "0x170006D7")]
			public string ExportFbxVersion
			{
				[Token(Token = "0x60026CD")]
				[Address(RVA = "0x12E7964", Offset = "0x12E7964", VA = "0x12E7964")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026CE")]
				[Address(RVA = "0x12E79B4", Offset = "0x12E79B4", VA = "0x12E79B4")]
				set
				{
				}
			}

			[Token(Token = "0x170006D8")]
			public bool ExportStrokeTimestamp
			{
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0x12E79BC", Offset = "0x12E79BC", VA = "0x12E79BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026D0")]
				[Address(RVA = "0x12E7A18", Offset = "0x12E7A18", VA = "0x12E7A18")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D3")]
		public struct SharingConfig
		{
			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[JsonProperty("VrAssetServiceHost")]
			public string VrAssetServiceHostOverride;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[JsonProperty("VrAssetServiceUrl")]
			public string VrAssetServiceUrlOverride;
		}

		[Serializable]
		[Token(Token = "0x20005D4")]
		public struct IdentityConfig
		{
			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Author;
		}

		[Serializable]
		[Token(Token = "0x20005D5")]
		public struct VideoConfig
		{
			[Token(Token = "0x40024E3")]
			private const float kDefaultFps = 30f;

			[Token(Token = "0x40024E4")]
			private const float kDefaultOfflineFps = 60f;

			[Token(Token = "0x40024E5")]
			private const float kMinFps = 1f;

			[Token(Token = "0x40024E6")]
			private const float kMaxFps = 60f;

			[Token(Token = "0x40024E7")]
			private const float kMaxOfflineFps = 1000f;

			[Token(Token = "0x40024E8")]
			private const int kDefaultRes = 1280;

			[Token(Token = "0x40024E9")]
			private const int kDefaultOfflineRes = 1920;

			[Token(Token = "0x40024EA")]
			private const int kMinRes = 640;

			[Token(Token = "0x40024EB")]
			private const int kMaxRes = 2560;

			[Token(Token = "0x40024EC")]
			private const int kMaxOfflineRes = 8000;

			[Token(Token = "0x40024ED")]
			private const string kDefaultContainer = "mp4";

			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly List<string> kSupportedContainers;

			[Token(Token = "0x40024EF")]
			private const string kDefaultVideoEncoder = "h.264";

			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly List<string> kSupportedVideoEncoders;

			[Token(Token = "0x40024F1")]
			private const float kDefaultSmoothing = 0.98f;

			[Token(Token = "0x40024F2")]
			private const float kDefaultOdsPoleCollapsing = 1f;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float? m_FPS;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private float? m_OfflineFps;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float? m_Fov;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int? m_Resolution;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int? m_OfflineResolution;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool? m_SaveCameraPath;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string m_VideoEncoder;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string m_ContainerType;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float? m_CameraSmoothing;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float? m_OdsPoleCollapsing;

			[Token(Token = "0x170006D9")]
			public float FPS
			{
				[Token(Token = "0x60026D1")]
				[Address(RVA = "0x12E7A80", Offset = "0x12E7A80", VA = "0x12E7A80")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026D2")]
				[Address(RVA = "0x12E7AD8", Offset = "0x12E7AD8", VA = "0x12E7AD8")]
				set
				{
				}
			}

			[Token(Token = "0x170006DA")]
			public float OfflineFPS
			{
				[Token(Token = "0x60026D3")]
				[Address(RVA = "0x12E7D88", Offset = "0x12E7D88", VA = "0x12E7D88")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026D4")]
				[Address(RVA = "0x12E7DE4", Offset = "0x12E7DE4", VA = "0x12E7DE4")]
				set
				{
				}
			}

			[Token(Token = "0x170006DB")]
			public bool FovValid
			{
				[Token(Token = "0x60026D5")]
				[Address(RVA = "0x12E8068", Offset = "0x12E8068", VA = "0x12E8068")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006DC")]
			public float Fov
			{
				[Token(Token = "0x60026D6")]
				[Address(RVA = "0x12E80A4", Offset = "0x12E80A4", VA = "0x12E80A4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026D7")]
				[Address(RVA = "0x12E8100", Offset = "0x12E8100", VA = "0x12E8100")]
				set
				{
				}
			}

			[Token(Token = "0x170006DD")]
			public int Resolution
			{
				[Token(Token = "0x60026D8")]
				[Address(RVA = "0x12E82A4", Offset = "0x12E82A4", VA = "0x12E82A4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026D9")]
				[Address(RVA = "0x12E82F8", Offset = "0x12E82F8", VA = "0x12E82F8")]
				set
				{
				}
			}

			[Token(Token = "0x170006DE")]
			public int OfflineResolution
			{
				[Token(Token = "0x60026DA")]
				[Address(RVA = "0x12E8498", Offset = "0x12E8498", VA = "0x12E8498")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026DB")]
				[Address(RVA = "0x12E84EC", Offset = "0x12E84EC", VA = "0x12E84EC")]
				set
				{
				}
			}

			[Token(Token = "0x170006DF")]
			public bool SaveCameraPath
			{
				[Token(Token = "0x60026DC")]
				[Address(RVA = "0x12E868C", Offset = "0x12E868C", VA = "0x12E868C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60026DD")]
				[Address(RVA = "0x12E86E8", Offset = "0x12E86E8", VA = "0x12E86E8")]
				set
				{
				}
			}

			[Token(Token = "0x170006E0")]
			public string Encoder
			{
				[Token(Token = "0x60026DE")]
				[Address(RVA = "0x12E8750", Offset = "0x12E8750", VA = "0x12E8750")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026DF")]
				[Address(RVA = "0x12E87A0", Offset = "0x12E87A0", VA = "0x12E87A0")]
				set
				{
				}
			}

			[Token(Token = "0x170006E1")]
			public string ContainerType
			{
				[Token(Token = "0x60026E0")]
				[Address(RVA = "0x12E8958", Offset = "0x12E8958", VA = "0x12E8958")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026E1")]
				[Address(RVA = "0x12E89A8", Offset = "0x12E89A8", VA = "0x12E89A8")]
				set
				{
				}
			}

			[Token(Token = "0x170006E2")]
			public bool CameraSmoothingValid
			{
				[Token(Token = "0x60026E2")]
				[Address(RVA = "0x12E8B60", Offset = "0x12E8B60", VA = "0x12E8B60")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006E3")]
			public float CameraSmoothing
			{
				[Token(Token = "0x60026E3")]
				[Address(RVA = "0x12E8B9C", Offset = "0x12E8B9C", VA = "0x12E8B9C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026E4")]
				[Address(RVA = "0x12E8BF8", Offset = "0x12E8BF8", VA = "0x12E8BF8")]
				set
				{
				}
			}

			[Token(Token = "0x170006E4")]
			public float OdsPoleCollapsing
			{
				[Token(Token = "0x60026E5")]
				[Address(RVA = "0x12E8D5C", Offset = "0x12E8D5C", VA = "0x12E8D5C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026E6")]
				[Address(RVA = "0x12E8DB4", Offset = "0x12E8DB4", VA = "0x12E8DB4")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D6")]
		public struct TestingConfig
		{
			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Enabled;

			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string InputFile;

			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string OutputFile;

			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool ResetPromos;

			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool FirstRun;

			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string BrushReplacements;

			[Token(Token = "0x170006E5")]
			public Dictionary<Guid, Guid> BrushReplacementMap
			{
				[Token(Token = "0x60026E8")]
				[Address(RVA = "0x12E932C", Offset = "0x12E932C", VA = "0x12E932C")]
				get
				{
					return null;
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20005D7")]
		public struct ProfilingConfig
		{
			[Token(Token = "0x4002503")]
			public const int kDefaultScreenshotResolution = 1000;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ProfileName;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ProfileFilename;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string SketchToLoad;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool AutoProfile;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool ShowControllers;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float? m_Duration;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool Csv;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int? m_QualityLevel;

			[Token(Token = "0x4002513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int? m_screenshotResolution;

			[Token(Token = "0x4002515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float? m_StrokeSimplification;

			[Token(Token = "0x170006E6")]
			public string[] ProfilingFunctions
			{
				[Token(Token = "0x60026E9")]
				[Address(RVA = "0x12E96C8", Offset = "0x12E96C8", VA = "0x12E96C8")]
				[CompilerGenerated]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x60026EA")]
				[Address(RVA = "0x12E96D0", Offset = "0x12E96D0", VA = "0x12E96D0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170006E7")]
			public ProfilingManager.Mode ProflingMode
			{
				[Token(Token = "0x60026EB")]
				[Address(RVA = "0x12E96D8", Offset = "0x12E96D8", VA = "0x12E96D8")]
				[CompilerGenerated]
				readonly get
				{
					return default(ProfilingManager.Mode);
				}
				[Token(Token = "0x60026EC")]
				[Address(RVA = "0x12E96E0", Offset = "0x12E96E0", VA = "0x12E96E0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170006E8")]
			public string Mode
			{
				[Token(Token = "0x60026ED")]
				[Address(RVA = "0x12E96E8", Offset = "0x12E96E8", VA = "0x12E96E8")]
				set
				{
				}
			}

			[Token(Token = "0x170006E9")]
			public string Functions
			{
				[Token(Token = "0x60026EE")]
				[Address(RVA = "0x12E988C", Offset = "0x12E988C", VA = "0x12E988C")]
				set
				{
				}
			}

			[Token(Token = "0x170006EA")]
			public float Duration
			{
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0x12E98C0", Offset = "0x12E98C0", VA = "0x12E98C0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026F0")]
				[Address(RVA = "0x12E992C", Offset = "0x12E992C", VA = "0x12E992C")]
				set
				{
				}
			}

			[Token(Token = "0x170006EB")]
			public int QualityLevel
			{
				[Token(Token = "0x60026F1")]
				[Address(RVA = "0x12E9994", Offset = "0x12E9994", VA = "0x12E9994")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026F2")]
				[Address(RVA = "0x12E9A00", Offset = "0x12E9A00", VA = "0x12E9A00")]
				set
				{
				}
			}

			[Token(Token = "0x170006EC")]
			public float ViewportScaling
			{
				[Token(Token = "0x60026F3")]
				[Address(RVA = "0x12E9A68", Offset = "0x12E9A68", VA = "0x12E9A68")]
				[CompilerGenerated]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x60026F4")]
				[Address(RVA = "0x12E9A70", Offset = "0x12E9A70", VA = "0x12E9A70")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006ED")]
			public float EyeTextureScaling
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0x12E9A78", Offset = "0x12E9A78", VA = "0x12E9A78")]
				[CompilerGenerated]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x60026F6")]
				[Address(RVA = "0x12E9A80", Offset = "0x12E9A80", VA = "0x12E9A80")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006EE")]
			public int GlobalMaximumLOD
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0x12E9A88", Offset = "0x12E9A88", VA = "0x12E9A88")]
				[CompilerGenerated]
				readonly get
				{
					return default(int);
				}
				[Token(Token = "0x60026F8")]
				[Address(RVA = "0x12E9A90", Offset = "0x12E9A90", VA = "0x12E9A90")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006EF")]
			public int MsaaLevel
			{
				[Token(Token = "0x60026F9")]
				[Address(RVA = "0x12E9A98", Offset = "0x12E9A98", VA = "0x12E9A98")]
				[CompilerGenerated]
				readonly get
				{
					return default(int);
				}
				[Token(Token = "0x60026FA")]
				[Address(RVA = "0x12E9AA0", Offset = "0x12E9AA0", VA = "0x12E9AA0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006F0")]
			public bool TakeScreenshot
			{
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0x12E9AA8", Offset = "0x12E9AA8", VA = "0x12E9AA8")]
				[CompilerGenerated]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x60026FC")]
				[Address(RVA = "0x12E9AB0", Offset = "0x12E9AB0", VA = "0x12E9AB0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006F1")]
			public int ScreenshotResolution
			{
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0x12E9ABC", Offset = "0x12E9ABC", VA = "0x12E9ABC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026FE")]
				[Address(RVA = "0x12E9B28", Offset = "0x12E9B28", VA = "0x12E9B28")]
				set
				{
				}
			}

			[Token(Token = "0x170006F2")]
			public bool PerfgateOutput
			{
				[Token(Token = "0x60026FF")]
				[Address(RVA = "0x12E9B90", Offset = "0x12E9B90", VA = "0x12E9B90")]
				[CompilerGenerated]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x6002700")]
				[Address(RVA = "0x12E9B98", Offset = "0x12E9B98", VA = "0x12E9B98")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170006F3")]
			public float StrokeSimplification
			{
				[Token(Token = "0x6002701")]
				[Address(RVA = "0x12E9BA4", Offset = "0x12E9BA4", VA = "0x12E9BA4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002702")]
				[Address(RVA = "0x12E9C10", Offset = "0x12E9C10", VA = "0x12E9C10")]
				set
				{
				}
			}

			[Token(Token = "0x170006F4")]
			public bool HasStrokeSimplification
			{
				[Token(Token = "0x6002703")]
				[Address(RVA = "0x12E9C78", Offset = "0x12E9C78", VA = "0x12E9C78")]
				get
				{
					return default(bool);
				}
			}
		}

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public YouTubeConfig YouTube;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlagsConfig Flags;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DemoConfig Demo;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BrushConfig Brushes;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ExportConfig Export;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SharingConfig Sharing;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public IdentityConfig User;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public VideoConfig Video;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TestingConfig Testing;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ProfilingConfig Profiling;

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x12E69DC", Offset = "0x12E69DC", VA = "0x12E69DC")]
		public UserConfig()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class UserHeadScript : MonoBehaviour
	{
		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_HeadMesh;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_MultiCam;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x12E9CB4", Offset = "0x12E9CB4", VA = "0x12E9CB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x12E9D14", Offset = "0x12E9D14", VA = "0x12E9D14")]
		public UserHeadScript()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public struct AxisConvention
	{
		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly AxisConvention kUnity;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly AxisConvention kFbxAccordingToUnity;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly AxisConvention kGltfAccordingToPoly;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly AxisConvention kUsd;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly AxisConvention kStl;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static readonly AxisConvention kVrml;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static readonly AxisConvention kGltf2;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public static readonly AxisConvention kUnreal;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 right;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 up;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 forward;

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x12E9D1C", Offset = "0x12E9D1C", VA = "0x12E9D1C")]
		public static Matrix4x4 GetFromUnity(AxisConvention dst)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x12E9D78", Offset = "0x12E9D78", VA = "0x12E9D78")]
		public static Matrix4x4 GetToUnity(AxisConvention src)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x12E9E4C", Offset = "0x12E9E4C", VA = "0x12E9E4C")]
		public static Matrix4x4 GetToDstFromSrc(AxisConvention dst, AxisConvention src)
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x20005DA")]
	internal class BackgroundCollector
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AutoResetEvent m_sleeper;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Thread m_thread;

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x12EA100", Offset = "0x12EA100", VA = "0x12EA100")]
		public void Start()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x12EA250", Offset = "0x12EA250", VA = "0x12EA250")]
		public void Collect()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x12EA2E0", Offset = "0x12EA2E0", VA = "0x12EA2E0")]
		public void Stop()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x12EA304", Offset = "0x12EA304", VA = "0x12EA304")]
		private void Run()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x12EA4EC", Offset = "0x12EA4EC", VA = "0x12EA4EC")]
		public BackgroundCollector()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public enum ColorPickerMode
	{
		[Token(Token = "0x4002527")]
		HS_L_Polar,
		[Token(Token = "0x4002528")]
		SV_H_Rect,
		[Token(Token = "0x4002529")]
		SL_H_Triangle,
		[Token(Token = "0x400252A")]
		HL_S_Polar,
		[Token(Token = "0x400252B")]
		HS_LogV_Polar,
		[Token(Token = "0x400252C")]
		NUM_MODES
	}
	[Serializable]
	[Token(Token = "0x20005DC")]
	public class ColorPickerInfo
	{
		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Shader shader;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture icon;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool cylindrical;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool experimental;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool hdr;

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x12EA4F4", Offset = "0x12EA4F4", VA = "0x12EA4F4")]
		public ColorPickerInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DD")]
	public struct ModeAndPickerInfo
	{
		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerMode mode;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ColorPickerInfo info;
	}
	[Token(Token = "0x20005DE")]
	public static class ColorPickerUtils
	{
		[Token(Token = "0x4002534")]
		private const float SQRT3 = 1.7320508f;

		[Token(Token = "0x4002535")]
		private const float kLogVMin = -3f;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float sm_LogVMax;

		[Token(Token = "0x4002537")]
		private const float kMainLightMax = 8f;

		[Token(Token = "0x4002538")]
		private const float kSecondaryLightMax = 1f;

		[Token(Token = "0x170006F5")]
		private static ModeAndPickerInfo[] ModeToPickerInfo
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x12EA4FC", Offset = "0x12EA4FC", VA = "0x12EA4FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F6")]
		public static ColorPickerMode HdrMode
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x12EA5B4", Offset = "0x12EA5B4", VA = "0x12EA5B4")]
			get
			{
				return default(ColorPickerMode);
			}
		}

		[Token(Token = "0x170006F7")]
		private static float MinHDRValue
		{
			[Token(Token = "0x6002714")]
			[Address(RVA = "0x12EA6C4", Offset = "0x12EA6C4", VA = "0x12EA6C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x12EA550", Offset = "0x12EA550", VA = "0x12EA550")]
		public static ColorPickerMode GetActiveMode(bool hdr)
		{
			return default(ColorPickerMode);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x12EA5BC", Offset = "0x12EA5BC", VA = "0x12EA5BC")]
		public static int NumModes(bool hdr)
		{
			return default(int);
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x12EA6CC", Offset = "0x12EA6CC", VA = "0x12EA6CC")]
		public static ColorPickerInfo GetInfoForMode(ColorPickerMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x12EA760", Offset = "0x12EA760", VA = "0x12EA760")]
		private static float GetHdrCurveConstant(float logMin, float height)
		{
			return default(float);
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x12EA7CC", Offset = "0x12EA7CC", VA = "0x12EA7CC")]
		public static void SetLogVRangeForMode(LightMode mode)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x12EA88C", Offset = "0x12EA88C", VA = "0x12EA88C")]
		public static Vector3 ColorToRawValue(ColorPickerMode mode, Color rgb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x12EACD8", Offset = "0x12EACD8", VA = "0x12EACD8")]
		public static bool RawValueToColor(ColorPickerMode mode, Vector3 raw, out Color color)
		{
			return default(bool);
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x12EB03C", Offset = "0x12EB03C", VA = "0x12EB03C")]
		private static bool RawValueToHSV(ColorPickerMode mode, Vector3 raw, out float hue01, out float saturation, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x12EAD80", Offset = "0x12EAD80", VA = "0x12EAD80")]
		private static bool RawValueToHSLColor(ColorPickerMode mode, Vector3 raw, out HSLColor color)
		{
			return default(bool);
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x12EB1A0", Offset = "0x12EB1A0", VA = "0x12EB1A0")]
		public static float ApplySliderConstraint(ColorPickerMode mode, float value_z, float luminanceMin, float saturationMax)
		{
			return default(float);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x12EB200", Offset = "0x12EB200", VA = "0x12EB200")]
		public static Vector3 ApplyPlanarConstraint(Vector3 value, ColorPickerMode mode, float luminanceMin, float saturationMax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x12EB390", Offset = "0x12EB390", VA = "0x12EB390")]
		public static bool ModeIsValid(ColorPickerMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x12EB3D8", Offset = "0x12EB3D8", VA = "0x12EB3D8")]
		public static void GoToNextMode(bool forward = true)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x12EB4BC", Offset = "0x12EB4BC", VA = "0x12EB4BC")]
		public static Color ClampColorIntensityToLdr(Color lightColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x12EB508", Offset = "0x12EB508", VA = "0x12EB508")]
		private static void MakeHueRamp(int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x12EB60C", Offset = "0x12EB60C", VA = "0x12EB60C")]
		private static void MakeLightnessRamp(HSLColor hsl, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x12EB6F0", Offset = "0x12EB6F0", VA = "0x12EB6F0")]
		private static void MakeSaturationRamp(HSLColor hsl, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x12EB7D8", Offset = "0x12EB7D8", VA = "0x12EB7D8")]
		private static void MakeLogValueRamp(float hue01, float saturation, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x12EB944", Offset = "0x12EB944", VA = "0x12EB944")]
		public static void MakeRamp(ColorPickerMode mode, int width, int height, Color[] buf, [Optional] Vector3? raw)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x12EBA88", Offset = "0x12EBA88", VA = "0x12EBA88")]
		public static Color ClampLuminance(Color color, float minLuminance)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20005DF")]
	public class ColorTable : MonoBehaviour
	{
		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_SecretDistance;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Color32, string> m_Colors;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Color32, string> m_SecretColors;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ColorTable m_Instance;

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x12EBB28", Offset = "0x12EBB28", VA = "0x12EBB28")]
		private float ColorDistance(Color32 colorA, Color32 colorB)
		{
			return default(float);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x12EBBBC", Offset = "0x12EBBBC", VA = "0x12EBBBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x12EBC08", Offset = "0x12EBC08", VA = "0x12EBC08")]
		public string NearestColorTo(Color color)
		{
			return null;
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x12EC398", Offset = "0x12EC398", VA = "0x12EC398")]
		public ColorTable()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public static class ComponentwiseVectors
	{
		[Token(Token = "0x20005E1")]
		public struct vec3
		{
			[Token(Token = "0x400253D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double x;

			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double y;

			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double z;

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x12EDE74", Offset = "0x12EDE74", VA = "0x12EDE74")]
			public static explicit operator Vector3(vec3 v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0x12EDE84", Offset = "0x12EDE84", VA = "0x12EDE84")]
			public static vec3 operator *(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x600272D")]
			[Address(RVA = "0x12EDEA0", Offset = "0x12EDEA0", VA = "0x12EDEA0")]
			public static vec3 operator *(vec3 a, double s)
			{
				return default(vec3);
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0x12EDEB0", Offset = "0x12EDEB0", VA = "0x12EDEB0")]
			public static vec3 operator /(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0x12EDEC0", Offset = "0x12EDEC0", VA = "0x12EDEC0")]
			public static vec3 operator +(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002730")]
			[Address(RVA = "0x12EDED0", Offset = "0x12EDED0", VA = "0x12EDED0")]
			public static vec3 operator -(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0x12EDEE0", Offset = "0x12EDEE0", VA = "0x12EDEE0")]
			public static vec3 abs(vec3 a)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002732")]
			[Address(RVA = "0x12EDF54", Offset = "0x12EDF54", VA = "0x12EDF54")]
			public static double sum(vec3 a)
			{
				return default(double);
			}

			[Token(Token = "0x6002733")]
			[Address(RVA = "0x12EDF60", Offset = "0x12EDF60", VA = "0x12EDF60")]
			public static double dot(vec3 a, vec3 b)
			{
				return default(double);
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0x12EDF78", Offset = "0x12EDF78", VA = "0x12EDF78")]
			public static vec3 normalized(vec3 a)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0x12EE004", Offset = "0x12EE004", VA = "0x12EE004")]
			public static double dist2(vec3 a, vec3 b)
			{
				return default(double);
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0x12EDE94", Offset = "0x12EDE94", VA = "0x12EDE94")]
			public vec3(double x, double y, double z)
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x12EE028", Offset = "0x12EE028", VA = "0x12EE028")]
			public vec3(Vector3 v)
			{
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0x12EE040", Offset = "0x12EE040", VA = "0x12EE040")]
			public vec3 sign()
			{
				return default(vec3);
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0x12EE0D4", Offset = "0x12EE0D4", VA = "0x12EE0D4")]
			public double mag2()
			{
				return default(double);
			}
		}
	}
	[Token(Token = "0x20005E2")]
	public static class CoroutineUtil
	{
		[Token(Token = "0x20005E3")]
		[CompilerGenerated]
		private sealed class <CompleteAllCoroutines>d__0 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IReadOnlyList<IEnumerator> coroutines;

			[Token(Token = "0x4002543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <numCoroutines>5__2;

			[Token(Token = "0x4002544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Stack<IEnumerator>> <coroutineStacks>5__3;

			[Token(Token = "0x170006F8")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x600273F")]
				[Address(RVA = "0x12EE63C", Offset = "0x12EE63C", VA = "0x12EE63C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002741")]
				[Address(RVA = "0x12EE684", Offset = "0x12EE684", VA = "0x12EE684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0x12EE15C", Offset = "0x12EE15C", VA = "0x12EE15C")]
			[DebuggerHidden]
			public <CompleteAllCoroutines>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0x12EE184", Offset = "0x12EE184", VA = "0x12EE184", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0x12EE188", Offset = "0x12EE188", VA = "0x12EE188", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0x12EE644", Offset = "0x12EE644", VA = "0x12EE644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[CompilerGenerated]
		private sealed class <Sequence>d__1<T> : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator<T> a;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator<T> b;

			[Token(Token = "0x170006FA")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6002745")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170006FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002747")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002742")]
			[DebuggerHidden]
			public <Sequence>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002743")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002744")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002746")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x12EE0F4", Offset = "0x12EE0F4", VA = "0x12EE0F4")]
		[IteratorStateMachine(typeof(<CompleteAllCoroutines>d__0))]
		public static IEnumerator<Null> CompleteAllCoroutines(IReadOnlyList<IEnumerator> coroutines)
		{
			return null;
		}

		[Token(Token = "0x600273B")]
		[IteratorStateMachine(typeof(<Sequence>d__1<>))]
		public static IEnumerator<T> Sequence<T>(IEnumerator<T> a, IEnumerator<T> b)
		{
			return null;
		}
	}
	[Token(Token = "0x20005E5")]
	public class Null
	{
		[Token(Token = "0x6002748")]
		[Address(RVA = "0x12EE68C", Offset = "0x12EE68C", VA = "0x12EE68C")]
		protected Null()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class Timeslice : Null
	{
		[Token(Token = "0x6002749")]
		[Address(RVA = "0x12EE694", Offset = "0x12EE694", VA = "0x12EE694")]
		protected Timeslice()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class DebugVisualization : MonoBehaviour
	{
		[Token(Token = "0x20005E8")]
		public enum VisType
		{
			[Token(Token = "0x4002552")]
			Position,
			[Token(Token = "0x4002553")]
			Direction,
			[Token(Token = "0x4002554")]
			Plane,
			[Token(Token = "0x4002555")]
			Text
		}

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugVisualization m_Instance;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_PositionPrefab;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_DirectionPrefab;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_PlanePrefab;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_TextPrefab;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<VisType, Stack<GameObject>> m_VisObjects;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<VisType, Stack<GameObject>> m_UnusedVisObjects;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_Reset;

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x12EE69C", Offset = "0x12EE69C", VA = "0x12EE69C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x12EEB68", Offset = "0x12EEB68", VA = "0x12EEB68")]
		private void ResetObjects()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x12EEDAC", Offset = "0x12EEDAC", VA = "0x12EEDAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x12EEDD4", Offset = "0x12EEDD4", VA = "0x12EEDD4")]
		private GameObject CreateObject(VisType type, Transform parent, Vector3 pos, Quaternion rot, Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x12EF09C", Offset = "0x12EF09C", VA = "0x12EF09C")]
		public static void ShowPosition(Vector3 position, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x12EF1C8", Offset = "0x12EF1C8", VA = "0x12EF1C8")]
		public static void ShowDirection(Vector3 direction, Vector3 startPosition, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x12EF338", Offset = "0x12EF338", VA = "0x12EF338")]
		public static void ShowPlane(Plane plane, Vector3 closePoint, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x12EF4AC", Offset = "0x12EF4AC", VA = "0x12EF4AC")]
		public static void ShowText(string text, Vector3 position, Quaternion rotation, Vector3 scale, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x12EF5D4", Offset = "0x12EF5D4", VA = "0x12EF5D4")]
		public DebugVisualization()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class DisabledPropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002753")]
		[Address(RVA = "0x12EF5DC", Offset = "0x12EF5DC", VA = "0x12EF5DC")]
		public DisabledPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class DownloadHandlerFastFile : DownloadHandlerScript
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FileStream m_File;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_Filename;

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x12EF5E4", Offset = "0x12EF5E4", VA = "0x12EF5E4")]
		public DownloadHandlerFastFile(string filename, byte[] buffer)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x12EF620", Offset = "0x12EF620", VA = "0x12EF620", Slot = "12")]
		protected override void CompleteContent()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x12EF63C", Offset = "0x12EF63C", VA = "0x12EF63C", Slot = "9")]
		protected override bool ReceiveData(byte[] data, int dataLength)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005EB")]
	public static class EnumerableExtensions
	{
		[Token(Token = "0x6002757")]
		public static IEnumerable<(T, int)> WithIndex<T>(this IEnumerable<T> this_)
		{
			return null;
		}

		[Token(Token = "0x6002758")]
		public static (List<T>, List<T>) Partition<T>(this IEnumerable<T> this_, Func<T, bool> predicate)
		{
			return default((List<T>, List<T>));
		}

		[Token(Token = "0x6002759")]
		public static int IndexOf<T>(this IEnumerable<T> this_, T item) where T : IComparable
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005ED")]
	public static class FileUtils
	{
		[StructLayout(0, CharSet = CharSet.Auto)]
		[Token(Token = "0x20005EE")]
		private struct ShellFileOpStruct
		{
			[Token(Token = "0x400255C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr WindowHandle;

			[Token(Token = "0x400255D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int FunctionCode;

			[Token(Token = "0x400255E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string From;

			[Token(Token = "0x400255F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string To;

			[Token(Token = "0x4002560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Flags;

			[Token(Token = "0x4002561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool Aborted;

			[Token(Token = "0x4002562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IntPtr NameMappings;

			[Token(Token = "0x4002563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string ProgressBarTitle;
		}

		[Token(Token = "0x400255A")]
		public const ulong MIN_DISK_SPACE_MB = 500uL;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char[] m_SanitizeMap;

		[Token(Token = "0x170006FC")]
		private static char[] SanitizeMap
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0x12F0468", Offset = "0x12F0468", VA = "0x12F0468")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x600275D")]
		[Address(RVA = "0x12EF894", Offset = "0x12EF894", VA = "0x12EF894")]
		private static extern bool GetDiskFreeSpaceEx(string lpDirectoryName, out ulong lpFreeBytesAvailable, out ulong lpTotalNumberOfBytes, out ulong lpTotalNumberOfFreeBytes);

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x12EF948", Offset = "0x12EF948", VA = "0x12EF948")]
		public static string GenerateNonexistentFilename(string directory, string basename, string extension)
		{
			return null;
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x12EFAC4", Offset = "0x12EFAC4", VA = "0x12EFAC4")]
		public static bool CheckDiskSpaceWithError(string path, [Optional] string error)
		{
			return default(bool);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x12EFE78", Offset = "0x12EFE78", VA = "0x12EFE78")]
		public static bool InitializeDirectoryWithUserError(string directoryName, [Optional] string failureMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x12EFFA8", Offset = "0x12EFFA8", VA = "0x12EFFA8")]
		public static bool InitializeDirectory(string directoryName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x12F0068", Offset = "0x12F0068", VA = "0x12F0068")]
		public static bool WriteBytesIgnoreExceptions(byte[] data, string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x12F017C", Offset = "0x12F017C", VA = "0x12F017C")]
		public static void WriteTextureFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x12F0280", Offset = "0x12F0280", VA = "0x12F0280")]
		public static void WriteTextFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x12F0374", Offset = "0x12F0374", VA = "0x12F0374")]
		public static void WriteBytesFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x12EFB48", Offset = "0x12EFB48", VA = "0x12EFB48")]
		public static bool HasFreeSpace(string filePath, ulong spaceRequiredMb = 500uL)
		{
			return default(bool);
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x12F05E8", Offset = "0x12F05E8", VA = "0x12F05E8")]
		public static string SanitizeFilename(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x12F0834", Offset = "0x12F0834", VA = "0x12F0834")]
		public static string SanitizeFilenameAndPreserveUniqueness(string filename)
		{
			return null;
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x12F0A28", Offset = "0x12F0A28", VA = "0x12F0A28")]
		public static string GetHash(string text)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600276B")]
		[Address(RVA = "0x12F0CDC", Offset = "0x12F0CDC", VA = "0x12F0CDC")]
		private static extern int SHFileOperation(ref ShellFileOpStruct operation);

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x12F0DD0", Offset = "0x12F0DD0", VA = "0x12F0DD0")]
		public static bool DeleteWithRecycleBin(string path, bool forceDelete = false)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005F0")]
	public static class GuidUtils
	{
		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid kNamespaceDns;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Guid kNamespaceUrl;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Guid kNamespaceOid;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Guid kNamespaceX500;

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x12F0F5C", Offset = "0x12F0F5C", VA = "0x12F0F5C")]
		private static Guid MakeNamespaceGuid(Guid ns, string name, int version)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x12F1158", Offset = "0x12F1158", VA = "0x12F1158")]
		public static void ByteswapGuid(byte[] guid)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x12F11E0", Offset = "0x12F11E0", VA = "0x12F11E0")]
		public static Guid Uuid3(Guid namespace_, string name)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x12F1250", Offset = "0x12F1250", VA = "0x12F1250")]
		public static Guid Uuid5(Guid namespace_, string name)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x12F12C0", Offset = "0x12F12C0", VA = "0x12F12C0")]
		public static Guid DeserializeFromUnity(string txt)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x12F13D4", Offset = "0x12F13D4", VA = "0x12F13D4")]
		public static string SerializeToUnity(Guid guid)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F2")]
	public static class HierarchyUtils
	{
		[Token(Token = "0x600277B")]
		[Address(RVA = "0x12F1764", Offset = "0x12F1764", VA = "0x12F1764")]
		public static void RecursivelySetLayer(Transform obj, int layer)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x12F1840", Offset = "0x12F1840", VA = "0x12F1840")]
		public static void RecursivelyDisableShadows(Transform obj)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x12F195C", Offset = "0x12F195C", VA = "0x12F195C")]
		public static void RecursivelySetMaterial(Transform obj, Material mat)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x12F1A78", Offset = "0x12F1A78", VA = "0x12F1A78")]
		public static void RecursivelySetMaterialBatchID(Transform obj, float batchId)
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public class ImageLoadError : Exception
	{
		[Token(Token = "0x600277F")]
		[Address(RVA = "0x12F1C00", Offset = "0x12F1C00", VA = "0x12F1C00")]
		public ImageLoadError(string message)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x12F1C68", Offset = "0x12F1C68", VA = "0x12F1C68")]
		public ImageLoadError(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x12F1CEC", Offset = "0x12F1CEC", VA = "0x12F1CEC")]
		public ImageLoadError(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public static class ImageUtils
	{
		[StructLayout(3)]
		[Token(Token = "0x20005F5")]
		[CompilerGenerated]
		private struct <DownloadTextureAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400256F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Texture2D> <>t__builder;

			[Token(Token = "0x4002571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uri;

			[Token(Token = "0x4002572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4002573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4002574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<RawImage>.Awaiter <>u__2;

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x12F3714", Offset = "0x12F3714", VA = "0x12F3714", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x12F4528", Offset = "0x12F4528", VA = "0x12F4528", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400256D")]
		private const byte kJpegMarkerSOF0 = 192;

		[Token(Token = "0x400256E")]
		private const byte kJpegMarkerSOF2 = 194;

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x12F1D80", Offset = "0x12F1D80", VA = "0x12F1D80")]
		public static RawImage FromImageData(byte[] data, string filename, int abortDimension = -1)
		{
			return null;
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x12F1E28", Offset = "0x12F1E28", VA = "0x12F1E28")]
		public static void ValidateDimensions(byte[] data, int maxDimension)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x12F2178", Offset = "0x12F2178", VA = "0x12F2178")]
		public static bool IsJpeg(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x12F28CC", Offset = "0x12F28CC", VA = "0x12F28CC")]
		public static bool GetJpegWidthAndHeight(Stream stream, out int width, out int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x12F21C4", Offset = "0x12F21C4", VA = "0x12F21C4")]
		public static RawImage FromJpeg(byte[] jpegData, string filename)
		{
			return null;
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x12F2758", Offset = "0x12F2758", VA = "0x12F2758")]
		public static bool IsPng(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x12F2AC0", Offset = "0x12F2AC0", VA = "0x12F2AC0")]
		public static void GetPngWidthAndHeight(Stream stream, out int width, out int height)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x12F27E0", Offset = "0x12F27E0", VA = "0x12F27E0")]
		public static RawImage FromPng(byte[] pngData, string filename)
		{
			return null;
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x12F2C2C", Offset = "0x12F2C2C", VA = "0x12F2C2C")]
		private static RawImage _FromPng(byte[] pngData, string filename)
		{
			return null;
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x12F3624", Offset = "0x12F3624", VA = "0x12F3624")]
		[AsyncStateMachine(typeof(<DownloadTextureAsync>d__11))]
		public static Task<Texture2D> DownloadTextureAsync(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F6")]
	public struct ConvertHelper<TFrom, TTo> where TFrom : class where TTo : class
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long before;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TFrom input;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TTo output;

		[Token(Token = "0x600278E")]
		public static TTo Convert(TFrom thing)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F7")]
	public static class ListExtensions
	{
		[Token(Token = "0x20005F8")]
		private class FieldLookup
		{
			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string sm_name;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<Type, FieldInfo> sm_cache;

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x12F4644", Offset = "0x12F4644", VA = "0x12F4644")]
			public FieldLookup(string name)
			{
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x12F46D4", Offset = "0x12F46D4", VA = "0x12F46D4")]
			public FieldInfo Get(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x20005F9")]
		public class PublicList<T>
		{
			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] _items;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _size;

			[Token(Token = "0x170006FD")]
			public T[] BackingArray
			{
				[Token(Token = "0x6002797")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002798")]
				set
				{
				}
			}

			[Token(Token = "0x170006FE")]
			public int Capacity
			{
				[Token(Token = "0x6002799")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170006FF")]
			public int Count
			{
				[Token(Token = "0x600279A")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600279B")]
				set
				{
				}
			}

			[Token(Token = "0x600279C")]
			public PublicList()
			{
			}
		}

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FieldLookup sm_items;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FieldLookup sm_size;

		[Token(Token = "0x600278F")]
		public static T[] GetBackingArray<T>(this List<T> list)
		{
			return null;
		}

		[Token(Token = "0x6002790")]
		public static void SetBackingArray<T>(this List<T> list, T[] value)
		{
		}

		[Token(Token = "0x6002791")]
		public static void SetCount<T>(this List<T> list, int newCount)
		{
		}

		[Token(Token = "0x6002792")]
		public static void AddRange<T>(this List<T> list, List<T> source, int start, int length)
		{
		}

		[Token(Token = "0x6002793")]
		public static void AddRange<T>(this List<T> list, T[] source, int start, int length)
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public static class MathEllipsoidPld
	{
		[Token(Token = "0x600279D")]
		[Address(RVA = "0x12F47F8", Offset = "0x12F47F8", VA = "0x12F47F8")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc, Vector3 point, int maxIters = 10, float distanceThreshold = 5E-05f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x12F4A80", Offset = "0x12F4A80", VA = "0x12F4A80")]
		private static Vector3 CSquare(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x12F4CA0", Offset = "0x12F4CA0", VA = "0x12F4CA0")]
		private static Vector3 CCube(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x12F4A70", Offset = "0x12F4A70", VA = "0x12F4A70")]
		private static Vector3 CMul(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x12F4A60", Offset = "0x12F4A60", VA = "0x12F4A60")]
		private static Vector3 CDiv(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x12F4CBC", Offset = "0x12F4CBC", VA = "0x12F4CBC")]
		private static float ScalarSum(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x12F4A30", Offset = "0x12F4A30", VA = "0x12F4A30")]
		private static bool IsFullyInside(Vector3 abc, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x12F4BFC", Offset = "0x12F4BFC", VA = "0x12F4BFC")]
		private static Vector3 ClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x12F4A90", Offset = "0x12F4A90", VA = "0x12F4A90")]
		private static float RadiusSqOfClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(float);
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x12F4B3C", Offset = "0x12F4B3C", VA = "0x12F4B3C")]
		private static float ddkRadiusSqOfClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005FB")]
	public static class MathUtils
	{
		[Token(Token = "0x20005FC")]
		public static class TiltBrushCpp
		{
		}

		[Token(Token = "0x20005FD")]
		[CompilerGenerated]
		private sealed class <LinearResampleCurve>d__25 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] samples;

			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] <>3__samples;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int newSamples;

			[Token(Token = "0x4002584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__newSamples;

			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private double <oldFromNew>5__2;

			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <idxNew>5__3;

			[Token(Token = "0x17000700")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60027C3")]
				[Address(RVA = "0x12F74A0", Offset = "0x12F74A0", VA = "0x12F74A0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000701")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C5")]
				[Address(RVA = "0x12F74E8", Offset = "0x12F74E8", VA = "0x12F74E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x12F72BC", Offset = "0x12F72BC", VA = "0x12F72BC")]
			[DebuggerHidden]
			public <LinearResampleCurve>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x12F72F0", Offset = "0x12F72F0", VA = "0x12F72F0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x12F72F4", Offset = "0x12F72F4", VA = "0x12F72F4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x12F74A8", Offset = "0x12F74A8", VA = "0x12F74A8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x12F7544", Offset = "0x12F7544", VA = "0x12F7544", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x12F75F0", Offset = "0x12F75F0", VA = "0x12F75F0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x12F4CC8", Offset = "0x12F4CC8", VA = "0x12F4CC8")]
		public static float PeriodicDifference(float lhs, float rhs, float period)
		{
			return default(float);
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x12F4D0C", Offset = "0x12F4D0C", VA = "0x12F4D0C")]
		public static void DecomposeMatrix4x4(Matrix4x4 m, out Vector3 translation, out Quaternion rotation, out float uniformScale)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x12F4EE4", Offset = "0x12F4EE4", VA = "0x12F4EE4")]
		public static float GetAngleBetween(Vector3 v1, Vector3 v2, Vector3 nAxis, out float stability)
		{
			return default(float);
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x12F50F0", Offset = "0x12F50F0", VA = "0x12F50F0")]
		public static Quaternion ConstrainRotationDelta(Quaternion q0, Quaternion q1, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x12F5674", Offset = "0x12F5674", VA = "0x12F5674")]
		public static Vector3 ProjectPosOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x12F56B8", Offset = "0x12F56B8", VA = "0x12F56B8")]
		public static TrTransform TwoPointObjectTransformation(TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, float deltaScaleMin = -1f, float deltaScaleMax = -1f, [Optional] Vector3 rotationAxisConstraint, bool bUseLeftAsPivot = false)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x12F5BC0", Offset = "0x12F5BC0", VA = "0x12F5BC0")]
		public static TrTransform TwoPointObjectTransformationNoScale(TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, float constraintPositionT)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x12F5E50", Offset = "0x12F5E50", VA = "0x12F5E50")]
		private static Vector3 ScalePosition(Vector3 position, float amount, Vector3 scaleCenter, Vector3 axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x12F5EB8", Offset = "0x12F5EB8", VA = "0x12F5EB8")]
		public static TrTransform TwoPointObjectTransformationNonUniformScale(Vector3 vScaleAxis0, TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, out float deltaScale, float finalScaleMin = -1f, float deltaScaleMin = -1f, float deltaScaleMax = -1f)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x12F6190", Offset = "0x12F6190", VA = "0x12F6190")]
		public static TrTransform TwoPointObjectTransformationAxisResize(Vector3 vScaleAxis0, float sizeAlongAxis, TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, out float deltaScale, float deltaScaleMin = 0f, float deltaScaleMax = float.PositiveInfinity)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x12F64BC", Offset = "0x12F64BC", VA = "0x12F64BC")]
		public static Matrix4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float dist, float near, float far)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x12F6684", Offset = "0x12F6684", VA = "0x12F6684")]
		public static bool SolveQuadratic(float a, float b, float c, out float r0, out float r1)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x12F6700", Offset = "0x12F6700", VA = "0x12F6700")]
		public static bool RaySphereIntersection(Vector3 rayOrigin, Vector3 rayDirection, Vector3 sphereCenter, float sphereRadius, out float t0, out float t1)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x12F67DC", Offset = "0x12F67DC", VA = "0x12F67DC")]
		public static void TransformVector3AsPoint(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x12F686C", Offset = "0x12F686C", VA = "0x12F686C")]
		public static void TransformVector3AsVector(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x12F68FC", Offset = "0x12F68FC", VA = "0x12F68FC")]
		public static void TransformVector3AsZDistance(float scale, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x12F6954", Offset = "0x12F6954", VA = "0x12F6954")]
		public static void TransformVector4AsPoint(Matrix4x4 mat, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x12F69E0", Offset = "0x12F69E0", VA = "0x12F69E0")]
		public static void TransformVector4AsVector(Matrix4x4 mat, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x12F6A6C", Offset = "0x12F6A6C", VA = "0x12F6A6C")]
		public static void TransformVector4AsZDistance(float scale, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x12F6AC0", Offset = "0x12F6AC0", VA = "0x12F6AC0")]
		public static void GetBoundsFor(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3, out Vector3 center, out Vector3 size)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x12F6D00", Offset = "0x12F6D00", VA = "0x12F6D00")]
		public static float MengerCurvature(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x12F6F08", Offset = "0x12F6F08", VA = "0x12F6F08")]
		public static Quaternion ComputeMinimalRotationFrame(Vector3 tangent, Quaternion? previousFrame, Quaternion bootstrapOrientation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x12F7190", Offset = "0x12F7190", VA = "0x12F7190")]
		public static int RandomInt()
		{
			return default(int);
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x12F71C4", Offset = "0x12F71C4", VA = "0x12F71C4")]
		public static int Min(long a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x12F7234", Offset = "0x12F7234", VA = "0x12F7234")]
		[IteratorStateMachine(typeof(<LinearResampleCurve>d__25))]
		public static IEnumerable<float> LinearResampleCurve(float[] samples, int newSamples)
		{
			return null;
		}
	}
	[Token(Token = "0x20005FE")]
	public static class PlaneExtensions
	{
		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TrTransform kReflectX;

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x12F75F4", Offset = "0x12F75F4", VA = "0x12F75F4")]
		public static Vector3 ReflectPoint(this Plane plane, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x12F7670", Offset = "0x12F7670", VA = "0x12F7670")]
		public static Vector3 ReflectVector(this Plane plane, Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x12F76F0", Offset = "0x12F76F0", VA = "0x12F76F0")]
		public static TrTransform ReflectPoseKeepHandedness(this Plane plane, TrTransform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x12F7818", Offset = "0x12F7818", VA = "0x12F7818")]
		public static TrTransform ToTrTransform(this Plane plane)
		{
			return default(TrTransform);
		}
	}
	[Token(Token = "0x20005FF")]
	public interface IPoolable
	{
		[Token(Token = "0x60027CD")]
		void OnPoolPut();

		[Token(Token = "0x60027CE")]
		void OnPoolGet();
	}
	[Token(Token = "0x2000600")]
	public class Pool<T> where T : class, IPoolable, new()
	{
		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<T> m_free;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_maxFree;

		[Token(Token = "0x60027CF")]
		public Pool(int maxFree = -1)
		{
		}

		[Token(Token = "0x60027D0")]
		public T Get()
		{
			return null;
		}

		[Token(Token = "0x60027D1")]
		public void PutAndClear(ref T instance)
		{
		}

		[Token(Token = "0x60027D2")]
		public void Put(T instance)
		{
		}
	}
	[Token(Token = "0x2000601")]
	[AttributeUsage(AttributeTargets.Field)]
	public class PowerRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float power;

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x12F7A2C", Offset = "0x12F7A2C", VA = "0x12F7A2C")]
		public PowerRangeAttribute(float min = 0.001f, float max = 1000f, float power = 2f)
		{
		}
	}
	[Token(Token = "0x2000602")]
	public static class QuaternionExtensions
	{
		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x12F7A78", Offset = "0x12F7A78", VA = "0x12F7A78")]
		public static Quaternion AngleAxisRad(float angle, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x12F7A8C", Offset = "0x12F7A8C", VA = "0x12F7A8C")]
		public static void ToAngleAxisRad(this Quaternion q, out float angle, out Vector3 axis)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x12F532C", Offset = "0x12F532C", VA = "0x12F532C")]
		public static Quaternion Log(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x12F5564", Offset = "0x12F5564", VA = "0x12F5564")]
		public static Quaternion Exp(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x12F5318", Offset = "0x12F5318", VA = "0x12F5318")]
		public static Quaternion Negated(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x12F5560", Offset = "0x12F5560", VA = "0x12F5560")]
		public static Vector3 Im(this Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x12F7AA0", Offset = "0x12F7AA0", VA = "0x12F7AA0")]
		public static float Re(this Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x12F7AA8", Offset = "0x12F7AA8", VA = "0x12F7AA8")]
		public static bool IsInitialized(this Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x12F7AD8", Offset = "0x12F7AD8", VA = "0x12F7AD8")]
		public static Quaternion normalized(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x12F7BC0", Offset = "0x12F7BC0", VA = "0x12F7BC0")]
		public static float magnitude(this Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x12F7C44", Offset = "0x12F7C44", VA = "0x12F7C44")]
		public static Quaternion TrueInverse(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x12F7C7C", Offset = "0x12F7C7C", VA = "0x12F7C7C")]
		public static bool TrueEquals(this Quaternion q, Quaternion rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x12F7CAC", Offset = "0x12F7CAC", VA = "0x12F7CAC")]
		public static bool TrueNotEquals(this Quaternion q, Quaternion rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000603")]
	public class ReferenceComparer<T> : IEqualityComparer<T> where T : class
	{
		[Token(Token = "0x60027E1")]
		public bool Equals(T x, T y)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E2")]
		public int GetHashCode(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60027E3")]
		public ReferenceComparer()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class RingBuffer<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x2000605")]
		private class Enumerator : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private RingBuffer<T> m_owner;

			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_index;

			[Token(Token = "0x4002592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_start;

			[Token(Token = "0x4002593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_end;

			[Token(Token = "0x17000708")]
			public int Length
			{
				[Token(Token = "0x60027FE")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000709")]
			public T Current
			{
				[Token(Token = "0x60027FF")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x1700070A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002800")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FB")]
			private Enumerator()
			{
			}

			[Token(Token = "0x60027FC")]
			public Enumerator(RingBuffer<T> owner)
			{
			}

			[Token(Token = "0x60027FD")]
			public Enumerator(RingBuffer<T> owner, int start, int length)
			{
			}

			[Token(Token = "0x6002801")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002802")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002803")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] m_buffer;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_head;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_next;

		[Token(Token = "0x17000702")]
		public bool IsEmpty
		{
			[Token(Token = "0x60027E5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000703")]
		public bool IsFull
		{
			[Token(Token = "0x60027E6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000704")]
		public int Capacity
		{
			[Token(Token = "0x60027E7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000705")]
		public int Count
		{
			[Token(Token = "0x60027E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000706")]
		private int CapacityInternal
		{
			[Token(Token = "0x60027E9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000707")]
		public T this[int index]
		{
			[Token(Token = "0x60027F1")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60027F2")]
			set
			{
			}
		}

		[Token(Token = "0x60027E4")]
		public RingBuffer(int capacity)
		{
		}

		[Token(Token = "0x60027EA")]
		public bool Enqueue(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EB")]
		public bool Enqueue(T item, bool overwriteIfFull)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EC")]
		public void Dequeue(int n)
		{
		}

		[Token(Token = "0x60027ED")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60027EE")]
		public int Dequeue(ref T[] rangeOut)
		{
			return default(int);
		}

		[Token(Token = "0x60027EF")]
		public void Clear()
		{
		}

		[Token(Token = "0x60027F0")]
		public void CopyFrom(RingBuffer<T> src)
		{
		}

		[Token(Token = "0x60027F3")]
		public void GetRange(ref T[] ret)
		{
		}

		[Token(Token = "0x60027F4")]
		public void GetRange(ref T[] ret, int ringIndex, int count)
		{
		}

		[Token(Token = "0x60027F5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60027F6")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60027F7")]
		public IEnumerator<T> GetEnumerator(int start, int length)
		{
			return null;
		}

		[Token(Token = "0x60027F8")]
		private int ComputeCheckedIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60027F9")]
		private int ComputeIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60027FA")]
		private int ComputeLength(int startIndex, int endIndex)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000606")]
	public struct SerializableGuid : IFormattable
	{
		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_storage;

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x12F7CDC", Offset = "0x12F7CDC", VA = "0x12F7CDC")]
		public static implicit operator SerializableGuid(Guid rhs)
		{
			return default(SerializableGuid);
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x12E95D4", Offset = "0x12E95D4", VA = "0x12E95D4")]
		public static implicit operator Guid(SerializableGuid rhs)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x12F7D34", Offset = "0x12F7D34", VA = "0x12F7D34", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x12F7D9C", Offset = "0x12F7D9C", VA = "0x12F7D9C", Slot = "4")]
		public string ToString(string format, [Optional] IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public class SerializedPropertyReferenceBool : SerializedPropertyReference<bool>
	{
		[Token(Token = "0x6002808")]
		[Address(RVA = "0x12F7DD0", Offset = "0x12F7DD0", VA = "0x12F7DD0")]
		public SerializedPropertyReferenceBool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class SerializedPropertyReferenceInt : SerializedPropertyReference<int>
	{
		[Token(Token = "0x6002809")]
		[Address(RVA = "0x12F7E18", Offset = "0x12F7E18", VA = "0x12F7E18")]
		public SerializedPropertyReferenceInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000609")]
	public class SerializedPropertyReferenceFloat : SerializedPropertyReference<float>
	{
		[Token(Token = "0x600280A")]
		[Address(RVA = "0x12F7E60", Offset = "0x12F7E60", VA = "0x12F7E60")]
		public SerializedPropertyReferenceFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060A")]
	public class SerializedPropertyReferenceString : SerializedPropertyReference<string>
	{
		[Token(Token = "0x600280B")]
		[Address(RVA = "0x12F7EA8", Offset = "0x12F7EA8", VA = "0x12F7EA8")]
		public SerializedPropertyReferenceString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class SerializedPropertyReference<T> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UnityEngine.Object m_Target;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_PropertyName;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PropertyInfo m_Property;

		[Token(Token = "0x1700070B")]
		public bool HasValue
		{
			[Token(Token = "0x600280C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700070C")]
		public T Value
		{
			[Token(Token = "0x600280D")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600280E")]
			set
			{
			}
		}

		[Token(Token = "0x600280F")]
		private void Resolve()
		{
		}

		[Token(Token = "0x6002810")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002811")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002812")]
		public SerializedPropertyReference()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class SortedLinkedList<T>
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> m_list;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T, T, bool> m_lessThan;

		[Token(Token = "0x1700070D")]
		public int Count
		{
			[Token(Token = "0x6002814")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700070E")]
		public LinkedListNode<T> First
		{
			[Token(Token = "0x6002816")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002813")]
		public SortedLinkedList(Func<T, T, bool> lessThan, IEnumerable<T> orderedInitialValues)
		{
		}

		[Token(Token = "0x6002815")]
		public LinkedList<T>.Enumerator GetEnumerator()
		{
			return default(LinkedList<T>.Enumerator);
		}

		[Token(Token = "0x6002817")]
		public LinkedListNode<T> PopFirst()
		{
			return null;
		}

		[Token(Token = "0x6002818")]
		public void Insert(LinkedListNode<T> newNode)
		{
		}
	}
	[Token(Token = "0x200060D")]
	public struct StatelessRng
	{
		[Token(Token = "0x400259A")]
		private const float kTwoToNegative24 = 5.9604645E-08f;

		[Token(Token = "0x400259B")]
		private const float kTwoToNegative32 = 2.3283064E-10f;

		[Token(Token = "0x400259C")]
		public const float kLargestFloatLessThanOne = (float)Math.PI * 113f / 355f;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int m_seed;

		[Token(Token = "0x1700070F")]
		public int Seed
		{
			[Token(Token = "0x600281D")]
			[Address(RVA = "0x12F7F44", Offset = "0x12F7F44", VA = "0x12F7F44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x12F7EF0", Offset = "0x12F7EF0", VA = "0x12F7EF0")]
		public static void BeginSaltReuseCheck()
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x12F7EF4", Offset = "0x12F7EF4", VA = "0x12F7EF4")]
		public static void EndSaltReuseCheck()
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x12F7EF8", Offset = "0x12F7EF8", VA = "0x12F7EF8")]
		private static uint lowbias32(uint x)
		{
			return default(uint);
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x12F7F20", Offset = "0x12F7F20", VA = "0x12F7F20")]
		public static float UInt32ToFloat01(uint a)
		{
			return default(float);
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x12F7F4C", Offset = "0x12F7F4C", VA = "0x12F7F4C")]
		public StatelessRng(int seed)
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x12F7F54", Offset = "0x12F7F54", VA = "0x12F7F54")]
		public float In01(int salt)
		{
			return default(float);
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x12F7FA4", Offset = "0x12F7FA4", VA = "0x12F7FA4")]
		public float InRange(int salt, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x12F8000", Offset = "0x12F8000", VA = "0x12F8000")]
		public int InIntRange(int salt, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x12F8078", Offset = "0x12F8078", VA = "0x12F8078")]
		public Vector2 OnUnitCircle(int salt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x12F80F4", Offset = "0x12F80F4", VA = "0x12F80F4")]
		public Vector2 InUnitCircle(int salt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x12F81B8", Offset = "0x12F81B8", VA = "0x12F81B8")]
		public Vector3 OnUnitSphere(int salt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x12F8290", Offset = "0x12F8290", VA = "0x12F8290")]
		public Vector3 InUnitSphere(int salt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x12F832C", Offset = "0x12F832C", VA = "0x12F832C")]
		public Quaternion Rotation(int salt)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200060E")]
	public static class TbTaskExtensions
	{
		[Token(Token = "0x200060F")]
		[CompilerGenerated]
		private sealed class <AsIeNull>d__0 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400259E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40025A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task task;

			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken? optToken;

			[Token(Token = "0x17000710")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6002835")]
				[Address(RVA = "0x12F8D88", Offset = "0x12F8D88", VA = "0x12F8D88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000711")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002837")]
				[Address(RVA = "0x12F8DD0", Offset = "0x12F8DD0", VA = "0x12F8DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x12F8488", Offset = "0x12F8488", VA = "0x12F8488")]
			[DebuggerHidden]
			public <AsIeNull>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x12F89EC", Offset = "0x12F89EC", VA = "0x12F89EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x12F8A08", Offset = "0x12F8A08", VA = "0x12F8A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x12F8C70", Offset = "0x12F8C70", VA = "0x12F8C70")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x12F8D90", Offset = "0x12F8D90", VA = "0x12F8D90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000612")]
		[CompilerGenerated]
		private struct <AsAsyncVoid>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40025A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task task;

			[Token(Token = "0x40025A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x1394D6C", Offset = "0x1394D6C", VA = "0x1394D6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0x1394ED4", Offset = "0x1394ED4", VA = "0x1394ED4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000613")]
		[CompilerGenerated]
		private struct <AsAsyncVoid>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x40025A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40025AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task task;

			[Token(Token = "0x40025AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action failure;

			[Token(Token = "0x40025AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action success;

			[Token(Token = "0x40025AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600283E")]
			[Address(RVA = "0x1394EE0", Offset = "0x1394EE0", VA = "0x1394EE0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600283F")]
			[Address(RVA = "0x1395110", Offset = "0x1395110", VA = "0x1395110", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000614")]
		[CompilerGenerated]
		private struct <AsAsyncVoid>d__7<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40025AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<T> task;

			[Token(Token = "0x40025B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action failure;

			[Token(Token = "0x40025B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> success;

			[Token(Token = "0x40025B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x6002840")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002841")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000615")]
		[CompilerGenerated]
		private sealed class <CompleteAfterIsDone>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DownloadHandler dh;

			[Token(Token = "0x40025B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter awaiter;

			[Token(Token = "0x17000712")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002845")]
				[Address(RVA = "0x13951AC", Offset = "0x13951AC", VA = "0x13951AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000713")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002847")]
				[Address(RVA = "0x13951F4", Offset = "0x13951F4", VA = "0x13951F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002842")]
			[Address(RVA = "0x139511C", Offset = "0x139511C", VA = "0x139511C")]
			[DebuggerHidden]
			public <CompleteAfterIsDone>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002843")]
			[Address(RVA = "0x1395144", Offset = "0x1395144", VA = "0x1395144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002844")]
			[Address(RVA = "0x1395148", Offset = "0x1395148", VA = "0x1395148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x13951B4", Offset = "0x13951B4", VA = "0x13951B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x12F840C", Offset = "0x12F840C", VA = "0x12F840C")]
		[IteratorStateMachine(typeof(<AsIeNull>d__0))]
		public static IEnumerator<Null> AsIeNull(this Task task, [Optional] CancellationToken? optToken)
		{
			return null;
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x12F84B0", Offset = "0x12F84B0", VA = "0x12F84B0")]
		private static void RunOnUnityScheduler([CanBeNull] Action action)
		{
		}

		[Token(Token = "0x6002829")]
		private static void RunOnUnityScheduler<T>([CanBeNull] Action<T> action, T state)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x12F85E8", Offset = "0x12F85E8", VA = "0x12F85E8")]
		private static CancellationTokenSource UglyGetCancellationTokenSource(this CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x12F86F4", Offset = "0x12F86F4", VA = "0x12F86F4")]
		private static CancellationToken UglyGetCancellationToken(this Task task)
		{
			return default(CancellationToken);
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x12F8758", Offset = "0x12F8758", VA = "0x12F8758")]
		[AsyncStateMachine(typeof(<AsAsyncVoid>d__5))]
		public static void AsAsyncVoid(this Task task)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x12F87EC", Offset = "0x12F87EC", VA = "0x12F87EC")]
		[AsyncStateMachine(typeof(<AsAsyncVoid>d__6))]
		public static void AsAsyncVoid(this Task task, [CanBeNull] Action success, [CanBeNull] Action failure)
		{
		}

		[Token(Token = "0x600282E")]
		[AsyncStateMachine(typeof(<AsAsyncVoid>d__7<>))]
		public static void AsAsyncVoid<T>(this Task<T> task, [CanBeNull] Action<T> success, [CanBeNull] Action failure)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x12F8894", Offset = "0x12F8894", VA = "0x12F8894")]
		[IteratorStateMachine(typeof(<CompleteAfterIsDone>d__8))]
		private static IEnumerator CompleteAfterIsDone(IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter awaiter, DownloadHandler dh)
		{
			return null;
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x12F8908", Offset = "0x12F8908", VA = "0x12F8908")]
		public static IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter GetAwaiter(this DownloadHandler dh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000617")]
	internal static class TextUtils
	{
		[Token(Token = "0x600284A")]
		[Address(RVA = "0x13952C4", Offset = "0x13952C4", VA = "0x13952C4")]
		private static bool IsRfc5987AttrChar(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x139532C", Offset = "0x139532C", VA = "0x139532C")]
		public static string Rfc5987Encode(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000618")]
	public class RawImage
	{
		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32[] ColorData;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ColorWidth;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ColorHeight;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ColorAspect;

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x13954F8", Offset = "0x13954F8", VA = "0x13954F8")]
		public RawImage()
		{
		}
	}
	[Token(Token = "0x2000619")]
	internal class ThreadedImageReader : Future<RawImage>
	{
		[Token(Token = "0x17000714")]
		public bool Finished
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x1395500", Offset = "0x1395500", VA = "0x1395500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000715")]
		public RawImage Result
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x1395514", Offset = "0x1395514", VA = "0x1395514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x13955C4", Offset = "0x13955C4", VA = "0x13955C4")]
		public ThreadedImageReader(string file, int maxDimension = -1, int abortDimension = -1)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x13956BC", Offset = "0x13956BC", VA = "0x13956BC")]
		public ThreadedImageReader(byte[] rawData, string identifier = "", int maxDimension = -1, int abortDimension = -1)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x13957B8", Offset = "0x13957B8", VA = "0x13957B8")]
		private static RawImage ThreadProc(string filename, int maxDimension = -1, int abortDimension = -1)
		{
			return null;
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x1395918", Offset = "0x1395918", VA = "0x1395918")]
		private static RawImage ThreadProc(byte[] rawData, string identifier, int maxDimension = -1, int abortDimension = -1)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200061C")]
	[JsonConverter(typeof(JsonTrTransformConverter))]
	public struct TrTransform
	{
		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 translation;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TrTransform identity;

		[Token(Token = "0x17000716")]
		public TrTransform inverse
		{
			[Token(Token = "0x6002868")]
			[Address(RVA = "0x1396820", Offset = "0x1396820", VA = "0x1396820")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000717")]
		public Vector3 forward
		{
			[Token(Token = "0x6002869")]
			[Address(RVA = "0x1396900", Offset = "0x1396900", VA = "0x1396900")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000718")]
		public Vector3 up
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0x1396970", Offset = "0x1396970", VA = "0x1396970")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000719")]
		public Vector3 right
		{
			[Token(Token = "0x600286B")]
			[Address(RVA = "0x13969E0", Offset = "0x13969E0", VA = "0x13969E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x1395B10", Offset = "0x1395B10", VA = "0x1395B10")]
		public static TrTransform T(Vector3 t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x1395B8C", Offset = "0x1395B8C", VA = "0x1395B8C")]
		public static TrTransform R(Quaternion r)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x1395C14", Offset = "0x1395C14", VA = "0x1395C14")]
		public static TrTransform R(float angle, Vector3 axis)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x1395CA4", Offset = "0x1395CA4", VA = "0x1395CA4")]
		public static TrTransform S(float s)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x1395D4C", Offset = "0x1395D4C", VA = "0x1395D4C")]
		public static TrTransform TR(Vector3 t, Quaternion r)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x1395D68", Offset = "0x1395D68", VA = "0x1395D68")]
		public static TrTransform TRS(Vector3 t, Quaternion r, float scale)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x1395D7C", Offset = "0x1395D7C", VA = "0x1395D7C")]
		public static TrTransform FromMatrix4x4(Matrix4x4 m)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x1395DD0", Offset = "0x1395DD0", VA = "0x1395DD0")]
		public static TrTransform FromTransform(Transform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x1395F50", Offset = "0x1395F50", VA = "0x1395F50")]
		public static TrTransform FromLocalTransform(Transform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x1396020", Offset = "0x1396020", VA = "0x1396020")]
		public static TrTransform InvMul(TrTransform a, TrTransform b)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x13961B8", Offset = "0x13961B8", VA = "0x13961B8")]
		public static TrTransform Lerp(TrTransform a, TrTransform b, float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x13962F0", Offset = "0x13962F0", VA = "0x13962F0")]
		public static Vector3 operator *(TrTransform a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x139634C", Offset = "0x139634C", VA = "0x139634C")]
		public static TrTransform operator *(TrTransform a, TrTransform b)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x13964A0", Offset = "0x13964A0", VA = "0x13964A0")]
		public static Plane operator *(TrTransform xf, Plane plane)
		{
			return default(Plane);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x139656C", Offset = "0x139656C", VA = "0x139656C")]
		public static bool operator !=(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x1396690", Offset = "0x1396690", VA = "0x1396690")]
		public static bool operator ==(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x139671C", Offset = "0x139671C", VA = "0x139671C")]
		public static bool Approximately(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1396A50", Offset = "0x1396A50", VA = "0x1396A50")]
		public bool IsFinite()
		{
			return default(bool);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x1396E78", Offset = "0x1396E78", VA = "0x1396E78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x1397124", Offset = "0x1397124", VA = "0x1397124", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x1397260", Offset = "0x1397260", VA = "0x1397260", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x1397324", Offset = "0x1397324", VA = "0x1397324")]
		public Matrix4x4 ToMatrix4x4()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x1397370", Offset = "0x1397370", VA = "0x1397370")]
		public void ToTransform(Transform xf)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x1397470", Offset = "0x1397470", VA = "0x1397470")]
		public void ToLocalTransform(Transform xf)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x13962F4", Offset = "0x13962F4", VA = "0x13962F4")]
		[Pure]
		public Vector3 MultiplyPoint(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x13974D0", Offset = "0x13974D0", VA = "0x13974D0")]
		[Pure]
		public Vector3 MultiplyVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x13974FC", Offset = "0x13974FC", VA = "0x13974FC")]
		[Pure]
		public Vector3 MultiplyBivector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x139752C", Offset = "0x139752C", VA = "0x139752C")]
		[Pure]
		public Vector3 MultiplyNormal(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x1397550", Offset = "0x1397550", VA = "0x1397550")]
		public TrTransform TransformBy(TrTransform rhs)
		{
			return default(TrTransform);
		}
	}
	[Token(Token = "0x200061D")]
	public static class TransformExtensions
	{
		[Token(Token = "0x200061E")]
		public struct LocalAccessor
		{
			[Token(Token = "0x1700071A")]
			public TrTransform this[Transform t]
			{
				[Token(Token = "0x600287B")]
				[Address(RVA = "0x13977F4", Offset = "0x13977F4", VA = "0x13977F4")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x600287C")]
				[Address(RVA = "0x139786C", Offset = "0x139786C", VA = "0x139786C")]
				set
				{
				}
			}
		}

		[Token(Token = "0x200061F")]
		public struct GlobalAccessor
		{
			[Token(Token = "0x1700071B")]
			public TrTransform this[Transform t]
			{
				[Token(Token = "0x600287D")]
				[Address(RVA = "0x1397874", Offset = "0x1397874", VA = "0x1397874")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x600287E")]
				[Address(RVA = "0x13978EC", Offset = "0x13978EC", VA = "0x13978EC")]
				set
				{
				}
			}
		}

		[Token(Token = "0x2000620")]
		public struct RelativeAccessor
		{
			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Transform m_parent;

			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private GlobalAccessor AsGlobal;

			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			private LocalAccessor AsLocal;

			[Token(Token = "0x1700071C")]
			public TrTransform this[Transform target]
			{
				[Token(Token = "0x6002880")]
				[Address(RVA = "0x1397900", Offset = "0x1397900", VA = "0x1397900")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x6002881")]
				[Address(RVA = "0x1397AD4", Offset = "0x1397AD4", VA = "0x1397AD4")]
				set
				{
				}
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0x13978F4", Offset = "0x13978F4", VA = "0x13978F4")]
			public RelativeAccessor(Transform parent)
			{
			}
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x1395E9C", Offset = "0x1395E9C", VA = "0x1395E9C")]
		public static float GetUniformScale(this Transform xf)
		{
			return default(float);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x13973C4", Offset = "0x13973C4", VA = "0x13973C4")]
		public static void SetUniformScale(this Transform xf, float scale)
		{
		}
	}
	[Token(Token = "0x2000621")]
	public static class TsvIo
	{
		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1397D58", Offset = "0x1397D58", VA = "0x1397D58")]
		public static string[,] TsvToTable(string input)
		{
			return null;
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1397EF8", Offset = "0x1397EF8", VA = "0x1397EF8")]
		public static void WriteResults(string output, string[,] data)
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class Vec2AsRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x1700071D")]
		public bool Slider
		{
			[Token(Token = "0x6002884")]
			[Address(RVA = "0x1398044", Offset = "0x1398044", VA = "0x1398044")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002885")]
			[Address(RVA = "0x139804C", Offset = "0x139804C", VA = "0x139804C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700071E")]
		public bool HideMax
		{
			[Token(Token = "0x6002886")]
			[Address(RVA = "0x1398058", Offset = "0x1398058", VA = "0x1398058")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x1398060", Offset = "0x1398060", VA = "0x1398060")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700071F")]
		public float LowerBound
		{
			[Token(Token = "0x6002888")]
			[Address(RVA = "0x139806C", Offset = "0x139806C", VA = "0x139806C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002889")]
			[Address(RVA = "0x1398074", Offset = "0x1398074", VA = "0x1398074")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000720")]
		public float UpperBound
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0x139807C", Offset = "0x139807C", VA = "0x139807C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600288B")]
			[Address(RVA = "0x1398084", Offset = "0x1398084", VA = "0x1398084")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x139808C", Offset = "0x139808C", VA = "0x139808C")]
		public Vec2AsRangeAttribute()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x600288D")]
		[Address(RVA = "0x13980B8", Offset = "0x13980B8", VA = "0x13980B8")]
		public static Vector2 Rotate(this Vector2 v, float radians)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000624")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x600288E")]
		[Address(RVA = "0x1398100", Offset = "0x1398100", VA = "0x1398100")]
		public static float Min(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x1398114", Offset = "0x1398114", VA = "0x1398114")]
		public static float Max(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x1398128", Offset = "0x1398128", VA = "0x1398128")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000625")]
	public class VRFlareData
	{
		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Flare;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_DepthFactor;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_CrossFactor;

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x1398138", Offset = "0x1398138", VA = "0x1398138")]
		public VRFlareData()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class VRFlare : MonoBehaviour
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRFlareData[] m_Flares;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_CameraTransform;

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x1398140", Offset = "0x1398140", VA = "0x1398140")]
		private void Start()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x1398174", Offset = "0x1398174", VA = "0x1398174")]
		private void Update()
		{
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x1398510", Offset = "0x1398510", VA = "0x1398510")]
		public VRFlare()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public class VideoButton : BaseButton
	{
		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ReferenceVideo m_Video;

		[Token(Token = "0x17000721")]
		public ReferenceVideo Video
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x13988B0", Offset = "0x13988B0", VA = "0x13988B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x13988B8", Offset = "0x13988B8", VA = "0x13988B8")]
			set
			{
			}
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x1398518", Offset = "0x1398518", VA = "0x1398518", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x13987F8", Offset = "0x13987F8", VA = "0x13987F8")]
		public void RefreshDescription()
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x13988DC", Offset = "0x13988DC", VA = "0x13988DC")]
		public VideoButton()
		{
		}
	}
	[Token(Token = "0x2000628")]
	public class VideoCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Token(Token = "0x200062B")]
		[CompilerGenerated]
		private sealed class <ScanReferenceDirectory>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoCatalog <>4__this;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TimeSpan <interval>5__2;

			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DateTime <nextRefresh>5__3;

			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<ReferenceVideo>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000725")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B5")]
				[Address(RVA = "0x1399FC4", Offset = "0x1399FC4", VA = "0x1399FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000726")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B7")]
				[Address(RVA = "0x139A00C", Offset = "0x139A00C", VA = "0x139A00C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x13991EC", Offset = "0x13991EC", VA = "0x13991EC")]
			[DebuggerHidden]
			public <ScanReferenceDirectory>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x13995D0", Offset = "0x13995D0", VA = "0x13995D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x13995EC", Offset = "0x13995EC", VA = "0x13995EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x1399F74", Offset = "0x1399F74", VA = "0x1399F74")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x1399FCC", Offset = "0x1399FCC", VA = "0x1399FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_DefaultVideos;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_DebugOutput;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] m_supportedVideoExtensions;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReferenceVideo> m_Videos;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_ScanningDirectory;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_DirectoryScanRequired;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<string> m_ChangedFiles;

		[Token(Token = "0x17000722")]
		public static VideoCatalog Instance
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0x13988E4", Offset = "0x13988E4", VA = "0x13988E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600289B")]
			[Address(RVA = "0x139892C", Offset = "0x139892C", VA = "0x139892C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000723")]
		public bool IsScanning
		{
			[Token(Token = "0x600289C")]
			[Address(RVA = "0x1398978", Offset = "0x1398978", VA = "0x1398978", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000724")]
		public int ItemCount
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x1398DB4", Offset = "0x1398DB4", VA = "0x1398DB4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000049")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x600289F")]
			[Address(RVA = "0x1398C7C", Offset = "0x1398C7C", VA = "0x1398C7C", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x1398D18", Offset = "0x1398D18", VA = "0x1398D18", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x1398980", Offset = "0x1398980", VA = "0x1398980")]
		private void Awake()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x13989D0", Offset = "0x13989D0", VA = "0x13989D0")]
		private void Init()
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x1398DFC", Offset = "0x1398DFC", VA = "0x1398DFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x1398F5C", Offset = "0x1398F5C", VA = "0x1398F5C")]
		public ReferenceVideo GetVideoAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x1399088", Offset = "0x1399088", VA = "0x1399088")]
		private void Update()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x1399098", Offset = "0x1399098", VA = "0x1399098", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x13990CC", Offset = "0x13990CC", VA = "0x13990CC")]
		private void OnDirectoryChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x1398C14", Offset = "0x1398C14", VA = "0x1398C14")]
		[IteratorStateMachine(typeof(<ScanReferenceDirectory>d__26))]
		private IEnumerator<object> ScanReferenceDirectory()
		{
			return null;
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x1399214", Offset = "0x1399214", VA = "0x1399214")]
		public ReferenceVideo GetVideoByPersistentPath(string path)
		{
			return null;
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x13992F4", Offset = "0x13992F4", VA = "0x13992F4")]
		public void DebugListVideos()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x1399454", Offset = "0x1399454", VA = "0x1399454")]
		public VideoCatalog()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class ViewpointScript : MonoBehaviour
	{
		[Token(Token = "0x200062E")]
		private enum FullScreenFadeState
		{
			[Token(Token = "0x40025FC")]
			Default,
			[Token(Token = "0x40025FD")]
			FadingToColor,
			[Token(Token = "0x40025FE")]
			FadingToScene
		}

		[Token(Token = "0x200062F")]
		private enum GroundPlaneFadeState
		{
			[Token(Token = "0x4002600")]
			Default,
			[Token(Token = "0x4002601")]
			FadingIn,
			[Token(Token = "0x4002602")]
			FadingOut
		}

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ViewpointScript m_Instance;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_UserHeadMesh;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_DropCamHeadMesh;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_FullScreenOverlay;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_GroundPlaneOverlay;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_ExceptionOverlay;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_MirrorModeEnabled;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private FullScreenFadeState m_FullScreenFadeState;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_FullScreenFadeAmount;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_FullScreenTargetColor;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_FullScreenFadeSpeed;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_FullScreenFadeEatFrame;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GroundPlaneFadeState m_GroundPlaneFadeState;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_GroundPlaneFadeAmount;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color m_GroundPlaneTargetColor;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_GroundPlaneFadeSpeed;

		[Token(Token = "0x17000727")]
		public static Transform Head
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x139A038", Offset = "0x139A038", VA = "0x139A038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000728")]
		public static Ray Gaze
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x139A0B0", Offset = "0x139A0B0", VA = "0x139A0B0")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x17000729")]
		public bool AllowsFading
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x139A130", Offset = "0x139A130", VA = "0x139A130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x139A140", Offset = "0x139A140", VA = "0x139A140")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x139A1E8", Offset = "0x139A1E8", VA = "0x139A1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x139A314", Offset = "0x139A314", VA = "0x139A314")]
		public void Init()
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x139A190", Offset = "0x139A190", VA = "0x139A190")]
		public void SetOverlayToBlack()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x139A69C", Offset = "0x139A69C", VA = "0x139A69C")]
		private void Update()
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x139A088", Offset = "0x139A088", VA = "0x139A088")]
		private Transform GetHeadTransform()
		{
			return null;
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x139A674", Offset = "0x139A674", VA = "0x139A674")]
		private Transform GetEyeTransform()
		{
			return null;
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x139A8FC", Offset = "0x139A8FC", VA = "0x139A8FC")]
		public void ToggleScreenMirroring()
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x139A90C", Offset = "0x139A90C", VA = "0x139A90C")]
		public void FadeToColor(Color overlayColor, float speed)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x139A924", Offset = "0x139A924", VA = "0x139A924")]
		public void FadeToScene(float speed)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x139A948", Offset = "0x139A948", VA = "0x139A948")]
		public void FadeGroundPlaneIn(Color groundPlaneColor, float speed)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x139A960", Offset = "0x139A960", VA = "0x139A960")]
		public void FadeGroundPlaneOut(float speed)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x139A970", Offset = "0x139A970", VA = "0x139A970")]
		public void SetHeadMeshVisible(bool bShow)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x139A9A0", Offset = "0x139A9A0", VA = "0x139A9A0")]
		public ViewpointScript()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class VisualizerCSCoreFft : VisualizerManager.Fft
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FftProvider m_Fft;

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x139A9A8", Offset = "0x139A9A8", VA = "0x139A9A8")]
		public VisualizerCSCoreFft(int channels, int fftSize)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x139AA34", Offset = "0x139AA34", VA = "0x139AA34", Slot = "4")]
		public override void Add(float[] samples, int count)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x139AA54", Offset = "0x139AA54", VA = "0x139AA54", Slot = "5")]
		public override void GetFftData(float[] resultBuffer)
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class VisualizerCSCoreFilter : VisualizerManager.Filter
	{
		[Token(Token = "0x2000632")]
		public enum FilterType
		{
			[Token(Token = "0x4002607")]
			Low,
			[Token(Token = "0x4002608")]
			High
		}

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BiQuad m_Filter;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double m_Frequency;

		[Token(Token = "0x1700072A")]
		public override double Frequency
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x139AB68", Offset = "0x139AB68", VA = "0x139AB68", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x139AB70", Offset = "0x139AB70", VA = "0x139AB70", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x139AA74", Offset = "0x139AA74", VA = "0x139AA74")]
		public VisualizerCSCoreFilter(FilterType type, int sampleRate, double frequency)
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x139AB4C", Offset = "0x139AB4C", VA = "0x139AB4C", Slot = "4")]
		public override void Process(float[] samples)
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class VisualizerManager : MonoBehaviour
	{
		[Token(Token = "0x2000634")]
		public class Fft
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x139C5D4", Offset = "0x139C5D4", VA = "0x139C5D4", Slot = "4")]
			public virtual void Add(float[] samples, int count)
			{
			}

			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x139C5D8", Offset = "0x139C5D8", VA = "0x139C5D8", Slot = "5")]
			public virtual void GetFftData(float[] resultBuffer)
			{
			}

			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x139AA2C", Offset = "0x139AA2C", VA = "0x139AA2C")]
			public Fft()
			{
			}
		}

		[Token(Token = "0x2000635")]
		public class Filter
		{
			[Token(Token = "0x17000734")]
			public virtual double Frequency
			{
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0x139C5E0", Offset = "0x139C5E0", VA = "0x139C5E0", Slot = "5")]
				[CompilerGenerated]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60028ED")]
				[Address(RVA = "0x139C5E8", Offset = "0x139C5E8", VA = "0x139C5E8", Slot = "6")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x139C5DC", Offset = "0x139C5DC", VA = "0x139C5DC", Slot = "4")]
			public virtual void Process(float[] samples)
			{
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x139AB44", Offset = "0x139AB44", VA = "0x139AB44")]
			public Filter()
			{
			}
		}

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VisualizerManager m_Instance;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Band Levels")]
		[SerializeField]
		private float m_BandPeakDecay;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_NormalizedBandPeakLerp;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("FFT")]
		[SerializeField]
		private float m_FFTPeakDecay;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_FFTScale;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FFTPowerScale;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_FFTPower;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("Waveform")]
		private float m_WeirdWaveformLerp;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private double m_HighPassFreq;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private double m_LowPassFreq;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Reaktor")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjector;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorAlt;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorLowPass;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorHighPass;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_FFTSize;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleRate;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] m_Bands;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_Bandwidth;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_BandLevels;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] m_BandPeakLevels;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] m_BandNormalizedLevels;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture2D m_WaveFormTexture;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color[] m_WaveFormRow;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Texture2D m_FFTTexture;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_FFTTextureSize;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color[] m_FFTRow;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector4 m_BandPeakLevelsOutput;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector4 m_BeatOutput;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector4 m_BeatOutputAccum;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector4 m_AudioVolume;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Fft m_FFT;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Filter m_LowPassFilter;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Filter m_HighPassFilter;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float[] m_AudioSamples;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float[] m_LChannelWeird;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float[] m_LChannelHighPass;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float[] m_LChannelLowPass;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float[] m_FFTResult;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float[] m_PeakFFTResult;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Reaktor m_Reaktor;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Reaktor m_ReaktorAlt;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Reaktor m_ReaktorLowPass;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Reaktor m_ReaktorHighPass;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<GameObject> m_VisualizerObjects;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int m_VisualsRequestCount;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool m_VisualsActive;

		[Token(Token = "0x1700072B")]
		public int FFTSize
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x139AB94", Offset = "0x139AB94", VA = "0x139AB94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700072C")]
		public Texture2D WaveformTexture
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x139AB9C", Offset = "0x139AB9C", VA = "0x139AB9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072D")]
		public Texture2D FFTTexture
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x139ABA4", Offset = "0x139ABA4", VA = "0x139ABA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072E")]
		public Vector4 BandPeakLevelsOutput
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x139ABAC", Offset = "0x139ABAC", VA = "0x139ABAC")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700072F")]
		public Vector4 BeatOutput
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x139ABB8", Offset = "0x139ABB8", VA = "0x139ABB8")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000730")]
		public Vector4 BeatOutputAccum
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x139ABC4", Offset = "0x139ABC4", VA = "0x139ABC4")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000731")]
		public Vector4 AudioVolume
		{
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x139ABD0", Offset = "0x139ABD0", VA = "0x139ABD0")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000732")]
		public bool VisualsRequested
		{
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x139ABDC", Offset = "0x139ABDC", VA = "0x139ABDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000733")]
		public bool AreVisualsActive
		{
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x139ABEC", Offset = "0x139ABEC", VA = "0x139ABEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x139ABF4", Offset = "0x139ABF4", VA = "0x139ABF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x139AF78", Offset = "0x139AF78", VA = "0x139AF78")]
		public void RegisterVisualizerObject(GameObject rObject)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x139B0C0", Offset = "0x139B0C0", VA = "0x139B0C0")]
		public void UnregisterVisualizerObject(GameObject rObject)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x139B1CC", Offset = "0x139B1CC", VA = "0x139B1CC")]
		public void SetVisualizerObjectActive(bool bActivate)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x139B430", Offset = "0x139B430", VA = "0x139B430")]
		private void InitializeAllReaktorComponents()
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x139B8B0", Offset = "0x139B8B0", VA = "0x139B8B0")]
		public void EnableVisuals(bool bEnable)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x139BA0C", Offset = "0x139BA0C", VA = "0x139BA0C")]
		public void AudioCaptureStatusChange(bool bCapturing)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x139B944", Offset = "0x139B944", VA = "0x139B944")]
		private void ActivateVisuals(bool bEnable)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x139BA24", Offset = "0x139BA24", VA = "0x139BA24")]
		public void SetSampleRate(int sampleRate)
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x139BAB0", Offset = "0x139BAB0", VA = "0x139BAB0")]
		public void ProcessAudio(float[] AudioData, int SampleRate)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x139C448", Offset = "0x139C448", VA = "0x139C448")]
		private int FrequencyToSpectrumIndex(float f)
		{
			return default(int);
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x139C29C", Offset = "0x139C29C", VA = "0x139C29C")]
		private void ConvertRawSpectrumToBandLevels()
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x139C504", Offset = "0x139C504", VA = "0x139C504")]
		public VisualizerManager()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class VisualizerScript : MonoBehaviour
	{
		[Token(Token = "0x2000637")]
		private enum LoadMusicState
		{
			[Token(Token = "0x400264F")]
			Playing,
			[Token(Token = "0x4002650")]
			WaitingForWWW,
			[Token(Token = "0x4002651")]
			WaitingForAudio,
			[Token(Token = "0x4002652")]
			WaitingForStart,
			[Token(Token = "0x4002653")]
			MicMode
		}

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Active;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LoadMusicState m_CurrentLoadMusicState;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_LoadMusicIndex;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW m_LoadMusicWWW;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_SmoothLerp;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_CaptureSize;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_WaveFormFloats;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_WaveFormFloatsSmooth;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] m_SpectrumFloats;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] m_SpectrumFloatsTempArray;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] m_SpectrumFloatsAccumulated;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D m_WaveFormTexture;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_WaveFormTextureWidth;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_WaveFormTextureHeight;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color[] m_WaveFormRow;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int m_MicResetDuration;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_MicResetCountdown;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_SpectrumAccumulatedFactor;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioMixerGroup m_MasterAudioMixerGroup;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioMixerGroup m_MutedAudioMixerGroup;

		[NonSerialized]
		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Reaktor m_Reaktor;

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x139C5F0", Offset = "0x139C5F0", VA = "0x139C5F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x139C640", Offset = "0x139C640", VA = "0x139C640")]
		private void Start()
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x139C814", Offset = "0x139C814", VA = "0x139C814")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x139C7B8", Offset = "0x139C7B8", VA = "0x139C7B8")]
		public void Activate(bool bActive)
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x139C9EC", Offset = "0x139C9EC", VA = "0x139C9EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x139C9E8", Offset = "0x139C9E8", VA = "0x139C9E8")]
		private void EnableMic(bool bEnable)
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x139CDE0", Offset = "0x139CDE0", VA = "0x139CDE0")]
		private void UpdateShaders()
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x139C81C", Offset = "0x139C81C", VA = "0x139C81C")]
		private void LoadNextSong()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x139D024", Offset = "0x139D024", VA = "0x139D024")]
		public VisualizerScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000638")]
	public enum ControllerStyle
	{
		[Token(Token = "0x4002655")]
		Unset,
		[Token(Token = "0x4002656")]
		None,
		[Token(Token = "0x4002657")]
		InitializingUnityXR,
		[Token(Token = "0x4002658")]
		Vive,
		[Token(Token = "0x4002659")]
		Knuckles,
		[Token(Token = "0x400265A")]
		OculusTouch,
		[Token(Token = "0x400265B")]
		Wmr,
		[Token(Token = "0x400265C")]
		Gvr,
		[Token(Token = "0x400265D")]
		LogitechPen,
		[Token(Token = "0x400265E")]
		Cosmos,
		[Token(Token = "0x400265F")]
		Neo3,
		[Token(Token = "0x4002660")]
		Phoenix
	}
	[Token(Token = "0x2000639")]
	public class VrSdk : MonoBehaviour
	{
		[Token(Token = "0x200063A")]
		public enum DoF
		{
			[Token(Token = "0x4002678")]
			None,
			[Token(Token = "0x4002679")]
			Two,
			[Token(Token = "0x400267A")]
			Six
		}

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_VrSystem;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_UnityXRUninitializedControlsPrefab;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_UnityXRViveControlsPrefab;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_UnityXRRiftControlsPrefab;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_UnityXRQuestControlsPrefab;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_UnityXRWmrControlsPrefab;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_UnityXRKnucklesControlsPrefab;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_UnityXRCosmosControlsPrefab;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_UnityXRNeo3ControlsPrefab;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_UnityXRPhoenixControlsPrefab;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_OculusRiftControlsPrefab;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_OculusQuestControlsPrefab;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_GvrPointerControlsPrefab;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_NonVrControlsPrefab;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VrControllers m_VrControls;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_HasVrFocus;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Bounds? m_RoomBoundsAabbCached;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Action[] m_OldOnPoseApplied;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_NeedsToAttachConsoleScript;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private TrTransform? m_TrackingBackupXf;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action OnNewControllerPosesApplied;

		[Token(Token = "0x17000735")]
		public VrControllers VrControls
		{
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x139D038", Offset = "0x139D038", VA = "0x139D038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000736")]
		public bool IsInitializingUnityXR
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x139D040", Offset = "0x139D040", VA = "0x139D040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x139D078", Offset = "0x139D078", VA = "0x139D078")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x139D8DC", Offset = "0x139D8DC", VA = "0x139D8DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x139DA20", Offset = "0x139DA20", VA = "0x139DA20")]
		private void Update()
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x139DAB8", Offset = "0x139DAB8", VA = "0x139DAB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x139DC18", Offset = "0x139DC18", VA = "0x139DC18")]
		private void OnInputFocus(params object[] args)
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x139DA9C", Offset = "0x139DA9C", VA = "0x139DA9C")]
		private void OnNewPoses()
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x139DD34", Offset = "0x139DD34", VA = "0x139DD34")]
		public Camera GetVrCamera()
		{
			return null;
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x139DD3C", Offset = "0x139DD3C", VA = "0x139DD3C")]
		public int? GetDroppedFrames()
		{
			return null;
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x139DD44", Offset = "0x139DD44", VA = "0x139DD44")]
		public bool HasRoomBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x139A2E8", Offset = "0x139A2E8", VA = "0x139A2E8")]
		public Vector3 GetRoomExtents()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x139DDF8", Offset = "0x139DDF8", VA = "0x139DDF8")]
		public Bounds GetRoomBoundsAabb()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x139DE88", Offset = "0x139DE88", VA = "0x139DE88")]
		private void RefreshRoomBoundsCache()
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x139DF3C", Offset = "0x139DF3C", VA = "0x139DF3C")]
		private static Bounds FromPoints(IEnumerable<Vector3> points)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x139E3AC", Offset = "0x139E3AC", VA = "0x139E3AC")]
		private static bool IsClockwiseConvex(Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x139E504", Offset = "0x139E504", VA = "0x139E504")]
		private static Vector3 UnityFromOculus(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x139E518", Offset = "0x139E518", VA = "0x139E518")]
		public float SwipeScaleAdjustment(InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x139E53C", Offset = "0x139E53C", VA = "0x139E53C")]
		public bool AnalogIsStick(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x139D2CC", Offset = "0x139D2CC", VA = "0x139D2CC")]
		public void SetControllerStyle(ControllerStyle style)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x139E5A0", Offset = "0x139E5A0", VA = "0x139E5A0")]
		public ControllerInfo CreateControllerInfo(BaseControllerBehavior behavior, bool isLeftHand)
		{
			return null;
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x139E680", Offset = "0x139E680", VA = "0x139E680")]
		public bool TrySwapLeftRightTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x139E850", Offset = "0x139E850", VA = "0x139E850")]
		public DoF GetControllerDof()
		{
			return default(DoF);
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x139E8B0", Offset = "0x139E8B0", VA = "0x139E8B0")]
		private void OnUnityXRDeviceConnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x139D6E8", Offset = "0x139D6E8", VA = "0x139D6E8")]
		private void SetUnityXRControllerStyle(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x139EAB8", Offset = "0x139EAB8", VA = "0x139EAB8")]
		private void UnityXRFinishControllerInit(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x139EB88", Offset = "0x139EB88", VA = "0x139EB88")]
		private void OnUnityXRDeviceDisconnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x139EC84", Offset = "0x139EC84", VA = "0x139EC84")]
		public bool IsHmdInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x139EDA0", Offset = "0x139EDA0", VA = "0x139EDA0")]
		public int GetHmdTargetFrameRate()
		{
			return default(int);
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0x139EDEC", Offset = "0x139EDEC", VA = "0x139EDEC")]
		public DoF GetHmdDof()
		{
			return default(DoF);
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x139EE44", Offset = "0x139EE44", VA = "0x139EE44")]
		public bool IsAppFocusBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x139EE54", Offset = "0x139EE54", VA = "0x139EE54")]
		public void DisablePoseTracking()
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x139EFD0", Offset = "0x139EFD0", VA = "0x139EFD0")]
		public void RestorePoseTracking()
		{
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x139F45C", Offset = "0x139F45C", VA = "0x139F45C")]
		public void SetFixedFoveation(int level)
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x139F460", Offset = "0x139F460", VA = "0x139F460")]
		public float GetGpuUtilization()
		{
			return default(float);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x139F468", Offset = "0x139F468", VA = "0x139F468")]
		public void SetGpuClockLevel(int level)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x139F46C", Offset = "0x139F46C", VA = "0x139F46C")]
		public VrSdk()
		{
		}
	}
	[Token(Token = "0x200063B")]
	[ExecuteInEditMode]
	[AddComponentMenu("Open Brush/Watermark")]
	public class WatermarkEffect : MonoBehaviour
	{
		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture m_overlayTexture;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_uvDestination;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Size;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader shader;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_Material;

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x139F47C", Offset = "0x139F47C", VA = "0x139F47C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x139F520", Offset = "0x139F520", VA = "0x139F520")]
		private void Reset()
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x139F524", Offset = "0x139F524", VA = "0x139F524")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x139F740", Offset = "0x139F740", VA = "0x139F740")]
		public WatermarkEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063C")]
	public enum StencilType
	{
		[Token(Token = "0x4002681")]
		Plane,
		[Token(Token = "0x4002682")]
		Cube,
		[Token(Token = "0x4002683")]
		Sphere,
		[Token(Token = "0x4002684")]
		Capsule,
		[Token(Token = "0x4002685")]
		Cone,
		[Token(Token = "0x4002686")]
		Cylinder,
		[Token(Token = "0x4002687")]
		InteriorDome,
		[Token(Token = "0x4002688")]
		Pyramid,
		[Token(Token = "0x4002689")]
		Ellipsoid
	}
	[Serializable]
	[Token(Token = "0x200063D")]
	public struct StencilMapKey
	{
		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StencilType m_Type;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public StencilWidget m_StencilPrefab;
	}
	[Token(Token = "0x200063E")]
	public struct StencilContactInfo
	{
		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StencilWidget widget;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normal;
	}
	[Token(Token = "0x200063F")]
	public class GrabWidgetData
	{
		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly GameObject m_WidgetObject;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly GrabWidget m_WidgetScript;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_NearController;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_ControllerScore;

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x139F7A4", Offset = "0x139F7A4", VA = "0x139F7A4")]
		public GrabWidgetData(GrabWidget widget)
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x139F7E4", Offset = "0x139F7E4", VA = "0x139F7E4", Slot = "4")]
		public virtual GrabWidgetData Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x2000640")]
	public class TypedWidgetData<T> : GrabWidgetData where T : GrabWidget
	{
		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T m_typedWidget;

		[Token(Token = "0x17000737")]
		public T WidgetScript
		{
			[Token(Token = "0x6002923")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002924")]
		public TypedWidgetData(T widget)
		{
		}

		[Token(Token = "0x6002925")]
		public override GrabWidgetData Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x2000641")]
	public class WidgetManager : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		[CompilerGenerated]
		private sealed class <GetAllActiveGrabWidgets>d__114 : IEnumerable<GrabWidgetData>, IEnumerable, IEnumerator<GrabWidgetData>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GrabWidgetData <>2__current;

			[Token(Token = "0x40026F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WidgetManager <>4__this;

			[Token(Token = "0x40026F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000763")]
			private GrabWidgetData System.Collections.Generic.IEnumerator<TiltBrush.GrabWidgetData>.Current
			{
				[Token(Token = "0x60029C3")]
				[Address(RVA = "0x13A8718", Offset = "0x13A8718", VA = "0x13A8718", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000764")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C5")]
				[Address(RVA = "0x13A8760", Offset = "0x13A8760", VA = "0x13A8760", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x13A05D0", Offset = "0x13A05D0", VA = "0x13A05D0")]
			[DebuggerHidden]
			public <GetAllActiveGrabWidgets>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x13A82E4", Offset = "0x13A82E4", VA = "0x13A82E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x13A82E8", Offset = "0x13A82E8", VA = "0x13A82E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x13A8720", Offset = "0x13A8720", VA = "0x13A8720", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x13A8768", Offset = "0x13A8768", VA = "0x13A8768", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GrabWidgetData> System.Collections.Generic.IEnumerable<TiltBrush.GrabWidgetData>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x13A880C", Offset = "0x13A880C", VA = "0x13A880C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000646")]
		[CompilerGenerated]
		private sealed class <CreateMediaWidgetsFromLoadDataCoroutine>d__189 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40026F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WidgetManager <>4__this;

			[Token(Token = "0x40026F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string[] <assetIds>5__2;

			[Token(Token = "0x17000765")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60029CD")]
				[Address(RVA = "0x13A8CFC", Offset = "0x13A8CFC", VA = "0x13A8CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000766")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CF")]
				[Address(RVA = "0x13A8D44", Offset = "0x13A8D44", VA = "0x13A8D44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x13A68A0", Offset = "0x13A68A0", VA = "0x13A68A0")]
			[DebuggerHidden]
			public <CreateMediaWidgetsFromLoadDataCoroutine>d__189(int <>1__state)
			{
			}

			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x13A8810", Offset = "0x13A8810", VA = "0x13A8810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x13A8814", Offset = "0x13A8814", VA = "0x13A8814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x13A8D04", Offset = "0x13A8D04", VA = "0x13A8D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WidgetManager m_Instance;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModelWidget m_ModelWidgetPrefab;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_WidgetPinPrefab;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ImageWidget m_ImageWidgetPrefab;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VideoWidget m_VideoWidgetPrefab;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CameraPathWidget m_CameraPathWidgetPrefab;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_CameraPathPositionKnotPrefab;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_CameraPathRotationKnotPrefab;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_CameraPathSpeedKnotPrefab;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_CameraPathFovKnotPrefab;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_CameraPathKnotSegmentPrefab;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GrabWidgetHome m_Home;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_HomeHintLinePrefab;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_WidgetSnapAngle;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_GazeMaxAngleFromFacing;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_PanelFocusActivationScore;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_ModelVertCountScalar;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Stencils")]
		[SerializeField]
		private StencilMapKey[] m_StencilMap;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_StencilAttractDist;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_StencilAttachHysteresis;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string m_StencilLayerName;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string m_PinnedStencilLayerName;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_WidgetsDormant;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_InhibitGrabWhileLoading;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject m_HomeHintLine;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MeshFilter m_HomeHintLineMeshFilter;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_HomeHintLineBaseScale;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private StencilContactInfo[] m_StencilContactInfos;

		[Token(Token = "0x40026B0")]
		private const int m_StencilBucketSize = 16;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private StencilWidget m_ActiveStencil;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_StencilsDisabled;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GrabWidgetData> m_GrabWidgets;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<TypedWidgetData<ModelWidget>> m_ModelWidgets;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<TypedWidgetData<StencilWidget>> m_StencilWidgets;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<TypedWidgetData<ImageWidget>> m_ImageWidgets;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<TypedWidgetData<VideoWidget>> m_VideoWidgets;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<TypedWidgetData<CameraPathWidget>> m_CameraPathWidgets;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<GrabWidget> m_CanBePinnedWidgets;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<GrabWidget> m_CanBeUnpinnedWidgets;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private TiltModels75[] m_loadingTiltModels75;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TiltImages75[] m_loadingTiltImages75;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TiltVideo[] m_loadingTiltVideos;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<GrabWidgetData> m_WidgetsNearBrush;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<GrabWidgetData> m_WidgetsNearWand;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_ModelVertCount;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int m_ImageVertCount;

		[NonSerialized]
		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool FollowingPath;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TypedWidgetData<CameraPathWidget> m_CurrentCameraPath;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool m_CameraPathsVisible;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private CameraPathTinter m_CameraPathTinter;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<ushort, GrabWidget> sm_BatchMap;

		[Token(Token = "0x17000738")]
		public StencilWidget ActiveStencil
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0x139F998", Offset = "0x139F998", VA = "0x139F998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000739")]
		public int StencilLayerIndex
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x139F9A8", Offset = "0x139F9A8", VA = "0x139F9A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700073A")]
		public int PinnedStencilLayerIndex
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0x139F9B4", Offset = "0x139F9B4", VA = "0x139F9B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700073B")]
		public LayerMask PinnedStencilLayerMask
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x139F9C0", Offset = "0x139F9C0", VA = "0x139F9C0")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x1700073C")]
		public LayerMask StencilLayerMask
		{
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x139FA68", Offset = "0x139FA68", VA = "0x139FA68")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x1700073D")]
		public float StencilAttractDist
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x139FB10", Offset = "0x139FB10", VA = "0x139FB10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x139FB18", Offset = "0x139FB18", VA = "0x139FB18")]
			set
			{
			}
		}

		[Token(Token = "0x1700073E")]
		public List<GrabWidgetData> WidgetsNearBrush
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x139FB3C", Offset = "0x139FB3C", VA = "0x139FB3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073F")]
		public List<GrabWidgetData> WidgetsNearWand
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x139FB44", Offset = "0x139FB44", VA = "0x139FB44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000740")]
		public bool AnyWidgetsToPin
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x139FB4C", Offset = "0x139FB4C", VA = "0x139FB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000741")]
		public bool AnyWidgetsToUnpin
		{
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x139FB9C", Offset = "0x139FB9C", VA = "0x139FB9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000742")]
		public float ModelVertCountScalar
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x139FBEC", Offset = "0x139FBEC", VA = "0x139FBEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000743")]
		public int ImageVertCount
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x139FBF4", Offset = "0x139FBF4", VA = "0x139FBF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000744")]
		public int WidgetsVertCount
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x139FC1C", Offset = "0x139FC1C", VA = "0x139FC1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000745")]
		public bool AnyVideoWidgetActive
		{
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x139FC2C", Offset = "0x139FC2C", VA = "0x139FC2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000746")]
		public bool AnyCameraPathWidgetsActive
		{
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x139FD28", Offset = "0x139FD28", VA = "0x139FD28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000747")]
		public CameraPathTinter PathTinter
		{
			[Token(Token = "0x600293B")]
			[Address(RVA = "0x139FE24", Offset = "0x139FE24", VA = "0x139FE24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000748")]
		public ModelWidget ModelWidgetPrefab
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x13A03F8", Offset = "0x13A03F8", VA = "0x13A03F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000749")]
		public ImageWidget ImageWidgetPrefab
		{
			[Token(Token = "0x6002941")]
			[Address(RVA = "0x13A0400", Offset = "0x13A0400", VA = "0x13A0400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074A")]
		public VideoWidget VideoWidgetPrefab
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0x13A0408", Offset = "0x13A0408", VA = "0x13A0408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074B")]
		public CameraPathWidget CameraPathWidgetPrefab
		{
			[Token(Token = "0x6002943")]
			[Address(RVA = "0x13A0410", Offset = "0x13A0410", VA = "0x13A0410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074C")]
		public GameObject CameraPathPositionKnotPrefab
		{
			[Token(Token = "0x6002944")]
			[Address(RVA = "0x13A0418", Offset = "0x13A0418", VA = "0x13A0418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074D")]
		public GameObject CameraPathRotationKnotPrefab
		{
			[Token(Token = "0x6002945")]
			[Address(RVA = "0x13A0420", Offset = "0x13A0420", VA = "0x13A0420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074E")]
		public GameObject CameraPathSpeedKnotPrefab
		{
			[Token(Token = "0x6002946")]
			[Address(RVA = "0x13A0428", Offset = "0x13A0428", VA = "0x13A0428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074F")]
		public GameObject CameraPathFovKnotPrefab
		{
			[Token(Token = "0x6002947")]
			[Address(RVA = "0x13A0430", Offset = "0x13A0430", VA = "0x13A0430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000750")]
		public GameObject CameraPathKnotSegmentPrefab
		{
			[Token(Token = "0x6002948")]
			[Address(RVA = "0x13A0438", Offset = "0x13A0438", VA = "0x13A0438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000751")]
		public IEnumerable<GrabWidgetData> ActiveGrabWidgets
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0x13A0440", Offset = "0x13A0440", VA = "0x13A0440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000752")]
		public IEnumerable<GrabWidgetData> MediaWidgets
		{
			[Token(Token = "0x600294B")]
			[Address(RVA = "0x13A0604", Offset = "0x13A0604", VA = "0x13A0604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000753")]
		public IEnumerable<TypedWidgetData<CameraPathWidget>> CameraPathWidgets
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x13A065C", Offset = "0x13A065C", VA = "0x13A065C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000754")]
		public bool CameraPathsVisible
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0x13A182C", Offset = "0x13A182C", VA = "0x13A182C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002959")]
			[Address(RVA = "0x13A1834", Offset = "0x13A1834", VA = "0x13A1834")]
			set
			{
			}
		}

		[Token(Token = "0x17000755")]
		public bool StencilsDisabled
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0x13A2918", Offset = "0x13A2918", VA = "0x13A2918")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600295E")]
			[Address(RVA = "0x13A2920", Offset = "0x13A2920", VA = "0x13A2920")]
			set
			{
			}
		}

		[Token(Token = "0x17000756")]
		public bool WidgetsDormant
		{
			[Token(Token = "0x6002969")]
			[Address(RVA = "0x13A3008", Offset = "0x13A3008", VA = "0x13A3008")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600296A")]
			[Address(RVA = "0x139878C", Offset = "0x139878C", VA = "0x139878C")]
			set
			{
			}
		}

		[Token(Token = "0x17000757")]
		public float WidgetSnapAngle
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x13A3010", Offset = "0x13A3010", VA = "0x13A3010")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000758")]
		public IEnumerable<ModelWidget> ModelWidgets
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0x13A3CF0", Offset = "0x13A3CF0", VA = "0x13A3CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000759")]
		public IEnumerable<VideoWidget> VideoWidgets
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0x13A250C", Offset = "0x13A250C", VA = "0x13A250C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075A")]
		public IEnumerable<ModelWidget> NonExportableModelWidgets
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0x13A26C4", Offset = "0x13A26C4", VA = "0x13A26C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075B")]
		public IEnumerable<ModelWidget> ExportableModelWidgets
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0x13A1DA8", Offset = "0x13A1DA8", VA = "0x13A1DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075C")]
		public IEnumerable<StencilWidget> StencilWidgets
		{
			[Token(Token = "0x600297B")]
			[Address(RVA = "0x13A3EA8", Offset = "0x13A3EA8", VA = "0x13A3EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075D")]
		public IEnumerable<ImageWidget> ImageWidgets
		{
			[Token(Token = "0x600297D")]
			[Address(RVA = "0x13A1FFC", Offset = "0x13A1FFC", VA = "0x13A1FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075E")]
		public bool CreatingMediaWidgets
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x13A68C8", Offset = "0x13A68C8", VA = "0x13A68C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700075F")]
		public List<TypedWidgetData<ImageWidget>> ActiveImageWidgets
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x13A73AC", Offset = "0x13A73AC", VA = "0x13A73AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000760")]
		public List<TypedWidgetData<ModelWidget>> ActiveModelWidgets
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x13A74C4", Offset = "0x13A74C4", VA = "0x13A74C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000761")]
		public List<TypedWidgetData<VideoWidget>> ActiveVideoWidgets
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x13A75DC", Offset = "0x13A75DC", VA = "0x13A75DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000762")]
		public List<TypedWidgetData<CameraPathWidget>> ActiveCameraPathWidgets
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x13A76F4", Offset = "0x13A76F4", VA = "0x13A76F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action RefreshPinAndUnpinAction
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x139F858", Offset = "0x139F858", VA = "0x139F858")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x139F8F8", Offset = "0x139F8F8", VA = "0x139F8F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x139F9A0", Offset = "0x139F9A0", VA = "0x139F9A0")]
		public void ResetActiveStencil()
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x139FBFC", Offset = "0x139FBFC", VA = "0x139FBFC")]
		public void AdjustModelVertCount(int amount)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x139FC0C", Offset = "0x139FC0C", VA = "0x139FC0C")]
		public void AdjustImageVertCount(int amount)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x139FE2C", Offset = "0x139FE2C", VA = "0x139FE2C")]
		public GrabWidget GetBatch(ushort batchId)
		{
			return null;
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x139FF00", Offset = "0x139FF00", VA = "0x139FF00")]
		public void AddWidgetToBatchMap(GrabWidget widget, ushort batchId)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x139FF90", Offset = "0x139FF90", VA = "0x139FF90")]
		private void Awake()
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x139FFEC", Offset = "0x139FFEC", VA = "0x139FFEC")]
		public void Init()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x13A0558", Offset = "0x13A0558", VA = "0x13A0558")]
		[IteratorStateMachine(typeof(<GetAllActiveGrabWidgets>d__114))]
		private IEnumerable<GrabWidgetData> GetAllActiveGrabWidgets()
		{
			return null;
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x13A0758", Offset = "0x13A0758", VA = "0x13A0758")]
		public TypedWidgetData<CameraPathWidget> GetCurrentCameraPath()
		{
			return null;
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x13A0760", Offset = "0x13A0760", VA = "0x13A0760")]
		public void SetCurrentCameraPath(CameraPathWidget path)
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x13A09C0", Offset = "0x13A09C0", VA = "0x13A09C0")]
		public void ValidateCurrentCameraPath()
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x13A08C0", Offset = "0x13A08C0", VA = "0x13A08C0")]
		private void SetCurrentCameraPath_Internal(TypedWidgetData<CameraPathWidget> cp)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x13A0B1C", Offset = "0x13A0B1C", VA = "0x13A0B1C")]
		public bool CanRecordCurrentCameraPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x13A0C18", Offset = "0x13A0C18", VA = "0x13A0C18")]
		public CameraPathWidget GetNthActiveCameraPath(int nth)
		{
			return null;
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x13A1000", Offset = "0x13A1000", VA = "0x13A1000")]
		public bool IsCameraPathAtIndexCurrent(int pathIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x13A10E0", Offset = "0x13A10E0", VA = "0x13A10E0")]
		public int? GetIndexOfCameraPath(CameraPathWidget path)
		{
			return null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x13A1238", Offset = "0x13A1238", VA = "0x13A1238")]
		public CameraPathWidget CreatePathWidget()
		{
			return null;
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x13A1374", Offset = "0x13A1374", VA = "0x13A1374")]
		public bool AnyActivePathHasAKnot()
		{
			return default(bool);
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x13A16BC", Offset = "0x13A16BC", VA = "0x13A16BC")]
		public void DeleteCameraPath(GrabWidget cameraPathWidgetScript)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x13A19D4", Offset = "0x13A19D4", VA = "0x13A19D4")]
		public bool HasSelectableWidgets()
		{
			return default(bool);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x13A1A9C", Offset = "0x13A1A9C", VA = "0x13A1A9C")]
		public bool HasExportableContent(Cloud cloud)
		{
			return default(bool);
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x13A21B4", Offset = "0x13A21B4", VA = "0x13A21B4")]
		public bool HasNonExportableContent(Cloud cloud)
		{
			return default(bool);
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x13A2B88", Offset = "0x13A2B88", VA = "0x13A2B88")]
		private static string CanonicalizeForCompare(string path)
		{
			return null;
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x13A2C00", Offset = "0x13A2C00", VA = "0x13A2C00")]
		public static string GetPathRootedAtMedia(string path)
		{
			return null;
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x13A2D5C", Offset = "0x13A2D5C", VA = "0x13A2D5C")]
		public static string GetModelSubpath(string fullPath)
		{
			return null;
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x13A2E08", Offset = "0x13A2E08", VA = "0x13A2E08")]
		public void SetDataFromTilt(TiltModels75[] value)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x13A2E10", Offset = "0x13A2E10", VA = "0x13A2E10")]
		public void SetDataFromTilt(TiltImages75[] value)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x13A2E18", Offset = "0x13A2E18", VA = "0x13A2E18")]
		public void SetDataFromTilt(CameraPathMetadata[] cameraPaths)
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x13A2E78", Offset = "0x13A2E78", VA = "0x13A2E78")]
		public void SetDataFromTilt(TiltVideo[] value)
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x13A2E80", Offset = "0x13A2E80", VA = "0x13A2E80")]
		public WidgetPinScript GetWidgetPin()
		{
			return null;
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x13A2F48", Offset = "0x13A2F48", VA = "0x13A2F48")]
		public void DestroyWidgetPin(WidgetPinScript pin)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x13A2FEC", Offset = "0x13A2FEC", VA = "0x13A2FEC")]
		public void SetHomePosition(Vector3 position)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x13A3018", Offset = "0x13A3018", VA = "0x13A3018")]
		public bool IsOriginHomeWithinSnapRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x13A3034", Offset = "0x13A3034", VA = "0x13A3034")]
		public Transform GetHomeXf()
		{
			return null;
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x13A3050", Offset = "0x13A3050", VA = "0x13A3050")]
		public void SetHomeOwner(Transform owner)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x13A3080", Offset = "0x13A3080", VA = "0x13A3080")]
		public void ClearHomeOwner()
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x13A30D8", Offset = "0x13A30D8", VA = "0x13A30D8")]
		public void EnableHome(bool bEnable)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x13A3138", Offset = "0x13A3138", VA = "0x13A3138")]
		public void LoadingState(bool bEnter)
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x13A3144", Offset = "0x13A3144", VA = "0x13A3144")]
		public void UpdateHomeHintLine(Vector3 vModelSnapPos)
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x13A3428", Offset = "0x13A3428", VA = "0x13A3428")]
		public void MagnetizeToStencils(ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x13A3B84", Offset = "0x13A3B84", VA = "0x13A3B84")]
		private bool FindClosestPointOnCollider(Ray rRay, Collider collider, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x13A3B58", Offset = "0x13A3B58", VA = "0x13A3B58")]
		private void FindClosestPointOnWidgetSurface(Vector3 pos, ref StencilContactInfo info)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x13A3BE4", Offset = "0x13A3BE4", VA = "0x13A3BE4")]
		public bool ShouldUpdateCollisions()
		{
			return default(bool);
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x13A4060", Offset = "0x13A4060", VA = "0x13A4060")]
		public StencilWidget GetStencilPrefab(StencilType type)
		{
			return null;
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x13A4138", Offset = "0x13A4138", VA = "0x13A4138")]
		public List<GrabWidget> GetAllUnselectedActiveWidgets()
		{
			return null;
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x13A2A30", Offset = "0x13A2A30", VA = "0x13A2A30")]
		public void RefreshPinAndUnpinLists()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x13A4298", Offset = "0x13A4298", VA = "0x13A4298")]
		public void RegisterHighlightsForPinnableWidgets(bool pinnable)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x13A43E8", Offset = "0x13A43E8", VA = "0x13A43E8")]
		public void RegisterGrabWidget(GameObject rWidget)
		{
		}

		[Token(Token = "0x6002982")]
		private static bool RemoveFrom<T>(List<T> list, GameObject rWidget) where T : GrabWidgetData
		{
			return default(bool);
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x13A4964", Offset = "0x13A4964", VA = "0x13A4964")]
		public void UnregisterGrabWidget(GameObject rWidget)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x13A4CD8", Offset = "0x13A4CD8", VA = "0x13A4CD8")]
		public ImageWidget GetNearestImage(Vector3 pos, float maxDepth, ref Vector3 sampleLoc)
		{
			return null;
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x13A51D4", Offset = "0x13A51D4", VA = "0x13A51D4")]
		public void RefreshNearestWidgetLists(Ray currentGazeRay, int currentGazeObject)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x13A5900", Offset = "0x13A5900", VA = "0x13A5900")]
		private void UpdateNearestGrabsFor(InputManager.ControllerName name, Ray currentGazeRay, int currentGazeObject)
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x13A63A8", Offset = "0x13A63A8", VA = "0x13A63A8")]
		public float DistanceToNearestWidget(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x13A6714", Offset = "0x13A6714", VA = "0x13A6714")]
		public void DestroyAllWidgets()
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x13A6838", Offset = "0x13A6838", VA = "0x13A6838")]
		[IteratorStateMachine(typeof(<CreateMediaWidgetsFromLoadDataCoroutine>d__189))]
		public IEnumerator<Null> CreateMediaWidgetsFromLoadDataCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x13A68F0", Offset = "0x13A68F0", VA = "0x13A68F0")]
		public bool AreMediaWidgetsStillLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x13A6B30", Offset = "0x13A6B30", VA = "0x13A6B30")]
		private static float ScoreByAngleAndDistance(GrabWidgetData data)
		{
			return default(float);
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x13A6CE4", Offset = "0x13A6CE4", VA = "0x13A6CE4")]
		public void TossNearestWidget()
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x13A780C", Offset = "0x13A780C", VA = "0x13A780C")]
		public WidgetManager()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public class WidgetPinScript : MonoBehaviour
	{
		[Token(Token = "0x2000648")]
		public enum PinState
		{
			[Token(Token = "0x400271C")]
			None,
			[Token(Token = "0x400271D")]
			Entering,
			[Token(Token = "0x400271E")]
			Wobbling,
			[Token(Token = "0x400271F")]
			Pinned,
			[Token(Token = "0x4002720")]
			Removing
		}

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_MeshXf;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_SpawnOffset;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector2 m_ScaleRange_RS;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_BaseEnterSpeed;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_PenetrationScalar;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_WobbleDuration;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_WobbleAngle;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_WobbleSpeed;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DisplayDuration;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_UnpinPopForce;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_UnpinRotationSpeed;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_UnpinFallDuration;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_UnpinFallDrag;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_UnpinFallGravity;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PinState m_PinState;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_Parent;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GrabWidget m_ParentWidgetScript;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_EntranceTarget;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_BaseRotation;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_BaseMeshScale;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion m_BaseMeshRotation;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3? m_TransformedSpawnOffset;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_WobbleCountdown;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_DisplayCountdown;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_WobbleCurrent;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 m_WobbleTarget;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_UnpinVelocity;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 m_UnpinRotationAxis;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_UnpinFallCountdown;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_SpeedScalar;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_WorkingPenetrationScalar;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_DestroyOnStateComplete;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool m_SuppressAudio;

		[Token(Token = "0x17000767")]
		public bool SuppressAudio
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x13A8D4C", Offset = "0x13A8D4C", VA = "0x13A8D4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x13A8D54", Offset = "0x13A8D54", VA = "0x13A8D54")]
			set
			{
			}
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x13A8D60", Offset = "0x13A8D60", VA = "0x13A8D60")]
		public void SetPenetrationScalar(float scalar)
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x13A8D68", Offset = "0x13A8D68", VA = "0x13A8D68")]
		public void DestroyOnStateComplete()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x13A8D74", Offset = "0x13A8D74", VA = "0x13A8D74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x13A8E68", Offset = "0x13A8E68", VA = "0x13A8E68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x13A8F0C", Offset = "0x13A8F0C", VA = "0x13A8F0C")]
		private void OnCanvasPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x13A8F74", Offset = "0x13A8F74", VA = "0x13A8F74")]
		public void Init(Transform parent, GrabWidget parentWidget)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x13A90F8", Offset = "0x13A90F8", VA = "0x13A90F8")]
		public void ShowWidgetAsPinned()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x13A948C", Offset = "0x13A948C", VA = "0x13A948C")]
		public void WobblePin(InputManager.ControllerName heldController)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x13A953C", Offset = "0x13A953C", VA = "0x13A953C")]
		public void PinWidget()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x13A9558", Offset = "0x13A9558", VA = "0x13A9558")]
		public void UnpinWidget()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x13A957C", Offset = "0x13A957C", VA = "0x13A957C")]
		public bool IsAnimating()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x13A95B8", Offset = "0x13A95B8", VA = "0x13A95B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x13A941C", Offset = "0x13A941C", VA = "0x13A941C")]
		private void SwitchPinState(PinState desired)
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x13A8F8C", Offset = "0x13A8F8C", VA = "0x13A8F8C")]
		private void InitTransformedSpawnOffset()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x13A9D6C", Offset = "0x13A9D6C", VA = "0x13A9D6C")]
		private void PrimeForEntering()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x13A911C", Offset = "0x13A911C", VA = "0x13A911C")]
		private void RefreshPositionAndScale()
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x13A9EA4", Offset = "0x13A9EA4", VA = "0x13A9EA4")]
		private void Wobble()
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x13AA048", Offset = "0x13AA048", VA = "0x13AA048")]
		private void Unpin()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x13AA120", Offset = "0x13AA120", VA = "0x13AA120")]
		public WidgetPinScript()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public class CameraPathPreviewWidget : GrabWidget
	{
		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private Color m_RecordColor;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CameraPathWidget m_CurrentPathWidget;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3? m_LastRecordedInputXf;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private PathT m_PathT;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private PathT? m_OverridePathT;

		[Token(Token = "0x17000768")]
		public PathT? OverridePathT
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x13AA144", Offset = "0x13AA144", VA = "0x13AA144")]
			set
			{
			}
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x13AA150", Offset = "0x13AA150", VA = "0x13AA150", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x13AA3DC", Offset = "0x13AA3DC", VA = "0x13AA3DC", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x13AA2A8", Offset = "0x13AA2A8", VA = "0x13AA2A8")]
		private void CacheCurrentPathWidget()
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x13AA32C", Offset = "0x13AA32C", VA = "0x13AA32C")]
		private void ValidatePathT()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x13AA7D8", Offset = "0x13AA7D8", VA = "0x13AA7D8", Slot = "29")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x13AAA38", Offset = "0x13AAA38", VA = "0x13AAA38", Slot = "51")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x13AAA54", Offset = "0x13AAA54", VA = "0x13AAA54", Slot = "34")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x13AAA58", Offset = "0x13AAA58", VA = "0x13AAA58", Slot = "39")]
		public override float GetActivationScore(Vector3 controllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x13AAB90", Offset = "0x13AAB90", VA = "0x13AAB90")]
		public void ResetToPathStart()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x13AAC7C", Offset = "0x13AAC7C", VA = "0x13AAC7C")]
		public void SetPathT(PathT pathT)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x13AAD38", Offset = "0x13AAD38", VA = "0x13AAD38")]
		public void SetCompletionAlongPath(float completion)
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x13AADF8", Offset = "0x13AADF8", VA = "0x13AADF8")]
		public float? GetCompletionAlongPath()
		{
			return null;
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x13AAEBC", Offset = "0x13AAEBC", VA = "0x13AAEBC")]
		public void TintForRecording(bool record)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x13AAFD0", Offset = "0x13AAFD0", VA = "0x13AAFD0")]
		public CameraPathPreviewWidget()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class CameraPathWidget : GrabWidget
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float m_KnotSegmentRadius;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private float m_EndRadius;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private float m_DefaultSpeed;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float m_DefaultFov;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private float m_KnotSnapDistanceToEnd;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CameraPath m_Path;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private KnotDescriptor[] m_LastValidCollisionResults;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private KnotDescriptor[] m_LastCollisionResults;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private KnotDescriptor m_ActiveKnot;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool m_EatInteractingInput;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3? m_KnotEditingLastInputXf;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float m_GrabControlInitialYDiff;

		[Token(Token = "0x17000769")]
		public CameraPath Path
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x16F9538", Offset = "0x16F9538", VA = "0x16F9538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700076A")]
		public override Transform GrabTransform_GS
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x16F9540", Offset = "0x16F9540", VA = "0x16F9540", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x16F95B8", Offset = "0x16F95B8", VA = "0x16F95B8", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x16F9AC4", Offset = "0x16F9AC4", VA = "0x16F9AC4", Slot = "48")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x16F9BF4", Offset = "0x16F9BF4", VA = "0x16F9BF4", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x16F9C18", Offset = "0x16F9C18", VA = "0x16F9C18", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x16F9D40", Offset = "0x16F9D40", VA = "0x16F9D40", Slot = "22")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x16F9E14", Offset = "0x16F9E14", VA = "0x16F9E14")]
		private void OnPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x16F9E64", Offset = "0x16F9E64", VA = "0x16F9E64", Slot = "62")]
		public override bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x16F9E6C", Offset = "0x16F9E6C", VA = "0x16F9E6C")]
		public void SetAsActivePath(bool active)
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x16F9F14", Offset = "0x16F9F14", VA = "0x16F9F14", Slot = "23")]
		public override void RecordAndSetPosRot(TrTransform inputXf)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x16FAB2C", Offset = "0x16FAB2C", VA = "0x16FAB2C", Slot = "27")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x16FACFC", Offset = "0x16FACFC", VA = "0x16FACFC", Slot = "39")]
		public override float GetActivationScore(Vector3 point, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x16FB33C", Offset = "0x16FB33C", VA = "0x16FB33C")]
		public void TintSegments(Vector3 pos)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x16FB470", Offset = "0x16FB470", VA = "0x16FB470", Slot = "33")]
		public override void Activate(bool active)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x16FB77C", Offset = "0x16FB77C", VA = "0x16FB77C", Slot = "34")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x16FB8A0", Offset = "0x16FB8A0", VA = "0x16FB8A0", Slot = "35")]
		protected override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x16FB980", Offset = "0x16FB980", VA = "0x16FB980")]
		public void HighlightEntirePath()
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x16FBC7C", Offset = "0x16FBC7C", VA = "0x16FBC7C", Slot = "38")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x16FBD44", Offset = "0x16FBD44", VA = "0x16FBD44", Slot = "50")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x16FC02C", Offset = "0x16FC02C", VA = "0x16FC02C", Slot = "51")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x16FA9D0", Offset = "0x16FA9D0", VA = "0x16FA9D0")]
		private void CheckForPreviewWidgetOverride(PathT pathT)
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x16FC86C", Offset = "0x16FC86C", VA = "0x16FC86C")]
		public void ExtendPath(Vector3 pos, CameraPathTool.ExtendPathType extendType)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x16FCA04", Offset = "0x16FCA04", VA = "0x16FCA04")]
		public void AddPathConstrainedKnot(CameraPathKnot.Type type, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x16FCBE0", Offset = "0x16FCBE0", VA = "0x16FCBE0")]
		public bool RemoveKnotAtPosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x16FD088", Offset = "0x16FD088", VA = "0x16FD088")]
		public bool ShouldSerialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x16FD0E0", Offset = "0x16FD0E0", VA = "0x16FD0E0")]
		public CameraPathMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x16FD0FC", Offset = "0x16FD0FC", VA = "0x16FD0FC")]
		public static void CreateFromSaveData(CameraPathMetadata cameraPath)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x16FDED8", Offset = "0x16FDED8", VA = "0x16FDED8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x16FDEEC", Offset = "0x16FDEEC", VA = "0x16FDEEC")]
		public CameraPathWidget()
		{
		}
	}
	[Token(Token = "0x200064B")]
	public class CapsuleStencil : StencilWidget
	{
		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Transform m_CapA;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Transform m_CapB;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Transform m_Body;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private Transform[] m_CapXfs;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private Transform[] m_BodyXfs;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshFilter[] m_CapMeshFilters;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private MeshFilter[] m_BodyMeshFilters;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private Vector3 m_CapDimensions;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Vector3 m_BodyDimensions;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x400273C")]
		private const float CAPSULE_HEIGHT = 2f;

		[Token(Token = "0x1700076B")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x16FE034", Offset = "0x16FE034", VA = "0x16FE034", Slot = "65")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x16FE0B8", Offset = "0x16FE0B8", VA = "0x16FE0B8", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x1700076C")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x16FE4FC", Offset = "0x16FE4FC", VA = "0x16FE4FC", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x16FE55C", Offset = "0x16FE55C", VA = "0x16FE55C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x1700076D")]
		private float BodyHeight
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x16FE5B0", Offset = "0x16FE5B0", VA = "0x16FE5B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x16FE5F8", Offset = "0x16FE5F8", VA = "0x16FE5F8", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x16FE860", Offset = "0x16FE860", VA = "0x16FE860", Slot = "67")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x16FE8F0", Offset = "0x16FE8F0", VA = "0x16FE8F0", Slot = "68")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x16FEAA8", Offset = "0x16FEAA8", VA = "0x16FEAA8", Slot = "13")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x16FE190", Offset = "0x16FE190", VA = "0x16FE190")]
		private void NormalizeHeight()
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x16FEE08", Offset = "0x16FEE08", VA = "0x16FEE08", Slot = "61")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x16FF104", Offset = "0x16FF104", VA = "0x16FF104", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x16FF32C", Offset = "0x16FF32C", VA = "0x16FF32C", Slot = "69")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x16FF6D4", Offset = "0x16FF6D4", VA = "0x16FF6D4", Slot = "14")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x16FFD94", Offset = "0x16FFD94", VA = "0x16FFD94")]
		public CapsuleStencil()
		{
		}
	}
	[Token(Token = "0x200064D")]
	public class CubeStencil : StencilWidget
	{
		[Token(Token = "0x200064E")]
		private enum CubeFace
		{
			[Token(Token = "0x4002750")]
			Up,
			[Token(Token = "0x4002751")]
			Down,
			[Token(Token = "0x4002752")]
			Left,
			[Token(Token = "0x4002753")]
			Right,
			[Token(Token = "0x4002754")]
			Forward,
			[Token(Token = "0x4002755")]
			Back,
			[Token(Token = "0x4002756")]
			None
		}

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Transform[] m_Xxfs;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Transform[] m_Yxfs;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Transform[] m_Zxfs;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private bool m_HardEdges;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		[SerializeField]
		private bool m_StayInsideEdges;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		private float m_PreviewClampPreference;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private float m_StickyFaceHalfWidthBloat;

		[Token(Token = "0x4002747")]
		private const float cornerSnapDist = 0.15f;

		[Token(Token = "0x4002748")]
		private const float maxUnitBrushSize = 0.725f;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 m_AspectRatio;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Transform[][] m_FaceXfs;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshFilter[][] m_FaceMeshFilters;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private CubeFace m_StickyFace;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private CubeFace m_LastQueriedFace;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int m_ClampedFace;

		[Token(Token = "0x1700076E")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x16FFEA8", Offset = "0x16FFEA8", VA = "0x16FFEA8", Slot = "65")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x16FFEC8", Offset = "0x16FFEC8", VA = "0x16FFEC8", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x1700076F")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x16FFEEC", Offset = "0x16FFEEC", VA = "0x16FFEEC", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x16FFEFC", Offset = "0x16FFEFC", VA = "0x16FFEFC", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000770")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0x16FFF18", Offset = "0x16FFF18", VA = "0x16FFF18", Slot = "40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x16FFF94", Offset = "0x16FFF94", VA = "0x16FFF94", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x17002F8", Offset = "0x17002F8", VA = "0x17002F8", Slot = "67")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x1700390", Offset = "0x1700390", VA = "0x1700390", Slot = "13")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x1700648", Offset = "0x1700648", VA = "0x1700648")]
		private CubeFace NormalToFaceMap(Vector3 norm)
		{
			return default(CubeFace);
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x170069C", Offset = "0x170069C", VA = "0x170069C", Slot = "61")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x1700874", Offset = "0x1700874", VA = "0x1700874", Slot = "68")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x17009D8", Offset = "0x17009D8", VA = "0x17009D8", Slot = "70")]
		public override void SetInUse(bool bInUse)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x1700A14", Offset = "0x1700A14", VA = "0x1700A14", Slot = "71")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x1700AAC", Offset = "0x1700AAC", VA = "0x1700AAC", Slot = "72")]
		protected override void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x1700AFC", Offset = "0x1700AFC", VA = "0x1700AFC", Slot = "69")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x170194C", Offset = "0x170194C", VA = "0x170194C", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x1700DF0", Offset = "0x1700DF0", VA = "0x1700DF0")]
		private static void FindClosestPointWithStrokeInFace(Vector3 pos, Vector3 halfWidth, CubeFace face, bool preview, float size, Vector3 aspectRatio, out Vector3 surfacePos, out Vector3 surfaceNorm, ref int clampedSide, float previewClampPreference)
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x17012AC", Offset = "0x17012AC", VA = "0x17012AC")]
		private static void FindClosestPointOnBoxFace(Vector3 pos, Vector3 halfWidth, CubeFace face, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x17014B8", Offset = "0x17014B8", VA = "0x17014B8")]
		private void FindClosestPointOnBoxSurfaceHardEdges(Vector3 pos, Vector3 halfWidth, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x17016C0", Offset = "0x17016C0", VA = "0x17016C0")]
		public static void FindClosestPointOnBoxSurface(Vector3 pos, Vector3 halfWidth, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x1701BE8", Offset = "0x1701BE8", VA = "0x1701BE8", Slot = "25")]
		protected override void InitiateSnapping()
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x1701E54", Offset = "0x1701E54", VA = "0x1701E54", Slot = "26")]
		protected override void FinishSnapping()
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x1701FD0", Offset = "0x1701FD0", VA = "0x1701FD0", Slot = "27")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x17025C8", Offset = "0x17025C8", VA = "0x17025C8")]
		public CubeStencil()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000650")]
	public class FrustumBeam
	{
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Beam;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_BeamMesh;

		[NonSerialized]
		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_BaseScale;

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x170269C", Offset = "0x170269C", VA = "0x170269C")]
		public FrustumBeam()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class DropCamWidget : GrabWidget
	{
		[Token(Token = "0x2000652")]
		public enum Mode
		{
			[Token(Token = "0x4002772")]
			SlowFollow,
			[Token(Token = "0x4002773")]
			Stationary,
			[Token(Token = "0x4002774")]
			Wobble,
			[Token(Token = "0x4002775")]
			Circular
		}

		[Token(Token = "0x400275C")]
		public const Mode kDefaultMode = Mode.Stationary;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private TextMeshPro m_TitleText;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private GameObject m_HintText;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private FrustumBeam[] m_FrustumBeams;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Transform m_GhostMesh;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[Header("Wobble Mode")]
		[SerializeField]
		private float m_WobbleSpeed;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		private float m_WobbleScale;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[Header("Circle Mode")]
		[SerializeField]
		private float m_CircleSpeed;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float m_CircleRadius;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private GameObject m_GuideCircleObject;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[Header("Slow Follow Mode")]
		[SerializeField]
		private float m_SlowFollowSmoothing;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float m_GuideBeamShowRatio;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Renderer[] m_Renderers;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Mode m_CurrentMode;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 m_vWobbleBase_RS;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 m_vCircleBase_RS;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float m_AnimatedPathTime;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Quaternion m_CircleOrientation;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float m_CircleRadians;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Vector3 m_SlowFollowMoveVel;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector3 m_SlowFollowRotVel;

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x17026A4", Offset = "0x17026A4", VA = "0x17026A4", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x1702FB8", Offset = "0x1702FB8", VA = "0x1702FB8", Slot = "29")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x170302C", Offset = "0x170302C", VA = "0x170302C", Slot = "27")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x1703260", Offset = "0x1703260", VA = "0x1703260", Slot = "20")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x1703458", Offset = "0x1703458", VA = "0x1703458")]
		public void ShowInstantly(bool bShow)
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0x17034A4", Offset = "0x17034A4", VA = "0x17034A4", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x1703BAC", Offset = "0x1703BAC", VA = "0x1703BAC", Slot = "45")]
		protected override void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x1703C68", Offset = "0x1703C68", VA = "0x1703C68")]
		public static string GetModeName(Mode mode)
		{
			return null;
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x1702858", Offset = "0x1702858", VA = "0x1702858")]
		private void ResetCam()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x1703CF4", Offset = "0x1703CF4", VA = "0x1703CF4", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x1704630", Offset = "0x1704630", VA = "0x1704630", Slot = "33")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x1704714", Offset = "0x1704714", VA = "0x1704714")]
		public void SetMode(Mode newMode)
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x1704730", Offset = "0x1704730", VA = "0x1704730")]
		public Mode GetMode()
		{
			return default(Mode);
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x17033D8", Offset = "0x17033D8", VA = "0x17033D8")]
		private void RefreshRenderers()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x1704738", Offset = "0x1704738", VA = "0x1704738")]
		public bool ShouldHmdBeVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x1704758", Offset = "0x1704758", VA = "0x1704758")]
		public DropCamWidget()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class EllipsoidStencil : StencilWidget
	{
		[Token(Token = "0x2000654")]
		private struct AxisDirection
		{
			[Token(Token = "0x400277B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Axis axis;

			[Token(Token = "0x400277C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 direction;
		}

		[Token(Token = "0x4002776")]
		private const float kInitialWidth = 0.7073f;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AxisDirection[] sm_AxisDirections;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector3 m_AspectRatio;

		[Token(Token = "0x4002779")]
		private const float kRadiusInObjectSpace = 0.5f;

		[Token(Token = "0x400277A")]
		private const float kMinAspectRatio = 0.2f;

		[Token(Token = "0x17000771")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x17047AC", Offset = "0x17047AC", VA = "0x17047AC", Slot = "65")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x17047CC", Offset = "0x17047CC", VA = "0x17047CC", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x17000772")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x17047F0", Offset = "0x17047F0", VA = "0x17047F0", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x1704800", Offset = "0x1704800", VA = "0x1704800", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000773")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x170481C", Offset = "0x170481C", VA = "0x170481C", Slot = "40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1704860", Offset = "0x1704860", VA = "0x1704860", Slot = "71")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x17049D4", Offset = "0x17049D4", VA = "0x17049D4", Slot = "72")]
		protected override void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x1704A38", Offset = "0x1704A38", VA = "0x1704A38", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x17049B8", Offset = "0x17049B8", VA = "0x17049B8")]
		private static Vector3 CMax(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x1704A80", Offset = "0x1704A80", VA = "0x1704A80")]
		private static Vector3 CMul(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x1704A90", Offset = "0x1704A90", VA = "0x1704A90")]
		private static Vector3 CDiv(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x1704AA0", Offset = "0x1704AA0", VA = "0x1704AA0", Slot = "69")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x1704E24", Offset = "0x1704E24", VA = "0x1704E24", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x1704F04", Offset = "0x1704F04", VA = "0x1704F04", Slot = "67")]
		protected override Axis GetInferredManipulationAxis(Vector3 primary, Vector3 secondary, bool secondaryInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x170509C", Offset = "0x170509C", VA = "0x170509C", Slot = "13")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x17056FC", Offset = "0x17056FC", VA = "0x17056FC", Slot = "61")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x17058D8", Offset = "0x17058D8", VA = "0x17058D8", Slot = "68")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x1705984", Offset = "0x1705984", VA = "0x1705984", Slot = "14")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x1705D1C", Offset = "0x1705D1C", VA = "0x1705D1C")]
		public EllipsoidStencil()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public class GrabWidget : MonoBehaviour
	{
		[Token(Token = "0x2000656")]
		public enum State
		{
			[Token(Token = "0x40027C8")]
			Showing,
			[Token(Token = "0x40027C9")]
			Visible,
			[Token(Token = "0x40027CA")]
			Tossed,
			[Token(Token = "0x40027CB")]
			Hiding,
			[Token(Token = "0x40027CC")]
			Invisible
		}

		[Token(Token = "0x2000657")]
		public enum Axis
		{
			[Token(Token = "0x40027CE")]
			Invalid = -1,
			[Token(Token = "0x40027CF")]
			X,
			[Token(Token = "0x40027D0")]
			Y,
			[Token(Token = "0x40027D1")]
			Z,
			[Token(Token = "0x40027D2")]
			YZ,
			[Token(Token = "0x40027D3")]
			XZ,
			[Token(Token = "0x40027D4")]
			XY
		}

		[Token(Token = "0x2000658")]
		protected enum IntroAnimState
		{
			[Token(Token = "0x40027D6")]
			Off,
			[Token(Token = "0x40027D7")]
			In,
			[Token(Token = "0x40027D8")]
			On
		}

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color m_InactiveGrey;

		[Token(Token = "0x400277E")]
		private const float m_LinVelDecayTime = 0.1f;

		[Token(Token = "0x400277F")]
		private const float m_AngVelDecayTime = 0.1f;

		[Token(Token = "0x4002780")]
		private const float m_LinVelEpsilonSqr = 0.001f;

		[Token(Token = "0x4002781")]
		private const float m_AngVelEpsilonSqr = 0.001f;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float m_AngVelDampThreshold;

		[Token(Token = "0x4002783")]
		private const float m_LinVelInheritMin = 0.8f;

		[Token(Token = "0x4002784")]
		private const float m_AngVelInheritMin = 25f;

		[Token(Token = "0x4002785")]
		private const float m_LinDistInheritMax = 1f;

		[Token(Token = "0x4002786")]
		private const float m_AngDistInheritMax = 30f;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_ShowDuration;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_GrabDistance;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_CollisionRadius;

		[NonSerialized]
		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasScript m_PreviousCanvas;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_AllowTwoHandGrab;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_DestroyOnHide;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool m_AllowHideWithToss;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool m_DisableDrift;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected bool m_RecordMovements;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		protected bool m_AllowSnapping;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SnapDisabledDelay;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_AllowPinning;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_AllowDormancy;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_TossDuration;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Renderer[] m_TintableMeshes;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_SpawnPlacementOffset;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_IntroAnimSpinAmount;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected BoxCollider m_BoxCollider;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Transform m_Mesh;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Transform[] m_HighlightMeshXfs;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected float m_ValidSnapRotationStickyAngle;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Material m_SnapGhostMaterial;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool m_Registered;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float m_ShowTimer;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected State m_CurrentState;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Vector3 m_Velocity_LS;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vector3 m_AngularVelocity_LS;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool m_UserInteracting;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		protected bool m_UserTwoHandGrabbing;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected InputManager.ControllerName m_InteractingController;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float m_SnapEnabledTimeStamp;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool m_SnappingToHome;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		protected bool m_SnapDriftCancel;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected Quaternion m_BaseSnapRotation;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected bool m_IsSpinningFreely;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		protected bool m_Restoring;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float m_TossTimer;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected NonScaleChild m_NonScaleChild;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected MeshFilter[] m_HighlightMeshFilters;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Color m_ActiveTint;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected int m_BackupLayer;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected ushort m_BatchId;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected TrTransform m_xfIntroAnimSpawn_LS;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected TrTransform m_xfIntroAnimTarget_LS;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected float m_IntroAnimValue;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		protected float m_IntroAnimSpeed;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected bool m_Pinned;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected WidgetPinScript m_Pin;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected float m_PinScalar;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected List<Quaternion> m_ValidSnapRotations_SS;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected int m_PrevValidSnapRotationIndex;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected Transform m_SnapGhost;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected bool m_bWasSnapping;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		protected bool m_CustomShowHide;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected Collider m_GrabCollider;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected Dictionary<Renderer, Material[]> m_InitialMaterials;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected Dictionary<Renderer, Material[]> m_NewMaterials;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Renderer[] m_WidgetRenderers;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected List<string> m_Keywords;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected bool m_Highlighted;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		protected bool m_OldHighlighted;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private SketchGroupTag m_Group;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion m_PrevSnapRotation;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected IntroAnimState m_IntroAnimState;

		[Token(Token = "0x17000774")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x1705EB0", Offset = "0x1705EB0", VA = "0x1705EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000775")]
		public bool AllowTwoHandGrab
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x1705F14", Offset = "0x1705F14", VA = "0x1705F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000776")]
		public bool AllowPinning
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x1705F1C", Offset = "0x1705F1C", VA = "0x1705F1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000777")]
		public virtual bool AllowDormancy
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x1705F80", Offset = "0x1705F80", VA = "0x1705F80", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000778")]
		public float PinScalar
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x1705F88", Offset = "0x1705F88", VA = "0x1705F88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000779")]
		public bool IsSpinningFreely
		{
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x1705F90", Offset = "0x1705F90", VA = "0x1705F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700077A")]
		public bool Restoring
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x1705F98", Offset = "0x1705F98", VA = "0x1705F98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x1705FA0", Offset = "0x1705FA0", VA = "0x1705FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700077B")]
		public bool Pinned
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x1705FAC", Offset = "0x1705FAC", VA = "0x1705FAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700077C")]
		public virtual float HapticDuration
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x1705FB4", Offset = "0x1705FB4", VA = "0x1705FB4", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700077D")]
		public ushort BatchId
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x1705FC0", Offset = "0x1705FC0", VA = "0x1705FC0")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x1700077E")]
		public SketchGroupTag Group
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x1705FC8", Offset = "0x1705FC8", VA = "0x1705FC8")]
			get
			{
				return default(SketchGroupTag);
			}
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x1705FD0", Offset = "0x1705FD0", VA = "0x1705FD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700077F")]
		protected virtual bool SnapEnabled
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x1706064", Offset = "0x1706064", VA = "0x1706064", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x1706090", Offset = "0x1706090", VA = "0x1706090", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000780")]
		public bool Showing
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x17060B0", Offset = "0x17060B0", VA = "0x17060B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000781")]
		public virtual bool SupportsNegativeSize
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x17060C0", Offset = "0x17060C0", VA = "0x17060C0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000782")]
		public static Color InactiveGrey
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x17060C8", Offset = "0x17060C8", VA = "0x17060C8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000783")]
		protected Vector3 Velocity_GS
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x1706124", Offset = "0x1706124", VA = "0x1706124")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x17062BC", Offset = "0x17062BC", VA = "0x17062BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000784")]
		protected Vector3 AngularVelocity_GS
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x1706338", Offset = "0x1706338", VA = "0x1706338")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x170636C", Offset = "0x170636C", VA = "0x170636C")]
			set
			{
			}
		}

		[Token(Token = "0x17000785")]
		public Collider GrabCollider
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1706454", Offset = "0x1706454", VA = "0x1706454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000786")]
		protected Transform CenterOfMassTransform
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x17064E8", Offset = "0x17064E8", VA = "0x17064E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000787")]
		protected TrTransform CenterOfMassPose_OS
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x1706564", Offset = "0x1706564", VA = "0x1706564")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000788")]
		protected TrTransform CenterOfMassPose_LS
		{
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x17066AC", Offset = "0x17066AC", VA = "0x17066AC")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000789")]
		public virtual float MaxAxisScale
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x1706754", Offset = "0x1706754", VA = "0x1706754", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700078A")]
		public virtual Transform GrabTransform_GS
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x17067CC", Offset = "0x17067CC", VA = "0x17067CC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700078B")]
		private TrTransform ParentTransform
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x1706160", Offset = "0x1706160", VA = "0x1706160")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x1700078C")]
		public TrTransform LocalTransform
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x16FEFD8", Offset = "0x16FEFD8", VA = "0x16FEFD8")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x17067D4", Offset = "0x17067D4", VA = "0x17067D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700078D")]
		public virtual Vector3 CustomDimension
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x1706984", Offset = "0x1706984", VA = "0x1706984", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x17069C8", Offset = "0x17069C8", VA = "0x17069C8", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x1700078E")]
		public bool UserTwoHandGrabbing
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x1706AF0", Offset = "0x1706AF0", VA = "0x1706AF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700078F")]
		protected virtual Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x170B080", Offset = "0x170B080", VA = "0x170B080", Slot = "40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x170605C", Offset = "0x170605C", VA = "0x170605C")]
		private void ForceSnapDisabled()
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x17069CC", Offset = "0x17069CC", VA = "0x17069CC", Slot = "13")]
		public virtual Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisDirection, out float axisExtent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x16FFA50", Offset = "0x16FFA50", VA = "0x16FFA50", Slot = "14")]
		public virtual Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x17069E0", Offset = "0x17069E0", VA = "0x17069E0")]
		public bool IsUserInteracting(InputManager.ControllerName interactionController)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1706A00", Offset = "0x1706A00", VA = "0x1706A00")]
		public void UserInteracting(bool interacting, InputManager.ControllerName controller = InputManager.ControllerName.None)
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1706AF8", Offset = "0x1706AF8", VA = "0x1706AF8")]
		public void SetUserTwoHandGrabbing(bool value, InputManager.ControllerName primary = InputManager.ControllerName.None, InputManager.ControllerName secondary = InputManager.ControllerName.None, bool secondaryInObject = false)
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1706C70", Offset = "0x1706C70", VA = "0x1706C70", Slot = "15")]
		public virtual int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1706C78", Offset = "0x1706C78", VA = "0x1706C78", Slot = "16")]
		public virtual bool IsCollisionEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1706C7C", Offset = "0x1706C7C", VA = "0x1706C7C")]
		public bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1706CD0", Offset = "0x1706CD0", VA = "0x1706CD0")]
		private bool IsHideToss(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1706FCC", Offset = "0x1706FCC", VA = "0x1706FCC")]
		public void SetCanvas(CanvasScript newCanvas)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x1707BDC", Offset = "0x1707BDC", VA = "0x1707BDC")]
		public void TrySetCanvasKeywordsFromObject(Transform xf)
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x1707DF4", Offset = "0x1707DF4", VA = "0x1707DF4")]
		public void SetVelocities(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x1708438", Offset = "0x1708438", VA = "0x1708438")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x1704620", Offset = "0x1704620", VA = "0x1704620")]
		protected float GetShowRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x16F97EC", Offset = "0x16F97EC", VA = "0x16F97EC", Slot = "17")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x170857C", Offset = "0x170857C", VA = "0x170857C", Slot = "18")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x1708494", Offset = "0x1708494", VA = "0x1708494")]
		private void RegisterWithWidgetManager()
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x1708580", Offset = "0x1708580", VA = "0x1708580", Slot = "19")]
		protected virtual void OnHideStart()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x1703280", Offset = "0x1703280", VA = "0x1703280", Slot = "20")]
		public virtual void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x1708584", Offset = "0x1708584", VA = "0x1708584", Slot = "21")]
		public virtual GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x17086C0", Offset = "0x17086C0", VA = "0x17086C0")]
		public void HaltDrift()
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x17086C4", Offset = "0x17086C4", VA = "0x17086C4")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x17082E4", Offset = "0x17082E4", VA = "0x17082E4")]
		private void StartHideToss(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x17086D4", Offset = "0x17086D4", VA = "0x17086D4")]
		public bool IsTossed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x17086E4", Offset = "0x17086E4", VA = "0x17086E4")]
		public bool IsHiding()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x17086F4", Offset = "0x17086F4", VA = "0x17086F4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x16F9DE4", Offset = "0x16F9DE4", VA = "0x16F9DE4", Slot = "22")]
		public virtual void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x1708720", Offset = "0x1708720", VA = "0x1708720")]
		public bool VerifyVisibleState(MoveWidgetCommand comm)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x17087C8", Offset = "0x17087C8", VA = "0x17087C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x1708F68", Offset = "0x1708F68", VA = "0x1708F68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x1708FDC", Offset = "0x1708FDC", VA = "0x1708FDC")]
		private void AddKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x1709088", Offset = "0x1709088", VA = "0x1709088")]
		private void RemoveKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x17076D8", Offset = "0x17076D8", VA = "0x17076D8")]
		private void EnableKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x1707A78", Offset = "0x1707A78", VA = "0x1707A78")]
		private void DisableKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1709228", Offset = "0x1709228", VA = "0x1709228")]
		protected void CloneInitialMaterials(GrabWidget other)
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x170911C", Offset = "0x170911C", VA = "0x170911C")]
		private void RestoreSharedMaterials()
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x17094F4", Offset = "0x17094F4", VA = "0x17094F4")]
		public void HideNow()
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x1709548", Offset = "0x1709548", VA = "0x1709548")]
		protected static TrTransform WithUnitScale(TrTransform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x17089A0", Offset = "0x17089A0", VA = "0x17089A0")]
		private void UpdatePositionAndVelocities()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x1709610", Offset = "0x1709610", VA = "0x1709610")]
		public void RecordAndSetSize(float value)
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x1709830", Offset = "0x1709830", VA = "0x1709830", Slot = "23")]
		public virtual void RecordAndSetPosRot(TrTransform inputXf)
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x1709CF8", Offset = "0x1709CF8", VA = "0x1709CF8", Slot = "24")]
		public virtual TrTransform GetGrabbedTrTransform()
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x1701CA0", Offset = "0x1701CA0", VA = "0x1701CA0", Slot = "25")]
		protected virtual void InitiateSnapping()
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x1701F00", Offset = "0x1701F00", VA = "0x1701F00", Slot = "26")]
		protected virtual void FinishSnapping()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x17020B8", Offset = "0x17020B8", VA = "0x17020B8", Slot = "27")]
		protected virtual TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x1709DE8", Offset = "0x1709DE8", VA = "0x1709DE8")]
		private Quaternion QuantizeAngle(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x1709F10", Offset = "0x1709F10", VA = "0x1709F10")]
		public static Vector3 SnapToGrid(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x170A1DC", Offset = "0x170A1DC", VA = "0x170A1DC")]
		protected int GetBestSnapRotationIndex(Quaternion rot)
		{
			return default(int);
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x1702DF0", Offset = "0x1702DF0", VA = "0x1702DF0")]
		protected void InitSnapGhost(Transform media, Transform parent)
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x170A370", Offset = "0x170A370", VA = "0x170A370", Slot = "28")]
		protected virtual Vector3 GetHomeSnapLocation(Quaternion snapOrient)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x170A550", Offset = "0x170A550", VA = "0x170A550", Slot = "29")]
		protected virtual TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x170A920", Offset = "0x170A920", VA = "0x170A920", Slot = "30")]
		protected virtual bool AllowSnapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x170A93C", Offset = "0x170A93C", VA = "0x170A93C", Slot = "31")]
		protected virtual void OnEndUpdateWithDesiredTransform()
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x170A940", Offset = "0x170A940", VA = "0x170A940")]
		public void PinFromSave()
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x170AB64", Offset = "0x170AB64", VA = "0x170AB64")]
		public void SetPinned(bool bPin, bool fromSave = false)
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x170A9B4", Offset = "0x170A9B4", VA = "0x170A9B4")]
		public void Pin(bool bPin, bool fromSave = false)
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x170ACE8", Offset = "0x170ACE8", VA = "0x170ACE8")]
		public void VisualizePinState()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x170AE2C", Offset = "0x170AE2C", VA = "0x170AE2C", Slot = "32")]
		protected virtual void InitPin()
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0x16FB5A0", Offset = "0x16FB5A0", VA = "0x16FB5A0", Slot = "33")]
		public virtual void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0x170AE68", Offset = "0x170AE68", VA = "0x170AE68", Slot = "34")]
		public virtual void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0x170AE74", Offset = "0x170AE74", VA = "0x170AE74", Slot = "35")]
		protected virtual void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0x170AE7C", Offset = "0x170AE7C", VA = "0x170AE7C", Slot = "36")]
		public virtual bool HasHoverInteractions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0x170AE84", Offset = "0x170AE84", VA = "0x170AE84", Slot = "37")]
		public virtual void AssignHoverControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x170AE88", Offset = "0x170AE88", VA = "0x170AE88", Slot = "38")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x170AF44", Offset = "0x170AF44", VA = "0x170AF44")]
		protected bool PointInCollider(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x1701984", Offset = "0x1701984", VA = "0x1701984", Slot = "39")]
		public virtual float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x170B1BC", Offset = "0x170B1BC", VA = "0x170B1BC", Slot = "41")]
		protected virtual Transform GetOriginHomeXf()
		{
			return null;
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x16F9C14", Offset = "0x16F9C14", VA = "0x16F9C14", Slot = "42")]
		protected virtual void OnShow()
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x16F9C40", Offset = "0x16F9C40", VA = "0x16F9C40", Slot = "43")]
		protected virtual void OnHide()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x170B220", Offset = "0x170B220", VA = "0x170B220", Slot = "44")]
		protected virtual void OnTossComplete()
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x1703574", Offset = "0x1703574", VA = "0x1703574")]
		public void InitIntroAnim(TrTransform xfSpawn, TrTransform xfTarget, bool bFaceUser, [Optional] Quaternion? endForward)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1703BF0", Offset = "0x1703BF0", VA = "0x1703BF0", Slot = "45")]
		protected virtual void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x170B224", Offset = "0x170B224", VA = "0x170B224", Slot = "46")]
		protected virtual void UpdateIntroAnim()
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x170B4C8", Offset = "0x170B4C8", VA = "0x170B4C8", Slot = "47")]
		public virtual void OnPreDestroy()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x16F9B74", Offset = "0x16F9B74", VA = "0x16F9B74", Slot = "48")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x170B4CC", Offset = "0x170B4CC", VA = "0x170B4CC", Slot = "49")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x170B4D0", Offset = "0x170B4D0", VA = "0x170B4D0", Slot = "50")]
		protected virtual void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x16FC558", Offset = "0x16FC558", VA = "0x16FC558", Slot = "51")]
		protected virtual void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x170B6F0", Offset = "0x170B6F0", VA = "0x170B6F0", Slot = "52")]
		protected virtual void OnUserBeginTwoHandGrab(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInObject)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x170B6F4", Offset = "0x170B6F4", VA = "0x170B6F4", Slot = "53")]
		protected virtual void OnUserEndTwoHandGrab()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x170B6F8", Offset = "0x170B6F8", VA = "0x170B6F8", Slot = "54")]
		public virtual Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x170B70C", Offset = "0x170B70C", VA = "0x170B70C", Slot = "55")]
		public virtual float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x17068C8", Offset = "0x17068C8", VA = "0x17068C8")]
		public void SetSignedWidgetSize(float fScale)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x170B714", Offset = "0x170B714", VA = "0x170B714", Slot = "56")]
		protected virtual void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x170B718", Offset = "0x170B718", VA = "0x170B718", Slot = "57")]
		public virtual bool HasGPUIntersectionObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x170B720", Offset = "0x170B720", VA = "0x170B720", Slot = "58")]
		public virtual void SetGPUIntersectionObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x170B724", Offset = "0x170B724", VA = "0x170B724", Slot = "59")]
		public virtual void RestoreGPUIntersectionObjectLayer()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x170B728", Offset = "0x170B728", VA = "0x170B728", Slot = "60")]
		public virtual bool CanGrabDuringDeselection()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x170B730", Offset = "0x170B730", VA = "0x170B730", Slot = "61")]
		public virtual void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x170B734", Offset = "0x170B734", VA = "0x170B734", Slot = "62")]
		public virtual bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x170B73C", Offset = "0x170B73C", VA = "0x170B73C", Slot = "63")]
		public virtual void RestoreGameObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x170B75C", Offset = "0x170B75C", VA = "0x170B75C", Slot = "64")]
		public virtual bool DistanceToCollider(Ray ray, out float fDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x170B768", Offset = "0x170B768", VA = "0x170B768")]
		public void AllowHideWithToss(bool bAllowHide)
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x16FDF40", Offset = "0x16FDF40", VA = "0x16FDF40")]
		public GrabWidget()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class GrabWidgetHome : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrTransform m_Transform_SS;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SnapHomeDistance;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_ScaleInSpeed;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseOrientationOfOwner;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_HintDistance;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_InHomeRange;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_Owner;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer m_Renderer;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_MeshFilter;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_BaseScale;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_ScaleValue;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IsFixedPosition;

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x170B948", Offset = "0x170B948", VA = "0x170B948")]
		public bool ShouldSnapHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x170B950", Offset = "0x170B950", VA = "0x170B950")]
		public void Init()
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x170BA6C", Offset = "0x170BA6C", VA = "0x170BA6C")]
		public void SetOwner(Transform owner)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x170BA78", Offset = "0x170BA78", VA = "0x170BA78")]
		public void SetFixedPosition(Vector3 vPos_SS)
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x170BB1C", Offset = "0x170BB1C", VA = "0x170BB1C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x170BB94", Offset = "0x170BB94", VA = "0x170BB94")]
		private void Update()
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x170BDB4", Offset = "0x170BDB4", VA = "0x170BDB4")]
		public bool WithinRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x170BE7C", Offset = "0x170BE7C", VA = "0x170BE7C")]
		public bool WithinHintRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x170BF44", Offset = "0x170BF44", VA = "0x170BF44")]
		public void RenderHighlight()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x170BFA8", Offset = "0x170BFA8", VA = "0x170BFA8")]
		public GrabWidgetHome()
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class ImageWidget : Media2dWidget
	{
		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private float m_VertCountScalar;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private bool m_UseLegacyTint;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private ReferenceImage m_ReferenceImage;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool m_TextureAcquired;

		[Token(Token = "0x17000790")]
		public string FileName
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x1A3D584", Offset = "0x1A3D584", VA = "0x1A3D584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000791")]
		public override float? AspectRatio
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x1A3D628", Offset = "0x1A3D628", VA = "0x1A3D628", Slot = "67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000792")]
		public bool UseLegacyTint
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x1A3D6BC", Offset = "0x1A3D6BC", VA = "0x1A3D6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x1A3D6C4", Offset = "0x1A3D6C4", VA = "0x1A3D6C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000793")]
		public ReferenceImage ReferenceImage
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x1A3DF40", Offset = "0x1A3DF40", VA = "0x1A3DF40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x1A3DA28", Offset = "0x1A3DA28", VA = "0x1A3DA28")]
			set
			{
			}
		}

		[Token(Token = "0x6002AFF")]
		private static T Unused<T>(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x1A3D754", Offset = "0x1A3D754", VA = "0x1A3D754", Slot = "48")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x1A3D79C", Offset = "0x1A3D79C", VA = "0x1A3D79C", Slot = "21")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x1A3DD4C", Offset = "0x1A3DD4C", VA = "0x1A3DD4C", Slot = "22")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x1A3DDD4", Offset = "0x1A3DDD4", VA = "0x1A3DDD4", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x1A3DE90", Offset = "0x1A3DE90", VA = "0x1A3DE90", Slot = "66")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x1A3DD6C", Offset = "0x1A3DD6C", VA = "0x1A3DD6C")]
		private void AcquireTexture()
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x1A3D770", Offset = "0x1A3D770", VA = "0x1A3D770")]
		private void ReleaseTexture()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x1A3DF48", Offset = "0x1A3DF48", VA = "0x1A3DF48")]
		public bool IsImageValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x1A3DF5C", Offset = "0x1A3DF5C", VA = "0x1A3DF5C")]
		public bool GetPixel(float u, float v, out Color pixelColor)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x1A3DFF8", Offset = "0x1A3DFF8", VA = "0x1A3DFF8")]
		public static void FromTiltImage(TiltImages75 tiltImage)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x1A3E718", Offset = "0x1A3E718", VA = "0x1A3E718")]
		public ImageWidget()
		{
		}
	}
	[Token(Token = "0x200065E")]
	public abstract class Media2dWidget : MediaWidget
	{
		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		protected Texture2D m_NoImageTexture;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		protected float m_StartScale;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		protected float m_ColliderBloat;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		protected float m_MeshScalar;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		protected Transform m_Background;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		protected Transform m_Missing;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		protected TextMesh m_MissingText;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		protected GameObject m_MissingQuestionMark;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		protected float m_QuestionMarkScalar;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		protected float m_MinTextSize;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		protected int m_TiltMeterCost;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public Renderer m_ImageQuad;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		protected Renderer m_TextRenderer;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		protected float m_TransitionScale;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		protected float m_BGThickness;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		protected float m_BGDist;

		[Token(Token = "0x4002806")]
		protected const float m_MaxHomeSnapDistance = 0.001f;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		protected float m_HomeZFightingOffset;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		protected int m_NumVertsTrackedByWidgetManager;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		protected (string fileName, float aspectRatio)? m_MissingInfo;

		[Token(Token = "0x17000794")]
		public abstract float? AspectRatio
		{
			[Token(Token = "0x6002B11")]
			get;
		}

		[Token(Token = "0x17000795")]
		public Texture ImageTexture
		{
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x1A3E754", Offset = "0x1A3E754", VA = "0x1A3E754")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x1A3DF10", Offset = "0x1A3DF10", VA = "0x1A3DF10")]
			set
			{
			}
		}

		[Token(Token = "0x17000796")]
		public TrTransform SaveTransform
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0x1A3E77C", Offset = "0x1A3E77C", VA = "0x1A3E77C")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000797")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x1A3E848", Offset = "0x1A3E848", VA = "0x1A3E848", Slot = "40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000798")]
		public override float MaxAxisScale
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0x1A3E908", Offset = "0x1A3E908", VA = "0x1A3E908", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000799")]
		public int NumVertsTrackedByWidgetManager
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x1A3E96C", Offset = "0x1A3E96C", VA = "0x1A3E96C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x1A3E974", Offset = "0x1A3E974", VA = "0x1A3E974", Slot = "15")]
		public override int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x1A3E97C", Offset = "0x1A3E97C", VA = "0x1A3E97C", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x1A3EC98", Offset = "0x1A3EC98", VA = "0x1A3EC98", Slot = "33")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x1A3EEDC", Offset = "0x1A3EEDC", VA = "0x1A3EEDC", Slot = "41")]
		protected override Transform GetOriginHomeXf()
		{
			return null;
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1A3F098", Offset = "0x1A3F098", VA = "0x1A3F098", Slot = "32")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x1A3F100", Offset = "0x1A3F100", VA = "0x1A3F100", Slot = "56")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x1A3F234", Offset = "0x1A3F234", VA = "0x1A3F234", Slot = "65")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x1A3F4FC", Offset = "0x1A3F4FC", VA = "0x1A3F4FC", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x1A3F554", Offset = "0x1A3F554", VA = "0x1A3F554", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x1A3E428", Offset = "0x1A3E428", VA = "0x1A3E428")]
		public void SetMissing(float aspectRatio, string fileName)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x1A3F594", Offset = "0x1A3F594", VA = "0x1A3F594", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x1A3E738", Offset = "0x1A3E738", VA = "0x1A3E738")]
		protected Media2dWidget()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public abstract class MediaWidget : GrabWidget
	{
		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected Renderer m_SelectionIndicatorRenderer;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		protected Vector3 m_ContainerBloat;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		protected bool m_UngrabbableFromInside;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		protected float m_MinSize_CS;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		protected float m_MaxSize_CS;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected float m_Size;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		protected bool m_LoadingFromSketch;

		[Token(Token = "0x1700079A")]
		public bool LoadingFromSketch
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x1A3F76C", Offset = "0x1A3F76C", VA = "0x1A3F76C")]
			set
			{
			}
		}

		[Token(Token = "0x1700079B")]
		public override bool SupportsNegativeSize
		{
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x1A3F778", Offset = "0x1A3F778", VA = "0x1A3F778", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1A3EBB4", Offset = "0x1A3EBB4", VA = "0x1A3EBB4", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x1A3DDEC", Offset = "0x1A3DDEC", VA = "0x1A3DDEC", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x1A3F0BC", Offset = "0x1A3F0BC", VA = "0x1A3F0BC", Slot = "32")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002B29")]
		protected abstract void UpdateScale();

		[Token(Token = "0x6002B2A")]
		public abstract string GetExportName();

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x1A3F780", Offset = "0x1A3F780", VA = "0x1A3F780", Slot = "55")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1A3F788", Offset = "0x1A3F788", VA = "0x1A3F788", Slot = "54")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1A3DD5C", Offset = "0x1A3DD5C", VA = "0x1A3DD5C", Slot = "22")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x1A3F7F0", Offset = "0x1A3F7F0", VA = "0x1A3F7F0")]
		private void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x1A3F1CC", Offset = "0x1A3F1CC", VA = "0x1A3F1CC", Slot = "56")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x1A3ED78", Offset = "0x1A3ED78", VA = "0x1A3ED78", Slot = "33")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x1A3F70C", Offset = "0x1A3F70C", VA = "0x1A3F70C")]
		protected MediaWidget()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public class ModelWidget : MediaWidget
	{
		[Token(Token = "0x4002811")]
		private const float kInitialSizeMeters_RS = 0.25f;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private float m_MinContainerRatio;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float m_MaxBloat;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Model m_Model;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform m_ModelInstance;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ObjModelScript m_ObjModelScript;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float m_InitSize_CS;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float m_HideSize_CS;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool m_PolyCallbackActive;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private int m_NumVertsTrackedByWidgetManager;

		[Token(Token = "0x1700079C")]
		public string AssetId
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x1A3F824", Offset = "0x1A3F824", VA = "0x1A3F824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700079D")]
		public Model Model
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x1A3F854", Offset = "0x1A3F854", VA = "0x1A3F854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x1A3F85C", Offset = "0x1A3F85C", VA = "0x1A3F85C")]
			set
			{
			}
		}

		[Token(Token = "0x1700079E")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x1A3FE18", Offset = "0x1A3FE18", VA = "0x1A3FE18", Slot = "40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700079F")]
		public override float MaxAxisScale
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x1A3FFC8", Offset = "0x1A3FFC8", VA = "0x1A3FFC8", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170007A0")]
		public Bounds WorldSpaceBounds
		{
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x1A40098", Offset = "0x1A40098", VA = "0x1A40098")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x170007A1")]
		public int NumVertsTrackedByWidgetManager
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x1A400D8", Offset = "0x1A400D8", VA = "0x1A400D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x1A3F838", Offset = "0x1A3F838", VA = "0x1A3F838")]
		public MeshFilter[] GetMeshes()
		{
			return null;
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x1A3FEF0", Offset = "0x1A3FEF0", VA = "0x1A3FEF0", Slot = "28")]
		protected override Vector3 GetHomeSnapLocation(Quaternion snapOrient)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x1A400E0", Offset = "0x1A400E0", VA = "0x1A400E0", Slot = "15")]
		public override int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x1A40168", Offset = "0x1A40168", VA = "0x1A40168")]
		public int GetNumVertsInModel()
		{
			return default(int);
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x1A401F0", Offset = "0x1A401F0", VA = "0x1A401F0", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x1A402A8", Offset = "0x1A402A8", VA = "0x1A402A8", Slot = "47")]
		public override void OnPreDestroy()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x1A40378", Offset = "0x1A40378", VA = "0x1A40378", Slot = "21")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x1A40B8C", Offset = "0x1A40B8C", VA = "0x1A40B8C", Slot = "19")]
		protected override void OnHideStart()
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x1A40B98", Offset = "0x1A40B98", VA = "0x1A40B98")]
		public void OnPacCatalogChanged()
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x1A40CA0", Offset = "0x1A40CA0", VA = "0x1A40CA0", Slot = "66")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x1A3F888", Offset = "0x1A3F888", VA = "0x1A3F888")]
		private void LoadModel()
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x1A40D50", Offset = "0x1A40D50", VA = "0x1A40D50", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x1A40CBC", Offset = "0x1A40CBC", VA = "0x1A40CBC")]
		private static Vector3 GetBoundsRatios(Bounds bounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x1A40EB0", Offset = "0x1A40EB0", VA = "0x1A40EB0", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x1A40F28", Offset = "0x1A40F28", VA = "0x1A40F28", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x1A411C0", Offset = "0x1A411C0", VA = "0x1A411C0", Slot = "46")]
		protected override void UpdateIntroAnim()
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x1A411F8", Offset = "0x1A411F8", VA = "0x1A411F8", Slot = "65")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x1A412C8", Offset = "0x1A412C8", VA = "0x1A412C8", Slot = "32")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x1A412F0", Offset = "0x1A412F0", VA = "0x1A412F0", Slot = "34")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1A412F8", Offset = "0x1A412F8", VA = "0x1A412F8", Slot = "35")]
		protected override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1A41300", Offset = "0x1A41300", VA = "0x1A41300")]
		public TrTransform GetSaveTransform()
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x1A413CC", Offset = "0x1A413CC", VA = "0x1A413CC", Slot = "54")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x1A41478", Offset = "0x1A41478", VA = "0x1A41478")]
		public void SetWidgetSizeNonRaw(float fScale)
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x1A40F6C", Offset = "0x1A40F6C", VA = "0x1A40F6C")]
		protected void SetWidgetSizeAboutCenterOfMass(float size)
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x1A414E0", Offset = "0x1A414E0", VA = "0x1A414E0")]
		public static void CreateFromSaveData(TiltModels75 modelDatas)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x1A415C8", Offset = "0x1A415C8", VA = "0x1A415C8")]
		public static bool CreateModelsFromRelativePath(string relativePath, TrTransform[] xfs, TrTransform[] rawXfs, bool[] pinStates, uint[] groupIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x1A419AC", Offset = "0x1A419AC", VA = "0x1A419AC")]
		private static void CreateModel(Model model, TrTransform xf, bool pin, bool isNonRawTransform, uint groupId, [Optional] string assetId)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x1A417E4", Offset = "0x1A417E4", VA = "0x1A417E4")]
		private static void CreateModelsFromAssetId(string assetId, TrTransform[] rawXfs, bool[] pinStates, uint[] groupIds)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x1A41CE4", Offset = "0x1A41CE4", VA = "0x1A41CE4", Slot = "57")]
		public override bool HasGPUIntersectionObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x1A41D44", Offset = "0x1A41D44", VA = "0x1A41D44", Slot = "58")]
		public override void SetGPUIntersectionObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x1A41D50", Offset = "0x1A41D50", VA = "0x1A41D50", Slot = "59")]
		public override void RestoreGPUIntersectionObjectLayer()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x1A41D64", Offset = "0x1A41D64", VA = "0x1A41D64", Slot = "62")]
		public override bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x1A41E0C", Offset = "0x1A41E0C", VA = "0x1A41E0C")]
		public ModelWidget()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class PanelWidget : GrabWidget
	{
		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Transform m_Border;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float m_GrabFixedMaxFacingAngle;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private BasePanel m_PanelSibling;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float m_PreviousShowRatio;

		[Token(Token = "0x170007A2")]
		public BasePanel PanelSibling
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x1A41E94", Offset = "0x1A41E94", VA = "0x1A41E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x1A41E9C", Offset = "0x1A41E9C", VA = "0x1A41E9C")]
		public bool IsAnimating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x1A41EAC", Offset = "0x1A41EAC", VA = "0x1A41EAC")]
		public void ForceVisibleForInit()
		{
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x1A41EBC", Offset = "0x1A41EBC", VA = "0x1A41EBC")]
		public void ForceInvisibleForInit()
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x1A41F80", Offset = "0x1A41F80", VA = "0x1A41F80", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1A42008", Offset = "0x1A42008", VA = "0x1A42008", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1A420D4", Offset = "0x1A420D4", VA = "0x1A420D4", Slot = "45")]
		protected override void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x1A42180", Offset = "0x1A42180", VA = "0x1A42180", Slot = "16")]
		public override bool IsCollisionEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1A421B0", Offset = "0x1A421B0", VA = "0x1A421B0", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x1A422CC", Offset = "0x1A422CC", VA = "0x1A422CC", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x1A42380", Offset = "0x1A42380", VA = "0x1A42380", Slot = "44")]
		protected override void OnTossComplete()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x1A41ECC", Offset = "0x1A41ECC", VA = "0x1A41ECC")]
		private void UpdatePanelScale(float fShowRatio)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x1A423A0", Offset = "0x1A423A0", VA = "0x1A423A0")]
		public void SetActiveTintToShowError(bool bError)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x1A423D4", Offset = "0x1A423D4", VA = "0x1A423D4", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x1A42600", Offset = "0x1A42600", VA = "0x1A42600")]
		public void RemovePromoMeshesFromTintable(MeshRenderer[] meshes)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x1A4270C", Offset = "0x1A4270C", VA = "0x1A4270C")]
		public void AddPromoMeshesToTintable(MeshRenderer[] meshes)
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x1A42788", Offset = "0x1A42788", VA = "0x1A42788", Slot = "29")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x1A42864", Offset = "0x1A42864", VA = "0x1A42864", Slot = "50")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x1A428F4", Offset = "0x1A428F4", VA = "0x1A428F4", Slot = "51")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x1A42968", Offset = "0x1A42968", VA = "0x1A42968", Slot = "34")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x1A4296C", Offset = "0x1A4296C", VA = "0x1A4296C", Slot = "60")]
		public override bool CanGrabDuringDeselection()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x1A42974", Offset = "0x1A42974", VA = "0x1A42974")]
		public PanelWidget()
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class PlanarWidget : GrabWidget
	{
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected Transform m_LeftBorder;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		protected Transform m_RightBorder;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		protected Transform m_Title;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		protected Transform m_DismissMessage;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected float m_MeshScalar;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		protected float m_BorderOffset;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		protected float m_BorderScale;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		protected Vector2 m_ScaleRange;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		protected float m_SpawnPlacementHeightPercent;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		protected float m_SpawnPlacementDistance;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		protected float m_ColliderBloat;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector2 m_DismissTextSize;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float m_CurrentScale;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float m_TransitionScale;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		protected float m_AspectRatio;

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x1A42A38", Offset = "0x1A42A38", VA = "0x1A42A38", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x1A42D90", Offset = "0x1A42D90", VA = "0x1A42D90", Slot = "20")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x1A43038", Offset = "0x1A43038", VA = "0x1A43038", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x1A42B24", Offset = "0x1A42B24", VA = "0x1A42B24")]
		protected void UpdateScale()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x1A4306C", Offset = "0x1A4306C", VA = "0x1A4306C", Slot = "54")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x1A43078", Offset = "0x1A43078", VA = "0x1A43078", Slot = "55")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x1A43080", Offset = "0x1A43080", VA = "0x1A43080", Slot = "56")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x1A430A0", Offset = "0x1A430A0", VA = "0x1A430A0")]
		public PlanarWidget()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class PlaneStencil : StencilWidget
	{
		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector3 m_AspectRatio;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float m_LayeringOffset;

		[Token(Token = "0x170007A3")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x1A43104", Offset = "0x1A43104", VA = "0x1A43104", Slot = "65")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x1A43124", Offset = "0x1A43124", VA = "0x1A43124", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x170007A4")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x1A43148", Offset = "0x1A43148", VA = "0x1A43148", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x1A43158", Offset = "0x1A43158", VA = "0x1A43158", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x1A43174", Offset = "0x1A43174", VA = "0x1A43174", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x1A43660", Offset = "0x1A43660", VA = "0x1A43660", Slot = "69")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x1A43818", Offset = "0x1A43818", VA = "0x1A43818", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x1A43820", Offset = "0x1A43820", VA = "0x1A43820", Slot = "67")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x1A438B8", Offset = "0x1A438B8", VA = "0x1A438B8", Slot = "61")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x1A43A9C", Offset = "0x1A43A9C", VA = "0x1A43A9C", Slot = "68")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x1A43B48", Offset = "0x1A43B48", VA = "0x1A43B48", Slot = "13")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x1A43DE4", Offset = "0x1A43DE4", VA = "0x1A43DE4", Slot = "14")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x1A44128", Offset = "0x1A44128", VA = "0x1A44128", Slot = "71")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x1A4439C", Offset = "0x1A4439C", VA = "0x1A4439C")]
		public PlaneStencil()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class SelectionWidget : GrabWidget
	{
		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private CanvasScript m_SelectionCanvas;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private TrTransform m_xfOriginal_SS;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Bounds? m_SelectionBounds_CS;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private InputManager.ControllerName? m_CurrentIntersectionController;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private InputManager.ControllerName? m_NextIntersectionController;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private GpuIntersector.FutureBatchResult m_IntersectionFuture;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Dictionary<InputManager.ControllerName, float> m_LastIntersectionResult;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int m_IntersectionFrame;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector2 m_SizeRange;

		[Token(Token = "0x170007A5")]
		public override bool AllowDormancy
		{
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x1A44578", Offset = "0x1A44578", VA = "0x1A44578", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007A6")]
		public override float HapticDuration
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0x1A445D8", Offset = "0x1A445D8", VA = "0x1A445D8", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170007A7")]
		public TrTransform SelectionTransform
		{
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x1A4481C", Offset = "0x1A4481C", VA = "0x1A4481C")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x1A44900", Offset = "0x1A44900", VA = "0x1A44900")]
			set
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<TrTransform> SelectionTransformed
		{
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x1A44410", Offset = "0x1A44410", VA = "0x1A44410")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x1A444C4", Offset = "0x1A444C4", VA = "0x1A444C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x1A445E4", Offset = "0x1A445E4", VA = "0x1A445E4", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x1A446E8", Offset = "0x1A446E8", VA = "0x1A446E8", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x1A44778", Offset = "0x1A44778", VA = "0x1A44778", Slot = "18")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x1A449E0", Offset = "0x1A449E0", VA = "0x1A449E0", Slot = "38")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x1A44AE8", Offset = "0x1A44AE8", VA = "0x1A44AE8")]
		public void SetSelectionBounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x1A44F00", Offset = "0x1A44F00", VA = "0x1A44F00")]
		public void SelectionCleared()
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x1A44FD8", Offset = "0x1A44FD8", VA = "0x1A44FD8", Slot = "55")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x1A45000", Offset = "0x1A45000", VA = "0x1A45000", Slot = "56")]
		protected override void SetWidgetSizeInternal(float fSize)
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x1A450D4", Offset = "0x1A450D4", VA = "0x1A450D4", Slot = "54")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x1A450E0", Offset = "0x1A450E0", VA = "0x1A450E0")]
		public void UpdateSizeRange(Vector2 range)
		{
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x1A446C8", Offset = "0x1A446C8", VA = "0x1A446C8")]
		public void ResetSizeRange()
		{
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x1A45104", Offset = "0x1A45104", VA = "0x1A45104", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos_GS, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x1A45458", Offset = "0x1A45458", VA = "0x1A45458", Slot = "31")]
		protected override void OnEndUpdateWithDesiredTransform()
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x1A454B0", Offset = "0x1A454B0", VA = "0x1A454B0", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x1A454FC", Offset = "0x1A454FC", VA = "0x1A454FC")]
		private void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x1A44BAC", Offset = "0x1A44BAC", VA = "0x1A44BAC")]
		private void UpdateBoxCollider()
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x1A45500", Offset = "0x1A45500", VA = "0x1A45500")]
		public void PreventSelectionFromMoving(bool preventMoving)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x1A4550C", Offset = "0x1A4550C", VA = "0x1A4550C", Slot = "50")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x1A4561C", Offset = "0x1A4561C", VA = "0x1A4561C")]
		public SelectionWidget()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public class SphereStencil : StencilWidget
	{
		[Token(Token = "0x170007A8")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x1A456AC", Offset = "0x1A456AC", VA = "0x1A456AC", Slot = "65")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x1A45708", Offset = "0x1A45708", VA = "0x1A45708", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x1A45770", Offset = "0x1A45770", VA = "0x1A45770", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x1A4578C", Offset = "0x1A4578C", VA = "0x1A4578C", Slot = "69")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x1A459EC", Offset = "0x1A459EC", VA = "0x1A459EC", Slot = "39")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x1A45B58", Offset = "0x1A45B58", VA = "0x1A45B58", Slot = "67")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x1A45B60", Offset = "0x1A45B60", VA = "0x1A45B60", Slot = "68")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x1A45BA0", Offset = "0x1A45BA0", VA = "0x1A45BA0", Slot = "13")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x1A45C88", Offset = "0x1A45C88", VA = "0x1A45C88", Slot = "14")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x1A460C0", Offset = "0x1A460C0", VA = "0x1A460C0")]
		public SphereStencil()
		{
		}
	}
	[Token(Token = "0x2000668")]
	public class StencilRaycastHint : MonoBehaviour
	{
		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_RaycastHint;

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x1A460C4", Offset = "0x1A460C4", VA = "0x1A460C4")]
		public StencilRaycastHint()
		{
		}
	}
	[Token(Token = "0x2000669")]
	public abstract class StencilWidget : GrabWidget
	{
		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		protected float m_MinSize_CS;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected float m_MaxSize_CS;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private Color m_TintColor;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		protected float m_StencilGrabDistance;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		protected float m_PointerLiftSlope;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected Collider m_Collider;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected float m_Size;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		protected StencilType m_Type;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool m_SkipIntroAnim;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_PreviousShowRatio;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector3 m_KahanSummationC;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected bool m_StickyTransformEnabled;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected TrTransform m_StickyTransformBreakDelta;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected Axis? m_LockedManipulationAxis;

		[Token(Token = "0x170007A9")]
		public abstract Vector3 Extents
		{
			[Token(Token = "0x6002BAF")]
			get;
			[Token(Token = "0x6002BB0")]
			set;
		}

		[Token(Token = "0x170007AA")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1A460CC", Offset = "0x1A460CC", VA = "0x1A460CC", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x1A46110", Offset = "0x1A46110", VA = "0x1A46110", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x170007AB")]
		public Guides.State SaveState
		{
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x1A4628C", Offset = "0x1A4628C", VA = "0x1A4628C")]
			set
			{
			}
		}

		[Token(Token = "0x170007AC")]
		public StencilType Type
		{
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1A4733C", Offset = "0x1A4733C", VA = "0x1A4733C")]
			get
			{
				return default(StencilType);
			}
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x1A46114", Offset = "0x1A46114", VA = "0x1A46114")]
		public Guides.State GetSaveState(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6002BB5")]
		protected abstract Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside);

		[Token(Token = "0x6002BB6")]
		protected abstract void RegisterHighlightForSpecificAxis(Axis highlightAxis);

		[Token(Token = "0x6002BB7")]
		public abstract override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent);

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x1A43234", Offset = "0x1A43234", VA = "0x1A43234", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x1A46368", Offset = "0x1A46368", VA = "0x1A46368", Slot = "21")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x1A46AC4", Offset = "0x1A46AC4", VA = "0x1A46AC4", Slot = "69")]
		public virtual void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x1A46B24", Offset = "0x1A46B24", VA = "0x1A46B24", Slot = "54")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x1A46B30", Offset = "0x1A46B30", VA = "0x1A46B30", Slot = "52")]
		protected override void OnUserBeginTwoHandGrab(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInObject)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x1A46C20", Offset = "0x1A46C20", VA = "0x1A46C20", Slot = "53")]
		protected override void OnUserEndTwoHandGrab()
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x1A46C3C", Offset = "0x1A46C3C", VA = "0x1A46C3C", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x1A46D88", Offset = "0x1A46D88", VA = "0x1A46D88", Slot = "22")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x1A46D98", Offset = "0x1A46D98", VA = "0x1A46D98", Slot = "70")]
		public virtual void SetInUse(bool bInUse)
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x1A46D1C", Offset = "0x1A46D1C", VA = "0x1A46D1C")]
		public void RefreshVisibility(bool bStencilDisabled)
		{
		}

		[MethodImpl(64)]
		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x1A46EE0", Offset = "0x1A46EE0", VA = "0x1A46EE0")]
		public void AdjustLift(float fDistance_CS)
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x1A47294", Offset = "0x1A47294", VA = "0x1A47294", Slot = "71")]
		protected virtual void UpdateScale()
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x1A47320", Offset = "0x1A47320", VA = "0x1A47320", Slot = "55")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x1A47328", Offset = "0x1A47328", VA = "0x1A47328", Slot = "56")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x1A47344", Offset = "0x1A47344", VA = "0x1A47344")]
		public static void FromGuideIndex(Guides guide)
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x1A441B4", Offset = "0x1A441B4", VA = "0x1A441B4")]
		protected void UpdateMaterialScale()
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x1A4765C", Offset = "0x1A4765C", VA = "0x1A4765C", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x1A476A4", Offset = "0x1A476A4", VA = "0x1A476A4", Slot = "72")]
		protected virtual void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x1A47730", Offset = "0x1A47730", VA = "0x1A47730", Slot = "50")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x1A477A0", Offset = "0x1A477A0", VA = "0x1A477A0", Slot = "51")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x1A4780C", Offset = "0x1A4780C", VA = "0x1A4780C", Slot = "34")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x1A47A68", Offset = "0x1A47A68", VA = "0x1A47A68", Slot = "63")]
		public override void RestoreGameObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x1A47BB4", Offset = "0x1A47BB4", VA = "0x1A47BB4", Slot = "32")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x1A443AC", Offset = "0x1A443AC", VA = "0x1A443AC")]
		protected StencilWidget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066B")]
	public class GuideBeam
	{
		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Beam;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SymmetryWidget.BeamDirection m_Direction;

		[NonSerialized]
		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_BeamRenderer;

		[NonSerialized]
		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Offset;

		[NonSerialized]
		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_BaseScale;

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x1A47D68", Offset = "0x1A47D68", VA = "0x1A47D68")]
		public GuideBeam()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class SymmetryWidget : GrabWidget
	{
		[Token(Token = "0x200066D")]
		public enum BeamDirection
		{
			[Token(Token = "0x4002866")]
			Up,
			[Token(Token = "0x4002867")]
			Down,
			[Token(Token = "0x4002868")]
			Left,
			[Token(Token = "0x4002869")]
			Right,
			[Token(Token = "0x400286A")]
			Front,
			[Token(Token = "0x400286B")]
			Back
		}

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Renderer m_LeftRightMesh;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private TextMeshPro m_TitleText;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private GameObject m_HintText;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GrabWidgetHome m_Home;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private GuideBeam[] m_GuideBeams;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private float m_GuideBeamLength;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float m_GuideBeamShowRatio;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Color m_SnapColor;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private float m_SnapOrientationSpeed;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float m_SnapAngleXZPlane;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float m_SnapXZPlaneStickyAmount;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float m_SnapQuantizeAmount;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float m_SnapStickyAngle;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		private float m_JumpToUserControllerOffsetDistance;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private float m_JumpToUserControllerYOffset;

		[Token(Token = "0x170007AD")]
		public Plane ReflectionPlane
		{
			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x1A47D70", Offset = "0x1A47D70", VA = "0x1A47D70")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x170007AE")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x1A47E04", Offset = "0x1A47E04", VA = "0x1A47E04", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0x1A47E10", Offset = "0x1A47E10", VA = "0x1A47E10", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x1A47EAC", Offset = "0x1A47EAC", VA = "0x1A47EAC", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x1A480CC", Offset = "0x1A480CC", VA = "0x1A480CC")]
		public void SetMode(PointerManager.SymmetryMode rMode)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x1A481DC", Offset = "0x1A481DC", VA = "0x1A481DC", Slot = "29")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x1A48250", Offset = "0x1A48250", VA = "0x1A48250", Slot = "49")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x1A48BC0", Offset = "0x1A48BC0", VA = "0x1A48BC0", Slot = "27")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x1A496B4", Offset = "0x1A496B4", VA = "0x1A496B4", Slot = "33")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x1A48AF4", Offset = "0x1A48AF4", VA = "0x1A48AF4")]
		private Vector3 GetBeamDirection(BeamDirection rDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x1A497A0", Offset = "0x1A497A0", VA = "0x1A497A0", Slot = "50")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x1A497E8", Offset = "0x1A497E8", VA = "0x1A497E8", Slot = "51")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x1A49964", Offset = "0x1A49964", VA = "0x1A49964")]
		public Mirror ToMirror()
		{
			return null;
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0x1A49A20", Offset = "0x1A49A20", VA = "0x1A49A20")]
		public void FromMirror(Mirror data)
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x1A49840", Offset = "0x1A49840", VA = "0x1A49840")]
		public void ResetToHome()
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x1A49AEC", Offset = "0x1A49AEC", VA = "0x1A49AEC")]
		public void BringToUser()
		{
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x1A49EA4", Offset = "0x1A49EA4", VA = "0x1A49EA4", Slot = "20")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x1A49F40", Offset = "0x1A49F40", VA = "0x1A49F40")]
		public SymmetryWidget()
		{
		}
	}
	[Token(Token = "0x200066E")]
	public class VideoWidget : Media2dWidget
	{
		[Token(Token = "0x200066F")]
		private class VideoState
		{
			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Paused;

			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Volume;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float? Time;

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x1A4A3B8", Offset = "0x1A4A3B8", VA = "0x1A4A3B8")]
			public VideoState()
			{
			}
		}

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private ReferenceVideo m_Video;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private VideoState m_InitialState;

		[Token(Token = "0x170007AF")]
		public ReferenceVideo Video
		{
			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0x1A49FB4", Offset = "0x1A49FB4", VA = "0x1A49FB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B0")]
		public ReferenceVideo.Controller VideoController
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x1A49FBC", Offset = "0x1A49FBC", VA = "0x1A49FBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0x1A49FC4", Offset = "0x1A49FC4", VA = "0x1A49FC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170007B1")]
		public override float? AspectRatio
		{
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0x1A4A22C", Offset = "0x1A4A22C", VA = "0x1A4A22C", Slot = "67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x1A49FCC", Offset = "0x1A49FCC", VA = "0x1A49FCC")]
		public void SetVideo(ReferenceVideo video)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x1A4A298", Offset = "0x1A4A298", VA = "0x1A4A298", Slot = "42")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x1A4A2B0", Offset = "0x1A4A2B0", VA = "0x1A4A2B0", Slot = "22")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x1A4A2C0", Offset = "0x1A4A2C0", VA = "0x1A4A2C0", Slot = "43")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x1A4A3C0", Offset = "0x1A4A3C0", VA = "0x1A4A3C0", Slot = "48")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x1A4A160", Offset = "0x1A4A160", VA = "0x1A4A160")]
		private void Play()
		{
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x1A4A3EC", Offset = "0x1A4A3EC", VA = "0x1A4A3EC")]
		private void OnVideoInitialized()
		{
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x1A4A4E0", Offset = "0x1A4A4E0", VA = "0x1A4A4E0")]
		public static void FromTiltVideo(TiltVideo tiltVideo)
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x1A4AA08", Offset = "0x1A4AA08", VA = "0x1A4AA08", Slot = "21")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x1A4AC70", Offset = "0x1A4AC70", VA = "0x1A4AC70", Slot = "33")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x1A4ACBC", Offset = "0x1A4ACBC", VA = "0x1A4ACBC", Slot = "66")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x1A4AD24", Offset = "0x1A4AD24", VA = "0x1A4AD24")]
		public VideoWidget()
		{
		}
	}
	[Token(Token = "0x2000670")]
	public class WrappedStream : Stream
	{
		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream m_wrapped;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_ownsStream;

		[Token(Token = "0x170007B2")]
		public override bool CanRead
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x1A4AE1C", Offset = "0x1A4AE1C", VA = "0x1A4AE1C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B3")]
		public override bool CanSeek
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x1A4AE3C", Offset = "0x1A4AE3C", VA = "0x1A4AE3C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B4")]
		public override bool CanWrite
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x1A4AE5C", Offset = "0x1A4AE5C", VA = "0x1A4AE5C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B5")]
		public override long Length
		{
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x1A4AEA0", Offset = "0x1A4AEA0", VA = "0x1A4AEA0", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170007B6")]
		public override long Position
		{
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x1A4AEC0", Offset = "0x1A4AEC0", VA = "0x1A4AEC0", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0x1A4AEE0", Offset = "0x1A4AEE0", VA = "0x1A4AEE0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x1A4AD40", Offset = "0x1A4AD40", VA = "0x1A4AD40")]
		public void SetWrapped(Stream wrapped, bool ownsStream)
		{
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0x1A4AD50", Offset = "0x1A4AD50", VA = "0x1A4AD50", Slot = "20")]
		public override void Close()
		{
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0x1A4AD8C", Offset = "0x1A4AD8C", VA = "0x1A4AD8C", Slot = "34")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x1A4ADB0", Offset = "0x1A4ADB0", VA = "0x1A4ADB0", Slot = "36")]
		public override int ReadByte()
		{
			return default(int);
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0x1A4ADD4", Offset = "0x1A4ADD4", VA = "0x1A4ADD4", Slot = "37")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x1A4ADF8", Offset = "0x1A4ADF8", VA = "0x1A4ADF8", Slot = "39")]
		public override void WriteByte(byte value)
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x1A4AE7C", Offset = "0x1A4AE7C", VA = "0x1A4AE7C", Slot = "22")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0x1A4AF04", Offset = "0x1A4AF04", VA = "0x1A4AF04", Slot = "32")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0x1A4AF28", Offset = "0x1A4AF28", VA = "0x1A4AF28", Slot = "33")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0x1A4AF4C", Offset = "0x1A4AF4C", VA = "0x1A4AF4C")]
		public WrappedStream()
		{
		}
	}
	[Token(Token = "0x2000671")]
	public class YouTubeLiveChat : BaseChatScript
	{
		[Token(Token = "0x2000672")]
		private enum ConnectionState
		{
			[Token(Token = "0x400287D")]
			Connect_Start,
			[Token(Token = "0x400287E")]
			OK,
			[Token(Token = "0x400287F")]
			Failed_NoChannel,
			[Token(Token = "0x4002880")]
			Failed_NoVideoID,
			[Token(Token = "0x4002881")]
			Failed_NoChatID,
			[Token(Token = "0x4002882")]
			Failed_NoMessages
		}

		[Token(Token = "0x2000673")]
		[CompilerGenerated]
		private sealed class <GetActiveLiveChatIDForChannel>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTubeLiveChat <>4__this;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <videoIDRequest>5__2;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <chatIDRequest>5__3;

			[Token(Token = "0x170007B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C14")]
				[Address(RVA = "0x1A4BC7C", Offset = "0x1A4BC7C", VA = "0x1A4BC7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C16")]
				[Address(RVA = "0x1A4BCC4", Offset = "0x1A4BCC4", VA = "0x1A4BCC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x1A4B50C", Offset = "0x1A4B50C", VA = "0x1A4B50C")]
			[DebuggerHidden]
			public <GetActiveLiveChatIDForChannel>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x1A4B56C", Offset = "0x1A4B56C", VA = "0x1A4B56C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x1A4B570", Offset = "0x1A4B570", VA = "0x1A4B570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0x1A4BC84", Offset = "0x1A4BC84", VA = "0x1A4BC84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000674")]
		[CompilerGenerated]
		private sealed class <GetMessageList>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTubeLiveChat <>4__this;

			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <messagesRequest>5__2;

			[Token(Token = "0x170007BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C1A")]
				[Address(RVA = "0x1A4C594", Offset = "0x1A4C594", VA = "0x1A4C594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1C")]
				[Address(RVA = "0x1A4C5DC", Offset = "0x1A4C5DC", VA = "0x1A4C5DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0x1A4B534", Offset = "0x1A4B534", VA = "0x1A4B534")]
			[DebuggerHidden]
			public <GetMessageList>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x1A4BCCC", Offset = "0x1A4BCCC", VA = "0x1A4BCCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x1A4BCD0", Offset = "0x1A4BCD0", VA = "0x1A4BCD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x1A4C59C", Offset = "0x1A4C59C", VA = "0x1A4C59C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_RequestMessagesInterval;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_RequestMessagesCountdown;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_ChannelID;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_VideoId;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_ActiveLiveChatId;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_NextPageToken;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_OutGatheringMessages;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private ConnectionState m_ConnectionState;

		[Token(Token = "0x170007B7")]
		private static string kYouTubeApiKey
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x1A4AFA4", Offset = "0x1A4AFA4", VA = "0x1A4AFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x1A4AFFC", Offset = "0x1A4AFFC", VA = "0x1A4AFFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x1A4B098", Offset = "0x1A4B098", VA = "0x1A4B098")]
		private void ConnectionFailed(ConnectionState reason)
		{
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x1A4B3A0", Offset = "0x1A4B3A0", VA = "0x1A4B3A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0x1A4B43C", Offset = "0x1A4B43C", VA = "0x1A4B43C")]
		[IteratorStateMachine(typeof(<GetActiveLiveChatIDForChannel>d__14))]
		private IEnumerator GetActiveLiveChatIDForChannel()
		{
			return null;
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x1A4B4A4", Offset = "0x1A4B4A4", VA = "0x1A4B4A4")]
		[IteratorStateMachine(typeof(<GetMessageList>d__15))]
		private IEnumerator GetMessageList()
		{
			return null;
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0x1A4B55C", Offset = "0x1A4B55C", VA = "0x1A4B55C")]
		public YouTubeLiveChat()
		{
		}
	}
	[Token(Token = "0x2000675")]
	public sealed class ZipOutputStreamWrapper_SharpZipLib : WrappedStream
	{
		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICSharpCode.SharpZipLib.Zip.ZipOutputStream m_wrappedZip;

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x1A4C5E4", Offset = "0x1A4C5E4", VA = "0x1A4C5E4")]
		public ZipOutputStreamWrapper_SharpZipLib(ICSharpCode.SharpZipLib.Zip.ZipOutputStream wrapped, ICSharpCode.SharpZipLib.Zip.ZipEntry entry)
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x1A4C628", Offset = "0x1A4C628", VA = "0x1A4C628", Slot = "20")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public sealed class ZipOutputStreamWrapper_DotNetZip : WrappedStream
	{
		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0x1A4C650", Offset = "0x1A4C650", VA = "0x1A4C650")]
		public ZipOutputStreamWrapper_DotNetZip(Ionic.Zip.ZipOutputStream wrapped)
		{
		}
	}
	[Token(Token = "0x2000677")]
	public sealed class ZipSubfileReader_SharpZipLib : WrappedStream
	{
		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICSharpCode.SharpZipLib.Zip.ZipFile m_file;

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0x1A4C678", Offset = "0x1A4C678", VA = "0x1A4C678")]
		public ZipSubfileReader_SharpZipLib(string zipPath, string subPath)
		{
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x1A4C7E0", Offset = "0x1A4C7E0", VA = "0x1A4C7E0", Slot = "20")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public sealed class ZipSubfileReader_DotNetZip : WrappedStream
	{
		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Ionic.Zip.ZipFile m_file;

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x1A4C808", Offset = "0x1A4C808", VA = "0x1A4C808")]
		public ZipSubfileReader_DotNetZip(string zipPath, string subPath)
		{
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x1A4C968", Offset = "0x1A4C968", VA = "0x1A4C968", Slot = "20")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public static class MathEllipsoidEberly
	{
		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x1A4C990", Offset = "0x1A4C990", VA = "0x1A4C990")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc, Vector3 point, int numIters = 20)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0x1A4CB54", Offset = "0x1A4CB54", VA = "0x1A4CB54")]
		private static Matrix4x4 CreateShuffleMatrix(Vector3 unsorted)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0x1A4CCE0", Offset = "0x1A4CCE0", VA = "0x1A4CCE0")]
		private static Matrix4x4 CreateFlipMatrix(Vector3 maybeNegative)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x1A4D1E8", Offset = "0x1A4D1E8", VA = "0x1A4D1E8")]
		private static double Sqr(double x)
		{
			return default(double);
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x1A4D1F0", Offset = "0x1A4D1F0", VA = "0x1A4D1F0")]
		private static double MaxAbs(double v0, double v1, double v2)
		{
			return default(double);
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x1A4D274", Offset = "0x1A4D274", VA = "0x1A4D274")]
		private static double RobustLength(double v0, double v1)
		{
			return default(double);
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x1A4D28C", Offset = "0x1A4D28C", VA = "0x1A4D28C")]
		private static double RobustLength(double v0, double v1, double v2)
		{
			return default(double);
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x1A4D334", Offset = "0x1A4D334", VA = "0x1A4D334")]
		private static double GetRoot(double r0, double z0, double z1, double g, int numIters)
		{
			return default(double);
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0x1A4D404", Offset = "0x1A4D404", VA = "0x1A4D404")]
		private static (double, double, double) DistancePointEllipse(double e0, double e1, double y0, double y1, int numIters)
		{
			return default((double, double, double));
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x1A4D5CC", Offset = "0x1A4D5CC", VA = "0x1A4D5CC")]
		private static double GetRoot(double r0, double r1, double z0, double z1, double z2, double g, int numIters)
		{
			return default(double);
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0x1A4CE1C", Offset = "0x1A4CE1C", VA = "0x1A4CE1C")]
		private static (double, double, double, double) DistancePointEllipsoid(double e0, double e1, double e2, double y0, double y1, double y2, int numIters)
		{
			return default((double, double, double, double));
		}
	}
	[Token(Token = "0x200067A")]
	public class JPEGMarkerFoundException : Exception
	{
		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public byte Marker;

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x1A4D6BC", Offset = "0x1A4D6BC", VA = "0x1A4D6BC")]
		public JPEGMarkerFoundException(byte marker)
		{
		}
	}
	[Token(Token = "0x200067B")]
	public class JPEGBinaryReader : BinaryReader
	{
		[Token(Token = "0x4002890")]
		private const byte kJpegMarkerXFF = byte.MaxValue;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		private byte marker;

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x1A4D728", Offset = "0x1A4D728", VA = "0x1A4D728")]
		public JPEGBinaryReader(Stream input)
		{
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x1A4D730", Offset = "0x1A4D730", VA = "0x1A4D730")]
		public byte GetNextMarker()
		{
			return default(byte);
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x1A4D7C8", Offset = "0x1A4D7C8", VA = "0x1A4D7C8")]
		protected byte ReadJpegByte()
		{
			return default(byte);
		}
	}
	[Token(Token = "0x200067C")]
	public static class MathEllipsoidAnton
	{
		[Token(Token = "0x200067D")]
		public struct Stereo
		{
			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double x;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double y;

			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0x1A4DC14", Offset = "0x1A4DC14", VA = "0x1A4DC14")]
			public static Stereo FromCartesian(ComponentwiseVectors.vec3 cartesian, ComponentwiseVectors.vec3 abc)
			{
				return default(Stereo);
			}

			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x1A4E5D4", Offset = "0x1A4E5D4", VA = "0x1A4E5D4")]
			public static Stereo operator *(double s, Stereo uv)
			{
				return default(Stereo);
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x1A4E5E4", Offset = "0x1A4E5E4", VA = "0x1A4E5E4")]
			public static Stereo operator -(Stereo a, Stereo b)
			{
				return default(Stereo);
			}

			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x1A4DE80", Offset = "0x1A4DE80", VA = "0x1A4DE80")]
			public ComponentwiseVectors.vec3 ToCartesian(ComponentwiseVectors.vec3 abc)
			{
				return default(ComponentwiseVectors.vec3);
			}
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x1A4D868", Offset = "0x1A4D868", VA = "0x1A4D868")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc_, Vector3 p_, int numIters = 30, double threshold = 0.0)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x1A4DF14", Offset = "0x1A4DF14", VA = "0x1A4DF14")]
		private static double QuadraticPositive(double a, double b, double c)
		{
			return default(double);
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x1A4DFEC", Offset = "0x1A4DFEC", VA = "0x1A4DFEC")]
		private static ComponentwiseVectors.vec3 GuessProjectOnSphere(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x1A4E034", Offset = "0x1A4E034", VA = "0x1A4E034")]
		private static ComponentwiseVectors.vec3 GuessOrthogonal(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x1A4E224", Offset = "0x1A4E224", VA = "0x1A4E224")]
		private static ComponentwiseVectors.vec3 GuessDiagonal2d(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0x1A4E464", Offset = "0x1A4E464", VA = "0x1A4E464")]
		private static ComponentwiseVectors.vec3 GuessDiagonal3d(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x1A4DA6C", Offset = "0x1A4DA6C", VA = "0x1A4DA6C")]
		private static ComponentwiseVectors.vec3 InitialGuessClosestPointToEllipsoid(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0x1A4DC34", Offset = "0x1A4DC34", VA = "0x1A4DC34")]
		private static Stereo Iterate_Stereographic(Stereo uv, ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(Stereo);
		}
	}
}
namespace TiltBrush.LachlanSleight
{
	[Token(Token = "0x200067F")]
	public class FlyTool : BaseTool
	{
		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _toolDirectionIndicator;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_LockToController;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_BrushController;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[Range(0f, 2f)]
		private float m_MaxSpeed;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[Range(0f, 18f)]
		private float m_DampingUp;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 18f)]
		[SerializeField]
		private float m_DampingDown;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Range(0f, 1f)]
		private float m_StopThresholdSpeed;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Armed;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_Velocity;

		[Token(Token = "0x170007BC")]
		private float BoundsRadius
		{
			[Token(Token = "0x6002C43")]
			[Address(RVA = "0x1A4E758", Offset = "0x1A4E758", VA = "0x1A4E758")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x1A4E5F0", Offset = "0x1A4E5F0", VA = "0x1A4E5F0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x1A4E66C", Offset = "0x1A4E66C", VA = "0x1A4E66C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x1A4E7AC", Offset = "0x1A4E7AC", VA = "0x1A4E7AC", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x1A4E7BC", Offset = "0x1A4E7BC", VA = "0x1A4E7BC", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x1A4E7EC", Offset = "0x1A4E7EC", VA = "0x1A4E7EC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x1A4ED18", Offset = "0x1A4ED18", VA = "0x1A4ED18")]
		private void ApplyVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x1A4EE68", Offset = "0x1A4EE68", VA = "0x1A4EE68")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x1A4EFEC", Offset = "0x1A4EFEC", VA = "0x1A4EFEC", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x1A4EE98", Offset = "0x1A4EE98", VA = "0x1A4EE98")]
		private void UpdateTransformsFromControllers()
		{
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x1A4F008", Offset = "0x1A4F008", VA = "0x1A4F008")]
		public FlyTool()
		{
		}
	}
}
namespace TiltBrush.Layers
{
	[Token(Token = "0x2000680")]
	public class AddLayerButton : BaseButton
	{
		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x2484300", Offset = "0x2484300", VA = "0x2484300", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x2484454", Offset = "0x2484454", VA = "0x2484454")]
		public AddLayerButton()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class ClearLayerContentsButton : BaseButton
	{
		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x248445C", Offset = "0x248445C", VA = "0x248445C", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x24845A0", Offset = "0x24845A0", VA = "0x24845A0")]
		public ClearLayerContentsButton()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class DeleteLayerButton : OptionButton
	{
		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x24845A8", Offset = "0x24845A8", VA = "0x24845A8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x248475C", Offset = "0x248475C", VA = "0x248475C")]
		public DeleteLayerButton()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public class FocusLayerButton : ToggleButton
	{
		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x2484764", Offset = "0x2484764", VA = "0x2484764")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0x2484968", Offset = "0x2484968", VA = "0x2484968", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x2484A98", Offset = "0x2484A98", VA = "0x2484A98", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0x2484C08", Offset = "0x2484C08", VA = "0x2484C08")]
		public void SyncButtonStateWithWidget(GameObject activeLayerWidget)
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x2484CDC", Offset = "0x2484CDC", VA = "0x2484CDC")]
		public FocusLayerButton()
		{
		}
	}
	[Token(Token = "0x2000684")]
	public class LayerUI_Manager : MonoBehaviour
	{
		[Token(Token = "0x2000685")]
		public delegate void OnActiveSceneChanged(GameObject widget);

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_Widgets;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<CanvasScript> m_Canvases;

		[Token(Token = "0x1400004C")]
		public static event OnActiveSceneChanged onActiveSceneChanged
		{
			[Token(Token = "0x6002C57")]
			[Address(RVA = "0x24848B0", Offset = "0x24848B0", VA = "0x24848B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0x24849E0", Offset = "0x24849E0", VA = "0x24849E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x2484CEC", Offset = "0x2484CEC", VA = "0x2484CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0x2484CF0", Offset = "0x2484CF0", VA = "0x2484CF0")]
		private void ResetUI()
		{
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x24850F0", Offset = "0x24850F0", VA = "0x24850F0")]
		private void OnLayerCanvasesUpdate()
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0x24850F4", Offset = "0x24850F4", VA = "0x24850F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0x2485208", Offset = "0x2485208", VA = "0x2485208")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0x2484638", Offset = "0x2484638", VA = "0x2484638")]
		public void DeleteLayer(GameObject widget)
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x2485398", Offset = "0x2485398", VA = "0x2485398")]
		public void SquashLayer(GameObject widget)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x24844EC", Offset = "0x24844EC", VA = "0x24844EC")]
		public void ClearLayerContents(GameObject widget)
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x24843C0", Offset = "0x24843C0", VA = "0x24843C0")]
		public void AddLayer()
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x24854B4", Offset = "0x24854B4", VA = "0x24854B4")]
		public void ToggleVisibility(GameObject widget)
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x2484B50", Offset = "0x2484B50", VA = "0x2484B50")]
		public void SetActiveLayer(GameObject widget)
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x24854E0", Offset = "0x24854E0", VA = "0x24854E0")]
		private void ActiveSceneChanged(CanvasScript prev, CanvasScript current)
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x2485314", Offset = "0x2485314", VA = "0x2485314")]
		private CanvasScript GetCanvasFromWidget(GameObject widget)
		{
			return null;
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x248556C", Offset = "0x248556C", VA = "0x248556C")]
		private GameObject GetWidgetFromCanvas(CanvasScript canvas)
		{
			return null;
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x2485600", Offset = "0x2485600", VA = "0x2485600")]
		public void HandleCopySelectionToCurrentLayer()
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x24856E0", Offset = "0x24856E0", VA = "0x24856E0")]
		public LayerUI_Manager()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class SquashLayerButton : BaseButton
	{
		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0x2485728", Offset = "0x2485728", VA = "0x2485728", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x24857B8", Offset = "0x24857B8", VA = "0x24857B8")]
		public SquashLayerButton()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class ToggleButton : BaseButton
	{
		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[Header("State")]
		[SerializeField]
		protected bool activated;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[Header("Visual")]
		private Texture2D activatedButtonTexture;

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x2484B38", Offset = "0x2484B38", VA = "0x2484B38", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x24857C0", Offset = "0x24857C0", VA = "0x24857C0")]
		public void ToggleButtonActivation()
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x2484CA4", Offset = "0x2484CA4", VA = "0x2484CA4")]
		public void SetButtonActivation(bool active)
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x2484CE4", Offset = "0x2484CE4", VA = "0x2484CE4")]
		public ToggleButton()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class ToggleVisibilityLayerButton : ToggleButton
	{
		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x24857D8", Offset = "0x24857D8", VA = "0x24857D8", Slot = "39")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x2485878", Offset = "0x2485878", VA = "0x2485878")]
		public ToggleVisibilityLayerButton()
		{
		}
	}
}
