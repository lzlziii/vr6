using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using AudioTextSynchronizer;
using AudioTextSynchronizer.Core;
using BNG;
using DigitalOpus.MB.Core;
using DinoFracture;
using Google.ProtocolBuffers;
using Google.ProtocolBuffers.Collections;
using Gvr.Internal;
using Il2CppDummyDll;
using RenderHeads.Media.AVProVideo;
using Spine.Unity.Modules;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityStandardAssets.Utility;
using proto;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ActivatePoint : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointChecker;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1664B58", Offset = "0x1664B58", VA = "0x1664B58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1664B5C", Offset = "0x1664B5C", VA = "0x1664B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1664C58", Offset = "0x1664C58", VA = "0x1664C58")]
	public ActivatePoint()
	{
	}
}
[Token(Token = "0x2000003")]
public class ActivatePointCollider : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointerColliderActivateDecider;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool clawHand;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1664C60", Offset = "0x1664C60", VA = "0x1664C60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1664C64", Offset = "0x1664C64", VA = "0x1664C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1664C68", Offset = "0x1664C68", VA = "0x1664C68")]
	public ActivatePointCollider()
	{
	}
}
[Token(Token = "0x2000004")]
public class AddPointerColldier : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointerColliderPrefab;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pointerCollider;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointerColliderParent;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pointerColliderActivateDecider;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1664C70", Offset = "0x1664C70", VA = "0x1664C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x16650D0", Offset = "0x16650D0", VA = "0x16650D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x16650D4", Offset = "0x16650D4", VA = "0x16650D4")]
	public AddPointerColldier()
	{
	}
}
[Token(Token = "0x2000005")]
public class AdjustMenuHeight : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scene m_Scene;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x16650DC", Offset = "0x16650DC", VA = "0x16650DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x16650E0", Offset = "0x16650E0", VA = "0x16650E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x16650E4", Offset = "0x16650E4", VA = "0x16650E4")]
	public AdjustMenuHeight()
	{
	}
}
[Token(Token = "0x2000006")]
public class AlwaysFaceCam : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera m_VR_Camera;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cameraObject;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x16650EC", Offset = "0x16650EC", VA = "0x16650EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x16651D0", Offset = "0x16651D0", VA = "0x16651D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1665228", Offset = "0x1665228", VA = "0x1665228")]
	public AlwaysFaceCam()
	{
	}
}
[Token(Token = "0x2000007")]
public class ArcadeSoundSystem : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip gameMusic;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clipExplosion;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clipCollect1;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip clipCollect2;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip clipDeath;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clipStart;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clipBeatHighScore;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioAmb;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioExplosion;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioDeath;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioStart;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioBeatHighScore;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioCollect1;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource audioCollect2;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1678E48", Offset = "0x1678E48", VA = "0x1678E48")]
	public AudioSource AddAudio(AudioClip clip, bool loop, bool playAwake, float vol, bool spatialize, float spatialBlend)
	{
		return null;
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1678F60", Offset = "0x1678F60", VA = "0x1678F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x167908C", Offset = "0x167908C", VA = "0x167908C")]
	public ArcadeSoundSystem()
	{
	}
}
[Token(Token = "0x2000008")]
public class rotatecamera : MonoBehaviour
{
	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF18584", Offset = "0xF18584", VA = "0xF18584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF18588", Offset = "0xF18588", VA = "0xF18588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF185D8", Offset = "0xF185D8", VA = "0xF185D8")]
	public rotatecamera()
	{
	}
}
[Token(Token = "0x2000009")]
public class Dice : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	public const int MOUSE_LEFT_BUTTON = 0;

	[Token(Token = "0x400001A")]
	public const int MOUSE_RIGHT_BUTTON = 1;

	[Token(Token = "0x400001B")]
	public const int MOUSE_MIDDLE_BUTTON = 2;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rollSpeed;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rolling;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float rollTime;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ArrayList matNames;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ArrayList materials;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ArrayList rollQueue;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ArrayList allDice;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static ArrayList rollingDice;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x105CC90", Offset = "0x105CC90", VA = "0x105CC90")]
	public static GameObject prefab(string name, Vector3 position, Vector3 rotation, Vector3 scale, string mat)
	{
		return null;
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x105D000", Offset = "0x105D000", VA = "0x105D000")]
	public static Material material(string matName)
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x105D3C0", Offset = "0x105D3C0", VA = "0x105D3C0")]
	public static void debug(string txt)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x105D424", Offset = "0x105D424", VA = "0x105D424")]
	public static void Roll(string dice, string mat, Vector3 spawnPoint, Vector3 force)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x105D7E0", Offset = "0x105D7E0", VA = "0x105D7E0")]
	public static int Value(string dieType)
	{
		return default(int);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x105D96C", Offset = "0x105D96C", VA = "0x105D96C")]
	public static int Count(string dieType)
	{
		return default(int);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x105DADC", Offset = "0x105DADC", VA = "0x105DADC")]
	public static string AsString(string dieType)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x105DEF4", Offset = "0x105DEF4", VA = "0x105DEF4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x105E0DC", Offset = "0x105E0DC", VA = "0x105E0DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x105E46C", Offset = "0x105E46C", VA = "0x105E46C")]
	private bool IsRolling()
	{
		return default(bool);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x105E620", Offset = "0x105E620", VA = "0x105E620")]
	public Dice()
	{
	}
}
[Token(Token = "0x200000A")]
internal class RollingDie
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gameObject;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Die die;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string name;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string mat;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 spawnPoint;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 force;

	[Token(Token = "0x17000001")]
	public bool rolling
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xD9B020", Offset = "0xD9B020", VA = "0xD9B020")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000002")]
	public int value
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xD9B03C", Offset = "0xD9B03C", VA = "0xD9B03C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD9B058", Offset = "0xD9B058", VA = "0xD9B058")]
	public RollingDie(GameObject gameObject, string name, string mat, Vector3 spawnPoint, Vector3 force)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD9B1C4", Offset = "0xD9B1C4", VA = "0xD9B1C4")]
	public void ReRoll()
	{
	}
}
[Token(Token = "0x200000B")]
public class Die : MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int value;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Vector3 localHitNormalized;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float validMargin;

	[Token(Token = "0x17000003")]
	public bool rolling
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x105EA9C", Offset = "0x105EA9C", VA = "0x105EA9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000004")]
	protected bool localHit
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x105EB74", Offset = "0x105EB74", VA = "0x105EB74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x105ED9C", Offset = "0x105ED9C", VA = "0x105ED9C")]
	private void GetValue()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x105EEF0", Offset = "0x105EEF0", VA = "0x105EEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x105EECC", Offset = "0x105EECC", VA = "0x105EECC")]
	protected bool valid(float t, float v)
	{
		return default(bool);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x105EF30", Offset = "0x105EF30", VA = "0x105EF30", Slot = "4")]
	protected virtual Vector3 HitVector(int side)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x105EF38", Offset = "0x105EF38", VA = "0x105EF38")]
	public Die()
	{
	}
}
[Token(Token = "0x200000C")]
public class Die_d10 : Die
{
	[Token(Token = "0x600002D")]
	[Address(RVA = "0x105F034", Offset = "0x105F034", VA = "0x105F034", Slot = "4")]
	protected override Vector3 HitVector(int side)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x105F080", Offset = "0x105F080", VA = "0x105F080")]
	public Die_d10()
	{
	}
}
[Token(Token = "0x200000D")]
public class Die_d6 : Die
{
	[Token(Token = "0x600002F")]
	[Address(RVA = "0x105F094", Offset = "0x105F094", VA = "0x105F094", Slot = "4")]
	protected override Vector3 HitVector(int side)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x105F0E0", Offset = "0x105F0E0", VA = "0x105F0E0")]
	public Die_d6()
	{
	}
}
[Token(Token = "0x200000E")]
public class AppDemo : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	private const int MODE_GALLERY = 1;

	[Token(Token = "0x400002E")]
	private const int MODE_ROLL = 2;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int mode;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject nextCameraPosition;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject startCameraPosition;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject camRoll;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject camGallery;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cameraMovementSpeed;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float cameraMovement;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string galleryDie;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject galleryDieObject;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dragging;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 dragStart;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 dragStartAngle;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 dragLastAngle;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Rect rectGallerySelectBox;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect rectGallerySelect;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect rectModeSelect;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture txSelector;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject spawnPoint;

	[Token(Token = "0x17000005")]
	private string randomColor
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x16741C0", Offset = "0x16741C0", VA = "0x16741C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1673AC0", Offset = "0x1673AC0", VA = "0x1673AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1673C04", Offset = "0x1673C04", VA = "0x1673C04")]
	private void SetMode(int pMode)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x16742F8", Offset = "0x16742F8", VA = "0x16742F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x16743A8", Offset = "0x16743A8", VA = "0x16743A8")]
	private void MoveCamera()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1674550", Offset = "0x1674550", VA = "0x1674550")]
	private void UpdateGallery()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1675014", Offset = "0x1675014", VA = "0x1675014")]
	private Vector3 Force()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x16748D8", Offset = "0x16748D8", VA = "0x16748D8")]
	private void UpdateRoll()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1675168", Offset = "0x1675168", VA = "0x1675168")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1674F8C", Offset = "0x1674F8C", VA = "0x1674F8C")]
	private bool PointInRect(Vector2 p, Rect r)
	{
		return default(bool);
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1675948", Offset = "0x1675948", VA = "0x1675948")]
	private string CheckSelection(Rect r)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1674EEC", Offset = "0x1674EEC", VA = "0x1674EEC")]
	private Vector2 GuiMousePosition()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1673D9C", Offset = "0x1673D9C", VA = "0x1673D9C")]
	private void SetGalleryDie(string die)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1676234", Offset = "0x1676234", VA = "0x1676234")]
	public AppDemo()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA038", Offset = "0x7CA038")]
public class FractureOnInput : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode Key;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1454860", Offset = "0x1454860", VA = "0x1454860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x14548D4", Offset = "0x14548D4", VA = "0x14548D4")]
	public FractureOnInput()
	{
	}
}
[Token(Token = "0x2000010")]
public class Playsound : MonoBehaviour
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0x12FC82C", Offset = "0x12FC82C", VA = "0x12FC82C")]
	public void Clicky()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x12FC888", Offset = "0x12FC888", VA = "0x12FC888")]
	public Playsound()
	{
	}
}
[Token(Token = "0x2000011")]
public class Cat_Lite_Demo : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text camRotateCheck;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool camRotate;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x10C2FB0", Offset = "0x10C2FB0", VA = "0x10C2FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x10C2FB4", Offset = "0x10C2FB4", VA = "0x10C2FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x10C3080", Offset = "0x10C3080", VA = "0x10C3080")]
	public void CamRotate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x10C30E8", Offset = "0x10C30E8", VA = "0x10C30E8")]
	public Cat_Lite_Demo()
	{
	}
}
[Token(Token = "0x2000012")]
public class AutoDoor : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject audioChild;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip openSound;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip closeSound;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool inTrigger;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool doorOpen;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1114AE0", Offset = "0x1114AE0", VA = "0x1114AE0")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1114C50", Offset = "0x1114C50", VA = "0x1114C50")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1114D00", Offset = "0x1114D00", VA = "0x1114D00")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1114DAC", Offset = "0x1114DAC", VA = "0x1114DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1114DCC", Offset = "0x1114DCC", VA = "0x1114DCC")]
	public AutoDoor()
	{
	}
}
[Token(Token = "0x2000013")]
public class BasicDoor : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject audioChild;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip openSound;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip closeSound;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool inTrigger;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool doorOpen;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1119B64", Offset = "0x1119B64", VA = "0x1119B64")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1119CD4", Offset = "0x1119CD4", VA = "0x1119CD4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1119D84", Offset = "0x1119D84", VA = "0x1119D84")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1119E30", Offset = "0x1119E30", VA = "0x1119E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1119E9C", Offset = "0x1119E9C", VA = "0x1119E9C")]
	public BasicDoor()
	{
	}
}
[Token(Token = "0x2000014")]
public class DoubleAutoDoor : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject doorChild2;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audioChild;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip openSound;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip closeSound;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inTrigger;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool doorOpen;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1063D10", Offset = "0x1063D10", VA = "0x1063D10")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1063EC0", Offset = "0x1063EC0", VA = "0x1063EC0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1063F70", Offset = "0x1063F70", VA = "0x1063F70")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x106401C", Offset = "0x106401C", VA = "0x106401C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x106403C", Offset = "0x106403C", VA = "0x106403C")]
	public DoubleAutoDoor()
	{
	}
}
[Token(Token = "0x2000015")]
public class DoubleDoor : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject doorChild2;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audioChild;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip openSound;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip closeSound;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inTrigger;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool doorOpen;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1064044", Offset = "0x1064044", VA = "0x1064044")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10641F4", Offset = "0x10641F4", VA = "0x10641F4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10642A4", Offset = "0x10642A4", VA = "0x10642A4")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1064350", Offset = "0x1064350", VA = "0x1064350")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10643BC", Offset = "0x10643BC", VA = "0x10643BC")]
	public DoubleDoor()
	{
	}
}
[Token(Token = "0x2000016")]
public class Key : MonoBehaviour
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0x16A9E88", Offset = "0x16A9E88", VA = "0x16A9E88")]
	public Key()
	{
	}
}
[Token(Token = "0x2000017")]
public class Keyring : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip getKeySound;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float keyPickUpDistance;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Key> _keys;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x16AB6A8", Offset = "0x16AB6A8", VA = "0x16AB6A8")]
	public void AddKey(Key key)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x16AB790", Offset = "0x16AB790", VA = "0x16AB790")]
	public bool HasKey(Key key)
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x16AB7F4", Offset = "0x16AB7F4", VA = "0x16AB7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16AB978", Offset = "0x16AB978", VA = "0x16AB978")]
	public Keyring()
	{
	}
}
[Token(Token = "0x2000018")]
public class LockedDoor : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject audioChild;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Keyring keyRing;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Key requiredKey;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip openSound;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip closeSound;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip lockedSound;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip lockingSound;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool inTrigger;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool doorOpen;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool doorLocked;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x111CDDC", Offset = "0x111CDDC", VA = "0x111CDDC")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x111CFA4", Offset = "0x111CFA4", VA = "0x111CFA4")]
	public void toggleDoorLock(bool toggleLocked)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x111D084", Offset = "0x111D084", VA = "0x111D084")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x111D134", Offset = "0x111D134", VA = "0x111D134")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x111D1E0", Offset = "0x111D1E0", VA = "0x111D1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x111D27C", Offset = "0x111D27C", VA = "0x111D27C")]
	public LockedDoor()
	{
	}
}
[Token(Token = "0x2000019")]
public class TrapDoor : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorChild;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject audioChild;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip openSound;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip closeSound;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool doorOpen;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xDE6090", Offset = "0xDE6090", VA = "0xDE6090")]
	public void doorOpenClose()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xDE6200", Offset = "0xDE6200", VA = "0xDE6200")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xDE62C4", Offset = "0xDE62C4", VA = "0xDE62C4")]
	public TrapDoor()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA098", Offset = "0x7CA098")]
public class ReverseNormals : MonoBehaviour
{
	[Token(Token = "0x6000069")]
	[Address(RVA = "0x13072B0", Offset = "0x13072B0", VA = "0x13072B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1307540", Offset = "0x1307540", VA = "0x1307540")]
	public ReverseNormals()
	{
	}
}
[Token(Token = "0x200001B")]
public class randomParticleRotation : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool x;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool y;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool z;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF18414", Offset = "0xF18414", VA = "0xF18414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xF1857C", Offset = "0xF1857C", VA = "0xF1857C")]
	public randomParticleRotation()
	{
	}
}
[Token(Token = "0x200001C")]
public class rotation : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xF185E0", Offset = "0xF185E0", VA = "0xF185E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xF1863C", Offset = "0xF1863C", VA = "0xF1863C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xF18644", Offset = "0xF18644", VA = "0xF18644")]
	public void clickOn()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xF186A0", Offset = "0xF186A0", VA = "0xF186A0")]
	public void clickOff()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xF186A8", Offset = "0xF186A8", VA = "0xF186A8")]
	private void rotate()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xF186FC", Offset = "0xF186FC", VA = "0xF186FC")]
	public rotation()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA0F8", Offset = "0x7CA0F8")]
[ExecuteInEditMode]
public class Cable_Procedural_Simple : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer line;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform endPointTransform;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int pointsInLineRenderer;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float sagAmplitude;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float swayMultiplier;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float swayXMultiplier;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float swayYMultiplier;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float swayFrequency;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 vectorFromStartToEnd;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 sagDirection;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float swayValue;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10C1264", Offset = "0x10C1264", VA = "0x10C1264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10C1318", Offset = "0x10C1318", VA = "0x10C1318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10C131C", Offset = "0x10C131C", VA = "0x10C131C")]
	private void Animate()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x10C1684", Offset = "0x10C1684", VA = "0x10C1684")]
	public Cable_Procedural_Simple()
	{
	}
}
[Token(Token = "0x200001E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA168", Offset = "0x7CA168")]
public class Cable_Procedural_Static : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer line;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform endPointTransform;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int pointsInLineRenderer;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float sagAmplitude;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 vectorFromStartToEnd;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 sagDirection;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x10C16A8", Offset = "0x10C16A8", VA = "0x10C16A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10C174C", Offset = "0x10C174C", VA = "0x10C174C")]
	private void Animate()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10C19E4", Offset = "0x10C19E4", VA = "0x10C19E4")]
	public Cable_Procedural_Static()
	{
	}
}
[Token(Token = "0x200001F")]
public class Fan_Rotation : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x14512B4", Offset = "0x14512B4", VA = "0x14512B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x145130C", Offset = "0x145130C", VA = "0x145130C")]
	public Fan_Rotation()
	{
	}
}
[Token(Token = "0x2000020")]
public class AttachToDrawer : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool parentedToHand;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool parentedToDrawer;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool parentedToDrawer2;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToParent2;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToParent;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool newObjectToCheck;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject parentObject;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] puzzlePieces;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] pieceNumbers;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hasPieces;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x11114C8", Offset = "0x11114C8", VA = "0x11114C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x111161C", Offset = "0x111161C", VA = "0x111161C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x11116A4", Offset = "0x11116A4", VA = "0x11116A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1111A04", Offset = "0x1111A04", VA = "0x1111A04")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x11118D8", Offset = "0x11118D8", VA = "0x11118D8")]
	public static GameObject WhatToParent(GameObject theObject)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1111B74", Offset = "0x1111B74", VA = "0x1111B74")]
	public static GameObject FindParentWithScript(GameObject childObject)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x11117BC", Offset = "0x11117BC", VA = "0x11117BC")]
	public static bool FindParentIsDrawer(GameObject childObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1111E1C", Offset = "0x1111E1C", VA = "0x1111E1C")]
	public static bool FindParentIsHand(GameObject childObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1111F88", Offset = "0x1111F88", VA = "0x1111F88")]
	public AttachToDrawer()
	{
	}
}
[Token(Token = "0x2000021")]
public class AudioAdjust : MonoBehaviour
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float audioMultiplier;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup phoneMixer;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup keyboardMixer;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1113724", Offset = "0x1113724", VA = "0x1113724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1113728", Offset = "0x1113728", VA = "0x1113728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x11138B8", Offset = "0x11138B8", VA = "0x11138B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x11138BC", Offset = "0x11138BC", VA = "0x11138BC")]
	public AudioAdjust()
	{
	}
}
[Token(Token = "0x2000022")]
public class AutoSaveEnd : MonoBehaviour
{
	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA1D8", Offset = "0x7CA1D8")]
	private sealed class <SaveRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000006")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0xF1B13C", Offset = "0xF1B13C", VA = "0xF1B13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000007")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0xF1B184", Offset = "0xF1B184", VA = "0xF1B184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0xF1B010", Offset = "0xF1B010", VA = "0xF1B010")]
		[DebuggerHidden]
		public <SaveRoutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0xF1B03C", Offset = "0xF1B03C", VA = "0xF1B03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0xF1B040", Offset = "0xF1B040", VA = "0xF1B040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0xF1B144", Offset = "0xF1B144", VA = "0xF1B144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x11164BC", Offset = "0x11164BC", VA = "0x11164BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1116544", Offset = "0x1116544", VA = "0x1116544")]
	private void Update()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x11164E8", Offset = "0x11164E8", VA = "0x11164E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DCE8C", Offset = "0x7DCE8C")]
	private IEnumerator SaveRoutine()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1116548", Offset = "0x1116548", VA = "0x1116548")]
	public AutoSaveEnd()
	{
	}
}
[Token(Token = "0x2000024")]
public class FixNonUniformScale : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool running;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x14524A0", Offset = "0x14524A0", VA = "0x14524A0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1452528", Offset = "0x1452528", VA = "0x1452528")]
	public void MakeUniform()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x14528F4", Offset = "0x14528F4", VA = "0x14528F4")]
	public FixNonUniformScale()
	{
	}
}
[Token(Token = "0x2000025")]
public class BackSpace : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAndSManager sandsManager;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thisLetter;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thisLetterAudio;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handTouching;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject textForScreen;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text actualText;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1118280", Offset = "0x1118280", VA = "0x1118280")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x11184F0", Offset = "0x11184F0", VA = "0x11184F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x111854C", Offset = "0x111854C", VA = "0x111854C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1118550", Offset = "0x1118550", VA = "0x1118550")]
	public BackSpace()
	{
	}
}
[Token(Token = "0x2000026")]
public class BalloonManager : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] balloonTracker;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x11192FC", Offset = "0x11192FC", VA = "0x11192FC")]
	public bool BalloonCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x11193A0", Offset = "0x11193A0", VA = "0x11193A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x11193A4", Offset = "0x11193A4", VA = "0x11193A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x11193A8", Offset = "0x11193A8", VA = "0x11193A8")]
	public BalloonManager()
	{
	}
}
[Token(Token = "0x2000027")]
public class Bomb : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thisBombsSpeed;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arcadeModel;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x111A590", Offset = "0x111A590", VA = "0x111A590")]
	private void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x111A688", Offset = "0x111A688", VA = "0x111A688")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x111A8EC", Offset = "0x111A8EC", VA = "0x111A8EC")]
	private void OnBang()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x111A908", Offset = "0x111A908", VA = "0x111A908")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x111AA14", Offset = "0x111AA14", VA = "0x111AA14")]
	public Bomb()
	{
	}
}
[Token(Token = "0x2000028")]
public class BoomBoxManager : MonoBehaviour
{
	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA1E8", Offset = "0x7CA1E8")]
	private sealed class <RotateObject>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoomBoxManager <>4__this;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion start;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion end;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <endTime>5__2;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B6")]
			[Address(RVA = "0xF1B75C", Offset = "0xF1B75C", VA = "0xF1B75C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B8")]
			[Address(RVA = "0xF1B7A4", Offset = "0xF1B7A4", VA = "0xF1B7A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xF1B308", Offset = "0xF1B308", VA = "0xF1B308")]
		[DebuggerHidden]
		public <RotateObject>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xF1B334", Offset = "0xF1B334", VA = "0xF1B334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xF1B338", Offset = "0xF1B338", VA = "0xF1B338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xF1B764", Offset = "0xF1B764", VA = "0xF1B764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA1F8", Offset = "0x7CA1F8")]
	private sealed class <ContinuousRotation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoomBoxManager <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0xF1B2B8", Offset = "0xF1B2B8", VA = "0xF1B2B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BE")]
			[Address(RVA = "0xF1B300", Offset = "0xF1B300", VA = "0xF1B300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xF1B18C", Offset = "0xF1B18C", VA = "0xF1B18C")]
		[DebuggerHidden]
		public <ContinuousRotation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xF1B1B8", Offset = "0xF1B1B8", VA = "0xF1B1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xF1B1BC", Offset = "0xF1B1BC", VA = "0xF1B1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xF1B2C0", Offset = "0xF1B2C0", VA = "0xF1B2C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA208", Offset = "0x7CA208")]
	private sealed class <playButtonSound>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoomBoxManager <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0xF1BB28", Offset = "0xF1BB28", VA = "0xF1BB28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C4")]
			[Address(RVA = "0xF1BB70", Offset = "0xF1BB70", VA = "0xF1BB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xF1B998", Offset = "0xF1B998", VA = "0xF1B998")]
		[DebuggerHidden]
		public <playButtonSound>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xF1B9C4", Offset = "0xF1B9C4", VA = "0xF1B9C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xF1B9C8", Offset = "0xF1B9C8", VA = "0xF1B9C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xF1BB30", Offset = "0xF1BB30", VA = "0xF1BB30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA218", Offset = "0x7CA218")]
	private sealed class <ffButtonSound>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoomBoxManager <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0xF1B948", Offset = "0xF1B948", VA = "0xF1B948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0xF1B990", Offset = "0xF1B990", VA = "0xF1B990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xF1B7AC", Offset = "0xF1B7AC", VA = "0xF1B7AC")]
		[DebuggerHidden]
		public <ffButtonSound>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xF1B7D8", Offset = "0xF1B7D8", VA = "0xF1B7D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xF1B7DC", Offset = "0xF1B7DC", VA = "0xF1B7DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xF1B950", Offset = "0xF1B950", VA = "0xF1B950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA228", Offset = "0x7CA228")]
	private sealed class <rewindButtonSound>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoomBoxManager <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0xF1BD14", Offset = "0xF1BD14", VA = "0xF1BD14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0xF1BD5C", Offset = "0xF1BD5C", VA = "0xF1BD5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xF1BB78", Offset = "0xF1BB78", VA = "0xF1BB78")]
		[DebuggerHidden]
		public <rewindButtonSound>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xF1BBA4", Offset = "0xF1BBA4", VA = "0xF1BBA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xF1BBA8", Offset = "0xF1BBA8", VA = "0xF1BBA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xF1BD1C", Offset = "0xF1BD1C", VA = "0xF1BD1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stopButton;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rewindButton;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject playButton;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ffButton;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ejectButton;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource leftSpeaker;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource rightSpeaker;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftSpool;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightSpool;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Coroutine spoolCoroutine;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Coroutine rewindCoroutine;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Coroutine fastforwardCoroutine;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Coroutine playCoroutine;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float rotaterSpeed;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip ffButtonSoundClip;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip ffButtonPressSoundClip;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip ejectSoundClip;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip closeSoundClip;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool tapeIn;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool doorClosed;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject tapeDoor;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float RotationDuration;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _isRotating;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float volume;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject volumeKnob;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool knobControl;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool ejectDown;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool stopDown;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool rewindDown;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool fastforwardDown;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool playDown;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Animator ejectButt;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Animator stopButt;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Animator rewindButt;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Animator fastforwardButt;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator playButt;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject tapeDoorGrabber;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string theTapeName;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10BAC44", Offset = "0x10BAC44", VA = "0x10BAC44")]
	public void ClosedDoor()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10BAEE8", Offset = "0x10BAEE8", VA = "0x10BAEE8")]
	public void PressEjectButton()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10BB284", Offset = "0x10BB284", VA = "0x10BB284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DCF3C", Offset = "0x7DCF3C")]
	private IEnumerator RotateObject(Quaternion start, Quaternion end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10BB348", Offset = "0x10BB348", VA = "0x10BB348")]
	public void PressStopButton()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10BB4C8", Offset = "0x10BB4C8", VA = "0x10BB4C8")]
	public void PressPlayButton()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10BB6E8", Offset = "0x10BB6E8", VA = "0x10BB6E8")]
	public void PressFFButton()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10BB928", Offset = "0x10BB928", VA = "0x10BB928")]
	public void PressRewindButton()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x10BBB68", Offset = "0x10BBB68", VA = "0x10BBB68")]
	public void RotateSpools()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10BB278", Offset = "0x10BB278", VA = "0x10BB278")]
	public void StopRotateSpools()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10BBC08", Offset = "0x10BBC08", VA = "0x10BBC08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10BBD68", Offset = "0x10BBD68", VA = "0x10BBD68")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10BBB9C", Offset = "0x10BBB9C", VA = "0x10BBB9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DCF9C", Offset = "0x7DCF9C")]
	private IEnumerator ContinuousRotation()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10BB67C", Offset = "0x10BB67C", VA = "0x10BB67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DCFFC", Offset = "0x7DCFFC")]
	private IEnumerator playButtonSound()
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x10BB8BC", Offset = "0x10BB8BC", VA = "0x10BB8BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD05C", Offset = "0x7DD05C")]
	private IEnumerator ffButtonSound()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x10BBAFC", Offset = "0x10BBAFC", VA = "0x10BBAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD0BC", Offset = "0x7DD0BC")]
	private IEnumerator rewindButtonSound()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x10BBDC0", Offset = "0x10BBDC0", VA = "0x10BBDC0")]
	public BoomBoxManager()
	{
	}
}
[Token(Token = "0x200002E")]
public class BulletBehavior : MonoBehaviour
{
	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA238", Offset = "0x7CA238")]
	private sealed class <CheckGooseLose>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletBehavior <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xF1BED0", Offset = "0xF1BED0", VA = "0xF1BED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0xF1BF18", Offset = "0xF1BF18", VA = "0xF1BF18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xF1BD64", Offset = "0xF1BD64", VA = "0xF1BD64")]
		[DebuggerHidden]
		public <CheckGooseLose>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xF1BD90", Offset = "0xF1BD90", VA = "0xF1BD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xF1BD94", Offset = "0xF1BD94", VA = "0xF1BD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xF1BED8", Offset = "0xF1BED8", VA = "0xF1BED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particleBlast;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bulletMesh;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enemyBullet;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gamesManager;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gooseBullet;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool collideOnce;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x10BED64", Offset = "0x10BED64", VA = "0x10BED64")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x10BEFF0", Offset = "0x10BEFF0", VA = "0x10BEFF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD2AC", Offset = "0x7DD2AC")]
	private IEnumerator CheckGooseLose()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x10BF05C", Offset = "0x10BF05C", VA = "0x10BF05C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x10BF0B0", Offset = "0x10BF0B0", VA = "0x10BF0B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x10BF0B4", Offset = "0x10BF0B4", VA = "0x10BF0B4")]
	public BulletBehavior()
	{
	}
}
[Token(Token = "0x2000030")]
public enum CRTScanLinesSizes
{
	[Token(Token = "0x40000E9")]
	S32 = 0x20,
	[Token(Token = "0x40000EA")]
	S64 = 0x40,
	[Token(Token = "0x40000EB")]
	S128 = 0x80,
	[Token(Token = "0x40000EC")]
	S256 = 0x100,
	[Token(Token = "0x40000ED")]
	S512 = 0x200,
	[Token(Token = "0x40000EE")]
	S1024 = 0x400
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
public class CRT : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader curShader;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distortion;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gamma;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float YExtra;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float CurvatureSet1;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float CurvatureSet2;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DotWeight;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CRTScanLinesSizes scanSize;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color rgb1;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color rgb2;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material curMaterial;

	[Token(Token = "0x17000014")]
	private Material material
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x10C0CB0", Offset = "0x10C0CB0", VA = "0x10C0CB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x10C0D7C", Offset = "0x10C0D7C", VA = "0x10C0D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x10C0DBC", Offset = "0x10C0DBC", VA = "0x10C0DBC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x10C1154", Offset = "0x10C1154", VA = "0x10C1154")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x10C1158", Offset = "0x10C1158", VA = "0x10C1158")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x10C1204", Offset = "0x10C1204", VA = "0x10C1204")]
	public CRT()
	{
	}
}
[Token(Token = "0x2000032")]
public class CassetteTapeCollision : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 localPos;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject otherParent;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tapeHolderTransform;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool tapeAttached;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string otherGameObjectName;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string bowColor;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cassetteClone;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BoomBoxManager boomBoxManager;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool nullParentTape;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip tapeSong;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text cloneTapeText;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x10C281C", Offset = "0x10C281C", VA = "0x10C281C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x10C2F8C", Offset = "0x10C2F8C", VA = "0x10C2F8C")]
	public void MakeHighLightAgain()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x10BADE4", Offset = "0x10BADE4", VA = "0x10BADE4")]
	public void SetParentOnClose()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x10C2F90", Offset = "0x10C2F90", VA = "0x10C2F90")]
	public CassetteTapeCollision()
	{
	}
}
[Token(Token = "0x2000033")]
public class ChangeCenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 com;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject massObject;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool grabCheck;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x10C3470", Offset = "0x10C3470", VA = "0x10C3470")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x10C34C4", Offset = "0x10C34C4", VA = "0x10C34C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x10C3538", Offset = "0x10C3538", VA = "0x10C3538")]
	public void ShiftCenterOfMass()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x10C3584", Offset = "0x10C3584", VA = "0x10C3584")]
	public ChangeCenterOfMass()
	{
	}
}
[Token(Token = "0x2000034")]
public class ChangeTime : MonoBehaviour
{
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA258", Offset = "0x7CA258")]
	private sealed class <DoTheFlash>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChangeTime <>4__this;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0xF1C2BC", Offset = "0xF1C2BC", VA = "0xF1C2BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0xF1C304", Offset = "0xF1C304", VA = "0xF1C304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xF1C05C", Offset = "0xF1C05C", VA = "0xF1C05C")]
		[DebuggerHidden]
		public <DoTheFlash>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xF1C088", Offset = "0xF1C088", VA = "0xF1C088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xF1C08C", Offset = "0xF1C08C", VA = "0xF1C08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xF1C2C4", Offset = "0xF1C2C4", VA = "0xF1C2C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text hourText;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text minuteText;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool setTime;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string holderString;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int tempInt;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DateTime theTime;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x10C3700", Offset = "0x10C3700", VA = "0x10C3700")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD35C", Offset = "0x7DD35C")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x10C376C", Offset = "0x10C376C", VA = "0x10C376C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x10C3798", Offset = "0x10C3798", VA = "0x10C3798")]
	private void Update()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x10C379C", Offset = "0x10C379C", VA = "0x10C379C")]
	public ChangeTime()
	{
	}
}
[Token(Token = "0x2000036")]
public class CheckThatCollision : MonoBehaviour
{
	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x10C44E8", Offset = "0x10C44E8", VA = "0x10C44E8")]
	private void OnCollisionStay(Collision collisionInfo)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x10C44EC", Offset = "0x10C44EC", VA = "0x10C44EC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x10C44F0", Offset = "0x10C44F0", VA = "0x10C44F0")]
	public CheckThatCollision()
	{
	}
}
[Token(Token = "0x2000037")]
public class CircuitBehavior : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gamesManager;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hitOnce;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x10C44F8", Offset = "0x10C44F8", VA = "0x10C44F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x10C454C", Offset = "0x10C454C", VA = "0x10C454C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x10C4664", Offset = "0x10C4664", VA = "0x10C4664")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x10C4668", Offset = "0x10C4668", VA = "0x10C4668")]
	public CircuitBehavior()
	{
	}
}
[Token(Token = "0x2000038")]
public class CollideWithStuffOculus : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA268", Offset = "0x7CA268")]
	private sealed class <WaitToRespawn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollideWithStuffOculus <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0xF1C408", Offset = "0xF1C408", VA = "0xF1C408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0xF1C450", Offset = "0xF1C450", VA = "0xF1C450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xF1C30C", Offset = "0xF1C30C", VA = "0xF1C30C")]
		[DebuggerHidden]
		public <WaitToRespawn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xF1C338", Offset = "0xF1C338", VA = "0xF1C338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xF1C33C", Offset = "0xF1C33C", VA = "0xF1C33C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xF1C410", Offset = "0xF1C410", VA = "0xF1C410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA278", Offset = "0x7CA278")]
	private sealed class <fadeOutRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollideWithStuffOculus <>4__this;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0xF1C6B8", Offset = "0xF1C6B8", VA = "0xF1C6B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0xF1C700", Offset = "0xF1C700", VA = "0xF1C700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xF1C5B0", Offset = "0xF1C5B0", VA = "0xF1C5B0")]
		[DebuggerHidden]
		public <fadeOutRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xF1C5DC", Offset = "0xF1C5DC", VA = "0xF1C5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xF1C5E0", Offset = "0xF1C5E0", VA = "0xF1C5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0xF1C6C0", Offset = "0xF1C6C0", VA = "0xF1C6C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA288", Offset = "0x7CA288")]
	private sealed class <fadeInRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollideWithStuffOculus <>4__this;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0xF1C560", Offset = "0xF1C560", VA = "0xF1C560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0xF1C5A8", Offset = "0xF1C5A8", VA = "0xF1C5A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xF1C458", Offset = "0xF1C458", VA = "0xF1C458")]
		[DebuggerHidden]
		public <fadeInRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xF1C484", Offset = "0xF1C484", VA = "0xF1C484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xF1C488", Offset = "0xF1C488", VA = "0xF1C488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xF1C568", Offset = "0xF1C568", VA = "0xF1C568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hatPlacement;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hatPlacement2;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject otherParent;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hatOnHead;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light flashLighty;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float transitionDuration;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScreenFader fader;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve fadeInCurve;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve fadeOutCurve;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Coroutine fadeInStuff;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Coroutine fadeOutStuff;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool canCollideHat;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x10C4964", Offset = "0x10C4964", VA = "0x10C4964")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x10C4AA8", Offset = "0x10C4AA8", VA = "0x10C4AA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x10C4BE8", Offset = "0x10C4BE8", VA = "0x10C4BE8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x10C4CD8", Offset = "0x10C4CD8", VA = "0x10C4CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD40C", Offset = "0x7DD40C")]
	public IEnumerator WaitToRespawn()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x10C49D0", Offset = "0x10C49D0", VA = "0x10C49D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD46C", Offset = "0x7DD46C")]
	protected IEnumerator fadeOutRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x10C4A3C", Offset = "0x10C4A3C", VA = "0x10C4A3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD4CC", Offset = "0x7DD4CC")]
	protected IEnumerator fadeInRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x10C4D44", Offset = "0x10C4D44", VA = "0x10C4D44")]
	public CollideWithStuffOculus()
	{
	}
}
[Token(Token = "0x200003C")]
public class CompKeyboardButtonPress : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x10C6120", Offset = "0x10C6120", VA = "0x10C6120")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x10C61FC", Offset = "0x10C61FC", VA = "0x10C61FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x10C6200", Offset = "0x10C6200", VA = "0x10C6200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x10C6204", Offset = "0x10C6204", VA = "0x10C6204")]
	public CompKeyboardButtonPress()
	{
	}
}
[Token(Token = "0x200003D")]
public class CompKeyboardManager : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canPressButton;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text passordText;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource computerSpeaker;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip keyType;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string computerPassword;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject passwordScreen;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mainMenuScreen;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject picture1;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject picture2;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject picture3;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject picture4;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject menuButtons;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject note1;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject note2;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject note3;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject note4;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject note5;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject note6;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject note7;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject trash;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject folder1;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject folder2;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject topSecret;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string activeWindow;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x10C620C", Offset = "0x10C620C", VA = "0x10C620C")]
	public void buttonPressed(string letterNum)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x10C6340", Offset = "0x10C6340", VA = "0x10C6340")]
	public void APressed()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x10C638C", Offset = "0x10C638C", VA = "0x10C638C")]
	public void BPressed()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x10C63D8", Offset = "0x10C63D8", VA = "0x10C63D8")]
	public void CPressed()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x10C6424", Offset = "0x10C6424", VA = "0x10C6424")]
	public void DPressed()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x10C6470", Offset = "0x10C6470", VA = "0x10C6470")]
	public void EPressed()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x10C64BC", Offset = "0x10C64BC", VA = "0x10C64BC")]
	public void FPressed()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x10C6508", Offset = "0x10C6508", VA = "0x10C6508")]
	public void GPressed()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x10C6554", Offset = "0x10C6554", VA = "0x10C6554")]
	public void HPressed()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x10C65A0", Offset = "0x10C65A0", VA = "0x10C65A0")]
	public void IPressed()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x10C65EC", Offset = "0x10C65EC", VA = "0x10C65EC")]
	public void JPressed()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x10C6638", Offset = "0x10C6638", VA = "0x10C6638")]
	public void KPressed()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x10C6684", Offset = "0x10C6684", VA = "0x10C6684")]
	public void LPressed()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x10C66D0", Offset = "0x10C66D0", VA = "0x10C66D0")]
	public void MPressed()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x10C671C", Offset = "0x10C671C", VA = "0x10C671C")]
	public void NPressed()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x10C6768", Offset = "0x10C6768", VA = "0x10C6768")]
	public void OPressed()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x10C67B4", Offset = "0x10C67B4", VA = "0x10C67B4")]
	public void PPressed()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x10C6800", Offset = "0x10C6800", VA = "0x10C6800")]
	public void QPressed()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x10C684C", Offset = "0x10C684C", VA = "0x10C684C")]
	public void RPressed()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x10C6898", Offset = "0x10C6898", VA = "0x10C6898")]
	public void SPressed()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x10C68E4", Offset = "0x10C68E4", VA = "0x10C68E4")]
	public void TPressed()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x10C6930", Offset = "0x10C6930", VA = "0x10C6930")]
	public void UPressed()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x10C697C", Offset = "0x10C697C", VA = "0x10C697C")]
	public void VPressed()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10C69C8", Offset = "0x10C69C8", VA = "0x10C69C8")]
	public void WPressed()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x10C6A14", Offset = "0x10C6A14", VA = "0x10C6A14")]
	public void XPressed()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x10C6A60", Offset = "0x10C6A60", VA = "0x10C6A60")]
	public void YPressed()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x10C6AAC", Offset = "0x10C6AAC", VA = "0x10C6AAC")]
	public void ZPressed()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x10C6AF8", Offset = "0x10C6AF8", VA = "0x10C6AF8")]
	public void ZeroPressed()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x10C6B44", Offset = "0x10C6B44", VA = "0x10C6B44")]
	public void OnePressed()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10C6B90", Offset = "0x10C6B90", VA = "0x10C6B90")]
	public void TwoPressed()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x10C6BDC", Offset = "0x10C6BDC", VA = "0x10C6BDC")]
	public void ThreePressed()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x10C6C28", Offset = "0x10C6C28", VA = "0x10C6C28")]
	public void FourPressed()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x10C6C74", Offset = "0x10C6C74", VA = "0x10C6C74")]
	public void FivePressed()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x10C6CC0", Offset = "0x10C6CC0", VA = "0x10C6CC0")]
	public void SixPressed()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x10C6D0C", Offset = "0x10C6D0C", VA = "0x10C6D0C")]
	public void SevenPressed()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x10C6D58", Offset = "0x10C6D58", VA = "0x10C6D58")]
	public void EightPressed()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x10C6DA4", Offset = "0x10C6DA4", VA = "0x10C6DA4")]
	public void NinePressed()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10C6DF0", Offset = "0x10C6DF0", VA = "0x10C6DF0")]
	public void SpacePressed()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10C6E3C", Offset = "0x10C6E3C", VA = "0x10C6E3C")]
	public void BackspacePressed()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10C6FA0", Offset = "0x10C6FA0", VA = "0x10C6FA0")]
	public void ReturnPressed()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10C708C", Offset = "0x10C708C", VA = "0x10C708C")]
	public void CheckPassord()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10C71C0", Offset = "0x10C71C0", VA = "0x10C71C0")]
	public void OpenPic1()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x10C7238", Offset = "0x10C7238", VA = "0x10C7238")]
	public void OpenPic2()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x10C72B0", Offset = "0x10C72B0", VA = "0x10C72B0")]
	public void ClosePic1()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x10C7328", Offset = "0x10C7328", VA = "0x10C7328")]
	public void ClosePic2()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x10C73A0", Offset = "0x10C73A0", VA = "0x10C73A0")]
	public void OpenPic3()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x10C7418", Offset = "0x10C7418", VA = "0x10C7418")]
	public void ClosePic3()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x10C7490", Offset = "0x10C7490", VA = "0x10C7490")]
	public void OpenPic4()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x10C7508", Offset = "0x10C7508", VA = "0x10C7508")]
	public void ClosePic4()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x10C7580", Offset = "0x10C7580", VA = "0x10C7580")]
	public void OpenNote1()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x10C75F8", Offset = "0x10C75F8", VA = "0x10C75F8")]
	public void OpenNote2()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x10C7670", Offset = "0x10C7670", VA = "0x10C7670")]
	public void CloseNote1()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x10C76E8", Offset = "0x10C76E8", VA = "0x10C76E8")]
	public void CloseNote2()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x10C7760", Offset = "0x10C7760", VA = "0x10C7760")]
	public void OpenNote3()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x10C77D8", Offset = "0x10C77D8", VA = "0x10C77D8")]
	public void OpenNote4()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x10C7850", Offset = "0x10C7850", VA = "0x10C7850")]
	public void OpenNote5()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x10C78C8", Offset = "0x10C78C8", VA = "0x10C78C8")]
	public void OpenNote6()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x10C7940", Offset = "0x10C7940", VA = "0x10C7940")]
	public void OpenNote7()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x10C79B8", Offset = "0x10C79B8", VA = "0x10C79B8")]
	public void OpenTopSecret()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x10C7A30", Offset = "0x10C7A30", VA = "0x10C7A30")]
	public void CloseTopSecret()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x10C7AA8", Offset = "0x10C7AA8", VA = "0x10C7AA8")]
	public void CloseNote3()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x10C7B20", Offset = "0x10C7B20", VA = "0x10C7B20")]
	public void CloseNote4()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x10C7B98", Offset = "0x10C7B98", VA = "0x10C7B98")]
	public void CloseNote5()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x10C7C10", Offset = "0x10C7C10", VA = "0x10C7C10")]
	public void CloseNote6()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x10C7C88", Offset = "0x10C7C88", VA = "0x10C7C88")]
	public void CloseNote7()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x10C7D00", Offset = "0x10C7D00", VA = "0x10C7D00")]
	public void OpenFolder1()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x10C7D78", Offset = "0x10C7D78", VA = "0x10C7D78")]
	public void OpenFolder2()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x10C7DF0", Offset = "0x10C7DF0", VA = "0x10C7DF0")]
	public void OpenTrash()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x10C7E68", Offset = "0x10C7E68", VA = "0x10C7E68")]
	public void CloseFolder1()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x10C7EE0", Offset = "0x10C7EE0", VA = "0x10C7EE0")]
	public void CloseFolder2()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x10C7F58", Offset = "0x10C7F58", VA = "0x10C7F58")]
	public void CloseTrash()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x10C7FD0", Offset = "0x10C7FD0", VA = "0x10C7FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x10C7FD4", Offset = "0x10C7FD4", VA = "0x10C7FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x10C7FD8", Offset = "0x10C7FD8", VA = "0x10C7FD8")]
	public CompKeyboardManager()
	{
	}
}
[Token(Token = "0x200003E")]
public class ControlGirl : MonoBehaviour
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject joyStick;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPos;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x10C8280", Offset = "0x10C8280", VA = "0x10C8280")]
	private void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x10C82D4", Offset = "0x10C82D4", VA = "0x10C82D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x10C8608", Offset = "0x10C8608", VA = "0x10C8608")]
	public ControlGirl()
	{
	}
}
[Token(Token = "0x200003F")]
public class ControllerChecker : MonoBehaviour
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerType;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer controllerPoster;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material pico4Poster;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material pico3Poster;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x10C8610", Offset = "0x10C8610", VA = "0x10C8610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x10C86F4", Offset = "0x10C86F4", VA = "0x10C86F4")]
	public ControllerChecker()
	{
	}
}
[Token(Token = "0x2000040")]
public class ControllerType : MonoBehaviour
{
	[Token(Token = "0x6000167")]
	[Address(RVA = "0x10C9340", Offset = "0x10C9340", VA = "0x10C9340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x10C9344", Offset = "0x10C9344", VA = "0x10C9344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x10C9348", Offset = "0x10C9348", VA = "0x10C9348")]
	public ControllerType()
	{
	}
}
[Token(Token = "0x2000041")]
public class CoreyCode : MonoBehaviour
{
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA298", Offset = "0x7CA298")]
	private sealed class <DoCircuitRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000187")]
			[Address(RVA = "0xF1D598", Offset = "0xF1D598", VA = "0xF1D598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000189")]
			[Address(RVA = "0xF1D5E0", Offset = "0xF1D5E0", VA = "0xF1D5E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xF1D2DC", Offset = "0xF1D2DC", VA = "0xF1D2DC")]
		[DebuggerHidden]
		public <DoCircuitRoutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xF1D308", Offset = "0xF1D308", VA = "0xF1D308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xF1D30C", Offset = "0xF1D30C", VA = "0xF1D30C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xF1D5A0", Offset = "0xF1D5A0", VA = "0xF1D5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2A8", Offset = "0x7CA2A8")]
	private sealed class <DisplayCaptionLength>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018D")]
			[Address(RVA = "0xF1D28C", Offset = "0xF1D28C", VA = "0xF1D28C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0xF1D2D4", Offset = "0xF1D2D4", VA = "0xF1D2D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xF1D18C", Offset = "0xF1D18C", VA = "0xF1D18C")]
		[DebuggerHidden]
		public <DisplayCaptionLength>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xF1D1B8", Offset = "0xF1D1B8", VA = "0xF1D1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xF1D1BC", Offset = "0xF1D1BC", VA = "0xF1D1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xF1D294", Offset = "0xF1D294", VA = "0xF1D294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2B8", Offset = "0x7CA2B8")]
	private sealed class <OneTransitionToIdle>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000193")]
			[Address(RVA = "0xF1E080", Offset = "0xF1E080", VA = "0xF1E080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000195")]
			[Address(RVA = "0xF1E0C8", Offset = "0xF1E0C8", VA = "0xF1E0C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xF1D9B8", Offset = "0xF1D9B8", VA = "0xF1D9B8")]
		[DebuggerHidden]
		public <OneTransitionToIdle>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xF1D9E4", Offset = "0xF1D9E4", VA = "0xF1D9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0xF1D9E8", Offset = "0xF1D9E8", VA = "0xF1D9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xF1E088", Offset = "0xF1E088", VA = "0xF1E088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2C8", Offset = "0x7CA2C8")]
	private sealed class <OneTransitionToEnd>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000199")]
			[Address(RVA = "0xF1D968", Offset = "0xF1D968", VA = "0xF1D968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0xF1D9B0", Offset = "0xF1D9B0", VA = "0xF1D9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xF1D5E8", Offset = "0xF1D5E8", VA = "0xF1D5E8")]
		[DebuggerHidden]
		public <OneTransitionToEnd>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xF1D614", Offset = "0xF1D614", VA = "0xF1D614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xF1D618", Offset = "0xF1D618", VA = "0xF1D618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xF1D970", Offset = "0xF1D970", VA = "0xF1D970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2D8", Offset = "0x7CA2D8")]
	private sealed class <TransitionToFirstIdleRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019F")]
			[Address(RVA = "0xF1ECE0", Offset = "0xF1ECE0", VA = "0xF1ECE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0xF1ED28", Offset = "0xF1ED28", VA = "0xF1ED28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xF1E960", Offset = "0xF1E960", VA = "0xF1E960")]
		[DebuggerHidden]
		public <TransitionToFirstIdleRoutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xF1E98C", Offset = "0xF1E98C", VA = "0xF1E98C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xF1E990", Offset = "0xF1E990", VA = "0xF1E990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xF1ECE8", Offset = "0xF1ECE8", VA = "0xF1ECE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2E8", Offset = "0x7CA2E8")]
	private sealed class <ContinueEndRoutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A5")]
			[Address(RVA = "0xF1CD70", Offset = "0xF1CD70", VA = "0xF1CD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0xF1CDB8", Offset = "0xF1CDB8", VA = "0xF1CDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xF1C880", Offset = "0xF1C880", VA = "0xF1C880")]
		[DebuggerHidden]
		public <ContinueEndRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xF1C8AC", Offset = "0xF1C8AC", VA = "0xF1C8AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xF1C8B0", Offset = "0xF1C8B0", VA = "0xF1C8B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xF1CD78", Offset = "0xF1CD78", VA = "0xF1CD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA2F8", Offset = "0x7CA2F8")]
	private sealed class <ContinueIdleRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AB")]
			[Address(RVA = "0xF1CFAC", Offset = "0xF1CFAC", VA = "0xF1CFAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AD")]
			[Address(RVA = "0xF1CFF4", Offset = "0xF1CFF4", VA = "0xF1CFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xF1CDC0", Offset = "0xF1CDC0", VA = "0xF1CDC0")]
		[DebuggerHidden]
		public <ContinueIdleRoutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xF1CDEC", Offset = "0xF1CDEC", VA = "0xF1CDEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xF1CDF0", Offset = "0xF1CDF0", VA = "0xF1CDF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xF1CFB4", Offset = "0xF1CFB4", VA = "0xF1CFB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA308", Offset = "0x7CA308")]
	private sealed class <PlayWinClipRoutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0xF1E450", Offset = "0xF1E450", VA = "0xF1E450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0xF1E498", Offset = "0xF1E498", VA = "0xF1E498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xF1E0D0", Offset = "0xF1E0D0", VA = "0xF1E0D0")]
		[DebuggerHidden]
		public <PlayWinClipRoutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xF1E0FC", Offset = "0xF1E0FC", VA = "0xF1E0FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xF1E100", Offset = "0xF1E100", VA = "0xF1E100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xF1E458", Offset = "0xF1E458", VA = "0xF1E458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA318", Offset = "0x7CA318")]
	private sealed class <Debuggerer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B7")]
			[Address(RVA = "0xF1D13C", Offset = "0xF1D13C", VA = "0xF1D13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0xF1D184", Offset = "0xF1D184", VA = "0xF1D184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xF1CFFC", Offset = "0xF1CFFC", VA = "0xF1CFFC")]
		[DebuggerHidden]
		public <Debuggerer>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xF1D028", Offset = "0xF1D028", VA = "0xF1D028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xF1D02C", Offset = "0xF1D02C", VA = "0xF1D02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xF1D144", Offset = "0xF1D144", VA = "0xF1D144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA328", Offset = "0x7CA328")]
	private sealed class <ReturnToIdleRoutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoreyCode <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BD")]
			[Address(RVA = "0xF1E910", Offset = "0xF1E910", VA = "0xF1E910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0xF1E958", Offset = "0xF1E958", VA = "0xF1E958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xF1E4A0", Offset = "0xF1E4A0", VA = "0xF1E4A0")]
		[DebuggerHidden]
		public <ReturnToIdleRoutine>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xF1E4CC", Offset = "0xF1E4CC", VA = "0xF1E4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xF1E4D0", Offset = "0xF1E4D0", VA = "0xF1E4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xF1E918", Offset = "0xF1E918", VA = "0xF1E918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MediaPlayer mp;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MediaPlayer mpVHS;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource mpAudioSource;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource mpVHSAudioSource;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] videoPathWins;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] videoPathLose;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] videoPathMainVids;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] videoPathMovementVids;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer vHSEffectRender;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] panels;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int panelCounter;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string startClip;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string endClip;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string transitionClip;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool loopIdle;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool alwaysMuted;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine transitionCoreyFilmRoutine;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine coreyFilmRoutine;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine coreyFilmRoutine2;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int pickClip;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text muteText;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GamesManager gamesManager;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PhraseAsset[] phraseAssets;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject roboCaption;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource roboVoiceSpot;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform coreyEndVidCaptionSpot;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip[] coreyVidAudClips;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip currentClip;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform coreyVideoCapSpot;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x10C9350", Offset = "0x10C9350", VA = "0x10C9350")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10C93E8", Offset = "0x10C93E8", VA = "0x10C93E8")]
	public void TestStart()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x10C950C", Offset = "0x10C950C", VA = "0x10C950C")]
	public void PlayWinClip()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x10C964C", Offset = "0x10C964C", VA = "0x10C964C")]
	public void PlayEndTVClip()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x10C975C", Offset = "0x10C975C", VA = "0x10C975C")]
	public void PlayLoseClip()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x10C9830", Offset = "0x10C9830", VA = "0x10C9830")]
	public void PlayCircuitClips()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x10C99BC", Offset = "0x10C99BC", VA = "0x10C99BC")]
	public void PlayReturnAfterCircuitClip()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x10C9950", Offset = "0x10C9950", VA = "0x10C9950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD61C", Offset = "0x7DD61C")]
	private IEnumerator DoCircuitRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x10C9A60", Offset = "0x10C9A60", VA = "0x10C9A60")]
	public void PlayIdleClip()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x10C9A64", Offset = "0x10C9A64", VA = "0x10C9A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x10C9A68", Offset = "0x10C9A68", VA = "0x10C9A68")]
	public void PlayStartClip()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10C9BD0", Offset = "0x10C9BD0", VA = "0x10C9BD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD67C", Offset = "0x7DD67C")]
	private IEnumerator DisplayCaptionLength()
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10C9C3C", Offset = "0x10C9C3C", VA = "0x10C9C3C")]
	public void TransitionToFirstIdle()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x10C9CAC", Offset = "0x10C9CAC", VA = "0x10C9CAC")]
	public void TurnToCenter()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10C9D50", Offset = "0x10C9D50", VA = "0x10C9D50")]
	public void TurnToRobot()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x10C95E0", Offset = "0x10C95E0", VA = "0x10C95E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD6DC", Offset = "0x7DD6DC")]
	private IEnumerator OneTransitionToIdle()
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x10C96F0", Offset = "0x10C96F0", VA = "0x10C96F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD73C", Offset = "0x7DD73C")]
	private IEnumerator OneTransitionToEnd()
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x10C94A0", Offset = "0x10C94A0", VA = "0x10C94A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD79C", Offset = "0x7DD79C")]
	private IEnumerator TransitionToFirstIdleRoutine()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10C9DF4", Offset = "0x10C9DF4", VA = "0x10C9DF4")]
	public void PlayEndEndWithCaption()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10C9F58", Offset = "0x10C9F58", VA = "0x10C9F58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD7FC", Offset = "0x7DD7FC")]
	private IEnumerator ContinueEndRoutine()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x10C9FC4", Offset = "0x10C9FC4", VA = "0x10C9FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD85C", Offset = "0x7DD85C")]
	private IEnumerator ContinueIdleRoutine()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x10CA030", Offset = "0x10CA030", VA = "0x10CA030")]
	public void PopThePanels()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x10CA11C", Offset = "0x10CA11C", VA = "0x10CA11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD8BC", Offset = "0x7DD8BC")]
	private IEnumerator PlayWinClipRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x10C937C", Offset = "0x10C937C", VA = "0x10C937C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD91C", Offset = "0x7DD91C")]
	private IEnumerator Debuggerer()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x10CA188", Offset = "0x10CA188", VA = "0x10CA188")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DD97C", Offset = "0x7DD97C")]
	private IEnumerator ReturnToIdleRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x10CA1F4", Offset = "0x10CA1F4", VA = "0x10CA1F4")]
	public CoreyCode()
	{
	}
}
[Token(Token = "0x200004C")]
public class CosmicInvaderBehavior : MonoBehaviour
{
	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA338", Offset = "0x7CA338")]
	private sealed class <ExplosionSequence>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CosmicInvaderBehavior <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C9")]
			[Address(RVA = "0xF1EE34", Offset = "0xF1EE34", VA = "0xF1EE34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CB")]
			[Address(RVA = "0xF1EE7C", Offset = "0xF1EE7C", VA = "0xF1EE7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xF1ED30", Offset = "0xF1ED30", VA = "0xF1ED30")]
		[DebuggerHidden]
		public <ExplosionSequence>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xF1ED5C", Offset = "0xF1ED5C", VA = "0xF1ED5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xF1ED60", Offset = "0xF1ED60", VA = "0xF1ED60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xF1EE3C", Offset = "0xF1EE3C", VA = "0xF1EE3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation gooseAnim;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_ClipName;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimatorClipInfo[] m_CurrentClipInfo;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_CurrentClipLength;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gamesManager;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject shootPlace;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float shootForce;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject prefabBullet;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject player;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer explosionSprite;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x10CA204", Offset = "0x10CA204", VA = "0x10CA204")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x10CA318", Offset = "0x10CA318", VA = "0x10CA318")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x10CA530", Offset = "0x10CA530", VA = "0x10CA530")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x10CA730", Offset = "0x10CA730", VA = "0x10CA730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DDCFC", Offset = "0x7DDCFC")]
	private IEnumerator ExplosionSequence()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x10CA79C", Offset = "0x10CA79C", VA = "0x10CA79C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x10CA7A0", Offset = "0x10CA7A0", VA = "0x10CA7A0")]
	public CosmicInvaderBehavior()
	{
	}
}
[Token(Token = "0x200004E")]
public class CyberLightsManager : MonoBehaviour
{
	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA348", Offset = "0x7CA348")]
	private sealed class <OneLightFlickerRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberLightsManager <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0xF1F418", Offset = "0xF1F418", VA = "0xF1F418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DB")]
			[Address(RVA = "0xF1F460", Offset = "0xF1F460", VA = "0xF1F460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xF1F334", Offset = "0xF1F334", VA = "0xF1F334")]
		[DebuggerHidden]
		public <OneLightFlickerRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xF1F360", Offset = "0xF1F360", VA = "0xF1F360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xF1F364", Offset = "0xF1F364", VA = "0xF1F364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xF1F420", Offset = "0xF1F420", VA = "0xF1F420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA358", Offset = "0x7CA358")]
	private sealed class <LightFlickerRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CyberLightsManager <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0xF1F2E4", Offset = "0xF1F2E4", VA = "0xF1F2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E1")]
			[Address(RVA = "0xF1F32C", Offset = "0xF1F32C", VA = "0xF1F32C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xF1F17C", Offset = "0xF1F17C", VA = "0xF1F17C")]
		[DebuggerHidden]
		public <LightFlickerRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xF1F1A8", Offset = "0xF1F1A8", VA = "0xF1F1A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xF1F1AC", Offset = "0xF1F1AC", VA = "0xF1F1AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xF1F2EC", Offset = "0xF1F2EC", VA = "0xF1F2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] lights;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ogLightValues;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] smoothing;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flickerLights;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool lightsOn;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool doLightsOnce;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool flickOffOnce;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text tvText;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lightOffLength;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool alwaysTrue;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine lightyRoutine;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1057A10", Offset = "0x1057A10", VA = "0x1057A10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1057A80", Offset = "0x1057A80", VA = "0x1057A80")]
	public void RestoreOgLightValues()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1057AAC", Offset = "0x1057AAC", VA = "0x1057AAC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1057AC4", Offset = "0x1057AC4", VA = "0x1057AC4")]
	public void StartLightFlicker()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1057B64", Offset = "0x1057B64", VA = "0x1057B64")]
	public void StopLightFlicker()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1057B70", Offset = "0x1057B70", VA = "0x1057B70")]
	public void oneFlicker()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1057B9C", Offset = "0x1057B9C", VA = "0x1057B9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DDDAC", Offset = "0x7DDDAC")]
	private IEnumerator OneLightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1057AF8", Offset = "0x1057AF8", VA = "0x1057AF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DDE0C", Offset = "0x7DDE0C")]
	private IEnumerator LightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1057C08", Offset = "0x1057C08", VA = "0x1057C08")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1057C5C", Offset = "0x1057C5C", VA = "0x1057C5C")]
	public CyberLightsManager()
	{
	}
}
[Token(Token = "0x2000051")]
public class Break : MonoBehaviour
{
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x10BED4C", Offset = "0x10BED4C", VA = "0x10BED4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x10BED50", Offset = "0x10BED50", VA = "0x10BED50")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x10BED54", Offset = "0x10BED54", VA = "0x10BED54")]
	public Break()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA368", Offset = "0x7CA368")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA368", Offset = "0x7CA368")]
public class GladiatorController : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer Srend;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float moveForce;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float screenHalfWidthInWorldUnits;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool screenWrap;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1461AE0", Offset = "0x1461AE0", VA = "0x1461AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1461BC0", Offset = "0x1461BC0", VA = "0x1461BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1462028", Offset = "0x1462028", VA = "0x1462028")]
	public GladiatorController()
	{
	}
}
[Token(Token = "0x2000053")]
public class DiceLock : MonoBehaviour
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotateDieOnTouch greenDie;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RotateDieOnTouch redDie;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RotateDieOnTouch blueDie;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RotateDieOnTouch yellowDie;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool oneIsRotating;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject doorToOpen;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject otherDoorToOpen;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool dicePuzzleSolved;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource unlockIt;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] objectsInside;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x105E73C", Offset = "0x105E73C", VA = "0x105E73C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x105E864", Offset = "0x105E864", VA = "0x105E864")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x105E868", Offset = "0x105E868", VA = "0x105E868")]
	public void LockCheck()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x105EA94", Offset = "0x105EA94", VA = "0x105EA94")]
	public DiceLock()
	{
	}
}
[Token(Token = "0x2000054")]
public class DieSleep : MonoBehaviour
{
	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x105EF4C", Offset = "0x105EF4C", VA = "0x105EF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x105EF50", Offset = "0x105EF50", VA = "0x105EF50")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x105EF54", Offset = "0x105EF54", VA = "0x105EF54")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x105EFC0", Offset = "0x105EFC0", VA = "0x105EFC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x105F02C", Offset = "0x105F02C", VA = "0x105F02C")]
	public DieSleep()
	{
	}
}
[Token(Token = "0x2000055")]
public class DiskFall : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager gameManager;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thisDisksSpeed;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arcadeModel;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int collectChoice;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x105F1E8", Offset = "0x105F1E8", VA = "0x105F1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x105F2B8", Offset = "0x105F2B8", VA = "0x105F2B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x105F4B4", Offset = "0x105F4B4", VA = "0x105F4B4")]
	private void OnBang()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x105F4D0", Offset = "0x105F4D0", VA = "0x105F4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x105F5DC", Offset = "0x105F5DC", VA = "0x105F5DC")]
	public DiskFall()
	{
	}
}
[Token(Token = "0x2000056")]
public class DoorHeadFade : MonoBehaviour
{
	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1063728", Offset = "0x1063728", VA = "0x1063728")]
	public void AddHeadFade()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1063788", Offset = "0x1063788", VA = "0x1063788")]
	public void RemoveHeadFade()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x10637E8", Offset = "0x10637E8", VA = "0x10637E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x10637EC", Offset = "0x10637EC", VA = "0x10637EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10637F0", Offset = "0x10637F0", VA = "0x10637F0")]
	public DoorHeadFade()
	{
	}
}
[Token(Token = "0x2000057")]
public class DriveChanger : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ended;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform started;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1064978", Offset = "0x1064978", VA = "0x1064978")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1064A20", Offset = "0x1064A20", VA = "0x1064A20")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1064A24", Offset = "0x1064A24", VA = "0x1064A24")]
	public DriveChanger()
	{
	}
}
[Token(Token = "0x2000058")]
public class EjectButton : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VCRManager vcrManager;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1064C90", Offset = "0x1064C90", VA = "0x1064C90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1064D6C", Offset = "0x1064D6C", VA = "0x1064D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1064D70", Offset = "0x1064D70", VA = "0x1064D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1064D74", Offset = "0x1064D74", VA = "0x1064D74")]
	public EjectButton()
	{
	}
}
[Token(Token = "0x2000059")]
public class EndAudioTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x6000202")]
	[Address(RVA = "0x10661DC", Offset = "0x10661DC", VA = "0x10661DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x10661E0", Offset = "0x10661E0", VA = "0x10661E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x10661E4", Offset = "0x10661E4", VA = "0x10661E4")]
	public EndAudioTimelineTrigger()
	{
	}
}
[Token(Token = "0x200005A")]
public class EndTest : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA3FC", Offset = "0x7CA3FC")]
	private sealed class <ContinueIdleRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndTest <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0xF1FD90", Offset = "0xF1FD90", VA = "0xF1FD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020F")]
			[Address(RVA = "0xF1FDD8", Offset = "0xF1FDD8", VA = "0xF1FDD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xF1FC3C", Offset = "0xF1FC3C", VA = "0xF1FC3C")]
		[DebuggerHidden]
		public <ContinueIdleRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xF1FC68", Offset = "0xF1FC68", VA = "0xF1FC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xF1FC6C", Offset = "0xF1FC6C", VA = "0xF1FC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0xF1FD98", Offset = "0xF1FD98", VA = "0xF1FD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool endTest;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robot;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject corey;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector startSequencePlayable;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x10661EC", Offset = "0x10661EC", VA = "0x10661EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1066290", Offset = "0x1066290", VA = "0x1066290")]
	public void StartTheEndTimeline()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1066224", Offset = "0x1066224", VA = "0x1066224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DDF0C", Offset = "0x7DDF0C")]
	private IEnumerator ContinueIdleRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x10662BC", Offset = "0x10662BC", VA = "0x10662BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x10662C0", Offset = "0x10662C0", VA = "0x10662C0")]
	public EndTest()
	{
	}
}
[Token(Token = "0x200005C")]
public class EndTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int howManyEnables;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robot;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particleObject1;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem particleObject2;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem particleObject3;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject corey;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text muteText;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayableDirector startSequencePlayable;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GamesManager gamesManager;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem particleObject;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource electricLittleB;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject electricNoiseSource;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject endVidScreen;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MediaPlayer mp;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CyberLightsManager cyberLightsManager;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject sceneChange;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x10662C8", Offset = "0x10662C8", VA = "0x10662C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x10667B0", Offset = "0x10667B0", VA = "0x10667B0")]
	public EndTimelineTrigger()
	{
	}
}
[Token(Token = "0x200005D")]
public class FadeInAndSound : MonoBehaviour
{
	[Token(Token = "0x200005E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA40C", Offset = "0x7CA40C")]
	private sealed class <LogoRoutineTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeInAndSound <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0xF20BD8", Offset = "0xF20BD8", VA = "0xF20BD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0xF20C20", Offset = "0xF20C20", VA = "0xF20C20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xF20998", Offset = "0xF20998", VA = "0xF20998")]
		[DebuggerHidden]
		public <LogoRoutineTime>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xF209C4", Offset = "0xF209C4", VA = "0xF209C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xF209C8", Offset = "0xF209C8", VA = "0xF209C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xF20BE0", Offset = "0xF20BE0", VA = "0xF20BE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA41C", Offset = "0x7CA41C")]
	private sealed class <FadeToSprites>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameOb;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0xF20948", Offset = "0xF20948", VA = "0xF20948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000221")]
			[Address(RVA = "0xF20990", Offset = "0xF20990", VA = "0xF20990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xF20748", Offset = "0xF20748", VA = "0xF20748")]
		[DebuggerHidden]
		public <FadeToSprites>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xF20774", Offset = "0xF20774", VA = "0xF20774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xF20778", Offset = "0xF20778", VA = "0xF20778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xF20950", Offset = "0xF20950", VA = "0xF20950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource lunaSound;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lunaSprite;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sceneChange;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1067BAC", Offset = "0x1067BAC", VA = "0x1067BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1067C6C", Offset = "0x1067C6C", VA = "0x1067C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DDFBC", Offset = "0x7DDFBC")]
	private IEnumerator LogoRoutineTime()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1067CD8", Offset = "0x1067CD8", VA = "0x1067CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE01C", Offset = "0x7DE01C")]
	private IEnumerator FadeToSprites(GameObject gameOb, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1067D58", Offset = "0x1067D58", VA = "0x1067D58")]
	public FadeInAndSound()
	{
	}
}
[Token(Token = "0x2000060")]
public class FixPlayerY : MonoBehaviour
{
	[Token(Token = "0x6000222")]
	[Address(RVA = "0x14528FC", Offset = "0x14528FC", VA = "0x14528FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1452900", Offset = "0x1452900", VA = "0x1452900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x14529B4", Offset = "0x14529B4", VA = "0x14529B4")]
	public FixPlayerY()
	{
	}
}
[Token(Token = "0x2000061")]
public class FlashLightManager : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material flashLightOffMat;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material flashLightOnMat;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject flashLightBody;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light flashLighty;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool flashLightOn;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x14529BC", Offset = "0x14529BC", VA = "0x14529BC")]
	public void TurnOnFlashLight()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1452A34", Offset = "0x1452A34", VA = "0x1452A34")]
	public void TurnOffFlashLight()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1452AAC", Offset = "0x1452AAC", VA = "0x1452AAC")]
	public void TurnOnOffFlashLight()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1452AC8", Offset = "0x1452AC8", VA = "0x1452AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1452ACC", Offset = "0x1452ACC", VA = "0x1452ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1452AD0", Offset = "0x1452AD0", VA = "0x1452AD0")]
	public FlashLightManager()
	{
	}
}
[Token(Token = "0x2000062")]
public class FlashPressStart : MonoBehaviour
{
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA42C", Offset = "0x7CA42C")]
	private sealed class <DoTheFlash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashPressStart <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0xF20D4C", Offset = "0xF20D4C", VA = "0xF20D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0xF20D94", Offset = "0xF20D94", VA = "0xF20D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xF20C28", Offset = "0xF20C28", VA = "0xF20C28")]
		[DebuggerHidden]
		public <DoTheFlash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xF20C54", Offset = "0xF20C54", VA = "0xF20C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xF20C58", Offset = "0xF20C58", VA = "0xF20C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xF20D54", Offset = "0xF20D54", VA = "0xF20D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flashText;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1452AD8", Offset = "0x1452AD8", VA = "0x1452AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1452B30", Offset = "0x1452B30", VA = "0x1452B30")]
	private void Update()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1452B34", Offset = "0x1452B34", VA = "0x1452B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1452B04", Offset = "0x1452B04", VA = "0x1452B04")]
	public void FlashFunction()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1452B60", Offset = "0x1452B60", VA = "0x1452B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE11C", Offset = "0x7DE11C")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1452BCC", Offset = "0x1452BCC", VA = "0x1452BCC")]
	public FlashPressStart()
	{
	}
}
[Token(Token = "0x2000064")]
public class FloorCheck : MonoBehaviour
{
	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1452D88", Offset = "0x1452D88", VA = "0x1452D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1452D8C", Offset = "0x1452D8C", VA = "0x1452D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1452D90", Offset = "0x1452D90", VA = "0x1452D90")]
	public FloorCheck()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CA43C", Offset = "0x7CA43C")]
public class Mobs : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA49C", Offset = "0x7CA49C")]
	private sealed class <Animate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mobs <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000242")]
			[Address(RVA = "0xDBAC50", Offset = "0xDBAC50", VA = "0xDBAC50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000244")]
			[Address(RVA = "0xDBAC98", Offset = "0xDBAC98", VA = "0xDBAC98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xDBA8B4", Offset = "0xDBA8B4", VA = "0xDBA8B4")]
		[DebuggerHidden]
		public <Animate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xDBA8E0", Offset = "0xDBA8E0", VA = "0xDBA8E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xDBA8E4", Offset = "0xDBA8E4", VA = "0xDBA8E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xDBAC58", Offset = "0xDBAC58", VA = "0xDBAC58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int AnimatorWalk;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int AnimatorAttack;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xFEE3A0", Offset = "0xFEE3A0", VA = "0xFEE3A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xFEE3F4", Offset = "0xFEE3F4", VA = "0xFEE3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xFEE420", Offset = "0xFEE420", VA = "0xFEE420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE1CC", Offset = "0x7DE1CC")]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xFEE48C", Offset = "0xFEE48C", VA = "0xFEE48C")]
	public Mobs()
	{
	}
}
[Token(Token = "0x2000067")]
public class StateRandom : StateMachineBehaviour
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int AnimatorRandom;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE7BDDC", Offset = "0xE7BDDC", VA = "0xE7BDDC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE7BE68", Offset = "0xE7BE68", VA = "0xE7BE68")]
	public StateRandom()
	{
	}
}
[Token(Token = "0x2000068")]
public class RotateFlareHolder : MonoBehaviour
{
	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD9B634", Offset = "0xD9B634", VA = "0xD9B634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD9B768", Offset = "0xD9B768", VA = "0xD9B768")]
	public RotateFlareHolder()
	{
	}
}
[Token(Token = "0x2000069")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4AC", Offset = "0x7CA4AC")]
	private sealed class <WaitForSound>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0xF272DC", Offset = "0xF272DC", VA = "0xF272DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0xF27324", Offset = "0xF27324", VA = "0xF27324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0xF271AC", Offset = "0xF271AC", VA = "0xF271AC")]
		[DebuggerHidden]
		public <WaitForSound>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0xF271D8", Offset = "0xF271D8", VA = "0xF271D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0xF271DC", Offset = "0xF271DC", VA = "0xF271DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0xF272E4", Offset = "0xF272E4", VA = "0xF272E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4BC", Offset = "0x7CA4BC")]
	private sealed class <WaitForSetting>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025A")]
			[Address(RVA = "0xF2715C", Offset = "0xF2715C", VA = "0xF2715C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025C")]
			[Address(RVA = "0xF271A4", Offset = "0xF271A4", VA = "0xF271A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0xF26FA4", Offset = "0xF26FA4", VA = "0xF26FA4")]
		[DebuggerHidden]
		public <WaitForSetting>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xF26FD0", Offset = "0xF26FD0", VA = "0xF26FD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0xF26FD4", Offset = "0xF26FD4", VA = "0xF26FD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0xF27164", Offset = "0xF27164", VA = "0xF27164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4CC", Offset = "0x7CA4CC")]
	private sealed class <DropItems>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000260")]
			[Address(RVA = "0xF26F54", Offset = "0xF26F54", VA = "0xF26F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000262")]
			[Address(RVA = "0xF26F9C", Offset = "0xF26F9C", VA = "0xF26F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xF26A68", Offset = "0xF26A68", VA = "0xF26A68")]
		[DebuggerHidden]
		public <DropItems>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0xF26A94", Offset = "0xF26A94", VA = "0xF26A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xF26A98", Offset = "0xF26A98", VA = "0xF26A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xF26F5C", Offset = "0xF26F5C", VA = "0xF26F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gameOn;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool gameStart;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool gameWon;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool cointIn;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentFallSpeed;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float itemDropRate;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int itemDropCount;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bombSpot;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bombSpotX;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bombSpotParent;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bombPrefab;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject diskPrefab;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeKeeper;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int dropChoice;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject itemChosen;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject itemMade;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject littleOne;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform littleOneStartingPos;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject highScoreText;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject titleText;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject pressStartText;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject scoreText;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int gameScore;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int highScore;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text actualHighScoreText;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ArcadeSoundSystem arcadeSoundSystem;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float highScoreSoundDuration;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject arcadeDoor;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string[] translatedStrings;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LightManager lightManager;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine startItAll;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x145C494", Offset = "0x145C494", VA = "0x145C494")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x145C6B4", Offset = "0x145C6B4", VA = "0x145C6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x145C6B8", Offset = "0x145C6B8", VA = "0x145C6B8")]
	public void GameReset()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x145C8EC", Offset = "0x145C8EC", VA = "0x145C8EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE27C", Offset = "0x7DE27C")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x145C648", Offset = "0x145C648", VA = "0x145C648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE2DC", Offset = "0x7DE2DC")]
	private IEnumerator WaitForSetting()
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x145C880", Offset = "0x145C880", VA = "0x145C880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE33C", Offset = "0x7DE33C")]
	private IEnumerator DropItems()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x145C958", Offset = "0x145C958", VA = "0x145C958")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class GamePauser : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4DC", Offset = "0x7CA4DC")]
	private sealed class <startStuff>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GamePauser <>4__this;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <cd>5__2;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0xF27430", Offset = "0xF27430", VA = "0xF27430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000270")]
			[Address(RVA = "0xF27478", Offset = "0xF27478", VA = "0xF27478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xF2732C", Offset = "0xF2732C", VA = "0xF2732C")]
		[DebuggerHidden]
		public <startStuff>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xF27358", Offset = "0xF27358", VA = "0xF27358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xF2735C", Offset = "0xF2735C", VA = "0xF2735C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xF27438", Offset = "0xF27438", VA = "0xF27438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MediaPlayer[] movies;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MediaPlayer[] theMoviesPlaying;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timelinecounter;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int movieCounter;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] movieIsPlaying;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeScale;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool headSetOffOnce;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool headSetOnOnce;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool pauseOnce;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool unpauseOnce;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wornTheFirstTime;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool gamePaused;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool isPaused;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool pausedFromFocus;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool pausedFromHeadSetRemoved;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyPauseOnce;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x145C97C", Offset = "0x145C97C", VA = "0x145C97C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x145CC70", Offset = "0x145CC70", VA = "0x145CC70")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x145CDFC", Offset = "0x145CDFC", VA = "0x145CDFC")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x145D5A0", Offset = "0x145D5A0", VA = "0x145D5A0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x145CED0", Offset = "0x145CED0", VA = "0x145CED0")]
	public void DoAPauseCheck()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x145D658", Offset = "0x145D658", VA = "0x145D658")]
	public void onWindowFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x145CBF4", Offset = "0x145CBF4", VA = "0x145CBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE48C", Offset = "0x7DE48C")]
	private IEnumerator startStuff(float secs)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x145D904", Offset = "0x145D904", VA = "0x145D904")]
	public GamePauser()
	{
	}
}
[Token(Token = "0x200006F")]
public class GamesManager : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4EC", Offset = "0x7CA4EC")]
	private sealed class <MoveFromTo>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 a;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 b;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform objectToMove;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <step>5__2;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A5")]
			[Address(RVA = "0xDB1A18", Offset = "0xDB1A18", VA = "0xDB1A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0xDB1A60", Offset = "0xDB1A60", VA = "0xDB1A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xDB1864", Offset = "0xDB1864", VA = "0xDB1864")]
		[DebuggerHidden]
		public <MoveFromTo>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xDB1890", Offset = "0xDB1890", VA = "0xDB1890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xDB1894", Offset = "0xDB1894", VA = "0xDB1894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xDB1A20", Offset = "0xDB1A20", VA = "0xDB1A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA4FC", Offset = "0x7CA4FC")]
	private sealed class <KittyEndSequence>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0xDB0624", Offset = "0xDB0624", VA = "0xDB0624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0xDB066C", Offset = "0xDB066C", VA = "0xDB066C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xDB0434", Offset = "0xDB0434", VA = "0xDB0434")]
		[DebuggerHidden]
		public <KittyEndSequence>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xDB0460", Offset = "0xDB0460", VA = "0xDB0460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xDB0464", Offset = "0xDB0464", VA = "0xDB0464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xDB062C", Offset = "0xDB062C", VA = "0xDB062C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA50C", Offset = "0x7CA50C")]
	private sealed class <GooseStartSequence>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0xDB03E4", Offset = "0xDB03E4", VA = "0xDB03E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0xDB042C", Offset = "0xDB042C", VA = "0xDB042C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xDAFAD0", Offset = "0xDAFAD0", VA = "0xDAFAD0")]
		[DebuggerHidden]
		public <GooseStartSequence>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xDAFAFC", Offset = "0xDAFAFC", VA = "0xDAFAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xDAFB00", Offset = "0xDAFB00", VA = "0xDAFB00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xDB03EC", Offset = "0xDB03EC", VA = "0xDB03EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA51C", Offset = "0x7CA51C")]
	private sealed class <AttackersMoveRoutineRoutine>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0xF27AC0", Offset = "0xF27AC0", VA = "0xF27AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0xF27B08", Offset = "0xF27B08", VA = "0xF27B08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xF2761C", Offset = "0xF2761C", VA = "0xF2761C")]
		[DebuggerHidden]
		public <AttackersMoveRoutineRoutine>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xF27648", Offset = "0xF27648", VA = "0xF27648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xF2764C", Offset = "0xF2764C", VA = "0xF2764C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xF27AC8", Offset = "0xF27AC8", VA = "0xF27AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA52C", Offset = "0x7CA52C")]
	private sealed class <AttackersShootRoutineRoutine>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xF27D2C", Offset = "0xF27D2C", VA = "0xF27D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0xF27D74", Offset = "0xF27D74", VA = "0xF27D74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xF27B10", Offset = "0xF27B10", VA = "0xF27B10")]
		[DebuggerHidden]
		public <AttackersShootRoutineRoutine>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xF27B3C", Offset = "0xF27B3C", VA = "0xF27B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xF27B40", Offset = "0xF27B40", VA = "0xF27B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xF27D34", Offset = "0xF27D34", VA = "0xF27D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA53C", Offset = "0x7CA53C")]
	private sealed class <CosmicStartSequence>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0xF28CF0", Offset = "0xF28CF0", VA = "0xF28CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0xF28D38", Offset = "0xF28D38", VA = "0xF28D38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xF28438", Offset = "0xF28438", VA = "0xF28438")]
		[DebuggerHidden]
		public <CosmicStartSequence>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xF28464", Offset = "0xF28464", VA = "0xF28464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xF28468", Offset = "0xF28468", VA = "0xF28468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xF28CF8", Offset = "0xF28CF8", VA = "0xF28CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA54C", Offset = "0x7CA54C")]
	private sealed class <CosmicGlitchStartSequence>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0xF283E8", Offset = "0xF283E8", VA = "0xF283E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0xF28430", Offset = "0xF28430", VA = "0xF28430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xF27D7C", Offset = "0xF27D7C", VA = "0xF27D7C")]
		[DebuggerHidden]
		public <CosmicGlitchStartSequence>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xF27DA8", Offset = "0xF27DA8", VA = "0xF27DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xF27DAC", Offset = "0xF27DAC", VA = "0xF27DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xF283F0", Offset = "0xF283F0", VA = "0xF283F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA55C", Offset = "0x7CA55C")]
	private sealed class <MeteorsGlitchStartSequence>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0xDB0E94", Offset = "0xDB0E94", VA = "0xDB0E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0xDB0EDC", Offset = "0xDB0EDC", VA = "0xDB0EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xDB0828", Offset = "0xDB0828", VA = "0xDB0828")]
		[DebuggerHidden]
		public <MeteorsGlitchStartSequence>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xDB0854", Offset = "0xDB0854", VA = "0xDB0854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xDB0858", Offset = "0xDB0858", VA = "0xDB0858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xDB0E9C", Offset = "0xDB0E9C", VA = "0xDB0E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA56C", Offset = "0x7CA56C")]
	private sealed class <GooseGlitchStartSequence>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0xDAFA80", Offset = "0xDAFA80", VA = "0xDAFA80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0xDAFAC8", Offset = "0xDAFAC8", VA = "0xDAFAC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xDAF43C", Offset = "0xDAF43C", VA = "0xDAF43C")]
		[DebuggerHidden]
		public <GooseGlitchStartSequence>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xDAF468", Offset = "0xDAF468", VA = "0xDAF468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xDAF46C", Offset = "0xDAF46C", VA = "0xDAF46C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xDAFA88", Offset = "0xDAFA88", VA = "0xDAFA88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA57C", Offset = "0x7CA57C")]
	private sealed class <MeteorsStartSequence>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DB")]
			[Address(RVA = "0xDB1814", Offset = "0xDB1814", VA = "0xDB1814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002DD")]
			[Address(RVA = "0xDB185C", Offset = "0xDB185C", VA = "0xDB185C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xDB0EE4", Offset = "0xDB0EE4", VA = "0xDB0EE4")]
		[DebuggerHidden]
		public <MeteorsStartSequence>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xDB0F10", Offset = "0xDB0F10", VA = "0xDB0F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xDB0F14", Offset = "0xDB0F14", VA = "0xDB0F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xDB181C", Offset = "0xDB181C", VA = "0xDB181C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA58C", Offset = "0x7CA58C")]
	private sealed class <MeteorsCountDownSequence>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0xDB07D8", Offset = "0xDB07D8", VA = "0xDB07D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0xDB0820", Offset = "0xDB0820", VA = "0xDB0820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xDB0674", Offset = "0xDB0674", VA = "0xDB0674")]
		[DebuggerHidden]
		public <MeteorsCountDownSequence>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xDB06A0", Offset = "0xDB06A0", VA = "0xDB06A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xDB06A4", Offset = "0xDB06A4", VA = "0xDB06A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xDB07E0", Offset = "0xDB07E0", VA = "0xDB07E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA59C", Offset = "0x7CA59C")]
	private sealed class <FlashText>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0xDAF3EC", Offset = "0xDAF3EC", VA = "0xDAF3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0xDAF434", Offset = "0xDAF434", VA = "0xDAF434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xDAF288", Offset = "0xDAF288", VA = "0xDAF288")]
		[DebuggerHidden]
		public <FlashText>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xDAF2B4", Offset = "0xDAF2B4", VA = "0xDAF2B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xDAF2B8", Offset = "0xDAF2B8", VA = "0xDAF2B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xDAF3F4", Offset = "0xDAF3F4", VA = "0xDAF3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5AC", Offset = "0x7CA5AC")]
	private sealed class <FadeToWalls>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameOb;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0xDAF238", Offset = "0xDAF238", VA = "0xDAF238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0xDAF280", Offset = "0xDAF280", VA = "0xDAF280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xDAF09C", Offset = "0xDAF09C", VA = "0xDAF09C")]
		[DebuggerHidden]
		public <FadeToWalls>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xDAF0C8", Offset = "0xDAF0C8", VA = "0xDAF0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xDAF0CC", Offset = "0xDAF0CC", VA = "0xDAF0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xDAF240", Offset = "0xDAF240", VA = "0xDAF240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5BC", Offset = "0x7CA5BC")]
	private sealed class <RoboTimeTimeRoutine>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamesManager <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0xDB1B44", Offset = "0xDB1B44", VA = "0xDB1B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F5")]
			[Address(RVA = "0xDB1B8C", Offset = "0xDB1B8C", VA = "0xDB1B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xDB1A68", Offset = "0xDB1A68", VA = "0xDB1A68")]
		[DebuggerHidden]
		public <RoboTimeTimeRoutine>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xDB1A94", Offset = "0xDB1A94", VA = "0xDB1A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xDB1A98", Offset = "0xDB1A98", VA = "0xDB1A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xDB1B4C", Offset = "0xDB1B4C", VA = "0xDB1B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5CC", Offset = "0x7CA5CC")]
	private sealed class <FadeToSprites>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameOb;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float aValue;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float aTime;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <alpha>5__2;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <t>5__3;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F9")]
			[Address(RVA = "0xDAF04C", Offset = "0xDAF04C", VA = "0xDAF04C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002FB")]
			[Address(RVA = "0xDAF094", Offset = "0xDAF094", VA = "0xDAF094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xDAEE78", Offset = "0xDAEE78", VA = "0xDAEE78")]
		[DebuggerHidden]
		public <FadeToSprites>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xDAEEA4", Offset = "0xDAEEA4", VA = "0xDAEEA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xDAEEA8", Offset = "0xDAEEA8", VA = "0xDAEEA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xDAF054", Offset = "0xDAF054", VA = "0xDAF054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] gooseSet;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] gooseSprites;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] galaxySet;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] galaxySprites;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] gridSet;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> allMeteors;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numberOfMets;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int typeOfMets;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float xOfMeteor;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float yOfMeteor;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] meteorPrefabs;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool gameGoing;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool meteorGameEnded;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject meteorsTitle;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text meteorTimeText;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text meteorTimeTextNumber;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text meteorWinText;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int meteorTimeLeft;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool meteorActive;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine meteorCountDownRoutine;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine meteorCountDownFlashRoutine;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string winPhrase;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int winPhrasePicker;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject meteorLoseSound;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject meteorWinSound;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int meteorDifficulty;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GameObject> allGeese;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject goosePrefab;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform[] gooseSpawnLocations;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int gooseSpawnChooser;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int prevGooseSpawnChooser;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform topPositionKitty;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform bottomPositionKitty;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform positionKitty;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject kittyObject;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int geeseShot;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject[] geeseInKittyHands;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject gooseTitle;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int numberOfBullets;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int activeGooseBullets;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int bulletCount;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int gooseDifficulty;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool gooseLost;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] bulletSprites;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject bulletsDisplay;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject bulletsDisplay2;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public List<GameObject> allCosmicAttackers;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] attackerPrefabs;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform[] attackerSpawnLocations;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int attackerSpawnChooser;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int prevAttackerSpawnChooser;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float xSpawnerPlacement;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float ySpawnerPlacement;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Coroutine attackersMoveRoutine;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Coroutine attackersShootRoutine;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool moveAttackers;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool moveAttackersRight;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	public bool moveOneWay;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	public bool moveDown;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip[] moveSounds;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int moveSoundsTracker;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioSource ciGameSounds;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float shootTimer;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject cosmicTitle;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject[] enemyBullets;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject tempAttacker;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public int numberOfAttackersLeft;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int cosmicDifficulty;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject staticStage;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject triggerPlay;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject backGroundMusic;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject meteorBackgroundMusic;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public RoboManager roboManager;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int gameTracker;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int overallWinTracker;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject[] glitchScreens;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool glitchTime;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Coroutine roboTimeRoutine;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public int circuitsDestroyed;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject[] circuitLights;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject[] circuitPanels;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject[] circuitUnits;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public AudioSource elevatorMusicSource;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public AudioSource recordScratchSource;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public CoreyCode coreyCode;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject cosmicLifeGroup;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject cosmicLife1;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject cosmicLife2;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject cosmicLife3;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int cosmicLives;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x145DB08", Offset = "0x145DB08", VA = "0x145DB08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x145DF54", Offset = "0x145DF54", VA = "0x145DF54")]
	public void DoNextGame()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x145E2F4", Offset = "0x145E2F4", VA = "0x145E2F4")]
	public void MakeMeteors()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x145E8A8", Offset = "0x145E8A8", VA = "0x145E8A8")]
	public void MakeGeeses()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x145EBFC", Offset = "0x145EBFC", VA = "0x145EBFC")]
	public void ShowKittyEnd()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x145EEF0", Offset = "0x145EEF0", VA = "0x145EEF0")]
	public void MoveKittyUp()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x145F038", Offset = "0x145F038", VA = "0x145F038")]
	public void MoveKittyDown()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x145EF80", Offset = "0x145EF80", VA = "0x145EF80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE53C", Offset = "0x7DE53C")]
	private IEnumerator MoveFromTo(Transform objectToMove, Vector3 a, Vector3 b, float speed)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x145EE84", Offset = "0x145EE84", VA = "0x145EE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE59C", Offset = "0x7DE59C")]
	private IEnumerator KittyEndSequence()
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x145F0C8", Offset = "0x145F0C8", VA = "0x145F0C8")]
	public void SetBulletSpritesLeft()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x145E0D8", Offset = "0x145E0D8", VA = "0x145E0D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE5FC", Offset = "0x7DE5FC")]
	private IEnumerator GooseStartSequence()
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x145F37C", Offset = "0x145F37C", VA = "0x145F37C")]
	public void LooseGoose()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x145F404", Offset = "0x145F404", VA = "0x145F404")]
	public void WinGoose()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x145F494", Offset = "0x145F494", VA = "0x145F494")]
	public void WinChecker()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x145F4F8", Offset = "0x145F4F8", VA = "0x145F4F8")]
	public void MakeCosmicAttackers()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x145F878", Offset = "0x145F878", VA = "0x145F878")]
	public void DestroyAllInvaders()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x145F96C", Offset = "0x145F96C", VA = "0x145F96C")]
	public void CosmicAttackersMove()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x145FA0C", Offset = "0x145FA0C", VA = "0x145FA0C")]
	public void StopCosmicAttackersMove()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x145F9A0", Offset = "0x145F9A0", VA = "0x145F9A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE65C", Offset = "0x7DE65C")]
	private IEnumerator AttackersMoveRoutineRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x145FA18", Offset = "0x145FA18", VA = "0x145FA18")]
	public void CosmicInvaderShoot()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x145FA4C", Offset = "0x145FA4C", VA = "0x145FA4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE6BC", Offset = "0x7DE6BC")]
	private IEnumerator AttackersShootRoutineRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x145E1B0", Offset = "0x145E1B0", VA = "0x145E1B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE71C", Offset = "0x7DE71C")]
	private IEnumerator CosmicStartSequence()
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x145FAB8", Offset = "0x145FAB8", VA = "0x145FAB8")]
	public void CommonGlitchSequence()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x145FEF8", Offset = "0x145FEF8", VA = "0x145FEF8")]
	public void CircuitActivator()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x145E144", Offset = "0x145E144", VA = "0x145E144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE77C", Offset = "0x7DE77C")]
	private IEnumerator CosmicGlitchStartSequence()
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x145E21C", Offset = "0x145E21C", VA = "0x145E21C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE7DC", Offset = "0x7DE7DC")]
	private IEnumerator MeteorsGlitchStartSequence()
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x145E06C", Offset = "0x145E06C", VA = "0x145E06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE83C", Offset = "0x7DE83C")]
	private IEnumerator GooseGlitchStartSequence()
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x145E288", Offset = "0x145E288", VA = "0x145E288")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE89C", Offset = "0x7DE89C")]
	private IEnumerator MeteorsStartSequence()
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x14600C0", Offset = "0x14600C0", VA = "0x14600C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE8FC", Offset = "0x7DE8FC")]
	private IEnumerator MeteorsCountDownSequence()
	{
		return null;
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x145DEE8", Offset = "0x145DEE8", VA = "0x145DEE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE95C", Offset = "0x7DE95C")]
	private IEnumerator FlashText()
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x146012C", Offset = "0x146012C", VA = "0x146012C")]
	public void pickWinPhrase()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x146031C", Offset = "0x146031C", VA = "0x146031C")]
	public void pickLosePhrase()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x146050C", Offset = "0x146050C", VA = "0x146050C")]
	public void StopMeteorCountDown()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1460540", Offset = "0x1460540", VA = "0x1460540")]
	public void LooseMeteors()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1460724", Offset = "0x1460724", VA = "0x1460724")]
	public void WinMeteors()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1460824", Offset = "0x1460824", VA = "0x1460824")]
	public void LoseCosmicAttackers()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1460A8C", Offset = "0x1460A8C", VA = "0x1460A8C")]
	public void WinCosmicAttackers()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1460638", Offset = "0x1460638", VA = "0x1460638")]
	public void DestroyAllMeteors()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x145FAFC", Offset = "0x145FAFC", VA = "0x145FAFC")]
	public void TurnAllOff()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1460C14", Offset = "0x1460C14", VA = "0x1460C14")]
	public void ChangeToGooseShoot2()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x146100C", Offset = "0x146100C", VA = "0x146100C")]
	public void ChangeToGooseShoot()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x146138C", Offset = "0x146138C", VA = "0x146138C")]
	public void ChangeFromGooseShoot()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1461470", Offset = "0x1461470", VA = "0x1461470")]
	public void ChangeToGalaxyAttack()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1461124", Offset = "0x1461124", VA = "0x1461124")]
	public void ChangeFromGalaxyAttack()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x14617DC", Offset = "0x14617DC", VA = "0x14617DC")]
	public void CircuitDestroyed()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1461278", Offset = "0x1461278", VA = "0x1461278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DE9BC", Offset = "0x7DE9BC")]
	private IEnumerator FadeToWalls(GameObject gameOb, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1461994", Offset = "0x1461994", VA = "0x1461994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DEA1C", Offset = "0x7DEA1C")]
	private IEnumerator RoboTimeTimeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x14612F8", Offset = "0x14612F8", VA = "0x14612F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DEA7C", Offset = "0x7DEA7C")]
	private IEnumerator FadeToSprites(GameObject gameOb, float aValue, float aTime, bool fadeIn)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1461A00", Offset = "0x1461A00", VA = "0x1461A00")]
	public GamesManager()
	{
	}
}
[Token(Token = "0x200007F")]
public class GooseAnimater : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5DC", Offset = "0x7CA5DC")]
	private sealed class <FlapLoop>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GooseAnimater <>4__this;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <keepGoing>5__2;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030C")]
			[Address(RVA = "0xDB1CB4", Offset = "0xDB1CB4", VA = "0xDB1CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0xDB1CFC", Offset = "0xDB1CFC", VA = "0xDB1CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xDB1B94", Offset = "0xDB1B94", VA = "0xDB1B94")]
		[DebuggerHidden]
		public <FlapLoop>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xDB1BC0", Offset = "0xDB1BC0", VA = "0xDB1BC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xDB1BC4", Offset = "0xDB1BC4", VA = "0xDB1BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xDB1CBC", Offset = "0xDB1CBC", VA = "0xDB1CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation gooseAnim;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_ClipName;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimatorClipInfo[] m_CurrentClipInfo;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_CurrentClipLength;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yChange;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float xChange;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int moveMentChoice;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int previousMoveChoice;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool facingRight;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loopTime;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine changeDirections;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject gamesManager;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gooseHonk;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip gooseThud;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool playThudOnce;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool triggerOnce;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1738EC8", Offset = "0x1738EC8", VA = "0x1738EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x173911C", Offset = "0x173911C", VA = "0x173911C")]
	public void MoveUpAndRight()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x17391A4", Offset = "0x17391A4", VA = "0x17391A4")]
	public void MoveUpAndLeft()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1739228", Offset = "0x1739228", VA = "0x1739228")]
	public void MoveDownAndLeft()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x17392AC", Offset = "0x17392AC", VA = "0x17392AC")]
	public void MoveDownAndRight()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1739334", Offset = "0x1739334", VA = "0x1739334")]
	public void PickTheDirection()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x17394C4", Offset = "0x17394C4", VA = "0x17394C4")]
	public void GooseShootLost()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x17394C8", Offset = "0x17394C8", VA = "0x17394C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x17390B0", Offset = "0x17390B0", VA = "0x17390B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DEF8C", Offset = "0x7DEF8C")]
	private IEnumerator FlapLoop()
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1739B2C", Offset = "0x1739B2C", VA = "0x1739B2C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1739C44", Offset = "0x1739C44", VA = "0x1739C44")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1739C48", Offset = "0x1739C48", VA = "0x1739C48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x173A018", Offset = "0x173A018", VA = "0x173A018")]
	public GooseAnimater()
	{
	}
}
[Token(Token = "0x2000081")]
public class GooseHonk : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5EC", Offset = "0x7CA5EC")]
	private sealed class <GooseHonkSequence>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GooseHonk <>4__this;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000316")]
			[Address(RVA = "0xDB1E38", Offset = "0xDB1E38", VA = "0xDB1E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0xDB1E80", Offset = "0xDB1E80", VA = "0xDB1E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0xDB1D04", Offset = "0xDB1D04", VA = "0xDB1D04")]
		[DebuggerHidden]
		public <GooseHonkSequence>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xDB1D30", Offset = "0xDB1D30", VA = "0xDB1D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xDB1D34", Offset = "0xDB1D34", VA = "0xDB1D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xDB1E40", Offset = "0xDB1E40", VA = "0xDB1E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gooseHonky;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float honkDelay;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x173A02C", Offset = "0x173A02C", VA = "0x173A02C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x173A0C4", Offset = "0x173A0C4", VA = "0x173A0C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x173A058", Offset = "0x173A058", VA = "0x173A058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF03C", Offset = "0x7DF03C")]
	private IEnumerator GooseHonkSequence()
	{
		return null;
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x173A0C8", Offset = "0x173A0C8", VA = "0x173A0C8")]
	public GooseHonk()
	{
	}
}
[Token(Token = "0x2000083")]
public class GunGrabbable : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rightHandGun;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftHandGun;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject highlight;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightHand;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftHand;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gunPos;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform oculusLeftGunPos;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ogGunPos;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftHandGunTop;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TriggerPlay triggerPlay;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayableDirector startSequencePlayable;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject pedestal;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CoreyCode coreyCode;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject handModeltoTurnOffRight;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject handModeltoTurnOffLeft;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool grabStarted;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Grabbable grab;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1438E64", Offset = "0x1438E64", VA = "0x1438E64")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1439124", Offset = "0x1439124", VA = "0x1439124")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1439190", Offset = "0x1439190", VA = "0x1439190")]
	public GunGrabbable()
	{
	}
}
[Token(Token = "0x2000084")]
public class GunPickUp : MonoBehaviour
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rightHandGun;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftHandGun;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject highlight;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightHand;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftHand;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gunPos;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform oculusLeftGunPos;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ogGunPos;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftHandGunTop;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TriggerPlay triggerPlay;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayableDirector startSequencePlayable;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject pedestal;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CoreyCode coreyCode;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1439198", Offset = "0x1439198", VA = "0x1439198")]
	private void Start()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x14391CC", Offset = "0x14391CC", VA = "0x14391CC")]
	public void GunPickUpTime()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x14394EC", Offset = "0x14394EC", VA = "0x14394EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x14394F0", Offset = "0x14394F0", VA = "0x14394F0")]
	public GunPickUp()
	{
	}
}
[Token(Token = "0x2000085")]
public class HapticButtonPress : MonoBehaviour
{
	[Token(Token = "0x6000320")]
	[Address(RVA = "0x12F1A74", Offset = "0x12F1A74", VA = "0x12F1A74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x12F1A78", Offset = "0x12F1A78", VA = "0x12F1A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x12F1A7C", Offset = "0x12F1A7C", VA = "0x12F1A7C")]
	public HapticButtonPress()
	{
	}
}
[Token(Token = "0x2000086")]
public class HighlightGrab : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material startMaterial;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material highLightMaterial;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool stay;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool iscolliding;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x12F463C", Offset = "0x12F463C", VA = "0x12F463C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x12F4640", Offset = "0x12F4640", VA = "0x12F4640")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x12F4704", Offset = "0x12F4704", VA = "0x12F4704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x12F47A0", Offset = "0x12F47A0", VA = "0x12F47A0")]
	public HighlightGrab()
	{
	}
}
[Token(Token = "0x2000087")]
public class HintSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000088")]
	private class PlayerData
	{
		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneAtQuit;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool gameComplete;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] taskComplete;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hintTracker;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int littleBHighScore;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] pieceTracker;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] tapeTracker;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] hatTracker;

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xDB5BEC", Offset = "0xDB5BEC", VA = "0xDB5BEC")]
		public PlayerData()
		{
		}
	}

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HintSystem hintSystem;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string deviceType;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isOculus;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string sceneAtQuit;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string lastScene;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gameComplete;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hintTracker;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool[] taskComplete;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool[] pieceTracker;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool[] tapeTracker;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool[] hatTracker;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool foundLastHint;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int littleBHighScore;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sceneChanger;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Scene scene;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string saveFileName;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool knucklesCont;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool wandCont;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool windowsMixedCont;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string nextScene;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string selectedLocal;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool englishSubtitle;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool iQSaver;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x12F4D04", Offset = "0x12F4D04", VA = "0x12F4D04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x12F5254", Offset = "0x12F5254", VA = "0x12F5254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x12F5334", Offset = "0x12F5334", VA = "0x12F5334")]
	public bool AllHatsWornCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x12F5398", Offset = "0x12F5398", VA = "0x12F5398")]
	public bool AllTapesPlayedCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x12F53FC", Offset = "0x12F53FC", VA = "0x12F53FC")]
	public void CheckTasksComplete()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x12F553C", Offset = "0x12F553C", VA = "0x12F553C")]
	public void GetTasksComplete()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x12F559C", Offset = "0x12F559C", VA = "0x12F559C")]
	public void LoadUpTheGame()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x12F5664", Offset = "0x12F5664", VA = "0x12F5664")]
	private void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x12F5668", Offset = "0x12F5668", VA = "0x12F5668")]
	public void Save()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x12F57CC", Offset = "0x12F57CC", VA = "0x12F57CC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x12F4E84", Offset = "0x12F4E84", VA = "0x12F4E84")]
	public void Load()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x12F5A68", Offset = "0x12F5A68", VA = "0x12F5A68")]
	public HintSystem()
	{
	}
}
[Token(Token = "0x2000089")]
public class JoystickControl : MonoBehaviour
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CDBC8", Offset = "0x7CDBC8")]
	[SerializeField]
	private Transform _handle;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxXAngle;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _maxZAngle;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CDC34", Offset = "0x7CDC34")]
	[SerializeField]
	private float _vibrationStrenght;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CDC74", Offset = "0x7CDC74")]
	[SerializeField]
	private float _vibrationInterval;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float XPercentage;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ZPercentage;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x16A7E30", Offset = "0x16A7E30", VA = "0x16A7E30")]
	public JoystickControl()
	{
	}
}
[Token(Token = "0x200008A")]
public class KeyInDoor : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool keyInDoor;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool grabCheck;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x16A9E90", Offset = "0x16A9E90", VA = "0x16A9E90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x16A9E94", Offset = "0x16A9E94", VA = "0x16A9E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x16A9F68", Offset = "0x16A9F68", VA = "0x16A9F68")]
	public KeyInDoor()
	{
	}
}
[Token(Token = "0x200008B")]
public class KeyPadKeypress : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA5FC", Offset = "0x7CA5FC")]
	private sealed class <WaitForSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyPadKeypress <>4__this;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0xDB6848", Offset = "0xDB6848", VA = "0xDB6848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xDB6890", Offset = "0xDB6890", VA = "0xDB6890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xDB675C", Offset = "0xDB675C", VA = "0xDB675C")]
		[DebuggerHidden]
		public <WaitForSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xDB6788", Offset = "0xDB6788", VA = "0xDB6788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xDB678C", Offset = "0xDB678C", VA = "0xDB678C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xDB6850", Offset = "0xDB6850", VA = "0xDB6850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent keyPressed;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator keyPressAnim;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool doAnimate;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitTime;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x16A9F78", Offset = "0x16A9F78", VA = "0x16A9F78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x16AA0DC", Offset = "0x16AA0DC", VA = "0x16AA0DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF0EC", Offset = "0x7DF0EC")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x16AA148", Offset = "0x16AA148", VA = "0x16AA148")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x16AA14C", Offset = "0x16AA14C", VA = "0x16AA14C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x16AA150", Offset = "0x16AA150", VA = "0x16AA150")]
	public KeyPadKeypress()
	{
	}
}
[Token(Token = "0x200008D")]
public class KeyboardButtonPressManager : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x16AA168", Offset = "0x16AA168", VA = "0x16AA168")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x16AA1F8", Offset = "0x16AA1F8", VA = "0x16AA1F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x16AA1FC", Offset = "0x16AA1FC", VA = "0x16AA1FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x16AA200", Offset = "0x16AA200", VA = "0x16AA200")]
	public KeyboardButtonPressManager()
	{
	}
}
[Token(Token = "0x200008E")]
public class KeyboardKeyPresser : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA60C", Offset = "0x7CA60C")]
	private sealed class <WaitForSound>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyboardKeyPresser <>4__this;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034F")]
			[Address(RVA = "0xDB6978", Offset = "0xDB6978", VA = "0xDB6978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000351")]
			[Address(RVA = "0xDB69C0", Offset = "0xDB69C0", VA = "0xDB69C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xDB6898", Offset = "0xDB6898", VA = "0xDB6898")]
		[DebuggerHidden]
		public <WaitForSound>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xDB68C4", Offset = "0xDB68C4", VA = "0xDB68C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xDB68C8", Offset = "0xDB68C8", VA = "0xDB68C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xDB6980", Offset = "0xDB6980", VA = "0xDB6980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent keyPressed;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator keyPressAnim;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x16AA208", Offset = "0x16AA208", VA = "0x16AA208")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x16AA364", Offset = "0x16AA364", VA = "0x16AA364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF19C", Offset = "0x7DF19C")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x16AA3D0", Offset = "0x16AA3D0", VA = "0x16AA3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x16AA3D4", Offset = "0x16AA3D4", VA = "0x16AA3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x16AA3D8", Offset = "0x16AA3D8", VA = "0x16AA3D8")]
	public KeyboardKeyPresser()
	{
	}
}
[Token(Token = "0x2000090")]
public class KeyboardKeypress : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyCodeItem;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyboardManager keyboardManager;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string tempString;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x16AA3E8", Offset = "0x16AA3E8", VA = "0x16AA3E8")]
	public void KeyPressed()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x16AA5A4", Offset = "0x16AA5A4", VA = "0x16AA5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x16AA634", Offset = "0x16AA634", VA = "0x16AA634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x16AA638", Offset = "0x16AA638", VA = "0x16AA638")]
	public KeyboardKeypress()
	{
	}
}
[Token(Token = "0x2000091")]
public class KeyboardManager : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] keyAudioSource;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] pianoKeyClips;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] fluteKeyClips;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] fantasyKeyClips;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] violinKeyClips;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float initialVolume;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip soundOfSilence;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject musicTypeSlider;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool keyboardIsOn;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string keyBoardCode;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string keyBoardCodeEntered;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int slideZone;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool doorOpen;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject keyDoor;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x16AA640", Offset = "0x16AA640", VA = "0x16AA640")]
	private void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x16AA6C4", Offset = "0x16AA6C4", VA = "0x16AA6C4")]
	public void turnOffKeyboard()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x16AA730", Offset = "0x16AA730", VA = "0x16AA730")]
	public void turnOnKeyboard()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x16AA73C", Offset = "0x16AA73C", VA = "0x16AA73C")]
	public void ChangeToPiano()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x16AA7C8", Offset = "0x16AA7C8", VA = "0x16AA7C8")]
	public void ChangeToFlute()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x16AA854", Offset = "0x16AA854", VA = "0x16AA854")]
	public void ChangeToFantasy()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x16AA8E0", Offset = "0x16AA8E0", VA = "0x16AA8E0")]
	public void ChangeToViolin()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x16AA96C", Offset = "0x16AA96C", VA = "0x16AA96C")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x16AA970", Offset = "0x16AA970", VA = "0x16AA970")]
	public KeyboardManager()
	{
	}
}
[Token(Token = "0x2000092")]
public class KeypadManager : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyPadCode;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string codeEntered;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doorOpen;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject doorToOpen;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource unlockIt;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource lockIt;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject doorCollider;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isASafe;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool officLocker;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject lockerHeadFade;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] objectsInside;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] objectsInsideRigidBody;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x16AAA7C", Offset = "0x16AAA7C", VA = "0x16AAA7C")]
	public void onePressed()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x16AAFAC", Offset = "0x16AAFAC", VA = "0x16AAFAC")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x16AB050", Offset = "0x16AB050", VA = "0x16AB050")]
	public void threePressed()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x16AB0F4", Offset = "0x16AB0F4", VA = "0x16AB0F4")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x16AB198", Offset = "0x16AB198", VA = "0x16AB198")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x16AB23C", Offset = "0x16AB23C", VA = "0x16AB23C")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x16AB2E0", Offset = "0x16AB2E0", VA = "0x16AB2E0")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x16AB384", Offset = "0x16AB384", VA = "0x16AB384")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x16AB428", Offset = "0x16AB428", VA = "0x16AB428")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x16AB4CC", Offset = "0x16AB4CC", VA = "0x16AB4CC")]
	public void zeroPressed()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x16AB570", Offset = "0x16AB570", VA = "0x16AB570")]
	public void redPressed()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x16AAB20", Offset = "0x16AAB20", VA = "0x16AAB20")]
	public void greenPressed()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x16AB5BC", Offset = "0x16AB5BC", VA = "0x16AB5BC")]
	public void lockDoorOnClose()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x16AB698", Offset = "0x16AB698", VA = "0x16AB698")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x16AB69C", Offset = "0x16AB69C", VA = "0x16AB69C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x16AB6A0", Offset = "0x16AB6A0", VA = "0x16AB6A0")]
	public KeypadManager()
	{
	}
}
[Token(Token = "0x2000093")]
public class KittyBehavior : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool unlockIt;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x16AB9F8", Offset = "0x16AB9F8", VA = "0x16AB9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x16ABA4C", Offset = "0x16ABA4C", VA = "0x16ABA4C")]
	private void LaughingKitty()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x16ABAA8", Offset = "0x16ABAA8", VA = "0x16ABAA8")]
	private void StandardKitty()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x16ABB04", Offset = "0x16ABB04", VA = "0x16ABB04")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x16ABBEC", Offset = "0x16ABBEC", VA = "0x16ABBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x16ABBF0", Offset = "0x16ABBF0", VA = "0x16ABBF0")]
	public KittyBehavior()
	{
	}
}
[Token(Token = "0x2000094")]
public class LanguageSetter : MonoBehaviour
{
	[Token(Token = "0x6000375")]
	[Address(RVA = "0x16ABBF8", Offset = "0x16ABBF8", VA = "0x16ABBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x16ABBFC", Offset = "0x16ABBFC", VA = "0x16ABBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x16ABC00", Offset = "0x16ABC00", VA = "0x16ABC00")]
	public LanguageSetter()
	{
	}
}
[Token(Token = "0x2000095")]
public class LightManager : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA61C", Offset = "0x7CA61C")]
	private sealed class <WaitForLights>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightManager <>4__this;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToWait;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000382")]
			[Address(RVA = "0xDB6E20", Offset = "0xDB6E20", VA = "0xDB6E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0xDB6E68", Offset = "0xDB6E68", VA = "0xDB6E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xDB6BD4", Offset = "0xDB6BD4", VA = "0xDB6BD4")]
		[DebuggerHidden]
		public <WaitForLights>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xDB6C00", Offset = "0xDB6C00", VA = "0xDB6C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xDB6C04", Offset = "0xDB6C04", VA = "0xDB6C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xDB6E28", Offset = "0xDB6E28", VA = "0xDB6E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] lights;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ogLightValues;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] smoothing;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flickerLights;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool lightsOn;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool doLightsOnce;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool flickOffOnce;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material deskLightBulb;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material lampLightBulb;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject deskLightBulbObject;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lampLightBulbObject;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color deskLightBulbEmissionColor;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color lampLightBulbEmissionColor;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color tempColor1;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color tempColor2;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource leftSpeaker;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource rightSpeaker;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material arcadeScreenMat;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color arcadeScreenMatEmissionColor;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material arcadeTop;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color arcadeTopEmissionColor;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpriteRenderer arcadeScreen;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SpriteRenderer arcadeScreenTexture;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SpriteRenderer arcadeGirl;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text[] arcadeScreenText;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RoboRotate robot;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioSource roboAudio;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool audioPlayingNow;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool turnOffMusic;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x16ADA3C", Offset = "0x16ADA3C", VA = "0x16ADA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x16ADAFC", Offset = "0x16ADAFC", VA = "0x16ADAFC")]
	public void RestoreOgLightValues()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x16ADC6C", Offset = "0x16ADC6C", VA = "0x16ADC6C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x16ADC70", Offset = "0x16ADC70", VA = "0x16ADC70")]
	public void HaveLightsFlicker(float timeForLights)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x16ADC9C", Offset = "0x16ADC9C", VA = "0x16ADC9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF24C", Offset = "0x7DF24C")]
	private IEnumerator WaitForLights(float timeToWait)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x16ADD18", Offset = "0x16ADD18", VA = "0x16ADD18")]
	private void Update()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x16AE444", Offset = "0x16AE444", VA = "0x16AE444")]
	public LightManager()
	{
	}
}
[Token(Token = "0x2000097")]
public class LightsManager : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA62C", Offset = "0x7CA62C")]
	private sealed class <OneLightFlickerRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0xDB7488", Offset = "0xDB7488", VA = "0xDB7488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0xDB74D0", Offset = "0xDB74D0", VA = "0xDB74D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xDB73A4", Offset = "0xDB73A4", VA = "0xDB73A4")]
		[DebuggerHidden]
		public <OneLightFlickerRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xDB73D0", Offset = "0xDB73D0", VA = "0xDB73D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xDB73D4", Offset = "0xDB73D4", VA = "0xDB73D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xDB7490", Offset = "0xDB7490", VA = "0xDB7490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA63C", Offset = "0x7CA63C")]
	private sealed class <LightFlickerRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0xDB6FD8", Offset = "0xDB6FD8", VA = "0xDB6FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0xDB7020", Offset = "0xDB7020", VA = "0xDB7020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xDB6E70", Offset = "0xDB6E70", VA = "0xDB6E70")]
		[DebuggerHidden]
		public <LightFlickerRoutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xDB6E9C", Offset = "0xDB6E9C", VA = "0xDB6E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xDB6EA0", Offset = "0xDB6EA0", VA = "0xDB6EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xDB6FE0", Offset = "0xDB6FE0", VA = "0xDB6FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA64C", Offset = "0x7CA64C")]
	private sealed class <LightsToTheBeat>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightsManager <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0xDB7354", Offset = "0xDB7354", VA = "0xDB7354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0xDB739C", Offset = "0xDB739C", VA = "0xDB739C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xDB7028", Offset = "0xDB7028", VA = "0xDB7028")]
		[DebuggerHidden]
		public <LightsToTheBeat>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xDB7054", Offset = "0xDB7054", VA = "0xDB7054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xDB7058", Offset = "0xDB7058", VA = "0xDB7058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xDB735C", Offset = "0xDB735C", VA = "0xDB735C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] lights;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ogLightValues;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] smoothing;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flickerLights;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool lightsOn;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool doLightsOnce;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool flickOffOnce;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lightOffLength;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool alwaysTrue;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine lightyRoutine;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool robuttRapGoing;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light spotLight1;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Light spotLight2;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light spotLight3;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Light spotLight4;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Light spotLightRobots;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material lightMat1;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material lightMat2;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material lightMat3;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material lightMat4;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material lightBulb;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject phone;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject laptop;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject fan;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int colorPick;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Color pickedColor;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int lastPickedColor;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool pickedALight;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int[] lastColorPicked;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x16AE4A8", Offset = "0x16AE4A8", VA = "0x16AE4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x16AE69C", Offset = "0x16AE69C", VA = "0x16AE69C")]
	public void RestoreOgLightValues()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x16AE7EC", Offset = "0x16AE7EC", VA = "0x16AE7EC")]
	public void GoodByeLights()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x16AE970", Offset = "0x16AE970", VA = "0x16AE970")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x16AE974", Offset = "0x16AE974", VA = "0x16AE974")]
	public void StartLightFlicker()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x16AEA14", Offset = "0x16AEA14", VA = "0x16AEA14")]
	public void StartLightToBeat()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x16AEAB4", Offset = "0x16AEAB4", VA = "0x16AEAB4")]
	public void StopLightFlicker()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x16AEAC0", Offset = "0x16AEAC0", VA = "0x16AEAC0")]
	public void oneFlicker()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x16AEAEC", Offset = "0x16AEAEC", VA = "0x16AEAEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF2FC", Offset = "0x7DF2FC")]
	private IEnumerator OneLightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x16AE9A8", Offset = "0x16AE9A8", VA = "0x16AE9A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF35C", Offset = "0x7DF35C")]
	private IEnumerator LightFlickerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x16AEB58", Offset = "0x16AEB58", VA = "0x16AEB58")]
	public void ChoseAColor(int lastPicked)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x16AEC98", Offset = "0x16AEC98", VA = "0x16AEC98")]
	public int ChoseAColorNotRandom(int lastPicked)
	{
		return default(int);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x16AEA48", Offset = "0x16AEA48", VA = "0x16AEA48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF3BC", Offset = "0x7DF3BC")]
	private IEnumerator LightsToTheBeat()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x16AED34", Offset = "0x16AED34", VA = "0x16AED34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x16AEEE8", Offset = "0x16AEEE8", VA = "0x16AEEE8")]
	public LightsManager()
	{
	}
}
[Token(Token = "0x200009B")]
public class LocomotionManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009C")]
	private class PlayerData
	{
		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float arcadeVolume;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float versionNumber;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothLocomotion;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool smoothLeft;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxTurnSpeed;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxLocoSpeed;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float snapDegrees;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool smoothTurning;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string selectedLocal;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool englishSubtitle;

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xDB7618", Offset = "0xDB7618", VA = "0xDB7618")]
		public PlayerData()
		{
		}
	}

	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA65C", Offset = "0x7CA65C")]
	private sealed class <WaitToLoadLanguage>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0xDB75C8", Offset = "0xDB75C8", VA = "0xDB75C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0xDB7610", Offset = "0xDB7610", VA = "0xDB7610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xDB74D8", Offset = "0xDB74D8", VA = "0xDB74D8")]
		[DebuggerHidden]
		public <WaitToLoadLanguage>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xDB7504", Offset = "0xDB7504", VA = "0xDB7504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xDB7508", Offset = "0xDB7508", VA = "0xDB7508", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xDB75D0", Offset = "0xDB75D0", VA = "0xDB75D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocomotionManager locomotionManager;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveFileName;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float arcadeVolume;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float versionNumber;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool smoothLocomotion;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool smoothLeft;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool smoothTurning;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxTurnSpeed;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxLocoSpeed;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float snapDegrees;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedLocal;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool englishSubtitle;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool iQSaver;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x111D28C", Offset = "0x111D28C", VA = "0x111D28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x111D3E8", Offset = "0x111D3E8", VA = "0x111D3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x111D470", Offset = "0x111D470", VA = "0x111D470")]
	public void Save()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x111D5A0", Offset = "0x111D5A0", VA = "0x111D5A0")]
	public void Load()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x111D414", Offset = "0x111D414", VA = "0x111D414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF50C", Offset = "0x7DF50C")]
	private IEnumerator WaitToLoadLanguage()
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x111E674", Offset = "0x111E674", VA = "0x111E674")]
	public LocomotionManager()
	{
	}
}
[Token(Token = "0x200009E")]
public class MakeItBlink : MonoBehaviour
{
	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA66C", Offset = "0x7CA66C")]
	private sealed class <DoTheFlash>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MakeItBlink <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xDB7C24", Offset = "0xDB7C24", VA = "0xDB7C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xDB7C6C", Offset = "0xDB7C6C", VA = "0xDB7C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xDB7B00", Offset = "0xDB7B00", VA = "0xDB7B00")]
		[DebuggerHidden]
		public <DoTheFlash>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xDB7B2C", Offset = "0xDB7B2C", VA = "0xDB7B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xDB7B30", Offset = "0xDB7B30", VA = "0xDB7B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xDB7C2C", Offset = "0xDB7C2C", VA = "0xDB7C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool flashText;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1122934", Offset = "0x1122934", VA = "0x1122934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF5BC", Offset = "0x7DF5BC")]
	public IEnumerator DoTheFlash()
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x11229A0", Offset = "0x11229A0", VA = "0x11229A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11229CC", Offset = "0x11229CC", VA = "0x11229CC")]
	public MakeItBlink()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MakeNonKinematicAfterPickup : MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerOnce;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11229DC", Offset = "0x11229DC", VA = "0x11229DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1122A3C", Offset = "0x1122A3C", VA = "0x1122A3C")]
	public MakeNonKinematicAfterPickup()
	{
	}
}
[Token(Token = "0x20000A1")]
public class MakeScaleStick : MonoBehaviour
{
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1122A4C", Offset = "0x1122A4C", VA = "0x1122A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1122A50", Offset = "0x1122A50", VA = "0x1122A50")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1122A54", Offset = "0x1122A54", VA = "0x1122A54")]
	public MakeScaleStick()
	{
	}
}
[Token(Token = "0x20000A2")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1118558", Offset = "0x1118558", VA = "0x1118558")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x11185E8", Offset = "0x11185E8", VA = "0x11185E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1118BB4", Offset = "0x1118BB4", VA = "0x1118BB4")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1118DBC", Offset = "0x1118DBC", VA = "0x1118DBC")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x111F0B8", Offset = "0x111F0B8", VA = "0x111F0B8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x111F198", Offset = "0x111F198", VA = "0x111F198")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x20000A4")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1120B08", Offset = "0x1120B08", VA = "0x1120B08")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1120C50", Offset = "0x1120C50", VA = "0x1120C50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1120EC4", Offset = "0x1120EC4", VA = "0x1120EC4")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1121450", Offset = "0x1121450", VA = "0x1121450")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x20000A5")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x111FB38", Offset = "0x111FB38", VA = "0x111FB38")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x111FC18", Offset = "0x111FC18", VA = "0x111FC18")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA67C", Offset = "0x7CA67C")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0xDB77B0", Offset = "0xDB77B0", VA = "0xDB77B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0xDB77F8", Offset = "0xDB77F8", VA = "0xDB77F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xDB7620", Offset = "0xDB7620", VA = "0xDB7620")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xDB764C", Offset = "0xDB764C", VA = "0xDB764C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xDB7650", Offset = "0xDB7650", VA = "0xDB7650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xDB77B8", Offset = "0xDB77B8", VA = "0xDB77B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x111F1A0", Offset = "0x111F1A0", VA = "0x111F1A0")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x111F238", Offset = "0x111F238", VA = "0x111F238")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x111F614", Offset = "0x111F614", VA = "0x111F614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF66C", Offset = "0x7DF66C")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x111F680", Offset = "0x111F680", VA = "0x111F680")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x111F760", Offset = "0x111F760", VA = "0x111F760")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x20000A8")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x111F7D8", Offset = "0x111F7D8", VA = "0x111F7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x111F834", Offset = "0x111F834", VA = "0x111F834")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x111F8C0", Offset = "0x111F8C0", VA = "0x111F8C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x111F9A0", Offset = "0x111F9A0", VA = "0x111F9A0")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x20000A9")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x111F9A8", Offset = "0x111F9A8", VA = "0x111F9A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x111FA40", Offset = "0x111FA40", VA = "0x111FA40")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x20000AA")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x111FA48", Offset = "0x111FA48", VA = "0x111FA48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x111FB28", Offset = "0x111FB28", VA = "0x111FB28")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x20000AB")]
[ExecuteInEditMode]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x111FB30", Offset = "0x111FB30", VA = "0x111FB30")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x20000AC")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x111FC20", Offset = "0x111FC20", VA = "0x111FC20")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x111FE14", Offset = "0x111FE14", VA = "0x111FE14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x11209E8", Offset = "0x11209E8", VA = "0x11209E8")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1120B00", Offset = "0x1120B00", VA = "0x1120B00")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1121458", Offset = "0x1121458", VA = "0x1121458")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1121538", Offset = "0x1121538", VA = "0x1121538")]
	public void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x11215DC", Offset = "0x11215DC", VA = "0x11215DC")]
	public void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x112187C", Offset = "0x112187C", VA = "0x112187C")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MeteorBehavior : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA69C", Offset = "0x7CA69C")]
	private sealed class <MeteorsStartDelay>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorBehavior <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xDBA61C", Offset = "0xDBA61C", VA = "0xDBA61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xDBA664", Offset = "0xDBA664", VA = "0xDBA664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xDBA540", Offset = "0xDBA540", VA = "0xDBA540")]
		[DebuggerHidden]
		public <MeteorsStartDelay>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xDBA56C", Offset = "0xDBA56C", VA = "0xDBA56C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xDBA570", Offset = "0xDBA570", VA = "0xDBA570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xDBA624", Offset = "0xDBA624", VA = "0xDBA624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation gooseAnim;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_ClipName;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimatorClipInfo[] m_CurrentClipInfo;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_CurrentClipLength;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float yChange;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float xChange;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int moveMentChoice;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lowMovementSpeed;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float highMovementSpeed;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float roateSpeed;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool makeMeteorOnCollision;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject meteor3;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject meteor4;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject meteor5;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gamesManager;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource exploadSound;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource bumpSound;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool bulletsCanHit;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x112E46C", Offset = "0x112E46C", VA = "0x112E46C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x112E630", Offset = "0x112E630", VA = "0x112E630")]
	public void MoveUpAndRight()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x112E6AC", Offset = "0x112E6AC", VA = "0x112E6AC")]
	public void MoveUpAndLeft()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x112E728", Offset = "0x112E728", VA = "0x112E728")]
	public void MoveDownAndLeft()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x112E7A4", Offset = "0x112E7A4", VA = "0x112E7A4")]
	public void MoveDownAndRight()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x112E820", Offset = "0x112E820", VA = "0x112E820")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x112EA24", Offset = "0x112EA24", VA = "0x112EA24")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x112EAD4", Offset = "0x112EAD4", VA = "0x112EAD4")]
	public void meteorShot()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x112E5C4", Offset = "0x112E5C4", VA = "0x112E5C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF71C", Offset = "0x7DF71C")]
	private IEnumerator MeteorsStartDelay()
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x112F040", Offset = "0x112F040", VA = "0x112F040")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x112F340", Offset = "0x112F340", VA = "0x112F340")]
	public MeteorBehavior()
	{
	}
}
[Token(Token = "0x20000B0")]
public class GE_OrbitCamera : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	public enum ZoomMethod
	{
		[Token(Token = "0x4000418")]
		PinchZoom = 1,
		[Token(Token = "0x4000419")]
		SlideZoom
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Target;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Distance;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_MinDistance;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_MaxDistance;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_XSpeed;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_YSpeed;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_ZoomSpeed;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_XInvert;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_YInvert;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool m_ZoomInvert;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_YMinLimit;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_YMaxLimit;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_X;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_Y;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_OrbitSpeedDelayTime;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_OrbitSpeedMultiplier;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 m_CurrTouch1;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 m_LastTouch1;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 m_CurrTouch2;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 m_LastTouch2;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_CurrDist;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_LastDist;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ZoomMethod m_ZoomMethod;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1459F6C", Offset = "0x1459F6C", VA = "0x1459F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x145A290", Offset = "0x145A290", VA = "0x145A290")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x145A144", Offset = "0x145A144", VA = "0x145A144")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x145A98C", Offset = "0x145A98C", VA = "0x145A98C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x145A9BC", Offset = "0x145A9BC", VA = "0x145A9BC")]
	public void SetZoomMethod(ZoomMethod zoomMethod)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x145A9C4", Offset = "0x145A9C4", VA = "0x145A9C4")]
	public GE_OrbitCamera()
	{
	}
}
[Token(Token = "0x20000B2")]
public class GE_OrbitCameraUI : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle m_ToggleYaw;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Toggle m_TogglePitch;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle m_ToggleZoom;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Toggle m_ToggleHelp;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Toggle m_ToggleDetails;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.UI.Button m_PinchZoom;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.UI.Button m_VScrollZoom;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIAnimFREE m_PanelSettings;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIAnimFREE m_ButtonSettings;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIAnimFREE m_PanelHelp1;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIAnimFREE m_PanelHelp2;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIAnimFREE m_PanelDetails;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GE_OrbitCamera m_GE_OrbitCamera;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x145AA4C", Offset = "0x145AA4C", VA = "0x145AA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x145B44C", Offset = "0x145B44C", VA = "0x145B44C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x145B450", Offset = "0x145B450", VA = "0x145B450")]
	public void OnToggle_InvertX()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x145B518", Offset = "0x145B518", VA = "0x145B518")]
	public void OnToggle_InvertY()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x145B5E0", Offset = "0x145B5E0", VA = "0x145B5E0")]
	public void OnToggle_InvertZoom()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x145B6A8", Offset = "0x145B6A8", VA = "0x145B6A8")]
	public void OnToggle_Help()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x145B854", Offset = "0x145B854", VA = "0x145B854")]
	public void OnToggle_Details()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x145B94C", Offset = "0x145B94C", VA = "0x145B94C")]
	public void OnButton_PinchZoom()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x145BA40", Offset = "0x145BA40", VA = "0x145BA40")]
	public void OnButton_VScrollZoom()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x145BB34", Offset = "0x145BB34", VA = "0x145BB34")]
	public void OnButton_Settings()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x145BC18", Offset = "0x145BC18", VA = "0x145BC18")]
	public GE_OrbitCameraUI()
	{
	}
}
[Token(Token = "0x20000B3")]
public class GE_ToggleFullScreenUI : MonoBehaviour
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_DefWidth;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_DefHeight;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x145BC20", Offset = "0x145BC20", VA = "0x145BC20")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x145BCE0", Offset = "0x145BCE0", VA = "0x145BCE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x145BCE4", Offset = "0x145BCE4", VA = "0x145BCE4")]
	public void OnButton_ToggleFullScreen()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x145C08C", Offset = "0x145C08C", VA = "0x145C08C")]
	public GE_ToggleFullScreenUI()
	{
	}
}
[Token(Token = "0x20000B4")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x10C1F0C", Offset = "0x10C1F0C", VA = "0x10C1F0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x10C1F80", Offset = "0x10C1F80", VA = "0x10C1F80")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x10C2058", Offset = "0x10C2058", VA = "0x10C2058")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x20000B5")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000412")]
	[Address(RVA = "0x16AC750", Offset = "0x16AC750", VA = "0x16AC750", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x16AC7D0", Offset = "0x16AC7D0", VA = "0x16AC7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x16AC7D4", Offset = "0x16AC7D4", VA = "0x16AC7D4")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x20000B6")]
public class GE_UIResponder : MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_PackageTitle;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_TargetURL;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x145C094", Offset = "0x145C094", VA = "0x145C094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x145C174", Offset = "0x145C174", VA = "0x145C174")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x145C178", Offset = "0x145C178", VA = "0x145C178")]
	public void OnButton_AssetName()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x145C184", Offset = "0x145C184", VA = "0x145C184")]
	public GE_UIResponder()
	{
	}
}
[Token(Token = "0x20000B7")]
public class GA_FREE_Demo00 : MonoBehaviour
{
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6AC", Offset = "0x7CA6AC")]
	private sealed class <ShowText>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Delay;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <go>5__2;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0xF21D28", Offset = "0xF21D28", VA = "0xF21D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0xF21D70", Offset = "0xF21D70", VA = "0xF21D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xF21ABC", Offset = "0xF21ABC", VA = "0xF21ABC")]
		[DebuggerHidden]
		public <ShowText>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xF21AE8", Offset = "0xF21AE8", VA = "0xF21AE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xF21AEC", Offset = "0xF21AEC", VA = "0xF21AEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xF21D30", Offset = "0xF21D30", VA = "0xF21D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x14555F0", Offset = "0x14555F0", VA = "0x14555F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1455620", Offset = "0x1455620", VA = "0x1455620")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x14556C4", Offset = "0x14556C4", VA = "0x14556C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1455650", Offset = "0x1455650", VA = "0x1455650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF7CC", Offset = "0x7DF7CC")]
	private IEnumerator ShowText(float Delay)
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x14556C8", Offset = "0x14556C8", VA = "0x14556C8")]
	public GA_FREE_Demo00()
	{
	}
}
[Token(Token = "0x20000B9")]
public class GA_FREE_Demo01 : MonoBehaviour
{
	[Token(Token = "0x20000BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6BC", Offset = "0x7CA6BC")]
	private sealed class <MoveInTitleGameObjects>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo01 <>4__this;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0xF22430", Offset = "0xF22430", VA = "0xF22430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0xF22478", Offset = "0xF22478", VA = "0xF22478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xF22320", Offset = "0xF22320", VA = "0xF22320")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xF2234C", Offset = "0xF2234C", VA = "0xF2234C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xF22350", Offset = "0xF22350", VA = "0xF22350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xF22438", Offset = "0xF22438", VA = "0xF22438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6CC", Offset = "0x7CA6CC")]
	private sealed class <MoveInPrimaryButtons>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo01 <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xF222D0", Offset = "0xF222D0", VA = "0xF222D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0xF22318", Offset = "0xF22318", VA = "0xF22318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xF221AC", Offset = "0xF221AC", VA = "0xF221AC")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xF221D8", Offset = "0xF221D8", VA = "0xF221D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xF221DC", Offset = "0xF221DC", VA = "0xF221DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xF222D8", Offset = "0xF222D8", VA = "0xF222D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6DC", Offset = "0x7CA6DC")]
	private sealed class <HideTitleTextMeshes>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo01 <>4__this;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0xF2215C", Offset = "0xF2215C", VA = "0xF2215C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000445")]
			[Address(RVA = "0xF221A4", Offset = "0xF221A4", VA = "0xF221A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xF22040", Offset = "0xF22040", VA = "0xF22040")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xF2206C", Offset = "0xF2206C", VA = "0xF2206C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xF22070", Offset = "0xF22070", VA = "0xF22070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xF22164", Offset = "0xF22164", VA = "0xF22164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6EC", Offset = "0x7CA6EC")]
	private sealed class <EnableAllDemoButtons>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo01 <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xF21FF0", Offset = "0xF21FF0", VA = "0xF21FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0xF22038", Offset = "0xF22038", VA = "0xF22038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xF21F08", Offset = "0xF21F08", VA = "0xF21F08")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xF21F34", Offset = "0xF21F34", VA = "0xF21F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xF21F38", Offset = "0xF21F38", VA = "0xF21F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xF21FF8", Offset = "0xF21FF8", VA = "0xF21FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA6FC", Offset = "0x7CA6FC")]
	private sealed class <DisableButtonForSeconds>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0xF21EB8", Offset = "0xF21EB8", VA = "0xF21EB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0xF21F00", Offset = "0xF21F00", VA = "0xF21F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xF21D78", Offset = "0xF21D78", VA = "0xF21D78")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xF21DA4", Offset = "0xF21DA4", VA = "0xF21DA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xF21DA8", Offset = "0xF21DA8", VA = "0xF21DA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xF21EC0", Offset = "0xF21EC0", VA = "0xF21EC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_TopLeft_A;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_TopLeft_B;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_BottomLeft_A;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_BottomLeft_B;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIAnimFREE m_RightBar_A;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIAnimFREE m_RightBar_B;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GUIAnimFREE m_RightBar_C;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_TopLeft_IsOn;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool m_BottomLeft_IsOn;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool m_RightBar_IsOn;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x14556D0", Offset = "0x14556D0", VA = "0x14556D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1455700", Offset = "0x1455700", VA = "0x1455700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x14557E4", Offset = "0x14557E4", VA = "0x14557E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1455778", Offset = "0x1455778", VA = "0x1455778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF87C", Offset = "0x7DF87C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x14557E8", Offset = "0x14557E8", VA = "0x14557E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF8DC", Offset = "0x7DF8DC")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1455854", Offset = "0x1455854", VA = "0x1455854")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1455918", Offset = "0x1455918", VA = "0x1455918")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF93C", Offset = "0x7DF93C")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1455984", Offset = "0x1455984", VA = "0x1455984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF99C", Offset = "0x7DF99C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x14559F0", Offset = "0x14559F0", VA = "0x14559F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DF9FC", Offset = "0x7DF9FC")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1455A6C", Offset = "0x1455A6C", VA = "0x1455A6C")]
	public void OnButton_TopLeft()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1455C6C", Offset = "0x1455C6C", VA = "0x1455C6C")]
	public void OnButton_BottomLeft()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1455D88", Offset = "0x1455D88", VA = "0x1455D88")]
	public void OnButton_RightBar()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1455B88", Offset = "0x1455B88", VA = "0x1455B88")]
	private void ToggleTopLeft()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1455BC0", Offset = "0x1455BC0", VA = "0x1455BC0")]
	private void ToggleBottomLeft()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1455BF8", Offset = "0x1455BF8", VA = "0x1455BF8")]
	private void ToggleRightBar()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1455EA4", Offset = "0x1455EA4", VA = "0x1455EA4")]
	public GA_FREE_Demo01()
	{
	}
}
[Token(Token = "0x20000BF")]
public class GA_FREE_Demo02 : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA70C", Offset = "0x7CA70C")]
	private sealed class <MoveInTitleGameObjects>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo02 <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0xF22BF8", Offset = "0xF22BF8", VA = "0xF22BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0xF22C40", Offset = "0xF22C40", VA = "0xF22C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xF22AE8", Offset = "0xF22AE8", VA = "0xF22AE8")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xF22B14", Offset = "0xF22B14", VA = "0xF22B14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xF22B18", Offset = "0xF22B18", VA = "0xF22B18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xF22C00", Offset = "0xF22C00", VA = "0xF22C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA71C", Offset = "0x7CA71C")]
	private sealed class <ShowDialog>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo02 <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046F")]
			[Address(RVA = "0xF22D44", Offset = "0xF22D44", VA = "0xF22D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0xF22D8C", Offset = "0xF22D8C", VA = "0xF22D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xF22C48", Offset = "0xF22C48", VA = "0xF22C48")]
		[DebuggerHidden]
		public <ShowDialog>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xF22C74", Offset = "0xF22C74", VA = "0xF22C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xF22C78", Offset = "0xF22C78", VA = "0xF22C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xF22D4C", Offset = "0xF22D4C", VA = "0xF22D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA72C", Offset = "0x7CA72C")]
	private sealed class <HideTitleTextMeshes>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo02 <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xF22A98", Offset = "0xF22A98", VA = "0xF22A98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xF22AE0", Offset = "0xF22AE0", VA = "0xF22AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xF2297C", Offset = "0xF2297C", VA = "0xF2297C")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xF229A8", Offset = "0xF229A8", VA = "0xF229A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xF229AC", Offset = "0xF229AC", VA = "0xF229AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xF22AA0", Offset = "0xF22AA0", VA = "0xF22AA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA73C", Offset = "0x7CA73C")]
	private sealed class <EnableAllDemoButtons>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo02 <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xF2292C", Offset = "0xF2292C", VA = "0xF2292C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0xF22974", Offset = "0xF22974", VA = "0xF22974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xF22844", Offset = "0xF22844", VA = "0xF22844")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xF22870", Offset = "0xF22870", VA = "0xF22870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xF22874", Offset = "0xF22874", VA = "0xF22874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xF22934", Offset = "0xF22934", VA = "0xF22934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA74C", Offset = "0x7CA74C")]
	private sealed class <DisableAllButtonsForSeconds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DisableTime;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xF227F4", Offset = "0xF227F4", VA = "0xF227F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0xF2283C", Offset = "0xF2283C", VA = "0xF2283C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xF226F4", Offset = "0xF226F4", VA = "0xF226F4")]
		[DebuggerHidden]
		public <DisableAllButtonsForSeconds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xF22720", Offset = "0xF22720", VA = "0xF22720", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xF22724", Offset = "0xF22724", VA = "0xF22724", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xF227FC", Offset = "0xF227FC", VA = "0xF227FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA75C", Offset = "0x7CA75C")]
	private sealed class <DialogMoveIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUIAnimFREE.ePosMove PosMoveIn;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GA_FREE_Demo02 <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xF226A4", Offset = "0xF226A4", VA = "0xF226A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xF226EC", Offset = "0xF226EC", VA = "0xF226EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xF22480", Offset = "0xF22480", VA = "0xF22480")]
		[DebuggerHidden]
		public <DialogMoveIn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xF224AC", Offset = "0xF224AC", VA = "0xF224AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xF224B0", Offset = "0xF224B0", VA = "0xF224B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xF226AC", Offset = "0xF226AC", VA = "0xF226AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_Dialog;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1455EAC", Offset = "0x1455EAC", VA = "0x1455EAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1455EDC", Offset = "0x1455EDC", VA = "0x1455EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1455FC0", Offset = "0x1455FC0", VA = "0x1455FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1455F54", Offset = "0x1455F54", VA = "0x1455F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFBEC", Offset = "0x7DFBEC")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1455FC4", Offset = "0x1455FC4", VA = "0x1455FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFC4C", Offset = "0x7DFC4C")]
	private IEnumerator ShowDialog()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1456030", Offset = "0x1456030", VA = "0x1456030")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1456078", Offset = "0x1456078", VA = "0x1456078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFCAC", Offset = "0x7DFCAC")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x14560E4", Offset = "0x14560E4", VA = "0x14560E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFD0C", Offset = "0x7DFD0C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1456150", Offset = "0x1456150", VA = "0x1456150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFD6C", Offset = "0x7DFD6C")]
	private IEnumerator DisableAllButtonsForSeconds(float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x14561C4", Offset = "0x14561C4", VA = "0x14561C4")]
	public void OnButton_UpperEdge()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x145628C", Offset = "0x145628C", VA = "0x145628C")]
	public void OnButton_LeftEdge()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x14562D8", Offset = "0x14562D8", VA = "0x14562D8")]
	public void OnButton_RightEdge()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x145633C", Offset = "0x145633C", VA = "0x145633C")]
	public void OnButton_BottomEdge()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x14563A0", Offset = "0x14563A0", VA = "0x14563A0")]
	public void OnButton_UpperLeft()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1456404", Offset = "0x1456404", VA = "0x1456404")]
	public void OnButton_UpperRight()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1456468", Offset = "0x1456468", VA = "0x1456468")]
	public void OnButton_BottomLeft()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x14564CC", Offset = "0x14564CC", VA = "0x14564CC")]
	public void OnButton_BottomRight()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1456530", Offset = "0x1456530", VA = "0x1456530")]
	public void OnButton_Center()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1456210", Offset = "0x1456210", VA = "0x1456210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7DFDCC", Offset = "0x7DFDCC")]
	private IEnumerator DialogMoveIn(GUIAnimFREE.ePosMove PosMoveIn)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1456594", Offset = "0x1456594", VA = "0x1456594")]
	public GA_FREE_Demo02()
	{
	}
}
[Token(Token = "0x20000C6")]
public class GA_FREE_Demo03 : MonoBehaviour
{
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA76C", Offset = "0x7CA76C")]
	private sealed class <MoveInTitleGameObjects>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A0")]
			[Address(RVA = "0xF237D8", Offset = "0xF237D8", VA = "0xF237D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A2")]
			[Address(RVA = "0xF23820", Offset = "0xF23820", VA = "0xF23820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xF236C8", Offset = "0xF236C8", VA = "0xF236C8")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xF236F4", Offset = "0xF236F4", VA = "0xF236F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xF236F8", Offset = "0xF236F8", VA = "0xF236F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xF237E0", Offset = "0xF237E0", VA = "0xF237E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA77C", Offset = "0x7CA77C")]
	private sealed class <ShowDialogs>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0xF23960", Offset = "0xF23960", VA = "0xF23960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0xF239A8", Offset = "0xF239A8", VA = "0xF239A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xF23828", Offset = "0xF23828", VA = "0xF23828")]
		[DebuggerHidden]
		public <ShowDialogs>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xF23854", Offset = "0xF23854", VA = "0xF23854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xF23858", Offset = "0xF23858", VA = "0xF23858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xF23968", Offset = "0xF23968", VA = "0xF23968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA78C", Offset = "0x7CA78C")]
	private sealed class <HideTitleTextMeshes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xF23678", Offset = "0xF23678", VA = "0xF23678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xF236C0", Offset = "0xF236C0", VA = "0xF236C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xF2355C", Offset = "0xF2355C", VA = "0xF2355C")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xF23588", Offset = "0xF23588", VA = "0xF23588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xF2358C", Offset = "0xF2358C", VA = "0xF2358C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xF23680", Offset = "0xF23680", VA = "0xF23680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA79C", Offset = "0x7CA79C")]
	private sealed class <EnableAllDemoButtons>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0xF2350C", Offset = "0xF2350C", VA = "0xF2350C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0xF23554", Offset = "0xF23554", VA = "0xF23554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xF23424", Offset = "0xF23424", VA = "0xF23424")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xF23450", Offset = "0xF23450", VA = "0xF23450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xF23454", Offset = "0xF23454", VA = "0xF23454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xF23514", Offset = "0xF23514", VA = "0xF23514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7AC", Offset = "0x7CA7AC")]
	private sealed class <DisableButtonForSeconds>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0xF233D4", Offset = "0xF233D4", VA = "0xF233D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0xF2341C", Offset = "0xF2341C", VA = "0xF2341C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xF23294", Offset = "0xF23294", VA = "0xF23294")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xF232C0", Offset = "0xF232C0", VA = "0xF232C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xF232C4", Offset = "0xF232C4", VA = "0xF232C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xF233DC", Offset = "0xF233DC", VA = "0xF233DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7BC", Offset = "0x7CA7BC")]
	private sealed class <Dialog1_MoveIn>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0xF22E84", Offset = "0xF22E84", VA = "0xF22E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0xF22ECC", Offset = "0xF22ECC", VA = "0xF22ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xF22D94", Offset = "0xF22D94", VA = "0xF22D94")]
		[DebuggerHidden]
		public <Dialog1_MoveIn>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xF22DC0", Offset = "0xF22DC0", VA = "0xF22DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xF22DC4", Offset = "0xF22DC4", VA = "0xF22DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xF22E8C", Offset = "0xF22E8C", VA = "0xF22E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7CC", Offset = "0x7CA7CC")]
	private sealed class <Dialog2_MoveIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0xF22FC4", Offset = "0xF22FC4", VA = "0xF22FC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0xF2300C", Offset = "0xF2300C", VA = "0xF2300C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xF22ED4", Offset = "0xF22ED4", VA = "0xF22ED4")]
		[DebuggerHidden]
		public <Dialog2_MoveIn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xF22F00", Offset = "0xF22F00", VA = "0xF22F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xF22F04", Offset = "0xF22F04", VA = "0xF22F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xF22FCC", Offset = "0xF22FCC", VA = "0xF22FCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7DC", Offset = "0x7CA7DC")]
	private sealed class <Dialog3_MoveIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0xF23104", Offset = "0xF23104", VA = "0xF23104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xF2314C", Offset = "0xF2314C", VA = "0xF2314C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xF23014", Offset = "0xF23014", VA = "0xF23014")]
		[DebuggerHidden]
		public <Dialog3_MoveIn>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xF23040", Offset = "0xF23040", VA = "0xF23040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xF23044", Offset = "0xF23044", VA = "0xF23044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xF2310C", Offset = "0xF2310C", VA = "0xF2310C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7EC", Offset = "0x7CA7EC")]
	private sealed class <Dialog4_MoveIn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo03 <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xF23244", Offset = "0xF23244", VA = "0xF23244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0xF2328C", Offset = "0xF2328C", VA = "0xF2328C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xF23154", Offset = "0xF23154", VA = "0xF23154")]
		[DebuggerHidden]
		public <Dialog4_MoveIn>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xF23180", Offset = "0xF23180", VA = "0xF23180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xF23184", Offset = "0xF23184", VA = "0xF23184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xF2324C", Offset = "0xF2324C", VA = "0xF2324C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_Dialog1;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_Dialog2;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_Dialog3;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_Dialog4;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x145659C", Offset = "0x145659C", VA = "0x145659C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x14565CC", Offset = "0x14565CC", VA = "0x14565CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x14566B0", Offset = "0x14566B0", VA = "0x14566B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1456644", Offset = "0x1456644", VA = "0x1456644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E000C", Offset = "0x7E000C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x14566B4", Offset = "0x14566B4", VA = "0x14566B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E006C", Offset = "0x7E006C")]
	private IEnumerator ShowDialogs()
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1456720", Offset = "0x1456720", VA = "0x1456720")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x14567A4", Offset = "0x14567A4", VA = "0x14567A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E00CC", Offset = "0x7E00CC")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1456810", Offset = "0x1456810", VA = "0x1456810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E012C", Offset = "0x7E012C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x145687C", Offset = "0x145687C", VA = "0x145687C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E018C", Offset = "0x7E018C")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x14568F8", Offset = "0x14568F8", VA = "0x14568F8")]
	public void OnButton_Dialog1()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x14569D8", Offset = "0x14569D8", VA = "0x14569D8")]
	public void OnButton_Dialog2()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1456AB8", Offset = "0x1456AB8", VA = "0x1456AB8")]
	public void OnButton_Dialog3()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1456B98", Offset = "0x1456B98", VA = "0x1456B98")]
	public void OnButton_Dialog4()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1456C78", Offset = "0x1456C78", VA = "0x1456C78")]
	public void OnButton_MoveOutAllDialogs()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x145696C", Offset = "0x145696C", VA = "0x145696C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E01EC", Offset = "0x7E01EC")]
	private IEnumerator Dialog1_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1456A4C", Offset = "0x1456A4C", VA = "0x1456A4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E024C", Offset = "0x7E024C")]
	private IEnumerator Dialog2_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1456B2C", Offset = "0x1456B2C", VA = "0x1456B2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E02AC", Offset = "0x7E02AC")]
	private IEnumerator Dialog3_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1456C0C", Offset = "0x1456C0C", VA = "0x1456C0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E030C", Offset = "0x7E030C")]
	private IEnumerator Dialog4_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1456DB0", Offset = "0x1456DB0", VA = "0x1456DB0")]
	public GA_FREE_Demo03()
	{
	}
}
[Token(Token = "0x20000D0")]
public class GA_FREE_Demo04 : MonoBehaviour
{
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA7FC", Offset = "0x7CA7FC")]
	private sealed class <MoveInTitleGameObjects>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xF2457C", Offset = "0xF2457C", VA = "0xF2457C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xF245C4", Offset = "0xF245C4", VA = "0xF245C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xF2446C", Offset = "0xF2446C", VA = "0xF2446C")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xF24498", Offset = "0xF24498", VA = "0xF24498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xF2449C", Offset = "0xF2449C", VA = "0xF2449C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xF24584", Offset = "0xF24584", VA = "0xF24584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA80C", Offset = "0x7CA80C")]
	private sealed class <MoveInPrimaryButtons>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0xF2441C", Offset = "0xF2441C", VA = "0xF2441C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0xF24464", Offset = "0xF24464", VA = "0xF24464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xF242E4", Offset = "0xF242E4", VA = "0xF242E4")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xF24310", Offset = "0xF24310", VA = "0xF24310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xF24314", Offset = "0xF24314", VA = "0xF24314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xF24424", Offset = "0xF24424", VA = "0xF24424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA81C", Offset = "0x7CA81C")]
	private sealed class <HideTitleTextMeshes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0xF24294", Offset = "0xF24294", VA = "0xF24294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0xF242DC", Offset = "0xF242DC", VA = "0xF242DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xF24178", Offset = "0xF24178", VA = "0xF24178")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF241A4", Offset = "0xF241A4", VA = "0xF241A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xF241A8", Offset = "0xF241A8", VA = "0xF241A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xF2429C", Offset = "0xF2429C", VA = "0xF2429C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA82C", Offset = "0x7CA82C")]
	private sealed class <EnableAllDemoButtons>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0xF24128", Offset = "0xF24128", VA = "0xF24128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xF24170", Offset = "0xF24170", VA = "0xF24170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xF24040", Offset = "0xF24040", VA = "0xF24040")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xF2406C", Offset = "0xF2406C", VA = "0xF2406C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xF24070", Offset = "0xF24070", VA = "0xF24070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xF24130", Offset = "0xF24130", VA = "0xF24130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA83C", Offset = "0x7CA83C")]
	private sealed class <DisableButtonForSeconds>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0xF23FF0", Offset = "0xF23FF0", VA = "0xF23FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0xF24038", Offset = "0xF24038", VA = "0xF24038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xF23EB0", Offset = "0xF23EB0", VA = "0xF23EB0")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xF23EDC", Offset = "0xF23EDC", VA = "0xF23EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xF23EE0", Offset = "0xF23EE0", VA = "0xF23EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xF23FF8", Offset = "0xF23FF8", VA = "0xF23FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA84C", Offset = "0x7CA84C")]
	private sealed class <Dialog1_MoveIn>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000507")]
			[Address(RVA = "0xF23AA0", Offset = "0xF23AA0", VA = "0xF23AA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xF23AE8", Offset = "0xF23AE8", VA = "0xF23AE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xF239B0", Offset = "0xF239B0", VA = "0xF239B0")]
		[DebuggerHidden]
		public <Dialog1_MoveIn>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xF239DC", Offset = "0xF239DC", VA = "0xF239DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xF239E0", Offset = "0xF239E0", VA = "0xF239E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xF23AA8", Offset = "0xF23AA8", VA = "0xF23AA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA85C", Offset = "0x7CA85C")]
	private sealed class <Dialog2_MoveIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0xF23BE0", Offset = "0xF23BE0", VA = "0xF23BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0xF23C28", Offset = "0xF23C28", VA = "0xF23C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xF23AF0", Offset = "0xF23AF0", VA = "0xF23AF0")]
		[DebuggerHidden]
		public <Dialog2_MoveIn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xF23B1C", Offset = "0xF23B1C", VA = "0xF23B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xF23B20", Offset = "0xF23B20", VA = "0xF23B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xF23BE8", Offset = "0xF23BE8", VA = "0xF23BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA86C", Offset = "0x7CA86C")]
	private sealed class <Dialog3_MoveIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0xF23D20", Offset = "0xF23D20", VA = "0xF23D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0xF23D68", Offset = "0xF23D68", VA = "0xF23D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xF23C30", Offset = "0xF23C30", VA = "0xF23C30")]
		[DebuggerHidden]
		public <Dialog3_MoveIn>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xF23C5C", Offset = "0xF23C5C", VA = "0xF23C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xF23C60", Offset = "0xF23C60", VA = "0xF23C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xF23D28", Offset = "0xF23D28", VA = "0xF23D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA87C", Offset = "0x7CA87C")]
	private sealed class <Dialog4_MoveIn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo04 <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0xF23E60", Offset = "0xF23E60", VA = "0xF23E60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0xF23EA8", Offset = "0xF23EA8", VA = "0xF23EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xF23D70", Offset = "0xF23D70", VA = "0xF23D70")]
		[DebuggerHidden]
		public <Dialog4_MoveIn>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xF23D9C", Offset = "0xF23D9C", VA = "0xF23D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xF23DA0", Offset = "0xF23DA0", VA = "0xF23DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xF23E68", Offset = "0xF23E68", VA = "0xF23E68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_Dialog1;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_Dialog2;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_Dialog3;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_Dialog4;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1456DB8", Offset = "0x1456DB8", VA = "0x1456DB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1456DE8", Offset = "0x1456DE8", VA = "0x1456DE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1456ECC", Offset = "0x1456ECC", VA = "0x1456ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1456E60", Offset = "0x1456E60", VA = "0x1456E60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E063C", Offset = "0x7E063C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1456ED0", Offset = "0x1456ED0", VA = "0x1456ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E069C", Offset = "0x7E069C")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1456F3C", Offset = "0x1456F3C", VA = "0x1456F3C")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1456FC0", Offset = "0x1456FC0", VA = "0x1456FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E06FC", Offset = "0x7E06FC")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x145702C", Offset = "0x145702C", VA = "0x145702C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E075C", Offset = "0x7E075C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1457098", Offset = "0x1457098", VA = "0x1457098")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E07BC", Offset = "0x7E07BC")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1457114", Offset = "0x1457114", VA = "0x1457114")]
	public void OnButton_Dialog1()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x14571F4", Offset = "0x14571F4", VA = "0x14571F4")]
	public void OnButton_Dialog2()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x14572D4", Offset = "0x14572D4", VA = "0x14572D4")]
	public void OnButton_Dialog3()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x14573B4", Offset = "0x14573B4", VA = "0x14573B4")]
	public void OnButton_Dialog4()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1457494", Offset = "0x1457494", VA = "0x1457494")]
	public void OnButton_MoveOutAllDialogs()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1457188", Offset = "0x1457188", VA = "0x1457188")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E081C", Offset = "0x7E081C")]
	private IEnumerator Dialog1_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1457268", Offset = "0x1457268", VA = "0x1457268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E087C", Offset = "0x7E087C")]
	private IEnumerator Dialog2_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1457348", Offset = "0x1457348", VA = "0x1457348")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E08DC", Offset = "0x7E08DC")]
	private IEnumerator Dialog3_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1457428", Offset = "0x1457428", VA = "0x1457428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E093C", Offset = "0x7E093C")]
	private IEnumerator Dialog4_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x145767C", Offset = "0x145767C", VA = "0x145767C")]
	public GA_FREE_Demo04()
	{
	}
}
[Token(Token = "0x20000DA")]
public class GA_FREE_Demo05 : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA88C", Offset = "0x7CA88C")]
	private sealed class <MoveInTitleGameObjects>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000532")]
			[Address(RVA = "0xF25198", Offset = "0xF25198", VA = "0xF25198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000534")]
			[Address(RVA = "0xF251E0", Offset = "0xF251E0", VA = "0xF251E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xF25088", Offset = "0xF25088", VA = "0xF25088")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xF250B4", Offset = "0xF250B4", VA = "0xF250B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xF250B8", Offset = "0xF250B8", VA = "0xF250B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xF251A0", Offset = "0xF251A0", VA = "0xF251A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA89C", Offset = "0x7CA89C")]
	private sealed class <MoveInPrimaryButtons>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0xF25038", Offset = "0xF25038", VA = "0xF25038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0xF25080", Offset = "0xF25080", VA = "0xF25080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xF24F00", Offset = "0xF24F00", VA = "0xF24F00")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xF24F2C", Offset = "0xF24F2C", VA = "0xF24F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xF24F30", Offset = "0xF24F30", VA = "0xF24F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xF25040", Offset = "0xF25040", VA = "0xF25040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8AC", Offset = "0x7CA8AC")]
	private sealed class <HideTitleTextMeshes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053E")]
			[Address(RVA = "0xF24EB0", Offset = "0xF24EB0", VA = "0xF24EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0xF24EF8", Offset = "0xF24EF8", VA = "0xF24EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xF24D94", Offset = "0xF24D94", VA = "0xF24D94")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xF24DC0", Offset = "0xF24DC0", VA = "0xF24DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xF24DC4", Offset = "0xF24DC4", VA = "0xF24DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xF24EB8", Offset = "0xF24EB8", VA = "0xF24EB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8BC", Offset = "0x7CA8BC")]
	private sealed class <EnableAllDemoButtons>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xF24D44", Offset = "0xF24D44", VA = "0xF24D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xF24D8C", Offset = "0xF24D8C", VA = "0xF24D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xF24C5C", Offset = "0xF24C5C", VA = "0xF24C5C")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xF24C88", Offset = "0xF24C88", VA = "0xF24C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xF24C8C", Offset = "0xF24C8C", VA = "0xF24C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xF24D4C", Offset = "0xF24D4C", VA = "0xF24D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8CC", Offset = "0x7CA8CC")]
	private sealed class <DisableButtonForSeconds>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0xF24C0C", Offset = "0xF24C0C", VA = "0xF24C0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054C")]
			[Address(RVA = "0xF24C54", Offset = "0xF24C54", VA = "0xF24C54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xF24ACC", Offset = "0xF24ACC", VA = "0xF24ACC")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xF24AF8", Offset = "0xF24AF8", VA = "0xF24AF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xF24AFC", Offset = "0xF24AFC", VA = "0xF24AFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xF24C14", Offset = "0xF24C14", VA = "0xF24C14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8DC", Offset = "0x7CA8DC")]
	private sealed class <Dialog1_MoveIn>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0xF246BC", Offset = "0xF246BC", VA = "0xF246BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0xF24704", Offset = "0xF24704", VA = "0xF24704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xF245CC", Offset = "0xF245CC", VA = "0xF245CC")]
		[DebuggerHidden]
		public <Dialog1_MoveIn>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xF245F8", Offset = "0xF245F8", VA = "0xF245F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xF245FC", Offset = "0xF245FC", VA = "0xF245FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xF246C4", Offset = "0xF246C4", VA = "0xF246C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8EC", Offset = "0x7CA8EC")]
	private sealed class <Dialog2_MoveIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0xF247FC", Offset = "0xF247FC", VA = "0xF247FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000558")]
			[Address(RVA = "0xF24844", Offset = "0xF24844", VA = "0xF24844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xF2470C", Offset = "0xF2470C", VA = "0xF2470C")]
		[DebuggerHidden]
		public <Dialog2_MoveIn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF24738", Offset = "0xF24738", VA = "0xF24738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xF2473C", Offset = "0xF2473C", VA = "0xF2473C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xF24804", Offset = "0xF24804", VA = "0xF24804", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA8FC", Offset = "0x7CA8FC")]
	private sealed class <Dialog3_MoveIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0xF2493C", Offset = "0xF2493C", VA = "0xF2493C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055E")]
			[Address(RVA = "0xF24984", Offset = "0xF24984", VA = "0xF24984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xF2484C", Offset = "0xF2484C", VA = "0xF2484C")]
		[DebuggerHidden]
		public <Dialog3_MoveIn>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xF24878", Offset = "0xF24878", VA = "0xF24878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xF2487C", Offset = "0xF2487C", VA = "0xF2487C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xF24944", Offset = "0xF24944", VA = "0xF24944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA90C", Offset = "0x7CA90C")]
	private sealed class <Dialog4_MoveIn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo05 <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0xF24A7C", Offset = "0xF24A7C", VA = "0xF24A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xF24AC4", Offset = "0xF24AC4", VA = "0xF24AC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xF2498C", Offset = "0xF2498C", VA = "0xF2498C")]
		[DebuggerHidden]
		public <Dialog4_MoveIn>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xF249B8", Offset = "0xF249B8", VA = "0xF249B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xF249BC", Offset = "0xF249BC", VA = "0xF249BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xF24A84", Offset = "0xF24A84", VA = "0xF24A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_Dialog1;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_Dialog2;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_Dialog3;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_Dialog4;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1457684", Offset = "0x1457684", VA = "0x1457684")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x14576B4", Offset = "0x14576B4", VA = "0x14576B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1457798", Offset = "0x1457798", VA = "0x1457798")]
	private void Update()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x145772C", Offset = "0x145772C", VA = "0x145772C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0C6C", Offset = "0x7E0C6C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x145779C", Offset = "0x145779C", VA = "0x145779C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0CCC", Offset = "0x7E0CCC")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1457808", Offset = "0x1457808", VA = "0x1457808")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x145788C", Offset = "0x145788C", VA = "0x145788C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0D2C", Offset = "0x7E0D2C")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x14578F8", Offset = "0x14578F8", VA = "0x14578F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0D8C", Offset = "0x7E0D8C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1457964", Offset = "0x1457964", VA = "0x1457964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0DEC", Offset = "0x7E0DEC")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x14579E0", Offset = "0x14579E0", VA = "0x14579E0")]
	public void OnButton_Dialog1()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1457AC0", Offset = "0x1457AC0", VA = "0x1457AC0")]
	public void OnButton_Dialog2()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1457BA0", Offset = "0x1457BA0", VA = "0x1457BA0")]
	public void OnButton_Dialog3()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1457C80", Offset = "0x1457C80", VA = "0x1457C80")]
	public void OnButton_Dialog4()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1457D60", Offset = "0x1457D60", VA = "0x1457D60")]
	public void OnButton_MoveOutAllDialogs()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1457A54", Offset = "0x1457A54", VA = "0x1457A54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0E4C", Offset = "0x7E0E4C")]
	private IEnumerator Dialog1_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1457B34", Offset = "0x1457B34", VA = "0x1457B34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0EAC", Offset = "0x7E0EAC")]
	private IEnumerator Dialog2_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1457C14", Offset = "0x1457C14", VA = "0x1457C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0F0C", Offset = "0x7E0F0C")]
	private IEnumerator Dialog3_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1457CF4", Offset = "0x1457CF4", VA = "0x1457CF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E0F6C", Offset = "0x7E0F6C")]
	private IEnumerator Dialog4_MoveIn()
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1457EDC", Offset = "0x1457EDC", VA = "0x1457EDC")]
	public GA_FREE_Demo05()
	{
	}
}
[Token(Token = "0x20000E4")]
public class GA_FREE_Demo06 : MonoBehaviour
{
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA91C", Offset = "0x7CA91C")]
	private sealed class <MoveInTitleGameObjects>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo06 <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xF258A4", Offset = "0xF258A4", VA = "0xF258A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0xF258EC", Offset = "0xF258EC", VA = "0xF258EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xF25778", Offset = "0xF25778", VA = "0xF25778")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xF257A4", Offset = "0xF257A4", VA = "0xF257A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xF257A8", Offset = "0xF257A8", VA = "0xF257A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xF258AC", Offset = "0xF258AC", VA = "0xF258AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA92C", Offset = "0x7CA92C")]
	private sealed class <MoveInPrimaryButtons>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo06 <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0xF25728", Offset = "0xF25728", VA = "0xF25728", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0xF25770", Offset = "0xF25770", VA = "0xF25770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xF255DC", Offset = "0xF255DC", VA = "0xF255DC")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xF25608", Offset = "0xF25608", VA = "0xF25608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xF2560C", Offset = "0xF2560C", VA = "0xF2560C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xF25730", Offset = "0xF25730", VA = "0xF25730", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA93C", Offset = "0x7CA93C")]
	private sealed class <HideTitleTextMeshes>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo06 <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000588")]
			[Address(RVA = "0xF2558C", Offset = "0xF2558C", VA = "0xF2558C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xF255D4", Offset = "0xF255D4", VA = "0xF255D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xF25470", Offset = "0xF25470", VA = "0xF25470")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xF2549C", Offset = "0xF2549C", VA = "0xF2549C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xF254A0", Offset = "0xF254A0", VA = "0xF254A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xF25594", Offset = "0xF25594", VA = "0xF25594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA94C", Offset = "0x7CA94C")]
	private sealed class <EnableAllDemoButtons>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo06 <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xF25420", Offset = "0xF25420", VA = "0xF25420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0xF25468", Offset = "0xF25468", VA = "0xF25468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xF25338", Offset = "0xF25338", VA = "0xF25338")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xF25364", Offset = "0xF25364", VA = "0xF25364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xF25368", Offset = "0xF25368", VA = "0xF25368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xF25428", Offset = "0xF25428", VA = "0xF25428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA95C", Offset = "0x7CA95C")]
	private sealed class <DisableAllButtonsForSeconds>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DisableTime;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000594")]
			[Address(RVA = "0xF252E8", Offset = "0xF252E8", VA = "0xF252E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0xF25330", Offset = "0xF25330", VA = "0xF25330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xF251E8", Offset = "0xF251E8", VA = "0xF251E8")]
		[DebuggerHidden]
		public <DisableAllButtonsForSeconds>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xF25214", Offset = "0xF25214", VA = "0xF25214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xF25218", Offset = "0xF25218", VA = "0xF25218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xF252F0", Offset = "0xF252F0", VA = "0xF252F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_PrimaryButton1;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_PrimaryButton2;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_PrimaryButton3;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_PrimaryButton4;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIAnimFREE m_PrimaryButton5;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIAnimFREE m_SecondaryButton1;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GUIAnimFREE m_SecondaryButton2;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GUIAnimFREE m_SecondaryButton3;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GUIAnimFREE m_SecondaryButton4;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GUIAnimFREE m_SecondaryButton5;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_Button1_IsOn;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool m_Button2_IsOn;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool m_Button3_IsOn;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool m_Button4_IsOn;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_Button5_IsOn;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1457EE4", Offset = "0x1457EE4", VA = "0x1457EE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1457F14", Offset = "0x1457F14", VA = "0x1457F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1457FF8", Offset = "0x1457FF8", VA = "0x1457FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1457F8C", Offset = "0x1457F8C", VA = "0x1457F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E129C", Offset = "0x7E129C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1457FFC", Offset = "0x1457FFC", VA = "0x1457FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E12FC", Offset = "0x7E12FC")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1458068", Offset = "0x1458068", VA = "0x1458068")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x145818C", Offset = "0x145818C", VA = "0x145818C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E135C", Offset = "0x7E135C")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x14581F8", Offset = "0x14581F8", VA = "0x14581F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E13BC", Offset = "0x7E13BC")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1458264", Offset = "0x1458264", VA = "0x1458264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E141C", Offset = "0x7E141C")]
	private IEnumerator DisableAllButtonsForSeconds(float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x14582D8", Offset = "0x14582D8", VA = "0x14582D8")]
	public void OnButton_1()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1458478", Offset = "0x1458478", VA = "0x1458478")]
	public void OnButton_2()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1458500", Offset = "0x1458500", VA = "0x1458500")]
	public void OnButton_3()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1458588", Offset = "0x1458588", VA = "0x1458588")]
	public void OnButton_4()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1458610", Offset = "0x1458610", VA = "0x1458610")]
	public void OnButton_5()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1458360", Offset = "0x1458360", VA = "0x1458360")]
	private void ToggleButton_1()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1458398", Offset = "0x1458398", VA = "0x1458398")]
	private void ToggleButton_2()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x14583D0", Offset = "0x14583D0", VA = "0x14583D0")]
	private void ToggleButton_3()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1458408", Offset = "0x1458408", VA = "0x1458408")]
	private void ToggleButton_4()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1458440", Offset = "0x1458440", VA = "0x1458440")]
	private void ToggleButton_5()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1458698", Offset = "0x1458698", VA = "0x1458698")]
	public GA_FREE_Demo06()
	{
	}
}
[Token(Token = "0x20000EA")]
public class GA_FREE_Demo07 : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA96C", Offset = "0x7CA96C")]
	private sealed class <MoveInTitleGameObjects>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0xF2612C", Offset = "0xF2612C", VA = "0xF2612C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0xF26174", Offset = "0xF26174", VA = "0xF26174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xF2601C", Offset = "0xF2601C", VA = "0xF2601C")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xF26048", Offset = "0xF26048", VA = "0xF26048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xF2604C", Offset = "0xF2604C", VA = "0xF2604C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF26134", Offset = "0xF26134", VA = "0xF26134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA97C", Offset = "0x7CA97C")]
	private sealed class <MoveInPrimaryButtons>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xF25FCC", Offset = "0xF25FCC", VA = "0xF25FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xF26014", Offset = "0xF26014", VA = "0xF26014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xF25E6C", Offset = "0xF25E6C", VA = "0xF25E6C")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xF25E98", Offset = "0xF25E98", VA = "0xF25E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xF25E9C", Offset = "0xF25E9C", VA = "0xF25E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xF25FD4", Offset = "0xF25FD4", VA = "0xF25FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA98C", Offset = "0x7CA98C")]
	private sealed class <HideTitleTextMeshes>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xF25E1C", Offset = "0xF25E1C", VA = "0xF25E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xF25E64", Offset = "0xF25E64", VA = "0xF25E64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xF25D00", Offset = "0xF25D00", VA = "0xF25D00")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xF25D2C", Offset = "0xF25D2C", VA = "0xF25D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xF25D30", Offset = "0xF25D30", VA = "0xF25D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xF25E24", Offset = "0xF25E24", VA = "0xF25E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA99C", Offset = "0x7CA99C")]
	private sealed class <EnableAllDemoButtons>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0xF25CB0", Offset = "0xF25CB0", VA = "0xF25CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0xF25CF8", Offset = "0xF25CF8", VA = "0xF25CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xF25BC8", Offset = "0xF25BC8", VA = "0xF25BC8")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xF25BF4", Offset = "0xF25BF4", VA = "0xF25BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xF25BF8", Offset = "0xF25BF8", VA = "0xF25BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xF25CB8", Offset = "0xF25CB8", VA = "0xF25CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9AC", Offset = "0x7CA9AC")]
	private sealed class <DisableButtonForSeconds>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0xF25B78", Offset = "0xF25B78", VA = "0xF25B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0xF25BC0", Offset = "0xF25BC0", VA = "0xF25BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xF25A38", Offset = "0xF25A38", VA = "0xF25A38")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xF25A64", Offset = "0xF25A64", VA = "0xF25A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xF25A68", Offset = "0xF25A68", VA = "0xF25A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xF25B80", Offset = "0xF25B80", VA = "0xF25B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9BC", Offset = "0x7CA9BC")]
	private sealed class <SetButtonMove>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUIAnimFREE.ePosMove PosMoveIn;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0xF26338", Offset = "0xF26338", VA = "0xF26338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0xF26380", Offset = "0xF26380", VA = "0xF26380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xF2617C", Offset = "0xF2617C", VA = "0xF2617C")]
		[DebuggerHidden]
		public <SetButtonMove>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xF261A8", Offset = "0xF261A8", VA = "0xF261A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xF261AC", Offset = "0xF261AC", VA = "0xF261AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xF26340", Offset = "0xF26340", VA = "0xF26340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9CC", Offset = "0x7CA9CC")]
	private sealed class <DialogMoveIn>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo07 <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0xF259E8", Offset = "0xF259E8", VA = "0xF259E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0xF25A30", Offset = "0xF25A30", VA = "0xF25A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xF258F4", Offset = "0xF258F4", VA = "0xF258F4")]
		[DebuggerHidden]
		public <DialogMoveIn>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xF25920", Offset = "0xF25920", VA = "0xF25920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xF25924", Offset = "0xF25924", VA = "0xF25924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xF259F0", Offset = "0xF259F0", VA = "0xF259F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_Dialog;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_DialogButtons;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_Button1;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_Button2;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIAnimFREE m_Button3;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIAnimFREE m_Button4;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x14586A0", Offset = "0x14586A0", VA = "0x14586A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x14586D0", Offset = "0x14586D0", VA = "0x14586D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x14587B4", Offset = "0x14587B4", VA = "0x14587B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1458748", Offset = "0x1458748", VA = "0x1458748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E160C", Offset = "0x7E160C")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x14587B8", Offset = "0x14587B8", VA = "0x14587B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E166C", Offset = "0x7E166C")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1458824", Offset = "0x1458824", VA = "0x1458824")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x14588D0", Offset = "0x14588D0", VA = "0x14588D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E16CC", Offset = "0x7E16CC")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x145893C", Offset = "0x145893C", VA = "0x145893C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E172C", Offset = "0x7E172C")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x14589A8", Offset = "0x14589A8", VA = "0x14589A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E178C", Offset = "0x7E178C")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1458A24", Offset = "0x1458A24", VA = "0x1458A24")]
	public void OnButton_1()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1458BF8", Offset = "0x1458BF8", VA = "0x1458BF8")]
	public void OnButton_2()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1458CE4", Offset = "0x1458CE4", VA = "0x1458CE4")]
	public void OnButton_3()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1458DD0", Offset = "0x1458DD0", VA = "0x1458DD0")]
	public void OnButton_4()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1458EBC", Offset = "0x1458EBC", VA = "0x1458EBC")]
	public void OnDialogButton()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1458B10", Offset = "0x1458B10", VA = "0x1458B10")]
	private void MoveButtonsOut()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1458B7C", Offset = "0x1458B7C", VA = "0x1458B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E17EC", Offset = "0x7E17EC")]
	private IEnumerator SetButtonMove(GUIAnimFREE.ePosMove PosMoveIn, GUIAnimFREE.ePosMove PosMoveOut)
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1458F44", Offset = "0x1458F44", VA = "0x1458F44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E184C", Offset = "0x7E184C")]
	private IEnumerator DialogMoveIn()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1458FB0", Offset = "0x1458FB0", VA = "0x1458FB0")]
	public GA_FREE_Demo07()
	{
	}
}
[Token(Token = "0x20000F2")]
public class GA_FREE_Demo08 : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9DC", Offset = "0x7CA9DC")]
	private sealed class <MoveInTitleGameObjects>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo08 <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0xF26A18", Offset = "0xF26A18", VA = "0xF26A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0xF26A60", Offset = "0xF26A60", VA = "0xF26A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xF26908", Offset = "0xF26908", VA = "0xF26908")]
		[DebuggerHidden]
		public <MoveInTitleGameObjects>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xF26934", Offset = "0xF26934", VA = "0xF26934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xF26938", Offset = "0xF26938", VA = "0xF26938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xF26A20", Offset = "0xF26A20", VA = "0xF26A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9EC", Offset = "0x7CA9EC")]
	private sealed class <MoveInPrimaryButtons>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo08 <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0xF268B8", Offset = "0xF268B8", VA = "0xF268B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F0")]
			[Address(RVA = "0xF26900", Offset = "0xF26900", VA = "0xF26900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xF267BC", Offset = "0xF267BC", VA = "0xF267BC")]
		[DebuggerHidden]
		public <MoveInPrimaryButtons>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xF267E8", Offset = "0xF267E8", VA = "0xF267E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xF267EC", Offset = "0xF267EC", VA = "0xF267EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xF268C0", Offset = "0xF268C0", VA = "0xF268C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA9FC", Offset = "0x7CA9FC")]
	private sealed class <HideTitleTextMeshes>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo08 <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xF2676C", Offset = "0xF2676C", VA = "0xF2676C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xF267B4", Offset = "0xF267B4", VA = "0xF267B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xF26650", Offset = "0xF26650", VA = "0xF26650")]
		[DebuggerHidden]
		public <HideTitleTextMeshes>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xF2667C", Offset = "0xF2667C", VA = "0xF2667C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xF26680", Offset = "0xF26680", VA = "0xF26680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xF26774", Offset = "0xF26774", VA = "0xF26774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA0C", Offset = "0x7CAA0C")]
	private sealed class <EnableAllDemoButtons>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GA_FREE_Demo08 <>4__this;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xF26600", Offset = "0xF26600", VA = "0xF26600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xF26648", Offset = "0xF26648", VA = "0xF26648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xF26518", Offset = "0xF26518", VA = "0xF26518")]
		[DebuggerHidden]
		public <EnableAllDemoButtons>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xF26544", Offset = "0xF26544", VA = "0xF26544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xF26548", Offset = "0xF26548", VA = "0xF26548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xF26608", Offset = "0xF26608", VA = "0xF26608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA1C", Offset = "0x7CAA1C")]
	private sealed class <DisableButtonForSeconds>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GO;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DisableTime;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0xF264C8", Offset = "0xF264C8", VA = "0xF264C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0xF26510", Offset = "0xF26510", VA = "0xF26510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xF26388", Offset = "0xF26388", VA = "0xF26388")]
		[DebuggerHidden]
		public <DisableButtonForSeconds>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xF263B4", Offset = "0xF263B4", VA = "0xF263B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xF263B8", Offset = "0xF263B8", VA = "0xF263B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xF264D0", Offset = "0xF264D0", VA = "0xF264D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas m_Canvas;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUIAnimFREE m_Title1;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUIAnimFREE m_Title2;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIAnimFREE m_TopBar;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GUIAnimFREE m_BottomBar;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GUIAnimFREE m_CenterButtons;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GUIAnimFREE m_Button1;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GUIAnimFREE m_Button2;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIAnimFREE m_Button3;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIAnimFREE m_Button4;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIAnimFREE m_Bar1;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GUIAnimFREE m_Bar2;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GUIAnimFREE m_Bar3;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GUIAnimFREE m_Bar4;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_Bar1_IsOn;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool m_Bar2_IsOn;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool m_Bar3_IsOn;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private bool m_Bar4_IsOn;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1458FB8", Offset = "0x1458FB8", VA = "0x1458FB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1458FE8", Offset = "0x1458FE8", VA = "0x1458FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x14590CC", Offset = "0x14590CC", VA = "0x14590CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1459060", Offset = "0x1459060", VA = "0x1459060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1ADC", Offset = "0x7E1ADC")]
	private IEnumerator MoveInTitleGameObjects()
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x14590D0", Offset = "0x14590D0", VA = "0x14590D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1B3C", Offset = "0x7E1B3C")]
	private IEnumerator MoveInPrimaryButtons()
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x145913C", Offset = "0x145913C", VA = "0x145913C")]
	public void HideAllGUIs()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x14591F4", Offset = "0x14591F4", VA = "0x14591F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1B9C", Offset = "0x7E1B9C")]
	private IEnumerator HideTitleTextMeshes()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1459260", Offset = "0x1459260", VA = "0x1459260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1BFC", Offset = "0x7E1BFC")]
	private IEnumerator EnableAllDemoButtons()
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x14592CC", Offset = "0x14592CC", VA = "0x14592CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1C5C", Offset = "0x7E1C5C")]
	private IEnumerator DisableButtonForSeconds(GameObject GO, float DisableTime)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1459348", Offset = "0x1459348", VA = "0x1459348")]
	public void OnButton_1()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1459528", Offset = "0x1459528", VA = "0x1459528")]
	public void OnButton_2()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1459628", Offset = "0x1459628", VA = "0x1459628")]
	public void OnButton_3()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1459728", Offset = "0x1459728", VA = "0x1459728")]
	public void OnButton_4()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1459448", Offset = "0x1459448", VA = "0x1459448")]
	private void ToggleBar1()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1459480", Offset = "0x1459480", VA = "0x1459480")]
	private void ToggleBar2()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x14594B8", Offset = "0x14594B8", VA = "0x14594B8")]
	private void ToggleBar3()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x14594F0", Offset = "0x14594F0", VA = "0x14594F0")]
	private void ToggleBar4()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1459828", Offset = "0x1459828", VA = "0x1459828")]
	public GA_FREE_Demo08()
	{
	}
}
[Token(Token = "0x20000F8")]
public class GA_FREE_DemoPlaySound : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_AudioSourceCount;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource[] m_AudioSource;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip m_Audio_Button1;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip m_Audio_Button2;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1459830", Offset = "0x1459830", VA = "0x1459830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1459948", Offset = "0x1459948", VA = "0x1459948")]
	private void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x145994C", Offset = "0x145994C", VA = "0x145994C")]
	private void PlayOneShot(AudioClip pAudioClip)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x14599FC", Offset = "0x14599FC", VA = "0x14599FC")]
	public void PlaySoundButton1()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1459A04", Offset = "0x1459A04", VA = "0x1459A04")]
	public void PlaySoundButton2()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1459A0C", Offset = "0x1459A0C", VA = "0x1459A0C")]
	public GA_FREE_DemoPlaySound()
	{
	}
}
[Token(Token = "0x20000F9")]
public class GA_FREE_OpenOtherScene : MonoBehaviour
{
	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1459A1C", Offset = "0x1459A1C", VA = "0x1459A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1459A20", Offset = "0x1459A20", VA = "0x1459A20")]
	private void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1459A24", Offset = "0x1459A24", VA = "0x1459A24")]
	public void ButtonOpenDemoScene1()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1459ACC", Offset = "0x1459ACC", VA = "0x1459ACC")]
	public void ButtonOpenDemoScene2()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x1459B74", Offset = "0x1459B74", VA = "0x1459B74")]
	public void ButtonOpenDemoScene3()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1459C1C", Offset = "0x1459C1C", VA = "0x1459C1C")]
	public void ButtonOpenDemoScene4()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1459CC4", Offset = "0x1459CC4", VA = "0x1459CC4")]
	public void ButtonOpenDemoScene5()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1459D6C", Offset = "0x1459D6C", VA = "0x1459D6C")]
	public void ButtonOpenDemoScene6()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1459E14", Offset = "0x1459E14", VA = "0x1459E14")]
	public void ButtonOpenDemoScene7()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1459EBC", Offset = "0x1459EBC", VA = "0x1459EBC")]
	public void ButtonOpenDemoScene8()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1459F64", Offset = "0x1459F64", VA = "0x1459F64")]
	public GA_FREE_OpenOtherScene()
	{
	}
}
[Token(Token = "0x20000FA")]
public class GUIAnimatorFREEDemo : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_WaitTime;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_WaitTimeCount;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_ShowMoveInButton;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x145C1F4", Offset = "0x145C1F4", VA = "0x145C1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x145C238", Offset = "0x145C238", VA = "0x145C238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x145C23C", Offset = "0x145C23C", VA = "0x145C23C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x145C2A0", Offset = "0x145C2A0", VA = "0x145C2A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x145C47C", Offset = "0x145C47C", VA = "0x145C47C")]
	public GUIAnimatorFREEDemo()
	{
	}
}
[Token(Token = "0x20000FB")]
public class MoveCapsule : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CapsuleCollider character;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 place;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xFEF4CC", Offset = "0xFEF4CC", VA = "0xFEF4CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xFEF550", Offset = "0xFEF550", VA = "0xFEF550")]
	public MoveCapsule()
	{
	}
}
[Token(Token = "0x20000FC")]
public class MusicEndOffice : MonoBehaviour
{
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA2C", Offset = "0x7CAA2C")]
	private sealed class <DisplayCaptionLength>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0xDBAEFC", Offset = "0xDBAEFC", VA = "0xDBAEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xDBAF44", Offset = "0xDBAF44", VA = "0xDBAF44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xDBADFC", Offset = "0xDBADFC", VA = "0xDBADFC")]
		[DebuggerHidden]
		public <DisplayCaptionLength>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xDBAE28", Offset = "0xDBAE28", VA = "0xDBAE28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xDBAE2C", Offset = "0xDBAE2C", VA = "0xDBAE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xDBAF04", Offset = "0xDBAF04", VA = "0xDBAF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA3C", Offset = "0x7CAA3C")]
	private sealed class <DisplayCaptionLength2>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xDBADAC", Offset = "0xDBADAC", VA = "0xDBADAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xDBADF4", Offset = "0xDBADF4", VA = "0xDBADF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xDBACA0", Offset = "0xDBACA0", VA = "0xDBACA0")]
		[DebuggerHidden]
		public <DisplayCaptionLength2>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xDBACCC", Offset = "0xDBACCC", VA = "0xDBACCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xDBACD0", Offset = "0xDBACD0", VA = "0xDBACD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xDBADB4", Offset = "0xDBADB4", VA = "0xDBADB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA4C", Offset = "0x7CAA4C")]
	private sealed class <playRoboRapSound>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicEndOffice <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xDBB410", Offset = "0xDBB410", VA = "0xDBB410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xDBB458", Offset = "0xDBB458", VA = "0xDBB458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xDBAF4C", Offset = "0xDBAF4C", VA = "0xDBAF4C")]
		[DebuggerHidden]
		public <playRoboRapSound>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xDBAF78", Offset = "0xDBAF78", VA = "0xDBAF78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xDBAF7C", Offset = "0xDBAF7C", VA = "0xDBAF7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xDBB418", Offset = "0xDBB418", VA = "0xDBB418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip staticSound;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip robuttRap;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource musicSpeaker;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource doorKnockSource;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clipLength;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LightsManager lightsManager;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject doorHandle;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayer mp;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer videoMesh;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PhraseAsset phraseAssets;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject roboCaption;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextSynchronizer textSynchronizer2;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject roboCaption2;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xFEFAA0", Offset = "0xFEFAA0", VA = "0xFEFAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xFEFAA4", Offset = "0xFEFAA4", VA = "0xFEFAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xFEFAA8", Offset = "0xFEFAA8", VA = "0xFEFAA8")]
	public void playThatRap()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xFEFB40", Offset = "0xFEFB40", VA = "0xFEFB40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1E4C", Offset = "0x7E1E4C")]
	private IEnumerator DisplayCaptionLength()
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xFEFBAC", Offset = "0xFEFBAC", VA = "0xFEFBAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1EAC", Offset = "0x7E1EAC")]
	private IEnumerator DisplayCaptionLength2()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xFEFAD4", Offset = "0xFEFAD4", VA = "0xFEFAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E1F0C", Offset = "0x7E1F0C")]
	private IEnumerator playRoboRapSound()
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xFEFC18", Offset = "0xFEFC18", VA = "0xFEFC18")]
	public MusicEndOffice()
	{
	}
}
[Token(Token = "0x2000100")]
public class MySceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA5C", Offset = "0x7CAA5C")]
	private sealed class <LoadLevelCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MySceneLoader <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xDBB5A4", Offset = "0xDBB5A4", VA = "0xDBB5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xDBB5EC", Offset = "0xDBB5EC", VA = "0xDBB5EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xDBB460", Offset = "0xDBB460", VA = "0xDBB460")]
		[DebuggerHidden]
		public <LoadLevelCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xDBB48C", Offset = "0xDBB48C", VA = "0xDBB48C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xDBB490", Offset = "0xDBB490", VA = "0xDBB490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xDBB5AC", Offset = "0xDBB5AC", VA = "0xDBB5AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraObject;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneAfter;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xFEFD98", Offset = "0xFEFD98", VA = "0xFEFD98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xFEFDEC", Offset = "0xFEFDEC", VA = "0xFEFDEC")]
	public void LoadTry(string nextScene)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xFEFE68", Offset = "0xFEFE68", VA = "0xFEFE68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E205C", Offset = "0x7E205C")]
	private IEnumerator LoadLevelCoroutine(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xFEFED4", Offset = "0xFEFED4", VA = "0xFEFED4")]
	public MySceneLoader()
	{
	}
}
[Token(Token = "0x2000102")]
public class NoFlicker : MonoBehaviour
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int antiAliasing;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xFF01AC", Offset = "0xFF01AC", VA = "0xFF01AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xFF01B8", Offset = "0xFF01B8", VA = "0xFF01B8")]
	public NoFlicker()
	{
	}
}
[Token(Token = "0x2000103")]
public class OculusBalloon : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	public enum BalloonColor
	{
		[Token(Token = "0x4000579")]
		Red,
		[Token(Token = "0x400057A")]
		OrangeRed,
		[Token(Token = "0x400057B")]
		Orange,
		[Token(Token = "0x400057C")]
		YellowOrange,
		[Token(Token = "0x400057D")]
		Yellow,
		[Token(Token = "0x400057E")]
		GreenYellow,
		[Token(Token = "0x400057F")]
		Green,
		[Token(Token = "0x4000580")]
		BlueGreen,
		[Token(Token = "0x4000581")]
		Blue,
		[Token(Token = "0x4000582")]
		VioletBlue,
		[Token(Token = "0x4000583")]
		Violet,
		[Token(Token = "0x4000584")]
		RedViolet,
		[Token(Token = "0x4000585")]
		LightGray,
		[Token(Token = "0x4000586")]
		DarkGray,
		[Token(Token = "0x4000587")]
		Random
	}

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject popPrefab;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVelocity;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lifetime;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool burstOnLifetimeEnd;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lifetimeEndParticlePrefab;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OculusSoundPlayOneshot lifetimeEndSound;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float destructTime;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float releaseTime;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BalloonColor color;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastSoundTime;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float soundDelay;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody balloonRigidbody;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool bParticlesSpawned;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float s_flLastDeathSound;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BalloonManager balloonManager;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int balloonNumber;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xFF0900", Offset = "0xFF0900", VA = "0xFF0900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xFF0A10", Offset = "0xFF0A10", VA = "0xFF0A10")]
	private void SpawnParticles(GameObject particlePrefab, OculusSoundPlayOneshot sound)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xFF0DC0", Offset = "0xFF0DC0", VA = "0xFF0DC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xFF0E54", Offset = "0xFF0E54", VA = "0xFF0E54")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xFF0EDC", Offset = "0xFF0EDC", VA = "0xFF0EDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xFF0988", Offset = "0xFF0988", VA = "0xFF0988")]
	public void SetColor(BalloonColor color)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xFF10EC", Offset = "0xFF10EC", VA = "0xFF10EC")]
	private Color BalloonColorToRGB(BalloonColor balloonColorVar)
	{
		return default(Color);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xFF1324", Offset = "0xFF1324", VA = "0xFF1324")]
	public OculusBalloon()
	{
	}
}
[Token(Token = "0x2000105")]
public class OculusBuggyBud : MonoBehaviour
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform turret;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float turretRot;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDCD4", Offset = "0x7CDCD4")]
	public float maxAngle;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDD0C", Offset = "0x7CDD0C")]
	public float maxTurnTorque;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDD44", Offset = "0x7CDD44")]
	public float maxTorque;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDD7C", Offset = "0x7CDD7C")]
	public float brakeTorque;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDDB4", Offset = "0x7CDDB4")]
	public GameObject[] wheelRenders;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDDEC", Offset = "0x7CDDEC")]
	public float criticalSpeed;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDE24", Offset = "0x7CDE24")]
	public int stepsBelow;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDE5C", Offset = "0x7CDE5C")]
	public int stepsAbove;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WheelCollider[] m_Wheels;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource au_motor;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float mvol;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource au_skid;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float svol;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OculusWheelDust skidsample;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float skidSpeed;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 localGravity;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Rigidbody body;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float rapidfireTime;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float shootTimer;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Vector2 steer;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public float throttle;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public float handBrake;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Transform controllerReference;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public float speed;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform centerOfMass;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xFF1358", Offset = "0xFF1358", VA = "0xFF1358")]
	private void Start()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xFF1468", Offset = "0xFF1468", VA = "0xFF1468")]
	private void Update()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xFF18E4", Offset = "0xFF18E4", VA = "0xFF18E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xFF1910", Offset = "0xFF1910", VA = "0xFF1910")]
	public static float FindAngle(Vector3 fromVector, Vector3 toVector, Vector3 upVector)
	{
		return default(float);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xFF1A1C", Offset = "0xFF1A1C", VA = "0xFF1A1C")]
	public OculusBuggyBud()
	{
	}
}
[Token(Token = "0x2000106")]
public class OculusCarRemote : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA6C", Offset = "0x7CAA6C")]
	private sealed class <DoReset>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusCarRemote <>4__this;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <endTime>5__2;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000655")]
			[Address(RVA = "0xDBB850", Offset = "0xDBB850", VA = "0xDBB850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0xDBB898", Offset = "0xDBB898", VA = "0xDBB898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xDBB5F4", Offset = "0xDBB5F4", VA = "0xDBB5F4")]
		[DebuggerHidden]
		public <DoReset>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xDBB620", Offset = "0xDBB620", VA = "0xDBB620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xDBB624", Offset = "0xDBB624", VA = "0xDBB624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xDBB858", Offset = "0xDBB858", VA = "0xDBB858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform modelJoystick;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float joystickRot;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform modelTrigger;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float triggerRot;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OculusBuggyBud buggy;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform buttonBrake;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform buttonReset;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Canvas ui_Canvas;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image ui_rpm;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image ui_speed;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform ui_steer;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float ui_steerangle;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector2 ui_fillAngles;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform resetToPoint;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool rcCarRoom;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerRotation playerRotation;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayerTeleport playerTeleport;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ControllerHand teleportHandSide;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public InputAxis rotationInputAxis;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Grabbable grab;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool grabStarted;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float usteer;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion trigSRot;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion joySRot;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine resettingRoutine;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 initialScale;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xFF1A4C", Offset = "0xFF1A4C", VA = "0xFF1A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xFF1B14", Offset = "0xFF1B14", VA = "0xFF1B14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xFF1F6C", Offset = "0xFF1F6C", VA = "0xFF1F6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E210C", Offset = "0x7E210C")]
	private IEnumerator DoReset()
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xFF1FD8", Offset = "0xFF1FD8", VA = "0xFF1FD8")]
	public OculusCarRemote()
	{
	}
}
[Token(Token = "0x2000108")]
public class OculusCircularDrive : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	public enum Axis_t
	{
		[Token(Token = "0x40005E9")]
		XAxis,
		[Token(Token = "0x40005EA")]
		YAxis,
		[Token(Token = "0x40005EB")]
		ZAxis
	}

	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA7C", Offset = "0x7CAA7C")]
	private sealed class <HapticPulses>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber hand;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float flMagnitude;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int nCount;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <nRangeMax>5__2;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ushort <i>5__3;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0xDBBA8C", Offset = "0xDBBA8C", VA = "0xDBBA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000671")]
			[Address(RVA = "0xDBBAD4", Offset = "0xDBBAD4", VA = "0xDBBAD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xDBB8A0", Offset = "0xDBB8A0", VA = "0xDBB8A0")]
		[DebuggerHidden]
		public <HapticPulses>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xDBB8CC", Offset = "0xDBB8CC", VA = "0xDBB8CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xDBB8D0", Offset = "0xDBB8D0", VA = "0xDBB8D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xDBBA94", Offset = "0xDBBA94", VA = "0xDBBA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDF04", Offset = "0x7CDF04")]
	public Axis_t axisOfRotation;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDF3C", Offset = "0x7CDF3C")]
	public Collider childCollider;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDF74", Offset = "0x7CDF74")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDFAC", Offset = "0x7CDFAC")]
	public bool hoverLock;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CDFE4", Offset = "0x7CDFE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CDFE4", Offset = "0x7CDFE4")]
	public bool limited;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 frozenDistanceMinMaxThreshold;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onFrozenDistanceThreshold;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE044", Offset = "0x7CE044")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE044", Offset = "0x7CE044")]
	public float minAngle;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE0A4", Offset = "0x7CE0A4")]
	public bool freezeOnMin;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE0DC", Offset = "0x7CE0DC")]
	public UnityEvent onMinAngle;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE114", Offset = "0x7CE114")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE114", Offset = "0x7CE114")]
	public float maxAngle;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE174", Offset = "0x7CE174")]
	public bool freezeOnMax;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE1AC", Offset = "0x7CE1AC")]
	public UnityEvent onMaxAngle;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE1E4", Offset = "0x7CE1E4")]
	public bool forceStart;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE21C", Offset = "0x7CE21C")]
	public float startAngle;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE254", Offset = "0x7CE254")]
	public bool rotateGameObject;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE28C", Offset = "0x7CE28C")]
	public bool debugPath;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE2C4", Offset = "0x7CE2C4")]
	public int dbgPathLimit;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE2FC", Offset = "0x7CE2FC")]
	public TextMesh debugText;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE334", Offset = "0x7CE334")]
	public float outAngle;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion start;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 worldPlaneNormal;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 localPlaneNormal;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 lastHandProjected;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color red;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color green;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject[] dbgHandObjects;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject[] dbgProjObjects;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject dbgObjectsParent;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int dbgObjectCount;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int dbgObjectIndex;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool driving;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float minMaxAngularThreshold;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool frozen;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float frozenAngle;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 frozenHandWorldPos;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector2 frozenSqDistanceMinMaxThreshold;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform parentOfHand;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool grabStarted;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xFF1FF4", Offset = "0xFF1FF4", VA = "0xFF1FF4")]
	private void Freeze(Transform hand)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xFF2050", Offset = "0xFF2050", VA = "0xFF2050")]
	private void UnFreeze()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xFF2060", Offset = "0xFF2060", VA = "0xFF2060")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xFF2064", Offset = "0xFF2064", VA = "0xFF2064")]
	private void Start()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xFF245C", Offset = "0xFF245C", VA = "0xFF245C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xFF2460", Offset = "0xFF2460", VA = "0xFF2460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E21BC", Offset = "0x7E21BC")]
	private IEnumerator HapticPulses(Grabber hand, float flMagnitude, int nCount)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xFF24EC", Offset = "0xFF24EC", VA = "0xFF24EC")]
	private void OnHandHoverBegin(GameObject hand)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xFF24F0", Offset = "0xFF24F0", VA = "0xFF24F0")]
	private void OnHandHoverEnd(GameObject hand)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xFF2570", Offset = "0xFF2570", VA = "0xFF2570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xFF2BF0", Offset = "0xFF2BF0", VA = "0xFF2BF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xFF26A0", Offset = "0xFF26A0", VA = "0xFF26A0")]
	private Vector3 ComputeToTransformProjected(Transform xForm)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xFF2C74", Offset = "0xFF2C74", VA = "0xFF2C74")]
	private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xFF32A4", Offset = "0xFF32A4", VA = "0xFF32A4")]
	private void UpdateLinearMapping()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xFF3418", Offset = "0xFF3418", VA = "0xFF3418")]
	private void UpdateGameObject()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xFF3308", Offset = "0xFF3308", VA = "0xFF3308")]
	private void UpdateDebugText()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xFF23D8", Offset = "0xFF23D8", VA = "0xFF23D8")]
	private void UpdateAll()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xFF34C0", Offset = "0xFF34C0", VA = "0xFF34C0")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xFF34DC", Offset = "0xFF34DC", VA = "0xFF34DC")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xFF28CC", Offset = "0xFF28CC", VA = "0xFF28CC")]
	private void ComputeAngle(Transform hand)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xFF3550", Offset = "0xFF3550", VA = "0xFF3550")]
	public OculusCircularDrive()
	{
	}
}
[Token(Token = "0x200010B")]
public class OculusDestroyOnParticleSystem : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xFF3620", Offset = "0xFF3620", VA = "0xFF3620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xFF36A0", Offset = "0xFF36A0", VA = "0xFF36A0")]
	private void CheckParticleSystem()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xFF373C", Offset = "0xFF373C", VA = "0xFF373C")]
	public OculusDestroyOnParticleSystem()
	{
	}
}
[Token(Token = "0x200010C")]
public class OculusGrabAndAnimate : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA8C", Offset = "0x7CAA8C")]
	private sealed class <EndSequence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusGrabAndAnimate <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0xDBBCC4", Offset = "0xDBBCC4", VA = "0xDBBCC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xDBBD0C", Offset = "0xDBBD0C", VA = "0xDBBD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xDBBADC", Offset = "0xDBBADC", VA = "0xDBBADC")]
		[DebuggerHidden]
		public <EndSequence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xDBBB08", Offset = "0xDBBB08", VA = "0xDBBB08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xDBBB0C", Offset = "0xDBBB0C", VA = "0xDBBB0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xDBBCCC", Offset = "0xDBBCCC", VA = "0xDBBCCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider childCollider;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool driving;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject theDoor;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource roboSounds;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool triggerEnd;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoboManager roboManager1;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RoboManager roboManager2;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource knockingAudio;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource musicSpeaker;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource doorSound;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LightsManager lightsManager;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sceneChange;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource jumpScare;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roboTogether;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool grabStarted;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextSynchronizer textSynchronizer2;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject roboCaption2;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xFF3744", Offset = "0xFF3744", VA = "0xFF3744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xFF39E0", Offset = "0xFF39E0", VA = "0xFF39E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xFF39E4", Offset = "0xFF39E4", VA = "0xFF39E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xFF3974", Offset = "0xFF3974", VA = "0xFF3974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E226C", Offset = "0x7E226C")]
	private IEnumerator EndSequence()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xFF3A7C", Offset = "0xFF3A7C", VA = "0xFF3A7C")]
	public OculusGrabAndAnimate()
	{
	}
}
[Token(Token = "0x200010E")]
public class OculusHapticRack : MonoBehaviour
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE37C", Offset = "0x7CE37C")]
	public OculusLinearMapping linearMapping;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE3B4", Offset = "0x7CE3B4")]
	public int teethCount;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE3EC", Offset = "0x7CE3EC")]
	public float minimumPulseDuration;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE424", Offset = "0x7CE424")]
	public float maximumPulseDuration;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE45C", Offset = "0x7CE45C")]
	public UnityEvent onPulse;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject hand;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int previousToothIndex;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xFF3A8C", Offset = "0xFF3A8C", VA = "0xFF3A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xFF3B24", Offset = "0xFF3B24", VA = "0xFF3B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xFF3BC8", Offset = "0xFF3BC8", VA = "0xFF3BC8")]
	private void Pulse()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xFF3CB8", Offset = "0xFF3CB8", VA = "0xFF3CB8")]
	public OculusHapticRack()
	{
	}
}
[Token(Token = "0x200010F")]
public class OculusJoystickGrab : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float attachForce;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float attachForceDamper;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject holdingHands;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody holdingBodies;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 holdingPoints;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigidBodies;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectToNotBreak;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject parentOfHand;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 originalPos;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rotateSpeed;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool restoreRotation;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool grabStarted;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xFF3CDC", Offset = "0xFF3CDC", VA = "0xFF3CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xFF3D74", Offset = "0xFF3D74", VA = "0xFF3D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xFF436C", Offset = "0xFF436C", VA = "0xFF436C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xFF409C", Offset = "0xFF409C", VA = "0xFF409C")]
	private void PhysicsAttach(GameObject hand)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xFF4288", Offset = "0xFF4288", VA = "0xFF4288")]
	private void PhysicsDetach(GameObject hand)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xFF4370", Offset = "0xFF4370", VA = "0xFF4370")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xFF44D0", Offset = "0xFF44D0", VA = "0xFF44D0")]
	public OculusJoystickGrab()
	{
	}
}
[Token(Token = "0x2000110")]
public class OculusLinearMapping : MonoBehaviour
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xFF44EC", Offset = "0xFF44EC", VA = "0xFF44EC")]
	public OculusLinearMapping()
	{
	}
}
[Token(Token = "0x2000111")]
public class OculusLockObject : MonoBehaviour
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform snapTo;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float snapTime;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float dropTimer;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable interactable;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xFF44F4", Offset = "0xFF44F4", VA = "0xFF44F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xFF456C", Offset = "0xFF456C", VA = "0xFF456C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xFF4918", Offset = "0xFF4918", VA = "0xFF4918")]
	public OculusLockObject()
	{
	}
}
[Token(Token = "0x2000112")]
public class OculusPlaySound : MonoBehaviour
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE494", Offset = "0x7CE494")]
	public AudioClip[] waveFile;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE4CC", Offset = "0x7CE4CC")]
	public bool stopOnPlay;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE504", Offset = "0x7CE504")]
	public bool disableOnEnd;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE53C", Offset = "0x7CE53C")]
	public bool looping;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE574", Offset = "0x7CE574")]
	public bool stopOnEnd;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE5AC", Offset = "0x7CE5AC")]
	public bool playOnAwakeWithDelay;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE5E4", Offset = "0x7CE5E4")]
	public bool useRandomVolume;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE61C", Offset = "0x7CE61C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE61C", Offset = "0x7CE61C")]
	public float volMin;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE670", Offset = "0x7CE670")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE670", Offset = "0x7CE670")]
	public float volMax;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE6C4", Offset = "0x7CE6C4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE6C4", Offset = "0x7CE6C4")]
	public bool useRandomPitch;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE724", Offset = "0x7CE724")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE724", Offset = "0x7CE724")]
	public float pitchMin;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE778", Offset = "0x7CE778")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE778", Offset = "0x7CE778")]
	public float pitchMax;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE7CC", Offset = "0x7CE7CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE7CC", Offset = "0x7CE7CC")]
	public bool useRetriggerTime;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE82C", Offset = "0x7CE82C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE82C", Offset = "0x7CE82C")]
	public float timeInitial;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE884", Offset = "0x7CE884")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE884", Offset = "0x7CE884")]
	public float timeMin;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE8DC", Offset = "0x7CE8DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE8DC", Offset = "0x7CE8DC")]
	public float timeMax;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE934", Offset = "0x7CE934")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE934", Offset = "0x7CE934")]
	public bool useRandomSilence;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE994", Offset = "0x7CE994")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CE994", Offset = "0x7CE994")]
	public float percentToNotPlay;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE9E8", Offset = "0x7CE9E8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE9E8", Offset = "0x7CE9E8")]
	public float delayOffsetTime;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioClip clip;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xFF4928", Offset = "0xFF4928", VA = "0xFF4928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xFF4A60", Offset = "0xFF4A60", VA = "0xFF4A60")]
	public void Play()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xFF4A70", Offset = "0xFF4A70", VA = "0xFF4A70")]
	public void PlayWithDelay(float delayTime)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xFF4BB0", Offset = "0xFF4BB0", VA = "0xFF4BB0")]
	public AudioClip PlayOneShotSound()
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xFF4AF0", Offset = "0xFF4AF0", VA = "0xFF4AF0")]
	public AudioClip PlayLooping()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xFF4D8C", Offset = "0xFF4D8C", VA = "0xFF4D8C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xFF4DB4", Offset = "0xFF4DB4", VA = "0xFF4DB4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xFF4C74", Offset = "0xFF4C74", VA = "0xFF4C74")]
	private void SetAudioSource()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xFF4DD0", Offset = "0xFF4DD0", VA = "0xFF4DD0")]
	public OculusPlaySound()
	{
	}
}
[Token(Token = "0x2000113")]
public class OculusSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAA9C", Offset = "0x7CAA9C")]
	private sealed class <LoadUpNext>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusSceneLoader <>4__this;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeTime>5__2;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__3;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__4;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpriteRenderer <sr>5__5;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0xDBC0A8", Offset = "0xDBC0A8", VA = "0xDBC0A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0xDBC0F0", Offset = "0xDBC0F0", VA = "0xDBC0F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xDBBD14", Offset = "0xDBBD14", VA = "0xDBBD14")]
		[DebuggerHidden]
		public <LoadUpNext>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xDBBD40", Offset = "0xDBBD40", VA = "0xDBBD40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xDBBD44", Offset = "0xDBBD44", VA = "0xDBBD44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xDBC0B0", Offset = "0xDBC0B0", VA = "0xDBC0B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logoCanvas;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CEA48", Offset = "0x7CEA48")]
	public string firstSceneName;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CEA80", Offset = "0x7CEA80")]
	public float firstSceneFadeTime;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CEAB8", Offset = "0x7CEAB8")]
	public float defaultFadeTime;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstScene;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string nextScene;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xFF4DF0", Offset = "0xFF4DF0", VA = "0xFF4DF0")]
	public void LoadSceneViaLoadingScene(string scene)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xFF4EA8", Offset = "0xFF4EA8", VA = "0xFF4EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xFF4ED4", Offset = "0xFF4ED4", VA = "0xFF4ED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E231C", Offset = "0x7E231C")]
	private IEnumerator LoadUpNext()
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xFF4F40", Offset = "0xFF4F40", VA = "0xFF4F40")]
	public OculusSceneLoader()
	{
	}
}
[Token(Token = "0x2000115")]
public class OculusSoundDeparent : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyAfterPlayOnce;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource thisAudioSource;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xFF4F4C", Offset = "0xFF4F4C", VA = "0xFF4F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xFF4FA0", Offset = "0xFF4FA0", VA = "0xFF4FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xFF5088", Offset = "0xFF5088", VA = "0xFF5088")]
	public OculusSoundDeparent()
	{
	}
}
[Token(Token = "0x2000116")]
public class OculusSoundPlayOneshot : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] waveFiles;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource thisAudioSource;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float volMin;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float volMax;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pitchMin;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitchMax;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool playOnAwake;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xFF5098", Offset = "0xFF5098", VA = "0xFF5098")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A7")]
	public static bool IsNullOrEmpty<T>(T[] array)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xFF0C7C", Offset = "0xFF0C7C", VA = "0xFF0C7C")]
	public void Play()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xFF5104", Offset = "0xFF5104", VA = "0xFF5104")]
	public void Pause()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xFF5194", Offset = "0xFF5194", VA = "0xFF5194")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xFF5224", Offset = "0xFF5224", VA = "0xFF5224")]
	public OculusSoundPlayOneshot()
	{
	}
}
[Token(Token = "0x2000117")]
public class OculusWheelDust : MonoBehaviour
{
	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAAAC", Offset = "0x7CAAAC")]
	private sealed class <emitter>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusWheelDust <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0xDBC1F0", Offset = "0xDBC1F0", VA = "0xDBC1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0xDBC238", Offset = "0xDBC238", VA = "0xDBC238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xDBC0F8", Offset = "0xDBC0F8", VA = "0xDBC0F8")]
		[DebuggerHidden]
		public <emitter>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xDBC124", Offset = "0xDBC124", VA = "0xDBC124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xDBC128", Offset = "0xDBC128", VA = "0xDBC128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xDBC1F8", Offset = "0xDBC1F8", VA = "0xDBC1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WheelCollider col;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem p;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float EmissionMul;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float velocityMul;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxEmission;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minSlip;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float amt;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public Vector3 slip;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float emitTimer;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xFF522C", Offset = "0xFF522C", VA = "0xFF522C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xFF5300", Offset = "0xFF5300", VA = "0xFF5300")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xFF5294", Offset = "0xFF5294", VA = "0xFF5294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E23CC", Offset = "0x7E23CC")]
	private IEnumerator emitter()
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xFF5420", Offset = "0xFF5420", VA = "0xFF5420")]
	private void DoEmit()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xFF54F4", Offset = "0xFF54F4", VA = "0xFF54F4")]
	public OculusWheelDust()
	{
	}
}
[Token(Token = "0x2000119")]
public class OfficeLockCollider : MonoBehaviour
{
	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAABC", Offset = "0x7CAABC")]
	private sealed class <RotateObject>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OfficeLockCollider <>4__this;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0xDBC3A8", Offset = "0xDBC3A8", VA = "0xDBC3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0xDBC3F0", Offset = "0xDBC3F0", VA = "0xDBC3F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xDBC240", Offset = "0xDBC240", VA = "0xDBC240")]
		[DebuggerHidden]
		public <RotateObject>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xDBC26C", Offset = "0xDBC26C", VA = "0xDBC26C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xDBC270", Offset = "0xDBC270", VA = "0xDBC270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xDBC3B0", Offset = "0xDBC3B0", VA = "0xDBC3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAACC", Offset = "0x7CAACC")]
	private sealed class <SetTheAngle>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeLockCollider <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xDBC500", Offset = "0xDBC500", VA = "0xDBC500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0xDBC548", Offset = "0xDBC548", VA = "0xDBC548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xDBC3F8", Offset = "0xDBC3F8", VA = "0xDBC3F8")]
		[DebuggerHidden]
		public <SetTheAngle>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xDBC424", Offset = "0xDBC424", VA = "0xDBC424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xDBC428", Offset = "0xDBC428", VA = "0xDBC428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xDBC508", Offset = "0xDBC508", VA = "0xDBC508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherParent;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform keyPlacement;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rotateKey;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rotateCount;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool playUnlockSound;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource doorUnlock;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RotationDuration;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _isRotating;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool isOpen;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool isUnlocked;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject changeScene;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject doorToOpen;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string keyName;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool changeSceneBool;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool needsSpecialParent;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject parentToThis;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject removeHeadFade;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform drawerEnd;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject keyToCollideWith;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] objectsInside;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] objectsInsideRigidBody;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] objectsInsideMeshRenderer;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BoxCollider keyBoxCollider;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xFF5504", Offset = "0xFF5504", VA = "0xFF5504")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xFF5E2C", Offset = "0xFF5E2C", VA = "0xFF5E2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xFF6494", Offset = "0xFF6494", VA = "0xFF6494")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E247C", Offset = "0x7E247C")]
	private IEnumerator RotateObject(Quaternion start, Quaternion end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xFF5DC0", Offset = "0xFF5DC0", VA = "0xFF5DC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E24DC", Offset = "0x7E24DC")]
	private IEnumerator SetTheAngle()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xFF6508", Offset = "0xFF6508", VA = "0xFF6508")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xFF6B18", Offset = "0xFF6B18", VA = "0xFF6B18")]
	public OfficeLockCollider()
	{
	}
}
[Token(Token = "0x200011C")]
public class OpenArcadeDoor : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAADC", Offset = "0x7CAADC")]
	private sealed class <moveToX>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OpenArcadeDoor <>4__this;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform fromPosition;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 toPosition;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <counter>5__2;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0xDBC7B4", Offset = "0xDBC7B4", VA = "0xDBC7B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xDBC7FC", Offset = "0xDBC7FC", VA = "0xDBC7FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xDBC550", Offset = "0xDBC550", VA = "0xDBC550")]
		[DebuggerHidden]
		public <moveToX>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xDBC57C", Offset = "0xDBC57C", VA = "0xDBC57C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xDBC580", Offset = "0xDBC580", VA = "0xDBC580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xDBC7BC", Offset = "0xDBC7BC", VA = "0xDBC7BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectectA;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectectB;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshCollider diceMeshCollider;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider keyBoxCollider;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody diceRigidbody;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool itsABoxCol;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool itsARemote;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject remoteButtons;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buttonMonitor;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject mainRemote;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isMoving;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xFF6B68", Offset = "0xFF6B68", VA = "0xFF6B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xFF6EB0", Offset = "0xFF6EB0", VA = "0xFF6EB0")]
	public void OpenThatDoor()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xFF6F60", Offset = "0xFF6F60", VA = "0xFF6F60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E25DC", Offset = "0x7E25DC")]
	private IEnumerator moveToX(Transform fromPosition, Vector3 toPosition, float duration)
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xFF7000", Offset = "0xFF7000", VA = "0xFF7000")]
	public OpenArcadeDoor()
	{
	}
}
[Token(Token = "0x200011E")]
public class OpenDoorLitte : MonoBehaviour
{
	[Token(Token = "0x200011F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAAEC", Offset = "0x7CAAEC")]
	private sealed class <RotateObject>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OpenDoorLitte <>4__this;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion start;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion end;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <endTime>5__2;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xDBCA78", Offset = "0xDBCA78", VA = "0xDBCA78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xDBCAC0", Offset = "0xDBCAC0", VA = "0xDBCAC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xDBC804", Offset = "0xDBC804", VA = "0xDBC804")]
		[DebuggerHidden]
		public <RotateObject>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xDBC830", Offset = "0xDBC830", VA = "0xDBC830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xDBC834", Offset = "0xDBC834", VA = "0xDBC834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xDBCA80", Offset = "0xDBCA80", VA = "0xDBCA80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationDuration;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isRotating;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isOpen;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isUnlocked;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xFF68AC", Offset = "0xFF68AC", VA = "0xFF68AC")]
	public void OpenDoorALitte()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xFF7008", Offset = "0xFF7008", VA = "0xFF7008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E268C", Offset = "0x7E268C")]
	private IEnumerator RotateObject(Quaternion start, Quaternion end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xFF70CC", Offset = "0xFF70CC", VA = "0xFF70CC")]
	public OpenDoorLitte()
	{
	}
}
[Token(Token = "0x2000120")]
public class PGloveButtonMan : MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PowerGloveManager powerGloveManager;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xFF70DC", Offset = "0xFF70DC", VA = "0xFF70DC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xFF716C", Offset = "0xFF716C", VA = "0xFF716C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xFF7170", Offset = "0xFF7170", VA = "0xFF7170")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xFF7174", Offset = "0xFF7174", VA = "0xFF7174")]
	public PGloveButtonMan()
	{
	}
}
[Token(Token = "0x2000121")]
public class PaintingManager : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logoPainting;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ratingPainting;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controllerPoster;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject socialsPoster;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xFF717C", Offset = "0xFF717C", VA = "0xFF717C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xFF7234", Offset = "0xFF7234", VA = "0xFF7234")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xFF7238", Offset = "0xFF7238", VA = "0xFF7238")]
	public PaintingManager()
	{
	}
}
[Token(Token = "0x2000122")]
public class ParentDeparentDrawer : MonoBehaviour
{
	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xFF7240", Offset = "0xFF7240", VA = "0xFF7240")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xFF740C", Offset = "0xFF740C", VA = "0xFF740C")]
	public ParentDeparentDrawer()
	{
	}
}
[Token(Token = "0x2000123")]
public class ParentToDrawer : MonoBehaviour
{
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xFF7414", Offset = "0xFF7414", VA = "0xFF7414")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xFF7418", Offset = "0xFF7418", VA = "0xFF7418")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xFF741C", Offset = "0xFF741C", VA = "0xFF741C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xFF7550", Offset = "0xFF7550", VA = "0xFF7550")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xFF7660", Offset = "0xFF7660", VA = "0xFF7660")]
	public ParentToDrawer()
	{
	}
}
[Token(Token = "0x2000124")]
public class PhoneButtonManager : MonoBehaviour
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xFFA014", Offset = "0xFFA014", VA = "0xFFA014")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xFFA0A4", Offset = "0xFFA0A4", VA = "0xFFA0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xFFA0A8", Offset = "0xFFA0A8", VA = "0xFFA0A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xFFA0AC", Offset = "0xFFA0AC", VA = "0xFFA0AC")]
	public PhoneButtonManager()
	{
	}
}
[Token(Token = "0x2000125")]
public class PhoneButtonPress : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xFFA0B4", Offset = "0xFFA0B4", VA = "0xFFA0B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xFFA190", Offset = "0xFFA190", VA = "0xFFA190")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xFFA194", Offset = "0xFFA194", VA = "0xFFA194")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xFFA198", Offset = "0xFFA198", VA = "0xFFA198")]
	public PhoneButtonPress()
	{
	}
}
[Token(Token = "0x2000126")]
public class PicoPauser : MonoBehaviour
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sources;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MediaPlayer[] movies;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector theTimeLinePlaying;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayableDirector[] theTimeLinesPlaying;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MediaPlayer[] theMoviesPlaying;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timelinecounter;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int movieCounter;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] timeLineIsPlaying;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] movieIsPlaying;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeScale;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool headSetOffOnce;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool headSetOnOnce;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool pauseOnce;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool unpauseOnce;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wornTheFirstTime;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool gamePaused;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool isPaused;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool pausedFromFocus;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool pausedFromHeadSetRemoved;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyPauseOnce;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xFFBFA8", Offset = "0xFFBFA8", VA = "0xFFBFA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xFFC204", Offset = "0xFFC204", VA = "0xFFC204")]
	private void GotANewOneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xFFC374", Offset = "0xFFC374", VA = "0xFFC374")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xFFC4CC", Offset = "0xFFC4CC", VA = "0xFFC4CC")]
	private void HandleFocusAcquired()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xFFC680", Offset = "0xFFC680", VA = "0xFFC680")]
	private void HandleFocusLost()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xFFCB78", Offset = "0xFFCB78", VA = "0xFFCB78")]
	public PicoPauser()
	{
	}
}
[Token(Token = "0x2000127")]
public class PieceDetector : MonoBehaviour
{
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xFFCB94", Offset = "0xFFCB94", VA = "0xFFCB94")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xFFCB98", Offset = "0xFFCB98", VA = "0xFFCB98")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xFFCB9C", Offset = "0xFFCB9C", VA = "0xFFCB9C")]
	public PieceDetector()
	{
	}
}
[Token(Token = "0x2000128")]
public class DemoManager : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] effects;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int currentIndex;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<Vector3> initPos;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x105ADB0", Offset = "0x105ADB0", VA = "0x105ADB0")]
	public void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x105AEB4", Offset = "0x105AEB4", VA = "0x105AEB4")]
	public void GetInitPos()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x105B054", Offset = "0x105B054", VA = "0x105B054")]
	public void IncreaseIndex()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x105B194", Offset = "0x105B194", VA = "0x105B194")]
	public void DecreaseIndex()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x105AF70", Offset = "0x105AF70", VA = "0x105AF70")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x105B2D8", Offset = "0x105B2D8", VA = "0x105B2D8")]
	public void Replay()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x105B3FC", Offset = "0x105B3FC", VA = "0x105B3FC")]
	public DemoManager()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CAAFC", Offset = "0x7CAAFC")]
public class FairyDustRandomPosition : MonoBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intervalInSec;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 minCoord;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 maxCoord;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxVelocityMagnitude;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 initPos;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Rigidbody rgbd;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 nextPos;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1067D60", Offset = "0x1067D60", VA = "0x1067D60")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1067DB4", Offset = "0x1067DB4", VA = "0x1067DB4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1067E44", Offset = "0x1067E44", VA = "0x1067E44")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1067F10", Offset = "0x1067F10", VA = "0x1067F10")]
	public void GetNextPosition()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1067F94", Offset = "0x1067F94", VA = "0x1067F94")]
	public FairyDustRandomPosition()
	{
	}
}
[Token(Token = "0x200012A")]
public class FairyMeteorAddForceDemo : MonoBehaviour
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int strength;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 direction;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody rgbd;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1451220", Offset = "0x1451220", VA = "0x1451220")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1451274", Offset = "0x1451274", VA = "0x1451274")]
	public void Start()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x14512AC", Offset = "0x14512AC", VA = "0x14512AC")]
	public FairyMeteorAddForceDemo()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CAB5C", Offset = "0x7CAB5C")]
public class Fireball : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pushOnAwake;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 startDirection;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startMagnitude;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ForceMode forceMode;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fieryEffect;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject smokeEffect;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explodeEffect;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Rigidbody rgbd;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1451338", Offset = "0x1451338", VA = "0x1451338")]
	public void Awake()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x145138C", Offset = "0x145138C", VA = "0x145138C")]
	public void Start()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x14513A4", Offset = "0x14513A4", VA = "0x14513A4")]
	public void Push(Vector3 direction, float magnitude)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x145140C", Offset = "0x145140C", VA = "0x145140C")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x145152C", Offset = "0x145152C", VA = "0x145152C")]
	public void StopParticleSystem(GameObject g)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x14515D4", Offset = "0x14515D4", VA = "0x14515D4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x14516FC", Offset = "0x14516FC", VA = "0x14516FC")]
	public Fireball()
	{
	}
}
[Token(Token = "0x200012C")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnDegPerSec;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 localAxis;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float turnDegPerFrame;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xE75CD4", Offset = "0xE75CD4", VA = "0xE75CD4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xE75D0C", Offset = "0xE75D0C", VA = "0xE75D0C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xE75D44", Offset = "0xE75D44", VA = "0xE75D44")]
	public Spin()
	{
	}
}
[Token(Token = "0x200012D")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject testObject;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xE7FA40", Offset = "0xE7FA40", VA = "0xE7FA40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xE7FA44", Offset = "0xE7FA44", VA = "0xE7FA44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xE7FB9C", Offset = "0xE7FB9C", VA = "0xE7FB9C")]
	public Test()
	{
	}
}
[Token(Token = "0x200012E")]
public class PosterSwapper : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material oculusPoster;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material oculusSPoster;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer posterRenderer;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool checkForControllerChange;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x12FD318", Offset = "0x12FD318", VA = "0x12FD318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x12FD394", Offset = "0x12FD394", VA = "0x12FD394")]
	public PosterSwapper()
	{
	}
}
[Token(Token = "0x200012F")]
public class PowerGloveManager : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canPressButton;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tvManager;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerEndOnce;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x12FD3A4", Offset = "0x12FD3A4", VA = "0x12FD3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x12FD3F8", Offset = "0x12FD3F8", VA = "0x12FD3F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x12FD3FC", Offset = "0x12FD3FC", VA = "0x12FD3FC")]
	public void CheckIfTimeForEnd()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x12FD4C8", Offset = "0x12FD4C8", VA = "0x12FD4C8")]
	public PowerGloveManager()
	{
	}
}
[Token(Token = "0x2000130")]
public class PowerOnOffButton : MonoBehaviour
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CABBC", Offset = "0x7CABBC")]
	private sealed class <TurnOffLights>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerOnOffButton <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xDC0A80", Offset = "0xDC0A80", VA = "0xDC0A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xDC0AC8", Offset = "0xDC0AC8", VA = "0xDC0AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xDC092C", Offset = "0xDC092C", VA = "0xDC092C")]
		[DebuggerHidden]
		public <TurnOffLights>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xDC0958", Offset = "0xDC0958", VA = "0xDC0958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xDC095C", Offset = "0xDC095C", VA = "0xDC095C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xDC0A88", Offset = "0xDC0A88", VA = "0xDC0A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CABCC", Offset = "0x7CABCC")]
	private sealed class <WaitToCheck>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerOnOffButton <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xDC0BAC", Offset = "0xDC0BAC", VA = "0xDC0BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xDC0BF4", Offset = "0xDC0BF4", VA = "0xDC0BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xDC0AD0", Offset = "0xDC0AD0", VA = "0xDC0AD0")]
		[DebuggerHidden]
		public <WaitToCheck>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xDC0AFC", Offset = "0xDC0AFC", VA = "0xDC0AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xDC0B00", Offset = "0xDC0B00", VA = "0xDC0B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xDC0BB4", Offset = "0xDC0BB4", VA = "0xDC0BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject button1;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject button2;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject button3;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material gloveMat;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material greenMat;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PowerGloveManager powerGloveManager;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject handTouching;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool canPress;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine lightStuff;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x12FD4D8", Offset = "0x12FD4D8", VA = "0x12FD4D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x12FD694", Offset = "0x12FD694", VA = "0x12FD694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E273C", Offset = "0x7E273C")]
	private IEnumerator TurnOffLights()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x12FD628", Offset = "0x12FD628", VA = "0x12FD628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E279C", Offset = "0x7E279C")]
	private IEnumerator WaitToCheck()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x12FD700", Offset = "0x12FD700", VA = "0x12FD700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x12FD704", Offset = "0x12FD704", VA = "0x12FD704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x12FD708", Offset = "0x12FD708", VA = "0x12FD708")]
	public PowerOnOffButton()
	{
	}
}
[Token(Token = "0x2000133")]
public class QuitButtonScript : MonoBehaviour
{
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CABDC", Offset = "0x7CABDC")]
	private sealed class <WaitForSound>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuitButtonScript <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xDC0ED0", Offset = "0xDC0ED0", VA = "0xDC0ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xDC0F18", Offset = "0xDC0F18", VA = "0xDC0F18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xDC0D50", Offset = "0xDC0D50", VA = "0xDC0D50")]
		[DebuggerHidden]
		public <WaitForSound>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xDC0D7C", Offset = "0xDC0D7C", VA = "0xDC0D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xDC0D80", Offset = "0xDC0D80", VA = "0xDC0D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xDC0ED8", Offset = "0xDC0ED8", VA = "0xDC0ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CABEC", Offset = "0x7CABEC")]
	private sealed class <WaitToReturnToNormal>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuitButtonScript <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xDC1018", Offset = "0xDC1018", VA = "0xDC1018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xDC1060", Offset = "0xDC1060", VA = "0xDC1060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xDC0F20", Offset = "0xDC0F20", VA = "0xDC0F20")]
		[DebuggerHidden]
		public <WaitToReturnToNormal>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xDC0F4C", Offset = "0xDC0F4C", VA = "0xDC0F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xDC0F50", Offset = "0xDC0F50", VA = "0xDC0F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xDC1020", Offset = "0xDC1020", VA = "0xDC1020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handTouchingButton;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent keyPressed;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator keyPressAnim;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canPress;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int buttonCount;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonText1;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject buttonText2;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sceneChanger;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine returnToNormal;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x12FFC44", Offset = "0x12FFC44", VA = "0x12FFC44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x12FFE7C", Offset = "0x12FFE7C", VA = "0x12FFE7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E289C", Offset = "0x7E289C")]
	private IEnumerator WaitForSound()
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x12FFEE8", Offset = "0x12FFEE8", VA = "0x12FFEE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E28FC", Offset = "0x7E28FC")]
	private IEnumerator WaitToReturnToNormal()
	{
		return null;
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x12FFF54", Offset = "0x12FFF54", VA = "0x12FFF54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x12FFF94", Offset = "0x12FFF94", VA = "0x12FFF94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x12FFF98", Offset = "0x12FFF98", VA = "0x12FFF98")]
	public QuitButtonScript()
	{
	}
}
[Token(Token = "0x2000136")]
public class RemoteButtonMonitor : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TVManager tvManager;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1302934", Offset = "0x1302934", VA = "0x1302934")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x13029C4", Offset = "0x13029C4", VA = "0x13029C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x13029C8", Offset = "0x13029C8", VA = "0x13029C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x13029CC", Offset = "0x13029CC", VA = "0x13029CC")]
	public RemoteButtonMonitor()
	{
	}
}
[Token(Token = "0x2000137")]
public class RemoteButtonPress : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonName;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x13029D4", Offset = "0x13029D4", VA = "0x13029D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x13029D8", Offset = "0x13029D8", VA = "0x13029D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x13029DC", Offset = "0x13029DC", VA = "0x13029DC")]
	public RemoteButtonPress()
	{
	}
}
[Token(Token = "0x2000138")]
public class RemoteColliderControl : MonoBehaviour
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider[] collidersObj;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider colliderItem;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x13029E4", Offset = "0x13029E4", VA = "0x13029E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1302A98", Offset = "0x1302A98", VA = "0x1302A98")]
	public void ActivateButtonColliders()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1302B4C", Offset = "0x1302B4C", VA = "0x1302B4C")]
	public RemoteColliderControl()
	{
	}
}
[Token(Token = "0x2000139")]
public class RemoteControlManager : MonoBehaviour
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject television;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1302B54", Offset = "0x1302B54", VA = "0x1302B54")]
	private void Start()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1302B58", Offset = "0x1302B58", VA = "0x1302B58")]
	private void Update()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1302B5C", Offset = "0x1302B5C", VA = "0x1302B5C")]
	public RemoteControlManager()
	{
	}
}
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7CABFC", Offset = "0x7CABFC")]
public class InspectorButtonAttribute : PropertyAttribute
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float kDefaultButtonWidth;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string MethodName;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _buttonWidth;

	[Token(Token = "0x17000111")]
	public float ButtonWidth
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x16A6F88", Offset = "0x16A6F88", VA = "0x16A6F88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x16A6F90", Offset = "0x16A6F90", VA = "0x16A6F90")]
		set
		{
		}
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x16A6F98", Offset = "0x16A6F98", VA = "0x16A6F98")]
	public InspectorButtonAttribute(string MethodName)
	{
	}
}
[Token(Token = "0x200013B")]
public class RoboElectric : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC10", Offset = "0x7CAC10")]
	private sealed class <ElectricRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboElectric <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xCBC518", Offset = "0xCBC518", VA = "0xCBC518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xCBC560", Offset = "0xCBC560", VA = "0xCBC560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xCBC3DC", Offset = "0xCBC3DC", VA = "0xCBC3DC")]
		[DebuggerHidden]
		public <ElectricRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xCBC408", Offset = "0xCBC408", VA = "0xCBC408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xCBC40C", Offset = "0xCBC40C", VA = "0xCBC40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xCBC520", Offset = "0xCBC520", VA = "0xCBC520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] electricNoises;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource electricSource;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int electricPick;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool keepGoing;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine elecRoutine;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xD990D0", Offset = "0xD990D0", VA = "0xD990D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xD99124", Offset = "0xD99124", VA = "0xD99124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD99128", Offset = "0xD99128", VA = "0xD99128")]
	public void StartElectricity()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD991C8", Offset = "0xD991C8", VA = "0xD991C8")]
	public void StopElectricity()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD9915C", Offset = "0xD9915C", VA = "0xD9915C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E29FC", Offset = "0x7E29FC")]
	private IEnumerator ElectricRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD991D4", Offset = "0xD991D4", VA = "0xD991D4")]
	public RoboElectric()
	{
	}
}
[Token(Token = "0x200013D")]
public class RoboManager : MonoBehaviour
{
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC20", Offset = "0x7CAC20")]
	private sealed class <TurnHeadToTalkToCoreyRoutine>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime2;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xCBFCD0", Offset = "0xCBFCD0", VA = "0xCBFCD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xCBFD18", Offset = "0xCBFD18", VA = "0xCBFD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xCBFAC0", Offset = "0xCBFAC0", VA = "0xCBFAC0")]
		[DebuggerHidden]
		public <TurnHeadToTalkToCoreyRoutine>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xCBFAEC", Offset = "0xCBFAEC", VA = "0xCBFAEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xCBFAF0", Offset = "0xCBFAF0", VA = "0xCBFAF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xCBFCD8", Offset = "0xCBFCD8", VA = "0xCBFCD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC30", Offset = "0x7CAC30")]
	private sealed class <DisplayCaptionLength>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xCBC674", Offset = "0xCBC674", VA = "0xCBC674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xCBC6BC", Offset = "0xCBC6BC", VA = "0xCBC6BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xCBC568", Offset = "0xCBC568", VA = "0xCBC568")]
		[DebuggerHidden]
		public <DisplayCaptionLength>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xCBC594", Offset = "0xCBC594", VA = "0xCBC594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xCBC598", Offset = "0xCBC598", VA = "0xCBC598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xCBC67C", Offset = "0xCBC67C", VA = "0xCBC67C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC40", Offset = "0x7CAC40")]
	private sealed class <MoveFromTo>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 a;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 b;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectToMove;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool glitchRoutine;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <step>5__2;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <t>5__3;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xCBCFA8", Offset = "0xCBCFA8", VA = "0xCBCFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xCBCFF0", Offset = "0xCBCFF0", VA = "0xCBCFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xCBCD14", Offset = "0xCBCD14", VA = "0xCBCD14")]
		[DebuggerHidden]
		public <MoveFromTo>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xCBCD40", Offset = "0xCBCD40", VA = "0xCBCD40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xCBCD44", Offset = "0xCBCD44", VA = "0xCBCD44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xCBCFB0", Offset = "0xCBCFB0", VA = "0xCBCFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC50", Offset = "0x7CAC50")]
	private sealed class <MoveNeckTimeRoutine>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xCBD1FC", Offset = "0xCBD1FC", VA = "0xCBD1FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xCBD244", Offset = "0xCBD244", VA = "0xCBD244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xCBCFF8", Offset = "0xCBCFF8", VA = "0xCBCFF8")]
		[DebuggerHidden]
		public <MoveNeckTimeRoutine>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xCBD024", Offset = "0xCBD024", VA = "0xCBD024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xCBD028", Offset = "0xCBD028", VA = "0xCBD028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xCBD204", Offset = "0xCBD204", VA = "0xCBD204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC60", Offset = "0x7CAC60")]
	private sealed class <RoboCircuitDestroyedTalkTime>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xCBDDA4", Offset = "0xCBDDA4", VA = "0xCBDDA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xCBDDEC", Offset = "0xCBDDEC", VA = "0xCBDDEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xCBDA90", Offset = "0xCBDA90", VA = "0xCBDA90")]
		[DebuggerHidden]
		public <RoboCircuitDestroyedTalkTime>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xCBDABC", Offset = "0xCBDABC", VA = "0xCBDABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xCBDAC0", Offset = "0xCBDAC0", VA = "0xCBDAC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xCBDDAC", Offset = "0xCBDDAC", VA = "0xCBDDAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC70", Offset = "0x7CAC70")]
	private sealed class <PostRoboCircuitDestroyedTalkTime>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xCBD880", Offset = "0xCBD880", VA = "0xCBD880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0xCBD8C8", Offset = "0xCBD8C8", VA = "0xCBD8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xCBD24C", Offset = "0xCBD24C", VA = "0xCBD24C")]
		[DebuggerHidden]
		public <PostRoboCircuitDestroyedTalkTime>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xCBD278", Offset = "0xCBD278", VA = "0xCBD278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xCBD27C", Offset = "0xCBD27C", VA = "0xCBD27C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xCBD888", Offset = "0xCBD888", VA = "0xCBD888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC80", Offset = "0x7CAC80")]
	private sealed class <RoboTrashTalkTime>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float talkTime;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool nextGame;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xCBF41C", Offset = "0xCBF41C", VA = "0xCBF41C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0xCBF464", Offset = "0xCBF464", VA = "0xCBF464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xCBF150", Offset = "0xCBF150", VA = "0xCBF150")]
		[DebuggerHidden]
		public <RoboTrashTalkTime>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xCBF17C", Offset = "0xCBF17C", VA = "0xCBF17C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xCBF180", Offset = "0xCBF180", VA = "0xCBF180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xCBF424", Offset = "0xCBF424", VA = "0xCBF424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC90", Offset = "0x7CAC90")]
	private sealed class <RoboWinTalkTime>d__134 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float talkTime;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool nextGame;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0xCBF738", Offset = "0xCBF738", VA = "0xCBF738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xCBF780", Offset = "0xCBF780", VA = "0xCBF780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xCBF46C", Offset = "0xCBF46C", VA = "0xCBF46C")]
		[DebuggerHidden]
		public <RoboWinTalkTime>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xCBF498", Offset = "0xCBF498", VA = "0xCBF498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xCBF49C", Offset = "0xCBF49C", VA = "0xCBF49C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xCBF740", Offset = "0xCBF740", VA = "0xCBF740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACA0", Offset = "0x7CACA0")]
	private sealed class <RoboGlitchTalkTime>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0xCBE1DC", Offset = "0xCBE1DC", VA = "0xCBE1DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xCBE224", Offset = "0xCBE224", VA = "0xCBE224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xCBDDF4", Offset = "0xCBDDF4", VA = "0xCBDDF4")]
		[DebuggerHidden]
		public <RoboGlitchTalkTime>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xCBDE20", Offset = "0xCBDE20", VA = "0xCBDE20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xCBDE24", Offset = "0xCBDE24", VA = "0xCBDE24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xCBE1E4", Offset = "0xCBE1E4", VA = "0xCBE1E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACB0", Offset = "0x7CACB0")]
	private sealed class <RoboTalkTime>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0xCBF100", Offset = "0xCBF100", VA = "0xCBF100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0xCBF148", Offset = "0xCBF148", VA = "0xCBF148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xCBEF50", Offset = "0xCBEF50", VA = "0xCBEF50")]
		[DebuggerHidden]
		public <RoboTalkTime>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xCBEF7C", Offset = "0xCBEF7C", VA = "0xCBEF7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xCBEF80", Offset = "0xCBEF80", VA = "0xCBEF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xCBF108", Offset = "0xCBF108", VA = "0xCBF108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACC0", Offset = "0x7CACC0")]
	private sealed class <RedBlueBlink>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0xCBDA40", Offset = "0xCBDA40", VA = "0xCBDA40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xCBDA88", Offset = "0xCBDA88", VA = "0xCBDA88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xCBD8D0", Offset = "0xCBD8D0", VA = "0xCBD8D0")]
		[DebuggerHidden]
		public <RedBlueBlink>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xCBD8FC", Offset = "0xCBD8FC", VA = "0xCBD8FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xCBD900", Offset = "0xCBD900", VA = "0xCBD900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xCBDA48", Offset = "0xCBDA48", VA = "0xCBDA48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACD0", Offset = "0x7CACD0")]
	private sealed class <WhiteBlink>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0xCBFFA8", Offset = "0xCBFFA8", VA = "0xCBFFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0xCBFFF0", Offset = "0xCBFFF0", VA = "0xCBFFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xCBFD20", Offset = "0xCBFD20", VA = "0xCBFD20")]
		[DebuggerHidden]
		public <WhiteBlink>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xCBFD4C", Offset = "0xCBFD4C", VA = "0xCBFD4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xCBFD50", Offset = "0xCBFD50", VA = "0xCBFD50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xCBFFB0", Offset = "0xCBFFB0", VA = "0xCBFFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACE0", Offset = "0x7CACE0")]
	private sealed class <StartingRoboIntro>d__139 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xCBFA70", Offset = "0xCBFA70", VA = "0xCBFA70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xCBFAB8", Offset = "0xCBFAB8", VA = "0xCBFAB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xCBF788", Offset = "0xCBF788", VA = "0xCBF788")]
		[DebuggerHidden]
		public <StartingRoboIntro>d__139(int <>1__state)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xCBF7B4", Offset = "0xCBF7B4", VA = "0xCBF7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xCBF7B8", Offset = "0xCBF7B8", VA = "0xCBF7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xCBFA78", Offset = "0xCBFA78", VA = "0xCBFA78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CACF0", Offset = "0x7CACF0")]
	private sealed class <RoboStartGameRoutine>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xCBEF00", Offset = "0xCBEF00", VA = "0xCBEF00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xCBEF48", Offset = "0xCBEF48", VA = "0xCBEF48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xCBE22C", Offset = "0xCBE22C", VA = "0xCBE22C")]
		[DebuggerHidden]
		public <RoboStartGameRoutine>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xCBE258", Offset = "0xCBE258", VA = "0xCBE258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xCBE25C", Offset = "0xCBE25C", VA = "0xCBE25C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xCBEF08", Offset = "0xCBEF08", VA = "0xCBEF08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD00", Offset = "0x7CAD00")]
	private sealed class <GreenBlink>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoboManager <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xCBCCC4", Offset = "0xCBCCC4", VA = "0xCBCCC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xCBCD0C", Offset = "0xCBCD0C", VA = "0xCBCD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xCBC6C4", Offset = "0xCBC6C4", VA = "0xCBC6C4")]
		[DebuggerHidden]
		public <GreenBlink>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xCBC6F0", Offset = "0xCBC6F0", VA = "0xCBC6F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xCBC6F4", Offset = "0xCBC6F4", VA = "0xCBC6F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xCBCCCC", Offset = "0xCBCCCC", VA = "0xCBCCCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] talkLights;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject redLight;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blueLight;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] greenLights;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] whiteLights;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float speechSoundDuration;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool testSpeech;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool redBlueBlinkBool;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool greenBlinkBool;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool whiteBlinkBool;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool roboStartSequence;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int roboHealth;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine speechRoutine;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator neckAnim;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool moveNeck;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float moveNeckTime;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int moveNeckDirectionChoice;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform topPositionRobo;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform bottomPositionRobo;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float roboRiseSpeed;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int chooseTrashTalk;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int chooseWinTalk;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] roboTrashTalk;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] roboWinTalk;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] roboNeautralTalk;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip[] roboGlitchTalkClips;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip[] roboCircuitDestroyedTalkClips;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip[] roboGlitchAnnoyedClips;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource roboVoiceSpot;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource elevatorMusicSource;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GamesManager gamesManager;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Coroutine moveRoutine;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool glitchRoutine;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int trashTalkCounter;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int winTalkCounter;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int neautralTalkCounter;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int circuitDestroyedTalkCounter;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int roboGlitchTalkClipsCounter;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CoreyCode coreyCode;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform bottomPedPos;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform topPedPos;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject pedestalWithGun;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public BoxCollider gunBoxCollider;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool activateGun;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int muteTalkCounter;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public PlayableDirector endSequencePlayable;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject theEndTest;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool shakeRobot;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float shakeSpeed;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float shakeAmount;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 startingPos;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ParticleSystem particleObject;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool roboEnd;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool doRoboWelcome;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioClip[] roboWelcomeClips;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int roboWelcomeCounter;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public PhraseAsset[] phraseAssets;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject roboCaption;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public PhraseAsset[] roboTrashTalkPhrases;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public PhraseAsset[] roboWinTalkPhrases;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public PhraseAsset[] roboNeautralTalkPhrases;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public PhraseAsset[] roboGlitchTalkClipsPhrases;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrases;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrases;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform robocaptionSpot;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool roboInsideTV;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PhraseAsset[] roboTrashTalkPhrasesChinese;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhraseAsset[] roboWinTalkPhrasesChinese;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public PhraseAsset[] roboNeautralTalkPhrasesChinese;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesChinese;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesChinese;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesChinese;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public PhraseAsset[] roboTrashTalkPhrasesFrench;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public PhraseAsset[] roboWinTalkPhrasesFrench;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public PhraseAsset[] roboNeautralTalkPhrasesFrench;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesFrench;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesFrench;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesFrench;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public PhraseAsset[] roboTrashTalkPhrasesGerman;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public PhraseAsset[] roboWinTalkPhrasesGerman;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public PhraseAsset[] roboNeautralTalkPhrasesGerman;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesGerman;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesGerman;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesGerman;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public PhraseAsset[] roboTrashTalkPhrasesItalian;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public PhraseAsset[] roboWinTalkPhrasesItalian;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public PhraseAsset[] roboNeautralTalkPhrasesItalian;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesItalian;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesItalian;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesItalian;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public PhraseAsset[] roboTrashTalkPhrasesJapanese;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public PhraseAsset[] roboWinTalkPhrasesJapanese;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public PhraseAsset[] roboNeautralTalkPhrasesJapanese;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesJapanese;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesJapanese;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesJapanese;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public PhraseAsset[] roboTrashTalkPhrasesKorean;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public PhraseAsset[] roboWinTalkPhrasesKorean;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public PhraseAsset[] roboNeautralTalkPhrasesKorean;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesKorean;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesKorean;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesKorean;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public PhraseAsset[] roboTrashTalkPhrasesSpanish;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public PhraseAsset[] roboWinTalkPhrasesSpanish;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public PhraseAsset[] roboNeautralTalkPhrasesSpanish;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public PhraseAsset[] roboGlitchTalkClipsPhrasesSpanish;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public PhraseAsset[] roboCircuitDestroyedTalkClipsPhrasesSpanish;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public PhraseAsset[] roboGlitchAnnoyedClipsPhrasesSpanish;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xD991E4", Offset = "0xD991E4", VA = "0xD991E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xD99AEC", Offset = "0xD99AEC", VA = "0xD99AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xD99C40", Offset = "0xD99C40", VA = "0xD99C40")]
	public void TestStart()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xD99CEC", Offset = "0xD99CEC", VA = "0xD99CEC")]
	public void TalkLightsOnForEnd()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xD99D5C", Offset = "0xD99D5C", VA = "0xD99D5C")]
	public void StartSequence()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xD99E5C", Offset = "0xD99E5C", VA = "0xD99E5C")]
	public void TurnHeadToTalkToCorey(float waitTime)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xD99E88", Offset = "0xD99E88", VA = "0xD99E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2AAC", Offset = "0x7E2AAC")]
	private IEnumerator TurnHeadToTalkToCoreyRoutine(float waitTime2)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xD99F04", Offset = "0xD99F04", VA = "0xD99F04")]
	public void MoveRoboUp()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xD99FB0", Offset = "0xD99FB0", VA = "0xD99FB0")]
	public void MoveRoboUpGlitchSlow()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xD9A064", Offset = "0xD9A064", VA = "0xD9A064")]
	public void MoveRoboUpGlitchFast()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xD9A118", Offset = "0xD9A118", VA = "0xD9A118")]
	public void MoveRoboDown()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xD9A1C4", Offset = "0xD9A1C4", VA = "0xD9A1C4")]
	public void MoveRoboDownSlow()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xD9A274", Offset = "0xD9A274", VA = "0xD9A274")]
	public void RoboTrashTalk(bool nextGame)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xD9A4F8", Offset = "0xD9A4F8", VA = "0xD9A4F8")]
	public void RoboWinTalk(bool nextGame)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xD9A7E0", Offset = "0xD9A7E0", VA = "0xD9A7E0")]
	public void RoboGlitchTalk()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xD9A948", Offset = "0xD9A948", VA = "0xD9A948")]
	public void RoboCircuitDestroyedTalk()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xD9AABC", Offset = "0xD9AABC", VA = "0xD9AABC")]
	public void RaiseUpPedestal()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xD9AB74", Offset = "0xD9AB74", VA = "0xD9AB74")]
	public void PlayAnnoyedGlitchPhrase()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xD9ACCC", Offset = "0xD9ACCC", VA = "0xD9ACCC")]
	public void DisplayCaptionUntilClipEnd()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xD9ACF8", Offset = "0xD9ACF8", VA = "0xD9ACF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2B0C", Offset = "0x7E2B0C")]
	private IEnumerator DisplayCaptionLength()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xD99A18", Offset = "0xD99A18", VA = "0xD99A18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2B6C", Offset = "0x7E2B6C")]
	private IEnumerator MoveFromTo(Transform objectToMove, Vector3 a, Vector3 b, float speed, bool glitchRoutine)
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xD9AD64", Offset = "0xD9AD64", VA = "0xD9AD64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2BCC", Offset = "0x7E2BCC")]
	private IEnumerator MoveNeckTimeRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xD9AA50", Offset = "0xD9AA50", VA = "0xD9AA50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2C2C", Offset = "0x7E2C2C")]
	private IEnumerator RoboCircuitDestroyedTalkTime(float talkTime)
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xD9ADD0", Offset = "0xD9ADD0", VA = "0xD9ADD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2C8C", Offset = "0x7E2C8C")]
	private IEnumerator PostRoboCircuitDestroyedTalkTime()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xD9A468", Offset = "0xD9A468", VA = "0xD9A468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2CEC", Offset = "0x7E2CEC")]
	private IEnumerator RoboTrashTalkTime(float talkTime, bool nextGame)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xD9A750", Offset = "0xD9A750", VA = "0xD9A750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2D4C", Offset = "0x7E2D4C")]
	private IEnumerator RoboWinTalkTime(float talkTime, bool nextGame)
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xD9A8DC", Offset = "0xD9A8DC", VA = "0xD9A8DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2DAC", Offset = "0x7E2DAC")]
	private IEnumerator RoboGlitchTalkTime(float talkTime)
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xD9AE3C", Offset = "0xD9AE3C", VA = "0xD9AE3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2E0C", Offset = "0x7E2E0C")]
	private IEnumerator RoboTalkTime()
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xD99868", Offset = "0xD99868", VA = "0xD99868")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2E6C", Offset = "0x7E2E6C")]
	private IEnumerator RedBlueBlink()
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xD99940", Offset = "0xD99940", VA = "0xD99940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2ECC", Offset = "0x7E2ECC")]
	private IEnumerator WhiteBlink()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xD9AEA8", Offset = "0xD9AEA8", VA = "0xD9AEA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2F2C", Offset = "0x7E2F2C")]
	private IEnumerator StartingRoboIntro()
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xD999AC", Offset = "0xD999AC", VA = "0xD999AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2F8C", Offset = "0x7E2F8C")]
	private IEnumerator RoboStartGameRoutine()
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xD998D4", Offset = "0xD998D4", VA = "0xD998D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E2FEC", Offset = "0x7E2FEC")]
	private IEnumerator GreenBlink()
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xD9AF14", Offset = "0xD9AF14", VA = "0xD9AF14")]
	public RoboManager()
	{
	}
}
[Token(Token = "0x200014D")]
public class RoboRotate : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tempTransform;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xD9AF4C", Offset = "0xD9AF4C", VA = "0xD9AF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xD9AF74", Offset = "0xD9AF74", VA = "0xD9AF74")]
	public void RotateRobotToPlayer()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xD9B018", Offset = "0xD9B018", VA = "0xD9B018")]
	public RoboRotate()
	{
	}
}
[Token(Token = "0x200014E")]
public class RotateDieOnTouch : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD10", Offset = "0x7CAD10")]
	private sealed class <RotateObject>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateDieOnTouch <>4__this;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion start;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion end;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <endTime>5__2;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xCC01D0", Offset = "0xCC01D0", VA = "0xCC01D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0xCC0218", Offset = "0xCC0218", VA = "0xCC0218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xCBFFF8", Offset = "0xCBFFF8", VA = "0xCBFFF8")]
		[DebuggerHidden]
		public <RotateObject>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xCC0024", Offset = "0xCC0024", VA = "0xCC0024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xCC0028", Offset = "0xCC0028", VA = "0xCC0028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xCC01D8", Offset = "0xCC01D8", VA = "0xCC01D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationDuration;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isRotating;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool onSide;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] correctNumber;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int rotateCounter;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DiceLock diceLock;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xD9B2F4", Offset = "0xD9B2F4", VA = "0xD9B2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xD9B2F8", Offset = "0xD9B2F8", VA = "0xD9B2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xD9B2FC", Offset = "0xD9B2FC", VA = "0xD9B2FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xD9B560", Offset = "0xD9B560", VA = "0xD9B560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E34FC", Offset = "0x7E34FC")]
	private IEnumerator RotateObject(Quaternion start, Quaternion end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xD9B624", Offset = "0xD9B624", VA = "0xD9B624")]
	public RotateDieOnTouch()
	{
	}
}
[Token(Token = "0x2000150")]
public class SAndSButtonPress : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD20", Offset = "0x7CAD20")]
	private sealed class <letterLengthWait>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAndSButtonPress <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0xCC036C", Offset = "0xCC036C", VA = "0xCC036C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xCC03B4", Offset = "0xCC03B4", VA = "0xCC03B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xCC0220", Offset = "0xCC0220", VA = "0xCC0220")]
		[DebuggerHidden]
		public <letterLengthWait>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xCC024C", Offset = "0xCC024C", VA = "0xCC024C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xCC0250", Offset = "0xCC0250", VA = "0xCC0250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xCC0374", Offset = "0xCC0374", VA = "0xCC0374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAndSManager sandsManager;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thisLetter;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thisLetterAudio;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handTouching;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject textForScreen;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text actualText;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xD9C3A8", Offset = "0xD9C3A8", VA = "0xD9C3A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xD9D240", Offset = "0xD9D240", VA = "0xD9D240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E35AC", Offset = "0x7E35AC")]
	private IEnumerator letterLengthWait()
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xD9D2AC", Offset = "0xD9D2AC", VA = "0xD9D2AC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xD9D2B0", Offset = "0xD9D2B0", VA = "0xD9D2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xD9D32C", Offset = "0xD9D32C", VA = "0xD9D32C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xD9D330", Offset = "0xD9D330", VA = "0xD9D330")]
	public SAndSButtonPress()
	{
	}
}
[Token(Token = "0x2000152")]
public class SAndSManager : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD30", Offset = "0x7CAD30")]
	private sealed class <PlayTheNoises>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAndSManager <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0xCC0950", Offset = "0xCC0950", VA = "0xCC0950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xCC0998", Offset = "0xCC0998", VA = "0xCC0998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xCC082C", Offset = "0xCC082C", VA = "0xCC082C")]
		[DebuggerHidden]
		public <PlayTheNoises>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xCC0858", Offset = "0xCC0858", VA = "0xCC0858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xCC085C", Offset = "0xCC085C", VA = "0xCC085C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xCC0958", Offset = "0xCC0958", VA = "0xCC0958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD40", Offset = "0x7CAD40")]
	private sealed class <WinSequence>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAndSManager <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0xCC1120", Offset = "0xCC1120", VA = "0xCC1120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xCC1168", Offset = "0xCC1168", VA = "0xCC1168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xCC09A0", Offset = "0xCC09A0", VA = "0xCC09A0")]
		[DebuggerHidden]
		public <WinSequence>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xCC09CC", Offset = "0xCC09CC", VA = "0xCC09CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xCC09D0", Offset = "0xCC09D0", VA = "0xCC09D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xCC1128", Offset = "0xCC1128", VA = "0xCC1128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD50", Offset = "0x7CAD50")]
	private sealed class <ActualWinSequence>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAndSManager <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xCC07DC", Offset = "0xCC07DC", VA = "0xCC07DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xCC0824", Offset = "0xCC0824", VA = "0xCC0824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xCC03BC", Offset = "0xCC03BC", VA = "0xCC03BC")]
		[DebuggerHidden]
		public <ActualWinSequence>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xCC03E8", Offset = "0xCC03E8", VA = "0xCC03E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xCC03EC", Offset = "0xCC03EC", VA = "0xCC03EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xCC07E4", Offset = "0xCC07E4", VA = "0xCC07E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAD60", Offset = "0x7CAD60")]
	private sealed class <waitAndSwap>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAndSManager <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xCC12FC", Offset = "0xCC12FC", VA = "0xCC12FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xCC1344", Offset = "0xCC1344", VA = "0xCC1344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xCC1170", Offset = "0xCC1170", VA = "0xCC1170")]
		[DebuggerHidden]
		public <waitAndSwap>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xCC119C", Offset = "0xCC119C", VA = "0xCC119C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xCC11A0", Offset = "0xCC11A0", VA = "0xCC11A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xCC1304", Offset = "0xCC1304", VA = "0xCC1304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOn;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource gameSpeaker;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip tubularClip;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip radicalClip;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip helpMeClip;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip trapClip;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip nowTryClip;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip youAreRightClip;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip sound1Clip;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip sound2Clip;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip sound3Clip;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip sound4Clip;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip soundClipPicked;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip endSounds;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int soundPicked;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int letterColliderCount;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool gameStart;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int gameWordCount;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool gameWon;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool dontCheckChar;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool canPress;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject buttonMonitor;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject textForScreen;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text actualText;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string endText;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string wordToGuess;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string hiddenWord;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LightManager lightManager;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextSynchronizer textSynchronizer;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public PhraseAsset[] phraseLeters;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PhraseAsset[] phraseSayings;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject sandsCaption;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextSynchronizer textSynchronizerForLetters;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject sandsCaptionForLetters;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xD9D338", Offset = "0xD9D338", VA = "0xD9D338")]
	public void SetUpWord()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xD9D0A4", Offset = "0xD9D0A4", VA = "0xD9D0A4")]
	public void CheckChar(string inputChar)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xD9D4D0", Offset = "0xD9D4D0", VA = "0xD9D4D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E365C", Offset = "0x7E365C")]
	private IEnumerator PlayTheNoises()
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xD9D53C", Offset = "0xD9D53C", VA = "0xD9D53C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E36BC", Offset = "0x7E36BC")]
	private IEnumerator WinSequence()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xD9D5A8", Offset = "0xD9D5A8", VA = "0xD9D5A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E371C", Offset = "0x7E371C")]
	private IEnumerator ActualWinSequence()
	{
		return null;
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xD9D614", Offset = "0xD9D614", VA = "0xD9D614")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xD9D684", Offset = "0xD9D684", VA = "0xD9D684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E377C", Offset = "0x7E377C")]
	private IEnumerator waitAndSwap()
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xD9D6F0", Offset = "0xD9D6F0", VA = "0xD9D6F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xD9D6F4", Offset = "0xD9D6F4", VA = "0xD9D6F4")]
	public SAndSManager()
	{
	}
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAD70", Offset = "0x7CAD70")]
public static class GvrAudio
{
	[Token(Token = "0x2000158")]
	public enum Quality
	{
		[Token(Token = "0x4000809")]
		Stereo,
		[Token(Token = "0x400080A")]
		Low,
		[Token(Token = "0x400080B")]
		High
	}

	[Token(Token = "0x2000159")]
	public enum SpatializerData
	{
		[Token(Token = "0x400080D")]
		Id,
		[Token(Token = "0x400080E")]
		Type,
		[Token(Token = "0x400080F")]
		NumChannels,
		[Token(Token = "0x4000810")]
		ChannelSet,
		[Token(Token = "0x4000811")]
		Gain,
		[Token(Token = "0x4000812")]
		DistanceAttenuation,
		[Token(Token = "0x4000813")]
		MinDistance,
		[Token(Token = "0x4000814")]
		ZeroOutput
	}

	[Token(Token = "0x200015A")]
	public enum SpatializerType
	{
		[Token(Token = "0x4000816")]
		Source,
		[Token(Token = "0x4000817")]
		Soundfield
	}

	[Token(Token = "0x200015B")]
	private struct RoomProperties
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sampleRate;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numChannels;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int framesPerBuffer;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x40007F4")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x40007F5")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x40007F6")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x40007F7")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x40007F8")]
	public const float minGainDb = -24f;

	[Token(Token = "0x40007F9")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x40007FA")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x40007FB")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x40007FC")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x40007FD")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x40007FE")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x40007FF")]
	public const int numFoaChannels = 4;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static Bounds bounds;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static List<GvrAudioRoom> enabledRooms;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool initialized;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Transform listenerTransform;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int occlusionMaskValue;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x4000807")]
	private const string pluginName = "audioplugingvrunity";

	[Token(Token = "0x1700013E")]
	public static int SampleRate
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x143B6D4", Offset = "0x143B6D4", VA = "0x143B6D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700013F")]
	public static int NumChannels
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x143B738", Offset = "0x143B738", VA = "0x143B738")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000140")]
	public static int FramesPerBuffer
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x143B79C", Offset = "0x143B79C", VA = "0x143B79C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x143B800", Offset = "0x143B800", VA = "0x143B800")]
	public static void Initialize(GvrAudioListener listener, Quality quality)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x143BB38", Offset = "0x143BB38", VA = "0x143BB38")]
	public static void Shutdown(GvrAudioListener listener)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x143BCF4", Offset = "0x143BCF4", VA = "0x143BCF4")]
	public static void UpdateAudioListener(float globalGainDb, LayerMask occlusionMask)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x143BE54", Offset = "0x143BE54", VA = "0x143BE54")]
	public static int CreateAudioSoundfield()
	{
		return default(int);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x143BF64", Offset = "0x143BF64", VA = "0x143BF64")]
	public static void UpdateAudioSoundfield(int id, GvrAudioSoundfield soundfield)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x143C0A8", Offset = "0x143C0A8", VA = "0x143C0A8")]
	public static int CreateAudioSource(bool hrtfEnabled)
	{
		return default(int);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x143C1BC", Offset = "0x143C1BC", VA = "0x143C1BC")]
	public static void DestroyAudioSource(int id)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x143C2CC", Offset = "0x143C2CC", VA = "0x143C2CC")]
	public static void UpdateAudioSource(int id, GvrAudioSource source, float currentOcclusion)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x143C574", Offset = "0x143C574", VA = "0x143C574")]
	public static void UpdateAudioRoom(GvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x143CA64", Offset = "0x143CA64", VA = "0x143CA64")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x143BDBC", Offset = "0x143BDBC", VA = "0x143BDBC")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x143CD14", Offset = "0x143CD14", VA = "0x143CD14")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x143CE40", Offset = "0x143CE40", VA = "0x143CE40")]
	public static bool IsListenerInsideRoom(GvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x143D01C", Offset = "0x143D01C", VA = "0x143D01C")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x143C868", Offset = "0x143C868", VA = "0x143C868")]
	private static RoomProperties GetRoomProperties(GvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[PreserveSig]
	[Token(Token = "0x6000827")]
	[Address(RVA = "0x143BDD0", Offset = "0x143BDD0", VA = "0x143BDD0")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x6000828")]
	[Address(RVA = "0x143BEE4", Offset = "0x143BEE4", VA = "0x143BEE4")]
	private static extern int CreateSoundfield(int numChannels);

	[PreserveSig]
	[Token(Token = "0x6000829")]
	[Address(RVA = "0x143C13C", Offset = "0x143C13C", VA = "0x143C13C")]
	private static extern int CreateSoundObject(bool enableHrtf);

	[PreserveSig]
	[Token(Token = "0x600082A")]
	[Address(RVA = "0x143C24C", Offset = "0x143C24C", VA = "0x143C24C")]
	private static extern void DestroySource(int sourceId);

	[PreserveSig]
	[Token(Token = "0x600082B")]
	[Address(RVA = "0x143C018", Offset = "0x143C018", VA = "0x143C018")]
	private static extern void SetSourceBypassRoomEffects(int sourceId, bool bypassRoomEffects);

	[PreserveSig]
	[Token(Token = "0x600082C")]
	[Address(RVA = "0x143C3B4", Offset = "0x143C3B4", VA = "0x143C3B4")]
	private static extern void SetSourceDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x600082D")]
	[Address(RVA = "0x143C44C", Offset = "0x143C44C", VA = "0x143C44C")]
	private static extern void SetSourceListenerDirectivity(int sourceId, float alpha, float order);

	[PreserveSig]
	[Token(Token = "0x600082E")]
	[Address(RVA = "0x143C4E4", Offset = "0x143C4E4", VA = "0x143C4E4")]
	private static extern void SetSourceOcclusionIntensity(int sourceId, float intensity);

	[PreserveSig]
	[Token(Token = "0x600082F")]
	[Address(RVA = "0x143C9E4", Offset = "0x143C9E4", VA = "0x143C9E4")]
	private static extern void SetRoomProperties(IntPtr roomProperties);

	[PreserveSig]
	[Token(Token = "0x6000830")]
	[Address(RVA = "0x143BA90", Offset = "0x143BA90", VA = "0x143BA90")]
	private static extern void Initialize(int quality, int sampleRate, int numChannels, int framesPerBuffer);

	[PreserveSig]
	[Token(Token = "0x6000831")]
	[Address(RVA = "0x143BC84", Offset = "0x143BC84", VA = "0x143BC84")]
	private static extern void Shutdown();
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CADA8", Offset = "0x7CADA8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CADA8", Offset = "0x7CADA8")]
public class GvrAudioListener : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float globalGainDb;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask occlusionMask;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GvrAudio.Quality quality;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x143D460", Offset = "0x143D460", VA = "0x143D460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x143D4C8", Offset = "0x143D4C8", VA = "0x143D4C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x143D53C", Offset = "0x143D53C", VA = "0x143D53C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x143D59C", Offset = "0x143D59C", VA = "0x143D59C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x143D610", Offset = "0x143D610", VA = "0x143D610")]
	public GvrAudioListener()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAE08", Offset = "0x7CAE08")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAE08", Offset = "0x7CAE08")]
public class GvrAudioRoom : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x400083B")]
		Transparent,
		[Token(Token = "0x400083C")]
		AcousticCeilingTiles,
		[Token(Token = "0x400083D")]
		BrickBare,
		[Token(Token = "0x400083E")]
		BrickPainted,
		[Token(Token = "0x400083F")]
		ConcreteBlockCoarse,
		[Token(Token = "0x4000840")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000841")]
		CurtainHeavy,
		[Token(Token = "0x4000842")]
		FiberglassInsulation,
		[Token(Token = "0x4000843")]
		GlassThin,
		[Token(Token = "0x4000844")]
		GlassThick,
		[Token(Token = "0x4000845")]
		Grass,
		[Token(Token = "0x4000846")]
		LinoleumOnConcrete,
		[Token(Token = "0x4000847")]
		Marble,
		[Token(Token = "0x4000848")]
		Metal,
		[Token(Token = "0x4000849")]
		ParquetOnConcrete,
		[Token(Token = "0x400084A")]
		PlasterRough,
		[Token(Token = "0x400084B")]
		PlasterSmooth,
		[Token(Token = "0x400084C")]
		PlywoodPanel,
		[Token(Token = "0x400084D")]
		PolishedConcreteOrTile,
		[Token(Token = "0x400084E")]
		Sheetrock,
		[Token(Token = "0x400084F")]
		WaterOrIceSurface,
		[Token(Token = "0x4000850")]
		WoodCeiling,
		[Token(Token = "0x4000851")]
		WoodPanel
	}

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x143D648", Offset = "0x143D648", VA = "0x143D648")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x143D64C", Offset = "0x143D64C", VA = "0x143D64C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x143D6B8", Offset = "0x143D6B8", VA = "0x143D6B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x143D71C", Offset = "0x143D71C", VA = "0x143D71C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x143D788", Offset = "0x143D788", VA = "0x143D788")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x143D810", Offset = "0x143D810", VA = "0x143D810")]
	public GvrAudioRoom()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAE68", Offset = "0x7CAE68")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAE68", Offset = "0x7CAE68")]
public class GvrAudioSoundfield : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gainDb;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnAwake;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip soundfieldClip0102;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip soundfieldClip0304;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool soundfieldLoop;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool soundfieldMute;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEB70", Offset = "0x7CEB70")]
	private float soundfieldPitch;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEBB0", Offset = "0x7CEBB0")]
	private int soundfieldPriority;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEBF4", Offset = "0x7CEBF4")]
	private float soundfieldSpatialBlend;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEC34", Offset = "0x7CEC34")]
	private float soundfieldDopplerLevel;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEC74", Offset = "0x7CEC74")]
	private float soundfieldVolume;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioRolloffMode soundfieldRolloffMode;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float soundfieldMaxDistance;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float soundfieldMinDistance;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int id;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPaused;

	[Token(Token = "0x17000141")]
	public AudioClip clip0102
	{
		[Token(Token = "0x600083E")]
		[Address(RVA = "0x143D864", Offset = "0x143D864", VA = "0x143D864")]
		get
		{
			return null;
		}
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x143D86C", Offset = "0x143D86C", VA = "0x143D86C")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public AudioClip clip0304
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x143D8B8", Offset = "0x143D8B8", VA = "0x143D8B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x143D8C0", Offset = "0x143D8C0", VA = "0x143D8C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public bool isPlaying
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x143D910", Offset = "0x143D910", VA = "0x143D910")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000144")]
	public bool loop
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x143D95C", Offset = "0x143D95C", VA = "0x143D95C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x143D964", Offset = "0x143D964", VA = "0x143D964")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public bool mute
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x143D9DC", Offset = "0x143D9DC", VA = "0x143D9DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x143D9E4", Offset = "0x143D9E4", VA = "0x143D9E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public float pitch
	{
		[Token(Token = "0x6000847")]
		[Address(RVA = "0x143DA5C", Offset = "0x143DA5C", VA = "0x143DA5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x143DA64", Offset = "0x143DA64", VA = "0x143DA64")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public int priority
	{
		[Token(Token = "0x6000849")]
		[Address(RVA = "0x143DAD8", Offset = "0x143DAD8", VA = "0x143DAD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x143DAE0", Offset = "0x143DAE0", VA = "0x143DAE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public float spatialBlend
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x143DB54", Offset = "0x143DB54", VA = "0x143DB54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600084C")]
		[Address(RVA = "0x143DB5C", Offset = "0x143DB5C", VA = "0x143DB5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public float dopplerLevel
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0x143DBD0", Offset = "0x143DBD0", VA = "0x143DBD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600084E")]
		[Address(RVA = "0x143DBD8", Offset = "0x143DBD8", VA = "0x143DBD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public float time
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0x143DC4C", Offset = "0x143DC4C", VA = "0x143DC4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000850")]
		[Address(RVA = "0x143DC98", Offset = "0x143DC98", VA = "0x143DC98")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public int timeSamples
	{
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x143DD14", Offset = "0x143DD14", VA = "0x143DD14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x143DD60", Offset = "0x143DD60", VA = "0x143DD60")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public float volume
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0x143DDDC", Offset = "0x143DDDC", VA = "0x143DDDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x143DDE4", Offset = "0x143DDE4", VA = "0x143DDE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x143DE58", Offset = "0x143DE58", VA = "0x143DE58")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x143DE60", Offset = "0x143DE60", VA = "0x143DE60")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public float maxDistance
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x143DF38", Offset = "0x143DF38", VA = "0x143DF38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x143DF40", Offset = "0x143DF40", VA = "0x143DF40")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public float minDistance
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x143DFD4", Offset = "0x143DFD4", VA = "0x143DFD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x143DFDC", Offset = "0x143DFDC", VA = "0x143DFDC")]
		set
		{
		}
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x143E064", Offset = "0x143E064", VA = "0x143E064")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x143E558", Offset = "0x143E558", VA = "0x143E558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x143E724", Offset = "0x143E724", VA = "0x143E724")]
	private void Start()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x143E768", Offset = "0x143E768", VA = "0x143E768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x143E854", Offset = "0x143E854", VA = "0x143E854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x143E91C", Offset = "0x143E91C", VA = "0x143E91C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x143EA0C", Offset = "0x143EA0C", VA = "0x143EA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x143E928", Offset = "0x143E928", VA = "0x143E928")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x143E6FC", Offset = "0x143E6FC", VA = "0x143E6FC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x143EC80", Offset = "0x143EC80", VA = "0x143EC80")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x143EB80", Offset = "0x143EB80", VA = "0x143EB80")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x143ECBC", Offset = "0x143ECBC", VA = "0x143ECBC")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x143ED38", Offset = "0x143ED38", VA = "0x143ED38")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x143E7DC", Offset = "0x143E7DC", VA = "0x143E7DC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x143E99C", Offset = "0x143E99C", VA = "0x143E99C")]
	public void UnPause()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x143E600", Offset = "0x143E600", VA = "0x143E600")]
	private bool InitializeSoundfield()
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x143EDB4", Offset = "0x143EDB4", VA = "0x143EDB4")]
	private void ShutdownSoundfield()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x143EE74", Offset = "0x143EE74", VA = "0x143EE74")]
	private void InitializeChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x143EFA0", Offset = "0x143EFA0", VA = "0x143EFA0")]
	private void ShutdownChannelSet(AudioSource source, int channelSet)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x143EFF8", Offset = "0x143EFF8", VA = "0x143EFF8")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x143E4B4", Offset = "0x143E4B4", VA = "0x143E4B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x143EFFC", Offset = "0x143EFFC", VA = "0x143EFFC")]
	public GvrAudioSoundfield()
	{
	}
}
[Token(Token = "0x2000160")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAEC8", Offset = "0x7CAEC8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAEC8", Offset = "0x7CAEC8")]
public class GvrAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float directivityAlpha;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float directivitySharpness;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gainDb;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool occlusionEnabled;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool playOnAwake;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip sourceClip;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool sourceLoop;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool sourceMute;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CED14", Offset = "0x7CED14")]
	private float sourcePitch;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CED54", Offset = "0x7CED54")]
	[SerializeField]
	private int sourcePriority;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CED98", Offset = "0x7CED98")]
	[SerializeField]
	private float sourceSpatialBlend;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEDD8", Offset = "0x7CEDD8")]
	[SerializeField]
	private float sourceDopplerLevel;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEE18", Offset = "0x7CEE18")]
	[SerializeField]
	private float sourceSpread;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEE5C", Offset = "0x7CEE5C")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private AudioRolloffMode sourceRolloffMode;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float sourceMaxDistance;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float sourceMinDistance;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool hrtfEnabled;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int id;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentOcclusion;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPaused;

	[Token(Token = "0x17000150")]
	public AudioClip clip
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x143F038", Offset = "0x143F038", VA = "0x143F038")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x143F040", Offset = "0x143F040", VA = "0x143F040")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public bool isPlaying
	{
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x143F0E8", Offset = "0x143F0E8", VA = "0x143F0E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000152")]
	public bool loop
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x143F17C", Offset = "0x143F17C", VA = "0x143F17C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x143F184", Offset = "0x143F184", VA = "0x143F184")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public bool mute
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x143F230", Offset = "0x143F230", VA = "0x143F230")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x143F238", Offset = "0x143F238", VA = "0x143F238")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public float pitch
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x143F2E4", Offset = "0x143F2E4", VA = "0x143F2E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x143F2EC", Offset = "0x143F2EC", VA = "0x143F2EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public int priority
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x143F394", Offset = "0x143F394", VA = "0x143F394")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x143F39C", Offset = "0x143F39C", VA = "0x143F39C")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float spatialBlend
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x143F444", Offset = "0x143F444", VA = "0x143F444")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x143F44C", Offset = "0x143F44C", VA = "0x143F44C")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public float dopplerLevel
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x143F4F4", Offset = "0x143F4F4", VA = "0x143F4F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x143F4FC", Offset = "0x143F4FC", VA = "0x143F4FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public float spread
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x143F5A4", Offset = "0x143F5A4", VA = "0x143F5A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x143F5AC", Offset = "0x143F5AC", VA = "0x143F5AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public float time
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x143F654", Offset = "0x143F654", VA = "0x143F654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x143F6E8", Offset = "0x143F6E8", VA = "0x143F6E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public int timeSamples
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x143F78C", Offset = "0x143F78C", VA = "0x143F78C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x143F820", Offset = "0x143F820", VA = "0x143F820")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public float volume
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x143F8C4", Offset = "0x143F8C4", VA = "0x143F8C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x143F8CC", Offset = "0x143F8CC", VA = "0x143F8CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public AudioRolloffMode rolloffMode
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x143F974", Offset = "0x143F974", VA = "0x143F974")]
		get
		{
			return default(AudioRolloffMode);
		}
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x143F97C", Offset = "0x143F97C", VA = "0x143F97C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public float maxDistance
	{
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x143FA60", Offset = "0x143FA60", VA = "0x143FA60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600088B")]
		[Address(RVA = "0x143FA68", Offset = "0x143FA68", VA = "0x143FA68")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public float minDistance
	{
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x143FB34", Offset = "0x143FB34", VA = "0x143FB34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x143FB3C", Offset = "0x143FB3C", VA = "0x143FB3C")]
		set
		{
		}
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x143FBFC", Offset = "0x143FBFC", VA = "0x143FBFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x143FF08", Offset = "0x143FF08", VA = "0x143FF08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x14401CC", Offset = "0x14401CC", VA = "0x14401CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1440208", Offset = "0x1440208", VA = "0x1440208")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x14402D4", Offset = "0x14402D4", VA = "0x14402D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x144033C", Offset = "0x144033C", VA = "0x144033C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x144046C", Offset = "0x144046C", VA = "0x144046C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x14405CC", Offset = "0x14405CC", VA = "0x14405CC")]
	public void GetOutputData(float[] samples, int channel)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1440678", Offset = "0x1440678", VA = "0x1440678")]
	public void GetSpectrumData(float[] samples, int channel, FFTWindow window)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1440348", Offset = "0x1440348", VA = "0x1440348")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x14400E0", Offset = "0x14400E0", VA = "0x14400E0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1440738", Offset = "0x1440738", VA = "0x1440738")]
	public void PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1440838", Offset = "0x1440838", VA = "0x1440838")]
	public void PlayOneShot(AudioClip clip)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1440840", Offset = "0x1440840", VA = "0x1440840")]
	public void PlayOneShot(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1440954", Offset = "0x1440954", VA = "0x1440954")]
	public void PlayScheduled(double time)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1440A54", Offset = "0x1440A54", VA = "0x1440A54")]
	public void SetScheduledEndTime(double time)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1440AF8", Offset = "0x1440AF8", VA = "0x1440AF8")]
	public void SetScheduledStartTime(double time)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x144023C", Offset = "0x144023C", VA = "0x144023C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x14403E0", Offset = "0x14403E0", VA = "0x14403E0")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x143FF6C", Offset = "0x143FF6C", VA = "0x143FF6C")]
	private bool InitializeSource()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1440B9C", Offset = "0x1440B9C", VA = "0x1440B9C")]
	private void ShutdownSource()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1440C5C", Offset = "0x1440C5C", VA = "0x1440C5C")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x143FE64", Offset = "0x143FE64", VA = "0x143FE64")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1440C60", Offset = "0x1440C60", VA = "0x1440C60")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1440DAC", Offset = "0x1440DAC", VA = "0x1440DAC")]
	private void DrawDirectivityGizmo(Transform target, float alpha, float sharpness, int resolution)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1441158", Offset = "0x1441158", VA = "0x1441158")]
	public GvrAudioSource()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAF28", Offset = "0x7CAF28")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAF28", Offset = "0x7CAF28")]
public class GvrController : GvrControllerInput
{
	[Token(Token = "0x1700015F")]
	public new static GvrConnectionState State
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1442A5C", Offset = "0x1442A5C", VA = "0x1442A5C")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000160")]
	public new static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1442B28", Offset = "0x1442B28", VA = "0x1442B28")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000161")]
	public new static Quaternion Orientation
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1442BF4", Offset = "0x1442BF4", VA = "0x1442BF4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000162")]
	public new static Vector3 Gyro
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1442BF8", Offset = "0x1442BF8", VA = "0x1442BF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000163")]
	public new static Vector3 Accel
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1442BFC", Offset = "0x1442BFC", VA = "0x1442BFC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000164")]
	public new static bool IsTouching
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1442CD0", Offset = "0x1442CD0", VA = "0x1442CD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000165")]
	public new static bool TouchDown
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1442CD4", Offset = "0x1442CD4", VA = "0x1442CD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000166")]
	public new static bool TouchUp
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1442CD8", Offset = "0x1442CD8", VA = "0x1442CD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	public new static Vector2 TouchPos
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1442CDC", Offset = "0x1442CDC", VA = "0x1442CDC")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000168")]
	public new static bool Recentered
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1442CE0", Offset = "0x1442CE0", VA = "0x1442CE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public new static bool ClickButton
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1442CE4", Offset = "0x1442CE4", VA = "0x1442CE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public new static bool ClickButtonDown
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1442CE8", Offset = "0x1442CE8", VA = "0x1442CE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016B")]
	public new static bool ClickButtonUp
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1442CEC", Offset = "0x1442CEC", VA = "0x1442CEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016C")]
	public new static bool AppButton
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1442CF0", Offset = "0x1442CF0", VA = "0x1442CF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016D")]
	public new static bool AppButtonDown
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1442DC4", Offset = "0x1442DC4", VA = "0x1442DC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016E")]
	public new static bool AppButtonUp
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1442E98", Offset = "0x1442E98", VA = "0x1442E98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016F")]
	public new static bool HomeButtonDown
	{
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1442F6C", Offset = "0x1442F6C", VA = "0x1442F6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public new static bool HomeButtonState
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1443040", Offset = "0x1443040", VA = "0x1443040")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public new static string ErrorDetails
	{
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1443114", Offset = "0x1443114", VA = "0x1443114")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public new static IntPtr StatePtr
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1443214", Offset = "0x1443214", VA = "0x1443214")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000173")]
	public new static bool IsCharging
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x14432EC", Offset = "0x14432EC", VA = "0x14432EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public new static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x14433C0", Offset = "0x14433C0", VA = "0x14433C0")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x144348C", Offset = "0x144348C", VA = "0x144348C")]
	public GvrController()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAF88", Offset = "0x7CAF88")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAF88", Offset = "0x7CAF88")]
public class GvrControllerVisualManager : GvrTrackedController
{
	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x14453F8", Offset = "0x14453F8", VA = "0x14453F8")]
	public GvrControllerVisualManager()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CAFE8", Offset = "0x7CAFE8")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CAFE8", Offset = "0x7CAFE8")]
public class GvrPointerManager : MonoBehaviour
{
	[Token(Token = "0x17000175")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x12E1050", Offset = "0x12E1050", VA = "0x12E1050")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x12E1058", Offset = "0x12E1058", VA = "0x12E1058")]
		set
		{
		}
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x12E1060", Offset = "0x12E1060", VA = "0x12E1060")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x12E1068", Offset = "0x12E1068", VA = "0x12E1068")]
	public GvrPointerManager()
	{
	}
}
[Token(Token = "0x2000164")]
public class GvrReticlePointer : GvrBasePointer
{
	[Token(Token = "0x400087E")]
	public const float RETICLE_MIN_INNER_ANGLE = 0f;

	[Token(Token = "0x400087F")]
	public const float RETICLE_MIN_OUTER_ANGLE = 0.5f;

	[Token(Token = "0x4000880")]
	public const float RETICLE_GROWTH_ANGLE = 1.5f;

	[Token(Token = "0x4000881")]
	public const float RETICLE_DISTANCE_MIN = 0.45f;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxReticleDistance;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int reticleSegments;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEEEC", Offset = "0x7CEEEC")]
	public int reticleSortingOrder;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF0C", Offset = "0x7CEF0C")]
	private Material <MaterialComp>k__BackingField;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF1C", Offset = "0x7CEF1C")]
	private float <ReticleInnerAngle>k__BackingField;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF2C", Offset = "0x7CEF2C")]
	private float <ReticleOuterAngle>k__BackingField;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF3C", Offset = "0x7CEF3C")]
	private float <ReticleDistanceInMeters>k__BackingField;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF4C", Offset = "0x7CEF4C")]
	private float <ReticleInnerDiameter>k__BackingField;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF5C", Offset = "0x7CEF5C")]
	private float <ReticleOuterDiameter>k__BackingField;

	[Token(Token = "0x17000176")]
	public Material MaterialComp
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x12E2B60", Offset = "0x12E2B60", VA = "0x12E2B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E391C", Offset = "0x7E391C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x12E2B68", Offset = "0x12E2B68", VA = "0x12E2B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E392C", Offset = "0x7E392C")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public float ReticleInnerAngle
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x12E2B70", Offset = "0x12E2B70", VA = "0x12E2B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E393C", Offset = "0x7E393C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x12E2B78", Offset = "0x12E2B78", VA = "0x12E2B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E394C", Offset = "0x7E394C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public float ReticleOuterAngle
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x12E2B80", Offset = "0x12E2B80", VA = "0x12E2B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E395C", Offset = "0x7E395C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x12E2B88", Offset = "0x12E2B88", VA = "0x12E2B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E396C", Offset = "0x7E396C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public float ReticleDistanceInMeters
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x12E2B90", Offset = "0x12E2B90", VA = "0x12E2B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E397C", Offset = "0x7E397C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x12E2B98", Offset = "0x12E2B98", VA = "0x12E2B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E398C", Offset = "0x7E398C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public float ReticleInnerDiameter
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x12E2BA0", Offset = "0x12E2BA0", VA = "0x12E2BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E399C", Offset = "0x7E399C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x12E2BA8", Offset = "0x12E2BA8", VA = "0x12E2BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39AC", Offset = "0x7E39AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public float ReticleOuterDiameter
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x12E2BB0", Offset = "0x12E2BB0", VA = "0x12E2BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39BC", Offset = "0x7E39BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x12E2BB8", Offset = "0x12E2BB8", VA = "0x12E2BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39CC", Offset = "0x7E39CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x12E2BC0", Offset = "0x12E2BC0", VA = "0x12E2BC0", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x12E2BC8", Offset = "0x12E2BC8", VA = "0x12E2BC8", Slot = "16")]
	public override void OnPointerEnter(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x12E2D40", Offset = "0x12E2D40", VA = "0x12E2D40", Slot = "17")]
	public override void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x12E2D50", Offset = "0x12E2D50", VA = "0x12E2D50", Slot = "18")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12E2D68", Offset = "0x12E2D68", VA = "0x12E2D68", Slot = "19")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x12E2D6C", Offset = "0x12E2D6C", VA = "0x12E2D6C", Slot = "20")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x12E2D70", Offset = "0x12E2D70", VA = "0x12E2D70", Slot = "21")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x12E2D84", Offset = "0x12E2D84", VA = "0x12E2D84")]
	public void UpdateDiameters()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x12E2F1C", Offset = "0x12E2F1C", VA = "0x12E2F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x12E2F2C", Offset = "0x12E2F2C", VA = "0x12E2F2C", Slot = "22")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x12E3288", Offset = "0x12E3288", VA = "0x12E3288")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x12E2BD8", Offset = "0x12E2BD8", VA = "0x12E2BD8")]
	private bool SetPointerTarget(Vector3 target, bool interactive)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x12E2FB4", Offset = "0x12E2FB4", VA = "0x12E2FB4")]
	private void CreateReticleVertices()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x12E328C", Offset = "0x12E328C", VA = "0x12E328C")]
	public GvrReticlePointer()
	{
	}
}
[Token(Token = "0x2000165")]
public class GvrArmModel : GvrBaseArmModel
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 elbowRestPosition;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 wristRestPosition;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 controllerRestPosition;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 armExtensionOffset;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEF6C", Offset = "0x7CEF6C")]
	public float elbowBendRatio;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEF84", Offset = "0x7CEF84")]
	public float fadeControllerOffset;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEFA0", Offset = "0x7CEFA0")]
	public float fadeDistanceFromHeadForward;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEFBC", Offset = "0x7CEFBC")]
	public float fadeDistanceFromHeadSide;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEFD8", Offset = "0x7CEFD8")]
	public float tooltipMinDistanceFromFace;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CEFF8", Offset = "0x7CEFF8")]
	public int tooltipMaxAngleFromCamera;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isLockedToNeck;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 neckPosition;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 elbowPosition;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Quaternion elbowRotation;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 wristPosition;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Quaternion wristRotation;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 controllerPosition;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Quaternion controllerRotation;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float preferredAlpha;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected float tooltipAlphaValue;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 handedMultiplier;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Vector3 torsoDirection;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected Quaternion torsoRotation;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

	[Token(Token = "0x40008A7")]
	public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

	[Token(Token = "0x40008A8")]
	protected const float EXTENSION_WEIGHT = 0.4f;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly Vector3 SHOULDER_POSITION;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly Vector3 NECK_OFFSET;

	[Token(Token = "0x40008AB")]
	protected const float DELTA_ALPHA = 4f;

	[Token(Token = "0x40008AC")]
	protected const float MIN_EXTENSION_ANGLE = 7f;

	[Token(Token = "0x40008AD")]
	protected const float MAX_EXTENSION_ANGLE = 60f;

	[Token(Token = "0x1700017D")]
	public override Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x143A324", Offset = "0x143A324", VA = "0x143A324", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700017E")]
	public override Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x143A330", Offset = "0x143A330", VA = "0x143A330", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700017F")]
	public override float PreferredAlpha
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x143A33C", Offset = "0x143A33C", VA = "0x143A33C", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000180")]
	public override float TooltipAlphaValue
	{
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x143A344", Offset = "0x143A344", VA = "0x143A344", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000181")]
	public Vector3 NeckPosition
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x143A34C", Offset = "0x143A34C", VA = "0x143A34C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000182")]
	public Vector3 ShoulderPosition
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x143A358", Offset = "0x143A358", VA = "0x143A358")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000183")]
	public Quaternion ShoulderRotation
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x143A42C", Offset = "0x143A42C", VA = "0x143A42C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000184")]
	public Vector3 ElbowPosition
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x143A438", Offset = "0x143A438", VA = "0x143A438")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000185")]
	public Quaternion ElbowRotation
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x143A444", Offset = "0x143A444", VA = "0x143A444")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000186")]
	public Vector3 WristPosition
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x143A450", Offset = "0x143A450", VA = "0x143A450")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000187")]
	public Quaternion WristRotation
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x143A45C", Offset = "0x143A45C", VA = "0x143A45C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x143A468", Offset = "0x143A468", VA = "0x143A468", Slot = "8")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x143A5BC", Offset = "0x143A5BC", VA = "0x143A5BC", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x143A6EC", Offset = "0x143A6EC", VA = "0x143A6EC", Slot = "10")]
	protected virtual void OnControllerInputUpdated()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x143A760", Offset = "0x143A760", VA = "0x143A760", Slot = "11")]
	protected virtual void UpdateHandedness()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x143A7B4", Offset = "0x143A7B4", VA = "0x143A7B4", Slot = "12")]
	protected virtual void UpdateTorsoDirection(bool forceImmediate)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x143AA54", Offset = "0x143AA54", VA = "0x143AA54", Slot = "13")]
	protected virtual void UpdateNeckPosition()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x143AAB0", Offset = "0x143AAB0", VA = "0x143AAB0", Slot = "14")]
	protected virtual void ApplyArmModel()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x143ACEC", Offset = "0x143ACEC", VA = "0x143ACEC", Slot = "15")]
	protected virtual void SetUntransformedJointPositions()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x143AD40", Offset = "0x143AD40", VA = "0x143AD40", Slot = "16")]
	protected virtual float CalculateExtensionRatio(float xAngle)
	{
		return default(float);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x143AD64", Offset = "0x143AD64", VA = "0x143AD64", Slot = "17")]
	protected virtual void ApplyExtensionOffset(float extensionRatio)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x143ADA0", Offset = "0x143ADA0", VA = "0x143ADA0", Slot = "18")]
	protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x143AEB8", Offset = "0x143AEB8", VA = "0x143AEB8", Slot = "19")]
	protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x143AFC8", Offset = "0x143AFC8", VA = "0x143AFC8", Slot = "20")]
	protected virtual void ApplyRotationToJoints()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x143B07C", Offset = "0x143B07C", VA = "0x143B07C", Slot = "21")]
	protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x143B184", Offset = "0x143B184", VA = "0x143B184", Slot = "22")]
	protected virtual void UpdateTransparency()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x143ABD4", Offset = "0x143ABD4", VA = "0x143ABD4")]
	protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x143B518", Offset = "0x143B518", VA = "0x143B518")]
	public GvrArmModel()
	{
	}
}
[Token(Token = "0x2000166")]
public abstract class GvrBaseArmModel : MonoBehaviour
{
	[Token(Token = "0x17000188")]
	public abstract Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x60008FB")]
		get;
	}

	[Token(Token = "0x17000189")]
	public abstract Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x60008FC")]
		get;
	}

	[Token(Token = "0x1700018A")]
	public abstract float PreferredAlpha
	{
		[Token(Token = "0x60008FD")]
		get;
	}

	[Token(Token = "0x1700018B")]
	public abstract float TooltipAlphaValue
	{
		[Token(Token = "0x60008FE")]
		get;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x143B5F4", Offset = "0x143B5F4", VA = "0x143B5F4")]
	protected GvrBaseArmModel()
	{
	}
}
[Token(Token = "0x2000167")]
public interface IGvrArmModelReceiver
{
	[Token(Token = "0x1700018C")]
	GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000900")]
		get;
		[Token(Token = "0x6000901")]
		set;
	}
}
[Token(Token = "0x2000168")]
public enum GvrConnectionState
{
	[Token(Token = "0x40008AF")]
	Error = -1,
	[Token(Token = "0x40008B0")]
	Disconnected,
	[Token(Token = "0x40008B1")]
	Scanning,
	[Token(Token = "0x40008B2")]
	Connecting,
	[Token(Token = "0x40008B3")]
	Connected
}
[Token(Token = "0x2000169")]
public enum GvrControllerApiStatus
{
	[Token(Token = "0x40008B5")]
	Error = -1,
	[Token(Token = "0x40008B6")]
	Ok,
	[Token(Token = "0x40008B7")]
	Unsupported,
	[Token(Token = "0x40008B8")]
	NotAuthorized,
	[Token(Token = "0x40008B9")]
	Unavailable,
	[Token(Token = "0x40008BA")]
	ApiServiceObsolete,
	[Token(Token = "0x40008BB")]
	ApiClientObsolete,
	[Token(Token = "0x40008BC")]
	ApiMalfunction
}
[Token(Token = "0x200016A")]
public enum GvrControllerBatteryLevel
{
	[Token(Token = "0x40008BE")]
	Error = -1,
	[Token(Token = "0x40008BF")]
	Unknown,
	[Token(Token = "0x40008C0")]
	CriticalLow,
	[Token(Token = "0x40008C1")]
	Low,
	[Token(Token = "0x40008C2")]
	Medium,
	[Token(Token = "0x40008C3")]
	AlmostFull,
	[Token(Token = "0x40008C4")]
	Full
}
[Token(Token = "0x200016B")]
public class GvrControllerInput : MonoBehaviour
{
	[Token(Token = "0x200016C")]
	public delegate void OnStateChangedEvent(GvrConnectionState state, GvrConnectionState oldState);

	[Token(Token = "0x200016D")]
	public enum EmulatorConnectionMode
	{
		[Token(Token = "0x40008CF")]
		OFF,
		[Token(Token = "0x40008D0")]
		USB,
		[Token(Token = "0x40008D1")]
		WIFI
	}

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrControllerInput instance;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IControllerProvider controllerProvider;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerState controllerState;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 touchPosCentered;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastUpdatedFrameCount;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "GvrInfo", RVA = "0x7CF044", Offset = "0x7CF044")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF044", Offset = "0x7CF044")]
	public EmulatorConnectionMode emulatorConnectionMode;

	[Token(Token = "0x1700018D")]
	public static GvrConnectionState State
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1442A60", Offset = "0x1442A60", VA = "0x1442A60")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x1700018E")]
	public static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1442B2C", Offset = "0x1442B2C", VA = "0x1442B2C")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x1700018F")]
	public static bool SupportsBatteryStatus
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x14439A8", Offset = "0x14439A8", VA = "0x14439A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public static Quaternion Orientation
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x143B448", Offset = "0x143B448", VA = "0x143B448")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000191")]
	public static Vector3 Gyro
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x143A984", Offset = "0x143A984", VA = "0x143A984")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000192")]
	public static Vector3 Accel
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1442C00", Offset = "0x1442C00", VA = "0x1442C00")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000193")]
	public static bool IsTouching
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1441778", Offset = "0x1441778", VA = "0x1441778")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public static bool TouchDown
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x14416A4", Offset = "0x14416A4", VA = "0x14416A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000195")]
	public static bool TouchUp
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x144184C", Offset = "0x144184C", VA = "0x144184C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000196")]
	public static Vector2 TouchPos
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1441920", Offset = "0x1441920", VA = "0x1441920")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000197")]
	public static Vector2 TouchPosCentered
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1443AE4", Offset = "0x1443AE4", VA = "0x1443AE4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000198")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E8928", Offset = "0x7E8928")]
	public static bool Recentering
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1443BA8", Offset = "0x1443BA8", VA = "0x1443BA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000199")]
	public static bool Recentered
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x143A8B4", Offset = "0x143A8B4", VA = "0x143A8B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019A")]
	public static bool ClickButton
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x14414D4", Offset = "0x14414D4", VA = "0x14414D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019B")]
	public static bool ClickButtonDown
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x14413D8", Offset = "0x14413D8", VA = "0x14413D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019C")]
	public static bool ClickButtonUp
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0x14415D0", Offset = "0x14415D0", VA = "0x14415D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public static bool AppButton
	{
		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1442CF4", Offset = "0x1442CF4", VA = "0x1442CF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	public static bool AppButtonDown
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1442DC8", Offset = "0x1442DC8", VA = "0x1442DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	public static bool AppButtonUp
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1442E9C", Offset = "0x1442E9C", VA = "0x1442E9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public static bool HomeButtonDown
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1442F70", Offset = "0x1442F70", VA = "0x1442F70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A1")]
	public static bool HomeButtonState
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x1443044", Offset = "0x1443044", VA = "0x1443044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A2")]
	public static string ErrorDetails
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1443118", Offset = "0x1443118", VA = "0x1443118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public static IntPtr StatePtr
	{
		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1443218", Offset = "0x1443218", VA = "0x1443218")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001A4")]
	public static bool IsCharging
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x14432F0", Offset = "0x14432F0", VA = "0x14432F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A5")]
	public static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x14433C4", Offset = "0x14433C4", VA = "0x14433C4")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action OnControllerInputUpdated
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x143A4FC", Offset = "0x143A4FC", VA = "0x143A4FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39DC", Offset = "0x7E39DC")]
		add
		{
		}
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x143A62C", Offset = "0x143A62C", VA = "0x143A62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39EC", Offset = "0x7E39EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action OnPostControllerInputUpdated
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x144350C", Offset = "0x144350C", VA = "0x144350C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E39FC", Offset = "0x7E39FC")]
		add
		{
		}
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x14435CC", Offset = "0x14435CC", VA = "0x14435CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A0C", Offset = "0x7E3A0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x144368C", Offset = "0x144368C", VA = "0x144368C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A1C", Offset = "0x7E3A1C")]
		add
		{
		}
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x144374C", Offset = "0x144374C", VA = "0x144374C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A2C", Offset = "0x7E3A2C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1443BB0", Offset = "0x1443BB0", VA = "0x1443BB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x144380C", Offset = "0x144380C", VA = "0x144380C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1443E08", Offset = "0x1443E08", VA = "0x1443E08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1443E54", Offset = "0x1443E54", VA = "0x1443E54")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1443CEC", Offset = "0x1443CEC", VA = "0x1443CEC")]
	private void UpdateTouchPosCentered()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1443490", Offset = "0x1443490", VA = "0x1443490")]
	public GvrControllerInput()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB048", Offset = "0x7CB048")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB048", Offset = "0x7CB048")]
public class GvrControllerReticleVisual : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016F")]
	public struct FaceCameraData
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alongXAxis;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool alongYAxis;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool alongZAxis;

		[Token(Token = "0x170001A8")]
		public bool IsAnyAxisOff
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xDB2254", Offset = "0xDB2254", VA = "0xDB2254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xDB227C", Offset = "0xDB227C", VA = "0xDB227C")]
		public FaceCameraData(bool startEnabled)
		{
		}
	}

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF0A8", Offset = "0x7CF0A8")]
	public bool isSizeBasedOnCameraDistance;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF0E0", Offset = "0x7CF0E0")]
	public float sizeMeters;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF118", Offset = "0x7CF118")]
	public FaceCameraData doesReticleFaceCamera;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF150", Offset = "0x7CF150")]
	public int sortingOrder;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF170", Offset = "0x7CF170")]
	private float <ReticleMeshSizeMeters>k__BackingField;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF180", Offset = "0x7CF180")]
	private float <ReticleMeshSizeRatio>k__BackingField;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 preRenderLocalScale;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion preRenderLocalRotation;

	[Token(Token = "0x170001A6")]
	public float ReticleMeshSizeMeters
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1443F6C", Offset = "0x1443F6C", VA = "0x1443F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A3C", Offset = "0x7E3A3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1443F74", Offset = "0x1443F74", VA = "0x1443F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A4C", Offset = "0x7E3A4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public float ReticleMeshSizeRatio
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1443F7C", Offset = "0x1443F7C", VA = "0x1443F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A5C", Offset = "0x7E3A5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1443F84", Offset = "0x1443F84", VA = "0x1443F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A6C", Offset = "0x7E3A6C")]
		private set
		{
		}
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1443F8C", Offset = "0x1443F8C", VA = "0x1443F8C")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1444100", Offset = "0x1444100", VA = "0x1444100", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1444178", Offset = "0x1444178", VA = "0x1444178", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x144417C", Offset = "0x144417C", VA = "0x144417C", Slot = "6")]
	protected virtual void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1444208", Offset = "0x1444208", VA = "0x1444208", Slot = "7")]
	protected virtual void OnRenderObject()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1444260", Offset = "0x1444260", VA = "0x1444260", Slot = "8")]
	protected virtual void UpdateReticleSize(Camera camera)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x144439C", Offset = "0x144439C", VA = "0x144439C", Slot = "9")]
	protected virtual void UpdateReticleOrientation(Camera camera)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1444548", Offset = "0x1444548", VA = "0x1444548", Slot = "10")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1444590", Offset = "0x1444590", VA = "0x1444590")]
	public GvrControllerReticleVisual()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB0DC", Offset = "0x7CB0DC")]
public class GvrControllerVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Serializable]
	[Token(Token = "0x2000171")]
	public struct ControllerDisplayState
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool batteryCharging;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool clickButton;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool appButton;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool homeButton;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool touching;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchPos;
	}

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] attachmentPrefabs;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color touchPadColor;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color appButtonColor;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color systemButtonColor;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF1D0", Offset = "0x7CF1D0")]
	public bool readControllerState;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public ControllerDisplayState displayState;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF208", Offset = "0x7CF208")]
	public float maximumAlpha;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF220", Offset = "0x7CF220")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer controllerRenderer;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int alphaId;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int touchId;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int touchPadId;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int appButtonId;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int systemButtonId;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int batteryColorId;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool wasTouching;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float touchTime;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector4 controllerShaderData;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4 controllerShaderData2;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color currentBatteryColor;

	[Token(Token = "0x40008F4")]
	public const float APP_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40008F5")]
	public const float APP_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40008F6")]
	public const float SYSTEM_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40008F7")]
	public const float SYSTEM_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40008F8")]
	public const float TOUCHPAD_CLICK_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x40008F9")]
	public const float TOUCHPAD_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x40008FA")]
	public const float TOUCHPAD_CLICK_SCALE_DURATION_SECONDS = 0.075f;

	[Token(Token = "0x40008FB")]
	public const float TOUCHPAD_POINT_SCALE_DURATION_SECONDS = 0.15f;

	[Token(Token = "0x40008FC")]
	private const float BATTERY_FULL = 0f;

	[Token(Token = "0x40008FD")]
	private const float BATTERY_ALMOST_FULL = 0.125f;

	[Token(Token = "0x40008FE")]
	private const float BATTERY_MEDIUM = 0.225f;

	[Token(Token = "0x40008FF")]
	private const float BATTERY_LOW = 0.325f;

	[Token(Token = "0x4000900")]
	private const float BATTERY_CRITICAL = 0.425f;

	[Token(Token = "0x4000901")]
	private const float BATTERY_HIDDEN = 0.525f;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly Color GVR_BATTERY_CRITICAL_COLOR;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Color GVR_BATTERY_LOW_COLOR;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly Color GVR_BATTERY_MED_COLOR;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly Color GVR_BATTERY_FULL_COLOR;

	[Token(Token = "0x4000906")]
	private const float IMMEDIATE_UPDATE_TIME = 10f;

	[Token(Token = "0x170001A9")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1444930", Offset = "0x1444930", VA = "0x1444930", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A7C", Offset = "0x7E3A7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1444938", Offset = "0x1444938", VA = "0x1444938", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A8C", Offset = "0x7E3A8C")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public float PreferredAlpha
	{
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1444940", Offset = "0x1444940", VA = "0x1444940")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AB")]
	public Color TouchPadColor
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x14449E0", Offset = "0x14449E0", VA = "0x14449E0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x14449EC", Offset = "0x14449EC", VA = "0x14449EC")]
		set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public Color AppButtonColor
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x1444A10", Offset = "0x1444A10", VA = "0x1444A10")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1444A1C", Offset = "0x1444A1C", VA = "0x1444A1C")]
		set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public Color SystemButtonColor
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1444A40", Offset = "0x1444A40", VA = "0x1444A40")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1444A4C", Offset = "0x1444A4C", VA = "0x1444A4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1444A70", Offset = "0x1444A70", VA = "0x1444A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1444DA8", Offset = "0x1444DA8", VA = "0x1444DA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1444E20", Offset = "0x1444E20", VA = "0x1444E20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1444E98", Offset = "0x1444E98", VA = "0x1444E98")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1445114", Offset = "0x1445114", VA = "0x1445114")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1444CA4", Offset = "0x1444CA4", VA = "0x1444CA4")]
	private void CreateAttachments()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1444A94", Offset = "0x1444A94", VA = "0x1444A94")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x144511C", Offset = "0x144511C", VA = "0x144511C")]
	private void UpdateControllerState()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1444EDC", Offset = "0x1444EDC", VA = "0x1444EDC")]
	private void OnVisualUpdate(bool updateImmediately = false)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1445184", Offset = "0x1445184", VA = "0x1445184")]
	private void UpdateBatteryIndicator()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1445270", Offset = "0x1445270", VA = "0x1445270")]
	public GvrControllerVisual()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB13C", Offset = "0x7CB13C")]
public class GvrLaserPointer : GvrBasePointer
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF230", Offset = "0x7CF230")]
	public float maxPointerDistance;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF268", Offset = "0x7CF268")]
	public float defaultReticleDistance;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF2A0", Offset = "0x7CF2A0")]
	public float overrideCameraRayIntersectionDistance;

	[Token(Token = "0x4000911")]
	private const float RETICLE_VISUAL_RATIO = 0.1f;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF2D8", Offset = "0x7CF2D8")]
	private GvrLaserVisual <LaserVisual>k__BackingField;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isHittingTarget;

	[Token(Token = "0x170001AE")]
	public GvrLaserVisual LaserVisual
	{
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1449D38", Offset = "0x1449D38", VA = "0x1449D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3A9C", Offset = "0x7E3A9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1449D40", Offset = "0x1449D40", VA = "0x1449D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3AAC", Offset = "0x7E3AAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1449D48", Offset = "0x1449D48", VA = "0x1449D48", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B0")]
	public override float CameraRayIntersectionDistance
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1449D50", Offset = "0x1449D50", VA = "0x1449D50", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1449DE8", Offset = "0x1449DE8", VA = "0x1449DE8", Slot = "16")]
	public override void OnPointerEnter(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1449E2C", Offset = "0x1449E2C", VA = "0x1449E2C", Slot = "17")]
	public override void OnPointerHover(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1449E70", Offset = "0x1449E70", VA = "0x1449E70", Slot = "18")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1449E78", Offset = "0x1449E78", VA = "0x1449E78", Slot = "19")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1449E7C", Offset = "0x1449E7C", VA = "0x1449E7C", Slot = "20")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1449E80", Offset = "0x1449E80", VA = "0x1449E80", Slot = "21")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1449F8C", Offset = "0x1449F8C", VA = "0x1449F8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1449FE0", Offset = "0x1449FE0", VA = "0x1449FE0", Slot = "22")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x144A08C", Offset = "0x144A08C", VA = "0x144A08C")]
	private void Update()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x144A0C4", Offset = "0x144A0C4", VA = "0x144A0C4")]
	public GvrLaserPointer()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB19C", Offset = "0x7CB19C")]
public class GvrLaserVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x2000174")]
	public delegate Vector3 GetPointForDistanceDelegate(float distance);

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF2E8", Offset = "0x7CF2E8")]
	public GvrControllerReticleVisual reticle;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF320", Offset = "0x7CF320")]
	public Transform controller;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF358", Offset = "0x7CF358")]
	public Color laserColor;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF390", Offset = "0x7CF390")]
	public Color laserColorEnd;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF3C8", Offset = "0x7CF3C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF3C8", Offset = "0x7CF3C8")]
	public float maxLaserDistance;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF41C", Offset = "0x7CF41C")]
	public float lerpSpeed;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF454", Offset = "0x7CF454")]
	public float lerpThreshold;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF48C", Offset = "0x7CF48C")]
	public bool shrinkLaser;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF4C4", Offset = "0x7CF4C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF4C4", Offset = "0x7CF4C4")]
	public float shrunkScale;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF518", Offset = "0x7CF518")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF518", Offset = "0x7CF518")]
	public float beginShrinkAngleDegrees;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF56C", Offset = "0x7CF56C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF56C", Offset = "0x7CF56C")]
	public float endShrinkAngleDegrees;

	[Token(Token = "0x400091F")]
	private const float LERP_CLAMP_THRESHOLD = 0.02f;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5C0", Offset = "0x7CF5C0")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5D0", Offset = "0x7CF5D0")]
	private LineRenderer <Laser>k__BackingField;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5E0", Offset = "0x7CF5E0")]
	private GetPointForDistanceDelegate <GetPointForDistanceFunction>k__BackingField;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float shrinkRatio;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float targetDistance;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float currentDistance;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 currentPosition;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 currentLocalPosition;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Quaternion currentLocalRotation;

	[Token(Token = "0x170001B1")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x144A0DC", Offset = "0x144A0DC", VA = "0x144A0DC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3ABC", Offset = "0x7E3ABC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x144A0E4", Offset = "0x144A0E4", VA = "0x144A0E4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3ACC", Offset = "0x7E3ACC")]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public LineRenderer Laser
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x144A0EC", Offset = "0x144A0EC", VA = "0x144A0EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3ADC", Offset = "0x7E3ADC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x144A0F4", Offset = "0x144A0F4", VA = "0x144A0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3AEC", Offset = "0x7E3AEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public GetPointForDistanceDelegate GetPointForDistanceFunction
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x144A0FC", Offset = "0x144A0FC", VA = "0x144A0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3AFC", Offset = "0x7E3AFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x144A104", Offset = "0x144A104", VA = "0x144A104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B0C", Offset = "0x7E3B0C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public float CurrentDistance
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x144A12C", Offset = "0x144A12C", VA = "0x144A12C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x144A10C", Offset = "0x144A10C", VA = "0x144A10C", Slot = "6")]
	public virtual void SetDistance(float distance, bool immediate = false)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x144A134", Offset = "0x144A134", VA = "0x144A134", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x144A188", Offset = "0x144A188", VA = "0x144A188", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x144A1F0", Offset = "0x144A1F0", VA = "0x144A1F0", Slot = "9")]
	protected virtual void UpdateCurrentPosition()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x144A338", Offset = "0x144A338", VA = "0x144A338", Slot = "10")]
	protected virtual void UpdateControllerOrientation()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x144A3D0", Offset = "0x144A3D0", VA = "0x144A3D0", Slot = "11")]
	protected virtual void UpdateReticlePosition()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x144A474", Offset = "0x144A474", VA = "0x144A474", Slot = "12")]
	protected virtual void UpdateLaserEndPoint()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x144A86C", Offset = "0x144A86C", VA = "0x144A86C", Slot = "13")]
	protected virtual void UpdateLaserAlpha()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x144AA20", Offset = "0x144AA20", VA = "0x144AA20", Slot = "14")]
	protected virtual float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x144AA58", Offset = "0x144AA58", VA = "0x144AA58")]
	public GvrLaserVisual()
	{
	}
}
[Token(Token = "0x2000175")]
public class GvrRecenterOnlyController : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion lastAppliedYawCorrection;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion yawCorrection;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x12E281C", Offset = "0x12E281C", VA = "0x12E281C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x12E29CC", Offset = "0x12E29CC", VA = "0x12E29CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x12E28CC", Offset = "0x12E28CC", VA = "0x12E28CC")]
	private void ApplyYawCorrection()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x12E29FC", Offset = "0x12E29FC", VA = "0x12E29FC")]
	private void RemoveLastYawCorrection()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x12E2940", Offset = "0x12E2940", VA = "0x12E2940")]
	private Quaternion GetYawCorrection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x12E2B1C", Offset = "0x12E2B1C", VA = "0x12E2B1C")]
	public GvrRecenterOnlyController()
	{
	}
}
[Token(Token = "0x2000176")]
public class GvrTrackedController : MonoBehaviour
{
	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF5F0", Offset = "0x7CF5F0")]
	[SerializeField]
	private GvrBaseArmModel armModel;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF63C", Offset = "0x7CF63C")]
	[SerializeField]
	private bool isDeactivatedWhenDisconnected;

	[Token(Token = "0x170001B5")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x12E4524", Offset = "0x12E4524", VA = "0x12E4524")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x12E452C", Offset = "0x12E452C", VA = "0x12E452C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public bool IsDeactivatedWhenDisconnected
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x12E46F4", Offset = "0x12E46F4", VA = "0x12E46F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x12E46FC", Offset = "0x12E46FC", VA = "0x12E46FC")]
		set
		{
		}
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x12E45C4", Offset = "0x12E45C4", VA = "0x12E45C4")]
	public void PropagateArmModel()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x12E47C0", Offset = "0x12E47C0", VA = "0x12E47C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x12E483C", Offset = "0x12E483C", VA = "0x12E483C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x12E49D0", Offset = "0x12E49D0", VA = "0x12E49D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x12E4A4C", Offset = "0x12E4A4C", VA = "0x12E4A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x12E4A88", Offset = "0x12E4A88", VA = "0x12E4A88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x12E4B04", Offset = "0x12E4B04", VA = "0x12E4B04")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x12E4760", Offset = "0x12E4760", VA = "0x12E4760")]
	private void OnControllerStateChanged(GvrConnectionState state, GvrConnectionState oldState)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x12E48E0", Offset = "0x12E48E0", VA = "0x12E48E0")]
	private void UpdatePose()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x12E4B08", Offset = "0x12E4B08", VA = "0x12E4B08")]
	public GvrTrackedController()
	{
	}
}
[Token(Token = "0x2000177")]
[ExecuteInEditMode]
public class GvrControllerTooltipsSimple : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer tooltipRenderer;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF688", Offset = "0x7CF688")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int colorId;

	[Token(Token = "0x170001B7")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x14445F4", Offset = "0x14445F4", VA = "0x14445F4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B1C", Offset = "0x7E3B1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x14445FC", Offset = "0x14445FC", VA = "0x14445FC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B2C", Offset = "0x7E3B2C")]
		set
		{
		}
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1444604", Offset = "0x1444604", VA = "0x1444604")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x14446F8", Offset = "0x14446F8", VA = "0x14446F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1444770", Offset = "0x1444770", VA = "0x1444770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x14447E8", Offset = "0x14447E8", VA = "0x14447E8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1444608", Offset = "0x1444608", VA = "0x1444608")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1444924", Offset = "0x1444924", VA = "0x1444924")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1444828", Offset = "0x1444828", VA = "0x1444828")]
	protected void OnVisualUpdate()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1444928", Offset = "0x1444928", VA = "0x1444928")]
	public GvrControllerTooltipsSimple()
	{
	}
}
[Token(Token = "0x2000178")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB20C", Offset = "0x7CB20C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB20C", Offset = "0x7CB20C")]
public class GvrTooltip : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x2000179")]
	private enum Location
	{
		[Token(Token = "0x4000940")]
		TouchPadOutside,
		[Token(Token = "0x4000941")]
		TouchPadInside,
		[Token(Token = "0x4000942")]
		AppButtonOutside,
		[Token(Token = "0x4000943")]
		AppButtonInside,
		[Token(Token = "0x4000944")]
		Custom
	}

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Quaternion RIGHT_SIDE_ROTATION;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static readonly Quaternion LEFT_SIDE_ROTATION;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static readonly Vector2 SQUARE_CENTER;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly Vector2 PIVOT;

	[Token(Token = "0x4000935")]
	protected const float TOUCH_PAD_Y_POSITION_METERS = 0.0385f;

	[Token(Token = "0x4000936")]
	protected const float APP_BUTTON_Y_POSITION_METERS = 0.0105f;

	[Token(Token = "0x4000937")]
	protected const float TOOLTIP_Z_POSITION_METERS = 0.0098f;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF698", Offset = "0x7CF698")]
	private Location location;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF6E4", Offset = "0x7CF6E4")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF730", Offset = "0x7CF730")]
	[SerializeField]
	private bool alwaysVisible;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isOnLeft;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF77C", Offset = "0x7CF77C")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x170001B8")]
	public Text TooltipText
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x12E3BEC", Offset = "0x12E3BEC", VA = "0x12E3BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x12E3BF4", Offset = "0x12E3BF4", VA = "0x12E3BF4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B3C", Offset = "0x7E3B3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x12E3BFC", Offset = "0x12E3BFC", VA = "0x12E3BFC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B4C", Offset = "0x7E3B4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x12E3C04", Offset = "0x12E3C04", VA = "0x12E3C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x12E3DE8", Offset = "0x12E3DE8", VA = "0x12E3DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x12E3E7C", Offset = "0x12E3E7C", VA = "0x12E3E7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x12E3EF8", Offset = "0x12E3EF8", VA = "0x12E3EF8")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x12E4070", Offset = "0x12E4070", VA = "0x12E4070")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x12E40C8", Offset = "0x12E40C8", VA = "0x12E40C8")]
	public bool IsTooltipInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x12E3CB4", Offset = "0x12E3CB4", VA = "0x12E3CB4")]
	public bool IsTooltipOnLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x12E40F4", Offset = "0x12E40F4", VA = "0x12E40F4", Slot = "6")]
	protected virtual void OnSideChanged(bool IsLocationOnLeft)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x12E42F0", Offset = "0x12E42F0", VA = "0x12E42F0")]
	protected float GetMetersToCanvasScale()
	{
		return default(float);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x12E43EC", Offset = "0x12E43EC", VA = "0x12E43EC")]
	private Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x12E3FF8", Offset = "0x12E3FF8", VA = "0x12E3FF8")]
	private void CheckTooltipSide()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x12E3CFC", Offset = "0x12E3CFC", VA = "0x12E3CFC")]
	private void RefreshTooltip()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x12E4474", Offset = "0x12E4474", VA = "0x12E4474")]
	public GvrTooltip()
	{
	}
}
[Token(Token = "0x200017A")]
public abstract class GvrBasePointer : MonoBehaviour
{
	[Token(Token = "0x200017B")]
	public enum RaycastMode
	{
		[Token(Token = "0x4000949")]
		Camera,
		[Token(Token = "0x400094A")]
		Direct,
		[Token(Token = "0x400094B")]
		Hybrid
	}

	[Token(Token = "0x200017C")]
	public struct PointerRay
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Ray ray;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distanceFromStart;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;
	}

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF78C", Offset = "0x7CF78C")]
	public RaycastMode raycastMode;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF7C4", Offset = "0x7CF7C4")]
	public Camera overridePointerCamera;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF7FC", Offset = "0x7CF7FC")]
	private bool <ShouldUseExitRadiusForRaycast>k__BackingField;

	[Token(Token = "0x170001BA")]
	public RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x14411A4", Offset = "0x14411A4", VA = "0x14411A4")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x170001BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E8960", Offset = "0x7E8960")]
	public Vector3 PointerIntersection
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1441298", Offset = "0x1441298", VA = "0x1441298")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E8998", Offset = "0x7E8998")]
	public bool IsPointerIntersecting
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x14412C0", Offset = "0x14412C0", VA = "0x14412C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BD")]
	public bool ShouldUseExitRadiusForRaycast
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1441338", Offset = "0x1441338", VA = "0x1441338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B5C", Offset = "0x7E3B5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1441340", Offset = "0x1441340", VA = "0x1441340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B6C", Offset = "0x7E3B6C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public float CurrentPointerRadius
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x144134C", Offset = "0x144134C", VA = "0x144134C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BF")]
	public virtual Transform PointerTransform
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x14413A4", Offset = "0x14413A4", VA = "0x14413A4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C0")]
	public virtual bool TriggerDown
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x14413AC", Offset = "0x14413AC", VA = "0x14413AC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C1")]
	public virtual bool Triggering
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x14414A8", Offset = "0x14414A8", VA = "0x14414A8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C2")]
	public virtual bool TriggerUp
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x14415A4", Offset = "0x14415A4", VA = "0x14415A4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C3")]
	public virtual bool TouchDown
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x14416A0", Offset = "0x14416A0", VA = "0x14416A0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C4")]
	public virtual bool IsTouching
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1441774", Offset = "0x1441774", VA = "0x1441774", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C5")]
	public virtual bool TouchUp
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1441848", Offset = "0x1441848", VA = "0x1441848", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C6")]
	public virtual Vector2 TouchPos
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x144191C", Offset = "0x144191C", VA = "0x144191C", Slot = "11")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170001C7")]
	public virtual Vector3 MaxPointerEndPoint
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x14419EC", Offset = "0x14419EC", VA = "0x14419EC", Slot = "12")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C8")]
	public virtual bool IsAvailable
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1441B2C", Offset = "0x1441B2C", VA = "0x1441B2C", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C9")]
	public virtual float CameraRayIntersectionDistance
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1441BF0", Offset = "0x1441BF0", VA = "0x1441BF0", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CA")]
	public Camera PointerCamera
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1441C00", Offset = "0x1441C00", VA = "0x1441C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CB")]
	public abstract float MaxPointerDistance
	{
		[Token(Token = "0x60009B2")]
		get;
	}

	[Token(Token = "0x60009B3")]
	public abstract void OnPointerEnter(RaycastResult raycastResult, bool isInteractive);

	[Token(Token = "0x60009B4")]
	public abstract void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive);

	[Token(Token = "0x60009B5")]
	public abstract void OnPointerExit(GameObject previousObject);

	[Token(Token = "0x60009B6")]
	public abstract void OnPointerClickDown();

	[Token(Token = "0x60009B7")]
	public abstract void OnPointerClickUp();

	[Token(Token = "0x60009B8")]
	public abstract void GetPointerRadius(out float enterRadius, out float exitRadius);

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1441AE0", Offset = "0x1441AE0", VA = "0x1441AE0")]
	public Vector3 GetPointAlongPointer(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1441C88", Offset = "0x1441C88", VA = "0x1441C88")]
	public PointerRay GetRayForDistance(float distance)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1441EB0", Offset = "0x1441EB0", VA = "0x1441EB0")]
	public static PointerRay CalculateRay(GvrBasePointer pointer, RaycastMode mode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1441D20", Offset = "0x1441D20", VA = "0x1441D20")]
	public static PointerRay CalculateHybridRay(GvrBasePointer pointer, RaycastMode hybridMode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1442328", Offset = "0x1442328", VA = "0x1442328", Slot = "22")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x144240C", Offset = "0x144240C", VA = "0x144240C")]
	protected GvrBasePointer()
	{
	}
}
[Token(Token = "0x200017D")]
public abstract class GvrBasePointerRaycaster : BaseRaycaster
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GvrBasePointer.PointerRay lastRay;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF80C", Offset = "0x7CF80C")]
	private GvrBasePointer.RaycastMode <CurrentRaycastModeForHybrid>k__BackingField;

	[Token(Token = "0x170001CC")]
	protected GvrBasePointer.RaycastMode CurrentRaycastModeForHybrid
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x144241C", Offset = "0x144241C", VA = "0x144241C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B7C", Offset = "0x7E3B7C")]
		get
		{
			return default(GvrBasePointer.RaycastMode);
		}
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1442424", Offset = "0x1442424", VA = "0x1442424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B8C", Offset = "0x7E3B8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x144242C", Offset = "0x144242C", VA = "0x144242C")]
	protected GvrBasePointerRaycaster()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1442434", Offset = "0x1442434", VA = "0x1442434")]
	public GvrBasePointer.PointerRay GetLastRay()
	{
		return default(GvrBasePointer.PointerRay);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1442440", Offset = "0x1442440", VA = "0x1442440", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60009C4")]
	protected abstract bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList);

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x14425C4", Offset = "0x14425C4", VA = "0x14425C4")]
	private void RaycastHybrid(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x14426FC", Offset = "0x14426FC", VA = "0x14426FC")]
	private void RaycastDefault(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}
}
[Token(Token = "0x200017E")]
public interface IGvrPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x60009C7")]
	void OnGvrPointerHover(PointerEventData eventData);
}
[Token(Token = "0x200017F")]
public static class GvrExecuteEventsExtension
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly ExecuteEvents.EventFunction<IGvrPointerHoverHandler> s_HoverHandler;

	[Token(Token = "0x170001CD")]
	public static ExecuteEvents.EventFunction<IGvrPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x14460F0", Offset = "0x14460F0", VA = "0x14460F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x1445FE8", Offset = "0x1445FE8", VA = "0x1445FE8")]
	private static void Execute(IGvrPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x2000180")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB2B0", Offset = "0x7CB2B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB2B0", Offset = "0x7CB2B0")]
public class GvrPointerGraphicRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x2000181")]
	public enum BlockingObjects
	{
		[Token(Token = "0x400095B")]
		None,
		[Token(Token = "0x400095C")]
		TwoD,
		[Token(Token = "0x400095D")]
		ThreeD,
		[Token(Token = "0x400095E")]
		All
	}

	[Serializable]
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB334", Offset = "0x7CB334")]
	private sealed class <>c
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Graphic> <>9__17_0;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xDB4BE0", Offset = "0xDB4BE0", VA = "0xDB4BE0")]
		public <>c()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xDB4BE8", Offset = "0xDB4BE8", VA = "0xDB4BE8")]
		internal int <Raycast>b__17_0(Graphic g1, Graphic g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000952")]
	private const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool ignoreReversedGraphics;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlockingObjects blockingObjects;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask blockingMask;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas targetCanvas;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Graphic> raycastResults;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cachedPointerEventCamera;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<Graphic> sortedGraphics;

	[Token(Token = "0x170001CE")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x144B780", Offset = "0x144B780", VA = "0x144B780", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CF")]
	private Canvas canvas
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x144B960", Offset = "0x144B960", VA = "0x144B960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x144BA00", Offset = "0x144BA00", VA = "0x144BA00")]
	protected GvrPointerGraphicRaycaster()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x144BA90", Offset = "0x144BA90", VA = "0x144BA90", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x144B82C", Offset = "0x144B82C", VA = "0x144B82C")]
	private Camera GetCameraForRaycastMode(GvrBasePointer pointer, GvrBasePointer.RaycastMode mode)
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x144C760", Offset = "0x144C760", VA = "0x144C760")]
	private Camera AddDummyCameraToPointer(GvrBasePointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x144C24C", Offset = "0x144C24C", VA = "0x144C24C")]
	private static void Raycast(Canvas canvas, Ray ray, Camera cam, float distance, List<Graphic> results, out Ray finalRay)
	{
	}
}
[Token(Token = "0x2000183")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB344", Offset = "0x7CB344")]
public class GvrPointerPhysicsRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x2000184")]
	private class HitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xDB4C40", Offset = "0xDB4C40", VA = "0xDB4C40", Slot = "4")]
		public int Compare(RaycastHit lhs, RaycastHit rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xDB4C84", Offset = "0xDB4C84", VA = "0xDB4C84")]
		public HitComparer()
		{
		}
	}

	[Token(Token = "0x4000961")]
	protected const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x4000962")]
	private const int MAX_RAYCAST_HITS_MAX = 512;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected LayerMask raycasterEventMask;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CF82C", Offset = "0x7CF82C")]
	[SerializeField]
	private int maxRaycastHits;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit[] hits;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitComparer hitComparer;

	[Token(Token = "0x170001D0")]
	public int MaxRaycastHits
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x12E1070", Offset = "0x12E1070", VA = "0x12E1070")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x12E1078", Offset = "0x12E1078", VA = "0x12E1078")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x12E110C", Offset = "0x12E110C", VA = "0x12E110C", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D2")]
	public int finalEventMask
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x12E11A8", Offset = "0x12E11A8", VA = "0x12E11A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D3")]
	public LayerMask eventMask
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x12E1278", Offset = "0x12E1278", VA = "0x12E1278")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x12E1280", Offset = "0x12E1280", VA = "0x12E1280")]
		set
		{
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x12E1288", Offset = "0x12E1288", VA = "0x12E1288")]
	protected GvrPointerPhysicsRaycaster()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x12E1300", Offset = "0x12E1300", VA = "0x12E1300", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x12E1360", Offset = "0x12E1360", VA = "0x12E1360", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000185")]
public class GvrPointerScrollInput
{
	[Token(Token = "0x2000186")]
	private class ScrollInfo
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isScrollingX;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isScrollingY;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 initScroll;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 lastScroll;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scrollVelocity;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IGvrScrollSettings scrollSettings;

		[Token(Token = "0x170001D4")]
		public bool IsScrolling
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xDB4C8C", Offset = "0xDB4C8C", VA = "0xDB4C8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xDB4CAC", Offset = "0xDB4CAC", VA = "0xDB4CAC")]
		public ScrollInfo()
		{
		}
	}

	[Token(Token = "0x4000967")]
	public const string PROPERTY_NAME_INERTIA = "inertia";

	[Token(Token = "0x4000968")]
	public const string PROPERTY_NAME_DECELERATION_RATE = "decelerationRate";

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF870", Offset = "0x7CF870")]
	public bool inertia;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF8A8", Offset = "0x7CF8A8")]
	public float decelerationRate;

	[Token(Token = "0x400096B")]
	public const float SCROLL_DELTA_MULTIPLIER = 1000f;

	[Token(Token = "0x400096C")]
	private const float CUTOFF_HZ = 10f;

	[Token(Token = "0x400096D")]
	private const float RC = 1f / (20f * (float)Math.PI);

	[Token(Token = "0x400096E")]
	private const float SPEED_CLAMP_RATIO = 0.05f;

	[Token(Token = "0x400096F")]
	private const float SPEED_CLAMP = 50f;

	[Token(Token = "0x4000970")]
	private const float SPEED_CLAMP_SQUARED = 2500f;

	[Token(Token = "0x4000971")]
	private const float INERTIA_THRESHOLD_RATIO = 0.2f;

	[Token(Token = "0x4000972")]
	private const float INERTIA_THRESHOLD = 200f;

	[Token(Token = "0x4000973")]
	private const float INERTIA_THRESHOLD_SQUARED = 40000f;

	[Token(Token = "0x4000974")]
	private const float SLOP_VERTICAL = 165f;

	[Token(Token = "0x4000975")]
	private const float SLOP_HORIZONTAL = 150f;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, ScrollInfo> scrollHandlers;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> scrollingObjects;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x12E1868", Offset = "0x12E1868", VA = "0x12E1868")]
	public void HandleScroll(GameObject currentGameObject, PointerEventData pointerData, GvrBasePointer pointer, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x12E1BEC", Offset = "0x12E1BEC", VA = "0x12E1BEC")]
	private void OnTouchingScrollHandler(GameObject currentScrollHandler, PointerEventData pointerData, Vector2 currentScroll, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x12E1E8C", Offset = "0x12E1E8C", VA = "0x12E1E8C")]
	private void OnReleaseScrollHandler(GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x12E2518", Offset = "0x12E2518", VA = "0x12E2518")]
	private void UpdateVelocity(ScrollInfo scrollInfo, Vector2 scrollDisplacement)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x12E1F44", Offset = "0x12E1F44", VA = "0x12E1F44")]
	private void StopScrollingIfNecessary(bool touching, GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x12E2108", Offset = "0x12E2108", VA = "0x12E2108")]
	private void UpdateInertiaScrollHandlers(bool touching, GameObject currentScrollHandler, PointerEventData pointerData, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x12E23D4", Offset = "0x12E23D4", VA = "0x12E23D4")]
	private ScrollInfo AddScrollHandler(GameObject scrollHandler, Vector2 currentScroll)
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x12E1B10", Offset = "0x12E1B10", VA = "0x12E1B10")]
	private void RemoveScrollHandler(GameObject scrollHandler)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x12E25B4", Offset = "0x12E25B4", VA = "0x12E25B4")]
	private bool ShouldUseInertia(ScrollInfo scrollInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x12E2680", Offset = "0x12E2680", VA = "0x12E2680")]
	private float GetDecelerationRate(ScrollInfo scrollInfo)
	{
		return default(float);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x12E24D8", Offset = "0x12E24D8", VA = "0x12E24D8")]
	private static bool CanScrollStartX(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x12E24F8", Offset = "0x12E24F8", VA = "0x12E24F8")]
	private static bool CanScrollStartY(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x12E2750", Offset = "0x12E2750", VA = "0x12E2750")]
	public GvrPointerScrollInput()
	{
	}
}
[Token(Token = "0x2000187")]
public class GvrScrollSettings : MonoBehaviour, IGvrScrollSettings
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF8E0", Offset = "0x7CF8E0")]
	public bool inertiaOverride;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF918", Offset = "0x7CF918")]
	public float decelerationRateOverride;

	[Token(Token = "0x170001D5")]
	public bool InertiaOverride
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x12E32AC", Offset = "0x12E32AC", VA = "0x12E32AC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D6")]
	public float DecelerationRateOverride
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x12E32B4", Offset = "0x12E32B4", VA = "0x12E32B4", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x12E32BC", Offset = "0x12E32BC", VA = "0x12E32BC")]
	public GvrScrollSettings()
	{
	}
}
[Token(Token = "0x2000188")]
public interface IGvrScrollSettings
{
	[Token(Token = "0x170001D7")]
	bool InertiaOverride
	{
		[Token(Token = "0x60009F3")]
		get;
	}

	[Token(Token = "0x170001D8")]
	float DecelerationRateOverride
	{
		[Token(Token = "0x60009F4")]
		get;
	}
}
[Token(Token = "0x2000189")]
public class GvrAllEventsTrigger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018A")]
	public class TriggerEvent : UnityEvent<GameObject, PointerEventData>
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xDB1E88", Offset = "0xDB1E88", VA = "0xDB1E88")]
		public TriggerEvent()
		{
		}
	}

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerEvent OnPointerClick;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TriggerEvent OnPointerDown;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TriggerEvent OnPointerUp;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriggerEvent OnPointerEnter;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerEvent OnPointerExit;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerEvent OnScroll;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool listenersAdded;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1439810", Offset = "0x1439810", VA = "0x1439810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x14399E4", Offset = "0x14399E4", VA = "0x14399E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1439BB4", Offset = "0x1439BB4", VA = "0x1439BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1439814", Offset = "0x1439814", VA = "0x1439814")]
	private void AddListeners()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x14399E8", Offset = "0x14399E8", VA = "0x14399E8")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x143A094", Offset = "0x143A094", VA = "0x143A094")]
	private void OnPointerClickHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x143A100", Offset = "0x143A100", VA = "0x143A100")]
	private void OnPointerDownHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x143A16C", Offset = "0x143A16C", VA = "0x143A16C")]
	private void OnPointerUpHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x143A1D8", Offset = "0x143A1D8", VA = "0x143A1D8")]
	private void OnPointerEnterHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x143A244", Offset = "0x143A244", VA = "0x143A244")]
	private void OnPointerExitHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x143A2B0", Offset = "0x143A2B0", VA = "0x143A2B0")]
	private void OnScrollHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x143A31C", Offset = "0x143A31C", VA = "0x143A31C")]
	public GvrAllEventsTrigger()
	{
	}
}
[Token(Token = "0x200018B")]
public class GvrEventExecutor : IGvrEventExecutor
{
	[Token(Token = "0x200018C")]
	public delegate void EventDelegate(GameObject target, PointerEventData eventData);

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, EventDelegate> eventTable;

	[Token(Token = "0x14000004")]
	public event EventDelegate OnPointerClick
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1439C44", Offset = "0x1439C44", VA = "0x1439C44")]
		add
		{
		}
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1439E6C", Offset = "0x1439E6C", VA = "0x1439E6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event EventDelegate OnPointerDown
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1439CA0", Offset = "0x1439CA0", VA = "0x1439CA0")]
		add
		{
		}
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1439EC8", Offset = "0x1439EC8", VA = "0x1439EC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event EventDelegate OnPointerUp
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1439CFC", Offset = "0x1439CFC", VA = "0x1439CFC")]
		add
		{
		}
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1439F24", Offset = "0x1439F24", VA = "0x1439F24")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event EventDelegate OnPointerEnter
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1439D58", Offset = "0x1439D58", VA = "0x1439D58")]
		add
		{
		}
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1439F80", Offset = "0x1439F80", VA = "0x1439F80")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event EventDelegate OnPointerExit
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1439DB4", Offset = "0x1439DB4", VA = "0x1439DB4")]
		add
		{
		}
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1439FDC", Offset = "0x1439FDC", VA = "0x1439FDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event EventDelegate OnScroll
	{
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1439E10", Offset = "0x1439E10", VA = "0x1439E10")]
		add
		{
		}
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x143A038", Offset = "0x143A038", VA = "0x143A038")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1445F6C", Offset = "0x1445F6C", VA = "0x1445F6C")]
	public GvrEventExecutor()
	{
	}

	[Token(Token = "0x6000A0F")]
	public bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler
	{
		return default(bool);
	}

	[Token(Token = "0x6000A10")]
	public GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x6000A11")]
	public GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x6000A12")]
	private void CallEventDelegate<T>(GameObject target, BaseEventData eventData) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x6000A13")]
	private void AddEventDelegate<T>(EventDelegate eventDelegate)
	{
	}

	[Token(Token = "0x6000A14")]
	private void RemoveEventDelegate<T>(EventDelegate eventDelegate)
	{
	}
}
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB37C", Offset = "0x7CB37C")]
public class GvrPointerInputModule : BaseInputModule, IGvrInputModuleController
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF950", Offset = "0x7CF950")]
	public bool vrModeOnly;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CF988", Offset = "0x7CF988")]
	public GvrPointerScrollInput scrollInput;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9C0", Offset = "0x7CF9C0")]
	private GvrPointerInputModuleImpl <Impl>k__BackingField;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9D0", Offset = "0x7CF9D0")]
	private GvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x170001D9")]
	public GvrPointerInputModuleImpl Impl
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x144C888", Offset = "0x144C888", VA = "0x144C888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3B9C", Offset = "0x7E3B9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x144C890", Offset = "0x144C890", VA = "0x144C890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BAC", Offset = "0x7E3BAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public GvrEventExecutor EventExecutor
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x144C898", Offset = "0x144C898", VA = "0x144C898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BBC", Offset = "0x7E3BBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x144C8A0", Offset = "0x144C8A0", VA = "0x144C8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BCC", Offset = "0x7E3BCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public new EventSystem eventSystem
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x144C8A8", Offset = "0x144C8A8", VA = "0x144C8A8", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DC")]
	public List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x144C8B0", Offset = "0x144C8B0", VA = "0x144C8B0", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DD")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1442528", Offset = "0x1442528", VA = "0x1442528")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x144C9F4", Offset = "0x144C9F4", VA = "0x144C9F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public static RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x14411E0", Offset = "0x14411E0", VA = "0x14411E0")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x144232C", Offset = "0x144232C", VA = "0x144232C")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1439BB8", Offset = "0x1439BB8", VA = "0x1439BB8")]
	public static GvrEventExecutor FindEventExecutor()
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x144C8B8", Offset = "0x144C8B8", VA = "0x144C8B8")]
	public static GvrPointerInputModule FindInputModule()
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x144CB1C", Offset = "0x144CB1C", VA = "0x144CB1C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x144CC2C", Offset = "0x144CC2C", VA = "0x144CC2C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x144CE18", Offset = "0x144CE18", VA = "0x144CE18", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x144CEB4", Offset = "0x144CEB4", VA = "0x144CEB4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x144D044", Offset = "0x144D044", VA = "0x144D044", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x144D0E0", Offset = "0x144D0E0", VA = "0x144D0E0", Slot = "28")]
	public bool ShouldActivate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x144D0E8", Offset = "0x144D0E8", VA = "0x144D0E8", Slot = "29")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x144D0F0", Offset = "0x144D0F0", VA = "0x144D0F0", Slot = "30")]
	public new GameObject FindCommonRoot(GameObject g1, GameObject g2)
	{
		return null;
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x144D100", Offset = "0x144D100", VA = "0x144D100", Slot = "31")]
	public new BaseEventData GetBaseEventData()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x144D108", Offset = "0x144D108", VA = "0x144D108", Slot = "32")]
	public new RaycastResult FindFirstRaycast(List<RaycastResult> candidates)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x144CEE0", Offset = "0x144CEE0", VA = "0x144CEE0")]
	private void UpdateImplProperties()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x144D14C", Offset = "0x144D14C", VA = "0x144D14C")]
	public GvrPointerInputModule()
	{
	}
}
[Token(Token = "0x200018E")]
public class GvrPointerInputModuleImpl
{
	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9E0", Offset = "0x7CF9E0")]
	private IGvrInputModuleController <ModuleController>k__BackingField;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9F0", Offset = "0x7CF9F0")]
	private IGvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA00", Offset = "0x7CFA00")]
	private bool <VrModeOnly>k__BackingField;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA10", Offset = "0x7CFA10")]
	private GvrPointerScrollInput <ScrollInput>k__BackingField;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA20", Offset = "0x7CFA20")]
	private PointerEventData <CurrentEventData>k__BackingField;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GvrBasePointer pointer;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 lastPose;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isPointerHovering;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isActive;

	[Token(Token = "0x170001DF")]
	public IGvrInputModuleController ModuleController
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x144D1B0", Offset = "0x144D1B0", VA = "0x144D1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BDC", Offset = "0x7E3BDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x144D1B8", Offset = "0x144D1B8", VA = "0x144D1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BEC", Offset = "0x7E3BEC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public IGvrEventExecutor EventExecutor
	{
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x144D1C0", Offset = "0x144D1C0", VA = "0x144D1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3BFC", Offset = "0x7E3BFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x144D1C8", Offset = "0x144D1C8", VA = "0x144D1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C0C", Offset = "0x7E3C0C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public bool VrModeOnly
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x144D1D0", Offset = "0x144D1D0", VA = "0x144D1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C1C", Offset = "0x7E3C1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x144D1D8", Offset = "0x144D1D8", VA = "0x144D1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C2C", Offset = "0x7E3C2C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public GvrPointerScrollInput ScrollInput
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x144D1E4", Offset = "0x144D1E4", VA = "0x144D1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C3C", Offset = "0x7E3C3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x144D1EC", Offset = "0x144D1EC", VA = "0x144D1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C4C", Offset = "0x7E3C4C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public PointerEventData CurrentEventData
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x144D1F4", Offset = "0x144D1F4", VA = "0x144D1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C5C", Offset = "0x7E3C5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x144D1FC", Offset = "0x144D1FC", VA = "0x144D1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3C6C", Offset = "0x7E3C6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public GvrBasePointer Pointer
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x144D204", Offset = "0x144D204", VA = "0x144D204")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x144CA90", Offset = "0x144CA90", VA = "0x144CA90")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x144CB34", Offset = "0x144CB34", VA = "0x144CB34")]
	public bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x144CC44", Offset = "0x144CC44", VA = "0x144CC44")]
	public void DeactivateModule()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x144CE30", Offset = "0x144CE30", VA = "0x144CE30")]
	public bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x144CF30", Offset = "0x144CF30", VA = "0x144CF30")]
	public void Process()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x144E1D8", Offset = "0x144E1D8", VA = "0x144E1D8")]
	private void CastRay()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x144EB98", Offset = "0x144EB98", VA = "0x144EB98")]
	private void UpdateCurrentObject(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x144F164", Offset = "0x144F164", VA = "0x144F164")]
	private void UpdatePointer(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x14501D0", Offset = "0x14501D0", VA = "0x14501D0")]
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x144F57C", Offset = "0x144F57C", VA = "0x144F57C")]
	private void HandleDrag()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x144D2F0", Offset = "0x144D2F0", VA = "0x144D2F0")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x144FB28", Offset = "0x144FB28", VA = "0x144FB28")]
	private void HandleTriggerDown()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x144E1C0", Offset = "0x144E1C0", VA = "0x144E1C0")]
	private GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x144D928", Offset = "0x144D928", VA = "0x144D928")]
	private void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x144D20C", Offset = "0x144D20C", VA = "0x144D20C")]
	private void TryExitPointer()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x144E124", Offset = "0x144E124", VA = "0x144E124")]
	private bool IsPointerActiveAndAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1450004", Offset = "0x1450004", VA = "0x1450004")]
	private void RaycastAll()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x144D0D8", Offset = "0x144D0D8", VA = "0x144D0D8")]
	public GvrPointerInputModuleImpl()
	{
	}
}
[Token(Token = "0x200018F")]
public interface IGvrEventExecutor
{
	[Token(Token = "0x6000A4E")]
	bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler;

	[Token(Token = "0x6000A4F")]
	GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler;

	[Token(Token = "0x6000A50")]
	GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler;
}
[Token(Token = "0x2000190")]
public interface IGvrInputModuleController
{
	[Token(Token = "0x170001E5")]
	EventSystem eventSystem
	{
		[Token(Token = "0x6000A51")]
		get;
	}

	[Token(Token = "0x170001E6")]
	List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x6000A52")]
		get;
	}

	[Token(Token = "0x6000A53")]
	bool ShouldActivate();

	[Token(Token = "0x6000A54")]
	void Deactivate();

	[Token(Token = "0x6000A55")]
	GameObject FindCommonRoot(GameObject g1, GameObject g2);

	[Token(Token = "0x6000A56")]
	BaseEventData GetBaseEventData();

	[Token(Token = "0x6000A57")]
	RaycastResult FindFirstRaycast(List<RaycastResult> candidates);
}
[Token(Token = "0x2000191")]
public class GvrCardboardHelpers
{
	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x14427C8", Offset = "0x14427C8", VA = "0x14427C8")]
	public static void Recenter()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x14428F8", Offset = "0x14428F8", VA = "0x14428F8")]
	public static void SetViewerProfile(string viewerProfileUri)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1442878", Offset = "0x1442878", VA = "0x1442878")]
	private static extern void gvr_reset_tracking(IntPtr gvr_context);

	[PreserveSig]
	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x14429B0", Offset = "0x14429B0", VA = "0x14429B0")]
	private static extern void gvr_set_default_viewer_profile(IntPtr gvr_context, string viewer_profile_uri);

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1442A54", Offset = "0x1442A54", VA = "0x1442A54")]
	public GvrCardboardHelpers()
	{
	}
}
[Token(Token = "0x2000192")]
public class GvrEditorEmulator : MonoBehaviour
{
	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1445F64", Offset = "0x1445F64", VA = "0x1445F64")]
	public GvrEditorEmulator()
	{
	}
}
[Token(Token = "0x2000193")]
public static class GvrSettings
{
	[Token(Token = "0x2000194")]
	public enum ViewerPlatformType
	{
		[Token(Token = "0x400099C")]
		Error = -1,
		[Token(Token = "0x400099D")]
		Cardboard,
		[Token(Token = "0x400099E")]
		Daydream
	}

	[Token(Token = "0x2000195")]
	public enum UserPrefsHandedness
	{
		[Token(Token = "0x40009A0")]
		Error = -1,
		[Token(Token = "0x40009A1")]
		Right,
		[Token(Token = "0x40009A2")]
		Left
	}

	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB3B4", Offset = "0x7CB3B4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject androidWindow;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xDB4CF4", Offset = "0xDB4CF4", VA = "0xDB4CF4")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xDB4CFC", Offset = "0xDB4CFC", VA = "0xDB4CFC")]
		internal void <SetSustainedPerformanceMode>b__0()
		{
		}
	}

	[Token(Token = "0x4000995")]
	public const string VR_SDK_NONE = "None";

	[Token(Token = "0x4000996")]
	public const string VR_SDK_DAYDREAM = "daydream";

	[Token(Token = "0x4000997")]
	public const string VR_SDK_CARDBOARD = "cardboard";

	[Token(Token = "0x4000998")]
	private const string METHOD_GET_WINDOW = "getWindow";

	[Token(Token = "0x4000999")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x400099A")]
	private const string METHOD_SET_SUSTAINED_PERFORMANCE_MODE = "setSustainedPerformanceMode";

	[Token(Token = "0x170001E7")]
	public static ViewerPlatformType ViewerPlatform
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x12E32D8", Offset = "0x12E32D8", VA = "0x12E32D8")]
		get
		{
			return default(ViewerPlatformType);
		}
	}

	[Token(Token = "0x170001E8")]
	public static bool SustainedPerformanceMode
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x12E3654", Offset = "0x12E3654", VA = "0x12E3654")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public static UserPrefsHandedness Handedness
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x12E39DC", Offset = "0x12E39DC", VA = "0x12E39DC")]
		get
		{
			return default(UserPrefsHandedness);
		}
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x12E365C", Offset = "0x12E365C", VA = "0x12E365C")]
	private static void SetSustainedPerformanceMode(bool enabled)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x12E333C", Offset = "0x12E333C", VA = "0x12E333C")]
	public static IntPtr GetValidGvrNativePtrOrLogError()
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x12E3AEC", Offset = "0x12E3AEC", VA = "0x12E3AEC")]
	private static extern IntPtr gvr_get_user_prefs(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x12E35D4", Offset = "0x12E35D4", VA = "0x12E35D4")]
	private static extern int gvr_get_viewer_type(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x12E3B6C", Offset = "0x12E3B6C", VA = "0x12E3B6C")]
	private static extern int gvr_user_prefs_get_controller_handedness(IntPtr gvrUserPrefsPtr);
}
[Token(Token = "0x2000197")]
public class GvrUnitySdkVersion
{
	[Token(Token = "0x40009A5")]
	public const string GVR_SDK_VERSION = "1.110.0";

	[Token(Token = "0x40009A6")]
	private const string VERSION_HEADER = "GVR SDK for Unity version: ";

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x12E4B18", Offset = "0x12E4B18", VA = "0x12E4B18")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x7E3C7C", Offset = "0x7E3C7C")]
	private static void LogGvrUnitySdkVersion()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x12E4B8C", Offset = "0x12E4B8C", VA = "0x12E4B8C")]
	public GvrUnitySdkVersion()
	{
	}
}
[Token(Token = "0x2000198")]
public class GvrHeadset : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	public delegate void OnSafetyRegionEvent(bool enter);

	[Token(Token = "0x200019A")]
	public delegate void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation);

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB3C4", Offset = "0x7CB3C4")]
	private sealed class <EndOfFrame>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrHeadset <>4__this;

		[Token(Token = "0x170001EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xDB2AE4", Offset = "0xDB2AE4", VA = "0xDB2AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xDB2B2C", Offset = "0xDB2B2C", VA = "0xDB2B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xDB2A40", Offset = "0xDB2A40", VA = "0xDB2A40")]
		[DebuggerHidden]
		public <EndOfFrame>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xDB2A6C", Offset = "0xDB2A6C", VA = "0xDB2A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xDB2A70", Offset = "0xDB2A70", VA = "0xDB2A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xDB2AEC", Offset = "0xDB2AEC", VA = "0xDB2AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrHeadset instance;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IHeadsetProvider headsetProvider;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HeadsetState headsetState;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IEnumerator standaloneUpdate;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnSafetyRegionEvent safetyRegionDelegate;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnRecenterEvent recenterDelegate;

	[Token(Token = "0x170001EA")]
	public static bool SupportsPositionalTracking
	{
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x14465A8", Offset = "0x14465A8", VA = "0x14465A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000A")]
	public static event OnSafetyRegionEvent OnSafetyRegionChange
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x14461F8", Offset = "0x14461F8", VA = "0x14461F8")]
		add
		{
		}
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x14462E4", Offset = "0x14462E4", VA = "0x14462E4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event OnRecenterEvent OnRecenter
	{
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x14463D0", Offset = "0x14463D0", VA = "0x14463D0")]
		add
		{
		}
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x14464BC", Offset = "0x14464BC", VA = "0x14464BC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x14467CC", Offset = "0x14467CC", VA = "0x14467CC")]
	public static bool TryGetFloorHeight(ref float floorHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x144690C", Offset = "0x144690C", VA = "0x144690C")]
	public static bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1446A54", Offset = "0x1446A54", VA = "0x1446A54")]
	public static bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1446B94", Offset = "0x1446B94", VA = "0x1446B94")]
	public static bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1446CD4", Offset = "0x1446CD4", VA = "0x1446CD4")]
	public static bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1446E14", Offset = "0x1446E14", VA = "0x1446E14")]
	private GvrHeadset()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1446E84", Offset = "0x1446E84", VA = "0x1446E84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1446FA4", Offset = "0x1446FA4", VA = "0x1446FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1447058", Offset = "0x1447058", VA = "0x1447058")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1447094", Offset = "0x1447094", VA = "0x1447094")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x14470E8", Offset = "0x14470E8", VA = "0x14470E8")]
	private void UpdateStandalone()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1446FEC", Offset = "0x1446FEC", VA = "0x1446FEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E3C90", Offset = "0x7E3C90")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}
}
[Token(Token = "0x200019C")]
public enum GvrEventType
{
	[Token(Token = "0x40009B2")]
	Invalid = -1,
	[Token(Token = "0x40009B3")]
	Recenter = 1,
	[Token(Token = "0x40009B4")]
	SafetyRegionExit = 2,
	[Token(Token = "0x40009B5")]
	SafetyRegionEnter = 3
}
[Token(Token = "0x200019D")]
public enum GvrRecenterEventType
{
	[Token(Token = "0x40009B7")]
	Invalid = -1,
	[Token(Token = "0x40009B8")]
	RecenterEventRestart = 1,
	[Token(Token = "0x40009B9")]
	RecenterEventAligned = 2
}
[Token(Token = "0x200019E")]
public enum GvrRecenterFlags
{
	[Token(Token = "0x40009BB")]
	None
}
[Token(Token = "0x200019F")]
public enum GvrErrorType
{
	[Token(Token = "0x40009BD")]
	None = 0,
	[Token(Token = "0x40009BE")]
	ControllerCreateFailed = 2,
	[Token(Token = "0x40009BF")]
	NoFrameAavilable = 3,
	[Token(Token = "0x40009C0")]
	NoEventAvailable = 1000000,
	[Token(Token = "0x40009C1")]
	NoPropertyAvailable = 1000001
}
[Token(Token = "0x20001A0")]
public enum GvrSafetyRegionType
{
	[Token(Token = "0x40009C3")]
	None,
	[Token(Token = "0x40009C4")]
	Cylinder
}
[Token(Token = "0x20001A1")]
[ExecuteInEditMode]
public class InstantPreviewHelper : MonoBehaviour
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AdbPath;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x16A712C", Offset = "0x16A712C", VA = "0x16A712C")]
	public InstantPreviewHelper()
	{
	}
}
[Token(Token = "0x20001A2")]
public enum GvrKeyboardEvent
{
	[Token(Token = "0x40009C7")]
	GVR_KEYBOARD_ERROR_UNKNOWN,
	[Token(Token = "0x40009C8")]
	GVR_KEYBOARD_ERROR_SERVICE_NOT_CONNECTED,
	[Token(Token = "0x40009C9")]
	GVR_KEYBOARD_ERROR_NO_LOCALES_FOUND,
	[Token(Token = "0x40009CA")]
	GVR_KEYBOARD_ERROR_SDK_LOAD_FAILED,
	[Token(Token = "0x40009CB")]
	GVR_KEYBOARD_SHOWN,
	[Token(Token = "0x40009CC")]
	GVR_KEYBOARD_HIDDEN,
	[Token(Token = "0x40009CD")]
	GVR_KEYBOARD_TEXT_UPDATED,
	[Token(Token = "0x40009CE")]
	GVR_KEYBOARD_TEXT_COMMITTED
}
[Token(Token = "0x20001A3")]
public enum GvrKeyboardError
{
	[Token(Token = "0x40009D0")]
	UNKNOWN,
	[Token(Token = "0x40009D1")]
	SERVICE_NOT_CONNECTED,
	[Token(Token = "0x40009D2")]
	NO_LOCALES_FOUND,
	[Token(Token = "0x40009D3")]
	SDK_LOAD_FAILED
}
[Token(Token = "0x20001A4")]
public enum GvrKeyboardInputMode
{
	[Token(Token = "0x40009D5")]
	DEFAULT,
	[Token(Token = "0x40009D6")]
	NUMERIC
}
[Token(Token = "0x20001A5")]
public class GvrKeyboard : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	public delegate void StandardCallback();

	[Token(Token = "0x20001A7")]
	public delegate void EditTextCallback(string edit_text);

	[Token(Token = "0x20001A8")]
	public delegate void ErrorCallback(GvrKeyboardError err);

	[Token(Token = "0x20001A9")]
	public delegate void KeyboardCallback(IntPtr closure, GvrKeyboardEvent evt);

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB3E4", Offset = "0x7CB3E4")]
	private sealed class <Executer>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrKeyboard <>4__this;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xDB35C0", Offset = "0xDB35C0", VA = "0xDB35C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xDB3608", Offset = "0xDB3608", VA = "0xDB3608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xDB3318", Offset = "0xDB3318", VA = "0xDB3318")]
		[DebuggerHidden]
		public <Executer>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xDB3344", Offset = "0xDB3344", VA = "0xDB3344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xDB3348", Offset = "0xDB3348", VA = "0xDB3348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xDB35C8", Offset = "0xDB35C8", VA = "0xDB35C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboard instance;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IKeyboardProvider keyboardProvider;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KeyboardState keyboardState;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator keyboardUpdate;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ErrorCallback errorCallback;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StandardCallback showCallback;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StandardCallback hideCallback;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EditTextCallback updateCallback;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EditTextCallback enterCallback;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isRight;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isKeyboardHidden;

	[Token(Token = "0x40009E2")]
	private const float kExecuterWait = 0.01f;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<GvrKeyboardEvent> threadSafeCallbacks;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static object callbacksLock;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GvrKeyboardDelegateBase keyboardDelegate;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GvrKeyboardInputMode inputMode;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool useRecommended;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float distance;

	[Token(Token = "0x170001ED")]
	public string EditorText
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1447968", Offset = "0x1447968", VA = "0x1447968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EE")]
	public GvrKeyboardInputMode Mode
	{
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1447A6C", Offset = "0x1447A6C", VA = "0x1447A6C")]
		get
		{
			return default(GvrKeyboardInputMode);
		}
	}

	[Token(Token = "0x170001EF")]
	public bool IsValid
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1447B54", Offset = "0x1447B54", VA = "0x1447B54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F0")]
	public bool IsReady
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1447C44", Offset = "0x1447C44", VA = "0x1447C44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F1")]
	public Matrix4x4 WorldMatrix
	{
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1447D34", Offset = "0x1447D34", VA = "0x1447D34")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1447E4C", Offset = "0x1447E4C", VA = "0x1447E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1447FD4", Offset = "0x1447FD4", VA = "0x1447FD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1448038", Offset = "0x1448038", VA = "0x1448038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1448520", Offset = "0x1448520", VA = "0x1448520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1448B8C", Offset = "0x1448B8C", VA = "0x1448B8C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1448E60", Offset = "0x1448E60", VA = "0x1448E60")]
	public void ClearText()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1448728", Offset = "0x1448728", VA = "0x1448728")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x14491C4", Offset = "0x14491C4", VA = "0x14491C4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x14492D4", Offset = "0x14492D4", VA = "0x14492D4")]
	public void OnPointerClick(BaseEventData data)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x14492E4", Offset = "0x14492E4", VA = "0x14492E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1449380", Offset = "0x1449380", VA = "0x1449380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x144938C", Offset = "0x144938C", VA = "0x144938C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1449314", Offset = "0x1449314", VA = "0x1449314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E3D40", Offset = "0x7E3D40")]
	private IEnumerator Executer()
	{
		return null;
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1449528", Offset = "0x1449528", VA = "0x1449528")]
	private void PoolKeyboardCallbacks(GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1449750", Offset = "0x1449750", VA = "0x1449750")]
	private static void OnKeyboardCallback(IntPtr closure, GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x14498A8", Offset = "0x14498A8", VA = "0x14498A8")]
	private void KeyboardDelegate_KeyboardShown(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x14498B0", Offset = "0x14498B0", VA = "0x14498B0")]
	private void KeyboardDelegate_KeyboardHidden(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1448F94", Offset = "0x1448F94", VA = "0x1448F94")]
	private Matrix4x4 GetKeyboardObjectMatrix(Vector3 position)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x14498BC", Offset = "0x14498BC", VA = "0x14498BC")]
	public GvrKeyboard()
	{
	}
}
[Token(Token = "0x20001AB")]
public abstract class GvrKeyboardDelegateBase : MonoBehaviour
{
	[Token(Token = "0x1400000C")]
	[method: Token(Token = "0x6000ABE")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3DF0", Offset = "0x7E3DF0")]
	public abstract event EventHandler KeyboardHidden;

	[Token(Token = "0x1400000D")]
	[method: Token(Token = "0x6000AC0")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E10", Offset = "0x7E3E10")]
	public abstract event EventHandler KeyboardShown;

	[Token(Token = "0x6000AB9")]
	public abstract void OnKeyboardShow();

	[Token(Token = "0x6000ABA")]
	public abstract void OnKeyboardHide();

	[Token(Token = "0x6000ABB")]
	public abstract void OnKeyboardUpdate(string edit_text);

	[Token(Token = "0x6000ABC")]
	public abstract void OnKeyboardEnterPressed(string edit_text);

	[Token(Token = "0x6000ABD")]
	public abstract void OnKeyboardError(GvrKeyboardError errorCode);

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x14499E4", Offset = "0x14499E4", VA = "0x14499E4")]
	protected GvrKeyboardDelegateBase()
	{
	}
}
[Token(Token = "0x20001AC")]
public class GvrKeyboardIntent
{
	[Token(Token = "0x20001AD")]
	private class KeyboardCallback : AndroidJavaProxy
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xDB4364", Offset = "0xDB4364", VA = "0xDB4364")]
		internal KeyboardCallback()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xDB43E0", Offset = "0xDB43E0", VA = "0xDB43E0")]
		private void onPlayStoreResult()
		{
		}
	}

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject keyboardFragment;

	[Token(Token = "0x40009ED")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment";

	[Token(Token = "0x40009EE")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback";

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboardIntent theInstance;

	[Token(Token = "0x170001F4")]
	public static GvrKeyboardIntent Instance
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x14499EC", Offset = "0x14499EC", VA = "0x14499EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1449AE0", Offset = "0x1449AE0", VA = "0x1449AE0")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1449C44", Offset = "0x1449C44", VA = "0x1449C44")]
	public void LaunchPlayStore()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1449AD8", Offset = "0x1449AD8", VA = "0x1449AD8")]
	public GvrKeyboardIntent()
	{
	}
}
[Token(Token = "0x20001AE")]
public class KeyboardState
{
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string editorText;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal GvrKeyboardInputMode mode;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal bool isValid;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	internal bool isReady;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal Matrix4x4 worldMatrix;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x16AA9DC", Offset = "0x16AA9DC", VA = "0x16AA9DC")]
	public void CopyFrom(KeyboardState other)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x16AAA20", Offset = "0x16AAA20", VA = "0x16AAA20")]
	public KeyboardState()
	{
	}
}
[Token(Token = "0x20001AF")]
public class GvrPermissionsRequester
{
	[Token(Token = "0x20001B0")]
	public class PermissionStatus
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA30", Offset = "0x7CFA30")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA40", Offset = "0x7CFA40")]
		private bool <Granted>k__BackingField;

		[Token(Token = "0x170001F6")]
		public string Name
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xDB4784", Offset = "0xDB4784", VA = "0xDB4784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E30", Offset = "0x7E3E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xDB478C", Offset = "0xDB478C", VA = "0xDB478C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E40", Offset = "0x7E3E40")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public bool Granted
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xDB4794", Offset = "0xDB4794", VA = "0xDB4794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E50", Offset = "0x7E3E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xDB479C", Offset = "0xDB479C", VA = "0xDB479C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E60", Offset = "0x7E3E60")]
			set
			{
			}
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xDB4744", Offset = "0xDB4744", VA = "0xDB4744")]
		public PermissionStatus(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x20001B1")]
	private class PermissionsCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] permissionNames;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<PermissionStatus[]> callback;

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xDB47A8", Offset = "0xDB47A8", VA = "0xDB47A8")]
		internal PermissionsCallback(string[] requestedPermissions, Action<PermissionStatus[]> callback)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xDB483C", Offset = "0xDB483C", VA = "0xDB483C")]
		private void onRequestPermissionResult(bool allPermissionsGranted)
		{
		}
	}

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsFragment;

	[Token(Token = "0x40009F6")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment";

	[Token(Token = "0x40009F7")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback";

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrPermissionsRequester theInstance;

	[Token(Token = "0x170001F5")]
	public static GvrPermissionsRequester Instance
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x144AFBC", Offset = "0x144AFBC", VA = "0x144AFBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x144B0B0", Offset = "0x144B0B0", VA = "0x144B0B0")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x144B214", Offset = "0x144B214", VA = "0x144B214")]
	public bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x144B2F8", Offset = "0x144B2F8", VA = "0x144B2F8")]
	public bool[] HasPermissionsGranted(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x144B4D8", Offset = "0x144B4D8", VA = "0x144B4D8")]
	public bool ShouldShowRational(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x144B608", Offset = "0x144B608", VA = "0x144B608")]
	public void RequestPermissions(string[] permissionArray, Action<PermissionStatus[]> callback)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x144B0A8", Offset = "0x144B0A8", VA = "0x144B0A8")]
	public GvrPermissionsRequester()
	{
	}
}
[Token(Token = "0x20001B2")]
public class Pose3D
{
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Matrix4x4 FLIP_Z;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA50", Offset = "0x7CFA50")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA60", Offset = "0x7CFA60")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA70", Offset = "0x7CFA70")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170001F8")]
	public Vector3 Position
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x12FCE78", Offset = "0x12FCE78", VA = "0x12FCE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E70", Offset = "0x7E3E70")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x12FCE84", Offset = "0x12FCE84", VA = "0x12FCE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E80", Offset = "0x7E3E80")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x12FCE90", Offset = "0x12FCE90", VA = "0x12FCE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3E90", Offset = "0x7E3E90")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x12FCE9C", Offset = "0x12FCE9C", VA = "0x12FCE9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3EA0", Offset = "0x7E3EA0")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x12FCEA8", Offset = "0x12FCEA8", VA = "0x12FCEA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3EB0", Offset = "0x7E3EB0")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x12FCEC4", Offset = "0x12FCEC4", VA = "0x12FCEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E3EC0", Offset = "0x7E3EC0")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x12FCEE0", Offset = "0x12FCEE0", VA = "0x12FCEE0")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x12FCD50", Offset = "0x12FCD50", VA = "0x12FCD50")]
	public static Matrix4x4 FlipHandedness(Matrix4x4 matrix)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x12FCF94", Offset = "0x12FCF94", VA = "0x12FCF94")]
	public Pose3D()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x12FD014", Offset = "0x12FD014", VA = "0x12FD014")]
	public Pose3D(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x12FD164", Offset = "0x12FD164", VA = "0x12FD164")]
	public Pose3D(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x12FD094", Offset = "0x12FD094", VA = "0x12FD094")]
	protected void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x12FD1B0", Offset = "0x12FD1B0", VA = "0x12FD1B0")]
	protected void Set(Matrix4x4 matrix)
	{
	}
}
[Token(Token = "0x20001B3")]
public class MutablePose3D : Pose3D
{
	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xFEFC28", Offset = "0xFEFC28", VA = "0xFEFC28")]
	public new void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xFEFC30", Offset = "0xFEFC30", VA = "0xFEFC30")]
	public new void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xFEFC64", Offset = "0xFEFC64", VA = "0xFEFC64")]
	public void SetRightHanded(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xFEFD34", Offset = "0xFEFD34", VA = "0xFEFD34")]
	public MutablePose3D()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7CB3F4", Offset = "0x7CB3F4")]
public class GvrInfo : PropertyAttribute
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string text;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numLines;

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1447298", Offset = "0x1447298", VA = "0x1447298")]
	public GvrInfo(string text, int numLines)
	{
	}
}
[Token(Token = "0x20001B5")]
public class GvrDropdown : Dropdown
{
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject currentBlocker;

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1445ADC", Offset = "0x1445ADC", VA = "0x1445ADC", Slot = "42")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1445BA8", Offset = "0x1445BA8", VA = "0x1445BA8", Slot = "43")]
	public override void OnSubmit(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x1445B04", Offset = "0x1445B04", VA = "0x1445B04")]
	private void FixTemplateAndBlockerRaycasters()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x1445D2C", Offset = "0x1445D2C", VA = "0x1445D2C", Slot = "45")]
	protected override GameObject CreateBlocker(Canvas rootCanvas)
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1445D54", Offset = "0x1445D54", VA = "0x1445D54", Slot = "47")]
	protected override GameObject CreateDropdownList(GameObject template)
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1445BD0", Offset = "0x1445BD0", VA = "0x1445BD0")]
	private void FixRaycaster(GameObject go, bool shouldCopyProperties)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1445D90", Offset = "0x1445D90", VA = "0x1445D90")]
	private GvrPointerGraphicRaycaster GetTemplateRaycaster()
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x1445E34", Offset = "0x1445E34", VA = "0x1445E34")]
	private void CopyRaycasterProperties(GvrPointerGraphicRaycaster source, GvrPointerGraphicRaycaster dest)
	{
	}

	[Token(Token = "0x6000AF4")]
	private static T GetOrAddComponent<T>(GameObject go, out bool addedComponent) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1445F00", Offset = "0x1445F00", VA = "0x1445F00")]
	public GvrDropdown()
	{
	}
}
[Token(Token = "0x20001B6")]
public static class GvrActivityHelper
{
	[Token(Token = "0x4000A04")]
	public const string GVR_DLL_NAME = "gvr";

	[Token(Token = "0x4000A05")]
	public const string PACKAGE_UNITY_PLAYER = "com.unity3d.player.UnityPlayer";

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x14394F8", Offset = "0x14394F8", VA = "0x14394F8")]
	public static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x14396A8", Offset = "0x14396A8", VA = "0x14396A8")]
	public static AndroidJavaObject GetApplicationContext(AndroidJavaObject activity)
	{
		return null;
	}
}
[Token(Token = "0x20001B7")]
public class GvrDaydreamApi : IDisposable
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB42C", Offset = "0x7CB42C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject context;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<bool> callback;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xDB2290", Offset = "0xDB2290", VA = "0xDB2290")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xDB2298", Offset = "0xDB2298", VA = "0xDB2298")]
		internal void <CreateAsync>b__0()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB43C", Offset = "0x7CB43C")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xDB249C", Offset = "0xDB249C", VA = "0xDB249C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xDB24A4", Offset = "0xDB24A4", VA = "0xDB24A4")]
		internal void <LaunchVrHomeAsync>b__0(bool success)
		{
		}
	}

	[Token(Token = "0x4000A06")]
	private const string METHOD_CREATE = "create";

	[Token(Token = "0x4000A07")]
	private const string METHOD_LAUNCH_VR_HOMESCREEN = "launchVrHomescreen";

	[Token(Token = "0x4000A08")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x4000A09")]
	private const string PACKAGE_DAYDREAM_API = "com.google.vr.ndk.base.DaydreamApi";

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrDaydreamApi m_instance;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject m_daydreamApiObject;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaClass m_daydreamApiClass;

	[Token(Token = "0x170001FC")]
	public static AndroidJavaObject JavaInstance
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1445518", Offset = "0x1445518", VA = "0x1445518")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FD")]
	public static bool IsCreated
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x14455E8", Offset = "0x14455E8", VA = "0x14455E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1445578", Offset = "0x1445578", VA = "0x1445578")]
	private static void EnsureCreated(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1445944", Offset = "0x1445944", VA = "0x1445944", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1445990", Offset = "0x1445990", VA = "0x1445990")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E3ED0", Offset = "0x7E3ED0")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x144564C", Offset = "0x144564C", VA = "0x144564C")]
	public static void CreateAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1445A14", Offset = "0x1445A14", VA = "0x1445A14")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E3F08", Offset = "0x7E3F08")]
	public static void LaunchVrHome()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1445A1C", Offset = "0x1445A1C", VA = "0x1445A1C")]
	public static void LaunchVrHomeAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1445998", Offset = "0x1445998", VA = "0x1445998")]
	public GvrDaydreamApi()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class GvrIntent
{
	[Token(Token = "0x4000A10")]
	private const string METHOD_GET_INTENT = "getIntent";

	[Token(Token = "0x4000A11")]
	private const string METHOD_HASH_CODE = "hashCode";

	[Token(Token = "0x4000A12")]
	private const string METHOD_INTENT_GET_DATA_STRING = "getDataString";

	[Token(Token = "0x4000A13")]
	private const string METHOD_INTENT_GET_BOOLEAN_EXTRA = "getBooleanExtra";

	[Token(Token = "0x4000A14")]
	private const string EXTRA_VR_LAUNCH = "android.intent.extra.VR_LAUNCH";

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x14472D4", Offset = "0x14472D4", VA = "0x14472D4")]
	public static string GetData()
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1447658", Offset = "0x1447658", VA = "0x1447658")]
	public static bool IsLaunchedFromVr()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x14477FC", Offset = "0x14477FC", VA = "0x14477FC")]
	public static int GetIntentHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x1447438", Offset = "0x1447438", VA = "0x1447438")]
	private static AndroidJavaObject GetIntent()
	{
		return null;
	}
}
[Token(Token = "0x20001BB")]
public static class GvrMathHelpers
{
	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x144AB14", Offset = "0x144AB14", VA = "0x144AB14")]
	public static Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x144AC28", Offset = "0x144AC28", VA = "0x144AC28")]
	public static Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x144A738", Offset = "0x144A738", VA = "0x144A738")]
	public static float EaseOutCubic(float min, float max, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x144ACE0", Offset = "0x144ACE0", VA = "0x144ACE0")]
	public static Matrix4x4 ConvertFloatArrayToMatrix(float[] floatArray)
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x20001BC")]
public static class GvrUIHelpers
{
	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x12E4308", Offset = "0x12E4308", VA = "0x12E4308")]
	public static float GetMetersToCanvasScale(Transform canvasObject)
	{
		return default(float);
	}
}
[Token(Token = "0x20001BD")]
public static class GvrVRHelpers
{
	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x12E4B94", Offset = "0x12E4B94", VA = "0x12E4B94")]
	public static Vector2 GetViewportCenter()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x12E4BFC", Offset = "0x12E4BFC", VA = "0x12E4BFC")]
	public static Vector3 GetHeadForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x12E2ABC", Offset = "0x12E2ABC", VA = "0x12E2ABC")]
	public static Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x12E4C58", Offset = "0x12E4C58", VA = "0x12E4C58")]
	public static Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x12E4CB8", Offset = "0x12E4CB8", VA = "0x12E4CB8")]
	public static float GetRecommendedMaxLaserDistance(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x12E4CD8", Offset = "0x12E4CD8", VA = "0x12E4CD8")]
	public static float GetRayIntersection(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x12E4CF8", Offset = "0x12E4CF8", VA = "0x12E4CF8")]
	public static bool GetShrinkLaser(GvrBasePointer.RaycastMode mode)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001BE")]
public class GvrVideoPlayerTexture : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	public enum VideoType
	{
		[Token(Token = "0x4000A32")]
		Dash = 0,
		[Token(Token = "0x4000A33")]
		HLS = 2,
		[Token(Token = "0x4000A34")]
		Other = 3
	}

	[Token(Token = "0x20001C0")]
	public enum VideoResolution
	{
		[Token(Token = "0x4000A36")]
		Lowest = 1,
		[Token(Token = "0x4000A37")]
		_720 = 720,
		[Token(Token = "0x4000A38")]
		_1080 = 1080,
		[Token(Token = "0x4000A39")]
		_2048 = 2048,
		[Token(Token = "0x4000A3A")]
		Highest = 4096
	}

	[Token(Token = "0x20001C1")]
	public enum VideoPlayerState
	{
		[Token(Token = "0x4000A3C")]
		Idle = 1,
		[Token(Token = "0x4000A3D")]
		Preparing,
		[Token(Token = "0x4000A3E")]
		Buffering,
		[Token(Token = "0x4000A3F")]
		Ready,
		[Token(Token = "0x4000A40")]
		Ended
	}

	[Token(Token = "0x20001C2")]
	public enum VideoEvents
	{
		[Token(Token = "0x4000A42")]
		VideoReady = 1,
		[Token(Token = "0x4000A43")]
		VideoStartPlayback,
		[Token(Token = "0x4000A44")]
		VideoFormatChanged,
		[Token(Token = "0x4000A45")]
		VideoSurfaceSet,
		[Token(Token = "0x4000A46")]
		VideoSizeChanged
	}

	[Token(Token = "0x20001C3")]
	public enum StereoMode
	{
		[Token(Token = "0x4000A48")]
		NoValue = -1,
		[Token(Token = "0x4000A49")]
		Mono,
		[Token(Token = "0x4000A4A")]
		TopBottom,
		[Token(Token = "0x4000A4B")]
		LeftRight
	}

	[Token(Token = "0x20001C4")]
	private enum RenderCommand
	{
		[Token(Token = "0x4000A4D")]
		None = -1,
		[Token(Token = "0x4000A4E")]
		InitializePlayer,
		[Token(Token = "0x4000A4F")]
		UpdateVideo,
		[Token(Token = "0x4000A50")]
		RenderMono,
		[Token(Token = "0x4000A51")]
		RenderLeftEye,
		[Token(Token = "0x4000A52")]
		RenderRightEye,
		[Token(Token = "0x4000A53")]
		Shutdown
	}

	[Token(Token = "0x20001C5")]
	internal delegate void OnVideoEventCallback(IntPtr cbdata, int eventId);

	[Token(Token = "0x20001C6")]
	internal delegate void OnExceptionCallback(string type, string msg, IntPtr cbdata);

	[Serializable]
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB44C", Offset = "0x7CB44C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string, string> <>9__69_1;

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xDB4EF8", Offset = "0xDB4EF8", VA = "0xDB4EF8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xDB4F00", Offset = "0xDB4F00", VA = "0xDB4F00")]
		internal void <CreatePlayer>b__69_1(string type, string msg)
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB45C", Offset = "0x7CB45C")]
	private sealed class <>c__DisplayClass90_0
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int eventId;

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xDB4FB8", Offset = "0xDB4FB8", VA = "0xDB4FB8")]
		public <>c__DisplayClass90_0()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xDB4FC0", Offset = "0xDB4FC0", VA = "0xDB4FC0")]
		internal void <InternalOnVideoEventCallback>b__0()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB46C", Offset = "0x7CB46C")]
	private sealed class <>c__DisplayClass92_0
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string msg;

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xDB4FE4", Offset = "0xDB4FE4", VA = "0xDB4FE4")]
		public <>c__DisplayClass92_0()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xDB4FEC", Offset = "0xDB4FEC", VA = "0xDB4FEC")]
		internal void <InternalOnExceptionCallback>b__0()
		{
		}
	}

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr videoPlayerPtr;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int videoPlayerEventBase;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture initialTexture;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture surfaceTexture;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] videoMatrixRaw;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Matrix4x4 videoMatrix;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int videoMatrixPropertyId;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private long lastVideoTimestamp;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool initialized;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int texWidth;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int texHeight;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private long lastBufferedPosition;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float framecount;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer screen;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr renderEventFunction;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool playOnResume;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Action<int>> onEventCallbacks;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Action<string, string>> onExceptionCallbacks;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Queue<Action> ExecuteOnMainThread;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text statusText;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VideoType videoType;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string videoURL;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string videoContentID;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string videoProviderId;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VideoResolution initialResolution;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool adjustAspectRatio;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	public bool useSecurePath;

	[Token(Token = "0x4000A30")]
	private const string dllName = "gvrvideo";

	[Token(Token = "0x170001FE")]
	public bool VideoReady
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x12E5450", Offset = "0x12E5450", VA = "0x12E5450")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FF")]
	public long CurrentPosition
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x12E5568", Offset = "0x12E5568", VA = "0x12E5568")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x12E5678", Offset = "0x12E5678", VA = "0x12E5678")]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public long VideoDuration
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x12E5784", Offset = "0x12E5784", VA = "0x12E5784")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000201")]
	public long BufferedPosition
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x12E5894", Offset = "0x12E5894", VA = "0x12E5894")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000202")]
	public int BufferedPercentage
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x12E59A4", Offset = "0x12E59A4", VA = "0x12E59A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000203")]
	public bool IsPaused
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x12E5AB4", Offset = "0x12E5AB4", VA = "0x12E5AB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000204")]
	public VideoPlayerState PlayerState
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x12E5BD4", Offset = "0x12E5BD4", VA = "0x12E5BD4")]
		get
		{
			return default(VideoPlayerState);
		}
	}

	[Token(Token = "0x17000205")]
	public int MaxVolume
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x12E5CE4", Offset = "0x12E5CE4", VA = "0x12E5CE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000206")]
	public int CurrentVolume
	{
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x12E5DF4", Offset = "0x12E5DF4", VA = "0x12E5DF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x12E5F04", Offset = "0x12E5F04", VA = "0x12E5F04")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public StereoMode CurrentStereoMode
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x12E5F7C", Offset = "0x12E5F7C", VA = "0x12E5F7C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000208")]
	public bool HasProjection
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x12E608C", Offset = "0x12E608C", VA = "0x12E608C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000209")]
	public Renderer Screen
	{
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x12E61A4", Offset = "0x12E61A4", VA = "0x12E61A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x12E61AC", Offset = "0x12E61AC", VA = "0x12E61AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public Texture CurrentFrameTexture
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x12E6300", Offset = "0x12E6300", VA = "0x12E6300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020B")]
	public int Width
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x12E6308", Offset = "0x12E6308", VA = "0x12E6308")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020C")]
	public int Height
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x12E6310", Offset = "0x12E6310", VA = "0x12E6310")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020D")]
	public float AspectRatio
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x12E6318", Offset = "0x12E6318", VA = "0x12E6318")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x12E633C", Offset = "0x12E633C", VA = "0x12E633C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x12E63E4", Offset = "0x12E63E4", VA = "0x12E63E4")]
	private void CreatePlayer()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x12E69C0", Offset = "0x12E69C0", VA = "0x12E69C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x12E6B04", Offset = "0x12E6B04", VA = "0x12E6B04")]
	public void SetDisplayTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x12E6C10", Offset = "0x12E6C10", VA = "0x12E6C10")]
	public void CleanupVideo()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x12E6E3C", Offset = "0x12E6E3C", VA = "0x12E6E3C")]
	public void ReInitializeVideo()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x12E722C", Offset = "0x12E722C", VA = "0x12E722C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x12E7230", Offset = "0x12E7230", VA = "0x12E7230")]
	private void OnApplicationPause(bool bPause)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x12E73A4", Offset = "0x12E73A4", VA = "0x12E73A4")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x12E7954", Offset = "0x12E7954", VA = "0x12E7954")]
	private void OnRestartVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x12E7AC4", Offset = "0x12E7AC4", VA = "0x12E7AC4")]
	public void RestartVideo()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x12E5F08", Offset = "0x12E5F08", VA = "0x12E5F08")]
	public void SetCurrentVolume(int val)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x12E6F00", Offset = "0x12E6F00", VA = "0x12E6F00")]
	public bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x12E7F98", Offset = "0x12E7F98", VA = "0x12E7F98")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x12E80BC", Offset = "0x12E80BC", VA = "0x12E80BC")]
	public bool Pause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x12E819C", Offset = "0x12E819C", VA = "0x12E819C")]
	private void AdjustAspectRatio()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x12E8254", Offset = "0x12E8254", VA = "0x12E8254")]
	private void UpdateStatusText()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x12E7E80", Offset = "0x12E7E80", VA = "0x12E7E80")]
	private void IssuePlayerEvent(RenderCommand evt)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x12E86C0", Offset = "0x12E86C0", VA = "0x12E86C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x12E7A54", Offset = "0x12E7A54", VA = "0x12E7A54")]
	public void RemoveOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x12E6730", Offset = "0x12E6730", VA = "0x12E6730")]
	public void SetOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x12E8AA4", Offset = "0x12E8AA4", VA = "0x12E8AA4")]
	internal void FireVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x12E4D04", Offset = "0x12E4D04", VA = "0x12E4D04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7E3F40", Offset = "0x7E3F40")]
	private static void InternalOnVideoEventCallback(IntPtr cbdata, int eventId)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x12E6878", Offset = "0x12E6878", VA = "0x12E6878")]
	public void SetOnExceptionCallback(Action<string, string> callback)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x12E50A8", Offset = "0x12E50A8", VA = "0x12E50A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7E3FA0", Offset = "0x7E3FA0")]
	private static void InternalOnExceptionCallback(string type, string msg, IntPtr cbdata)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x12E8D90", Offset = "0x12E8D90", VA = "0x12E8D90")]
	internal void FireOnException(string type, string msg)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x12E89E4", Offset = "0x12E89E4", VA = "0x12E89E4")]
	internal static IntPtr ToIntPtr(object obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x12E7BEC", Offset = "0x12E7BEC", VA = "0x12E7BEC")]
	internal string ProcessURL()
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x12E864C", Offset = "0x12E864C", VA = "0x12E864C")]
	private static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x12E9074", Offset = "0x12E9074", VA = "0x12E9074")]
	private static extern void SetExternalTextures(IntPtr videoPlayerPtr, int[] texIds, int size, int w, int h);

	[PreserveSig]
	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x12E912C", Offset = "0x12E912C", VA = "0x12E912C")]
	private static extern IntPtr GetRenderableTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x12E78D8", Offset = "0x12E78D8", VA = "0x12E78D8")]
	private static extern int GetExternalSurfaceTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x12E88D0", Offset = "0x12E88D0", VA = "0x12E88D0")]
	private static extern void GetVideoMatrix(IntPtr videoPlayerPtr, float[] videoMatrix);

	[PreserveSig]
	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x12E8968", Offset = "0x12E8968", VA = "0x12E8968")]
	private static extern long GetVideoTimestampNs(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x12E6640", Offset = "0x12E6640", VA = "0x12E6640")]
	public static extern IntPtr CreateVideoPlayer();

	[PreserveSig]
	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x12E6DC0", Offset = "0x12E6DC0", VA = "0x12E6DC0")]
	public static extern void DestroyVideoPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x12E66B4", Offset = "0x12E66B4", VA = "0x12E66B4")]
	private static extern int GetVideoPlayerEventBase(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x12E7C54", Offset = "0x12E7C54", VA = "0x12E7C54")]
	private static extern IntPtr InitVideoPlayer(IntPtr videoPlayerPtr, int videoType, string videoURL, string contentID, string providerId, bool useSecurePath, bool useExisting);

	[PreserveSig]
	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x12E7DF0", Offset = "0x12E7DF0", VA = "0x12E7DF0")]
	private static extern void SetInitialResolution(IntPtr videoPlayerPtr, int initialResolution);

	[PreserveSig]
	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x12E5C68", Offset = "0x12E5C68", VA = "0x12E5C68")]
	private static extern int GetPlayerState(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x12E77E4", Offset = "0x12E77E4", VA = "0x12E77E4")]
	private static extern int GetWidth(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x12E785C", Offset = "0x12E785C", VA = "0x12E785C")]
	private static extern int GetHeight(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x12E7328", Offset = "0x12E7328", VA = "0x12E7328")]
	private static extern int PlayVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x12E6A88", Offset = "0x12E6A88", VA = "0x12E6A88")]
	private static extern int PauseVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x12E54E4", Offset = "0x12E54E4", VA = "0x12E54E4")]
	private static extern bool IsVideoReady(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x12E5B50", Offset = "0x12E5B50", VA = "0x12E5B50")]
	private static extern bool IsVideoPaused(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x12E5818", Offset = "0x12E5818", VA = "0x12E5818")]
	private static extern long GetDuration(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x12E5928", Offset = "0x12E5928", VA = "0x12E5928")]
	private static extern long GetBufferedPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x12E55FC", Offset = "0x12E55FC", VA = "0x12E55FC")]
	private static extern long GetCurrentPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x12E56F4", Offset = "0x12E56F4", VA = "0x12E56F4")]
	private static extern void SetCurrentPosition(IntPtr videoPlayerPtr, long pos);

	[PreserveSig]
	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x12E5A38", Offset = "0x12E5A38", VA = "0x12E5A38")]
	private static extern int GetBufferedPercentage(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x12E5D78", Offset = "0x12E5D78", VA = "0x12E5D78")]
	private static extern int GetMaxVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x12E5E88", Offset = "0x12E5E88", VA = "0x12E5E88")]
	private static extern int GetCurrentVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x12E7D60", Offset = "0x12E7D60", VA = "0x12E7D60")]
	private static extern void SetCurrentVolume(IntPtr videoPlayerPtr, int value);

	[PreserveSig]
	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x12E6010", Offset = "0x12E6010", VA = "0x12E6010")]
	private static extern int GetStereoMode(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x12E6120", Offset = "0x12E6120", VA = "0x12E6120")]
	private static extern bool HasProjectionData(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x12E91A8", Offset = "0x12E91A8", VA = "0x12E91A8")]
	private static extern bool SetVideoPlayerSupportClassname(IntPtr videoPlayerPtr, string classname);

	[PreserveSig]
	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x12E9258", Offset = "0x12E9258", VA = "0x12E9258")]
	private static extern IntPtr GetRawPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x12E8A04", Offset = "0x12E8A04", VA = "0x12E8A04")]
	private static extern void SetOnVideoEventCallback(IntPtr videoPlayerPtr, OnVideoEventCallback callback, IntPtr callback_arg);

	[PreserveSig]
	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x12E8CF0", Offset = "0x12E8CF0", VA = "0x12E8CF0")]
	private static extern void SetOnExceptionCallback(IntPtr videoPlayerPtr, OnExceptionCallback callback, IntPtr callback_arg);

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x12E92D4", Offset = "0x12E92D4", VA = "0x12E92D4")]
	public GvrVideoPlayerTexture()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x12E9374", Offset = "0x12E9374", VA = "0x12E9374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4000", Offset = "0x7E4000")]
	private void <CreatePlayer>b__69_0(int eventId)
	{
	}
}
[Token(Token = "0x20001CA")]
public class HurtFlashEffect : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB47C", Offset = "0x7CB47C")]
	private sealed class <FlashRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HurtFlashEffect <>4__this;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <fillPhase>5__2;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <fillColor>5__3;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__4;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xDB5DDC", Offset = "0xDB5DDC", VA = "0xDB5DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xDB5E24", Offset = "0xDB5E24", VA = "0xDB5E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xDB5BF4", Offset = "0xDB5BF4", VA = "0xDB5BF4")]
		[DebuggerHidden]
		public <FlashRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xDB5C20", Offset = "0xDB5C20", VA = "0xDB5C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xDB5C24", Offset = "0xDB5C24", VA = "0xDB5C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xDB5DE4", Offset = "0xDB5DE4", VA = "0xDB5DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5B")]
	private const int DefaultFlashCount = 3;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flashCount;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color flashColor;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CFA80", Offset = "0x7CFA80")]
	public float interval;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fillPhaseProperty;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string fillColorProperty;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x16A0864", Offset = "0x16A0864", VA = "0x16A0864")]
	public void Flash()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x16A0964", Offset = "0x16A0964", VA = "0x16A0964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4010", Offset = "0x7E4010")]
	private IEnumerator FlashRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x16A09D0", Offset = "0x16A09D0", VA = "0x16A09D0")]
	public HurtFlashEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class SpineSkeletonFlipBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool flipX;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool flipY;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xE78D70", Offset = "0xE78D70", VA = "0xE78D70")]
	public SpineSkeletonFlipBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CD")]
public class SpineSkeletonFlipClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpineSkeletonFlipBehaviour template;

	[Token(Token = "0x17000210")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE78D78", Offset = "0xE78D78", VA = "0xE78D78", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xE78D80", Offset = "0xE78D80", VA = "0xE78D80", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xE78E34", Offset = "0xE78E34", VA = "0xE78E34")]
	public SpineSkeletonFlipClip()
	{
	}
}
[Token(Token = "0x20001CE")]
public class SafeFrame : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform frameGroundTransform;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xD9D708", Offset = "0xD9D708", VA = "0xD9D708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xD9D7F8", Offset = "0xD9D7F8", VA = "0xD9D7F8")]
	public void MarkFrameGrabbed()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xD9D89C", Offset = "0xD9D89C", VA = "0xD9D89C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xD9D8A0", Offset = "0xD9D8A0", VA = "0xD9D8A0")]
	public SafeFrame()
	{
	}
}
[Token(Token = "0x20001CF")]
public class SandSButtonMonitor : MonoBehaviour
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAndSManager sAndSManager;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xD9F39C", Offset = "0xD9F39C", VA = "0xD9F39C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xD9F42C", Offset = "0xD9F42C", VA = "0xD9F42C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xD9F430", Offset = "0xD9F430", VA = "0xD9F430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xD9F434", Offset = "0xD9F434", VA = "0xD9F434")]
	public SandSButtonMonitor()
	{
	}
}
[Token(Token = "0x20001D0")]
public class SandSOn : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAndSManager sandsManager;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thisLetter;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thisLetterAudio;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handTouching;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject textForScreen;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xD9F43C", Offset = "0xD9F43C", VA = "0xD9F43C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xD9F724", Offset = "0xD9F724", VA = "0xD9F724")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xD9F728", Offset = "0xD9F728", VA = "0xD9F728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD9F760", Offset = "0xD9F760", VA = "0xD9F760")]
	public SandSOn()
	{
	}
}
[Token(Token = "0x20001D1")]
public class SandSSCodeButton : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB48C", Offset = "0x7CB48C")]
	private sealed class <letterLengthWait>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SandSSCodeButton <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xCC14E4", Offset = "0xCC14E4", VA = "0xCC14E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xCC152C", Offset = "0xCC152C", VA = "0xCC152C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xCC134C", Offset = "0xCC134C", VA = "0xCC134C")]
		[DebuggerHidden]
		public <letterLengthWait>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xCC1378", Offset = "0xCC1378", VA = "0xCC1378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xCC137C", Offset = "0xCC137C", VA = "0xCC137C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xCC14EC", Offset = "0xCC14EC", VA = "0xCC14EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAndSManager sandsManager;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thisLetter;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thisLetterAudio;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handTouching;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject textForScreen;

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD9F768", Offset = "0xD9F768", VA = "0xD9F768")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD9F9F8", Offset = "0xD9F9F8", VA = "0xD9F9F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E40C0", Offset = "0x7E40C0")]
	private IEnumerator letterLengthWait()
	{
		return null;
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xD9FA64", Offset = "0xD9FA64", VA = "0xD9FA64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xD9FAF8", Offset = "0xD9FAF8", VA = "0xD9FAF8")]
	public SandSSCodeButton()
	{
	}
}
[Token(Token = "0x20001D3")]
public class PieceGoBack : MonoBehaviour
{
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB49C", Offset = "0x7CB49C")]
	private sealed class <MoveDonePieces>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieceGoBack <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xDBF0A4", Offset = "0xDBF0A4", VA = "0xDBF0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xDBF0EC", Offset = "0xDBF0EC", VA = "0xDBF0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xDBEF54", Offset = "0xDBEF54", VA = "0xDBEF54")]
		[DebuggerHidden]
		public <MoveDonePieces>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xDBEF80", Offset = "0xDBEF80", VA = "0xDBEF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xDBEF84", Offset = "0xDBEF84", VA = "0xDBEF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xDBF0AC", Offset = "0xDBF0AC", VA = "0xDBF0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform returnSpot;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject correctSpot;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool thisPieceIn;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool imDone;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject whatImCollidingWith;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pieceInTracker;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int pieceNumber;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xFFCBA4", Offset = "0xFFCBA4", VA = "0xFFCBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xFFCBD0", Offset = "0xFFCBD0", VA = "0xFFCBD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4170", Offset = "0x7E4170")]
	private IEnumerator MoveDonePieces()
	{
		return null;
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xFFCC3C", Offset = "0xFFCC3C", VA = "0xFFCC3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xFFCCC8", Offset = "0xFFCCC8", VA = "0xFFCCC8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xFFCD34", Offset = "0xFFCD34", VA = "0xFFCD34")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xFFCD38", Offset = "0xFFCD38", VA = "0xFFCD38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xFFCFB0", Offset = "0xFFCFB0", VA = "0xFFCFB0")]
	public PieceGoBack()
	{
	}
}
[Token(Token = "0x20001D5")]
public class PieceTracker : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int piecesInPlace;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool doItOnce;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool doItOnceAgain;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector endSequence;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xFFCFB8", Offset = "0xFFCFB8", VA = "0xFFCFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xFFCFBC", Offset = "0xFFCFBC", VA = "0xFFCFBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xFFD090", Offset = "0xFFD090", VA = "0xFFD090")]
	public PieceTracker()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SetPGlovePos : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pGlovePos;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xDA1154", Offset = "0xDA1154", VA = "0xDA1154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xDA11D4", Offset = "0xDA11D4", VA = "0xDA11D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xDA11D8", Offset = "0xDA11D8", VA = "0xDA11D8")]
	public SetPGlovePos()
	{
	}
}
[Token(Token = "0x20001D7")]
public class SmartPhoneManager : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4AC", Offset = "0x7CB4AC")]
	private sealed class <QuitDelay>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xCC584C", Offset = "0xCC584C", VA = "0xCC584C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xCC5894", Offset = "0xCC5894", VA = "0xCC5894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xCC5784", Offset = "0xCC5784", VA = "0xCC5784")]
		[DebuggerHidden]
		public <QuitDelay>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xCC57B0", Offset = "0xCC57B0", VA = "0xCC57B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xCC57B4", Offset = "0xCC57B4", VA = "0xCC57B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xCC5854", Offset = "0xCC5854", VA = "0xCC5854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4BC", Offset = "0x7CB4BC")]
	private sealed class <RingPsychicHotline>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xCC5CAC", Offset = "0xCC5CAC", VA = "0xCC5CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xCC5CF4", Offset = "0xCC5CF4", VA = "0xCC5CF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xCC589C", Offset = "0xCC589C", VA = "0xCC589C")]
		[DebuggerHidden]
		public <RingPsychicHotline>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xCC58C8", Offset = "0xCC58C8", VA = "0xCC58C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xCC58CC", Offset = "0xCC58CC", VA = "0xCC58CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xCC5CB4", Offset = "0xCC5CB4", VA = "0xCC5CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4CC", Offset = "0x7CB4CC")]
	private sealed class <WaitToTurnOffPhone>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToWaity;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xCC5E54", Offset = "0xCC5E54", VA = "0xCC5E54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xCC5E9C", Offset = "0xCC5E9C", VA = "0xCC5E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xCC5CFC", Offset = "0xCC5CFC", VA = "0xCC5CFC")]
		[DebuggerHidden]
		public <WaitToTurnOffPhone>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xCC5D28", Offset = "0xCC5D28", VA = "0xCC5D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xCC5D2C", Offset = "0xCC5D2C", VA = "0xCC5D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xCC5E5C", Offset = "0xCC5E5C", VA = "0xCC5E5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4DC", Offset = "0x7CB4DC")]
	private sealed class <InitialPhoneCall>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xCC5734", Offset = "0xCC5734", VA = "0xCC5734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xCC577C", Offset = "0xCC577C", VA = "0xCC577C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xCC55BC", Offset = "0xCC55BC", VA = "0xCC55BC")]
		[DebuggerHidden]
		public <InitialPhoneCall>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xCC55E8", Offset = "0xCC55E8", VA = "0xCC55E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xCC55EC", Offset = "0xCC55EC", VA = "0xCC55EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xCC573C", Offset = "0xCC573C", VA = "0xCC573C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4EC", Offset = "0x7CB4EC")]
	private sealed class <IncomingPhoneRing>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <keepGoing>5__2;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xCC5228", Offset = "0xCC5228", VA = "0xCC5228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xCC5270", Offset = "0xCC5270", VA = "0xCC5270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xCC5138", Offset = "0xCC5138", VA = "0xCC5138")]
		[DebuggerHidden]
		public <IncomingPhoneRing>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xCC5164", Offset = "0xCC5164", VA = "0xCC5164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xCC5168", Offset = "0xCC5168", VA = "0xCC5168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xCC5230", Offset = "0xCC5230", VA = "0xCC5230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB4FC", Offset = "0x7CB4FC")]
	private sealed class <InitialCallAndEnd>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmartPhoneManager <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xCC556C", Offset = "0xCC556C", VA = "0xCC556C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xCC55B4", Offset = "0xCC55B4", VA = "0xCC55B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xCC5278", Offset = "0xCC5278", VA = "0xCC5278")]
		[DebuggerHidden]
		public <InitialCallAndEnd>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xCC52A4", Offset = "0xCC52A4", VA = "0xCC52A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xCC52A8", Offset = "0xCC52A8", VA = "0xCC52A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xCC5574", Offset = "0xCC5574", VA = "0xCC5574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource phoneSpeaker;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource phoneSpeakerTalker;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool testingGame;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lockScreen;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject blackScreen;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject homeScreen;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dialScreen;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject pauseMusicScreen;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject musicScreen;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject snakeScreen;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject incomingCallScreen;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject infoScreen;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject callActiveScreen;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject callActiveScreenNoHangUp;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject textScreen;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject quitrScreen;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject languageScreen;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject hintScreen;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject snakeHead;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] snakeButtons;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject unlockButton;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] dialButtons;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] homeButtons;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject theHomeButton;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text dialText;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text phoneCalledText;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text incomingCallText;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int phoneNumberCounter;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string tempPhoneNumber;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip[] dialSounds;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip busySignal;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioClip incomingRing;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip outgoingRing;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip[] hintClips;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip initialCall;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool musicPlaying;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool musicPlaysOnPhone;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text songNamePlayScreen;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text songNamePauseScreen;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioSource musicSpeaker;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip[] officeSongs;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int officeSongCounter;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool canPressButton;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool phoneOn;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject sceneChanger;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool endGameCall;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public MusicEndOffice musicEndOffice;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool hintStart;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip hintStartHint;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Coroutine waitToTurnOff;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Coroutine ringTheHotline;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Coroutine keepRinging;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public PhraseAsset[] phraseAssets;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public PhraseAsset phraseAssetStartHint;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PhraseAsset phraseAssetStartSecretary;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhraseAsset phraseAssetEndSecretary;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject roboCaption;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject subOnLine;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject subOffLine;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject subButtons;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject hintCancelButton;

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x127C3B8", Offset = "0x127C3B8", VA = "0x127C3B8")]
	public void hintHangUpPressed()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x127C434", Offset = "0x127C434", VA = "0x127C434")]
	public void TurnPhoneOn()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x127CB10", Offset = "0x127CB10", VA = "0x127CB10")]
	public void UnlockPhone()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x127CBF0", Offset = "0x127CBF0", VA = "0x127CBF0")]
	public void phoneIconPress()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x127CE34", Offset = "0x127CE34", VA = "0x127CE34")]
	public void textIconPress()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x127CEA4", Offset = "0x127CEA4", VA = "0x127CEA4")]
	public void snakeIconPress()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x127CF14", Offset = "0x127CF14", VA = "0x127CF14")]
	public void musicIconPress()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x127CF94", Offset = "0x127CF94", VA = "0x127CF94")]
	public void infoIconPress()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x127D004", Offset = "0x127D004", VA = "0x127D004")]
	public void pauseButtonPress()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x127D06C", Offset = "0x127D06C", VA = "0x127D06C")]
	public void quitrIconPress()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x127D0DC", Offset = "0x127D0DC", VA = "0x127D0DC")]
	public void languageIconPress()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x127D258", Offset = "0x127D258", VA = "0x127D258")]
	public void hintIconPress()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x127D348", Offset = "0x127D348", VA = "0x127D348")]
	public void mainMenuPress()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x127D434", Offset = "0x127D434", VA = "0x127D434")]
	public void quitMenuPress()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x127D518", Offset = "0x127D518", VA = "0x127D518")]
	public void EnglishPress()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x127D6FC", Offset = "0x127D6FC", VA = "0x127D6FC")]
	public void ChinesePress()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x127D890", Offset = "0x127D890", VA = "0x127D890")]
	public void SpanishPress()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x127DA24", Offset = "0x127DA24", VA = "0x127DA24")]
	public void FrenchPress()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x127DBB8", Offset = "0x127DBB8", VA = "0x127DBB8")]
	public void GermanPress()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x127DD4C", Offset = "0x127DD4C", VA = "0x127DD4C")]
	public void ItalianPress()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x127DEE0", Offset = "0x127DEE0", VA = "0x127DEE0")]
	public void JapanesePress()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x127E074", Offset = "0x127E074", VA = "0x127E074")]
	public void KoreanPress()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x127E208", Offset = "0x127E208", VA = "0x127E208")]
	public void SubOn()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x127E2B8", Offset = "0x127E2B8", VA = "0x127E2B8")]
	public void SubOff()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x127D4BC", Offset = "0x127D4BC", VA = "0x127D4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4220", Offset = "0x7E4220")]
	private IEnumerator QuitDelay()
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x127E368", Offset = "0x127E368", VA = "0x127E368")]
	public void playButtonPress()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x127E3D4", Offset = "0x127E3D4", VA = "0x127E3D4")]
	public void rewindButtonPress()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x127E430", Offset = "0x127E430", VA = "0x127E430")]
	public void skipButtonPress()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x127E634", Offset = "0x127E634", VA = "0x127E634")]
	public void onePressed()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x127E8D8", Offset = "0x127E8D8", VA = "0x127E8D8")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x127E994", Offset = "0x127E994", VA = "0x127E994")]
	public void threePressed()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x127EA50", Offset = "0x127EA50", VA = "0x127EA50")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x127EAFC", Offset = "0x127EAFC", VA = "0x127EAFC")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x127EBA8", Offset = "0x127EBA8", VA = "0x127EBA8")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x127EC54", Offset = "0x127EC54", VA = "0x127EC54")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x127ED00", Offset = "0x127ED00", VA = "0x127ED00")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x127EDAC", Offset = "0x127EDAC", VA = "0x127EDAC")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x127EE58", Offset = "0x127EE58", VA = "0x127EE58")]
	public void starPressed()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x127EF04", Offset = "0x127EF04", VA = "0x127EF04")]
	public void zeroPressed()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x127EFB0", Offset = "0x127EFB0", VA = "0x127EFB0")]
	public void poundPressed()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x127F05C", Offset = "0x127F05C", VA = "0x127F05C")]
	public void xPressed()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x127F0D0", Offset = "0x127F0D0", VA = "0x127F0D0")]
	public void callPressed()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x127F288", Offset = "0x127F288", VA = "0x127F288")]
	public void answerPressed()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x127F3AC", Offset = "0x127F3AC", VA = "0x127F3AC")]
	public void hangUpPressed()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x127F1D0", Offset = "0x127F1D0", VA = "0x127F1D0")]
	public void checkPhoneNumber()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x127CA64", Offset = "0x127CA64", VA = "0x127CA64")]
	public void turnOnHomeColliders()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x127CCE0", Offset = "0x127CCE0", VA = "0x127CCE0")]
	public void turnOffHomeColliders()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x127CD8C", Offset = "0x127CD8C", VA = "0x127CD8C")]
	public void turnOnDialColliders()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x127C9BC", Offset = "0x127C9BC", VA = "0x127C9BC")]
	public void turnOffDialColliders()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x127E6EC", Offset = "0x127E6EC", VA = "0x127E6EC")]
	public void adjustPhoneNumber(string numberDialed)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x127F48C", Offset = "0x127F48C", VA = "0x127F48C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x127F620", Offset = "0x127F620", VA = "0x127F620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x127D2DC", Offset = "0x127D2DC", VA = "0x127D2DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4280", Offset = "0x7E4280")]
	private IEnumerator RingPsychicHotline()
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x127C76C", Offset = "0x127C76C", VA = "0x127C76C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E42E0", Offset = "0x7E42E0")]
	private IEnumerator WaitToTurnOffPhone(float timeToWaity)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x127F548", Offset = "0x127F548", VA = "0x127F548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4340", Offset = "0x7E4340")]
	private IEnumerator InitialPhoneCall()
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x127F5B4", Offset = "0x127F5B4", VA = "0x127F5B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E43A0", Offset = "0x7E43A0")]
	private IEnumerator IncomingPhoneRing()
	{
		return null;
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x127F340", Offset = "0x127F340", VA = "0x127F340")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4400", Offset = "0x7E4400")]
	private IEnumerator InitialCallAndEnd()
	{
		return null;
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x127F624", Offset = "0x127F624", VA = "0x127F624")]
	public SmartPhoneManager()
	{
	}
}
[Token(Token = "0x20001DE")]
public class Snake : MonoBehaviour
{
	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xChange;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yChange;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tempValue;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tempYValue;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string directionOfSnake;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool gameStarted;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SmartPhoneManager smartPhoneManager;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject snakeFoodPrefab;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject snakeFoodMade;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform snakeFoodParent;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float xFoodSpawn;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float yFoodSpawn;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] allSnakeFoods;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Transform> tail;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool snakeAte;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject tailPrefab;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x12814E4", Offset = "0x12814E4", VA = "0x12814E4")]
	private void Move()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x12819C8", Offset = "0x12819C8", VA = "0x12819C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1281B4C", Offset = "0x1281B4C", VA = "0x1281B4C")]
	public void SpawnSnakeFood()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1281C60", Offset = "0x1281C60", VA = "0x1281C60")]
	public void LeftPushed()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1281CDC", Offset = "0x1281CDC", VA = "0x1281CDC")]
	public void RightPushed()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x1281D58", Offset = "0x1281D58", VA = "0x1281D58")]
	public void UpPushed()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x1281DD4", Offset = "0x1281DD4", VA = "0x1281DD4")]
	public void DownPushed()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x127C7E8", Offset = "0x127C7E8", VA = "0x127C7E8")]
	public void RestartTheGame()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1281E50", Offset = "0x1281E50", VA = "0x1281E50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1281EB8", Offset = "0x1281EB8", VA = "0x1281EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1281EBC", Offset = "0x1281EBC", VA = "0x1281EBC")]
	public Snake()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ImageFade : MonoBehaviour
{
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimum;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximum;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startTime;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer sprite;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x16A2810", Offset = "0x16A2810", VA = "0x16A2810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x16A2838", Offset = "0x16A2838", VA = "0x16A2838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x16A28C8", Offset = "0x16A28C8", VA = "0x16A28C8")]
	public ImageFade()
	{
	}
}
[Token(Token = "0x20001E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB50C", Offset = "0x7CB50C")]
public class ImageFadeAndBlink : MonoBehaviour
{
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimum;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximum;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startTime;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool startToFade;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer sprite;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer sprite2;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip impact;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool playnow;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audio;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x16A28DC", Offset = "0x16A28DC", VA = "0x16A28DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x16A2984", Offset = "0x16A2984", VA = "0x16A2984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x16A2D24", Offset = "0x16A2D24", VA = "0x16A2D24")]
	public ImageFadeAndBlink()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Target;

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xFEF390", Offset = "0xFEF390", VA = "0xFEF390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xFEF3D8", Offset = "0xFEF3D8", VA = "0xFEF3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xFEF4C4", Offset = "0xFEF4C4", VA = "0xFEF4C4")]
	public Move()
	{
	}
}
[Token(Token = "0x20001E2")]
public class StartAudioTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource robotVoiceSpot;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] robolines;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhraseAsset[] phraseAssets;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject roboCaption;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoboManager roboManager;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int howManyEnables;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xE7B34C", Offset = "0xE7B34C", VA = "0xE7B34C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xE7B4BC", Offset = "0xE7B4BC", VA = "0xE7B4BC")]
	public StartAudioTimelineTrigger()
	{
	}
}
[Token(Token = "0x20001E3")]
public class StartTimelineTrigger : MonoBehaviour
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int howManyEnables;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robot;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject corey;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource backgroundMusic;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text muteText;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gunStand;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayableDirector startSequencePlayable;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GamesManager gamesManager;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particleObject;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource electricLittleB;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xE7BB00", Offset = "0xE7BB00", VA = "0xE7BB00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xE7BDCC", Offset = "0xE7BDCC", VA = "0xE7BDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xE7BDD0", Offset = "0xE7BDD0", VA = "0xE7BDD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xE7BDD4", Offset = "0xE7BDD4", VA = "0xE7BDD4")]
	public StartTimelineTrigger()
	{
	}
}
[Token(Token = "0x20001E4")]
public class SubtitleDisplay : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB56C", Offset = "0x7CB56C")]
	private sealed class <DisplayText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitleDisplay <>4__this;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <remain>5__2;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xCC76B8", Offset = "0xCC76B8", VA = "0xCC76B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xCC7700", Offset = "0xCC7700", VA = "0xCC7700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xCC73D0", Offset = "0xCC73D0", VA = "0xCC73D0")]
		[DebuggerHidden]
		public <DisplayText>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xCC73FC", Offset = "0xCC73FC", VA = "0xCC73FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCC7400", Offset = "0xCC7400", VA = "0xCC7400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCC76C0", Offset = "0xCC76C0", VA = "0xCC76C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI TextField;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent OnSubtitleStart;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent OnSubtitleEnd;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent OnPause;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent OnUnpause;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MaxCharCount;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float LineTimePerChar;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool subs;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool showingSubs;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool paused;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xE7D720", Offset = "0xE7D720", VA = "0xE7D720")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xE7D724", Offset = "0xE7D724", VA = "0xE7D724")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7E4640", Offset = "0x7E4640")]
	private void Test()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xE7D800", Offset = "0xE7D800", VA = "0xE7D800")]
	private void Display(string text)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xE7D788", Offset = "0xE7D788", VA = "0xE7D788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4678", Offset = "0x7E4678")]
	private IEnumerator DisplayText(string text)
	{
		return null;
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xE7D848", Offset = "0xE7D848", VA = "0xE7D848")]
	private void Pause(bool pause)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xE7D890", Offset = "0xE7D890", VA = "0xE7D890")]
	public SubtitleDisplay()
	{
	}
}
[Token(Token = "0x20001E6")]
public class SwitchFloor : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB57C", Offset = "0x7CB57C")]
	private sealed class <FadeTo>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchFloor <>4__this;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aValue;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float aTime;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alpha>5__2;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xCC78A8", Offset = "0xCC78A8", VA = "0xCC78A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xCC78F0", Offset = "0xCC78F0", VA = "0xCC78F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xCC7708", Offset = "0xCC7708", VA = "0xCC7708")]
		[DebuggerHidden]
		public <FadeTo>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xCC7734", Offset = "0xCC7734", VA = "0xCC7734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xCC7738", Offset = "0xCC7738", VA = "0xCC7738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xCC78B0", Offset = "0xCC78B0", VA = "0xCC78B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xE7DC50", Offset = "0xE7DC50", VA = "0xE7DC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4728", Offset = "0x7E4728")]
	private IEnumerator FadeTo(float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xE7DCD0", Offset = "0xE7DCD0", VA = "0xE7DCD0")]
	public SwitchFloor()
	{
	}
}
[Token(Token = "0x20001E8")]
public class SwitchWall : MonoBehaviour
{
	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xE7DCD8", Offset = "0xE7DCD8", VA = "0xE7DCD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xE7DCDC", Offset = "0xE7DCDC", VA = "0xE7DCDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xE7DCE0", Offset = "0xE7DCE0", VA = "0xE7DCE0")]
	public SwitchWall()
	{
	}
}
[Token(Token = "0x20001E9")]
public class TVManager : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB58C", Offset = "0x7CB58C")]
	private sealed class <ChangeThatChannel>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TVManager <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0xCC7BB4", Offset = "0xCC7BB4", VA = "0xCC7BB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xCC7BFC", Offset = "0xCC7BFC", VA = "0xCC7BFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xCC78F8", Offset = "0xCC78F8", VA = "0xCC78F8")]
		[DebuggerHidden]
		public <ChangeThatChannel>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xCC7924", Offset = "0xCC7924", VA = "0xCC7924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCC7928", Offset = "0xCC7928", VA = "0xCC7928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCC7BBC", Offset = "0xCC7BBC", VA = "0xCC7BBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB59C", Offset = "0x7CB59C")]
	private sealed class <WaitToChangeChannel>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TVManager <>4__this;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xCC8084", Offset = "0xCC8084", VA = "0xCC8084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xCC80CC", Offset = "0xCC80CC", VA = "0xCC80CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xCC7FB0", Offset = "0xCC7FB0", VA = "0xCC7FB0")]
		[DebuggerHidden]
		public <WaitToChangeChannel>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xCC7FDC", Offset = "0xCC7FDC", VA = "0xCC7FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCC7FE0", Offset = "0xCC7FE0", VA = "0xCC7FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCC808C", Offset = "0xCC808C", VA = "0xCC808C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5AC", Offset = "0x7CB5AC")]
	private sealed class <EndRoomRoutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TVManager <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xCC7F60", Offset = "0xCC7F60", VA = "0xCC7F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0xCC7FA8", Offset = "0xCC7FA8", VA = "0xCC7FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCC7C04", Offset = "0xCC7C04", VA = "0xCC7C04")]
		[DebuggerHidden]
		public <EndRoomRoutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCC7C30", Offset = "0xCC7C30", VA = "0xCC7C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCC7C34", Offset = "0xCC7C34", VA = "0xCC7C34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCC7F68", Offset = "0xCC7F68", VA = "0xCC7F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material staticMat;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material offMat;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material powerLightGreen;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material powerLightRed;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject screenObject;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int tvChannel;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool tvOnOff;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject remoteControl;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject remotePowerLight;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject tvPowerLight;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string channelInput;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text screenText;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool canChangeChannel;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string currentChannel;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject buttonMonitor;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool canPressButton;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float currentVolume;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool mutedTV;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine waitToChange;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine changeItUpChange;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MediaPlayer.FileLocation m_videoLocation;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MediaPlayer mp;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer videoScreenRender;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject remoteButtonMonitor;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LightManager lightManager;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject sceneChange;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject robotTransform;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform endRobotTransform;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource leftSpeaker;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource rightSpeaker;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoomBoxManager boomBoxManager;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ScreenFader fader;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private TextSynchronizer textSynchronizer;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PhraseAsset coreyTVTalk;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject coreyCaption;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xE7DCE8", Offset = "0xE7DCE8", VA = "0xE7DCE8")]
	public void TurnTVOnOff()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xE7DE30", Offset = "0xE7DE30", VA = "0xE7DE30")]
	public void TurnOnTV()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xE7DD08", Offset = "0xE7DD08", VA = "0xE7DD08")]
	public void TurnOffTV()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xE7DF30", Offset = "0xE7DF30", VA = "0xE7DF30")]
	public void onePressed()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xE7E0E4", Offset = "0xE7E0E4", VA = "0xE7E0E4")]
	public void twoPressed()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xE7E1F8", Offset = "0xE7E1F8", VA = "0xE7E1F8")]
	public void threePressed()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xE7E30C", Offset = "0xE7E30C", VA = "0xE7E30C")]
	public void fourPressed()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xE7E420", Offset = "0xE7E420", VA = "0xE7E420")]
	public void fivePressed()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xE7E534", Offset = "0xE7E534", VA = "0xE7E534")]
	public void sixPressed()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xE7E648", Offset = "0xE7E648", VA = "0xE7E648")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xE7E75C", Offset = "0xE7E75C", VA = "0xE7E75C")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xE7E870", Offset = "0xE7E870", VA = "0xE7E870")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xE7E984", Offset = "0xE7E984", VA = "0xE7E984")]
	public void tenPressed()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xE7EA98", Offset = "0xE7EA98", VA = "0xE7EA98")]
	public void changUpPressed()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xE7EB84", Offset = "0xE7EB84", VA = "0xE7EB84")]
	public void changeDownPressed()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xE7EC70", Offset = "0xE7EC70", VA = "0xE7EC70")]
	public void volumeDownPressed()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xE7ED0C", Offset = "0xE7ED0C", VA = "0xE7ED0C")]
	public void volumeUpPressed()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xE7EDAC", Offset = "0xE7EDAC", VA = "0xE7EDAC")]
	public void mutePressed()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xE7EE84", Offset = "0xE7EE84", VA = "0xE7EE84")]
	public void correctChannel()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xE7E044", Offset = "0xE7E044", VA = "0xE7E044")]
	public void changeChannel()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xE7F06C", Offset = "0xE7F06C", VA = "0xE7F06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E47D8", Offset = "0x7E47D8")]
	private IEnumerator ChangeThatChannel()
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xE7E078", Offset = "0xE7E078", VA = "0xE7E078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4838", Offset = "0x7E4838")]
	private IEnumerator WaitToChangeChannel()
	{
		return null;
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xE7F0D8", Offset = "0xE7F0D8", VA = "0xE7F0D8")]
	public void EndRoomFunction()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xE7F2F0", Offset = "0xE7F2F0", VA = "0xE7F2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4898", Offset = "0x7E4898")]
	private IEnumerator EndRoomRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xE7F35C", Offset = "0xE7F35C", VA = "0xE7F35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xE7F3D4", Offset = "0xE7F3D4", VA = "0xE7F3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xE7F3D8", Offset = "0xE7F3D8", VA = "0xE7F3D8")]
	public TVManager()
	{
	}
}
[Token(Token = "0x20001ED")]
public class TapeExit : MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CassetteTapeCollision tapeCollision;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tapeDoor;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xE7F450", Offset = "0xE7F450", VA = "0xE7F450")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xE7F5B4", Offset = "0xE7F5B4", VA = "0xE7F5B4")]
	public TapeExit()
	{
	}
}
[Token(Token = "0x20001EE")]
public class TapeMusic : MonoBehaviour
{
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5BC", Offset = "0x7CB5BC")]
	private sealed class <waitAndReTag>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TapeMusic <>4__this;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xCC8208", Offset = "0xCC8208", VA = "0xCC8208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xCC8250", Offset = "0xCC8250", VA = "0xCC8250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xCC80D4", Offset = "0xCC80D4", VA = "0xCC80D4")]
		[DebuggerHidden]
		public <waitAndReTag>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xCC8100", Offset = "0xCC8100", VA = "0xCC8100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xCC8104", Offset = "0xCC8104", VA = "0xCC8104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xCC8210", Offset = "0xCC8210", VA = "0xCC8210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool attachedToBoomBox;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip songOnTape;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string cassetteName;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool grabCheck;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text tapeNameText;

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xE7F5BC", Offset = "0xE7F5BC", VA = "0xE7F5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xE7F5F8", Offset = "0xE7F5F8", VA = "0xE7F5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xE7F780", Offset = "0xE7F780", VA = "0xE7F780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E49E8", Offset = "0x7E49E8")]
	private IEnumerator waitAndReTag()
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xE7F7EC", Offset = "0xE7F7EC", VA = "0xE7F7EC")]
	public void MarkTapeGrabbed()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xE7F8D0", Offset = "0xE7F8D0", VA = "0xE7F8D0")]
	public TapeMusic()
	{
	}
}
[Token(Token = "0x20001F0")]
public class TrackPad : MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5CC", Offset = "0x7CB5CC")]
	private sealed class <WaitForThatClick>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackPad <>4__this;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xCC8520", Offset = "0xCC8520", VA = "0xCC8520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0xCC8568", Offset = "0xCC8568", VA = "0xCC8568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xCC8448", Offset = "0xCC8448", VA = "0xCC8448")]
		[DebuggerHidden]
		public <WaitForThatClick>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xCC8474", Offset = "0xCC8474", VA = "0xCC8474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xCC8478", Offset = "0xCC8478", VA = "0xCC8478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xCC8528", Offset = "0xCC8528", VA = "0xCC8528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject screenArrow;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handUsed;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 tempPosition;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 tempyPos;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float changeInX;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lastXPosition;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float changeInY;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lastYPosition;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float senPad;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastTriggerTime;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int clickCount;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine waitForSecondClick;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CompKeyboardManager compKeyboardManager;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool keyboardButton;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xE82FA4", Offset = "0xE82FA4", VA = "0xE82FA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xE83FF8", Offset = "0xE83FF8", VA = "0xE83FF8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xE8450C", Offset = "0xE8450C", VA = "0xE8450C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xE83F8C", Offset = "0xE83F8C", VA = "0xE83F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4A98", Offset = "0x7E4A98")]
	private IEnumerator WaitForThatClick()
	{
		return null;
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xE8459C", Offset = "0xE8459C", VA = "0xE8459C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xE845DC", Offset = "0xE845DC", VA = "0xE845DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xE845E0", Offset = "0xE845E0", VA = "0xE845E0")]
	public TrackPad()
	{
	}
}
[Token(Token = "0x20001F2")]
public class TriggerPlay : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5DC", Offset = "0x7CB5DC")]
	private sealed class <WaitToShootAgain>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerPlay <>4__this;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xCC864C", Offset = "0xCC864C", VA = "0xCC864C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xCC8694", Offset = "0xCC8694", VA = "0xCC8694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCC8570", Offset = "0xCC8570", VA = "0xCC8570")]
		[DebuggerHidden]
		public <WaitToShootAgain>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xCC859C", Offset = "0xCC859C", VA = "0xCC859C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xCC85A0", Offset = "0xCC85A0", VA = "0xCC85A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCC8654", Offset = "0xCC8654", VA = "0xCC8654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabBullet;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shootForce;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] gunNoises;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isGooseGame;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gamesManager;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rightHand;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool canShoot;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine shootRoutine;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xDE7B04", Offset = "0xDE7B04", VA = "0xDE7B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xDE7B64", Offset = "0xDE7B64", VA = "0xDE7B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xDE7B68", Offset = "0xDE7B68", VA = "0xDE7B68")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xDE7E28", Offset = "0xDE7E28", VA = "0xDE7E28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xDE7FA8", Offset = "0xDE7FA8", VA = "0xDE7FA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4B48", Offset = "0x7E4B48")]
	private IEnumerator WaitToShootAgain()
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xDE8014", Offset = "0xDE8014", VA = "0xDE8014")]
	public TriggerPlay()
	{
	}
}
[Token(Token = "0x20001F4")]
public class UnparentFromBox1 : MonoBehaviour
{
	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xDEA308", Offset = "0xDEA308", VA = "0xDEA308")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xDEA490", Offset = "0xDEA490", VA = "0xDEA490")]
	public UnparentFromBox1()
	{
	}
}
[Token(Token = "0x20001F5")]
public class UnparentFromTeapot : MonoBehaviour
{
	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xDEA498", Offset = "0xDEA498", VA = "0xDEA498")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xDEA838", Offset = "0xDEA838", VA = "0xDEA838")]
	public UnparentFromTeapot()
	{
	}
}
[Token(Token = "0x20001F6")]
public class UnparentObject : MonoBehaviour
{
	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xDEA840", Offset = "0xDEA840", VA = "0xDEA840")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xDEA9B4", Offset = "0xDEA9B4", VA = "0xDEA9B4")]
	public UnparentObject()
	{
	}
}
[Token(Token = "0x20001F7")]
public class VCRButtonPressManager : MonoBehaviour
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VCRManager vcrManager;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xDED474", Offset = "0xDED474", VA = "0xDED474")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xDED504", Offset = "0xDED504", VA = "0xDED504")]
	public VCRButtonPressManager()
	{
	}
}
[Token(Token = "0x20001F8")]
public class VCRColliderScript : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5EC", Offset = "0x7CB5EC")]
	private sealed class <ActivateTape>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRColliderScript <>4__this;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xCC8844", Offset = "0xCC8844", VA = "0xCC8844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xCC888C", Offset = "0xCC888C", VA = "0xCC888C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCC869C", Offset = "0xCC869C", VA = "0xCC869C")]
		[DebuggerHidden]
		public <ActivateTape>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCC86C8", Offset = "0xCC86C8", VA = "0xCC86C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xCC86CC", Offset = "0xCC86CC", VA = "0xCC86CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCC884C", Offset = "0xCC884C", VA = "0xCC884C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject vcrFlap;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VCRManager vcrManager;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xDED50C", Offset = "0xDED50C", VA = "0xDED50C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xDED8B0", Offset = "0xDED8B0", VA = "0xDED8B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4BF8", Offset = "0x7E4BF8")]
	private IEnumerator ActivateTape()
	{
		return null;
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xDED91C", Offset = "0xDED91C", VA = "0xDED91C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xDED920", Offset = "0xDED920", VA = "0xDED920")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xDED924", Offset = "0xDED924", VA = "0xDED924")]
	public VCRColliderScript()
	{
	}
}
[Token(Token = "0x20001FA")]
public class VCRManager : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB5FC", Offset = "0x7CB5FC")]
	private sealed class <ActivateTape>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VCRManager <>4__this;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xCC8AEC", Offset = "0xCC8AEC", VA = "0xCC8AEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xCC8B34", Offset = "0xCC8B34", VA = "0xCC8B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xCC8894", Offset = "0xCC8894", VA = "0xCC8894")]
		[DebuggerHidden]
		public <ActivateTape>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xCC88C0", Offset = "0xCC88C0", VA = "0xCC88C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xCC88C4", Offset = "0xCC88C4", VA = "0xCC88C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xCC8AF4", Offset = "0xCC8AF4", VA = "0xCC8AF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canPressButton;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject handTouchingButton;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource VCRSpeaker;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource VCRPlaySpeaker;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip playVCRSound;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip recordVCRSound;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip insertVCRSound;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip ejectVCRSound;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool tapeInVCR;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vcrFlap;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject vhsTapeInVCR;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform tapeExitPos;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool tapeBusy;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject playText;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ejectText;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject stopText;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject logoOnTV;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text gameText;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text gameText2;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text gameText3;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text percentageText;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject allScreenTyping;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject allScreenTyping2;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject videoCover;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int percentageComplete;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int recordPressCounter;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject sceneChanger;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xDED92C", Offset = "0xDED92C", VA = "0xDED92C")]
	public void PlayPressed()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xDEDA7C", Offset = "0xDEDA7C", VA = "0xDEDA7C")]
	public void EjectPressed()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xDEDDB0", Offset = "0xDEDDB0", VA = "0xDEDDB0")]
	public void RecordPressed()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xDEDED8", Offset = "0xDEDED8", VA = "0xDEDED8")]
	public void SwitchTheScreenStuffOn()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xDEDCA0", Offset = "0xDEDCA0", VA = "0xDEDCA0")]
	public void SwitchTheScreenStuffOff()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xDEDD44", Offset = "0xDEDD44", VA = "0xDEDD44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E4CA8", Offset = "0x7E4CA8")]
	private IEnumerator ActivateTape()
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xDEE1C8", Offset = "0xDEE1C8", VA = "0xDEE1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xDEE1CC", Offset = "0xDEE1CC", VA = "0xDEE1CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xDEE1D0", Offset = "0xDEE1D0", VA = "0xDEE1D0")]
	public VCRManager()
	{
	}
}
[Token(Token = "0x20001FC")]
public class VHSTapeSave : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveName;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator _anim;

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xDEE1E0", Offset = "0xDEE1E0", VA = "0xDEE1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xDEE234", Offset = "0xDEE234", VA = "0xDEE234")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xDEE238", Offset = "0xDEE238", VA = "0xDEE238")]
	public VHSTapeSave()
	{
	}
}
[Token(Token = "0x20001FD")]
public class WearingHat : MonoBehaviour
{
	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wearingTheHat;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject headCollider;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool grabCheck;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xDF71A0", Offset = "0xDF71A0", VA = "0xDF71A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xDF71F4", Offset = "0xDF71F4", VA = "0xDF71F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xDF741C", Offset = "0xDF741C", VA = "0xDF741C")]
	public WearingHat()
	{
	}
}
[Token(Token = "0x20001FE")]
public class WhatArrowIsCollidingWith : MonoBehaviour
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonCollidingWith;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xDF742C", Offset = "0xDF742C", VA = "0xDF742C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xDF74C8", Offset = "0xDF74C8", VA = "0xDF74C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xDF7564", Offset = "0xDF7564", VA = "0xDF7564")]
	public WhatArrowIsCollidingWith()
	{
	}
}
[Token(Token = "0x20001FF")]
public class WhichHand : MonoBehaviour
{
	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handObject;

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xDF7574", Offset = "0xDF7574", VA = "0xDF7574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xDF7578", Offset = "0xDF7578", VA = "0xDF7578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xDF757C", Offset = "0xDF757C", VA = "0xDF757C")]
	public WhichHand()
	{
	}
}
[Token(Token = "0x2000200")]
public class typingmachmanager : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyPadCode;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string codeEntered;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doorOpen;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tempString;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject doorToOpen;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource unlockIt;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource lockIt;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject doorCollider;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isASafe;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF18704", Offset = "0xF18704", VA = "0xF18704")]
	public void gPressed()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF188B4", Offset = "0xF188B4", VA = "0xF188B4")]
	public void nPressed()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF18958", Offset = "0xF18958", VA = "0xF18958")]
	public void aPressed()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF189FC", Offset = "0xF189FC", VA = "0xF189FC")]
	public void rPressed()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xF18AA0", Offset = "0xF18AA0", VA = "0xF18AA0")]
	public void lPressed()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xF18B44", Offset = "0xF18B44", VA = "0xF18B44")]
	public void yPressed()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xF18BE8", Offset = "0xF18BE8", VA = "0xF18BE8")]
	public void sevenPressed()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xF18C8C", Offset = "0xF18C8C", VA = "0xF18C8C")]
	public void eightPressed()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xF18D30", Offset = "0xF18D30", VA = "0xF18D30")]
	public void ninePressed()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xF18DD4", Offset = "0xF18DD4", VA = "0xF18DD4")]
	public void zeroPressed()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xF18E78", Offset = "0xF18E78", VA = "0xF18E78")]
	public void redPressed()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xF187A8", Offset = "0xF187A8", VA = "0xF187A8")]
	public void greenPressed()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xF18EC4", Offset = "0xF18EC4", VA = "0xF18EC4")]
	public void lockDoorOnClose()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xF18EC8", Offset = "0xF18EC8", VA = "0xF18EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF18F50", Offset = "0xF18F50", VA = "0xF18F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xF18F54", Offset = "0xF18F54", VA = "0xF18F54")]
	public typingmachmanager()
	{
	}
}
namespace SharpJson
{
	[Token(Token = "0x2000201")]
	internal class Lexer
	{
		[Token(Token = "0x2000202")]
		public enum Token
		{
			[Token(Token = "0x4000BB4")]
			None,
			[Token(Token = "0x4000BB5")]
			Null,
			[Token(Token = "0x4000BB6")]
			True,
			[Token(Token = "0x4000BB7")]
			False,
			[Token(Token = "0x4000BB8")]
			Colon,
			[Token(Token = "0x4000BB9")]
			Comma,
			[Token(Token = "0x4000BBA")]
			String,
			[Token(Token = "0x4000BBB")]
			Number,
			[Token(Token = "0x4000BBC")]
			CurlyOpen,
			[Token(Token = "0x4000BBD")]
			CurlyClose,
			[Token(Token = "0x4000BBE")]
			SquaredOpen,
			[Token(Token = "0x4000BBF")]
			SquaredClose
		}

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB20", Offset = "0x7CFB20")]
		private int <lineNumber>k__BackingField;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB30", Offset = "0x7CFB30")]
		private bool <parseNumbersAsFloat>k__BackingField;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private char[] json;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int index;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool success;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] stringBuffer;

		[Token(Token = "0x17000235")]
		public bool hasError
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x16AD5D0", Offset = "0x16AD5D0", VA = "0x16AD5D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000236")]
		public int lineNumber
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x16AD5E0", Offset = "0x16AD5E0", VA = "0x16AD5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4D58", Offset = "0x7E4D58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x16AD5E8", Offset = "0x16AD5E8", VA = "0x16AD5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4D68", Offset = "0x7E4D68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public bool parseNumbersAsFloat
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x16AD5F0", Offset = "0x16AD5F0", VA = "0x16AD5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4D78", Offset = "0x7E4D78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x16AD5F8", Offset = "0x16AD5F8", VA = "0x16AD5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4D88", Offset = "0x7E4D88")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x16A90E4", Offset = "0x16A90E4", VA = "0x16A90E4")]
		public Lexer(string text)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x16AD604", Offset = "0x16AD604", VA = "0x16AD604")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x16A9708", Offset = "0x16A9708", VA = "0x16A9708")]
		public string ParseString()
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x16AD6F8", Offset = "0x16AD6F8", VA = "0x16AD6F8")]
		private string GetNumberString()
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x16A9D04", Offset = "0x16A9D04", VA = "0x16A9D04")]
		public float ParseFloatNumber()
		{
			return default(float);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x16A9DAC", Offset = "0x16A9DAC", VA = "0x16A9DAC")]
		public double ParseDoubleNumber()
		{
			return default(double);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x16AD744", Offset = "0x16AD744", VA = "0x16AD744")]
		private int GetLastIndexOfNumber(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x16AD618", Offset = "0x16AD618", VA = "0x16AD618")]
		private void SkipWhiteSpaces()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x16A9634", Offset = "0x16A9634", VA = "0x16A9634")]
		public Token LookAhead()
		{
			return default(Token);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x16A960C", Offset = "0x16A960C", VA = "0x16A960C")]
		public Token NextToken()
		{
			return default(Token);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x16AD7D0", Offset = "0x16AD7D0", VA = "0x16AD7D0")]
		private static Token NextToken(char[] json, ref int index)
		{
			return default(Token);
		}
	}
	[Token(Token = "0x2000203")]
	public class JsonDecoder
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB40", Offset = "0x7CFB40")]
		private string <errorMessage>k__BackingField;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB50", Offset = "0x7CFB50")]
		private bool <parseNumbersAsFloat>k__BackingField;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Lexer lexer;

		[Token(Token = "0x17000238")]
		public string errorMessage
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x16A90C0", Offset = "0x16A90C0", VA = "0x16A90C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4D98", Offset = "0x7E4D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x16A90C8", Offset = "0x16A90C8", VA = "0x16A90C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DA8", Offset = "0x7E4DA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool parseNumbersAsFloat
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x16A90D0", Offset = "0x16A90D0", VA = "0x16A90D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DB8", Offset = "0x7E4DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x16A90D8", Offset = "0x16A90D8", VA = "0x16A90D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DC8", Offset = "0x7E4DC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x16A9014", Offset = "0x16A9014", VA = "0x16A9014")]
		public JsonDecoder()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x16A9040", Offset = "0x16A9040", VA = "0x16A9040")]
		public object Decode(string text)
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x16A9398", Offset = "0x16A9398", VA = "0x16A9398")]
		public static object DecodeText(string text)
		{
			return null;
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x16A9408", Offset = "0x16A9408", VA = "0x16A9408")]
		private IDictionary<string, object> ParseObject()
		{
			return null;
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x16A9B84", Offset = "0x16A9B84", VA = "0x16A9B84")]
		private IList<object> ParseArray()
		{
			return null;
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x16A9180", Offset = "0x16A9180", VA = "0x16A9180")]
		private object ParseValue()
		{
			return null;
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x16A9668", Offset = "0x16A9668", VA = "0x16A9668")]
		private void TriggerError(string message)
		{
		}

		[Token(Token = "0x6000CE7")]
		private T EvalLexer<T>(T value)
		{
			return (T)null;
		}
	}
}
namespace Spine
{
	[Token(Token = "0x2000204")]
	public class Animation
	{
		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal ExposedList<Timeline> timelines;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float duration;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string name;

		[Token(Token = "0x1700023A")]
		public string Name
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x1670380", Offset = "0x1670380", VA = "0x1670380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public ExposedList<Timeline> Timelines
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x1670388", Offset = "0x1670388", VA = "0x1670388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1670390", Offset = "0x1670390", VA = "0x1670390")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float Duration
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x1670398", Offset = "0x1670398", VA = "0x1670398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x16703A0", Offset = "0x16703A0", VA = "0x16703A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x16703A8", Offset = "0x16703A8", VA = "0x16703A8")]
		public Animation(string name, ExposedList<Timeline> timelines, float duration)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1670488", Offset = "0x1670488", VA = "0x1670488")]
		public void Apply(Skeleton skeleton, float lastTime, float time, bool loop, ExposedList<Event> events, float alpha, MixPose pose, MixDirection direction)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1670680", Offset = "0x1670680", VA = "0x1670680")]
		internal static int BinarySearch(float[] values, float target, int step)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x167070C", Offset = "0x167070C", VA = "0x167070C")]
		internal static int BinarySearch(float[] values, float target)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x167078C", Offset = "0x167078C", VA = "0x167078C")]
		internal static int LinearSearch(float[] values, float target, int step)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000205")]
	public interface Timeline
	{
		[Token(Token = "0x1700023D")]
		int PropertyId
		{
			[Token(Token = "0x6000CF3")]
			get;
		}

		[Token(Token = "0x6000CF2")]
		void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> events, float alpha, MixPose pose, MixDirection direction);
	}
	[Token(Token = "0x2000206")]
	public enum MixPose
	{
		[Token(Token = "0x4000BC7")]
		Setup,
		[Token(Token = "0x4000BC8")]
		Current,
		[Token(Token = "0x4000BC9")]
		CurrentLayered
	}
	[Token(Token = "0x2000207")]
	public enum MixDirection
	{
		[Token(Token = "0x4000BCB")]
		In,
		[Token(Token = "0x4000BCC")]
		Out
	}
	[Token(Token = "0x2000208")]
	internal enum TimelineType
	{
		[Token(Token = "0x4000BCE")]
		Rotate,
		[Token(Token = "0x4000BCF")]
		Translate,
		[Token(Token = "0x4000BD0")]
		Scale,
		[Token(Token = "0x4000BD1")]
		Shear,
		[Token(Token = "0x4000BD2")]
		Attachment,
		[Token(Token = "0x4000BD3")]
		Color,
		[Token(Token = "0x4000BD4")]
		Deform,
		[Token(Token = "0x4000BD5")]
		Event,
		[Token(Token = "0x4000BD6")]
		DrawOrder,
		[Token(Token = "0x4000BD7")]
		IkConstraint,
		[Token(Token = "0x4000BD8")]
		TransformConstraint,
		[Token(Token = "0x4000BD9")]
		PathConstraintPosition,
		[Token(Token = "0x4000BDA")]
		PathConstraintSpacing,
		[Token(Token = "0x4000BDB")]
		PathConstraintMix,
		[Token(Token = "0x4000BDC")]
		TwoColor
	}
	[Token(Token = "0x2000209")]
	public abstract class CurveTimeline : Timeline
	{
		[Token(Token = "0x4000BDD")]
		protected const float LINEAR = 0f;

		[Token(Token = "0x4000BDE")]
		protected const float STEPPED = 1f;

		[Token(Token = "0x4000BDF")]
		protected const float BEZIER = 2f;

		[Token(Token = "0x4000BE0")]
		protected const int BEZIER_SIZE = 19;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] curves;

		[Token(Token = "0x1700023E")]
		public int FrameCount
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x1057200", Offset = "0x1057200", VA = "0x1057200")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023F")]
		public abstract int PropertyId
		{
			[Token(Token = "0x6000CF7")]
			get;
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1057238", Offset = "0x1057238", VA = "0x1057238")]
		public CurveTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000CF6")]
		public abstract void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction);

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1057330", Offset = "0x1057330", VA = "0x1057330")]
		public void SetLinear(int frameIndex)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1057374", Offset = "0x1057374", VA = "0x1057374")]
		public void SetStepped(int frameIndex)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x10573BC", Offset = "0x10573BC", VA = "0x10573BC")]
		public void SetCurve(int frameIndex, float cx1, float cy1, float cx2, float cy2)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x10574E4", Offset = "0x10574E4", VA = "0x10574E4")]
		public float GetCurvePercent(int frameIndex, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1057698", Offset = "0x1057698", VA = "0x1057698")]
		public float GetCurveType(int frameIndex)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200020A")]
	public class RotateTimeline : CurveTimeline
	{
		[Token(Token = "0x4000BE2")]
		public const int ENTRIES = 2;

		[Token(Token = "0x4000BE3")]
		internal const int PREV_TIME = -2;

		[Token(Token = "0x4000BE4")]
		internal const int PREV_ROTATION = -1;

		[Token(Token = "0x4000BE5")]
		internal const int ROTATION = 1;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int boneIndex;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000240")]
		public int BoneIndex
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xD9B770", Offset = "0xD9B770", VA = "0xD9B770")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xD9B778", Offset = "0xD9B778", VA = "0xD9B778")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float[] Frames
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xD9B780", Offset = "0xD9B780", VA = "0xD9B780")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xD9B788", Offset = "0xD9B788", VA = "0xD9B788")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xD9B790", Offset = "0xD9B790", VA = "0xD9B790", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xD9B798", Offset = "0xD9B798", VA = "0xD9B798")]
		public RotateTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xD9B808", Offset = "0xD9B808", VA = "0xD9B808")]
		public void SetFrame(int frameIndex, float time, float degrees)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xD9B86C", Offset = "0xD9B86C", VA = "0xD9B86C", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class TranslateTimeline : CurveTimeline
	{
		[Token(Token = "0x4000BE8")]
		public const int ENTRIES = 3;

		[Token(Token = "0x4000BE9")]
		protected const int PREV_TIME = -3;

		[Token(Token = "0x4000BEA")]
		protected const int PREV_X = -2;

		[Token(Token = "0x4000BEB")]
		protected const int PREV_Y = -1;

		[Token(Token = "0x4000BEC")]
		protected const int X = 1;

		[Token(Token = "0x4000BED")]
		protected const int Y = 2;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int boneIndex;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000243")]
		public int BoneIndex
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xDE5CD0", Offset = "0xDE5CD0", VA = "0xDE5CD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xDE5CD8", Offset = "0xDE5CD8", VA = "0xDE5CD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public float[] Frames
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xDE5CE0", Offset = "0xDE5CE0", VA = "0xDE5CE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xDE5CE8", Offset = "0xDE5CE8", VA = "0xDE5CE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xDE5CF0", Offset = "0xDE5CF0", VA = "0xDE5CF0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xDE5D00", Offset = "0xDE5D00", VA = "0xDE5D00")]
		public TranslateTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xDE5D70", Offset = "0xDE5D70", VA = "0xDE5D70")]
		public void SetFrame(int frameIndex, float time, float x, float y)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xDE5DF0", Offset = "0xDE5DF0", VA = "0xDE5DF0", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class ScaleTimeline : TranslateTimeline
	{
		[Token(Token = "0x17000246")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xDA0160", Offset = "0xDA0160", VA = "0xDA0160", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xDA0170", Offset = "0xDA0170", VA = "0xDA0170")]
		public ScaleTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xDA0178", Offset = "0xDA0178", VA = "0xDA0178", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class ShearTimeline : TranslateTimeline
	{
		[Token(Token = "0x17000247")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xDA11E0", Offset = "0xDA11E0", VA = "0xDA11E0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xDA11F0", Offset = "0xDA11F0", VA = "0xDA11F0")]
		public ShearTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xDA11F8", Offset = "0xDA11F8", VA = "0xDA11F8", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ColorTimeline : CurveTimeline
	{
		[Token(Token = "0x4000BF0")]
		public const int ENTRIES = 5;

		[Token(Token = "0x4000BF1")]
		protected const int PREV_TIME = -5;

		[Token(Token = "0x4000BF2")]
		protected const int PREV_R = -4;

		[Token(Token = "0x4000BF3")]
		protected const int PREV_G = -3;

		[Token(Token = "0x4000BF4")]
		protected const int PREV_B = -2;

		[Token(Token = "0x4000BF5")]
		protected const int PREV_A = -1;

		[Token(Token = "0x4000BF6")]
		protected const int R = 1;

		[Token(Token = "0x4000BF7")]
		protected const int G = 2;

		[Token(Token = "0x4000BF8")]
		protected const int B = 3;

		[Token(Token = "0x4000BF9")]
		protected const int A = 4;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int slotIndex;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000248")]
		public int SlotIndex
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x10C5438", Offset = "0x10C5438", VA = "0x10C5438")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x10C5440", Offset = "0x10C5440", VA = "0x10C5440")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public float[] Frames
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x10C5448", Offset = "0x10C5448", VA = "0x10C5448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x10C5450", Offset = "0x10C5450", VA = "0x10C5450")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x10C5458", Offset = "0x10C5458", VA = "0x10C5458", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x10C5468", Offset = "0x10C5468", VA = "0x10C5468")]
		public ColorTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x10C54D8", Offset = "0x10C54D8", VA = "0x10C54D8")]
		public void SetFrame(int frameIndex, float time, float r, float g, float b, float a)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x10C5598", Offset = "0x10C5598", VA = "0x10C5598", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class TwoColorTimeline : CurveTimeline
	{
		[Token(Token = "0x4000BFC")]
		public const int ENTRIES = 8;

		[Token(Token = "0x4000BFD")]
		protected const int PREV_TIME = -8;

		[Token(Token = "0x4000BFE")]
		protected const int PREV_R = -7;

		[Token(Token = "0x4000BFF")]
		protected const int PREV_G = -6;

		[Token(Token = "0x4000C00")]
		protected const int PREV_B = -5;

		[Token(Token = "0x4000C01")]
		protected const int PREV_A = -4;

		[Token(Token = "0x4000C02")]
		protected const int PREV_R2 = -3;

		[Token(Token = "0x4000C03")]
		protected const int PREV_G2 = -2;

		[Token(Token = "0x4000C04")]
		protected const int PREV_B2 = -1;

		[Token(Token = "0x4000C05")]
		protected const int R = 1;

		[Token(Token = "0x4000C06")]
		protected const int G = 2;

		[Token(Token = "0x4000C07")]
		protected const int B = 3;

		[Token(Token = "0x4000C08")]
		protected const int A = 4;

		[Token(Token = "0x4000C09")]
		protected const int R2 = 5;

		[Token(Token = "0x4000C0A")]
		protected const int G2 = 6;

		[Token(Token = "0x4000C0B")]
		protected const int B2 = 7;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float[] frames;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int slotIndex;

		[Token(Token = "0x1700024B")]
		public float[] Frames
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xDE80D4", Offset = "0xDE80D4", VA = "0xDE80D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public int SlotIndex
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xDE80DC", Offset = "0xDE80DC", VA = "0xDE80DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xDE80E4", Offset = "0xDE80E4", VA = "0xDE80E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xDE8144", Offset = "0xDE8144", VA = "0xDE8144", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xDE8154", Offset = "0xDE8154", VA = "0xDE8154")]
		public TwoColorTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xDE81C4", Offset = "0xDE81C4", VA = "0xDE81C4")]
		public void SetFrame(int frameIndex, float time, float r, float g, float b, float a, float r2, float g2, float b2)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xDE82EC", Offset = "0xDE82EC", VA = "0xDE82EC", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class AttachmentTimeline : Timeline
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int slotIndex;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float[] frames;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] attachmentNames;

		[Token(Token = "0x1700024E")]
		public int SlotIndex
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x1113270", Offset = "0x1113270", VA = "0x1113270")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x1113278", Offset = "0x1113278", VA = "0x1113278")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float[] Frames
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x1113280", Offset = "0x1113280", VA = "0x1113280")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x1113288", Offset = "0x1113288", VA = "0x1113288")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public string[] AttachmentNames
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x1113290", Offset = "0x1113290", VA = "0x1113290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x1113298", Offset = "0x1113298", VA = "0x1113298")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public int FrameCount
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x11132A0", Offset = "0x11132A0", VA = "0x11132A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public int PropertyId
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x11132BC", Offset = "0x11132BC", VA = "0x11132BC", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x11132CC", Offset = "0x11132CC", VA = "0x11132CC")]
		public AttachmentTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x111335C", Offset = "0x111335C", VA = "0x111335C")]
		public void SetFrame(int frameIndex, float time, string attachmentName)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x11133F4", Offset = "0x11133F4", VA = "0x11133F4", Slot = "4")]
		public void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class DeformTimeline : CurveTimeline
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int slotIndex;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float[][] frameVertices;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal VertexAttachment attachment;

		[Token(Token = "0x17000253")]
		public int SlotIndex
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x105A3F4", Offset = "0x105A3F4", VA = "0x105A3F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x105A3FC", Offset = "0x105A3FC", VA = "0x105A3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public float[] Frames
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x105A404", Offset = "0x105A404", VA = "0x105A404")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x105A40C", Offset = "0x105A40C", VA = "0x105A40C")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float[][] Vertices
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x105A414", Offset = "0x105A414", VA = "0x105A414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x105A41C", Offset = "0x105A41C", VA = "0x105A41C")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public VertexAttachment Attachment
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x105A424", Offset = "0x105A424", VA = "0x105A424")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x105A42C", Offset = "0x105A42C", VA = "0x105A42C")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x105A434", Offset = "0x105A434", VA = "0x105A434", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x105A460", Offset = "0x105A460", VA = "0x105A460")]
		public DeformTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x105A4F0", Offset = "0x105A4F0", VA = "0x105A4F0")]
		public void SetFrame(int frameIndex, float time, float[] vertices)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x105A588", Offset = "0x105A588", VA = "0x105A588", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class EventTimeline : Timeline
	{
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float[] frames;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Event[] events;

		[Token(Token = "0x17000258")]
		public float[] Frames
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x1067200", Offset = "0x1067200", VA = "0x1067200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x1067208", Offset = "0x1067208", VA = "0x1067208")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public Event[] Events
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x1067210", Offset = "0x1067210", VA = "0x1067210")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x1067218", Offset = "0x1067218", VA = "0x1067218")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public int FrameCount
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x1067220", Offset = "0x1067220", VA = "0x1067220")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025B")]
		public int PropertyId
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x106723C", Offset = "0x106723C", VA = "0x106723C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1067244", Offset = "0x1067244", VA = "0x1067244")]
		public EventTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x10672D4", Offset = "0x10672D4", VA = "0x10672D4")]
		public void SetFrame(int frameIndex, Event e)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1067370", Offset = "0x1067370", VA = "0x1067370", Slot = "4")]
		public void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class DrawOrderTimeline : Timeline
	{
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float[] frames;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[][] drawOrders;

		[Token(Token = "0x1700025C")]
		public float[] Frames
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x10643FC", Offset = "0x10643FC", VA = "0x10643FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1064404", Offset = "0x1064404", VA = "0x1064404")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public int[][] DrawOrders
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x106440C", Offset = "0x106440C", VA = "0x106440C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x1064414", Offset = "0x1064414", VA = "0x1064414")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public int FrameCount
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x106441C", Offset = "0x106441C", VA = "0x106441C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025F")]
		public int PropertyId
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x1064438", Offset = "0x1064438", VA = "0x1064438", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1064440", Offset = "0x1064440", VA = "0x1064440")]
		public DrawOrderTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x10644D0", Offset = "0x10644D0", VA = "0x10644D0")]
		public void SetFrame(int frameIndex, float time, int[] drawOrder)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1064568", Offset = "0x1064568", VA = "0x1064568", Slot = "4")]
		public void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class IkConstraintTimeline : CurveTimeline
	{
		[Token(Token = "0x4000C19")]
		public const int ENTRIES = 3;

		[Token(Token = "0x4000C1A")]
		private const int PREV_TIME = -3;

		[Token(Token = "0x4000C1B")]
		private const int PREV_MIX = -2;

		[Token(Token = "0x4000C1C")]
		private const int PREV_BEND_DIRECTION = -1;

		[Token(Token = "0x4000C1D")]
		private const int MIX = 1;

		[Token(Token = "0x4000C1E")]
		private const int BEND_DIRECTION = 2;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int ikConstraintIndex;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000260")]
		public int IkConstraintIndex
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x16A23F4", Offset = "0x16A23F4", VA = "0x16A23F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x16A23FC", Offset = "0x16A23FC", VA = "0x16A23FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public float[] Frames
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x16A2404", Offset = "0x16A2404", VA = "0x16A2404")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x16A240C", Offset = "0x16A240C", VA = "0x16A240C")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x16A2414", Offset = "0x16A2414", VA = "0x16A2414", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x16A2424", Offset = "0x16A2424", VA = "0x16A2424")]
		public IkConstraintTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x16A2494", Offset = "0x16A2494", VA = "0x16A2494")]
		public void SetFrame(int frameIndex, float time, float mix, int bendDirection)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x16A2518", Offset = "0x16A2518", VA = "0x16A2518", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class TransformConstraintTimeline : CurveTimeline
	{
		[Token(Token = "0x4000C21")]
		public const int ENTRIES = 5;

		[Token(Token = "0x4000C22")]
		private const int PREV_TIME = -5;

		[Token(Token = "0x4000C23")]
		private const int PREV_ROTATE = -4;

		[Token(Token = "0x4000C24")]
		private const int PREV_TRANSLATE = -3;

		[Token(Token = "0x4000C25")]
		private const int PREV_SCALE = -2;

		[Token(Token = "0x4000C26")]
		private const int PREV_SHEAR = -1;

		[Token(Token = "0x4000C27")]
		private const int ROTATE = 1;

		[Token(Token = "0x4000C28")]
		private const int TRANSLATE = 2;

		[Token(Token = "0x4000C29")]
		private const int SCALE = 3;

		[Token(Token = "0x4000C2A")]
		private const int SHEAR = 4;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int transformConstraintIndex;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000263")]
		public int TransformConstraintIndex
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xDE57C8", Offset = "0xDE57C8", VA = "0xDE57C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xDE57D0", Offset = "0xDE57D0", VA = "0xDE57D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float[] Frames
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xDE57D8", Offset = "0xDE57D8", VA = "0xDE57D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xDE57E0", Offset = "0xDE57E0", VA = "0xDE57E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xDE57E8", Offset = "0xDE57E8", VA = "0xDE57E8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xDE57F8", Offset = "0xDE57F8", VA = "0xDE57F8")]
		public TransformConstraintTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xDE5868", Offset = "0xDE5868", VA = "0xDE5868")]
		public void SetFrame(int frameIndex, float time, float rotateMix, float translateMix, float scaleMix, float shearMix)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xDE5928", Offset = "0xDE5928", VA = "0xDE5928", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class PathConstraintPositionTimeline : CurveTimeline
	{
		[Token(Token = "0x4000C2D")]
		public const int ENTRIES = 2;

		[Token(Token = "0x4000C2E")]
		protected const int PREV_TIME = -2;

		[Token(Token = "0x4000C2F")]
		protected const int PREV_VALUE = -1;

		[Token(Token = "0x4000C30")]
		protected const int VALUE = 1;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int pathConstraintIndex;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x17000266")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xFF9B0C", Offset = "0xFF9B0C", VA = "0xFF9B0C", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000267")]
		public int PathConstraintIndex
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xFF9B8C", Offset = "0xFF9B8C", VA = "0xFF9B8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xFF9B94", Offset = "0xFF9B94", VA = "0xFF9B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float[] Frames
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xFF9B9C", Offset = "0xFF9B9C", VA = "0xFF9B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xFF9BA4", Offset = "0xFF9BA4", VA = "0xFF9BA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xFF9B1C", Offset = "0xFF9B1C", VA = "0xFF9B1C")]
		public PathConstraintPositionTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xFF9BAC", Offset = "0xFF9BAC", VA = "0xFF9BAC")]
		public void SetFrame(int frameIndex, float time, float value)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xFF9C10", Offset = "0xFF9C10", VA = "0xFF9C10", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class PathConstraintSpacingTimeline : PathConstraintPositionTimeline
	{
		[Token(Token = "0x17000269")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xFF9E08", Offset = "0xFF9E08", VA = "0xFF9E08", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xFF9E18", Offset = "0xFF9E18", VA = "0xFF9E18")]
		public PathConstraintSpacingTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xFF9E1C", Offset = "0xFF9E1C", VA = "0xFF9E1C", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class PathConstraintMixTimeline : CurveTimeline
	{
		[Token(Token = "0x4000C33")]
		public const int ENTRIES = 3;

		[Token(Token = "0x4000C34")]
		private const int PREV_TIME = -3;

		[Token(Token = "0x4000C35")]
		private const int PREV_ROTATE = -2;

		[Token(Token = "0x4000C36")]
		private const int PREV_TRANSLATE = -1;

		[Token(Token = "0x4000C37")]
		private const int ROTATE = 1;

		[Token(Token = "0x4000C38")]
		private const int TRANSLATE = 2;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int pathConstraintIndex;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float[] frames;

		[Token(Token = "0x1700026A")]
		public int PathConstraintIndex
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xFF9754", Offset = "0xFF9754", VA = "0xFF9754")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xFF975C", Offset = "0xFF975C", VA = "0xFF975C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float[] Frames
		{
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xFF9764", Offset = "0xFF9764", VA = "0xFF9764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xFF976C", Offset = "0xFF976C", VA = "0xFF976C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public override int PropertyId
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xFF9774", Offset = "0xFF9774", VA = "0xFF9774", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xFF9784", Offset = "0xFF9784", VA = "0xFF9784")]
		public PathConstraintMixTimeline(int frameCount)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xFF97F4", Offset = "0xFF97F4", VA = "0xFF97F4")]
		public void SetFrame(int frameIndex, float time, float rotateMix, float translateMix)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xFF9874", Offset = "0xFF9874", VA = "0xFF9874", Slot = "6")]
		public override void Apply(Skeleton skeleton, float lastTime, float time, ExposedList<Event> firedEvents, float alpha, MixPose pose, MixDirection direction)
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class AnimationState
	{
		[Token(Token = "0x200021A")]
		public delegate void TrackEntryDelegate(TrackEntry trackEntry);

		[Token(Token = "0x200021B")]
		public delegate void TrackEntryEventDelegate(TrackEntry trackEntry, Event e);

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Animation EmptyAnimation;

		[Token(Token = "0x4000C3C")]
		internal const int Subsequent = 0;

		[Token(Token = "0x4000C3D")]
		internal const int First = 1;

		[Token(Token = "0x4000C3E")]
		internal const int Dip = 2;

		[Token(Token = "0x4000C3F")]
		internal const int DipMix = 3;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AnimationStateData data;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pool<TrackEntry> trackEntryPool;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ExposedList<TrackEntry> tracks;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ExposedList<Event> events;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly EventQueue queue;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly HashSet<int> propertyIDs;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ExposedList<TrackEntry> mixingTo;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool animationsChanged;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeScale;

		[Token(Token = "0x1700026D")]
		public AnimationStateData Data
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x16707EC", Offset = "0x16707EC", VA = "0x16707EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public ExposedList<TrackEntry> Tracks
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x16707F4", Offset = "0x16707F4", VA = "0x16707F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public float TimeScale
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x16707FC", Offset = "0x16707FC", VA = "0x16707FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x1670804", Offset = "0x1670804", VA = "0x1670804")]
			set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event TrackEntryDelegate Start
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x167080C", Offset = "0x167080C", VA = "0x167080C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DD8", Offset = "0x7E4DD8")]
			add
			{
			}
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x16708AC", Offset = "0x16708AC", VA = "0x16708AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DE8", Offset = "0x7E4DE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event TrackEntryDelegate Interrupt
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x167094C", Offset = "0x167094C", VA = "0x167094C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4DF8", Offset = "0x7E4DF8")]
			add
			{
			}
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0x16709EC", Offset = "0x16709EC", VA = "0x16709EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E08", Offset = "0x7E4E08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event TrackEntryDelegate End
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x1670A8C", Offset = "0x1670A8C", VA = "0x1670A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E18", Offset = "0x7E4E18")]
			add
			{
			}
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x1670B2C", Offset = "0x1670B2C", VA = "0x1670B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E28", Offset = "0x7E4E28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event TrackEntryDelegate Dispose
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x1670BCC", Offset = "0x1670BCC", VA = "0x1670BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E38", Offset = "0x7E4E38")]
			add
			{
			}
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x1670C6C", Offset = "0x1670C6C", VA = "0x1670C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E48", Offset = "0x7E4E48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event TrackEntryDelegate Complete
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x1670D0C", Offset = "0x1670D0C", VA = "0x1670D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E58", Offset = "0x7E4E58")]
			add
			{
			}
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x1670DAC", Offset = "0x1670DAC", VA = "0x1670DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E68", Offset = "0x7E4E68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event TrackEntryEventDelegate Event
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x1670E4C", Offset = "0x1670E4C", VA = "0x1670E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E78", Offset = "0x7E4E78")]
			add
			{
			}
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x1670EEC", Offset = "0x1670EEC", VA = "0x1670EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E88", Offset = "0x7E4E88")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1670F8C", Offset = "0x1670F8C", VA = "0x1670F8C")]
		public AnimationState(AnimationStateData data)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x16711E8", Offset = "0x16711E8", VA = "0x16711E8")]
		public void Update(float delta)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x16715C0", Offset = "0x16715C0", VA = "0x16715C0")]
		private bool UpdateMixingFrom(TrackEntry to, float delta)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x16716B8", Offset = "0x16716B8", VA = "0x16716B8")]
		public bool Apply(Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1671C8C", Offset = "0x1671C8C", VA = "0x1671C8C")]
		private float ApplyMixingFrom(TrackEntry to, Skeleton skeleton, MixPose currentPose)
		{
			return default(float);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x167218C", Offset = "0x167218C", VA = "0x167218C")]
		private static void ApplyRotateTimeline(RotateTimeline rotateTimeline, Skeleton skeleton, float time, float alpha, MixPose pose, float[] timelinesRotation, int i, bool firstFrame)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1672708", Offset = "0x1672708", VA = "0x1672708")]
		private void QueueEvents(TrackEntry entry, float animationTime)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1672890", Offset = "0x1672890", VA = "0x1672890")]
		public void ClearTracks()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1672950", Offset = "0x1672950", VA = "0x1672950")]
		public void ClearTrack(int trackIndex)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x16713E4", Offset = "0x16713E4", VA = "0x16713E4")]
		private void SetCurrent(int index, TrackEntry current, bool interrupt)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1672B08", Offset = "0x1672B08", VA = "0x1672B08")]
		public TrackEntry SetAnimation(int trackIndex, string animationName, bool loop)
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1672BD4", Offset = "0x1672BD4", VA = "0x1672BD4")]
		public TrackEntry SetAnimation(int trackIndex, Animation animation, bool loop)
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1672E6C", Offset = "0x1672E6C", VA = "0x1672E6C")]
		public TrackEntry AddAnimation(int trackIndex, string animationName, bool loop, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1672F48", Offset = "0x1672F48", VA = "0x1672F48")]
		public TrackEntry AddAnimation(int trackIndex, Animation animation, bool loop, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1673228", Offset = "0x1673228", VA = "0x1673228")]
		public TrackEntry SetEmptyAnimation(int trackIndex, float mixDuration)
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x16732C8", Offset = "0x16732C8", VA = "0x16732C8")]
		public TrackEntry AddEmptyAnimation(int trackIndex, float mixDuration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x167337C", Offset = "0x167337C", VA = "0x167337C")]
		public void SetEmptyAnimations(float mixDuration)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1672A50", Offset = "0x1672A50", VA = "0x1672A50")]
		private TrackEntry ExpandToIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1672D80", Offset = "0x1672D80", VA = "0x1672D80")]
		private TrackEntry NewTrackEntry(int trackIndex, Animation animation, bool loop, TrackEntry last)
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1671568", Offset = "0x1671568", VA = "0x1671568")]
		private void DisposeNext(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1671BB4", Offset = "0x1671BB4", VA = "0x1671BB4")]
		private void AnimationsChanged()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1673444", Offset = "0x1673444", VA = "0x1673444")]
		public TrackEntry GetCurrent(int trackIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x167349C", Offset = "0x167349C", VA = "0x167349C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1673608", Offset = "0x1673608", VA = "0x1673608")]
		internal void OnStart(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x167361C", Offset = "0x167361C", VA = "0x167361C")]
		internal void OnInterrupt(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1673630", Offset = "0x1673630", VA = "0x1673630")]
		internal void OnEnd(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1673644", Offset = "0x1673644", VA = "0x1673644")]
		internal void OnDispose(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1673658", Offset = "0x1673658", VA = "0x1673658")]
		internal void OnComplete(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x167366C", Offset = "0x167366C", VA = "0x167366C")]
		internal void OnEvent(TrackEntry entry, Event e)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x167374C", Offset = "0x167374C", VA = "0x167374C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4E98", Offset = "0x7E4E98")]
		private void <.ctor>b__41_0()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class TrackEntry : Pool<TrackEntry>.IPoolable
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Animation animation;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TrackEntry next;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TrackEntry mixingFrom;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int trackIndex;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool loop;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float eventThreshold;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float attachmentThreshold;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float drawOrderThreshold;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float animationStart;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float animationEnd;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float animationLast;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float nextAnimationLast;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal float delay;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float trackTime;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float trackLast;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float nextTrackLast;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal float trackEnd;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float timeScale;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal float alpha;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal float mixTime;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal float mixDuration;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal float interruptAlpha;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal float totalAlpha;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal readonly ExposedList<int> timelineData;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal readonly ExposedList<TrackEntry> timelineDipMix;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal readonly ExposedList<float> timelinesRotation;

		[Token(Token = "0x17000270")]
		public int TrackIndex
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xE82404", Offset = "0xE82404", VA = "0xE82404")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000271")]
		public Animation Animation
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xE8240C", Offset = "0xE8240C", VA = "0xE8240C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public bool Loop
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xE82414", Offset = "0xE82414", VA = "0xE82414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xE8241C", Offset = "0xE8241C", VA = "0xE8241C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float Delay
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xE82428", Offset = "0xE82428", VA = "0xE82428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xE82430", Offset = "0xE82430", VA = "0xE82430")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float TrackTime
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xE82438", Offset = "0xE82438", VA = "0xE82438")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xE82440", Offset = "0xE82440", VA = "0xE82440")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public float TrackEnd
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xE82448", Offset = "0xE82448", VA = "0xE82448")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xE82450", Offset = "0xE82450", VA = "0xE82450")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public float AnimationStart
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xE82458", Offset = "0xE82458", VA = "0xE82458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xE82460", Offset = "0xE82460", VA = "0xE82460")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float AnimationEnd
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xE82468", Offset = "0xE82468", VA = "0xE82468")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xE82470", Offset = "0xE82470", VA = "0xE82470")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public float AnimationLast
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xE82478", Offset = "0xE82478", VA = "0xE82478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xE82480", Offset = "0xE82480", VA = "0xE82480")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public float AnimationTime
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xE82488", Offset = "0xE82488", VA = "0xE82488")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027A")]
		public float TimeScale
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xE82544", Offset = "0xE82544", VA = "0xE82544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xE8254C", Offset = "0xE8254C", VA = "0xE8254C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public float Alpha
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xE82554", Offset = "0xE82554", VA = "0xE82554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xE8255C", Offset = "0xE8255C", VA = "0xE8255C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public float EventThreshold
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xE82564", Offset = "0xE82564", VA = "0xE82564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xE8256C", Offset = "0xE8256C", VA = "0xE8256C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public float AttachmentThreshold
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xE82574", Offset = "0xE82574", VA = "0xE82574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xE8257C", Offset = "0xE8257C", VA = "0xE8257C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public float DrawOrderThreshold
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xE82584", Offset = "0xE82584", VA = "0xE82584")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xE8258C", Offset = "0xE8258C", VA = "0xE8258C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public TrackEntry Next
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xE82594", Offset = "0xE82594", VA = "0xE82594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public bool IsComplete
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xE8259C", Offset = "0xE8259C", VA = "0xE8259C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		public float MixTime
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xE825B4", Offset = "0xE825B4", VA = "0xE825B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xE825BC", Offset = "0xE825BC", VA = "0xE825BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public float MixDuration
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xE825C4", Offset = "0xE825C4", VA = "0xE825C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xE825CC", Offset = "0xE825CC", VA = "0xE825CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public TrackEntry MixingFrom
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xE825D4", Offset = "0xE825D4", VA = "0xE825D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000014")]
		public event AnimationState.TrackEntryDelegate Start
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xE825DC", Offset = "0xE825DC", VA = "0xE825DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4EA8", Offset = "0x7E4EA8")]
			add
			{
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xE8267C", Offset = "0xE8267C", VA = "0xE8267C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4EB8", Offset = "0x7E4EB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event AnimationState.TrackEntryDelegate Interrupt
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xE8271C", Offset = "0xE8271C", VA = "0xE8271C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4EC8", Offset = "0x7E4EC8")]
			add
			{
			}
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xE827BC", Offset = "0xE827BC", VA = "0xE827BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4ED8", Offset = "0x7E4ED8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event AnimationState.TrackEntryDelegate End
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0xE8285C", Offset = "0xE8285C", VA = "0xE8285C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4EE8", Offset = "0x7E4EE8")]
			add
			{
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xE828FC", Offset = "0xE828FC", VA = "0xE828FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4EF8", Offset = "0x7E4EF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event AnimationState.TrackEntryDelegate Dispose
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xE8299C", Offset = "0xE8299C", VA = "0xE8299C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F08", Offset = "0x7E4F08")]
			add
			{
			}
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xE82A3C", Offset = "0xE82A3C", VA = "0xE82A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F18", Offset = "0x7E4F18")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event AnimationState.TrackEntryDelegate Complete
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xE82ADC", Offset = "0xE82ADC", VA = "0xE82ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F28", Offset = "0x7E4F28")]
			add
			{
			}
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xE82B7C", Offset = "0xE82B7C", VA = "0xE82B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F38", Offset = "0x7E4F38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event AnimationState.TrackEntryEventDelegate Event
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xE82C1C", Offset = "0xE82C1C", VA = "0xE82C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F48", Offset = "0x7E4F48")]
			add
			{
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xE82CBC", Offset = "0xE82CBC", VA = "0xE82CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F58", Offset = "0x7E4F58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE81E4C", Offset = "0xE81E4C", VA = "0xE81E4C", Slot = "4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE81F0C", Offset = "0xE81F0C", VA = "0xE81F0C")]
		internal TrackEntry SetTimelineData(TrackEntry to, ExposedList<TrackEntry> mixingToArray, HashSet<int> propertyIDs)
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE822D8", Offset = "0xE822D8", VA = "0xE822D8")]
		private bool HasTimeline(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE82D5C", Offset = "0xE82D5C", VA = "0xE82D5C")]
		internal void OnStart()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE82D74", Offset = "0xE82D74", VA = "0xE82D74")]
		internal void OnInterrupt()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE82D8C", Offset = "0xE82D8C", VA = "0xE82D8C")]
		internal void OnEnd()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE82DA4", Offset = "0xE82DA4", VA = "0xE82DA4")]
		internal void OnDispose()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE82DBC", Offset = "0xE82DBC", VA = "0xE82DBC")]
		internal void OnComplete()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE82DD4", Offset = "0xE82DD4", VA = "0xE82DD4")]
		internal void OnEvent(Event e)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE82DF4", Offset = "0xE82DF4", VA = "0xE82DF4")]
		public void ResetRotationDirections()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE82E4C", Offset = "0xE82E4C", VA = "0xE82E4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE82EA4", Offset = "0xE82EA4", VA = "0xE82EA4")]
		public TrackEntry()
		{
		}
	}
	[Token(Token = "0x200021D")]
	internal class EventQueue
	{
		[Token(Token = "0x200021E")]
		private struct EventQueueEntry
		{
			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EventType type;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TrackEntry entry;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Event e;

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xF1FDE0", Offset = "0xF1FDE0", VA = "0xF1FDE0")]
			public EventQueueEntry(EventType eventType, TrackEntry trackEntry, [Optional] Event e)
			{
			}
		}

		[Token(Token = "0x200021F")]
		private enum EventType
		{
			[Token(Token = "0x4000C78")]
			Start,
			[Token(Token = "0x4000C79")]
			Interrupt,
			[Token(Token = "0x4000C7A")]
			End,
			[Token(Token = "0x4000C7B")]
			Dispose,
			[Token(Token = "0x4000C7C")]
			Complete,
			[Token(Token = "0x4000C7D")]
			Event
		}

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<EventQueueEntry> eventQueueEntries;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool drainDisabled;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AnimationState state;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Pool<TrackEntry> trackEntryPool;

		[Token(Token = "0x1400001A")]
		internal event Action AnimationsChanged
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x1066984", Offset = "0x1066984", VA = "0x1066984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F68", Offset = "0x7E4F68")]
			add
			{
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x1066A24", Offset = "0x1066A24", VA = "0x1066A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F78", Offset = "0x7E4F78")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1066AC4", Offset = "0x1066AC4", VA = "0x1066AC4")]
		internal EventQueue(AnimationState state, Action HandleAnimationsChanged, Pool<TrackEntry> trackEntryPool)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1066B70", Offset = "0x1066B70", VA = "0x1066B70")]
		internal void Start(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1066C24", Offset = "0x1066C24", VA = "0x1066C24")]
		internal void Interrupt(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1066CC8", Offset = "0x1066CC8", VA = "0x1066CC8")]
		internal void End(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1066D7C", Offset = "0x1066D7C", VA = "0x1066D7C")]
		internal void Dispose(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1066E20", Offset = "0x1066E20", VA = "0x1066E20")]
		internal void Complete(TrackEntry entry)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1066EC4", Offset = "0x1066EC4", VA = "0x1066EC4")]
		internal void Event(TrackEntry entry, Event e)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1066F6C", Offset = "0x1066F6C", VA = "0x1066F6C")]
		internal void Drain()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x10671AC", Offset = "0x10671AC", VA = "0x10671AC")]
		internal void Clear()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class Pool<T> where T : class, new()
	{
		[Token(Token = "0x2000221")]
		public interface IPoolable
		{
			[Token(Token = "0x6000DF3")]
			void Reset();
		}

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int max;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Stack<T> freeObjects;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC30", Offset = "0x7CFC30")]
		private int <Peak>k__BackingField;

		[Token(Token = "0x17000284")]
		public int Count
		{
			[Token(Token = "0x6000DEB")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000285")]
		public int Peak
		{
			[Token(Token = "0x6000DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F88", Offset = "0x7E4F88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DED")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4F98", Offset = "0x7E4F98")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DEE")]
		public Pool(int initialCapacity = 16, int max = int.MaxValue)
		{
		}

		[Token(Token = "0x6000DEF")]
		public T Obtain()
		{
			return null;
		}

		[Token(Token = "0x6000DF0")]
		public void Free(T obj)
		{
		}

		[Token(Token = "0x6000DF1")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DF2")]
		protected void Reset(T obj)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class AnimationStateData
	{
		[Token(Token = "0x2000223")]
		private struct AnimationPair
		{
			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Animation a1;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Animation a2;

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xF1AA28", Offset = "0xF1AA28", VA = "0xF1AA28")]
			public AnimationPair(Animation a1, Animation a2)
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xF1AA30", Offset = "0xF1AA30", VA = "0xF1AA30", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000224")]
		private class AnimationPairComparer : IEqualityComparer<AnimationPair>
		{
			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly AnimationPairComparer Instance;

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xF1AA98", Offset = "0xF1AA98", VA = "0xF1AA98", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<Spine.AnimationStateData.AnimationPair>.Equals(AnimationPair x, AnimationPair y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xF1AAB0", Offset = "0xF1AAB0", VA = "0xF1AAB0", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<Spine.AnimationStateData.AnimationPair>.GetHashCode(AnimationPair obj)
			{
				return default(int);
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xF1AB04", Offset = "0xF1AB04", VA = "0xF1AB04")]
			public AnimationPairComparer()
			{
			}
		}

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SkeletonData skeletonData;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<AnimationPair, float> animationToMixTime;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float defaultMix;

		[Token(Token = "0x17000286")]
		public SkeletonData SkeletonData
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x1673758", Offset = "0x1673758", VA = "0x1673758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public float DefaultMix
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x1673760", Offset = "0x1673760", VA = "0x1673760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x1673768", Offset = "0x1673768", VA = "0x1673768")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1673770", Offset = "0x1673770", VA = "0x1673770")]
		public AnimationStateData(SkeletonData skeletonData)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x1673884", Offset = "0x1673884", VA = "0x1673884")]
		public void SetMix(string fromName, string toName, float duration)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1673968", Offset = "0x1673968", VA = "0x1673968")]
		public void SetMix(Animation from, Animation to, float duration)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x16730EC", Offset = "0x16730EC", VA = "0x16730EC")]
		public float GetMix(Animation from, Animation to)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000225")]
	public class Atlas : IEnumerable<AtlasRegion>, IEnumerable
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AtlasPage> pages;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AtlasRegion> regions;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextureLoader textureLoader;

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x110B194", Offset = "0x110B194", VA = "0x110B194", Slot = "4")]
		public IEnumerator<AtlasRegion> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x110B228", Offset = "0x110B228", VA = "0x110B228", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x110B2BC", Offset = "0x110B2BC", VA = "0x110B2BC")]
		public Atlas(TextReader reader, string dir, TextureLoader textureLoader)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x110BD1C", Offset = "0x110BD1C", VA = "0x110BD1C")]
		public Atlas(List<AtlasPage> pages, List<AtlasRegion> regions)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x110B3A4", Offset = "0x110B3A4", VA = "0x110B3A4")]
		private void Load(TextReader reader, string imagesDir, TextureLoader textureLoader)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x110BFAC", Offset = "0x110BFAC", VA = "0x110BFAC")]
		private static string ReadValue(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x110BDF8", Offset = "0x110BDF8", VA = "0x110BDF8")]
		private static int ReadTuple(TextReader reader, string[] tuple)
		{
			return default(int);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x110C06C", Offset = "0x110C06C", VA = "0x110C06C")]
		public void FlipV()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x110C134", Offset = "0x110C134", VA = "0x110C134")]
		public AtlasRegion FindRegion(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x110C230", Offset = "0x110C230", VA = "0x110C230")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public enum Format
	{
		[Token(Token = "0x4000C8B")]
		Alpha,
		[Token(Token = "0x4000C8C")]
		Intensity,
		[Token(Token = "0x4000C8D")]
		LuminanceAlpha,
		[Token(Token = "0x4000C8E")]
		RGB565,
		[Token(Token = "0x4000C8F")]
		RGBA4444,
		[Token(Token = "0x4000C90")]
		RGB888,
		[Token(Token = "0x4000C91")]
		RGBA8888
	}
	[Token(Token = "0x2000227")]
	public enum TextureFilter
	{
		[Token(Token = "0x4000C93")]
		Nearest,
		[Token(Token = "0x4000C94")]
		Linear,
		[Token(Token = "0x4000C95")]
		MipMap,
		[Token(Token = "0x4000C96")]
		MipMapNearestNearest,
		[Token(Token = "0x4000C97")]
		MipMapLinearNearest,
		[Token(Token = "0x4000C98")]
		MipMapNearestLinear,
		[Token(Token = "0x4000C99")]
		MipMapLinearLinear
	}
	[Token(Token = "0x2000228")]
	public enum TextureWrap
	{
		[Token(Token = "0x4000C9B")]
		MirroredRepeat,
		[Token(Token = "0x4000C9C")]
		ClampToEdge,
		[Token(Token = "0x4000C9D")]
		Repeat
	}
	[Token(Token = "0x2000229")]
	public class AtlasPage
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Format format;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureFilter minFilter;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureFilter magFilter;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextureWrap uWrap;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureWrap vWrap;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public object rendererObject;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int width;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x110BDF0", Offset = "0x110BDF0", VA = "0x110BDF0")]
		public AtlasPage()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class AtlasRegion
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AtlasPage page;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int x;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int y;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float u;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float v;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float u2;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float v2;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float offsetX;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float offsetY;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int originalWidth;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int originalHeight;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int index;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool rotate;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] splits;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] pads;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x110C064", Offset = "0x110C064", VA = "0x110C064")]
		public AtlasRegion()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public interface TextureLoader
	{
		[Token(Token = "0x6000E0D")]
		void Load(AtlasPage page, string path);

		[Token(Token = "0x6000E0E")]
		void Unload(object texture);
	}
	[Token(Token = "0x200022C")]
	public class AtlasAttachmentLoader : AttachmentLoader
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Atlas[] atlasArray;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x110D200", Offset = "0x110D200", VA = "0x110D200")]
		public AtlasAttachmentLoader(params Atlas[] atlasArray)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x110D278", Offset = "0x110D278", VA = "0x110D278", Slot = "4")]
		public RegionAttachment NewRegionAttachment(Skin skin, string name, string path)
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x110D438", Offset = "0x110D438", VA = "0x110D438", Slot = "5")]
		public MeshAttachment NewMeshAttachment(Skin skin, string name, string path)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x110D588", Offset = "0x110D588", VA = "0x110D588", Slot = "6")]
		public BoundingBoxAttachment NewBoundingBoxAttachment(Skin skin, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x110D5E8", Offset = "0x110D5E8", VA = "0x110D5E8", Slot = "7")]
		public PathAttachment NewPathAttachment(Skin skin, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x110D648", Offset = "0x110D648", VA = "0x110D648", Slot = "8")]
		public PointAttachment NewPointAttachment(Skin skin, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x110D6A8", Offset = "0x110D6A8", VA = "0x110D6A8", Slot = "9")]
		public ClippingAttachment NewClippingAttachment(Skin skin, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x110D3B8", Offset = "0x110D3B8", VA = "0x110D3B8")]
		public AtlasRegion FindRegion(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x200022D")]
	public abstract class Attachment
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC40", Offset = "0x7CFC40")]
		private string <Name>k__BackingField;

		[Token(Token = "0x17000288")]
		public string Name
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x1111F90", Offset = "0x1111F90", VA = "0x1111F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FA8", Offset = "0x7E4FA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x1111F98", Offset = "0x1111F98", VA = "0x1111F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FB8", Offset = "0x7E4FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1111FA0", Offset = "0x1111FA0", VA = "0x1111FA0")]
		protected Attachment(string name)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x111202C", Offset = "0x111202C", VA = "0x111202C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	public interface IHasRendererObject
	{
		[Token(Token = "0x17000289")]
		object RendererObject
		{
			[Token(Token = "0x6000E1B")]
			get;
		}
	}
	[Token(Token = "0x200022F")]
	public interface AttachmentLoader
	{
		[Token(Token = "0x6000E1C")]
		RegionAttachment NewRegionAttachment(Skin skin, string name, string path);

		[Token(Token = "0x6000E1D")]
		MeshAttachment NewMeshAttachment(Skin skin, string name, string path);

		[Token(Token = "0x6000E1E")]
		BoundingBoxAttachment NewBoundingBoxAttachment(Skin skin, string name);

		[Token(Token = "0x6000E1F")]
		PathAttachment NewPathAttachment(Skin skin, string name);

		[Token(Token = "0x6000E20")]
		PointAttachment NewPointAttachment(Skin skin, string name);

		[Token(Token = "0x6000E21")]
		ClippingAttachment NewClippingAttachment(Skin skin, string name);
	}
	[Token(Token = "0x2000230")]
	public enum AttachmentType
	{
		[Token(Token = "0x4000CBC")]
		Region,
		[Token(Token = "0x4000CBD")]
		Boundingbox,
		[Token(Token = "0x4000CBE")]
		Mesh,
		[Token(Token = "0x4000CBF")]
		Linkedmesh,
		[Token(Token = "0x4000CC0")]
		Path,
		[Token(Token = "0x4000CC1")]
		Point,
		[Token(Token = "0x4000CC2")]
		Clipping
	}
	[Token(Token = "0x2000231")]
	public class BoundingBoxAttachment : VertexAttachment
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10BBDEC", Offset = "0x10BBDEC", VA = "0x10BBDEC")]
		public BoundingBoxAttachment(string name)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class ClippingAttachment : VertexAttachment
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal SlotData endSlot;

		[Token(Token = "0x1700028A")]
		public SlotData EndSlot
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x10C48E0", Offset = "0x10C48E0", VA = "0x10C48E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x10C48E8", Offset = "0x10C48E8", VA = "0x10C48E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x10C48F0", Offset = "0x10C48F0", VA = "0x10C48F0")]
		public ClippingAttachment(string name)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class MeshAttachment : VertexAttachment, IHasRendererObject
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float regionOffsetX;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float regionOffsetY;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float regionWidth;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float regionHeight;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float regionOriginalWidth;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float regionOriginalHeight;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshAttachment parentMesh;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float[] uvs;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float[] regionUVs;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal int[] triangles;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal float r;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal float g;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal float b;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal float a;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int hulllength;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal bool inheritDeform;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC50", Offset = "0x7CFC50")]
		private string <Path>k__BackingField;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC60", Offset = "0x7CFC60")]
		private object <RendererObject>k__BackingField;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC70", Offset = "0x7CFC70")]
		private float <RegionU>k__BackingField;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC80", Offset = "0x7CFC80")]
		private float <RegionV>k__BackingField;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC90", Offset = "0x7CFC90")]
		private float <RegionU2>k__BackingField;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCA0", Offset = "0x7CFCA0")]
		private float <RegionV2>k__BackingField;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCB0", Offset = "0x7CFCB0")]
		private bool <RegionRotate>k__BackingField;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCC0", Offset = "0x7CFCC0")]
		private int[] <Edges>k__BackingField;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCD0", Offset = "0x7CFCD0")]
		private float <Width>k__BackingField;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCE0", Offset = "0x7CFCE0")]
		private float <Height>k__BackingField;

		[Token(Token = "0x1700028B")]
		public int HullLength
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x1129B64", Offset = "0x1129B64", VA = "0x1129B64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x1129B6C", Offset = "0x1129B6C", VA = "0x1129B6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public float[] RegionUVs
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x1129B74", Offset = "0x1129B74", VA = "0x1129B74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x1129B7C", Offset = "0x1129B7C", VA = "0x1129B7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public float[] UVs
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x1129B84", Offset = "0x1129B84", VA = "0x1129B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x1129B8C", Offset = "0x1129B8C", VA = "0x1129B8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public int[] Triangles
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x1129B94", Offset = "0x1129B94", VA = "0x1129B94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x1129B9C", Offset = "0x1129B9C", VA = "0x1129B9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public float R
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x1129BA4", Offset = "0x1129BA4", VA = "0x1129BA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x1129BAC", Offset = "0x1129BAC", VA = "0x1129BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public float G
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x1129BB4", Offset = "0x1129BB4", VA = "0x1129BB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x1129BBC", Offset = "0x1129BBC", VA = "0x1129BBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public float B
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x1129BC4", Offset = "0x1129BC4", VA = "0x1129BC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x1129BCC", Offset = "0x1129BCC", VA = "0x1129BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public float A
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x1129BD4", Offset = "0x1129BD4", VA = "0x1129BD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x1129BDC", Offset = "0x1129BDC", VA = "0x1129BDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public string Path
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x1129BE4", Offset = "0x1129BE4", VA = "0x1129BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FC8", Offset = "0x7E4FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1129BEC", Offset = "0x1129BEC", VA = "0x1129BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FD8", Offset = "0x7E4FD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public object RendererObject
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x1129BF4", Offset = "0x1129BF4", VA = "0x1129BF4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FE8", Offset = "0x7E4FE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x1129BFC", Offset = "0x1129BFC", VA = "0x1129BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E4FF8", Offset = "0x7E4FF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public float RegionU
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x1129C04", Offset = "0x1129C04", VA = "0x1129C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5008", Offset = "0x7E5008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x1129C0C", Offset = "0x1129C0C", VA = "0x1129C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5018", Offset = "0x7E5018")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public float RegionV
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x1129C14", Offset = "0x1129C14", VA = "0x1129C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5028", Offset = "0x7E5028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x1129C1C", Offset = "0x1129C1C", VA = "0x1129C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5038", Offset = "0x7E5038")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public float RegionU2
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x1129C24", Offset = "0x1129C24", VA = "0x1129C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5048", Offset = "0x7E5048")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x1129C2C", Offset = "0x1129C2C", VA = "0x1129C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5058", Offset = "0x7E5058")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public float RegionV2
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x1129C34", Offset = "0x1129C34", VA = "0x1129C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5068", Offset = "0x7E5068")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x1129C3C", Offset = "0x1129C3C", VA = "0x1129C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5078", Offset = "0x7E5078")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public bool RegionRotate
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x1129C44", Offset = "0x1129C44", VA = "0x1129C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5088", Offset = "0x7E5088")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x1129C4C", Offset = "0x1129C4C", VA = "0x1129C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5098", Offset = "0x7E5098")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public float RegionOffsetX
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x1129C58", Offset = "0x1129C58", VA = "0x1129C58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x1129C60", Offset = "0x1129C60", VA = "0x1129C60")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public float RegionOffsetY
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1129C68", Offset = "0x1129C68", VA = "0x1129C68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x1129C70", Offset = "0x1129C70", VA = "0x1129C70")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public float RegionWidth
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x1129C78", Offset = "0x1129C78", VA = "0x1129C78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x1129C80", Offset = "0x1129C80", VA = "0x1129C80")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public float RegionHeight
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x1129C88", Offset = "0x1129C88", VA = "0x1129C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x1129C90", Offset = "0x1129C90", VA = "0x1129C90")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public float RegionOriginalWidth
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1129C98", Offset = "0x1129C98", VA = "0x1129C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1129CA0", Offset = "0x1129CA0", VA = "0x1129CA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float RegionOriginalHeight
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x1129CA8", Offset = "0x1129CA8", VA = "0x1129CA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x1129CB0", Offset = "0x1129CB0", VA = "0x1129CB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public bool InheritDeform
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x1129CB8", Offset = "0x1129CB8", VA = "0x1129CB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x1129CC0", Offset = "0x1129CC0", VA = "0x1129CC0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public MeshAttachment ParentMesh
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x1129CCC", Offset = "0x1129CCC", VA = "0x1129CCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x1129CD4", Offset = "0x1129CD4", VA = "0x1129CD4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public int[] Edges
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1129D28", Offset = "0x1129D28", VA = "0x1129D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50A8", Offset = "0x7E50A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1129D30", Offset = "0x1129D30", VA = "0x1129D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50B8", Offset = "0x7E50B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float Width
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1129D38", Offset = "0x1129D38", VA = "0x1129D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50C8", Offset = "0x7E50C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x1129D40", Offset = "0x1129D40", VA = "0x1129D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50D8", Offset = "0x7E50D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float Height
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x1129D48", Offset = "0x1129D48", VA = "0x1129D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50E8", Offset = "0x7E50E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1129D50", Offset = "0x1129D50", VA = "0x1129D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E50F8", Offset = "0x7E50F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1129D58", Offset = "0x1129D58", VA = "0x1129D58")]
		public MeshAttachment(string name)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1129DD4", Offset = "0x1129DD4", VA = "0x1129DD4")]
		public void UpdateUVs()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1129F98", Offset = "0x1129F98", VA = "0x1129F98", Slot = "4")]
		public override bool ApplyDeform(VertexAttachment sourceAttachment)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000234")]
	public class PathAttachment : VertexAttachment
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float[] lengths;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool closed;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool constantSpeed;

		[Token(Token = "0x170002A5")]
		public float[] Lengths
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xFF7668", Offset = "0xFF7668", VA = "0xFF7668")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xFF7670", Offset = "0xFF7670", VA = "0xFF7670")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public bool Closed
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xFF7678", Offset = "0xFF7678", VA = "0xFF7678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xFF7680", Offset = "0xFF7680", VA = "0xFF7680")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public bool ConstantSpeed
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xFF768C", Offset = "0xFF768C", VA = "0xFF768C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xFF7694", Offset = "0xFF7694", VA = "0xFF7694")]
			set
			{
			}
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xFF76A0", Offset = "0xFF76A0", VA = "0xFF76A0")]
		public PathAttachment(string name)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class PointAttachment : Attachment
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float x;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float y;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float rotation;

		[Token(Token = "0x170002A8")]
		public float X
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x12FC890", Offset = "0x12FC890", VA = "0x12FC890")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x12FC898", Offset = "0x12FC898", VA = "0x12FC898")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public float Y
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x12FC8A0", Offset = "0x12FC8A0", VA = "0x12FC8A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x12FC8A8", Offset = "0x12FC8A8", VA = "0x12FC8A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public float Rotation
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x12FC8B0", Offset = "0x12FC8B0", VA = "0x12FC8B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x12FC8B8", Offset = "0x12FC8B8", VA = "0x12FC8B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x12FC8C0", Offset = "0x12FC8C0", VA = "0x12FC8C0")]
		public PointAttachment(string name)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x12FC8C8", Offset = "0x12FC8C8", VA = "0x12FC8C8")]
		public void ComputeWorldPosition(Bone bone, out float ox, out float oy)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x12FC8F0", Offset = "0x12FC8F0", VA = "0x12FC8F0")]
		public float ComputeWorldRotation(Bone bone)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000236")]
	public class RegionAttachment : Attachment, IHasRendererObject
	{
		[Token(Token = "0x4000CE4")]
		public const int BLX = 0;

		[Token(Token = "0x4000CE5")]
		public const int BLY = 1;

		[Token(Token = "0x4000CE6")]
		public const int ULX = 2;

		[Token(Token = "0x4000CE7")]
		public const int ULY = 3;

		[Token(Token = "0x4000CE8")]
		public const int URX = 4;

		[Token(Token = "0x4000CE9")]
		public const int URY = 5;

		[Token(Token = "0x4000CEA")]
		public const int BRX = 6;

		[Token(Token = "0x4000CEB")]
		public const int BRY = 7;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float x;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float y;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float rotation;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float scaleX;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float scaleY;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float width;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float height;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float regionOffsetX;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float regionOffsetY;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float regionWidth;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float regionHeight;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float regionOriginalWidth;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float regionOriginalHeight;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float[] offset;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float[] uvs;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float r;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal float g;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal float b;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal float a;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCF0", Offset = "0x7CFCF0")]
		private string <Path>k__BackingField;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD00", Offset = "0x7CFD00")]
		private object <RendererObject>k__BackingField;

		[Token(Token = "0x170002AB")]
		public float X
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x13022E4", Offset = "0x13022E4", VA = "0x13022E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x13022EC", Offset = "0x13022EC", VA = "0x13022EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public float Y
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x13022F4", Offset = "0x13022F4", VA = "0x13022F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x13022FC", Offset = "0x13022FC", VA = "0x13022FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public float Rotation
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x1302304", Offset = "0x1302304", VA = "0x1302304")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x130230C", Offset = "0x130230C", VA = "0x130230C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public float ScaleX
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x1302314", Offset = "0x1302314", VA = "0x1302314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x130231C", Offset = "0x130231C", VA = "0x130231C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public float ScaleY
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1302324", Offset = "0x1302324", VA = "0x1302324")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x130232C", Offset = "0x130232C", VA = "0x130232C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public float Width
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x1302334", Offset = "0x1302334", VA = "0x1302334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x130233C", Offset = "0x130233C", VA = "0x130233C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public float Height
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x1302344", Offset = "0x1302344", VA = "0x1302344")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x130234C", Offset = "0x130234C", VA = "0x130234C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float R
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x1302354", Offset = "0x1302354", VA = "0x1302354")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x130235C", Offset = "0x130235C", VA = "0x130235C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public float G
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x1302364", Offset = "0x1302364", VA = "0x1302364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x130236C", Offset = "0x130236C", VA = "0x130236C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public float B
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x1302374", Offset = "0x1302374", VA = "0x1302374")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x130237C", Offset = "0x130237C", VA = "0x130237C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public float A
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x1302384", Offset = "0x1302384", VA = "0x1302384")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x130238C", Offset = "0x130238C", VA = "0x130238C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public string Path
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x1302394", Offset = "0x1302394", VA = "0x1302394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5108", Offset = "0x7E5108")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x130239C", Offset = "0x130239C", VA = "0x130239C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5118", Offset = "0x7E5118")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public object RendererObject
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x13023A4", Offset = "0x13023A4", VA = "0x13023A4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5128", Offset = "0x7E5128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x13023AC", Offset = "0x13023AC", VA = "0x13023AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5138", Offset = "0x7E5138")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public float RegionOffsetX
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x13023B4", Offset = "0x13023B4", VA = "0x13023B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x13023BC", Offset = "0x13023BC", VA = "0x13023BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public float RegionOffsetY
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x13023C4", Offset = "0x13023C4", VA = "0x13023C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x13023CC", Offset = "0x13023CC", VA = "0x13023CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float RegionWidth
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x13023D4", Offset = "0x13023D4", VA = "0x13023D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x13023DC", Offset = "0x13023DC", VA = "0x13023DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float RegionHeight
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x13023E4", Offset = "0x13023E4", VA = "0x13023E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x13023EC", Offset = "0x13023EC", VA = "0x13023EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public float RegionOriginalWidth
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x13023F4", Offset = "0x13023F4", VA = "0x13023F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x13023FC", Offset = "0x13023FC", VA = "0x13023FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float RegionOriginalHeight
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x1302404", Offset = "0x1302404", VA = "0x1302404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x130240C", Offset = "0x130240C", VA = "0x130240C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float[] Offset
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1302414", Offset = "0x1302414", VA = "0x1302414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public float[] UVs
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x130241C", Offset = "0x130241C", VA = "0x130241C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1302424", Offset = "0x1302424", VA = "0x1302424")]
		public RegionAttachment(string name)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x13024B0", Offset = "0x13024B0", VA = "0x13024B0")]
		public void UpdateOffset()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x130269C", Offset = "0x130269C", VA = "0x130269C")]
		public void SetUVs(float u, float v, float u2, float v2, bool rotate)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1302760", Offset = "0x1302760", VA = "0x1302760")]
		public void ComputeWorldVertices(Bone bone, float[] worldVertices, int offset, int stride = 2)
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class VertexAttachment : Attachment
	{
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextID;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object nextIdLock;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly int id;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int[] bones;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float[] vertices;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int worldVerticesLength;

		[Token(Token = "0x170002C0")]
		public int Id
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xDF4804", Offset = "0xDF4804", VA = "0xDF4804")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C1")]
		public int[] Bones
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xDF480C", Offset = "0xDF480C", VA = "0xDF480C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xDF4814", Offset = "0xDF4814", VA = "0xDF4814")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public float[] Vertices
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xDF481C", Offset = "0xDF481C", VA = "0xDF481C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xDF4824", Offset = "0xDF4824", VA = "0xDF4824")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public int WorldVerticesLength
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xDF482C", Offset = "0xDF482C", VA = "0xDF482C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xDF4834", Offset = "0xDF4834", VA = "0xDF4834")]
			set
			{
			}
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xDF483C", Offset = "0xDF483C", VA = "0xDF483C")]
		public VertexAttachment(string name)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xDF498C", Offset = "0xDF498C", VA = "0xDF498C")]
		public void ComputeWorldVertices(Slot slot, float[] worldVertices)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xDF49A4", Offset = "0xDF49A4", VA = "0xDF49A4")]
		public void ComputeWorldVertices(Slot slot, int start, int count, float[] worldVertices, int offset, int stride = 2)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xDF4DD4", Offset = "0xDF4DD4", VA = "0xDF4DD4", Slot = "4")]
		public virtual bool ApplyDeform(VertexAttachment sourceAttachment)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000238")]
	public enum BlendMode
	{
		[Token(Token = "0x4000D08")]
		Normal,
		[Token(Token = "0x4000D09")]
		Additive,
		[Token(Token = "0x4000D0A")]
		Multiply,
		[Token(Token = "0x4000D0B")]
		Screen
	}
	[Token(Token = "0x2000239")]
	public class Bone : IUpdatable
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool yDown;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal BoneData data;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Skeleton skeleton;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Bone parent;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ExposedList<Bone> children;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float x;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float y;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float rotation;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float scaleX;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float scaleY;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float shearX;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float shearY;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal float ax;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float ay;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float arotation;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float ascaleX;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal float ascaleY;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float ashearX;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal float ashearY;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal bool appliedValid;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal float a;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal float b;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal float worldX;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal float c;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal float d;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal float worldY;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal bool sorted;

		[Token(Token = "0x170002C4")]
		public BoneData Data
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x111AA1C", Offset = "0x111AA1C", VA = "0x111AA1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public Skeleton Skeleton
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x111AA24", Offset = "0x111AA24", VA = "0x111AA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public Bone Parent
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x111AA2C", Offset = "0x111AA2C", VA = "0x111AA2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public ExposedList<Bone> Children
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x111AA34", Offset = "0x111AA34", VA = "0x111AA34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public float X
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x111AA3C", Offset = "0x111AA3C", VA = "0x111AA3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x111AA44", Offset = "0x111AA44", VA = "0x111AA44")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float Y
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x111AA4C", Offset = "0x111AA4C", VA = "0x111AA4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x111AA54", Offset = "0x111AA54", VA = "0x111AA54")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public float Rotation
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x111AA5C", Offset = "0x111AA5C", VA = "0x111AA5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x111AA64", Offset = "0x111AA64", VA = "0x111AA64")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public float ScaleX
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x111AA6C", Offset = "0x111AA6C", VA = "0x111AA6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x111AA74", Offset = "0x111AA74", VA = "0x111AA74")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float ScaleY
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x111AA7C", Offset = "0x111AA7C", VA = "0x111AA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x111AA84", Offset = "0x111AA84", VA = "0x111AA84")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public float ShearX
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x111AA8C", Offset = "0x111AA8C", VA = "0x111AA8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x111AA94", Offset = "0x111AA94", VA = "0x111AA94")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float ShearY
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x111AA9C", Offset = "0x111AA9C", VA = "0x111AA9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x111AAA4", Offset = "0x111AAA4", VA = "0x111AAA4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public float AppliedRotation
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x111AAAC", Offset = "0x111AAAC", VA = "0x111AAAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x111AAB4", Offset = "0x111AAB4", VA = "0x111AAB4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public float AX
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x111AABC", Offset = "0x111AABC", VA = "0x111AABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x111AAC4", Offset = "0x111AAC4", VA = "0x111AAC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public float AY
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x111AACC", Offset = "0x111AACC", VA = "0x111AACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x111AAD4", Offset = "0x111AAD4", VA = "0x111AAD4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public float AScaleX
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x111AADC", Offset = "0x111AADC", VA = "0x111AADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x111AAE4", Offset = "0x111AAE4", VA = "0x111AAE4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public float AScaleY
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x111AAEC", Offset = "0x111AAEC", VA = "0x111AAEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x111AAF4", Offset = "0x111AAF4", VA = "0x111AAF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public float AShearX
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x111AAFC", Offset = "0x111AAFC", VA = "0x111AAFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x111AB04", Offset = "0x111AB04", VA = "0x111AB04")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float AShearY
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x111AB0C", Offset = "0x111AB0C", VA = "0x111AB0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x111AB14", Offset = "0x111AB14", VA = "0x111AB14")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public float A
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x111AB1C", Offset = "0x111AB1C", VA = "0x111AB1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D7")]
		public float B
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x111AB24", Offset = "0x111AB24", VA = "0x111AB24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D8")]
		public float C
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x111AB2C", Offset = "0x111AB2C", VA = "0x111AB2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D9")]
		public float D
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x111AB34", Offset = "0x111AB34", VA = "0x111AB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DA")]
		public float WorldX
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x111AB3C", Offset = "0x111AB3C", VA = "0x111AB3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DB")]
		public float WorldY
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x111AB44", Offset = "0x111AB44", VA = "0x111AB44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		public float WorldRotationX
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x111AB4C", Offset = "0x111AB4C", VA = "0x111AB4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DD")]
		public float WorldRotationY
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x111ABD4", Offset = "0x111ABD4", VA = "0x111ABD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DE")]
		public float WorldScaleX
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x111AC5C", Offset = "0x111AC5C", VA = "0x111AC5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DF")]
		public float WorldScaleY
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x111ACF4", Offset = "0x111ACF4", VA = "0x111ACF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E0")]
		public float WorldToLocalRotationX
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x111BB60", Offset = "0x111BB60", VA = "0x111BB60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E1")]
		public float WorldToLocalRotationY
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x111BC20", Offset = "0x111BC20", VA = "0x111BC20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x111AD8C", Offset = "0x111AD8C", VA = "0x111AD8C")]
		public Bone(BoneData data, Skeleton skeleton, Bone parent)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x111AF14", Offset = "0x111AF14", VA = "0x111AF14", Slot = "4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x111B738", Offset = "0x111B738", VA = "0x111B738")]
		public void UpdateWorldTransform()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x111AF28", Offset = "0x111AF28", VA = "0x111AF28")]
		public void UpdateWorldTransform(float x, float y, float rotation, float scaleX, float scaleY, float shearX, float shearY)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x111AEC4", Offset = "0x111AEC4", VA = "0x111AEC4")]
		public void SetToSetupPose()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x111B74C", Offset = "0x111B74C", VA = "0x111B74C")]
		internal void UpdateAppliedTransform()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x111BAC8", Offset = "0x111BAC8", VA = "0x111BAC8")]
		public void WorldToLocal(float worldX, float worldY, out float localX, out float localY)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x111BB24", Offset = "0x111BB24", VA = "0x111BB24")]
		public void LocalToWorld(float localX, float localY, out float worldX, out float worldY)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x111BCE0", Offset = "0x111BCE0", VA = "0x111BCE0")]
		public float WorldToLocalRotation(float worldRotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x111BD98", Offset = "0x111BD98", VA = "0x111BD98")]
		public float LocalToWorldRotation(float localRotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x111BE50", Offset = "0x111BE50", VA = "0x111BE50")]
		public void RotateWorld(float degrees)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x111BF14", Offset = "0x111BF14", VA = "0x111BF14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	public class BoneData
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string name;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal BoneData parent;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float length;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float x;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float y;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float rotation;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float scaleX;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float scaleY;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float shearX;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float shearY;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal TransformMode transformMode;

		[Token(Token = "0x170002E2")]
		public int Index
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x111BF30", Offset = "0x111BF30", VA = "0x111BF30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E3")]
		public string Name
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x111BF38", Offset = "0x111BF38", VA = "0x111BF38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		public BoneData Parent
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x111BF40", Offset = "0x111BF40", VA = "0x111BF40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public float Length
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x111BF48", Offset = "0x111BF48", VA = "0x111BF48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x111BF50", Offset = "0x111BF50", VA = "0x111BF50")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public float X
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x111BF58", Offset = "0x111BF58", VA = "0x111BF58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x111BF60", Offset = "0x111BF60", VA = "0x111BF60")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public float Y
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x111BF68", Offset = "0x111BF68", VA = "0x111BF68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x111BF70", Offset = "0x111BF70", VA = "0x111BF70")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public float Rotation
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x111BF78", Offset = "0x111BF78", VA = "0x111BF78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x111BF80", Offset = "0x111BF80", VA = "0x111BF80")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public float ScaleX
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x111BF88", Offset = "0x111BF88", VA = "0x111BF88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x111BF90", Offset = "0x111BF90", VA = "0x111BF90")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public float ScaleY
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x111BF98", Offset = "0x111BF98", VA = "0x111BF98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x111BFA0", Offset = "0x111BFA0", VA = "0x111BFA0")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public float ShearX
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x111BFA8", Offset = "0x111BFA8", VA = "0x111BFA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x111BFB0", Offset = "0x111BFB0", VA = "0x111BFB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public float ShearY
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x111BFB8", Offset = "0x111BFB8", VA = "0x111BFB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x111BFC0", Offset = "0x111BFC0", VA = "0x111BFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public TransformMode TransformMode
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x111BFC8", Offset = "0x111BFC8", VA = "0x111BFC8")]
			get
			{
				return default(TransformMode);
			}
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x111BFD0", Offset = "0x111BFD0", VA = "0x111BFD0")]
			set
			{
			}
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x111BFD8", Offset = "0x111BFD8", VA = "0x111BFD8")]
		public BoneData(int index, string name, BoneData parent)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x111C0CC", Offset = "0x111C0CC", VA = "0x111C0CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023B")]
	[Flags]
	public enum TransformMode
	{
		[Token(Token = "0x4000D34")]
		Normal = 0,
		[Token(Token = "0x4000D35")]
		OnlyTranslation = 7,
		[Token(Token = "0x4000D36")]
		NoRotationOrReflection = 1,
		[Token(Token = "0x4000D37")]
		NoScale = 2,
		[Token(Token = "0x4000D38")]
		NoScaleOrReflection = 6
	}
	[Token(Token = "0x200023C")]
	public class Event
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly EventData data;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly float time;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int intValue;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float floatValue;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal string stringValue;

		[Token(Token = "0x170002EE")]
		public EventData Data
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x10667C0", Offset = "0x10667C0", VA = "0x10667C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public float Time
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x10667C8", Offset = "0x10667C8", VA = "0x10667C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public int Int
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x10667D0", Offset = "0x10667D0", VA = "0x10667D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x10667D8", Offset = "0x10667D8", VA = "0x10667D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public float Float
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x10667E0", Offset = "0x10667E0", VA = "0x10667E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x10667E8", Offset = "0x10667E8", VA = "0x10667E8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public string String
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x10667F0", Offset = "0x10667F0", VA = "0x10667F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x10667F8", Offset = "0x10667F8", VA = "0x10667F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1066800", Offset = "0x1066800", VA = "0x1066800")]
		public Event(float time, EventData data)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x106689C", Offset = "0x106689C", VA = "0x106689C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023D")]
	public class EventData
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD10", Offset = "0x7CFD10")]
		private int <Int>k__BackingField;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD20", Offset = "0x7CFD20")]
		private float <Float>k__BackingField;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD30", Offset = "0x7CFD30")]
		private string <String>k__BackingField;

		[Token(Token = "0x170002F3")]
		public string Name
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x10668B8", Offset = "0x10668B8", VA = "0x10668B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		public int Int
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x10668C0", Offset = "0x10668C0", VA = "0x10668C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5148", Offset = "0x7E5148")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x10668C8", Offset = "0x10668C8", VA = "0x10668C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5158", Offset = "0x7E5158")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public float Float
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x10668D0", Offset = "0x10668D0", VA = "0x10668D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5168", Offset = "0x7E5168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x10668D8", Offset = "0x10668D8", VA = "0x10668D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5178", Offset = "0x7E5178")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public string String
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x10668E0", Offset = "0x10668E0", VA = "0x10668E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5188", Offset = "0x7E5188")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x10668E8", Offset = "0x10668E8", VA = "0x10668E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5198", Offset = "0x7E5198")]
			set
			{
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x10668F0", Offset = "0x10668F0", VA = "0x10668F0")]
		public EventData(string name)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x106697C", Offset = "0x106697C", VA = "0x106697C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x7CB61C", Offset = "0x7CB61C")]
	public class ExposedList<T> : IEnumerable<T>, IEnumerable
	{
		[Serializable]
		[Token(Token = "0x200023F")]
		public struct Enumerator : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ExposedList<T> l;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int next;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int ver;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T current;

			[Token(Token = "0x170002F8")]
			public T Current
			{
				[Token(Token = "0x6000F51")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F53")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F4D")]
			internal Enumerator(ExposedList<T> l)
			{
			}

			[Token(Token = "0x6000F4E")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000F4F")]
			private void VerifyState()
			{
			}

			[Token(Token = "0x6000F50")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F52")]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000D44")]
		private const int DefaultCapacity = 4;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly T[] EmptyArray;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int version;

		[Token(Token = "0x170002F7")]
		public int Capacity
		{
			[Token(Token = "0x6000F48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F49")]
			set
			{
			}
		}

		[Token(Token = "0x6000F07")]
		public ExposedList()
		{
		}

		[Token(Token = "0x6000F08")]
		public ExposedList(IEnumerable<T> collection)
		{
		}

		[Token(Token = "0x6000F09")]
		public ExposedList(int capacity)
		{
		}

		[Token(Token = "0x6000F0A")]
		internal ExposedList(T[] data, int size)
		{
		}

		[Token(Token = "0x6000F0B")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000F0C")]
		public void GrowIfNeeded(int newCount)
		{
		}

		[Token(Token = "0x6000F0D")]
		public ExposedList<T> Resize(int newSize)
		{
			return null;
		}

		[Token(Token = "0x6000F0E")]
		public void EnsureCapacity(int min)
		{
		}

		[Token(Token = "0x6000F0F")]
		private void CheckRange(int index, int count)
		{
		}

		[Token(Token = "0x6000F10")]
		private void AddCollection(ICollection<T> collection)
		{
		}

		[Token(Token = "0x6000F11")]
		private void AddEnumerable(IEnumerable<T> enumerable)
		{
		}

		[Token(Token = "0x6000F12")]
		public void AddRange(IEnumerable<T> collection)
		{
		}

		[Token(Token = "0x6000F13")]
		public int BinarySearch(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F14")]
		public int BinarySearch(T item, IComparer<T> comparer)
		{
			return default(int);
		}

		[Token(Token = "0x6000F15")]
		public int BinarySearch(int index, int count, T item, IComparer<T> comparer)
		{
			return default(int);
		}

		[Token(Token = "0x6000F16")]
		public void Clear(bool clearArray = true)
		{
		}

		[Token(Token = "0x6000F17")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F18")]
		public ExposedList<TOutput> ConvertAll<TOutput>(Converter<T, TOutput> converter)
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		public void CopyTo(T[] array)
		{
		}

		[Token(Token = "0x6000F1A")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000F1B")]
		public void CopyTo(int index, T[] array, int arrayIndex, int count)
		{
		}

		[Token(Token = "0x6000F1C")]
		public bool Exists(Predicate<T> match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1D")]
		public T Find(Predicate<T> match)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F1E")]
		private static void CheckMatch(Predicate<T> match)
		{
		}

		[Token(Token = "0x6000F1F")]
		public ExposedList<T> FindAll(Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x6000F20")]
		private ExposedList<T> FindAllList(Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x6000F21")]
		public int FindIndex(Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F22")]
		public int FindIndex(int startIndex, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F23")]
		public int FindIndex(int startIndex, int count, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F24")]
		private int GetIndex(int startIndex, int count, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F25")]
		public T FindLast(Predicate<T> match)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F26")]
		public int FindLastIndex(Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F27")]
		public int FindLastIndex(int startIndex, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F28")]
		public int FindLastIndex(int startIndex, int count, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F29")]
		private int GetLastIndex(int startIndex, int count, Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F2A")]
		public void ForEach(Action<T> action)
		{
		}

		[Token(Token = "0x6000F2B")]
		public Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F2C")]
		public ExposedList<T> GetRange(int index, int count)
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F2E")]
		public int IndexOf(T item, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000F2F")]
		public int IndexOf(T item, int index, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000F30")]
		private void Shift(int start, int delta)
		{
		}

		[Token(Token = "0x6000F31")]
		private void CheckIndex(int index)
		{
		}

		[Token(Token = "0x6000F32")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000F33")]
		private void CheckCollection(IEnumerable<T> collection)
		{
		}

		[Token(Token = "0x6000F34")]
		public void InsertRange(int index, IEnumerable<T> collection)
		{
		}

		[Token(Token = "0x6000F35")]
		private void InsertCollection(int index, ICollection<T> collection)
		{
		}

		[Token(Token = "0x6000F36")]
		private void InsertEnumeration(int index, IEnumerable<T> enumerable)
		{
		}

		[Token(Token = "0x6000F37")]
		public int LastIndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000F38")]
		public int LastIndexOf(T item, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000F39")]
		public int LastIndexOf(T item, int index, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3A")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		public int RemoveAll(Predicate<T> match)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3C")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000F3D")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x6000F3E")]
		public void RemoveRange(int index, int count)
		{
		}

		[Token(Token = "0x6000F3F")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6000F40")]
		public void Reverse(int index, int count)
		{
		}

		[Token(Token = "0x6000F41")]
		public void Sort()
		{
		}

		[Token(Token = "0x6000F42")]
		public void Sort(IComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000F43")]
		public void Sort(Comparison<T> comparison)
		{
		}

		[Token(Token = "0x6000F44")]
		public void Sort(int index, int count, IComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000F45")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		public void TrimExcess()
		{
		}

		[Token(Token = "0x6000F47")]
		public bool TrueForAll(Predicate<T> match)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000240")]
	public interface IConstraint : IUpdatable
	{
		[Token(Token = "0x170002FA")]
		int Order
		{
			[Token(Token = "0x6000F54")]
			get;
		}
	}
	[Token(Token = "0x2000241")]
	public interface IUpdatable
	{
		[Token(Token = "0x6000F55")]
		void Update();
	}
	[Token(Token = "0x2000242")]
	public class IkConstraint : IConstraint, IUpdatable
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IkConstraintData data;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ExposedList<Bone> bones;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Bone target;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float mix;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int bendDirection;

		[Token(Token = "0x170002FB")]
		public IkConstraintData Data
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x16A1508", Offset = "0x16A1508", VA = "0x16A1508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public int Order
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x16A1510", Offset = "0x16A1510", VA = "0x16A1510", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FD")]
		public ExposedList<Bone> Bones
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x16A152C", Offset = "0x16A152C", VA = "0x16A152C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public Bone Target
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x16A1534", Offset = "0x16A1534", VA = "0x16A1534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x16A153C", Offset = "0x16A153C", VA = "0x16A153C")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public int BendDirection
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x16A1544", Offset = "0x16A1544", VA = "0x16A1544")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x16A154C", Offset = "0x16A154C", VA = "0x16A154C")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public float Mix
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x16A1554", Offset = "0x16A1554", VA = "0x16A1554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x16A155C", Offset = "0x16A155C", VA = "0x16A155C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x16A1564", Offset = "0x16A1564", VA = "0x16A1564")]
		public IkConstraint(IkConstraintData data, Skeleton skeleton)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x16A1828", Offset = "0x16A1828", VA = "0x16A1828")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x16A182C", Offset = "0x16A182C", VA = "0x16A182C", Slot = "5")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x16A2288", Offset = "0x16A2288", VA = "0x16A2288", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x16A18D8", Offset = "0x16A18D8", VA = "0x16A18D8")]
		public static void Apply(Bone bone, float targetX, float targetY, float alpha)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x16A1A64", Offset = "0x16A1A64", VA = "0x16A1A64")]
		public static void Apply(Bone parent, Bone child, float targetX, float targetY, int bendDir, float alpha)
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class IkConstraintData
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int order;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<BoneData> bones;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BoneData target;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int bendDirection;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float mix;

		[Token(Token = "0x17000301")]
		public string Name
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x16A22A4", Offset = "0x16A22A4", VA = "0x16A22A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public int Order
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x16A22AC", Offset = "0x16A22AC", VA = "0x16A22AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x16A22B4", Offset = "0x16A22B4", VA = "0x16A22B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public List<BoneData> Bones
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x16A22BC", Offset = "0x16A22BC", VA = "0x16A22BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public BoneData Target
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x16A22C4", Offset = "0x16A22C4", VA = "0x16A22C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x16A22CC", Offset = "0x16A22CC", VA = "0x16A22CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public int BendDirection
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x16A22D4", Offset = "0x16A22D4", VA = "0x16A22D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x16A22DC", Offset = "0x16A22DC", VA = "0x16A22DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public float Mix
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x16A22E4", Offset = "0x16A22E4", VA = "0x16A22E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x16A22EC", Offset = "0x16A22EC", VA = "0x16A22EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x16A22F4", Offset = "0x16A22F4", VA = "0x16A22F4")]
		public IkConstraintData(string name)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x16A23EC", Offset = "0x16A23EC", VA = "0x16A23EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000244")]
	public static class Json
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x16A8F88", Offset = "0x16A8F88", VA = "0x16A8F88")]
		public static object Deserialize(TextReader text)
		{
			return null;
		}
	}
	[Token(Token = "0x2000245")]
	public static class MathUtils
	{
		[Token(Token = "0x4000D56")]
		public const float PI = (float)Math.PI;

		[Token(Token = "0x4000D57")]
		public const float PI2 = (float)Math.PI * 2f;

		[Token(Token = "0x4000D58")]
		public const float RadDeg = 180f / (float)Math.PI;

		[Token(Token = "0x4000D59")]
		public const float DegRad = (float)Math.PI / 180f;

		[Token(Token = "0x4000D5A")]
		private const int SIN_BITS = 14;

		[Token(Token = "0x4000D5B")]
		private const int SIN_MASK = 16383;

		[Token(Token = "0x4000D5C")]
		private const int SIN_COUNT = 16384;

		[Token(Token = "0x4000D5D")]
		private const float RadFull = (float)Math.PI * 2f;

		[Token(Token = "0x4000D5E")]
		private const float DegFull = 360f;

		[Token(Token = "0x4000D5F")]
		private const float RadToIndex = 8192f / (float)Math.PI;

		[Token(Token = "0x4000D60")]
		private const float DegToIndex = 45.511112f;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float[] sin;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1123978", Offset = "0x1123978", VA = "0x1123978")]
		static MathUtils()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1123B3C", Offset = "0x1123B3C", VA = "0x1123B3C")]
		public static float Sin(float radians)
		{
			return default(float);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1123C00", Offset = "0x1123C00", VA = "0x1123C00")]
		public static float Cos(float radians)
		{
			return default(float);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1123CD0", Offset = "0x1123CD0", VA = "0x1123CD0")]
		public static float SinDeg(float degrees)
		{
			return default(float);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1123D94", Offset = "0x1123D94", VA = "0x1123D94")]
		public static float CosDeg(float degrees)
		{
			return default(float);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1123E64", Offset = "0x1123E64", VA = "0x1123E64")]
		public static float Atan2(float y, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1123F84", Offset = "0x1123F84", VA = "0x1123F84")]
		public static float Clamp(float value, float min, float max)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000246")]
	public class PathConstraint : IConstraint, IUpdatable
	{
		[Token(Token = "0x4000D62")]
		private const int NONE = -1;

		[Token(Token = "0x4000D63")]
		private const int BEFORE = -2;

		[Token(Token = "0x4000D64")]
		private const int AFTER = -3;

		[Token(Token = "0x4000D65")]
		private const float Epsilon = 1E-05f;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal PathConstraintData data;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ExposedList<Bone> bones;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Slot target;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float position;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float spacing;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float rotateMix;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float translateMix;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal ExposedList<float> spaces;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ExposedList<float> positions;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ExposedList<float> world;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal ExposedList<float> curves;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal ExposedList<float> lengths;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float[] segments;

		[Token(Token = "0x17000307")]
		public int Order
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xFF7714", Offset = "0xFF7714", VA = "0xFF7714", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000308")]
		public float Position
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xFF7730", Offset = "0xFF7730", VA = "0xFF7730")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xFF7738", Offset = "0xFF7738", VA = "0xFF7738")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public float Spacing
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xFF7740", Offset = "0xFF7740", VA = "0xFF7740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xFF7748", Offset = "0xFF7748", VA = "0xFF7748")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public float RotateMix
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xFF7750", Offset = "0xFF7750", VA = "0xFF7750")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xFF7758", Offset = "0xFF7758", VA = "0xFF7758")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public float TranslateMix
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xFF7760", Offset = "0xFF7760", VA = "0xFF7760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xFF7768", Offset = "0xFF7768", VA = "0xFF7768")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public ExposedList<Bone> Bones
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xFF7770", Offset = "0xFF7770", VA = "0xFF7770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public Slot Target
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xFF7778", Offset = "0xFF7778", VA = "0xFF7778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xFF7780", Offset = "0xFF7780", VA = "0xFF7780")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public PathConstraintData Data
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xFF7788", Offset = "0xFF7788", VA = "0xFF7788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xFF7790", Offset = "0xFF7790", VA = "0xFF7790")]
		public PathConstraint(PathConstraintData data, Skeleton skeleton)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xFF7AF0", Offset = "0xFF7AF0", VA = "0xFF7AF0")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xFF7AF4", Offset = "0xFF7AF4", VA = "0xFF7AF4", Slot = "5")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xFF8260", Offset = "0xFF8260", VA = "0xFF8260")]
		private float[] ComputeWorldPositions(PathAttachment path, int spacesCount, bool tangents, bool percentPosition, bool percentSpacing)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xFF9068", Offset = "0xFF9068", VA = "0xFF9068")]
		private static void AddBeforePosition(float p, float[] temp, int i, float[] output, int o)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xFF91E4", Offset = "0xFF91E4", VA = "0xFF91E4")]
		private static void AddAfterPosition(float p, float[] temp, int i, float[] output, int o)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xFF9360", Offset = "0xFF9360", VA = "0xFF9360")]
		private static void AddCurvePosition(float p, float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2, float[] output, int o, bool tangents)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class PathConstraintData
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int order;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal ExposedList<BoneData> bones;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal SlotData target;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal PositionMode positionMode;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal SpacingMode spacingMode;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal RotateMode rotateMode;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float offsetRotation;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float position;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float spacing;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float rotateMix;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal float translateMix;

		[Token(Token = "0x1700030F")]
		public string Name
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xFF95B0", Offset = "0xFF95B0", VA = "0xFF95B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public int Order
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xFF95B8", Offset = "0xFF95B8", VA = "0xFF95B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xFF95C0", Offset = "0xFF95C0", VA = "0xFF95C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public ExposedList<BoneData> Bones
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xFF95C8", Offset = "0xFF95C8", VA = "0xFF95C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		public SlotData Target
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xFF95D0", Offset = "0xFF95D0", VA = "0xFF95D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xFF95D8", Offset = "0xFF95D8", VA = "0xFF95D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public PositionMode PositionMode
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xFF95E0", Offset = "0xFF95E0", VA = "0xFF95E0")]
			get
			{
				return default(PositionMode);
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xFF95E8", Offset = "0xFF95E8", VA = "0xFF95E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public SpacingMode SpacingMode
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xFF95F0", Offset = "0xFF95F0", VA = "0xFF95F0")]
			get
			{
				return default(SpacingMode);
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xFF95F8", Offset = "0xFF95F8", VA = "0xFF95F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public RotateMode RotateMode
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xFF9600", Offset = "0xFF9600", VA = "0xFF9600")]
			get
			{
				return default(RotateMode);
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xFF9608", Offset = "0xFF9608", VA = "0xFF9608")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public float OffsetRotation
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xFF9610", Offset = "0xFF9610", VA = "0xFF9610")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xFF9618", Offset = "0xFF9618", VA = "0xFF9618")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public float Position
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xFF9620", Offset = "0xFF9620", VA = "0xFF9620")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xFF9628", Offset = "0xFF9628", VA = "0xFF9628")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public float Spacing
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xFF9630", Offset = "0xFF9630", VA = "0xFF9630")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xFF9638", Offset = "0xFF9638", VA = "0xFF9638")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float RotateMix
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xFF9640", Offset = "0xFF9640", VA = "0xFF9640")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xFF9648", Offset = "0xFF9648", VA = "0xFF9648")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public float TranslateMix
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xFF9650", Offset = "0xFF9650", VA = "0xFF9650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xFF9658", Offset = "0xFF9658", VA = "0xFF9658")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xFF9660", Offset = "0xFF9660", VA = "0xFF9660")]
		public PathConstraintData(string name)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xFF974C", Offset = "0xFF974C", VA = "0xFF974C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000248")]
	public enum PositionMode
	{
		[Token(Token = "0x4000D80")]
		Fixed,
		[Token(Token = "0x4000D81")]
		Percent
	}
	[Token(Token = "0x2000249")]
	public enum SpacingMode
	{
		[Token(Token = "0x4000D83")]
		Length,
		[Token(Token = "0x4000D84")]
		Fixed,
		[Token(Token = "0x4000D85")]
		Percent
	}
	[Token(Token = "0x200024A")]
	public enum RotateMode
	{
		[Token(Token = "0x4000D87")]
		Tangent,
		[Token(Token = "0x4000D88")]
		Chain,
		[Token(Token = "0x4000D89")]
		ChainScale
	}
	[Token(Token = "0x200024B")]
	public class Skeleton
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SkeletonData data;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ExposedList<Bone> bones;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal ExposedList<Slot> slots;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ExposedList<Slot> drawOrder;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal ExposedList<IkConstraint> ikConstraints;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal ExposedList<TransformConstraint> transformConstraints;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ExposedList<PathConstraint> pathConstraints;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ExposedList<IUpdatable> updateCache;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal ExposedList<Bone> updateCacheReset;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal Skin skin;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float r;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal float g;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal float b;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal float a;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal float time;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal bool flipX;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		internal bool flipY;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal float x;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal float y;

		[Token(Token = "0x1700031B")]
		public SkeletonData Data
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xDA4584", Offset = "0xDA4584", VA = "0xDA4584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public ExposedList<Bone> Bones
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xDA458C", Offset = "0xDA458C", VA = "0xDA458C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public ExposedList<IUpdatable> UpdateCacheList
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xDA4594", Offset = "0xDA4594", VA = "0xDA4594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public ExposedList<Slot> Slots
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xDA459C", Offset = "0xDA459C", VA = "0xDA459C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public ExposedList<Slot> DrawOrder
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xDA45A4", Offset = "0xDA45A4", VA = "0xDA45A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public ExposedList<IkConstraint> IkConstraints
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xDA45AC", Offset = "0xDA45AC", VA = "0xDA45AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public ExposedList<PathConstraint> PathConstraints
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xDA45B4", Offset = "0xDA45B4", VA = "0xDA45B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		public ExposedList<TransformConstraint> TransformConstraints
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xDA45BC", Offset = "0xDA45BC", VA = "0xDA45BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public Skin Skin
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xDA45C4", Offset = "0xDA45C4", VA = "0xDA45C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xDA45CC", Offset = "0xDA45CC", VA = "0xDA45CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public float R
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xDA45D4", Offset = "0xDA45D4", VA = "0xDA45D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xDA45DC", Offset = "0xDA45DC", VA = "0xDA45DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public float G
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xDA45E4", Offset = "0xDA45E4", VA = "0xDA45E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xDA45EC", Offset = "0xDA45EC", VA = "0xDA45EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public float B
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xDA45F4", Offset = "0xDA45F4", VA = "0xDA45F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xDA45FC", Offset = "0xDA45FC", VA = "0xDA45FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public float A
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xDA4604", Offset = "0xDA4604", VA = "0xDA4604")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xDA460C", Offset = "0xDA460C", VA = "0xDA460C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public float Time
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xDA4614", Offset = "0xDA4614", VA = "0xDA4614")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xDA461C", Offset = "0xDA461C", VA = "0xDA461C")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public float X
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0xDA4624", Offset = "0xDA4624", VA = "0xDA4624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0xDA462C", Offset = "0xDA462C", VA = "0xDA462C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public float Y
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0xDA4634", Offset = "0xDA4634", VA = "0xDA4634")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0xDA463C", Offset = "0xDA463C", VA = "0xDA463C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public bool FlipX
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xDA4644", Offset = "0xDA4644", VA = "0xDA4644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xDA464C", Offset = "0xDA464C", VA = "0xDA464C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public bool FlipY
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xDA4658", Offset = "0xDA4658", VA = "0xDA4658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xDA4660", Offset = "0xDA4660", VA = "0xDA4660")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public Bone RootBone
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xDA466C", Offset = "0xDA466C", VA = "0xDA466C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDA46B8", Offset = "0xDA46B8", VA = "0xDA46B8")]
		public Skeleton(SkeletonData data)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDA5228", Offset = "0xDA5228", VA = "0xDA5228")]
		public void UpdateCache()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDA5618", Offset = "0xDA5618", VA = "0xDA5618")]
		private void SortIkConstraint(IkConstraint constraint)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDA5994", Offset = "0xDA5994", VA = "0xDA5994")]
		private void SortPathConstraint(PathConstraint constraint)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDA5790", Offset = "0xDA5790", VA = "0xDA5790")]
		private void SortTransformConstraint(TransformConstraint constraint)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xDA5D28", Offset = "0xDA5D28", VA = "0xDA5D28")]
		private void SortPathConstraintAttachment(Skin skin, int slotIndex, Bone slotBone)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xDA5E88", Offset = "0xDA5E88", VA = "0xDA5E88")]
		private void SortPathConstraintAttachment(Attachment attachment, Bone slotBone)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDA5C04", Offset = "0xDA5C04", VA = "0xDA5C04")]
		private void SortBone(Bone bone)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xDA5C9C", Offset = "0xDA5C9C", VA = "0xDA5C9C")]
		private static void SortReset(ExposedList<Bone> bones)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xDA54AC", Offset = "0xDA54AC", VA = "0xDA54AC")]
		public void UpdateWorldTransform()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xDA6004", Offset = "0xDA6004", VA = "0xDA6004")]
		public void SetToSetupPose()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xDA6028", Offset = "0xDA6028", VA = "0xDA6028")]
		public void SetBonesToSetupPose()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xDA61E4", Offset = "0xDA61E4", VA = "0xDA61E4")]
		public void SetSlotsToSetupPose()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xDA6304", Offset = "0xDA6304", VA = "0xDA6304")]
		public Bone FindBone(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xDA6408", Offset = "0xDA6408", VA = "0xDA6408")]
		public int FindBoneIndex(string boneName)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xDA650C", Offset = "0xDA650C", VA = "0xDA650C")]
		public Slot FindSlot(string slotName)
		{
			return null;
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xDA6610", Offset = "0xDA6610", VA = "0xDA6610")]
		public int FindSlotIndex(string slotName)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xDA6718", Offset = "0xDA6718", VA = "0xDA6718")]
		public void SetSkin(string skinName)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xDA67C0", Offset = "0xDA67C0", VA = "0xDA67C0")]
		public void SetSkin(Skin newSkin)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xDA689C", Offset = "0xDA689C", VA = "0xDA689C")]
		public Attachment GetAttachment(string slotName, string attachmentName)
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xDA68DC", Offset = "0xDA68DC", VA = "0xDA68DC")]
		public Attachment GetAttachment(int slotIndex, string attachmentName)
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xDA69B4", Offset = "0xDA69B4", VA = "0xDA69B4")]
		public void SetAttachment(string slotName, string attachmentName)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xDA6B74", Offset = "0xDA6B74", VA = "0xDA6B74")]
		public IkConstraint FindIkConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xDA6C78", Offset = "0xDA6C78", VA = "0xDA6C78")]
		public TransformConstraint FindTransformConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xDA6D7C", Offset = "0xDA6D7C", VA = "0xDA6D7C")]
		public PathConstraint FindPathConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xDA6E84", Offset = "0xDA6E84", VA = "0xDA6E84")]
		public void Update(float delta)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xDA6E94", Offset = "0xDA6E94", VA = "0xDA6E94")]
		public void GetBounds(out float x, out float y, out float width, out float height, ref float[] vertexBuffer)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class SkeletonBinary
	{
		[Token(Token = "0x200024D")]
		internal class Vertices
		{
			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] bones;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] vertices;

			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xCC3618", Offset = "0xCC3618", VA = "0xCC3618")]
			public Vertices()
			{
			}
		}

		[Token(Token = "0x4000D9D")]
		public const int BONE_ROTATE = 0;

		[Token(Token = "0x4000D9E")]
		public const int BONE_TRANSLATE = 1;

		[Token(Token = "0x4000D9F")]
		public const int BONE_SCALE = 2;

		[Token(Token = "0x4000DA0")]
		public const int BONE_SHEAR = 3;

		[Token(Token = "0x4000DA1")]
		public const int SLOT_ATTACHMENT = 0;

		[Token(Token = "0x4000DA2")]
		public const int SLOT_COLOR = 1;

		[Token(Token = "0x4000DA3")]
		public const int SLOT_TWO_COLOR = 2;

		[Token(Token = "0x4000DA4")]
		public const int PATH_POSITION = 0;

		[Token(Token = "0x4000DA5")]
		public const int PATH_SPACING = 1;

		[Token(Token = "0x4000DA6")]
		public const int PATH_MIX = 2;

		[Token(Token = "0x4000DA7")]
		public const int CURVE_LINEAR = 0;

		[Token(Token = "0x4000DA8")]
		public const int CURVE_STEPPED = 1;

		[Token(Token = "0x4000DA9")]
		public const int CURVE_BEZIER = 2;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD40", Offset = "0x7CFD40")]
		private float <Scale>k__BackingField;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AttachmentLoader attachmentLoader;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] buffer;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SkeletonJson.LinkedMesh> linkedMeshes;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TransformMode[] TransformModeValues;

		[Token(Token = "0x1700032E")]
		public float Scale
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xDA8F28", Offset = "0xDA8F28", VA = "0xDA8F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51A8", Offset = "0x7E51A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xDA8F30", Offset = "0xDA8F30", VA = "0xDA8F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51B8", Offset = "0x7E51B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xDA8F38", Offset = "0xDA8F38", VA = "0xDA8F38")]
		public SkeletonBinary(params Atlas[] atlasArray)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xDA8FA8", Offset = "0xDA8FA8", VA = "0xDA8FA8")]
		public SkeletonBinary(AttachmentLoader attachmentLoader)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xDA90AC", Offset = "0xDA90AC", VA = "0xDA90AC")]
		public SkeletonData ReadSkeletonData(string path)
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xDAA5B8", Offset = "0xDAA5B8", VA = "0xDAA5B8")]
		public static string GetVersionString(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xDA926C", Offset = "0xDA926C", VA = "0xDA926C")]
		public SkeletonData ReadSkeletonData(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xDAAE04", Offset = "0xDAAE04", VA = "0xDAAE04")]
		private Skin ReadSkin(System.IO.Stream input, SkeletonData skeletonData, string skinName, bool nonessential)
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xDACB58", Offset = "0xDACB58", VA = "0xDACB58")]
		private Attachment ReadAttachment(System.IO.Stream input, SkeletonData skeletonData, Skin skin, int slotIndex, string attachmentName, bool nonessential)
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xDAD78C", Offset = "0xDAD78C", VA = "0xDAD78C")]
		private Vertices ReadVertices(System.IO.Stream input, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xDADAA0", Offset = "0xDADAA0", VA = "0xDADAA0")]
		private float[] ReadFloatArray(System.IO.Stream input, int n, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xDADBC0", Offset = "0xDADBC0", VA = "0xDADBC0")]
		private int[] ReadShortArray(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xDAAFB4", Offset = "0xDAAFB4", VA = "0xDAAFB4")]
		private void ReadAnimation(string name, System.IO.Stream input, SkeletonData skeletonData)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xDADCE0", Offset = "0xDADCE0", VA = "0xDADCE0")]
		private void ReadCurve(System.IO.Stream input, int frameIndex, CurveTimeline timeline)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xDAAD98", Offset = "0xDAAD98", VA = "0xDAAD98")]
		private static sbyte ReadSByte(System.IO.Stream input)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xDAACD4", Offset = "0xDAACD4", VA = "0xDAACD4")]
		private static bool ReadBoolean(System.IO.Stream input)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xDAAB9C", Offset = "0xDAAB9C", VA = "0xDAAB9C")]
		private float ReadFloat(System.IO.Stream input)
		{
			return default(float);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xDAAD04", Offset = "0xDAAD04", VA = "0xDAAD04")]
		private static int ReadInt(System.IO.Stream input)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xDAA8EC", Offset = "0xDAA8EC", VA = "0xDAA8EC")]
		private static int ReadVarint(System.IO.Stream input, bool optimizePositive)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xDAAA60", Offset = "0xDAAA60", VA = "0xDAAA60")]
		private string ReadString(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xDAA9B4", Offset = "0xDAA9B4", VA = "0xDAA9B4")]
		private static void ReadFully(System.IO.Stream input, byte[] buffer, int offset, int length)
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class SkeletonBounds
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ExposedList<Polygon> polygonPool;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float minX;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float minY;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float maxX;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float maxY;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD50", Offset = "0x7CFD50")]
		private ExposedList<BoundingBoxAttachment> <BoundingBoxes>k__BackingField;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD60", Offset = "0x7CFD60")]
		private ExposedList<Polygon> <Polygons>k__BackingField;

		[Token(Token = "0x1700032F")]
		public ExposedList<BoundingBoxAttachment> BoundingBoxes
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x12BA678", Offset = "0x12BA678", VA = "0x12BA678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51C8", Offset = "0x7E51C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x12BA680", Offset = "0x12BA680", VA = "0x12BA680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51D8", Offset = "0x7E51D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public ExposedList<Polygon> Polygons
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x12BA688", Offset = "0x12BA688", VA = "0x12BA688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51E8", Offset = "0x7E51E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x12BA690", Offset = "0x12BA690", VA = "0x12BA690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E51F8", Offset = "0x7E51F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public float MinX
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x12BA698", Offset = "0x12BA698", VA = "0x12BA698")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x12BA6A0", Offset = "0x12BA6A0", VA = "0x12BA6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public float MinY
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x12BA6A8", Offset = "0x12BA6A8", VA = "0x12BA6A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x12BA6B0", Offset = "0x12BA6B0", VA = "0x12BA6B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public float MaxX
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x12BA6B8", Offset = "0x12BA6B8", VA = "0x12BA6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x12BA6C0", Offset = "0x12BA6C0", VA = "0x12BA6C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public float MaxY
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x12BA6C8", Offset = "0x12BA6C8", VA = "0x12BA6C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x12BA6D0", Offset = "0x12BA6D0", VA = "0x12BA6D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public float Width
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x12BA6D8", Offset = "0x12BA6D8", VA = "0x12BA6D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000336")]
		public float Height
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x12BA6E8", Offset = "0x12BA6E8", VA = "0x12BA6E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x12BA6F8", Offset = "0x12BA6F8", VA = "0x12BA6F8")]
		public SkeletonBounds()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x12BA7D4", Offset = "0x12BA7D4", VA = "0x12BA7D4")]
		public void Update(Skeleton skeleton, bool updateAabb)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x12BAACC", Offset = "0x12BAACC", VA = "0x12BAACC")]
		private void AabbCompute()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x12BAC7C", Offset = "0x12BAC7C", VA = "0x12BAC7C")]
		public bool AabbContainsPoint(float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x12BACB8", Offset = "0x12BACB8", VA = "0x12BACB8")]
		public bool AabbIntersectsSegment(float x1, float y1, float x2, float y2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x12BAD94", Offset = "0x12BAD94", VA = "0x12BAD94")]
		public bool AabbIntersectsSkeleton(SkeletonBounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x12BADF0", Offset = "0x12BADF0", VA = "0x12BADF0")]
		public bool ContainsPoint(Polygon polygon, float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x12BAEE4", Offset = "0x12BAEE4", VA = "0x12BAEE4")]
		public BoundingBoxAttachment ContainsPoint(float x, float y)
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x12BAFA4", Offset = "0x12BAFA4", VA = "0x12BAFA4")]
		public BoundingBoxAttachment IntersectsSegment(float x1, float y1, float x2, float y2)
		{
			return null;
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x12BB07C", Offset = "0x12BB07C", VA = "0x12BB07C")]
		public bool IntersectsSegment(Polygon polygon, float x1, float y1, float x2, float y2)
		{
			return default(bool);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x12BB1F8", Offset = "0x12BB1F8", VA = "0x12BB1F8")]
		public Polygon GetPolygon(BoundingBoxAttachment attachment)
		{
			return null;
		}
	}
	[Token(Token = "0x200024F")]
	public class Polygon
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD70", Offset = "0x7CFD70")]
		private float[] <Vertices>k__BackingField;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD80", Offset = "0x7CFD80")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000337")]
		public float[] Vertices
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x12FCCC8", Offset = "0x12FCCC8", VA = "0x12FCCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5208", Offset = "0x7E5208")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x12FCCD0", Offset = "0x12FCCD0", VA = "0x12FCCD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5218", Offset = "0x7E5218")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public int Count
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x12FCCD8", Offset = "0x12FCCD8", VA = "0x12FCCD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5228", Offset = "0x7E5228")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x12FCCE0", Offset = "0x12FCCE0", VA = "0x12FCCE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5238", Offset = "0x7E5238")]
			set
			{
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x12FCCE8", Offset = "0x12FCCE8", VA = "0x12FCCE8")]
		public Polygon()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class SkeletonClipping
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly Triangulator triangulator;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly ExposedList<float> clippingPolygon;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly ExposedList<float> clipOutput;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly ExposedList<float> clippedVertices;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly ExposedList<int> clippedTriangles;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal readonly ExposedList<float> clippedUVs;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal readonly ExposedList<float> scratch;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ClippingAttachment clipAttachment;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal ExposedList<ExposedList<float>> clippingPolygons;

		[Token(Token = "0x17000339")]
		public ExposedList<float> ClippedVertices
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x12BB2A0", Offset = "0x12BB2A0", VA = "0x12BB2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public ExposedList<int> ClippedTriangles
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x12BB2A8", Offset = "0x12BB2A8", VA = "0x12BB2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public ExposedList<float> ClippedUVs
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x12BB2B0", Offset = "0x12BB2B0", VA = "0x12BB2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public bool IsClipping
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x12BB2B8", Offset = "0x12BB2B8", VA = "0x12BB2B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x12BB2C8", Offset = "0x12BB2C8", VA = "0x12BB2C8")]
		public int ClipStart(Slot slot, ClippingAttachment clip)
		{
			return default(int);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x12BB6B0", Offset = "0x12BB6B0", VA = "0x12BB6B0")]
		public void ClipEnd(Slot slot)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x12BB6E0", Offset = "0x12BB6E0", VA = "0x12BB6E0")]
		public void ClipEnd()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x12BB790", Offset = "0x12BB790", VA = "0x12BB790")]
		public void ClipTriangles(float[] vertices, int verticesLength, int[] triangles, int trianglesLength, float[] uvs)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x12BBF38", Offset = "0x12BBF38", VA = "0x12BBF38")]
		internal bool Clip(float x1, float y1, float x2, float y2, float x3, float y3, ExposedList<float> clippingArea, ExposedList<float> output)
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x12BB540", Offset = "0x12BB540", VA = "0x12BB540")]
		private static void MakeClockwise(ExposedList<float> polygon)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x12BC4A4", Offset = "0x12BC4A4", VA = "0x12BC4A4")]
		public SkeletonClipping()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class SkeletonData
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ExposedList<BoneData> bones;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal ExposedList<SlotData> slots;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ExposedList<Skin> skins;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Skin defaultSkin;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal ExposedList<EventData> events;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ExposedList<Animation> animations;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ExposedList<IkConstraintData> ikConstraints;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal ExposedList<TransformConstraintData> transformConstraints;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal ExposedList<PathConstraintData> pathConstraints;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float width;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal float height;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal string version;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal string hash;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal float fps;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal string imagesPath;

		[Token(Token = "0x1700033D")]
		public string Name
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x12BC8C4", Offset = "0x12BC8C4", VA = "0x12BC8C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x12BC8CC", Offset = "0x12BC8CC", VA = "0x12BC8CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public ExposedList<BoneData> Bones
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x12BC8D4", Offset = "0x12BC8D4", VA = "0x12BC8D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public ExposedList<SlotData> Slots
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x12BC8DC", Offset = "0x12BC8DC", VA = "0x12BC8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public ExposedList<Skin> Skins
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x12BC8E4", Offset = "0x12BC8E4", VA = "0x12BC8E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x12BC8EC", Offset = "0x12BC8EC", VA = "0x12BC8EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public Skin DefaultSkin
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x12BC8F4", Offset = "0x12BC8F4", VA = "0x12BC8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x12BC8FC", Offset = "0x12BC8FC", VA = "0x12BC8FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public ExposedList<EventData> Events
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x12BC904", Offset = "0x12BC904", VA = "0x12BC904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x12BC90C", Offset = "0x12BC90C", VA = "0x12BC90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public ExposedList<Animation> Animations
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x12BC914", Offset = "0x12BC914", VA = "0x12BC914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x12BC91C", Offset = "0x12BC91C", VA = "0x12BC91C")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public ExposedList<IkConstraintData> IkConstraints
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x12BC924", Offset = "0x12BC924", VA = "0x12BC924")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x12BC92C", Offset = "0x12BC92C", VA = "0x12BC92C")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public ExposedList<TransformConstraintData> TransformConstraints
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x12BC934", Offset = "0x12BC934", VA = "0x12BC934")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x12BC93C", Offset = "0x12BC93C", VA = "0x12BC93C")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public ExposedList<PathConstraintData> PathConstraints
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x12BC944", Offset = "0x12BC944", VA = "0x12BC944")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x12BC94C", Offset = "0x12BC94C", VA = "0x12BC94C")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public float Width
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x12BC954", Offset = "0x12BC954", VA = "0x12BC954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x12BC95C", Offset = "0x12BC95C", VA = "0x12BC95C")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public float Height
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x12BC964", Offset = "0x12BC964", VA = "0x12BC964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x12BC96C", Offset = "0x12BC96C", VA = "0x12BC96C")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public string Version
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x12BC974", Offset = "0x12BC974", VA = "0x12BC974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x12BC97C", Offset = "0x12BC97C", VA = "0x12BC97C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public string Hash
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x12BC984", Offset = "0x12BC984", VA = "0x12BC984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x12BC98C", Offset = "0x12BC98C", VA = "0x12BC98C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public string ImagesPath
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x12BC994", Offset = "0x12BC994", VA = "0x12BC994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x12BC99C", Offset = "0x12BC99C", VA = "0x12BC99C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public float Fps
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x12BC9A4", Offset = "0x12BC9A4", VA = "0x12BC9A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x12BC9AC", Offset = "0x12BC9AC", VA = "0x12BC9AC")]
			set
			{
			}
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x12BC9B4", Offset = "0x12BC9B4", VA = "0x12BC9B4")]
		public BoneData FindBone(string boneName)
		{
			return null;
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x12BCAB0", Offset = "0x12BCAB0", VA = "0x12BCAB0")]
		public int FindBoneIndex(string boneName)
		{
			return default(int);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x12BCBAC", Offset = "0x12BCBAC", VA = "0x12BCBAC")]
		public SlotData FindSlot(string slotName)
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x12BCCA8", Offset = "0x12BCCA8", VA = "0x12BCCA8")]
		public int FindSlotIndex(string slotName)
		{
			return default(int);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x12BCD9C", Offset = "0x12BCD9C", VA = "0x12BCD9C")]
		public Skin FindSkin(string skinName)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x12BCF4C", Offset = "0x12BCF4C", VA = "0x12BCF4C")]
		public EventData FindEvent(string eventDataName)
		{
			return null;
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x12BD0FC", Offset = "0x12BD0FC", VA = "0x12BD0FC")]
		public Animation FindAnimation(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x12BD1F8", Offset = "0x12BD1F8", VA = "0x12BD1F8")]
		public IkConstraintData FindIkConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x12BD2F4", Offset = "0x12BD2F4", VA = "0x12BD2F4")]
		public TransformConstraintData FindTransformConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x12BD3F0", Offset = "0x12BD3F0", VA = "0x12BD3F0")]
		public PathConstraintData FindPathConstraint(string constraintName)
		{
			return null;
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x12BD4F0", Offset = "0x12BD4F0", VA = "0x12BD4F0")]
		public int FindPathConstraintIndex(string pathConstraintName)
		{
			return default(int);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x12BD5E8", Offset = "0x12BD5E8", VA = "0x12BD5E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x12BD600", Offset = "0x12BD600", VA = "0x12BD600")]
		public SkeletonData()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class SkeletonJson
	{
		[Token(Token = "0x2000253")]
		internal class LinkedMesh
		{
			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string parent;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string skin;

			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int slotIndex;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal MeshAttachment mesh;

			[Token(Token = "0x6001059")]
			[Address(RVA = "0xCC3B34", Offset = "0xCC3B34", VA = "0xCC3B34")]
			public LinkedMesh(MeshAttachment mesh, string skin, int slotIndex, string parent)
			{
			}
		}

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD90", Offset = "0x7CFD90")]
		private float <Scale>k__BackingField;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AttachmentLoader attachmentLoader;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LinkedMesh> linkedMeshes;

		[Token(Token = "0x1700034D")]
		public float Scale
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x12C50BC", Offset = "0x12C50BC", VA = "0x12C50BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5248", Offset = "0x7E5248")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x12C50C4", Offset = "0x12C50C4", VA = "0x12C50C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5258", Offset = "0x7E5258")]
			set
			{
			}
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x12C50CC", Offset = "0x12C50CC", VA = "0x12C50CC")]
		public SkeletonJson(params Atlas[] atlasArray)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x12BE264", Offset = "0x12BE264", VA = "0x12BE264")]
		public SkeletonJson(AttachmentLoader attachmentLoader)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x12C513C", Offset = "0x12C513C", VA = "0x12C513C")]
		public SkeletonData ReadSkeletonData(string path)
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x12BE358", Offset = "0x12BE358", VA = "0x12BE358")]
		public SkeletonData ReadSkeletonData(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x12C57F8", Offset = "0x12C57F8", VA = "0x12C57F8")]
		private Attachment ReadAttachment(Dictionary<string, object> map, Skin skin, int slotIndex, string name, SkeletonData skeletonData)
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x12CB60C", Offset = "0x12CB60C", VA = "0x12CB60C")]
		private void ReadVertices(Dictionary<string, object> map, VertexAttachment attachment, int verticesLength)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x12C64BC", Offset = "0x12C64BC", VA = "0x12C64BC")]
		private void ReadAnimation(Dictionary<string, object> map, string name, SkeletonData skeletonData)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x12CBD84", Offset = "0x12CBD84", VA = "0x12CBD84")]
		private static void ReadCurve(Dictionary<string, object> valueMap, CurveTimeline timeline, int frameIndex)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x12CB968", Offset = "0x12CB968", VA = "0x12CB968")]
		private static float[] GetFloatArray(Dictionary<string, object> map, string name, float scale)
		{
			return null;
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x12CBBB8", Offset = "0x12CBBB8", VA = "0x12CBBB8")]
		private static int[] GetIntArray(Dictionary<string, object> map, string name)
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x12C5328", Offset = "0x12C5328", VA = "0x12C5328")]
		private static float GetFloat(Dictionary<string, object> map, string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x12C562C", Offset = "0x12C562C", VA = "0x12C562C")]
		private static int GetInt(Dictionary<string, object> map, string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x12C571C", Offset = "0x12C571C", VA = "0x12C571C")]
		private static bool GetBoolean(Dictionary<string, object> map, string name, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x12C5404", Offset = "0x12C5404", VA = "0x12C5404")]
		private static string GetString(Dictionary<string, object> map, string name, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x12C54D0", Offset = "0x12C54D0", VA = "0x12C54D0")]
		private static float ToColor(string hexString, int colorIndex, int expectedLength = 8)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000254")]
	public class Skin
	{
		[Token(Token = "0x2000255")]
		public struct AttachmentKeyTuple
		{
			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int slotIndex;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string name;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal readonly int nameHashCode;

			[Token(Token = "0x6001063")]
			[Address(RVA = "0xCC5050", Offset = "0xCC5050", VA = "0xCC5050")]
			public AttachmentKeyTuple(int slotIndex, string name)
			{
			}
		}

		[Token(Token = "0x2000256")]
		private class AttachmentKeyTupleComparer : IEqualityComparer<AttachmentKeyTuple>
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly AttachmentKeyTupleComparer Instance;

			[Token(Token = "0x6001064")]
			[Address(RVA = "0xCC5090", Offset = "0xCC5090", VA = "0xCC5090", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<Spine.Skin.AttachmentKeyTuple>.Equals(AttachmentKeyTuple o1, AttachmentKeyTuple o2)
			{
				return default(bool);
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0xCC50C8", Offset = "0xCC50C8", VA = "0xCC50C8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<Spine.Skin.AttachmentKeyTuple>.GetHashCode(AttachmentKeyTuple o)
			{
				return default(int);
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0xCC50D0", Offset = "0xCC50D0", VA = "0xCC50D0")]
			public AttachmentKeyTupleComparer()
			{
			}
		}

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<AttachmentKeyTuple, Attachment> attachments;

		[Token(Token = "0x1700034E")]
		public string Name
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x1279868", Offset = "0x1279868", VA = "0x1279868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public Dictionary<AttachmentKeyTuple, Attachment> Attachments
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1279870", Offset = "0x1279870", VA = "0x1279870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1279878", Offset = "0x1279878", VA = "0x1279878")]
		public Skin(string name)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x12799A0", Offset = "0x12799A0", VA = "0x12799A0")]
		public void AddAttachment(int slotIndex, string name, Attachment attachment)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1275B80", Offset = "0x1275B80", VA = "0x1275B80")]
		public Attachment GetAttachment(int slotIndex, string name)
		{
			return null;
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1279AB4", Offset = "0x1279AB4", VA = "0x1279AB4")]
		public void FindNamesForSlot(int slotIndex, List<string> names)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1279C7C", Offset = "0x1279C7C", VA = "0x1279C7C")]
		public void FindAttachmentsForSlot(int slotIndex, List<Attachment> attachments)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1279E40", Offset = "0x1279E40", VA = "0x1279E40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1279E48", Offset = "0x1279E48", VA = "0x1279E48")]
		internal void AttachAll(Skeleton skeleton, Skin oldSkin)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class Slot
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SlotData data;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Bone bone;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float r;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float g;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float b;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float a;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float r2;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float g2;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float b2;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal bool hasSecondColor;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Attachment attachment;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float attachmentTime;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal ExposedList<float> attachmentVertices;

		[Token(Token = "0x17000350")]
		public SlotData Data
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x127B11C", Offset = "0x127B11C", VA = "0x127B11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		public Bone Bone
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x127B124", Offset = "0x127B124", VA = "0x127B124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public Skeleton Skeleton
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x1275EFC", Offset = "0x1275EFC", VA = "0x1275EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public float R
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x127B12C", Offset = "0x127B12C", VA = "0x127B12C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x127B134", Offset = "0x127B134", VA = "0x127B134")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public float G
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x127B13C", Offset = "0x127B13C", VA = "0x127B13C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x127B144", Offset = "0x127B144", VA = "0x127B144")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public float B
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x127B14C", Offset = "0x127B14C", VA = "0x127B14C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x127B154", Offset = "0x127B154", VA = "0x127B154")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public float A
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x127B15C", Offset = "0x127B15C", VA = "0x127B15C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x127B164", Offset = "0x127B164", VA = "0x127B164")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public float R2
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x127B16C", Offset = "0x127B16C", VA = "0x127B16C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x127B174", Offset = "0x127B174", VA = "0x127B174")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public float G2
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x127B17C", Offset = "0x127B17C", VA = "0x127B17C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x127B184", Offset = "0x127B184", VA = "0x127B184")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public float B2
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0x127B18C", Offset = "0x127B18C", VA = "0x127B18C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x127B194", Offset = "0x127B194", VA = "0x127B194")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public bool HasSecondColor
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x127B19C", Offset = "0x127B19C", VA = "0x127B19C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x127B1B8", Offset = "0x127B1B8", VA = "0x127B1B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public Attachment Attachment
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x127B1D8", Offset = "0x127B1D8", VA = "0x127B1D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x127A030", Offset = "0x127A030", VA = "0x127A030")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public float AttachmentTime
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x127B1E0", Offset = "0x127B1E0", VA = "0x127B1E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x127B210", Offset = "0x127B210", VA = "0x127B210")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public ExposedList<float> AttachmentVertices
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x127B240", Offset = "0x127B240", VA = "0x127B240")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x127B248", Offset = "0x127B248", VA = "0x127B248")]
			set
			{
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x127B250", Offset = "0x127B250", VA = "0x127B250")]
		public Slot(SlotData data, Bone bone)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x127B378", Offset = "0x127B378", VA = "0x127B378")]
		public void SetToSetupPose()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x127B400", Offset = "0x127B400", VA = "0x127B400", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public class SlotData
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int index;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string name;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal BoneData boneData;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float r;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float g;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float b;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float a;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float r2;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float g2;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float b2;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal bool hasSecondColor;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal string attachmentName;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal BlendMode blendMode;

		[Token(Token = "0x1700035E")]
		public int Index
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x127BEFC", Offset = "0x127BEFC", VA = "0x127BEFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035F")]
		public string Name
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x127BF04", Offset = "0x127BF04", VA = "0x127BF04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public BoneData BoneData
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x127BF0C", Offset = "0x127BF0C", VA = "0x127BF0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public float R
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x127BF14", Offset = "0x127BF14", VA = "0x127BF14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x127BF1C", Offset = "0x127BF1C", VA = "0x127BF1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public float G
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x127BF24", Offset = "0x127BF24", VA = "0x127BF24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x127BF2C", Offset = "0x127BF2C", VA = "0x127BF2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public float B
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x127BF34", Offset = "0x127BF34", VA = "0x127BF34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x127BF3C", Offset = "0x127BF3C", VA = "0x127BF3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public float A
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x127BF44", Offset = "0x127BF44", VA = "0x127BF44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x127BF4C", Offset = "0x127BF4C", VA = "0x127BF4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public float R2
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x127BF54", Offset = "0x127BF54", VA = "0x127BF54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x127BF5C", Offset = "0x127BF5C", VA = "0x127BF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public float G2
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x127BF64", Offset = "0x127BF64", VA = "0x127BF64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x127BF6C", Offset = "0x127BF6C", VA = "0x127BF6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public float B2
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x127BF74", Offset = "0x127BF74", VA = "0x127BF74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x127BF7C", Offset = "0x127BF7C", VA = "0x127BF7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool HasSecondColor
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x127BF84", Offset = "0x127BF84", VA = "0x127BF84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x127BF8C", Offset = "0x127BF8C", VA = "0x127BF8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public string AttachmentName
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x127BF98", Offset = "0x127BF98", VA = "0x127BF98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x127BFA0", Offset = "0x127BFA0", VA = "0x127BFA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public BlendMode BlendMode
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x127BFA8", Offset = "0x127BFA8", VA = "0x127BFA8")]
			get
			{
				return default(BlendMode);
			}
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x127BFB0", Offset = "0x127BFB0", VA = "0x127BFB0")]
			set
			{
			}
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x127BFB8", Offset = "0x127BFB8", VA = "0x127BFB8")]
		public SlotData(int index, string name, BoneData boneData)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x127C0E0", Offset = "0x127C0E0", VA = "0x127C0E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000259")]
	public class TransformConstraint : IConstraint, IUpdatable
	{
		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal TransformConstraintData data;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ExposedList<Bone> bones;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Bone target;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float rotateMix;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float translateMix;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float scaleMix;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float shearMix;

		[Token(Token = "0x1700036B")]
		public TransformConstraintData Data
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xE85794", Offset = "0xE85794", VA = "0xE85794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public int Order
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xE8579C", Offset = "0xE8579C", VA = "0xE8579C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036D")]
		public ExposedList<Bone> Bones
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xE857B8", Offset = "0xE857B8", VA = "0xE857B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public Bone Target
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xE857C0", Offset = "0xE857C0", VA = "0xE857C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xE857C8", Offset = "0xE857C8", VA = "0xE857C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public float RotateMix
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xE857D0", Offset = "0xE857D0", VA = "0xE857D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xE857D8", Offset = "0xE857D8", VA = "0xE857D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public float TranslateMix
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xE857E0", Offset = "0xE857E0", VA = "0xE857E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xE857E8", Offset = "0xE857E8", VA = "0xE857E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public float ScaleMix
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xE857F0", Offset = "0xE857F0", VA = "0xE857F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xE857F8", Offset = "0xE857F8", VA = "0xE857F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public float ShearMix
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xE85800", Offset = "0xE85800", VA = "0xE85800")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xE85808", Offset = "0xE85808", VA = "0xE85808")]
			set
			{
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xE85810", Offset = "0xE85810", VA = "0xE85810")]
		public TransformConstraint(TransformConstraintData data, Skeleton skeleton)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xE85A9C", Offset = "0xE85A9C", VA = "0xE85A9C")]
		public void Apply()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xE85AA0", Offset = "0xE85AA0", VA = "0xE85AA0", Slot = "5")]
		public void Update()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xE8645C", Offset = "0xE8645C", VA = "0xE8645C")]
		private void ApplyAbsoluteWorld()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xE85F54", Offset = "0xE85F54", VA = "0xE85F54")]
		private void ApplyRelativeWorld()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xE85CD0", Offset = "0xE85CD0", VA = "0xE85CD0")]
		private void ApplyAbsoluteLocal()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xE85AD8", Offset = "0xE85AD8", VA = "0xE85AD8")]
		private void ApplyRelativeLocal()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xE869FC", Offset = "0xE869FC", VA = "0xE869FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public class TransformConstraintData
	{
		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int order;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal ExposedList<BoneData> bones;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BoneData target;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float rotateMix;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal float translateMix;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal float scaleMix;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float shearMix;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal float offsetRotation;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal float offsetX;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal float offsetY;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal float offsetScaleX;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float offsetScaleY;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float offsetShearY;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool relative;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		internal bool local;

		[Token(Token = "0x17000373")]
		public string Name
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xDE55DC", Offset = "0xDE55DC", VA = "0xDE55DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		public int Order
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xDE55E4", Offset = "0xDE55E4", VA = "0xDE55E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xDE55EC", Offset = "0xDE55EC", VA = "0xDE55EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public ExposedList<BoneData> Bones
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xDE55F4", Offset = "0xDE55F4", VA = "0xDE55F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public BoneData Target
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xDE55FC", Offset = "0xDE55FC", VA = "0xDE55FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xDE5604", Offset = "0xDE5604", VA = "0xDE5604")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public float RotateMix
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xDE560C", Offset = "0xDE560C", VA = "0xDE560C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xDE5614", Offset = "0xDE5614", VA = "0xDE5614")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public float TranslateMix
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xDE561C", Offset = "0xDE561C", VA = "0xDE561C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xDE5624", Offset = "0xDE5624", VA = "0xDE5624")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public float ScaleMix
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xDE562C", Offset = "0xDE562C", VA = "0xDE562C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xDE5634", Offset = "0xDE5634", VA = "0xDE5634")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public float ShearMix
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xDE563C", Offset = "0xDE563C", VA = "0xDE563C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xDE5644", Offset = "0xDE5644", VA = "0xDE5644")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public float OffsetRotation
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xDE564C", Offset = "0xDE564C", VA = "0xDE564C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xDE5654", Offset = "0xDE5654", VA = "0xDE5654")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public float OffsetX
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xDE565C", Offset = "0xDE565C", VA = "0xDE565C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xDE5664", Offset = "0xDE5664", VA = "0xDE5664")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public float OffsetY
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xDE566C", Offset = "0xDE566C", VA = "0xDE566C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xDE5674", Offset = "0xDE5674", VA = "0xDE5674")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public float OffsetScaleX
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xDE567C", Offset = "0xDE567C", VA = "0xDE567C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xDE5684", Offset = "0xDE5684", VA = "0xDE5684")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public float OffsetScaleY
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xDE568C", Offset = "0xDE568C", VA = "0xDE568C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xDE5694", Offset = "0xDE5694", VA = "0xDE5694")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public float OffsetShearY
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xDE569C", Offset = "0xDE569C", VA = "0xDE569C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xDE56A4", Offset = "0xDE56A4", VA = "0xDE56A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public bool Relative
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xDE56AC", Offset = "0xDE56AC", VA = "0xDE56AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xDE56B4", Offset = "0xDE56B4", VA = "0xDE56B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public bool Local
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xDE56C0", Offset = "0xDE56C0", VA = "0xDE56C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xDE56C8", Offset = "0xDE56C8", VA = "0xDE56C8")]
			set
			{
			}
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xDE56D4", Offset = "0xDE56D4", VA = "0xDE56D4")]
		public TransformConstraintData(string name)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xDE57C0", Offset = "0xDE57C0", VA = "0xDE57C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200025B")]
	internal class Triangulator
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ExposedList<ExposedList<float>> convexPolygons;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ExposedList<ExposedList<int>> convexPolygonsIndices;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ExposedList<int> indicesArray;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ExposedList<bool> isConcaveArray;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ExposedList<int> triangles;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Pool<ExposedList<float>> polygonPool;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Pool<ExposedList<int>> polygonIndicesPool;

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xDE62CC", Offset = "0xDE62CC", VA = "0xDE62CC")]
		public ExposedList<int> Triangulate(ExposedList<float> verticesArray)
		{
			return null;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xDE6A2C", Offset = "0xDE6A2C", VA = "0xDE6A2C")]
		public ExposedList<ExposedList<float>> Decompose(ExposedList<float> verticesArray, ExposedList<int> triangles)
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xDE68DC", Offset = "0xDE68DC", VA = "0xDE68DC")]
		private static bool IsConcave(int index, int vertexCount, float[] vertices, int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xDE6A00", Offset = "0xDE6A00", VA = "0xDE6A00")]
		private static bool PositiveArea(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xDE752C", Offset = "0xDE752C", VA = "0xDE752C")]
		private static int Winding(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y)
		{
			return default(int);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xDE7560", Offset = "0xDE7560", VA = "0xDE7560")]
		public Triangulator()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public static class SkeletonExtensions
	{
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x12C1A04", Offset = "0x12C1A04", VA = "0x12C1A04")]
		public static bool IsWeighted(this VertexAttachment va)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x12C1A34", Offset = "0x12C1A34", VA = "0x12C1A34")]
		public static bool IsRenderable(this Attachment a)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x12C1A8C", Offset = "0x12C1A8C", VA = "0x12C1A8C")]
		public static bool InheritsRotation(this TransformMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x12C1A98", Offset = "0x12C1A98", VA = "0x12C1A98")]
		public static bool InheritsScale(this TransformMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x12C1AA4", Offset = "0x12C1AA4", VA = "0x12C1AA4")]
		internal static void SetPropertyToSetupPose(this Skeleton skeleton, int propertyID)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x12C1F48", Offset = "0x12C1F48", VA = "0x12C1F48")]
		public static void SetDrawOrderToSetupPose(this Skeleton skeleton)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x12C1EF0", Offset = "0x12C1EF0", VA = "0x12C1EF0")]
		public static void SetColorToSetupPose(this Slot slot)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x12C1FF8", Offset = "0x12C1FF8", VA = "0x12C1FF8")]
		public static void SetAttachmentToSetupPose(this Slot slot)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x12C1E44", Offset = "0x12C1E44", VA = "0x12C1E44")]
		public static void SetSlotAttachmentToSetupPose(this Skeleton skeleton, int slotIndex)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x12C2050", Offset = "0x12C2050", VA = "0x12C2050")]
		public static void PoseWithAnimation(this Skeleton skeleton, string animationName, float time, bool loop = false)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x12C20C8", Offset = "0x12C20C8", VA = "0x12C20C8")]
		public static void PoseSkeleton(this Animation animation, Skeleton skeleton, float time, bool loop = false)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x12C20FC", Offset = "0x12C20FC", VA = "0x12C20FC")]
		public static void SetKeyedItemsToSetupPose(this Animation animation, Skeleton skeleton)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x12C2130", Offset = "0x12C2130", VA = "0x12C2130")]
		public static void FindNamesForSlot(this Skin skin, string slotName, SkeletonData skeletonData, List<string> results)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x12C2174", Offset = "0x12C2174", VA = "0x12C2174")]
		public static void FindAttachmentsForSlot(this Skin skin, string slotName, SkeletonData skeletonData, List<Attachment> results)
		{
		}
	}
}
namespace Spine.Unity
{
	[Token(Token = "0x200025D")]
	public class SkeletonAnimationMulti : MonoBehaviour
	{
		[Token(Token = "0x4000E18")]
		private const int MainTrackIndex = 0;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool initialFlipX;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool initialFlipY;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string initialAnimation;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool initialLoop;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CFDA0", Offset = "0x7CFDA0")]
		public List<SkeletonDataAsset> skeletonDataAssets;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFDB0", Offset = "0x7CFDB0")]
		public MeshGenerator.Settings meshGeneratorSettings;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<SkeletonAnimation> skeletonAnimations;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<string, Animation> animationNameTable;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<Animation, SkeletonAnimation> animationSkeletonTable;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkeletonAnimation currentSkeletonAnimation;

		[Token(Token = "0x17000383")]
		public Dictionary<Animation, SkeletonAnimation> AnimationSkeletonTable
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xDA82F8", Offset = "0xDA82F8", VA = "0xDA82F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public Dictionary<string, Animation> AnimationNameTable
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xDA8300", Offset = "0xDA8300", VA = "0xDA8300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public SkeletonAnimation CurrentSkeletonAnimation
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0xDA8308", Offset = "0xDA8308", VA = "0xDA8308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xDA79C0", Offset = "0xDA79C0", VA = "0xDA79C0")]
		private void Clear()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xDA7B88", Offset = "0xDA7B88", VA = "0xDA7B88")]
		private void SetActiveSkeleton(SkeletonAnimation skeletonAnimation)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xDA7D20", Offset = "0xDA7D20", VA = "0xDA7D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xDA7D28", Offset = "0xDA7D28", VA = "0xDA7D28")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xDA8340", Offset = "0xDA8340", VA = "0xDA8340")]
		public Animation FindAnimation(string animationName)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xDA8310", Offset = "0xDA8310", VA = "0xDA8310")]
		public TrackEntry SetAnimation(string animationName, bool loop)
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xDA83B4", Offset = "0xDA83B4", VA = "0xDA83B4")]
		public TrackEntry SetAnimation(Animation animation, bool loop)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xDA84D8", Offset = "0xDA84D8", VA = "0xDA84D8")]
		public void SetEmptyAnimation(float mixDuration)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xDA8504", Offset = "0xDA8504", VA = "0xDA8504")]
		public void ClearAnimation()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xDA8530", Offset = "0xDA8530", VA = "0xDA8530")]
		public TrackEntry GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xDA855C", Offset = "0xDA855C", VA = "0xDA855C")]
		public SkeletonAnimationMulti()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class AtlasAsset : ScriptableObject
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset atlasFile;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] materials;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Atlas atlas;

		[Token(Token = "0x17000386")]
		public bool IsLoaded
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x110C36C", Offset = "0x110C36C", VA = "0x110C36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x110C37C", Offset = "0x110C37C", VA = "0x110C37C")]
		public static AtlasAsset CreateRuntimeInstance(TextAsset atlasText, Material[] materials, bool initialize)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x110C418", Offset = "0x110C418", VA = "0x110C418")]
		public static AtlasAsset CreateRuntimeInstance(TextAsset atlasText, Texture2D[] textures, Material materialPropertySource, bool initialize)
		{
			return null;
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x110C848", Offset = "0x110C848", VA = "0x110C848")]
		public static AtlasAsset CreateRuntimeInstance(TextAsset atlasText, Texture2D[] textures, Shader shader, bool initialize)
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x110C40C", Offset = "0x110C40C", VA = "0x110C40C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x110C934", Offset = "0x110C934", VA = "0x110C934", Slot = "4")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x110C93C", Offset = "0x110C93C", VA = "0x110C93C", Slot = "5")]
		public virtual Atlas GetAtlas()
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x110CDCC", Offset = "0x110CDCC", VA = "0x110CDCC")]
		public Mesh GenerateMesh(string name, Mesh mesh, out Material material, float scale = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x110D1F8", Offset = "0x110D1F8", VA = "0x110D1F8")]
		public AtlasAsset()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class MaterialsTextureLoader : TextureLoader
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AtlasAsset atlasAsset;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1123640", Offset = "0x1123640", VA = "0x1123640")]
		public MaterialsTextureLoader(AtlasAsset atlasAsset)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x112366C", Offset = "0x112366C", VA = "0x112366C", Slot = "4")]
		public void Load(AtlasPage page, string path)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1123974", Offset = "0x1123974", VA = "0x1123974", Slot = "5")]
		public void Unload(object texture)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class SkeletonDataAsset : ScriptableObject
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AtlasAsset[] atlasAssets;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextAsset skeletonJSON;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7CFDE8", Offset = "0x7CFDE8")]
		public string[] fromAnimation;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7CFE44", Offset = "0x7CFE44")]
		public string[] toAnimation;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] duration;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float defaultMix;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RuntimeAnimatorController controller;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkeletonData skeletonData;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AnimationStateData stateData;

		[Token(Token = "0x17000387")]
		public bool IsLoaded
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x12BD838", Offset = "0x12BD838", VA = "0x12BD838")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x12BD848", Offset = "0x12BD848", VA = "0x12BD848")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x12BD858", Offset = "0x12BD858", VA = "0x12BD858")]
		public static SkeletonDataAsset CreateRuntimeInstance(TextAsset skeletonDataFile, AtlasAsset atlasAsset, bool initialize, float scale = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x12BD91C", Offset = "0x12BD91C", VA = "0x12BD91C")]
		public static SkeletonDataAsset CreateRuntimeInstance(TextAsset skeletonDataFile, AtlasAsset[] atlasAssets, bool initialize, float scale = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x12BD850", Offset = "0x12BD850", VA = "0x12BD850")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x12BD9B4", Offset = "0x12BD9B4", VA = "0x12BD9B4")]
		public SkeletonData GetSkeletonData(bool quiet)
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x12BE104", Offset = "0x12BE104", VA = "0x12BE104")]
		internal void InitializeWithData(SkeletonData sd)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x12BDE30", Offset = "0x12BDE30", VA = "0x12BDE30")]
		internal Atlas[] GetAtlasArray()
		{
			return null;
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x12BDF9C", Offset = "0x12BDF9C", VA = "0x12BDF9C")]
		internal static SkeletonData ReadSkeletonData(byte[] bytes, AttachmentLoader attachmentLoader, float scale)
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x12BE054", Offset = "0x12BE054", VA = "0x12BE054")]
		internal static SkeletonData ReadSkeletonData(string text, AttachmentLoader attachmentLoader, float scale)
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x12BE178", Offset = "0x12BE178", VA = "0x12BE178")]
		public void FillStateData()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x12C1910", Offset = "0x12C1910", VA = "0x12C1910")]
		public AnimationStateData GetAnimationStateData()
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x12C1944", Offset = "0x12C1944", VA = "0x12C1944")]
		public SkeletonDataAsset()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB664", Offset = "0x7CB664")]
	[ExecuteInEditMode]
	public class BoneFollower : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7CFEA0", Offset = "0x7CFEA0")]
		[SerializeField]
		public string boneName;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool followZPosition;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool followBoneRotation;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CFF10", Offset = "0x7CFF10")]
		public bool followSkeletonFlip;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CFF48", Offset = "0x7CFF48")]
		public bool followLocalScale;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CFF80", Offset = "0x7CFF80")]
		public bool initializeOnAwake;

		[NonSerialized]
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool valid;

		[NonSerialized]
		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bone bone;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform skeletonTransform;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool skeletonTransformIsParent;

		[Token(Token = "0x17000388")]
		public SkeletonRenderer SkeletonRenderer
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x111C0D4", Offset = "0x111C0D4", VA = "0x111C0D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x111C0DC", Offset = "0x111C0DC", VA = "0x111C0DC")]
			set
			{
			}
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x111C28C", Offset = "0x111C28C", VA = "0x111C28C")]
		public bool SetBone(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x111C368", Offset = "0x111C368", VA = "0x111C368")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x111C378", Offset = "0x111C378", VA = "0x111C378")]
		public void HandleRebuildRenderer(SkeletonRenderer skeletonRenderer)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x111C0E4", Offset = "0x111C0E4", VA = "0x111C0E4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x111C37C", Offset = "0x111C37C", VA = "0x111C37C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x111C464", Offset = "0x111C464", VA = "0x111C464")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x111C80C", Offset = "0x111C80C", VA = "0x111C80C")]
		public BoneFollower()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public delegate void UpdateBonesDelegate(ISkeletonAnimation animated);
	[Token(Token = "0x2000263")]
	public interface ISkeletonAnimation
	{
		[Token(Token = "0x17000389")]
		Skeleton Skeleton
		{
			[Token(Token = "0x6001120")]
			get;
		}

		[Token(Token = "0x1400001B")]
		event UpdateBonesDelegate UpdateLocal;

		[Token(Token = "0x1400001C")]
		event UpdateBonesDelegate UpdateWorld;

		[Token(Token = "0x1400001D")]
		event UpdateBonesDelegate UpdateComplete;
	}
	[Token(Token = "0x2000264")]
	public interface ISkeletonDataAssetComponent
	{
		[Token(Token = "0x1700038A")]
		SkeletonDataAsset SkeletonDataAsset
		{
			[Token(Token = "0x6001121")]
			get;
		}
	}
	[Token(Token = "0x2000265")]
	public interface ISkeletonComponent
	{
		[Token(Token = "0x1700038B")]
		SkeletonDataAsset SkeletonDataAsset
		{
			[Token(Token = "0x6001122")]
			get;
		}

		[Token(Token = "0x1700038C")]
		Skeleton Skeleton
		{
			[Token(Token = "0x6001123")]
			get;
		}
	}
	[Token(Token = "0x2000266")]
	public interface IAnimationStateComponent
	{
		[Token(Token = "0x1700038D")]
		AnimationState AnimationState
		{
			[Token(Token = "0x6001124")]
			get;
		}
	}
	[Token(Token = "0x2000267")]
	public class DoubleBuffered<T> where T : new()
	{
		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T a;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T b;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool usingA;

		[Token(Token = "0x6001125")]
		public T GetCurrent()
		{
			return (T)null;
		}

		[Token(Token = "0x6001126")]
		public T GetNext()
		{
			return (T)null;
		}

		[Token(Token = "0x6001127")]
		public DoubleBuffered()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public static class SpineMesh
	{
		[Token(Token = "0x4000E3F")]
		internal const HideFlags MeshHideflags = HideFlags.DontSaveInEditor | HideFlags.DontSaveInBuild;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xE78AA4", Offset = "0xE78AA4", VA = "0xE78AA4")]
		public static Mesh NewMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x2000269")]
	public struct SubmeshInstruction
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Skeleton skeleton;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int startSlot;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int endSlot;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forceSeparate;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int preActiveClippingSlotSource;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rawTriangleCount;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int rawVertexCount;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rawFirstVertexIndex;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hasClipping;

		[Token(Token = "0x1700038E")]
		public int SlotCount
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0xE7D48C", Offset = "0xE7D48C", VA = "0xE7D48C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xE7D498", Offset = "0xE7D498", VA = "0xE7D498", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public delegate void MeshGeneratorDelegate(MeshGeneratorBuffers buffers);
	[Token(Token = "0x200026B")]
	public struct MeshGeneratorBuffers
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int vertexCount;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] vertexBuffer;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] uvBuffer;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] colorBuffer;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshGenerator meshGenerator;
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x200026D")]
		public struct Settings
		{
			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool useClipping;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CFFB8", Offset = "0x7CFFB8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CFFB8", Offset = "0x7CFFB8")]
			public float zSpacing;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CFFFC", Offset = "0x7CFFFC")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFFFC", Offset = "0x7CFFFC")]
			public bool pmaVertexColors;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool tintBlack;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool calculateTangents;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			public bool addNormals;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool immutableTriangles;

			[Token(Token = "0x17000391")]
			public static Settings Default
			{
				[Token(Token = "0x6001142")]
				[Address(RVA = "0xDBA41C", Offset = "0xDBA41C", VA = "0xDBA41C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Settings settings;

		[Token(Token = "0x4000E50")]
		private const float BoundsMinDefault = float.PositiveInfinity;

		[Token(Token = "0x4000E51")]
		private const float BoundsMaxDefault = float.NegativeInfinity;

		[NonSerialized]
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ExposedList<Vector3> vertexBuffer;

		[NonSerialized]
		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ExposedList<Vector2> uvBuffer;

		[NonSerialized]
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ExposedList<Color32> colorBuffer;

		[NonSerialized]
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ExposedList<ExposedList<int>> submeshes;

		[NonSerialized]
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 meshBoundsMin;

		[NonSerialized]
		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 meshBoundsMax;

		[NonSerialized]
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float meshBoundsThickness;

		[NonSerialized]
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int submeshIndex;

		[NonSerialized]
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkeletonClipping clipper;

		[NonSerialized]
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] tempVerts;

		[NonSerialized]
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int[] regionTriangles;

		[NonSerialized]
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] normals;

		[NonSerialized]
		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector4[] tangents;

		[NonSerialized]
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2[] tempTanBuffer;

		[NonSerialized]
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ExposedList<Vector2> uv2;

		[NonSerialized]
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ExposedList<Vector2> uv3;

		[Token(Token = "0x1700038F")]
		public int VertexCount
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1129FC8", Offset = "0x1129FC8", VA = "0x1129FC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000390")]
		public MeshGeneratorBuffers Buffers
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1129FE4", Offset = "0x1129FE4", VA = "0x1129FE4")]
			get
			{
				return default(MeshGeneratorBuffers);
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x112A02C", Offset = "0x112A02C", VA = "0x112A02C")]
		public static void GenerateSingleSubmeshInstruction(SkeletonRendererInstruction instructionOutput, Skeleton skeleton, Material material)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x112A368", Offset = "0x112A368", VA = "0x112A368")]
		public static void GenerateSkeletonRendererInstruction(SkeletonRendererInstruction instructionOutput, Skeleton skeleton, Dictionary<Slot, Material> customSlotMaterials, List<Slot> separatorSlots, bool generateMeshOverride, bool immutableTriangles = false)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x112AC20", Offset = "0x112AC20", VA = "0x112AC20")]
		public static void TryReplaceMaterials(ExposedList<SubmeshInstruction> workingSubmeshInstructions, Dictionary<Material, Material> customMaterialOverride)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x112AD04", Offset = "0x112AD04", VA = "0x112AD04")]
		public void Begin()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x112AE30", Offset = "0x112AE30", VA = "0x112AE30")]
		public void AddSubmesh(SubmeshInstruction instruction, bool updateTriangles = true)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x112BC50", Offset = "0x112BC50", VA = "0x112BC50")]
		public void BuildMesh(SkeletonRendererInstruction instruction, bool updateTriangles)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x112BCF8", Offset = "0x112BCF8", VA = "0x112BCF8")]
		public void BuildMeshWithArrays(SkeletonRendererInstruction instruction, bool updateTriangles)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x112CF5C", Offset = "0x112CF5C", VA = "0x112CF5C")]
		public void ScaleVertexData(float scale)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x112BA74", Offset = "0x112BA74", VA = "0x112BA74")]
		private void AddAttachmentTintBlack(float r2, float g2, float b2, int vertexCount)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x112CFEC", Offset = "0x112CFEC", VA = "0x112CFEC")]
		public void FillVertexData(Mesh mesh)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x112D718", Offset = "0x112D718", VA = "0x112D718")]
		public void FillTriangles(Mesh mesh)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x112D7C4", Offset = "0x112D7C4", VA = "0x112D7C4")]
		public void FillTrianglesSingle(Mesh mesh)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x112D81C", Offset = "0x112D81C", VA = "0x112D81C")]
		public void TrimExcess()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x112D350", Offset = "0x112D350", VA = "0x112D350")]
		internal static void SolveTangents2DEnsureSize(ref Vector4[] tangentBuffer, ref Vector2[] tempTanBuffer, int vertexCount)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x112D408", Offset = "0x112D408", VA = "0x112D408")]
		internal static void SolveTangents2DTriangles(Vector2[] tempTanBuffer, int[] triangles, int triangleCount, Vector3[] vertices, Vector2[] uvs, int vertexCount)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x112D5E8", Offset = "0x112D5E8", VA = "0x112D5E8")]
		internal static void SolveTangents2DBuffer(Vector4[] tangents, Vector2[] tempTanBuffer, int vertexCount)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x112D948", Offset = "0x112D948", VA = "0x112D948")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class MeshRendererBuffers : IDisposable
	{
		[Token(Token = "0x200026F")]
		public class SmartMesh : IDisposable
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkeletonRendererInstruction instructionUsed;

			[Token(Token = "0x600114B")]
			[Address(RVA = "0xDBA428", Offset = "0xDBA428", VA = "0xDBA428", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0xDBA4D0", Offset = "0xDBA4D0", VA = "0xDBA4D0")]
			public SmartMesh()
			{
			}
		}

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DoubleBuffered<SmartMesh> doubleBufferedMesh;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly ExposedList<Material> submeshMaterials;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Material[] sharedMaterials;

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x112DFA4", Offset = "0x112DFA4", VA = "0x112DFA4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x112E014", Offset = "0x112E014", VA = "0x112E014")]
		public Material[] GetUpdatedSharedMaterialsArray()
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x112E0AC", Offset = "0x112E0AC", VA = "0x112E0AC")]
		public bool MaterialsChangedInLastUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x112E144", Offset = "0x112E144", VA = "0x112E144")]
		public void UpdateSharedMaterials(ExposedList<SubmeshInstruction> instructions)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x112E278", Offset = "0x112E278", VA = "0x112E278")]
		public SmartMesh GetNextMesh()
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x112E2CC", Offset = "0x112E2CC", VA = "0x112E2CC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x112E34C", Offset = "0x112E34C", VA = "0x112E34C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x112E3D0", Offset = "0x112E3D0", VA = "0x112E3D0")]
		public MeshRendererBuffers()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class SkeletonRendererInstruction
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool immutableTriangles;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ExposedList<SubmeshInstruction> submeshInstructions;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasActiveClipping;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int rawVertexCount;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ExposedList<Attachment> attachments;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1273CF4", Offset = "0x1273CF4", VA = "0x1273CF4")]
		public void Clear()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x12754F4", Offset = "0x12754F4", VA = "0x12754F4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x127554C", Offset = "0x127554C", VA = "0x127554C")]
		public void SetWithSubset(ExposedList<SubmeshInstruction> instructions, int startSubmesh, int endSubmesh)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x12746A0", Offset = "0x12746A0", VA = "0x12746A0")]
		public void Set(SkeletonRendererInstruction other)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x12744E8", Offset = "0x12744E8", VA = "0x12744E8")]
		public static bool GeometryNotEqual(SkeletonRendererInstruction a, SkeletonRendererInstruction b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1274A24", Offset = "0x1274A24", VA = "0x1274A24")]
		public SkeletonRendererInstruction()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[ExecuteInEditMode]
	public class BoundingBoxFollower : MonoBehaviour
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool DebugMessages;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D0048", Offset = "0x7D0048")]
		public string slotName;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isTrigger;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool clearStateOnDisable;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slot slot;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoundingBoxAttachment currentAttachment;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string currentAttachmentName;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PolygonCollider2D currentCollider;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<BoundingBoxAttachment, PolygonCollider2D> colliderTable;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<BoundingBoxAttachment, string> nameTable;

		[Token(Token = "0x17000392")]
		public Slot Slot
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x10BBE60", Offset = "0x10BBE60", VA = "0x10BBE60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public BoundingBoxAttachment CurrentAttachment
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x10BBE68", Offset = "0x10BBE68", VA = "0x10BBE68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public string CurrentAttachmentName
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x10BBE70", Offset = "0x10BBE70", VA = "0x10BBE70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public PolygonCollider2D CurrentCollider
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x10BBE78", Offset = "0x10BBE78", VA = "0x10BBE78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public bool IsTrigger
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x10BBE80", Offset = "0x10BBE80", VA = "0x10BBE80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x10BBE88", Offset = "0x10BBE88", VA = "0x10BBE88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x10BC2C8", Offset = "0x10BC2C8", VA = "0x10BC2C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x10BC3E8", Offset = "0x10BC3E8", VA = "0x10BC3E8")]
		private void HandleRebuild(SkeletonRenderer sr)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x10BBE90", Offset = "0x10BBE90", VA = "0x10BBE90")]
		public void Initialize(bool overwrite = false)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x10BC694", Offset = "0x10BC694", VA = "0x10BC694")]
		private void AddSkin(Skin skin, int slotIndex)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x10BCA6C", Offset = "0x10BCA6C", VA = "0x10BCA6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x10BCA7C", Offset = "0x10BCA7C", VA = "0x10BCA7C")]
		public void ClearState()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x10BC3F0", Offset = "0x10BC3F0", VA = "0x10BC3F0")]
		private void DisposeColliders()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x10BCBC0", Offset = "0x10BCBC0", VA = "0x10BCBC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x10BCBE0", Offset = "0x10BCBE0", VA = "0x10BCBE0")]
		private void MatchAttachment(Attachment attachment)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x10BCEF4", Offset = "0x10BCEF4", VA = "0x10BCEF4")]
		public BoundingBoxFollower()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB6C0", Offset = "0x7CB6C0")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class BoneFollowerGraphic : MonoBehaviour
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonGraphic skeletonGraphic;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool initializeOnAwake;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D00A0", Offset = "0x7D00A0")]
		[SerializeField]
		public string boneName;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool followBoneRotation;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0110", Offset = "0x7D0110")]
		public bool followSkeletonFlip;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0148", Offset = "0x7D0148")]
		public bool followLocalScale;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool followZPosition;

		[NonSerialized]
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bone bone;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform skeletonTransform;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool skeletonTransformIsParent;

		[NonSerialized]
		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool valid;

		[Token(Token = "0x17000397")]
		public SkeletonGraphic SkeletonGraphic
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x10B9BA8", Offset = "0x10B9BA8", VA = "0x10B9BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x10B9BB0", Offset = "0x10B9BB0", VA = "0x10B9BB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x10B9CC8", Offset = "0x10B9CC8", VA = "0x10B9CC8")]
		public bool SetBone(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x10B9DA4", Offset = "0x10B9DA4", VA = "0x10B9DA4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x10B9BB8", Offset = "0x10B9BB8", VA = "0x10B9BB8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x10B9DB4", Offset = "0x10B9DB4", VA = "0x10B9DB4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x10BA198", Offset = "0x10BA198", VA = "0x10BA198")]
		public BoneFollowerGraphic()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB71C", Offset = "0x7CB71C")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB71C", Offset = "0x7CB71C")]
	public class SkeletonGraphic : MaskableGraphic, ISkeletonComponent, IAnimationStateComponent, ISkeletonAnimation, ISkeletonDataAssetComponent
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x7D0180", Offset = "0x7D0180")]
		public string initialSkinName;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool initialFlipX;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool initialFlipY;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D01D4", Offset = "0x7D01D4")]
		public string startingAnimation;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool startingLoop;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float timeScale;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool freeze;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool unscaledTime;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture overrideTexture;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Skeleton skeleton;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected AnimationState state;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected MeshGenerator meshGenerator;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private DoubleBuffered<MeshRendererBuffers.SmartMesh> meshBuffers;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SkeletonRendererInstruction currentInstructions;

		[Token(Token = "0x17000398")]
		public SkeletonDataAsset SkeletonDataAsset
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x12C3FEC", Offset = "0x12C3FEC", VA = "0x12C3FEC", Slot = "75")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public Texture OverrideTexture
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x12C442C", Offset = "0x12C442C", VA = "0x12C442C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x12C4434", Offset = "0x12C4434", VA = "0x12C4434")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x12C4488", Offset = "0x12C4488", VA = "0x12C4488", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public Skeleton Skeleton
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x12C4A30", Offset = "0x12C4A30", VA = "0x12C4A30", Slot = "74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public SkeletonData SkeletonData
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x12C4A38", Offset = "0x12C4A38", VA = "0x12C4A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public bool IsValid
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x12C45F8", Offset = "0x12C45F8", VA = "0x12C45F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039E")]
		public AnimationState AnimationState
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x12C4A50", Offset = "0x12C4A50", VA = "0x12C4A50", Slot = "67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public MeshGenerator MeshGenerator
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x12C4A58", Offset = "0x12C4A58", VA = "0x12C4A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001E")]
		public event UpdateBonesDelegate UpdateLocal
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x12C4AC0", Offset = "0x12C4AC0", VA = "0x12C4AC0", Slot = "68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53A8", Offset = "0x7E53A8")]
			add
			{
			}
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x12C4B64", Offset = "0x12C4B64", VA = "0x12C4B64", Slot = "69")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53B8", Offset = "0x7E53B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event UpdateBonesDelegate UpdateWorld
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x12C4C08", Offset = "0x12C4C08", VA = "0x12C4C08", Slot = "70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53C8", Offset = "0x7E53C8")]
			add
			{
			}
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x12C4CAC", Offset = "0x12C4CAC", VA = "0x12C4CAC", Slot = "71")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53D8", Offset = "0x7E53D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event UpdateBonesDelegate UpdateComplete
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x12C4D50", Offset = "0x12C4D50", VA = "0x12C4D50", Slot = "72")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53E8", Offset = "0x7E53E8")]
			add
			{
			}
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x12C4DF4", Offset = "0x12C4DF4", VA = "0x12C4DF4", Slot = "73")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E53F8", Offset = "0x7E53F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event MeshGeneratorDelegate OnPostProcessVertices
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x12C4E98", Offset = "0x12C4E98", VA = "0x12C4E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5408", Offset = "0x7E5408")]
			add
			{
			}
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x12C4F3C", Offset = "0x12C4F3C", VA = "0x12C4F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5418", Offset = "0x7E5418")]
			remove
			{
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x12C3FF4", Offset = "0x12C3FF4", VA = "0x12C3FF4")]
		public static SkeletonGraphic NewSkeletonGraphicGameObject(SkeletonDataAsset skeletonDataAsset, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x12C40F0", Offset = "0x12C40F0", VA = "0x12C40F0")]
		public static SkeletonGraphic AddSkeletonGraphicComponent(GameObject gameObject, SkeletonDataAsset skeletonDataAsset)
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x12C45A0", Offset = "0x12C45A0", VA = "0x12C45A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x12C4608", Offset = "0x12C4608", VA = "0x12C4608", Slot = "37")]
		public override void Rebuild(CanvasUpdate update)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x12C48F8", Offset = "0x12C48F8", VA = "0x12C48F8", Slot = "76")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x12C494C", Offset = "0x12C494C", VA = "0x12C494C", Slot = "77")]
		public virtual void Update(float deltaTime)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x12C4A20", Offset = "0x12C4A20", VA = "0x12C4A20")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x12C4A60", Offset = "0x12C4A60", VA = "0x12C4A60")]
		public Mesh GetLastMesh()
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x12C4FE0", Offset = "0x12C4FE0", VA = "0x12C4FE0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x12C41B4", Offset = "0x12C41B4", VA = "0x12C41B4")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x12C4668", Offset = "0x12C4668", VA = "0x12C4668")]
		public void UpdateMesh()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x12C5008", Offset = "0x12C5008", VA = "0x12C5008")]
		public SkeletonGraphic()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class WaitForSpineAnimationComplete : IEnumerator
	{
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_WasFired;

		[Token(Token = "0x170003A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0xDF59D8", Offset = "0xDF59D8", VA = "0xDF59D8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xDF57C0", Offset = "0xDF57C0", VA = "0xDF57C0")]
		public WaitForSpineAnimationComplete(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xDF58E4", Offset = "0xDF58E4", VA = "0xDF58E4")]
		private void HandleComplete(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xDF57F0", Offset = "0xDF57F0", VA = "0xDF57F0")]
		private void SafeSubscribe(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xDF58F0", Offset = "0xDF58F0", VA = "0xDF58F0")]
		public WaitForSpineAnimationComplete NowWaitFor(TrackEntry trackEntry)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xDF5914", Offset = "0xDF5914", VA = "0xDF5914", Slot = "4")]
		private bool System.Collections.IEnumerator.MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xDF59D0", Offset = "0xDF59D0", VA = "0xDF59D0", Slot = "6")]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class WaitForSpineEvent : IEnumerator
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private EventData m_TargetEvent;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_EventName;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationState m_AnimationState;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_WasFired;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_unsubscribeAfterFiring;

		[Token(Token = "0x170003A1")]
		public bool WillUnsubscribeAfterFiring
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0xDF5F6C", Offset = "0xDF5F6C", VA = "0xDF5F6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001198")]
			[Address(RVA = "0xDF5F74", Offset = "0xDF5F74", VA = "0xDF5F74")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0xDF62E8", Offset = "0xDF62E8", VA = "0xDF62E8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xDF59E0", Offset = "0xDF59E0", VA = "0xDF59E0")]
		private void Subscribe(AnimationState state, EventData eventDataReference, bool unsubscribe)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xDF5B28", Offset = "0xDF5B28", VA = "0xDF5B28")]
		private void SubscribeByName(AnimationState state, string eventName, bool unsubscribe)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xDF5C78", Offset = "0xDF5C78", VA = "0xDF5C78")]
		public WaitForSpineEvent(AnimationState state, EventData eventDataReference, bool unsubscribeAfterFiring = true)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xDF5CC0", Offset = "0xDF5CC0", VA = "0xDF5CC0")]
		public WaitForSpineEvent(SkeletonAnimation skeletonAnimation, EventData eventDataReference, bool unsubscribeAfterFiring = true)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xDF5D10", Offset = "0xDF5D10", VA = "0xDF5D10")]
		public WaitForSpineEvent(AnimationState state, string eventName, bool unsubscribeAfterFiring = true)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xDF5D58", Offset = "0xDF5D58", VA = "0xDF5D58")]
		public WaitForSpineEvent(SkeletonAnimation skeletonAnimation, string eventName, bool unsubscribeAfterFiring = true)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xDF5DA8", Offset = "0xDF5DA8", VA = "0xDF5DA8")]
		private void HandleAnimationStateEventByName(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xDF5E90", Offset = "0xDF5E90", VA = "0xDF5E90")]
		private void HandleAnimationStateEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xDF5F80", Offset = "0xDF5F80", VA = "0xDF5F80")]
		public WaitForSpineEvent NowWaitFor(AnimationState state, EventData eventDataReference, bool unsubscribeAfterFiring = true)
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xDF613C", Offset = "0xDF613C", VA = "0xDF613C")]
		public WaitForSpineEvent NowWaitFor(AnimationState state, string eventName, bool unsubscribeAfterFiring = true)
		{
			return null;
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xDF6068", Offset = "0xDF6068", VA = "0xDF6068")]
		private void Clear(AnimationState state)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xDF6224", Offset = "0xDF6224", VA = "0xDF6224", Slot = "4")]
		private bool System.Collections.IEnumerator.MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xDF62E0", Offset = "0xDF62E0", VA = "0xDF62E0", Slot = "6")]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class WaitForSpineTrackEntryEnd : IEnumerator
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_WasFired;

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xDF6508", Offset = "0xDF6508", VA = "0xDF6508", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xDF62F0", Offset = "0xDF62F0", VA = "0xDF62F0")]
		public WaitForSpineTrackEntryEnd(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xDF6414", Offset = "0xDF6414", VA = "0xDF6414")]
		private void HandleEnd(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xDF6320", Offset = "0xDF6320", VA = "0xDF6320")]
		private void SafeSubscribe(TrackEntry trackEntry)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xDF6420", Offset = "0xDF6420", VA = "0xDF6420")]
		public WaitForSpineTrackEntryEnd NowWaitFor(TrackEntry trackEntry)
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xDF6444", Offset = "0xDF6444", VA = "0xDF6444", Slot = "4")]
		private bool System.Collections.IEnumerator.MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xDF6500", Offset = "0xDF6500", VA = "0xDF6500", Slot = "6")]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CB7E8", Offset = "0x7CB7E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CB7E8", Offset = "0x7CB7E8")]
	[ExecuteInEditMode]
	public class SkeletonAnimation : SkeletonRenderer, ISkeletonAnimation, IAnimationStateComponent
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationState state;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D02A8", Offset = "0x7D02A8")]
		private string _animationName;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool loop;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float timeScale;

		[Token(Token = "0x170003A4")]
		public AnimationState AnimationState
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xDA71D0", Offset = "0xDA71D0", VA = "0xDA71D0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public string AnimationName
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xDA75B0", Offset = "0xDA75B0", VA = "0xDA75B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xDA75FC", Offset = "0xDA75FC", VA = "0xDA75FC")]
			set
			{
			}
		}

		[Token(Token = "0x14000022")]
		protected event UpdateBonesDelegate _UpdateLocal
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xDA71D8", Offset = "0xDA71D8", VA = "0xDA71D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5428", Offset = "0x7E5428")]
			add
			{
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xDA7278", Offset = "0xDA7278", VA = "0xDA7278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5438", Offset = "0x7E5438")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		protected event UpdateBonesDelegate _UpdateWorld
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xDA7318", Offset = "0xDA7318", VA = "0xDA7318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5448", Offset = "0x7E5448")]
			add
			{
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xDA73B8", Offset = "0xDA73B8", VA = "0xDA73B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5458", Offset = "0x7E5458")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		protected event UpdateBonesDelegate _UpdateComplete
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xDA7458", Offset = "0xDA7458", VA = "0xDA7458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5468", Offset = "0x7E5468")]
			add
			{
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xDA74F8", Offset = "0xDA74F8", VA = "0xDA74F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5478", Offset = "0x7E5478")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event UpdateBonesDelegate UpdateLocal
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xDA7598", Offset = "0xDA7598", VA = "0xDA7598", Slot = "11")]
			add
			{
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xDA759C", Offset = "0xDA759C", VA = "0xDA759C", Slot = "12")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event UpdateBonesDelegate UpdateWorld
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xDA75A0", Offset = "0xDA75A0", VA = "0xDA75A0", Slot = "13")]
			add
			{
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xDA75A4", Offset = "0xDA75A4", VA = "0xDA75A4", Slot = "14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event UpdateBonesDelegate UpdateComplete
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xDA75A8", Offset = "0xDA75A8", VA = "0xDA75A8", Slot = "15")]
			add
			{
			}
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xDA75AC", Offset = "0xDA75AC", VA = "0xDA75AC", Slot = "16")]
			remove
			{
			}
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xDA7678", Offset = "0xDA7678", VA = "0xDA7678")]
		private TrackEntry TrySetAnimation(string animationName, bool animationLoop)
		{
			return null;
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xDA76F8", Offset = "0xDA76F8", VA = "0xDA76F8")]
		public static SkeletonAnimation AddToGameObject(GameObject gameObject, SkeletonDataAsset skeletonDataAsset)
		{
			return null;
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xDA7754", Offset = "0xDA7754", VA = "0xDA7754")]
		public static SkeletonAnimation NewSkeletonAnimationGameObject(SkeletonDataAsset skeletonDataAsset)
		{
			return null;
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xDA77A0", Offset = "0xDA77A0", VA = "0xDA77A0", Slot = "8")]
		public override void ClearState()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xDA77DC", Offset = "0xDA77DC", VA = "0xDA77DC", Slot = "9")]
		public override void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xDA7988", Offset = "0xDA7988", VA = "0xDA7988")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xDA78C4", Offset = "0xDA78C4", VA = "0xDA78C4")]
		public void Update(float deltaTime)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xDA79B0", Offset = "0xDA79B0", VA = "0xDA79B0")]
		public SkeletonAnimation()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB858", Offset = "0x7CB858")]
	public class SkeletonAnimator : SkeletonRenderer, ISkeletonAnimation
	{
		[Serializable]
		[Token(Token = "0x2000279")]
		public class MecanimTranslator
		{
			[Token(Token = "0x200027A")]
			public enum MixMode
			{
				[Token(Token = "0x4000EB7")]
				AlwaysMix,
				[Token(Token = "0x4000EB8")]
				MixNext,
				[Token(Token = "0x4000EB9")]
				SpineStyle
			}

			[Token(Token = "0x200027B")]
			private class AnimationClipEqualityComparer : IEqualityComparer<AnimationClip>
			{
				[Token(Token = "0x4000EBA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				internal static readonly IEqualityComparer<AnimationClip> Instance;

				[Token(Token = "0x60011D5")]
				[Address(RVA = "0x1C6A144", Offset = "0x1C6A144", VA = "0x1C6A144", Slot = "4")]
				public bool Equals(AnimationClip x, AnimationClip y)
				{
					return default(bool);
				}

				[Token(Token = "0x60011D6")]
				[Address(RVA = "0x1C6A190", Offset = "0x1C6A190", VA = "0x1C6A190", Slot = "5")]
				public int GetHashCode(AnimationClip o)
				{
					return default(int);
				}

				[Token(Token = "0x60011D7")]
				[Address(RVA = "0x1C6A1AC", Offset = "0x1C6A1AC", VA = "0x1C6A1AC")]
				public AnimationClipEqualityComparer()
				{
				}
			}

			[Token(Token = "0x200027C")]
			private class IntEqualityComparer : IEqualityComparer<int>
			{
				[Token(Token = "0x4000EBB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				internal static readonly IEqualityComparer<int> Instance;

				[Token(Token = "0x60011D9")]
				[Address(RVA = "0x1C6A214", Offset = "0x1C6A214", VA = "0x1C6A214", Slot = "4")]
				public bool Equals(int x, int y)
				{
					return default(bool);
				}

				[Token(Token = "0x60011DA")]
				[Address(RVA = "0x1C6A220", Offset = "0x1C6A220", VA = "0x1C6A220", Slot = "5")]
				public int GetHashCode(int o)
				{
					return default(int);
				}

				[Token(Token = "0x60011DB")]
				[Address(RVA = "0x1C6A228", Offset = "0x1C6A228", VA = "0x1C6A228")]
				public IntEqualityComparer()
				{
				}
			}

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool autoReset;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MixMode[] layerMixModes;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly Dictionary<int, Animation> animationTable;

			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly Dictionary<AnimationClip, int> clipNameHashCodeTable;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly List<Animation> previousAnimations;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly List<AnimatorClipInfo> clipInfoCache;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private readonly List<AnimatorClipInfo> nextClipInfoCache;

			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Animator animator;

			[Token(Token = "0x170003A7")]
			public Animator Animator
			{
				[Token(Token = "0x60011CD")]
				[Address(RVA = "0xCC2018", Offset = "0xCC2018", VA = "0xCC2018")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xCC2020", Offset = "0xCC2020", VA = "0xCC2020")]
			public void Initialize(Animator animator, SkeletonDataAsset skeletonDataAsset)
			{
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xCC226C", Offset = "0xCC226C", VA = "0xCC226C")]
			public void Apply(Skeleton skeleton)
			{
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xCC338C", Offset = "0xCC338C", VA = "0xCC338C")]
			private static float AnimationTime(float normalizedTime, float clipLength, bool loop, bool reversed)
			{
				return default(float);
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xCC33E0", Offset = "0xCC33E0", VA = "0xCC33E0")]
			private static float AnimationTime(float normalizedTime, float clipLength, bool reversed)
			{
				return default(float);
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xCC316C", Offset = "0xCC316C", VA = "0xCC316C")]
			private void GetAnimatorClipInfos(int layer, out int clipInfoCount, out int nextClipInfoCount, out IList<AnimatorClipInfo> clipInfo, out IList<AnimatorClipInfo> nextClipInfo)
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xCC32C4", Offset = "0xCC32C4", VA = "0xCC32C4")]
			private int NameHashCode(AnimationClip clip)
			{
				return default(int);
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xCC341C", Offset = "0xCC341C", VA = "0xCC341C")]
			public MecanimTranslator()
			{
			}
		}

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected MecanimTranslator translator;

		[Token(Token = "0x170003A6")]
		public MecanimTranslator Translator
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xDA89CC", Offset = "0xDA89CC", VA = "0xDA89CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000028")]
		protected event UpdateBonesDelegate _UpdateLocal
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xDA89D4", Offset = "0xDA89D4", VA = "0xDA89D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5488", Offset = "0x7E5488")]
			add
			{
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xDA8A74", Offset = "0xDA8A74", VA = "0xDA8A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5498", Offset = "0x7E5498")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		protected event UpdateBonesDelegate _UpdateWorld
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xDA8B14", Offset = "0xDA8B14", VA = "0xDA8B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E54A8", Offset = "0x7E54A8")]
			add
			{
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xDA8BB4", Offset = "0xDA8BB4", VA = "0xDA8BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E54B8", Offset = "0x7E54B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		protected event UpdateBonesDelegate _UpdateComplete
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xDA8C54", Offset = "0xDA8C54", VA = "0xDA8C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E54C8", Offset = "0x7E54C8")]
			add
			{
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xDA8CF4", Offset = "0xDA8CF4", VA = "0xDA8CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E54D8", Offset = "0x7E54D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event UpdateBonesDelegate UpdateLocal
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xDA8D94", Offset = "0xDA8D94", VA = "0xDA8D94", Slot = "11")]
			add
			{
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xDA8D98", Offset = "0xDA8D98", VA = "0xDA8D98", Slot = "12")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event UpdateBonesDelegate UpdateWorld
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xDA8D9C", Offset = "0xDA8D9C", VA = "0xDA8D9C", Slot = "13")]
			add
			{
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xDA8DA0", Offset = "0xDA8DA0", VA = "0xDA8DA0", Slot = "14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event UpdateBonesDelegate UpdateComplete
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xDA8DA4", Offset = "0xDA8DA4", VA = "0xDA8DA4", Slot = "15")]
			add
			{
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xDA8DA8", Offset = "0xDA8DA8", VA = "0xDA8DA8", Slot = "16")]
			remove
			{
			}
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xDA8DAC", Offset = "0xDA8DAC", VA = "0xDA8DAC", Slot = "9")]
		public override void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xDA8E88", Offset = "0xDA8E88", VA = "0xDA8E88")]
		public void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xDA8F20", Offset = "0xDA8F20", VA = "0xDA8F20")]
		public SkeletonAnimator()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public static class SkeletonExtensions
	{
		[Token(Token = "0x4000EBC")]
		private const float ByteToFloat = 0.003921569f;

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x12C21B8", Offset = "0x12C21B8", VA = "0x12C21B8")]
		public static Color GetColor(this Skeleton s)
		{
			return default(Color);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x12C21F8", Offset = "0x12C21F8", VA = "0x12C21F8")]
		public static Color GetColor(this RegionAttachment a)
		{
			return default(Color);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x12C2238", Offset = "0x12C2238", VA = "0x12C2238")]
		public static Color GetColor(this MeshAttachment a)
		{
			return default(Color);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x12C2278", Offset = "0x12C2278", VA = "0x12C2278")]
		public static Color GetColor(this Slot s)
		{
			return default(Color);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x12C22B8", Offset = "0x12C22B8", VA = "0x12C22B8")]
		public static Color GetColorTintBlack(this Slot s)
		{
			return default(Color);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x12BC804", Offset = "0x12BC804", VA = "0x12BC804")]
		public static void SetColor(this Skeleton skeleton, Color color)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x12C22FC", Offset = "0x12C22FC", VA = "0x12C22FC")]
		public static void SetColor(this Skeleton skeleton, Color32 color)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x12BC820", Offset = "0x12BC820", VA = "0x12BC820")]
		public static void SetColor(this Slot slot, Color color)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x12C234C", Offset = "0x12C234C", VA = "0x12C234C")]
		public static void SetColor(this Slot slot, Color32 color)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x12C239C", Offset = "0x12C239C", VA = "0x12C239C")]
		public static void SetColor(this RegionAttachment attachment, Color color)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x12C23B8", Offset = "0x12C23B8", VA = "0x12C23B8")]
		public static void SetColor(this RegionAttachment attachment, Color32 color)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x12C2408", Offset = "0x12C2408", VA = "0x12C2408")]
		public static void SetColor(this MeshAttachment attachment, Color color)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x12C2424", Offset = "0x12C2424", VA = "0x12C2424")]
		public static void SetColor(this MeshAttachment attachment, Color32 color)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x12C2474", Offset = "0x12C2474", VA = "0x12C2474")]
		public static void SetPosition(this Bone bone, Vector2 position)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x12C248C", Offset = "0x12C248C", VA = "0x12C248C")]
		public static void SetPosition(this Bone bone, Vector3 position)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x12C24A4", Offset = "0x12C24A4", VA = "0x12C24A4")]
		public static Vector2 GetLocalPosition(this Bone bone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x12C24BC", Offset = "0x12C24BC", VA = "0x12C24BC")]
		public static Vector2 GetSkeletonSpacePosition(this Bone bone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x12C24D8", Offset = "0x12C24D8", VA = "0x12C24D8")]
		public static Vector2 GetSkeletonSpacePosition(this Bone bone, Vector2 boneLocal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x12C2514", Offset = "0x12C2514", VA = "0x12C2514")]
		public static Vector3 GetWorldPosition(this Bone bone, Transform spineGameObjectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x12C2544", Offset = "0x12C2544", VA = "0x12C2544")]
		public static Vector3 GetWorldPosition(this Bone bone, Transform spineGameObjectTransform, float positionScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x12C257C", Offset = "0x12C257C", VA = "0x12C257C")]
		public static Quaternion GetQuaternion(this Bone bone)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x12C25F4", Offset = "0x12C25F4", VA = "0x12C25F4")]
		public static Quaternion GetLocalQuaternion(this Bone bone)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x12C2670", Offset = "0x12C2670", VA = "0x12C2670")]
		public static Vector3 GetWorldPosition(this PointAttachment attachment, Slot slot, Transform spineGameObjectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x12C26D8", Offset = "0x12C26D8", VA = "0x12C26D8")]
		public static Vector3 GetWorldPosition(this PointAttachment attachment, Bone bone, Transform spineGameObjectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x12C2738", Offset = "0x12C2738", VA = "0x12C2738")]
		public static Matrix4x4 GetMatrix4x4(this Bone bone)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x12C2798", Offset = "0x12C2798", VA = "0x12C2798")]
		public static void GetWorldToLocalMatrix(this Bone bone, out float ia, out float ib, out float ic, out float id)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x12C27E8", Offset = "0x12C27E8", VA = "0x12C27E8")]
		public static Vector2 WorldToLocal(this Bone bone, Vector2 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x12C2824", Offset = "0x12C2824", VA = "0x12C2824")]
		public static Vector2 SetPositionSkeletonSpace(this Bone bone, Vector2 skeletonSpacePosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x12C2858", Offset = "0x12C2858", VA = "0x12C2858")]
		public static Material GetMaterial(this Attachment a)
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x12C29AC", Offset = "0x12C29AC", VA = "0x12C29AC")]
		public static Vector2[] GetLocalVertices(this VertexAttachment va, Slot slot, Vector2[] buffer)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x12C2C4C", Offset = "0x12C2C4C", VA = "0x12C2C4C")]
		public static Vector2[] GetWorldVertices(this VertexAttachment a, Slot slot, Vector2[] buffer)
		{
			return null;
		}
	}
	[Token(Token = "0x200027E")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CB8C8", Offset = "0x7CB8C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB8C8", Offset = "0x7CB8C8")]
	[ExecuteInEditMode]
	public class SkeletonRenderer : MonoBehaviour, ISkeletonComponent, ISkeletonDataAssetComponent
	{
		[Token(Token = "0x200027F")]
		public delegate void SkeletonRendererDelegate(SkeletonRenderer skeletonRenderer);

		[Token(Token = "0x2000280")]
		public delegate void InstructionDelegate(SkeletonRendererInstruction instruction);

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string initialSkinName;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool initialFlipX;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool initialFlipY;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7D0378", Offset = "0x7D0378")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D0378", Offset = "0x7D0378")]
		public string[] separatorSlotNames;

		[NonSerialized]
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly List<Slot> separatorSlots;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0400", Offset = "0x7D0400")]
		public float zSpacing;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool useClipping;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool immutableTriangles;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool pmaVertexColors;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool clearStateOnDisable;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool tintBlack;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool singleSubmesh;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7D041C", Offset = "0x7D041C")]
		public bool addNormals;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool calculateTangents;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool logErrors;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool disableRenderingOnOverride;

		[NonSerialized]
		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Dictionary<Material, Material> customMaterialOverride;

		[NonSerialized]
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<Slot, Material> customSlotMaterials;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshFilter meshFilter;

		[NonSerialized]
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool valid;

		[NonSerialized]
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Skeleton skeleton;

		[NonSerialized]
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly SkeletonRendererInstruction currentInstructions;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly MeshGenerator meshGenerator;

		[NonSerialized]
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly MeshRendererBuffers rendererBuffers;

		[Token(Token = "0x170003A8")]
		public SkeletonDataAsset SkeletonDataAsset
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x1273A50", Offset = "0x1273A50", VA = "0x1273A50", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public Dictionary<Material, Material> CustomMaterialOverride
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x1273B98", Offset = "0x1273B98", VA = "0x1273B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public Dictionary<Slot, Material> CustomSlotMaterials
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x1273BA0", Offset = "0x1273BA0", VA = "0x1273BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public Skeleton Skeleton
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x1273BA8", Offset = "0x1273BA8", VA = "0x1273BA8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002E")]
		public event SkeletonRendererDelegate OnRebuild
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x12737D0", Offset = "0x12737D0", VA = "0x12737D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E56D8", Offset = "0x7E56D8")]
			add
			{
			}
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x1273870", Offset = "0x1273870", VA = "0x1273870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E56E8", Offset = "0x7E56E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event MeshGeneratorDelegate OnPostProcessVertices
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x1273910", Offset = "0x1273910", VA = "0x1273910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E56F8", Offset = "0x7E56F8")]
			add
			{
			}
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x12739B0", Offset = "0x12739B0", VA = "0x12739B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5708", Offset = "0x7E5708")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		private event InstructionDelegate generateMeshOverride
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x1273A58", Offset = "0x1273A58", VA = "0x1273A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5718", Offset = "0x7E5718")]
			add
			{
			}
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x1273AF8", Offset = "0x1273AF8", VA = "0x1273AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5728", Offset = "0x7E5728")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event InstructionDelegate GenerateMeshOverride
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x12732C0", Offset = "0x12732C0", VA = "0x12732C0")]
			add
			{
			}
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x1272BB8", Offset = "0x1272BB8", VA = "0x1272BB8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001208")]
		public static T NewSpineGameObject<T>(SkeletonDataAsset skeletonDataAsset) where T : SkeletonRenderer
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		public static T AddSpineComponent<T>(GameObject gameObject, SkeletonDataAsset skeletonDataAsset) where T : SkeletonRenderer
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1273BD8", Offset = "0x1273BD8", VA = "0x1273BD8")]
		public void SetMeshSettings(MeshGenerator.Settings settings)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1273C38", Offset = "0x1273C38", VA = "0x1273C38", Slot = "7")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1273C48", Offset = "0x1273C48", VA = "0x1273C48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1273C68", Offset = "0x1273C68", VA = "0x1273C68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1273C9C", Offset = "0x1273C9C", VA = "0x1273C9C", Slot = "8")]
		public virtual void ClearState()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1273D80", Offset = "0x1273D80", VA = "0x1273D80", Slot = "9")]
		public virtual void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1274120", Offset = "0x1274120", VA = "0x1274120", Slot = "10")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1274878", Offset = "0x1274878", VA = "0x1274878")]
		public SkeletonRenderer()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CB99C", Offset = "0x7CB99C")]
	[ExecuteInEditMode]
	public class SkeletonUtility : MonoBehaviour
	{
		[Token(Token = "0x2000282")]
		public delegate void SkeletonUtilityDelegate();

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform boneRoot;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public ISkeletonAnimation skeletonAnimation;

		[NonSerialized]
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SkeletonUtilityBone> utilityBones;

		[NonSerialized]
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SkeletonUtilityConstraint> utilityConstraints;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool hasTransformBones;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool hasUtilityConstraints;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		protected bool needToReprocessBones;

		[Token(Token = "0x14000032")]
		public event SkeletonUtilityDelegate OnReset
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x12760F4", Offset = "0x12760F4", VA = "0x12760F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5738", Offset = "0x7E5738")]
			add
			{
			}
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x1276194", Offset = "0x1276194", VA = "0x1276194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5748", Offset = "0x7E5748")]
			remove
			{
			}
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1275840", Offset = "0x1275840", VA = "0x1275840")]
		public static PolygonCollider2D AddBoundingBoxGameObject(Skeleton skeleton, string skinName, string slotName, string attachmentName, Transform parent, bool isTrigger = true)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1275C2C", Offset = "0x1275C2C", VA = "0x1275C2C")]
		public static PolygonCollider2D AddBoundingBoxGameObject(string name, BoundingBoxAttachment box, Slot slot, Transform parent, bool isTrigger = true)
		{
			return null;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1275D6C", Offset = "0x1275D6C", VA = "0x1275D6C")]
		public static PolygonCollider2D AddBoundingBoxAsComponent(BoundingBoxAttachment box, Slot slot, GameObject gameObject, bool isTrigger = true, bool isKinematic = true, float gravityScale = 0f)
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1275F18", Offset = "0x1275F18", VA = "0x1275F18")]
		public static void SetColliderPointsLocal(PolygonCollider2D collider, Slot slot, BoundingBoxAttachment box)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1275FF4", Offset = "0x1275FF4", VA = "0x1275FF4")]
		public static Bounds GetBoundingBoxBounds(BoundingBoxAttachment boundingBox, float depth = 0f)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1276234", Offset = "0x1276234", VA = "0x1276234")]
		private void Update()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1276304", Offset = "0x1276304", VA = "0x1276304")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1276B90", Offset = "0x1276B90", VA = "0x1276B90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1276B94", Offset = "0x1276B94", VA = "0x1276B94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1276E48", Offset = "0x1276E48", VA = "0x1276E48")]
		private void HandleRendererReset(SkeletonRenderer r)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1276E78", Offset = "0x1276E78", VA = "0x1276E78")]
		public void RegisterBone(SkeletonUtilityBone bone)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1276F14", Offset = "0x1276F14", VA = "0x1276F14")]
		public void UnregisterBone(SkeletonUtilityBone bone)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1276F78", Offset = "0x1276F78", VA = "0x1276F78")]
		public void RegisterConstraint(SkeletonUtilityConstraint constraint)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1277014", Offset = "0x1277014", VA = "0x1277014")]
		public void UnregisterConstraint(SkeletonUtilityConstraint constraint)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x12765E0", Offset = "0x12765E0", VA = "0x12765E0")]
		public void CollectBones()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1277078", Offset = "0x1277078", VA = "0x1277078")]
		private void UpdateLocal(ISkeletonAnimation anim)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1277240", Offset = "0x1277240", VA = "0x1277240")]
		private void UpdateWorld(ISkeletonAnimation anim)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x12772F8", Offset = "0x12772F8", VA = "0x12772F8")]
		private void UpdateComplete(ISkeletonAnimation anim)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1277148", Offset = "0x1277148", VA = "0x1277148")]
		private void UpdateAllBones()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x12778AC", Offset = "0x12778AC", VA = "0x12778AC")]
		public Transform GetBoneRoot()
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x12779F4", Offset = "0x12779F4", VA = "0x12779F4")]
		public GameObject SpawnRoot(SkeletonUtilityBone.Mode mode, bool pos, bool rot, bool sca)
		{
			return null;
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1277C54", Offset = "0x1277C54", VA = "0x1277C54")]
		public GameObject SpawnHierarchy(SkeletonUtilityBone.Mode mode, bool pos, bool rot, bool sca)
		{
			return null;
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1277CE0", Offset = "0x1277CE0", VA = "0x1277CE0")]
		public GameObject SpawnBoneRecursively(Bone bone, Transform parent, SkeletonUtilityBone.Mode mode, bool pos, bool rot, bool sca)
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1277A80", Offset = "0x1277A80", VA = "0x1277A80")]
		public GameObject SpawnBone(Bone bone, Transform parent, SkeletonUtilityBone.Mode mode, bool pos, bool rot, bool sca)
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1277F80", Offset = "0x1277F80", VA = "0x1277F80")]
		public SkeletonUtility()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CBA0C", Offset = "0x7CBA0C")]
	public class SkeletonUtilityBone : MonoBehaviour
	{
		[Token(Token = "0x2000284")]
		public enum Mode
		{
			[Token(Token = "0x4000EF3")]
			Follow,
			[Token(Token = "0x4000EF4")]
			Override
		}

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boneName;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parentReference;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mode mode;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool position;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool rotation;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool scale;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool zPosition;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0494", Offset = "0x7D0494")]
		public float overrideAlpha;

		[NonSerialized]
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkeletonUtility skeletonUtility;

		[NonSerialized]
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bone bone;

		[NonSerialized]
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool transformLerpComplete;

		[NonSerialized]
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool valid;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cachedTransform;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform skeletonTransform;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool incompatibleTransformMode;

		[Token(Token = "0x170003AC")]
		public bool IncompatibleTransformMode
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x1278038", Offset = "0x1278038", VA = "0x1278038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1277DD8", Offset = "0x1277DD8", VA = "0x1277DD8")]
		public void Reset()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1278040", Offset = "0x1278040", VA = "0x1278040")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1278164", Offset = "0x1278164", VA = "0x1278164")]
		private void HandleOnReset()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1278168", Offset = "0x1278168", VA = "0x1278168")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x12772FC", Offset = "0x12772FC", VA = "0x12772FC")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x127825C", Offset = "0x127825C", VA = "0x127825C")]
		public static bool BoneTransformModeIncompatible(Bone bone)
		{
			return default(bool);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1278290", Offset = "0x1278290", VA = "0x1278290")]
		public void AddBoundingBox(string skinName, string slotName, string attachmentName)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x12782EC", Offset = "0x12782EC", VA = "0x12782EC")]
		public SkeletonUtilityBone()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBA58", Offset = "0x7CBA58")]
	[ExecuteInEditMode]
	public abstract class SkeletonUtilityConstraint : MonoBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SkeletonUtilityBone utilBone;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected SkeletonUtility skeletonUtility;

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1278304", Offset = "0x1278304", VA = "0x1278304", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1278394", Offset = "0x1278394", VA = "0x1278394", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001244")]
		public abstract void DoUpdate();

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x12783B0", Offset = "0x12783B0", VA = "0x12783B0")]
		protected SkeletonUtilityConstraint()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7CBAC8", Offset = "0x7CBAC8")]
	public abstract class SpineAttributeBase : PropertyAttribute
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dataField;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string startsWith;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool includeNone;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool fallbackToTextField;

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE75DA8", Offset = "0xE75DA8", VA = "0xE75DA8")]
		protected SpineAttributeBase()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class SpineSlot : SpineAttributeBase
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool containsBoundingBoxes;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xE793A8", Offset = "0xE793A8", VA = "0xE793A8")]
		public SpineSlot(string startsWith = "", string dataField = "", bool containsBoundingBoxes = false, bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class SpineEvent : SpineAttributeBase
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE77E94", Offset = "0xE77E94", VA = "0xE77E94")]
		public SpineEvent(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class SpineIkConstraint : SpineAttributeBase
	{
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE78A50", Offset = "0xE78A50", VA = "0xE78A50")]
		public SpineIkConstraint(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class SpinePathConstraint : SpineAttributeBase
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0xE78B44", Offset = "0xE78B44", VA = "0xE78B44")]
		public SpinePathConstraint(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class SpineTransformConstraint : SpineAttributeBase
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0xE79408", Offset = "0xE79408", VA = "0xE79408")]
		public SpineTransformConstraint(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class SpineSkin : SpineAttributeBase
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xE79354", Offset = "0xE79354", VA = "0xE79354")]
		public SpineSkin(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class SpineAnimation : SpineAttributeBase
	{
		[Token(Token = "0x600124D")]
		[Address(RVA = "0xE75D54", Offset = "0xE75D54", VA = "0xE75D54")]
		public SpineAnimation(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class SpineAttachment : SpineAttributeBase
	{
		[Token(Token = "0x200028F")]
		public struct Hierarchy
		{
			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string skin;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string slot;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001252")]
			[Address(RVA = "0xCC6660", Offset = "0xCC6660", VA = "0xCC6660")]
			public Hierarchy(string fullPath)
			{
			}
		}

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool returnAttachmentPath;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool currentSkinOnly;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool placeholdersOnly;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string skinField;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string slotField;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xE77A8C", Offset = "0xE77A8C", VA = "0xE77A8C")]
		public SpineAttachment(bool currentSkinOnly = true, bool returnAttachmentPath = false, bool placeholdersOnly = false, string slotField = "", string dataField = "", string skinField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xE77B50", Offset = "0xE77B50", VA = "0xE77B50")]
		public static Hierarchy GetHierarchy(string fullPath)
		{
			return default(Hierarchy);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xE77B68", Offset = "0xE77B68", VA = "0xE77B68")]
		public static Attachment GetAttachment(string attachmentPath, SkeletonData skeletonData)
		{
			return null;
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xE77C10", Offset = "0xE77C10", VA = "0xE77C10")]
		public static Attachment GetAttachment(string attachmentPath, SkeletonDataAsset skeletonDataAsset)
		{
			return null;
		}
	}
	[Token(Token = "0x2000290")]
	public class SpineBone : SpineAttributeBase
	{
		[Token(Token = "0x6001253")]
		[Address(RVA = "0xE77DD0", Offset = "0xE77DD0", VA = "0xE77DD0")]
		public SpineBone(string startsWith = "", string dataField = "", bool includeNone = true, bool fallbackToTextField = false)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xE77E24", Offset = "0xE77E24", VA = "0xE77E24")]
		public static Bone GetBone(string boneName, SkeletonRenderer renderer)
		{
			return null;
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xE77E50", Offset = "0xE77E50", VA = "0xE77E50")]
		public static BoneData GetBoneData(string boneName, SkeletonDataAsset skeletonDataAsset)
		{
			return null;
		}
	}
	[Token(Token = "0x2000291")]
	public class SpineAtlasRegion : PropertyAttribute
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string atlasAssetField;

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xE77A60", Offset = "0xE77A60", VA = "0xE77A60")]
		public SpineAtlasRegion(string atlasAssetField = "")
		{
		}
	}
}
namespace Spine.Unity.Playables
{
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CBB00", Offset = "0x7CBB00")]
	public class SkeletonAnimationPlayableHandle : SpinePlayableHandleBase
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeOutDuration;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Skeleton skeleton;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly HashSet<int> frameAppliedProperties;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int frameTrackCount;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int frameCurrentInputs;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool firstCleared;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastApplyFrame;

		[Token(Token = "0x170003AD")]
		public override Skeleton Skeleton
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xDA86A0", Offset = "0xDA86A0", VA = "0xDA86A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public override SkeletonData SkeletonData
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xDA86BC", Offset = "0xDA86BC", VA = "0xDA86BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xDA86E8", Offset = "0xDA86E8", VA = "0xDA86E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xDA87A4", Offset = "0xDA87A4", VA = "0xDA87A4", Slot = "6")]
		public override void ProcessFrame(Playable playable, FrameData info, SpineAnimationMixerBehaviour mixer)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xDA894C", Offset = "0xDA894C", VA = "0xDA894C")]
		public SkeletonAnimationPlayableHandle()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public delegate void SpineEventDelegate(Event e);
	[Token(Token = "0x2000294")]
	public abstract class SpinePlayableHandleBase : MonoBehaviour
	{
		[Token(Token = "0x170003AF")]
		public abstract SkeletonData SkeletonData
		{
			[Token(Token = "0x6001260")]
			get;
		}

		[Token(Token = "0x170003B0")]
		public abstract Skeleton Skeleton
		{
			[Token(Token = "0x6001261")]
			get;
		}

		[Token(Token = "0x14000033")]
		public event SpineEventDelegate AnimationEvents
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xE78B98", Offset = "0xE78B98", VA = "0xE78B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5758", Offset = "0x7E5758")]
			add
			{
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xE78C38", Offset = "0xE78C38", VA = "0xE78C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5768", Offset = "0x7E5768")]
			remove
			{
			}
		}

		[Token(Token = "0x6001262")]
		public abstract void ProcessFrame(Playable playable, FrameData info, SpineAnimationMixerBehaviour mixer);

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE78CD8", Offset = "0xE78CD8", VA = "0xE78CD8", Slot = "7")]
		public virtual void HandleEvents(ExposedList<Event> eventBuffer)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE78D68", Offset = "0xE78D68", VA = "0xE78D68")]
		protected SpinePlayableHandleBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000295")]
	public class SpineAnimationBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D04BC", Offset = "0x7D04BC")]
		public string animationName;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool loop;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0510", Offset = "0x7D0510")]
		public float attachmentThreshold;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0528", Offset = "0x7D0528")]
		public float eventThreshold;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0540", Offset = "0x7D0540")]
		public float drawOrderThreshold;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Animation animation;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE75E04", Offset = "0xE75E04", VA = "0xE75E04")]
		public void EnsureInitialize(SkeletonData data)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE75E58", Offset = "0xE75E58", VA = "0xE75E58")]
		public SpineAnimationBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class SpineAnimationClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpineAnimationBehaviour template;

		[Token(Token = "0x170003B1")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xE75E70", Offset = "0xE75E70", VA = "0xE75E70", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE75E78", Offset = "0xE75E78", VA = "0xE75E78", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE75F2C", Offset = "0xE75F2C", VA = "0xE75F2C")]
		public SpineAnimationClip()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class SpineAnimationMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SpinePlayableHandleBase trackBindingPlayableHandle;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool clipsInitialized;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ExposedList<Event> eventBuffer;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] lastInputWeights;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] lastTimes;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE75FA0", Offset = "0xE75FA0", VA = "0xE75FA0", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE76258", Offset = "0xE76258", VA = "0xE76258")]
		internal int ApplyPlayableFrame(Playable playable, Skeleton skeleton, HashSet<int> frameAppliedProperties, int trackIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE76E68", Offset = "0xE76E68", VA = "0xE76E68")]
		public SpineAnimationMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7CBB38", Offset = "0x7CBB38")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7CBB38", Offset = "0x7CBB38")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7CBB38", Offset = "0x7CBB38")]
	public class SpineAnimationTrack : TrackAsset
	{
		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE77948", Offset = "0xE77948", VA = "0xE77948", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE779F4", Offset = "0xE779F4", VA = "0xE779F4", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE779FC", Offset = "0xE779FC", VA = "0xE779FC")]
		public SpineAnimationTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class SpineAnimationStateBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D0558", Offset = "0x7D0558")]
		public string animationName;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool loop;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D05AC", Offset = "0x7D05AC")]
		public bool customDuration;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float mixDuration;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D05E4", Offset = "0x7D05E4")]
		public float attachmentThreshold;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D05FC", Offset = "0x7D05FC")]
		public float eventThreshold;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0614", Offset = "0x7D0614")]
		public float drawOrderThreshold;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xE76EE0", Offset = "0xE76EE0", VA = "0xE76EE0")]
		public SpineAnimationStateBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class SpineAnimationStateClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpineAnimationStateBehaviour template;

		[Token(Token = "0x170003B2")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xE76EF4", Offset = "0xE76EF4", VA = "0xE76EF4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xE76EFC", Offset = "0xE76EFC", VA = "0xE76EFC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xE76FEC", Offset = "0xE76FEC", VA = "0xE76FEC")]
		public SpineAnimationStateClip()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class SpineAnimationStateMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] lastInputWeights;

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xE7705C", Offset = "0xE7705C", VA = "0xE7705C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xE77414", Offset = "0xE77414", VA = "0xE77414")]
		public void PreviewEditModePose(Playable playable, SkeletonAnimation spineComponent)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE77830", Offset = "0xE77830", VA = "0xE77830")]
		public SpineAnimationStateMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7CBBF4", Offset = "0x7CBBF4")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7CBBF4", Offset = "0x7CBBF4")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7CBBF4", Offset = "0x7CBBF4")]
	public class SpineAnimationStateTrack : TrackAsset
	{
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE77838", Offset = "0xE77838", VA = "0xE77838", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE778E4", Offset = "0xE778E4", VA = "0xE778E4")]
		public SpineAnimationStateTrack()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class SpineSkeletonFlipMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool defaultFlipX;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool defaultFlipY;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpinePlayableHandleBase playableHandle;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_FirstFrameHappened;

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE78E98", Offset = "0xE78E98", VA = "0xE78E98", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xE79190", Offset = "0xE79190", VA = "0xE79190", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xE79234", Offset = "0xE79234", VA = "0xE79234")]
		public SpineSkeletonFlipMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7CBCB0", Offset = "0x7CBCB0")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7CBCB0", Offset = "0x7CBCB0")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7CBCB0", Offset = "0x7CBCB0")]
	public class SpineSkeletonFlipTrack : TrackAsset
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE7923C", Offset = "0xE7923C", VA = "0xE7923C", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE792E8", Offset = "0xE792E8", VA = "0xE792E8", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE792F0", Offset = "0xE792F0", VA = "0xE792F0")]
		public SpineSkeletonFlipTrack()
		{
		}
	}
}
namespace Spine.Unity.Modules
{
	[Token(Token = "0x200029F")]
	public class AtlasRegionAttacher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A0")]
		public class SlotRegionPair
		{
			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D065C", Offset = "0x7D065C")]
			public string slot;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpineAtlasRegion", RVA = "0x7D06BC", Offset = "0x7D06BC")]
			public string region;

			[Token(Token = "0x6001285")]
			[Address(RVA = "0xF1AEC8", Offset = "0xF1AEC8", VA = "0xF1AEC8")]
			public SlotRegionPair()
			{
			}
		}

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AtlasAsset atlasAsset;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool inheritProperties;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected List<SlotRegionPair> attachments;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Atlas atlas;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x110D708", Offset = "0x110D708", VA = "0x110D708")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x110DA3C", Offset = "0x110DA3C", VA = "0x110DA3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x110D7E4", Offset = "0x110D7E4", VA = "0x110D7E4")]
		private void Apply(SkeletonRenderer skeletonRenderer)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x110DD90", Offset = "0x110DD90", VA = "0x110DD90")]
		public AtlasRegionAttacher()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class SpriteAttacher : MonoBehaviour
	{
		[Token(Token = "0x4000F2F")]
		public const string DefaultPMAShader = "Spine/Skeleton";

		[Token(Token = "0x4000F30")]
		public const string DefaultStraightAlphaShader = "Sprites/Default";

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool attachOnStart;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideAnimation;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite sprite;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D06F4", Offset = "0x7D06F4")]
		public string slot;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RegionAttachment attachment;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Slot spineSlot;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool applyPMA;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Texture, AtlasPage> atlasPageCache;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xE7A630", Offset = "0xE7A630", VA = "0xE7A630")]
		private static AtlasPage GetPageFor(Texture texture, Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE7A7C4", Offset = "0xE7A7C4", VA = "0xE7A7C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xE7AC6C", Offset = "0xE7AC6C", VA = "0xE7AC6C")]
		private void AnimationOverrideSpriteAttach(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xE7A80C", Offset = "0xE7A80C", VA = "0xE7A80C")]
		public void Initialize(bool overwrite = true)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE7ACB8", Offset = "0xE7ACB8", VA = "0xE7ACB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE7AC50", Offset = "0xE7AC50", VA = "0xE7AC50")]
		public void Attach()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE7ADE4", Offset = "0xE7ADE4", VA = "0xE7ADE4")]
		public SpriteAttacher()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public static class SpriteAttachmentExtensions
	{
		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE7ADF4", Offset = "0xE7ADF4", VA = "0xE7ADF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E5778", Offset = "0x7E5778")]
		public static RegionAttachment AttachUnitySprite(this Skeleton skeleton, string slotName, Sprite sprite, string shaderName = "Spine/Skeleton", bool applyPMA = true, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE7AF48", Offset = "0xE7AF48", VA = "0xE7AF48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E57B0", Offset = "0x7E57B0")]
		public static RegionAttachment AddUnitySprite(this SkeletonData skeletonData, string slotName, Sprite sprite, string skinName = "", string shaderName = "Spine/Skeleton", bool applyPMA = true, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE7AE54", Offset = "0xE7AE54", VA = "0xE7AE54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E57E8", Offset = "0x7E57E8")]
		public static RegionAttachment AttachUnitySprite(this Skeleton skeleton, string slotName, Sprite sprite, Shader shader, bool applyPMA, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xE7AFB8", Offset = "0xE7AFB8", VA = "0xE7AFB8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E5820", Offset = "0x7E5820")]
		public static RegionAttachment AddUnitySprite(this SkeletonData skeletonData, string slotName, Sprite sprite, string skinName, Shader shader, bool applyPMA, float rotation = 0f)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class SpineEventUnityHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A4")]
		public class EventPair
		{
			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineEvent", RVA = "0x7D0754", Offset = "0x7D0754")]
			public string spineEvent;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent unityHandler;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationState.TrackEntryEventDelegate eventDelegate;

			[Token(Token = "0x6001294")]
			[Address(RVA = "0xCC6D50", Offset = "0xCC6D50", VA = "0xCC6D50")]
			public EventPair()
			{
			}
		}

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBD7C", Offset = "0x7CBD7C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EventPair ep;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventData eventData;

			[Token(Token = "0x6001295")]
			[Address(RVA = "0xCC6D04", Offset = "0xCC6D04", VA = "0xCC6D04")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0xCC6D0C", Offset = "0xCC6D0C", VA = "0xCC6D0C")]
			internal void <Start>b__0(TrackEntry trackEntry, Event e)
			{
			}
		}

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EventPair> events;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ISkeletonComponent skeletonComponent;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IAnimationStateComponent animationStateComponent;

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xE782F0", Offset = "0xE782F0", VA = "0xE782F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xE7867C", Offset = "0xE7867C", VA = "0xE7867C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xE78868", Offset = "0xE78868", VA = "0xE78868")]
		public SpineEventUnityHandler()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[ExecuteInEditMode]
	public class SkeletonRendererCustomMaterials : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A7")]
		public struct SlotMaterialOverride : IEquatable<SlotMaterialOverride>
		{
			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overrideDisabled;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D07D0", Offset = "0x7D07D0")]
			public string slotName;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x600129E")]
			[Address(RVA = "0xCC4CE8", Offset = "0xCC4CE8", VA = "0xCC4CE8", Slot = "4")]
			public bool Equals(SlotMaterialOverride other)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002A8")]
		public struct AtlasMaterialOverride : IEquatable<AtlasMaterialOverride>
		{
			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overrideDisabled;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material originalMaterial;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material replacementMaterial;

			[Token(Token = "0x600129F")]
			[Address(RVA = "0xCC4BF8", Offset = "0xCC4BF8", VA = "0xCC4BF8", Slot = "4")]
			public bool Equals(AtlasMaterialOverride other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected List<SlotMaterialOverride> customSlotMaterials;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected List<AtlasMaterialOverride> customMaterialOverrides;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1274AE4", Offset = "0x1274AE4", VA = "0x1274AE4")]
		private void SetCustomSlotMaterials()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1274C94", Offset = "0x1274C94", VA = "0x1274C94")]
		private void RemoveCustomSlotMaterials()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1274EAC", Offset = "0x1274EAC", VA = "0x1274EAC")]
		private void SetCustomMaterialOverrides()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1275028", Offset = "0x1275028", VA = "0x1275028")]
		private void RemoveCustomMaterialOverrides()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1275210", Offset = "0x1275210", VA = "0x1275210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1275368", Offset = "0x1275368", VA = "0x1275368")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x127543C", Offset = "0x127543C", VA = "0x127543C")]
		public SkeletonRendererCustomMaterials()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBD9C", Offset = "0x7CBD9C")]
	public class SkeletonGhost : MonoBehaviour
	{
		[Token(Token = "0x4000F4A")]
		private const HideFlags GhostHideFlags = HideFlags.HideInHierarchy;

		[Token(Token = "0x4000F4B")]
		private const string GhostingShaderName = "Spine/Special/SkeletonGhost";

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ghostingEnabled;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRate;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 color;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0830", Offset = "0x7D0830")]
		public bool additive;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maximumGhosts;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader ghostShader;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0868", Offset = "0x7D0868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0868", Offset = "0x7D0868")]
		public float textureFade;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D08BC", Offset = "0x7D08BC")]
		public bool sortWithDistanceOnly;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float zOffset;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float nextSpawnTime;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkeletonGhostRenderer[] pool;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int poolIndex;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<Material, Material> materialTable;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x12C2E24", Offset = "0x12C2E24", VA = "0x12C2E24")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x12C324C", Offset = "0x12C324C", VA = "0x12C324C")]
		private void OnEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x12C3478", Offset = "0x12C3478", VA = "0x12C3478")]
		private void Ghosting(float val)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x12C3488", Offset = "0x12C3488", VA = "0x12C3488")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x12C3A08", Offset = "0x12C3A08", VA = "0x12C3A08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x12C3304", Offset = "0x12C3304", VA = "0x12C3304")]
		private static Color32 HexToColor(string hex)
		{
			return default(Color32);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x12C3D50", Offset = "0x12C3D50", VA = "0x12C3D50")]
		public SkeletonGhost()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class SkeletonGhostRenderer : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBDFC", Offset = "0x7CBDFC")]
		private sealed class <Fade>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonGhostRenderer <>4__this;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <t>5__2;

			[Token(Token = "0x170003B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B0")]
				[Address(RVA = "0xCC3880", Offset = "0xCC3880", VA = "0xCC3880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012B2")]
				[Address(RVA = "0xCC38C8", Offset = "0xCC38C8", VA = "0xCC38C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xCC368C", Offset = "0xCC368C", VA = "0xCC368C")]
			[DebuggerHidden]
			public <Fade>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xCC36B8", Offset = "0xCC36B8", VA = "0xCC36B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0xCC36BC", Offset = "0xCC36BC", VA = "0xCC36BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xCC3888", Offset = "0xCC3888", VA = "0xCC3888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBE0C", Offset = "0x7CBE0C")]
		private sealed class <FadeAdditive>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonGhostRenderer <>4__this;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color32 <black>5__2;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <t>5__3;

			[Token(Token = "0x170003B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B6")]
				[Address(RVA = "0xCC3AE4", Offset = "0xCC3AE4", VA = "0xCC3AE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012B8")]
				[Address(RVA = "0xCC3B2C", Offset = "0xCC3B2C", VA = "0xCC3B2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xCC38D0", Offset = "0xCC38D0", VA = "0xCC38D0")]
			[DebuggerHidden]
			public <FadeAdditive>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xCC38FC", Offset = "0xCC38FC", VA = "0xCC38FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xCC3900", Offset = "0xCC3900", VA = "0xCC3900", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xCC3AEC", Offset = "0xCC3AEC", VA = "0xCC3AEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeSpeed;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color32[] colors;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color32 black;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x12C3E28", Offset = "0x12C3E28", VA = "0x12C3E28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x12C3834", Offset = "0x12C3834", VA = "0x12C3834")]
		public void Initialize(Mesh mesh, Material[] materials, Color32 color, bool additive, float speed, int sortingLayerID, int sortingOrder)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x12C3F28", Offset = "0x12C3F28", VA = "0x12C3F28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E5858", Offset = "0x7E5858")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x12C3EBC", Offset = "0x12C3EBC", VA = "0x12C3EBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E58B8", Offset = "0x7E58B8")]
		private IEnumerator FadeAdditive()
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x12C3C1C", Offset = "0x12C3C1C", VA = "0x12C3C1C")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x12C3F94", Offset = "0x12C3F94", VA = "0x12C3F94")]
		public SkeletonGhostRenderer()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBE1C", Offset = "0x7CBE1C")]
	public class SkeletonRagdoll : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		public class LayerFieldAttribute : PropertyAttribute
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xCC3FC0", Offset = "0xCC3FC0", VA = "0xCC3FC0")]
			public LayerFieldAttribute()
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBE7C", Offset = "0x7CBE7C")]
		private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll <>4__this;

			[Token(Token = "0x170003BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D1")]
				[Address(RVA = "0xCC3F70", Offset = "0xCC3F70", VA = "0xCC3F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D3")]
				[Address(RVA = "0xCC3FB8", Offset = "0xCC3FB8", VA = "0xCC3FB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xCC3CD0", Offset = "0xCC3CD0", VA = "0xCC3CD0")]
			[DebuggerHidden]
			public <Start>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xCC3CFC", Offset = "0xCC3CFC", VA = "0xCC3CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xCC3D00", Offset = "0xCC3D00", VA = "0xCC3D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xCC3F78", Offset = "0xCC3F78", VA = "0xCC3F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBE8C", Offset = "0x7CBE8C")]
		private sealed class <SmoothMixCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll <>4__this;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float target;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startMix>5__3;

			[Token(Token = "0x170003BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D7")]
				[Address(RVA = "0xCC3C80", Offset = "0xCC3C80", VA = "0xCC3C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D9")]
				[Address(RVA = "0xCC3CC8", Offset = "0xCC3CC8", VA = "0xCC3CC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xCC3B84", Offset = "0xCC3B84", VA = "0xCC3B84")]
			[DebuggerHidden]
			public <SmoothMixCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xCC3BB0", Offset = "0xCC3BB0", VA = "0xCC3BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xCC3BB4", Offset = "0xCC3BB4", VA = "0xCC3BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xCC3C88", Offset = "0xCC3C88", VA = "0xCC3C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform parentSpaceHelper;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D08F4", Offset = "0x7D08F4")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D08F4", Offset = "0x7D08F4")]
		public string startingBoneName;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D0978", Offset = "0x7D0978")]
		public List<string> stopBoneNames;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D09D4", Offset = "0x7D09D4")]
		public bool applyOnStart;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0A0C", Offset = "0x7D0A0C")]
		public bool disableIK;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool disableOtherConstraints;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D0A44", Offset = "0x7D0A44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0A44", Offset = "0x7D0A44")]
		public bool pinStartBone;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0A94", Offset = "0x7D0A94")]
		public bool enableJointCollision;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool useGravity;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0ACC", Offset = "0x7D0ACC")]
		public float thickness;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0B04", Offset = "0x7D0B04")]
		public float rotationLimit;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootMass;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0B3C", Offset = "0x7D0B3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0B3C", Offset = "0x7D0B3C")]
		public float massFalloffFactor;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0B94", Offset = "0x7D0B94")]
		public int colliderLayer;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0BCC", Offset = "0x7D0BCC")]
		public float mix;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISkeletonAnimation targetSkeletonComponent;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Skeleton skeleton;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Bone, Transform> boneTable;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform ragdollRoot;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BE4", Offset = "0x7D0BE4")]
		private Rigidbody <RootRigidbody>k__BackingField;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BF4", Offset = "0x7D0BF4")]
		private Bone <StartingBone>k__BackingField;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootOffset;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool isActive;

		[Token(Token = "0x170003B7")]
		public Rigidbody RootRigidbody
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x12CC6BC", Offset = "0x12CC6BC", VA = "0x12CC6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E59B8", Offset = "0x7E59B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x12CC6C4", Offset = "0x12CC6C4", VA = "0x12CC6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E59C8", Offset = "0x7E59C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public Bone StartingBone
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x12CC6CC", Offset = "0x12CC6CC", VA = "0x12CC6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E59D8", Offset = "0x7E59D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x12CC6D4", Offset = "0x12CC6D4", VA = "0x12CC6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E59E8", Offset = "0x7E59E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public Vector3 RootOffset
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x12CC6DC", Offset = "0x12CC6DC", VA = "0x12CC6DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003BA")]
		public bool IsActive
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x12CC6E8", Offset = "0x12CC6E8", VA = "0x12CC6E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003BB")]
		public Rigidbody[] RigidbodyArray
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x12CC75C", Offset = "0x12CC75C", VA = "0x12CC75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public Vector3 EstimatedSkeletonPosition
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x12CC99C", Offset = "0x12CC99C", VA = "0x12CC99C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x12CC6F0", Offset = "0x12CC6F0", VA = "0x12CC6F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E59F8", Offset = "0x7E59F8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x12CC9E0", Offset = "0x12CC9E0", VA = "0x12CC9E0")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x12CD9E0", Offset = "0x12CD9E0", VA = "0x12CD9E0")]
		public Coroutine SmoothMix(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x12CDA0C", Offset = "0x12CDA0C", VA = "0x12CDA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E5A58", Offset = "0x7E5A58")]
		private IEnumerator SmoothMixCoroutine(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x12CDA8C", Offset = "0x12CDA8C", VA = "0x12CDA8C")]
		public void SetSkeletonPosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x12CE150", Offset = "0x12CE150", VA = "0x12CE150")]
		public void Remove()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x12CE408", Offset = "0x12CE408", VA = "0x12CE408")]
		public Rigidbody GetRigidbody(string boneName)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x12CD63C", Offset = "0x12CD63C", VA = "0x12CD63C")]
		private void RecursivelyCreateBoneProxies(Bone b)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x12CDCD4", Offset = "0x12CDCD4", VA = "0x12CDCD4")]
		private void UpdateSpineSkeleton(ISkeletonAnimation skeletonRenderer)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x12CE4E0", Offset = "0x12CE4E0", VA = "0x12CE4E0")]
		private List<Collider> AttachBoundingBoxRagdollColliders(Bone b)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x12CD9B0", Offset = "0x12CD9B0", VA = "0x12CD9B0")]
		private static float GetPropagatedRotation(Bone b)
		{
			return default(float);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x12CEA7C", Offset = "0x12CEA7C", VA = "0x12CEA7C")]
		public SkeletonRagdoll()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBE9C", Offset = "0x7CBE9C")]
	public class SkeletonRagdoll2D : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBEFC", Offset = "0x7CBEFC")]
		private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll2D <>4__this;

			[Token(Token = "0x170003C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012F2")]
				[Address(RVA = "0xCC4398", Offset = "0xCC4398", VA = "0xCC4398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012F4")]
				[Address(RVA = "0xCC43E0", Offset = "0xCC43E0", VA = "0xCC43E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xCC4114", Offset = "0xCC4114", VA = "0xCC4114")]
			[DebuggerHidden]
			public <Start>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xCC4140", Offset = "0xCC4140", VA = "0xCC4140", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xCC4144", Offset = "0xCC4144", VA = "0xCC4144", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xCC43A0", Offset = "0xCC43A0", VA = "0xCC43A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBF0C", Offset = "0x7CBF0C")]
		private sealed class <SmoothMixCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll2D <>4__this;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float target;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startMix>5__3;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012F8")]
				[Address(RVA = "0xCC40C4", Offset = "0xCC40C4", VA = "0xCC40C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012FA")]
				[Address(RVA = "0xCC410C", Offset = "0xCC410C", VA = "0xCC410C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xCC3FC8", Offset = "0xCC3FC8", VA = "0xCC3FC8")]
			[DebuggerHidden]
			public <SmoothMixCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xCC3FF4", Offset = "0xCC3FF4", VA = "0xCC3FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xCC3FF8", Offset = "0xCC3FF8", VA = "0xCC3FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xCC40CC", Offset = "0xCC40CC", VA = "0xCC40CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform parentSpaceHelper;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D0C04", Offset = "0x7D0C04")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0C04", Offset = "0x7D0C04")]
		public string startingBoneName;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D0C88", Offset = "0x7D0C88")]
		public List<string> stopBoneNames;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0CE4", Offset = "0x7D0CE4")]
		public bool applyOnStart;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0D1C", Offset = "0x7D0D1C")]
		public bool disableIK;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool disableOtherConstraints;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0D54", Offset = "0x7D0D54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D0D54", Offset = "0x7D0D54")]
		public bool pinStartBone;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gravityScale;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0DA0", Offset = "0x7D0DA0")]
		public float thickness;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0DD8", Offset = "0x7D0DD8")]
		public float rotationLimit;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootMass;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0E10", Offset = "0x7D0E10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0E10", Offset = "0x7D0E10")]
		public float massFalloffFactor;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0E68", Offset = "0x7D0E68")]
		[SkeletonRagdoll.LayerField]
		public int colliderLayer;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D0EB4", Offset = "0x7D0EB4")]
		public float mix;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISkeletonAnimation targetSkeletonComponent;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Skeleton skeleton;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Bone, Transform> boneTable;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform ragdollRoot;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0ECC", Offset = "0x7D0ECC")]
		private Rigidbody2D <RootRigidbody>k__BackingField;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EDC", Offset = "0x7D0EDC")]
		private Bone <StartingBone>k__BackingField;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 rootOffset;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isActive;

		[Token(Token = "0x170003C1")]
		public Rigidbody2D RootRigidbody
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x12CEB70", Offset = "0x12CEB70", VA = "0x12CEB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5B58", Offset = "0x7E5B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x12CEB78", Offset = "0x12CEB78", VA = "0x12CEB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5B68", Offset = "0x7E5B68")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Bone StartingBone
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x12CEB80", Offset = "0x12CEB80", VA = "0x12CEB80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5B78", Offset = "0x7E5B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x12CEB88", Offset = "0x12CEB88", VA = "0x12CEB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5B88", Offset = "0x7E5B88")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public Vector3 RootOffset
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x12CEB90", Offset = "0x12CEB90", VA = "0x12CEB90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003C4")]
		public bool IsActive
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x12CEB9C", Offset = "0x12CEB9C", VA = "0x12CEB9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public Rigidbody2D[] RigidbodyArray
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x12CEC10", Offset = "0x12CEC10", VA = "0x12CEC10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		public Vector3 EstimatedSkeletonPosition
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x12CEE50", Offset = "0x12CEE50", VA = "0x12CEE50")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x12CEBA4", Offset = "0x12CEBA4", VA = "0x12CEBA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E5B98", Offset = "0x7E5B98")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x12CEE90", Offset = "0x12CEE90", VA = "0x12CEE90")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x12CFEE8", Offset = "0x12CFEE8", VA = "0x12CFEE8")]
		public Coroutine SmoothMix(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x12CFF14", Offset = "0x12CFF14", VA = "0x12CFF14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E5BF8", Offset = "0x7E5BF8")]
		private IEnumerator SmoothMixCoroutine(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x12CFF94", Offset = "0x12CFF94", VA = "0x12CFF94")]
		public void SetSkeletonPosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x12D0658", Offset = "0x12D0658", VA = "0x12D0658")]
		public void Remove()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x12D0910", Offset = "0x12D0910", VA = "0x12D0910")]
		public Rigidbody2D GetRigidbody(string boneName)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x12CFAD4", Offset = "0x12CFAD4", VA = "0x12CFAD4")]
		private void RecursivelyCreateBoneProxies(Bone b)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x12D01DC", Offset = "0x12D01DC", VA = "0x12D01DC")]
		private void UpdateSpineSkeleton(ISkeletonAnimation animatedSkeleton)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x12D09E8", Offset = "0x12D09E8", VA = "0x12D09E8")]
		private static List<Collider2D> AttachBoundingBoxRagdollColliders(Bone b, GameObject go, Skeleton skeleton, float gravityScale)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x12CFEB8", Offset = "0x12CFEB8", VA = "0x12CFEB8")]
		private static float GetPropagatedRotation(Bone b)
		{
			return default(float);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x12D0EB8", Offset = "0x12D0EB8", VA = "0x12D0EB8")]
		private static Vector3 FlipScale(bool flipX, bool flipY)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x12D0ED4", Offset = "0x12D0ED4", VA = "0x12D0ED4")]
		public SkeletonRagdoll2D()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBF1C", Offset = "0x7CBF1C")]
	public class SkeletonPartsRenderer : MonoBehaviour
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshGenerator meshGenerator;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRendererBuffers buffers;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SkeletonRendererInstruction currentInstructions;

		[Token(Token = "0x170003CB")]
		public MeshGenerator MeshGenerator
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x12CC07C", Offset = "0x12CC07C", VA = "0x12CC07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x12CC1B0", Offset = "0x12CC1B0", VA = "0x12CC1B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x12CC1D4", Offset = "0x12CC1D4", VA = "0x12CC1D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x12CC0A0", Offset = "0x12CC0A0", VA = "0x12CC0A0")]
		private void LazyIntialize()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x12CC1F8", Offset = "0x12CC1F8", VA = "0x12CC1F8")]
		public void ClearMesh()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x12CC22C", Offset = "0x12CC22C", VA = "0x12CC22C")]
		public void RenderParts(ExposedList<SubmeshInstruction> instructions, int startSubmesh, int endSubmesh)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x12CC468", Offset = "0x12CC468", VA = "0x12CC468")]
		public void SetPropertyBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x12CC4A0", Offset = "0x12CC4A0", VA = "0x12CC4A0")]
		public static SkeletonPartsRenderer NewPartsRendererGameObject(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x12CC658", Offset = "0x12CC658", VA = "0x12CC658")]
		public SkeletonPartsRenderer()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CBFA4", Offset = "0x7CBFA4")]
	[ExecuteInEditMode]
	public class SkeletonRenderSeparator : MonoBehaviour
	{
		[Token(Token = "0x4000FB1")]
		public const int DefaultSortingOrderIncrement = 5;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer mainMeshRenderer;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool copyPropertyBlock;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0EFC", Offset = "0x7D0EFC")]
		public bool copyMeshRendererFlags;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SkeletonPartsRenderer> partsRenderers;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock copiedBlock;

		[Token(Token = "0x170003CE")]
		public SkeletonRenderer SkeletonRenderer
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x1272AC4", Offset = "0x1272AC4", VA = "0x1272AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x1272ACC", Offset = "0x1272ACC", VA = "0x1272ACC")]
			set
			{
			}
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1272C1C", Offset = "0x1272C1C", VA = "0x1272C1C")]
		public static SkeletonRenderSeparator AddToSkeletonRenderer(SkeletonRenderer skeletonRenderer, int sortingLayerID = 0, int extraPartsRenderers = 0, int sortingOrderIncrement = 5, int baseSortingOrder = 0, bool addMinimumPartsRenderers = true)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1272E4C", Offset = "0x1272E4C", VA = "0x1272E4C")]
		public void AddPartsRenderer(int sortingOrderIncrement = 5)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1272FB0", Offset = "0x1272FB0", VA = "0x1272FB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1273324", Offset = "0x1273324", VA = "0x1273324")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x12734E0", Offset = "0x12734E0", VA = "0x12734E0")]
		private void HandleRender(SkeletonRendererInstruction instruction)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1273750", Offset = "0x1273750", VA = "0x1273750")]
		public SkeletonRenderSeparator()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class SkeletonUtilityEyeConstraint : SkeletonUtilityConstraint
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] eyes;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform target;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 targetPosition;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speed;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] origins;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 centerPoint;

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x12783B8", Offset = "0x12783B8", VA = "0x12783B8", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1278564", Offset = "0x1278564", VA = "0x1278564", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x127859C", Offset = "0x127859C", VA = "0x127859C", Slot = "6")]
		public override void DoUpdate()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x12787E8", Offset = "0x12787E8", VA = "0x12787E8")]
		public SkeletonUtilityEyeConstraint()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CBFF0", Offset = "0x7CBFF0")]
	public class SkeletonUtilityGroundConstraint : SkeletonUtilityConstraint
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0F34", Offset = "0x7D0F34")]
		public LayerMask groundMask;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0F6C", Offset = "0x7D0F6C")]
		public bool use2D;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0FA4", Offset = "0x7D0FA4")]
		public bool useRadius;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0FDC", Offset = "0x7D0FDC")]
		public float castRadius;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D1014", Offset = "0x7D1014")]
		public float castDistance;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D104C", Offset = "0x7D104C")]
		public float castOffset;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D1084", Offset = "0x7D1084")]
		public float groundOffset;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D10BC", Offset = "0x7D10BC")]
		public float adjustSpeed;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 rayOrigin;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 rayDir;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float hitY;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastHitY;

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1278800", Offset = "0x1278800", VA = "0x1278800", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1278840", Offset = "0x1278840", VA = "0x1278840", Slot = "6")]
		public override void DoUpdate()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1278C58", Offset = "0x1278C58", VA = "0x1278C58")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x1278D94", Offset = "0x1278D94", VA = "0x1278D94")]
		public SkeletonUtilityGroundConstraint()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class SkeletonUtilityKinematicShadow : MonoBehaviour
	{
		[Token(Token = "0x20002B9")]
		private struct TransformPair
		{
			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform dest;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform src;
		}

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D10F4", Offset = "0x7D10F4")]
		public bool detachedShadow;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hideShadow;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject shadowRoot;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<TransformPair> shadowTable;

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1278DC0", Offset = "0x1278DC0", VA = "0x1278DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x12792D4", Offset = "0x12792D4", VA = "0x12792D4")]
		private static void DestroyComponents(Component[] components)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x127939C", Offset = "0x127939C", VA = "0x127939C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x12794F4", Offset = "0x12794F4", VA = "0x12794F4")]
		public SkeletonUtilityKinematicShadow()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[DisallowMultipleComponent]
	public class SlotBlendModes : MonoBehaviour
	{
		[Token(Token = "0x20002BB")]
		public struct MaterialTexturePair
		{
			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Texture2D texture2D;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material material;
		}

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<MaterialTexturePair, Material> materialTable;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material multiplyMaterialSource;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material screenMaterialSource;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D texture;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D112C", Offset = "0x7D112C")]
		private bool <Applied>k__BackingField;

		[Token(Token = "0x170003CF")]
		internal static Dictionary<MaterialTexturePair, Material> MaterialTable
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x127B41C", Offset = "0x127B41C", VA = "0x127B41C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		public bool Applied
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x127B6B0", Offset = "0x127B6B0", VA = "0x127B6B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5CF8", Offset = "0x7E5CF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x127B6B8", Offset = "0x127B6B8", VA = "0x127B6B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E5D08", Offset = "0x7E5D08")]
			private set
			{
			}
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x127B4C0", Offset = "0x127B4C0", VA = "0x127B4C0")]
		internal static Material GetMaterialFor(Material materialSource, Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x127B6C4", Offset = "0x127B6C4", VA = "0x127B6C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x127B9EC", Offset = "0x127B9EC", VA = "0x127B9EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x127B6D4", Offset = "0x127B6D4", VA = "0x127B6D4")]
		public void Apply()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x127B9FC", Offset = "0x127B9FC", VA = "0x127B9FC")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x127BD14", Offset = "0x127BD14", VA = "0x127BD14")]
		public void GetTexture()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x127BEF4", Offset = "0x127BEF4", VA = "0x127BEF4")]
		public SlotBlendModes()
		{
		}
	}
}
namespace Spine.Unity.Modules.AttachmentTools
{
	[Token(Token = "0x20002BC")]
	public static class AttachmentRegionExtensions
	{
		[Token(Token = "0x6001322")]
		[Address(RVA = "0x110FCD8", Offset = "0x110FCD8", VA = "0x110FCD8")]
		public static AtlasRegion GetRegion(this Attachment attachment)
		{
			return null;
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1112CE0", Offset = "0x1112CE0", VA = "0x1112CE0")]
		public static AtlasRegion GetRegion(this RegionAttachment regionAttachment)
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1112D68", Offset = "0x1112D68", VA = "0x1112D68")]
		public static AtlasRegion GetRegion(this MeshAttachment meshAttachment)
		{
			return null;
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1110300", Offset = "0x1110300", VA = "0x1110300")]
		public static void SetRegion(this Attachment attachment, AtlasRegion region, bool updateOffset = true)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1112BE8", Offset = "0x1112BE8", VA = "0x1112BE8")]
		public static void SetRegion(this RegionAttachment attachment, AtlasRegion region, bool updateOffset = true)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1112860", Offset = "0x1112860", VA = "0x1112860")]
		public static void SetRegion(this MeshAttachment attachment, AtlasRegion region, bool updateUVs = true)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1112DF0", Offset = "0x1112DF0", VA = "0x1112DF0")]
		public static RegionAttachment ToRegionAttachment(this Sprite sprite, Material material, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1112E78", Offset = "0x1112E78", VA = "0x1112E78")]
		public static RegionAttachment ToRegionAttachment(this Sprite sprite, AtlasPage page, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1112FE0", Offset = "0x1112FE0", VA = "0x1112FE0")]
		public static RegionAttachment ToRegionAttachmentPMAClone(this Sprite sprite, Shader shader, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, [Optional] Material materialPropertySource, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1113190", Offset = "0x1113190", VA = "0x1113190")]
		public static RegionAttachment ToRegionAttachmentPMAClone(this Sprite sprite, Material materialPropertySource, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x110DBC4", Offset = "0x110DBC4", VA = "0x110DBC4")]
		public static RegionAttachment ToRegionAttachment(this AtlasRegion region, string attachmentName, float scale = 0.01f, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x11131F8", Offset = "0x11131F8", VA = "0x11131F8")]
		public static void SetScale(this RegionAttachment regionAttachment, Vector2 scale)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1113210", Offset = "0x1113210", VA = "0x1113210")]
		public static void SetScale(this RegionAttachment regionAttachment, float x, float y)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1113228", Offset = "0x1113228", VA = "0x1113228")]
		public static void SetPositionOffset(this RegionAttachment regionAttachment, Vector2 offset)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1113240", Offset = "0x1113240", VA = "0x1113240")]
		public static void SetPositionOffset(this RegionAttachment regionAttachment, float x, float y)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1113258", Offset = "0x1113258", VA = "0x1113258")]
		public static void SetRotation(this RegionAttachment regionAttachment, float rotation)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public static class AtlasUtilities
	{
		[Token(Token = "0x4000FD9")]
		internal const TextureFormat SpineTextureFormat = TextureFormat.RGBA32;

		[Token(Token = "0x4000FDA")]
		internal const float DefaultMipmapBias = -0.5f;

		[Token(Token = "0x4000FDB")]
		internal const bool UseMipMaps = false;

		[Token(Token = "0x4000FDC")]
		internal const float DefaultScale = 0.01f;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<AtlasRegion, Texture2D> CachedRegionTextures;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Texture2D> CachedRegionTexturesList;

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x110DE10", Offset = "0x110DE10", VA = "0x110DE10")]
		public static AtlasRegion ToAtlasRegion(this Texture2D t, Material materialPropertySource, float scale = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x110DEB0", Offset = "0x110DEB0", VA = "0x110DEB0")]
		public static AtlasRegion ToAtlasRegion(this Texture2D t, Shader shader, float scale = 0.01f, [Optional] Material materialPropertySource)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x110E1F8", Offset = "0x110E1F8", VA = "0x110E1F8")]
		public static AtlasRegion ToAtlasRegionPMAClone(this Texture2D t, Material materialPropertySource, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x110E2A0", Offset = "0x110E2A0", VA = "0x110E2A0")]
		public static AtlasRegion ToAtlasRegionPMAClone(this Texture2D t, Shader shader, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, [Optional] Material materialPropertySource)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x110E0EC", Offset = "0x110E0EC", VA = "0x110E0EC")]
		public static AtlasPage ToSpineAtlasPage(this Material m)
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x110E684", Offset = "0x110E684", VA = "0x110E684")]
		public static AtlasRegion ToAtlasRegion(this Sprite s, AtlasPage page)
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x110EB5C", Offset = "0x110EB5C", VA = "0x110EB5C")]
		public static AtlasRegion ToAtlasRegion(this Sprite s, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x110EBEC", Offset = "0x110EBEC", VA = "0x110EBEC")]
		public static AtlasRegion ToAtlasRegionPMAClone(this Sprite s, Shader shader, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, [Optional] Material materialPropertySource)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x110EFC0", Offset = "0x110EFC0", VA = "0x110EFC0")]
		public static AtlasRegion ToAtlasRegionPMAClone(this Sprite s, Material materialPropertySource, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x110E764", Offset = "0x110E764", VA = "0x110E764")]
		internal static AtlasRegion ToAtlasRegion(this Sprite s, bool isolatedTexture = false)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x110F1D0", Offset = "0x110F1D0", VA = "0x110F1D0")]
		public static void GetRepackedAttachments(List<Attachment> sourceAttachments, List<Attachment> outputAttachments, Material materialPropertySource, out Material outputMaterial, out Texture2D outputTexture, int maxAtlasSize = 1024, int padding = 2, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, string newAssetName = "Repacked Attachments", bool clearCache = false)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x11105D4", Offset = "0x11105D4", VA = "0x11105D4")]
		public static Skin GetRepackedSkin(this Skin o, string newName, Material materialPropertySource, out Material outputMaterial, out Texture2D outputTexture, int maxAtlasSize = 1024, int padding = 2, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x11106C8", Offset = "0x11106C8", VA = "0x11106C8")]
		public static Skin GetRepackedSkin(this Skin o, string newName, Shader shader, out Material outputMaterial, out Texture2D outputTexture, int maxAtlasSize = 1024, int padding = 2, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false, [Optional] Material materialPropertySource, bool clearCache = false)
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1111098", Offset = "0x1111098", VA = "0x1111098")]
		public static Sprite ToSprite(this AtlasRegion ar, float pixelsPerUnit = 100f)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x11103F0", Offset = "0x11103F0", VA = "0x11103F0")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x110FDDC", Offset = "0x110FDDC", VA = "0x110FDDC")]
		public static Texture2D ToTexture(this AtlasRegion ar, bool applyImmediately = true, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x110EDE4", Offset = "0x110EDE4", VA = "0x110EDE4")]
		private static Texture2D ToTexture(this Sprite s, bool applyImmediately = true, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x110E4A4", Offset = "0x110E4A4", VA = "0x110E4A4")]
		private static Texture2D GetClone(this Texture2D t, bool applyImmediately = true, TextureFormat textureFormat = TextureFormat.RGBA32, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x110FC80", Offset = "0x110FC80", VA = "0x110FC80")]
		private static bool IsRenderable(Attachment a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x110F068", Offset = "0x110F068", VA = "0x110F068")]
		private static Rect SpineUnityFlipRect(this Rect rect, int textureHeight)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x11111E0", Offset = "0x11111E0", VA = "0x11111E0")]
		private static Rect GetUnityRect(this AtlasRegion region)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x111125C", Offset = "0x111125C", VA = "0x111125C")]
		private static Rect GetUnityRect(this AtlasRegion region, int textureHeight)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x11112D4", Offset = "0x11112D4", VA = "0x11112D4")]
		private static Rect GetSpineAtlasRect(this AtlasRegion region, bool includeRotate = true)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1111340", Offset = "0x1111340", VA = "0x1111340")]
		private static Rect UVRectToTextureRect(Rect uvRect, int texWidth, int texHeight)
		{
			return default(Rect);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x110F0D8", Offset = "0x110F0D8", VA = "0x110F0D8")]
		private static Rect TextureRectToUVRect(Rect textureRect, int texWidth, int texHeight)
		{
			return default(Rect);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x11100C4", Offset = "0x11100C4", VA = "0x11100C4")]
		private static AtlasRegion UVRectToAtlasRegion(Rect uvRect, string name, AtlasPage page, float offsetX, float offsetY, bool rotate)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1111128", Offset = "0x1111128", VA = "0x1111128")]
		private static Texture2D GetMainTexture(this AtlasRegion region)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x110E5D0", Offset = "0x110E5D0", VA = "0x110E5D0")]
		private static void ApplyPMA(this Texture2D texture, bool applyImmediately = true)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x110E1E8", Offset = "0x110E1E8", VA = "0x110E1E8")]
		private static float InverseLerp(float a, float b, float value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002BE")]
	public static class SkinUtilities
	{
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x127A0CC", Offset = "0x127A0CC", VA = "0x127A0CC")]
		public static Skin UnshareSkin(this Skeleton skeleton, bool includeDefaultSkin, bool unshareAttachments, [Optional] AnimationState state)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x127A184", Offset = "0x127A184", VA = "0x127A184")]
		public static Skin GetClonedSkin(this Skeleton skeleton, string newSkinName, bool includeDefaultSkin = false, bool cloneAttachments = false, bool cloneMeshesAsLinked = true)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x127A8F0", Offset = "0x127A8F0", VA = "0x127A8F0")]
		public static Skin GetClone(this Skin original)
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x127AAEC", Offset = "0x127AAEC", VA = "0x127AAEC")]
		public static void SetAttachment(this Skin skin, string slotName, string keyName, Attachment attachment, Skeleton skeleton)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x127ABB4", Offset = "0x127ABB4", VA = "0x127ABB4")]
		public static Attachment GetAttachment(this Skin skin, string slotName, string keyName, Skeleton skeleton)
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x127AC74", Offset = "0x127AC74", VA = "0x127AC74")]
		public static void SetAttachment(this Skin skin, int slotIndex, string keyName, Attachment attachment)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x127AC88", Offset = "0x127AC88", VA = "0x127AC88")]
		public static bool RemoveAttachment(this Skin skin, string slotName, string keyName, Skeleton skeleton)
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x127AD44", Offset = "0x127AD44", VA = "0x127AD44")]
		public static bool RemoveAttachment(this Skin skin, int slotIndex, string keyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x127ADF0", Offset = "0x127ADF0", VA = "0x127ADF0")]
		public static void Clear(this Skin skin)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x127AE48", Offset = "0x127AE48", VA = "0x127AE48")]
		public static void Append(this Skin destination, Skin source)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x127A24C", Offset = "0x127A24C", VA = "0x127A24C")]
		public static void CopyTo(this Skin source, Skin destination, bool overwrite, bool cloneAttachments, bool cloneMeshesAsLinked = true)
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public static class AttachmentCloneExtensions
	{
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x110FA88", Offset = "0x110FA88", VA = "0x110FA88")]
		public static Attachment GetClone(this Attachment o, bool cloneMeshesAsLinked)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1112034", Offset = "0x1112034", VA = "0x1112034")]
		public static RegionAttachment GetClone(this RegionAttachment o)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1112608", Offset = "0x1112608", VA = "0x1112608")]
		public static ClippingAttachment GetClone(this ClippingAttachment o)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1112578", Offset = "0x1112578", VA = "0x1112578")]
		public static PointAttachment GetClone(this PointAttachment o)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1112434", Offset = "0x1112434", VA = "0x1112434")]
		public static BoundingBoxAttachment GetClone(this BoundingBoxAttachment o)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1112394", Offset = "0x1112394", VA = "0x1112394")]
		public static MeshAttachment GetLinkedClone(this MeshAttachment o, bool inheritDeform = true)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x11121B8", Offset = "0x11121B8", VA = "0x11121B8")]
		public static MeshAttachment GetClone(this MeshAttachment o)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x11124B4", Offset = "0x11124B4", VA = "0x11124B4")]
		public static PathAttachment GetClone(this PathAttachment o)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1112694", Offset = "0x1112694", VA = "0x1112694")]
		private static void CloneVertexAttachment(VertexAttachment src, VertexAttachment dest)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1112744", Offset = "0x1112744", VA = "0x1112744")]
		public static MeshAttachment GetLinkedMesh(this MeshAttachment o, string newLinkedMeshName, AtlasRegion region, bool inheritDeform = true)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x111294C", Offset = "0x111294C", VA = "0x111294C")]
		public static MeshAttachment GetLinkedMesh(this MeshAttachment o, Sprite sprite, Shader shader, bool inheritDeform = true, [Optional] Material materialPropertySource)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1112AA0", Offset = "0x1112AA0", VA = "0x1112AA0")]
		public static MeshAttachment GetLinkedMesh(this MeshAttachment o, Sprite sprite, Material materialPropertySource, bool inheritDeform = true)
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1112AF8", Offset = "0x1112AF8", VA = "0x1112AF8")]
		public static Attachment GetRemappedClone(this Attachment o, Sprite sprite, Material sourceMaterial, bool premultiplyAlpha = true, bool cloneMeshAsLinked = true, bool useOriginalRegionSize = false)
		{
			return null;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x110DA40", Offset = "0x110DA40", VA = "0x110DA40")]
		public static Attachment GetRemappedClone(this Attachment o, AtlasRegion atlasRegion, bool cloneMeshAsLinked = true, bool useOriginalRegionSize = false, float scale = 0.01f)
		{
			return null;
		}
	}
}
namespace Spine.Unity.Examples
{
	[Token(Token = "0x20002C0")]
	public class AttackSpineboy : MonoBehaviour
	{
		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation spineboy;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpineGauge gauge;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text healthText;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentHealth;

		[Token(Token = "0x4000FE3")]
		private const int maxHealth = 100;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onAttack;

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1113538", Offset = "0x1113538", VA = "0x1113538")]
		private void Update()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1113714", Offset = "0x1113714", VA = "0x1113714")]
		public AttackSpineboy()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class DataAssetsFromExportsExample : MonoBehaviour
	{
		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC0B0", Offset = "0x7CC0B0")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DataAssetsFromExportsExample <>4__this;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001371")]
				[Address(RVA = "0xF1FB04", Offset = "0xF1FB04", VA = "0xF1FB04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001373")]
				[Address(RVA = "0xF1FB4C", Offset = "0xF1FB4C", VA = "0xF1FB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600136E")]
			[Address(RVA = "0xF1F8FC", Offset = "0xF1F8FC", VA = "0xF1F8FC")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600136F")]
			[Address(RVA = "0xF1F928", Offset = "0xF1F928", VA = "0xF1F928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001370")]
			[Address(RVA = "0xF1F92C", Offset = "0xF1F92C", VA = "0xF1F92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001372")]
			[Address(RVA = "0xF1FB0C", Offset = "0xF1FB0C", VA = "0xF1FB0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset skeletonJson;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAsset atlasText;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D[] textures;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material materialPropertySource;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AtlasAsset runtimeAtlasAsset;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkeletonDataAsset runtimeSkeletonDataAsset;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkeletonAnimation runtimeSkeletonAnimation;

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x10589C8", Offset = "0x10589C8", VA = "0x10589C8")]
		private void CreateRuntimeAssetsAndGameObject()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1058A20", Offset = "0x1058A20", VA = "0x1058A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E60F8", Offset = "0x7E60F8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1058A8C", Offset = "0x1058A8C", VA = "0x1058A8C")]
		public DataAssetsFromExportsExample()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class FootSoldierExample : MonoBehaviour
	{
		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC0C0", Offset = "0x7CC0C0")]
		private sealed class <Blink>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FootSoldierExample <>4__this;

			[Token(Token = "0x170003D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600137C")]
				[Address(RVA = "0xF20F10", Offset = "0xF20F10", VA = "0xF20F10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600137E")]
				[Address(RVA = "0xF20F58", Offset = "0xF20F58", VA = "0xF20F58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001379")]
			[Address(RVA = "0xF20D9C", Offset = "0xF20D9C", VA = "0xF20D9C")]
			[DebuggerHidden]
			public <Blink>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600137A")]
			[Address(RVA = "0xF20DC8", Offset = "0xF20DC8", VA = "0xF20DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600137B")]
			[Address(RVA = "0xF20DCC", Offset = "0xF20DCC", VA = "0xF20DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600137D")]
			[Address(RVA = "0xF20F18", Offset = "0xF20F18", VA = "0xF20F18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D113C", Offset = "0x7D113C")]
		public string idleAnimation;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1190", Offset = "0x7D1190")]
		public string attackAnimation;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D11EC", Offset = "0x7D11EC")]
		public string moveAnimation;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D1248", Offset = "0x7D1248")]
		public string eyesSlot;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D12A8", Offset = "0x7D12A8")]
		public string eyesOpenAttachment;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D1330", Offset = "0x7D1330")]
		public string blinkAttachment;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D13B8", Offset = "0x7D13B8")]
		public float blinkDuration;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KeyCode attackKey;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode rightKey;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public KeyCode leftKey;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float moveSpeed;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1452F3C", Offset = "0x1452F3C", VA = "0x1452F3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1452FF4", Offset = "0x1452FF4", VA = "0x1452FF4")]
		private void Apply(SkeletonRenderer skeletonRenderer)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1453044", Offset = "0x1453044", VA = "0x1453044")]
		private void Update()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1453188", Offset = "0x1453188", VA = "0x1453188")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E61A8", Offset = "0x7E61A8")]
		private IEnumerator Blink()
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x14531F4", Offset = "0x14531F4", VA = "0x14531F4")]
		public FootSoldierExample()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC0D0", Offset = "0x7CC0D0")]
	public class BasicPlatformerController : MonoBehaviour
	{
		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D13D4", Offset = "0x7D13D4")]
		public string XAxis;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string YAxis;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string JumpButton;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D140C", Offset = "0x7D140C")]
		public float walkSpeed;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float runSpeed;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float gravityScale;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1444", Offset = "0x7D1444")]
		public float jumpSpeed;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float jumpDuration;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float jumpInterruptFactor;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float forceCrouchVelocity;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float forceCrouchDuration;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D147C", Offset = "0x7D147C")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D14B4", Offset = "0x7D14B4")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D14B4", Offset = "0x7D14B4")]
		public string walkName;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1530", Offset = "0x7D1530")]
		public string runName;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1584", Offset = "0x7D1584")]
		public string idleName;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D15D8", Offset = "0x7D15D8")]
		public string jumpName;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D162C", Offset = "0x7D162C")]
		public string fallName;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1680", Offset = "0x7D1680")]
		public string crouchName;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D16D4", Offset = "0x7D16D4")]
		public AudioSource jumpAudioSource;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioSource hardfallAudioSource;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioSource footstepAudioSource;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ParticleSystem landParticles;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpineEvent", RVA = "0x7D170C", Offset = "0x7D170C")]
		public string footstepEventName;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController controller;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 velocity;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float jumpEndTime;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool jumpInterrupt;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float forceCrouchEndTime;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector2 input;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool wasGrounded;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1119EA4", Offset = "0x1119EA4", VA = "0x1119EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1119EF8", Offset = "0x1119EF8", VA = "0x1119EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1119F94", Offset = "0x1119F94", VA = "0x1119F94")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x111A030", Offset = "0x111A030", VA = "0x111A030")]
		private static float GetRandomPitch(float maxOffset)
		{
			return default(float);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x111A058", Offset = "0x111A058", VA = "0x111A058")]
		private void Update()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x111A448", Offset = "0x111A448", VA = "0x111A448")]
		public BasicPlatformerController()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class ConstrainedCamera : MonoBehaviour
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 min;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 max;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float smoothing;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x10C8148", Offset = "0x10C8148", VA = "0x10C8148")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x10C8270", Offset = "0x10C8270", VA = "0x10C8270")]
		public ConstrainedCamera()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class Raptor : MonoBehaviour
	{
		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC130", Offset = "0x7CC130")]
		private sealed class <GunGrabRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Raptor <>4__this;

			[Token(Token = "0x170003D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600138E")]
				[Address(RVA = "0xDC16E8", Offset = "0xDC16E8", VA = "0xDC16E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001390")]
				[Address(RVA = "0xDC1730", Offset = "0xDC1730", VA = "0xDC1730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600138B")]
			[Address(RVA = "0xDC1540", Offset = "0xDC1540", VA = "0xDC1540")]
			[DebuggerHidden]
			public <GunGrabRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600138C")]
			[Address(RVA = "0xDC156C", Offset = "0xDC156C", VA = "0xDC156C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600138D")]
			[Address(RVA = "0xDC1570", Offset = "0xDC1570", VA = "0xDC1570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600138F")]
			[Address(RVA = "0xDC16F0", Offset = "0xDC16F0", VA = "0xDC16F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1768", Offset = "0x7D1768")]
		public string walk;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D17C4", Offset = "0x7D17C4")]
		public string gungrab;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1820", Offset = "0x7D1820")]
		public string gunkeep;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineEvent", RVA = "0x7D187C", Offset = "0x7D187C")]
		public string footstepEvent;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource footstepAudioSource;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x13004A0", Offset = "0x13004A0", VA = "0x13004A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x13005E0", Offset = "0x13005E0", VA = "0x13005E0")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1300574", Offset = "0x1300574", VA = "0x1300574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6258", Offset = "0x7E6258")]
		private IEnumerator GunGrabRoutine()
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x130066C", Offset = "0x130066C", VA = "0x130066C")]
		public Raptor()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class SpineBeginnerTwo : MonoBehaviour
	{
		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC140", Offset = "0x7CC140")]
		private sealed class <DoDemoRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineBeginnerTwo <>4__this;

			[Token(Token = "0x170003D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001397")]
				[Address(RVA = "0xCC6ADC", Offset = "0xCC6ADC", VA = "0xCC6ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001399")]
				[Address(RVA = "0xCC6B24", Offset = "0xCC6B24", VA = "0xCC6B24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001394")]
			[Address(RVA = "0xCC6814", Offset = "0xCC6814", VA = "0xCC6814")]
			[DebuggerHidden]
			public <DoDemoRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001395")]
			[Address(RVA = "0xCC6840", Offset = "0xCC6840", VA = "0xCC6840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001396")]
			[Address(RVA = "0xCC6844", Offset = "0xCC6844", VA = "0xCC6844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001398")]
			[Address(RVA = "0xCC6AE4", Offset = "0xCC6AE4", VA = "0xCC6AE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D18D8", Offset = "0x7D18D8")]
		public string runAnimationName;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1934", Offset = "0x7D1934")]
		public string idleAnimationName;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1990", Offset = "0x7D1990")]
		public string walkAnimationName;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D19EC", Offset = "0x7D19EC")]
		public string shootAnimationName;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1A48", Offset = "0x7D1A48")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1A48", Offset = "0x7D1A48")]
		public string idleTurnAnimationName;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1ACC", Offset = "0x7D1ACC")]
		public string runToIdleAnimationName;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float runWalkDuration;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationState spineAnimationState;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Skeleton skeleton;

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xE77C50", Offset = "0xE77C50", VA = "0xE77C50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xE77CD4", Offset = "0xE77CD4", VA = "0xE77CD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6308", Offset = "0x7E6308")]
		private IEnumerator DoDemoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xE77D40", Offset = "0xE77D40", VA = "0xE77D40")]
		public SpineBeginnerTwo()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class SpineBlinkPlayer : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC150", Offset = "0x7CC150")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineBlinkPlayer <>4__this;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SkeletonAnimation <skeletonAnimation>5__2;

			[Token(Token = "0x170003D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600139F")]
				[Address(RVA = "0xCC6CB4", Offset = "0xCC6CB4", VA = "0xCC6CB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A1")]
				[Address(RVA = "0xCC6CFC", Offset = "0xCC6CFC", VA = "0xCC6CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600139C")]
			[Address(RVA = "0xCC6B2C", Offset = "0xCC6B2C", VA = "0xCC6B2C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0xCC6B58", Offset = "0xCC6B58", VA = "0xCC6B58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600139E")]
			[Address(RVA = "0xCC6B5C", Offset = "0xCC6B5C", VA = "0xCC6B5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xCC6CBC", Offset = "0xCC6CBC", VA = "0xCC6CBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001037")]
		private const int BlinkTrack = 1;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1B28", Offset = "0x7D1B28")]
		public string blinkAnimation;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minimumDelay;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maximumDelay;

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xE77D50", Offset = "0xE77D50", VA = "0xE77D50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E63B8", Offset = "0x7E63B8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xE77DBC", Offset = "0xE77DBC", VA = "0xE77DBC")]
		public SpineBlinkPlayer()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class SpineboyBeginnerInput : MonoBehaviour
	{
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string horizontalAxis;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string attackButton;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string jumpButton;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpineboyBeginnerModel model;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xE79978", Offset = "0xE79978", VA = "0xE79978")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xE79A10", Offset = "0xE79A10", VA = "0xE79A10")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xE79BC8", Offset = "0xE79BC8", VA = "0xE79BC8")]
		public SpineboyBeginnerInput()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[SelectionBase]
	public class SpineboyBeginnerModel : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC170", Offset = "0x7CC170")]
		private sealed class <JumpRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineboyBeginnerModel <>4__this;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <t>5__3;

			[Token(Token = "0x170003DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013AF")]
				[Address(RVA = "0xCC70B0", Offset = "0xCC70B0", VA = "0xCC70B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B1")]
				[Address(RVA = "0xCC70F8", Offset = "0xCC70F8", VA = "0xCC70F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xCC6E80", Offset = "0xCC6E80", VA = "0xCC6E80")]
			[DebuggerHidden]
			public <JumpRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xCC6EAC", Offset = "0xCC6EAC", VA = "0xCC6EAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xCC6EB0", Offset = "0xCC6EB0", VA = "0xCC6EB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xCC70B8", Offset = "0xCC70B8", VA = "0xCC70B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1B84", Offset = "0x7D1B84")]
		public SpineBeginnerBodyState state;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool facingLeft;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D1BBC", Offset = "0x7D1BBC")]
		public float currentSpeed;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1BD4", Offset = "0x7D1BD4")]
		public float shootInterval;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastShootTime;

		[Token(Token = "0x14000034")]
		public event Action ShootEvent
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xE79C54", Offset = "0xE79C54", VA = "0xE79C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6468", Offset = "0x7E6468")]
			add
			{
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xE79CF4", Offset = "0xE79CF4", VA = "0xE79CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6478", Offset = "0x7E6478")]
			remove
			{
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xE79B9C", Offset = "0xE79B9C", VA = "0xE79B9C")]
		public void TryJump()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xE79B4C", Offset = "0xE79B4C", VA = "0xE79B4C")]
		public void TryShoot()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xE79B1C", Offset = "0xE79B1C", VA = "0xE79B1C")]
		public void TryMove(float speed)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xE79D94", Offset = "0xE79D94", VA = "0xE79D94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6488", Offset = "0x7E6488")]
		private IEnumerator JumpRoutine()
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xE79E00", Offset = "0xE79E00", VA = "0xE79E00")]
		public SpineboyBeginnerModel()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public enum SpineBeginnerBodyState
	{
		[Token(Token = "0x400104F")]
		Idle,
		[Token(Token = "0x4001050")]
		Running,
		[Token(Token = "0x4001051")]
		Jumping
	}
	[Token(Token = "0x20002D1")]
	public class SpineboyBeginnerView : MonoBehaviour
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1C1C", Offset = "0x7D1C1C")]
		public SpineboyBeginnerModel model;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1C54", Offset = "0x7D1C54")]
		public string run;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1CB0", Offset = "0x7D1CB0")]
		public string idle;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1D0C", Offset = "0x7D1D0C")]
		public string shoot;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D1D68", Offset = "0x7D1D68")]
		public string jump;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineEvent", RVA = "0x7D1DC4", Offset = "0x7D1DC4")]
		public string footstepEventName;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1E20", Offset = "0x7D1E20")]
		public float footstepPitchOffset;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float gunsoundPitchOffset;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource footstepSource;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource gunSource;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource jumpSource;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1E58", Offset = "0x7D1E58")]
		public ParticleSystem gunParticles;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SpineBeginnerBodyState previousViewState;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xE79E14", Offset = "0xE79E14", VA = "0xE79E14")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xE79F5C", Offset = "0xE79F5C", VA = "0xE79F5C")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xE7A004", Offset = "0xE7A004", VA = "0xE7A004")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xE7A15C", Offset = "0xE7A15C", VA = "0xE7A15C")]
		private void PlayNewStableAnimation()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xE79FAC", Offset = "0xE79FAC", VA = "0xE79FAC")]
		private void PlayFootstepSound()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xE7A220", Offset = "0xE7A220", VA = "0xE7A220")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7E6538", Offset = "0x7E6538")]
		private void CheckTracks()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xE7A2C8", Offset = "0xE7A2C8", VA = "0xE7A2C8")]
		public void PlayShoot()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xE7A120", Offset = "0xE7A120", VA = "0xE7A120")]
		public void Turn(bool facingLeft)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xE7A1F8", Offset = "0xE7A1F8", VA = "0xE7A1F8")]
		public float GetRandomPitch(float maxPitchOffset)
		{
			return default(float);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xE7A398", Offset = "0xE7A398", VA = "0xE7A398")]
		public SpineboyBeginnerView()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class SpineboyTargetController : MonoBehaviour
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D1E90", Offset = "0x7D1E90")]
		public string boneName;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera camera;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Bone bone;

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xE7A490", Offset = "0xE7A490", VA = "0xE7A490")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xE7A528", Offset = "0xE7A528", VA = "0xE7A528")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xE7A56C", Offset = "0xE7A56C", VA = "0xE7A56C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xE7A628", Offset = "0xE7A628", VA = "0xE7A628")]
		public SpineboyTargetController()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class Goblins : MonoBehaviour
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bone headBone;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool girlSkin;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D1EE4", Offset = "0x7D1EE4")]
		public float extraRotation;

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1738C58", Offset = "0x1738C58", VA = "0x1738C58")]
		public void Start()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1738D44", Offset = "0x1738D44", VA = "0x1738D44")]
		public void UpdateLocal(ISkeletonAnimation skeletonRenderer)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1738D6C", Offset = "0x1738D6C", VA = "0x1738D6C")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1738EC0", Offset = "0x1738EC0", VA = "0x1738EC0")]
		public Goblins()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class MixAndMatch : MonoBehaviour
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC180", Offset = "0x7CC180")]
		private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixAndMatch <>4__this;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013CB")]
				[Address(RVA = "0xDBA740", Offset = "0xDBA740", VA = "0xDBA740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013CD")]
				[Address(RVA = "0xDBA788", Offset = "0xDBA788", VA = "0xDBA788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xDBA66C", Offset = "0xDBA66C", VA = "0xDBA66C")]
			[DebuggerHidden]
			public <Start>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xDBA698", Offset = "0xDBA698", VA = "0xDBA698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xDBA69C", Offset = "0xDBA69C", VA = "0xDBA69C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xDBA748", Offset = "0xDBA748", VA = "0xDBA748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x7D1F04", Offset = "0x7D1F04")]
		public string templateAttachmentsSkin;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material sourceMaterial;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1F60", Offset = "0x7D1F60")]
		public Sprite visorSprite;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D1F98", Offset = "0x7D1F98")]
		public string visorSlot;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D1FF8", Offset = "0x7D1FF8")]
		public string visorKey;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2080", Offset = "0x7D2080")]
		public Sprite gunSprite;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D20B8", Offset = "0x7D20B8")]
		public string gunSlot;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D2118", Offset = "0x7D2118")]
		public string gunKey;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D21A0", Offset = "0x7D21A0")]
		public bool repack;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoundingBoxFollower bbFollower;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D21D8", Offset = "0x7D21D8")]
		public Texture2D runtimeAtlas;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material runtimeMaterial;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Skin customSkin;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x112F348", Offset = "0x112F348", VA = "0x112F348")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x112F464", Offset = "0x112F464", VA = "0x112F464")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6570", Offset = "0x7E6570")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x112F4D0", Offset = "0x112F4D0", VA = "0x112F4D0")]
		private void Apply()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x112F7E4", Offset = "0x112F7E4", VA = "0x112F7E4")]
		public MixAndMatch()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class MixAndMatchGraphic : MonoBehaviour
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC190", Offset = "0x7CC190")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixAndMatchGraphic <>4__this;

			[Token(Token = "0x170003DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D5")]
				[Address(RVA = "0xDBA864", Offset = "0xDBA864", VA = "0xDBA864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D7")]
				[Address(RVA = "0xDBA8AC", Offset = "0xDBA8AC", VA = "0xDBA8AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xDBA790", Offset = "0xDBA790", VA = "0xDBA790")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xDBA7BC", Offset = "0xDBA7BC", VA = "0xDBA7BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xDBA7C0", Offset = "0xDBA7C0", VA = "0xDBA7C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xDBA86C", Offset = "0xDBA86C", VA = "0xDBA86C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x7D2210", Offset = "0x7D2210")]
		public string baseSkinName;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material sourceMaterial;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D226C", Offset = "0x7D226C")]
		public Sprite visorSprite;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D22A4", Offset = "0x7D22A4")]
		public string visorSlot;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D2304", Offset = "0x7D2304")]
		public string visorKey;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D238C", Offset = "0x7D238C")]
		public Sprite gunSprite;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D23C4", Offset = "0x7D23C4")]
		public string gunSlot;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x7D2424", Offset = "0x7D2424")]
		public string gunKey;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D24AC", Offset = "0x7D24AC")]
		public bool repack;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D24E4", Offset = "0x7D24E4")]
		public Texture2D runtimeAtlas;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material runtimeMaterial;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Skin customSkin;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xFED31C", Offset = "0xFED31C", VA = "0xFED31C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xFED438", Offset = "0xFED438", VA = "0xFED438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6620", Offset = "0x7E6620")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xFED4A4", Offset = "0xFED4A4", VA = "0xFED4A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7E6680", Offset = "0x7E6680")]
		private void Apply()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xFED774", Offset = "0xFED774", VA = "0xFED774")]
		public MixAndMatchGraphic()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class RaggedySpineboy : MonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC1A0", Offset = "0x7CC1A0")]
		private sealed class <Restore>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaggedySpineboy <>4__this;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E3")]
				[Address(RVA = "0xDC1304", Offset = "0xDC1304", VA = "0xDC1304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E5")]
				[Address(RVA = "0xDC134C", Offset = "0xDC134C", VA = "0xDC134C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xDC1068", Offset = "0xDC1068", VA = "0xDC1068")]
			[DebuggerHidden]
			public <Restore>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xDC1094", Offset = "0xDC1094", VA = "0xDC1094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xDC1098", Offset = "0xDC1098", VA = "0xDC1098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xDC130C", Offset = "0xDC130C", VA = "0xDC130C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC1B0", Offset = "0x7CC1B0")]
		private sealed class <WaitUntilStopped>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaggedySpineboy <>4__this;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E9")]
				[Address(RVA = "0xDC14F0", Offset = "0xDC14F0", VA = "0xDC14F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013EB")]
				[Address(RVA = "0xDC1538", Offset = "0xDC1538", VA = "0xDC1538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xDC1354", Offset = "0xDC1354", VA = "0xDC1354")]
			[DebuggerHidden]
			public <WaitUntilStopped>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xDC1380", Offset = "0xDC1380", VA = "0xDC1380", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xDC1384", Offset = "0xDC1384", VA = "0xDC1384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xDC14F8", Offset = "0xDC14F8", VA = "0xDC14F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask groundMask;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float restoreDuration;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 launchVelocity;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonRagdoll2D ragdoll;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider2D naturalCollider;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1300154", Offset = "0x1300154", VA = "0x1300154")]
		private void Start()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x13001CC", Offset = "0x13001CC", VA = "0x13001CC")]
		private void AddRigidbody()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x130024C", Offset = "0x130024C", VA = "0x130024C")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x13002F0", Offset = "0x13002F0", VA = "0x13002F0")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x1300334", Offset = "0x1300334", VA = "0x1300334")]
		private void Launch()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1300418", Offset = "0x1300418", VA = "0x1300418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6708", Offset = "0x7E6708")]
		private IEnumerator Restore()
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x13003AC", Offset = "0x13003AC", VA = "0x13003AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6768", Offset = "0x7E6768")]
		private IEnumerator WaitUntilStopped()
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1300484", Offset = "0x1300484", VA = "0x1300484")]
		public RaggedySpineboy()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 direction;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xD9C2B0", Offset = "0xD9C2B0", VA = "0xD9C2B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xD9C324", Offset = "0xD9C324", VA = "0xD9C324")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class BoneLocalOverride : MonoBehaviour
	{
		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x7D251C", Offset = "0x7D251C")]
		public string boneName;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2578", Offset = "0x7D2578")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2578", Offset = "0x7D2578")]
		public float alpha;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D25B8", Offset = "0x7D25B8")]
		public bool overridePosition;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 localPosition;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D25C8", Offset = "0x7D25C8")]
		public bool overrideRotation;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D25D8", Offset = "0x7D25D8")]
		public float rotation;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISkeletonAnimation spineComponent;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Bone bone;

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x10BA1B4", Offset = "0x10BA1B4", VA = "0x10BA1B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x10BA2F8", Offset = "0x10BA2F8", VA = "0x10BA2F8")]
		private void OverrideLocal(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x10BA540", Offset = "0x10BA540", VA = "0x10BA540")]
		public BoneLocalOverride()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class CombinedSkin : MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x7D25F4", Offset = "0x7D25F4")]
		public List<string> skinsToCombine;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Skin combinedSkin;

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x10C5E18", Offset = "0x10C5E18", VA = "0x10C5E18")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x10C6118", Offset = "0x10C6118", VA = "0x10C6118")]
		public CombinedSkin()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class JitterEffectExample : MonoBehaviour
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2650", Offset = "0x7D2650")]
		public float jitterMagnitude;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x16A713C", Offset = "0x16A713C", VA = "0x16A713C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x16A72D4", Offset = "0x16A72D4", VA = "0x16A72D4")]
		private void ProcessVertices(MeshGeneratorBuffers buffers)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x16A7398", Offset = "0x16A7398", VA = "0x16A7398")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x16A74CC", Offset = "0x16A74CC", VA = "0x16A74CC")]
		public JitterEffectExample()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class SkeletonColorInitialize : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E0")]
		public class SlotSettings
		{
			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D266C", Offset = "0x7D266C")]
			public string slot;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xCC3620", Offset = "0xCC3620", VA = "0xCC3620")]
			public SlotSettings()
			{
			}
		}

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color skeletonColor;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SlotSettings> slotSettings;

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x12BC61C", Offset = "0x12BC61C", VA = "0x12BC61C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x12BC620", Offset = "0x12BC620", VA = "0x12BC620")]
		private void ApplySettings()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x12BC83C", Offset = "0x12BC83C", VA = "0x12BC83C")]
		public SkeletonColorInitialize()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class SlotTintBlackFollower : MonoBehaviour
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x7D26CC", Offset = "0x7D26CC")]
		[SerializeField]
		protected string slotName;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string colorPropertyName;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string blackPropertyName;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slot slot;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer mr;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock mb;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int colorPropertyId;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int blackPropertyId;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x127C0E8", Offset = "0x127C0E8", VA = "0x127C0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x127C0F0", Offset = "0x127C0F0", VA = "0x127C0F0")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x127C268", Offset = "0x127C268", VA = "0x127C268")]
		public void Update()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x127C308", Offset = "0x127C308", VA = "0x127C308")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x127C348", Offset = "0x127C348", VA = "0x127C348")]
		public SlotTintBlackFollower()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class SpawnFromSkeletonDataExample : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC1C0", Offset = "0x7CC1C0")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnFromSkeletonDataExample <>4__this;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Animation <spineAnimation>5__2;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x170003E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001406")]
				[Address(RVA = "0xCC6610", Offset = "0xCC6610", VA = "0xCC6610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001408")]
				[Address(RVA = "0xCC6658", Offset = "0xCC6658", VA = "0xCC6658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001403")]
			[Address(RVA = "0xCC63EC", Offset = "0xCC63EC", VA = "0xCC63EC")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0xCC6418", Offset = "0xCC6418", VA = "0xCC6418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001405")]
			[Address(RVA = "0xCC641C", Offset = "0xCC641C", VA = "0xCC641C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0xCC6618", Offset = "0xCC6618", VA = "0xCC6618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2760", Offset = "0x7D2760")]
		public int count;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D277C", Offset = "0x7D277C")]
		public string startingAnimation;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1283A8C", Offset = "0x1283A8C", VA = "0x1283A8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6868", Offset = "0x7E6868")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1283AF8", Offset = "0x1283AF8", VA = "0x1283AF8")]
		private void DoExtraStuff(SkeletonAnimation sa, Animation spineAnimation)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1283BD8", Offset = "0x1283BD8", VA = "0x1283BD8")]
		public SpawnFromSkeletonDataExample()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC1D0", Offset = "0x7CC1D0")]
	public class SpineGauge : MonoBehaviour
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D27D0", Offset = "0x7D27D0")]
		public float fillPercent;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D27E8", Offset = "0x7D27E8")]
		public string fillAnimationName;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animation fillAnimation;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE788E0", Offset = "0xE788E0", VA = "0xE788E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xE78934", Offset = "0xE78934", VA = "0xE78934")]
		private void Update()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xE7893C", Offset = "0xE7893C", VA = "0xE7893C")]
		public void SetGaugePercent(float percent)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE78A48", Offset = "0xE78A48", VA = "0xE78A48")]
		public SpineGauge()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class Spineboy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC240", Offset = "0x7CC240")]
		private sealed class <>c
		{
			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static AnimationState.TrackEntryDelegate <>9__1_0;

			[Token(Token = "0x6001412")]
			[Address(RVA = "0xCC6DB8", Offset = "0xCC6DB8", VA = "0xCC6DB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0xCC6DC0", Offset = "0xCC6DC0", VA = "0xCC6DC0")]
			internal void <Start>b__1_0(TrackEntry entry)
			{
			}
		}

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE7945C", Offset = "0xE7945C", VA = "0xE7945C")]
		public void Start()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE79634", Offset = "0xE79634", VA = "0xE79634")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xE798CC", Offset = "0xE798CC", VA = "0xE798CC")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE79970", Offset = "0xE79970", VA = "0xE79970")]
		public Spineboy()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class SpineboyPole : MonoBehaviour
	{
		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC250", Offset = "0x7CC250")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineboyPole <>4__this;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AnimationState <state>5__2;

			[Token(Token = "0x170003E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600141A")]
				[Address(RVA = "0xCC7380", Offset = "0xCC7380", VA = "0xCC7380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600141C")]
				[Address(RVA = "0xCC73C8", Offset = "0xCC73C8", VA = "0xCC73C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001417")]
			[Address(RVA = "0xCC7100", Offset = "0xCC7100", VA = "0xCC7100")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0xCC712C", Offset = "0xCC712C", VA = "0xCC712C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001419")]
			[Address(RVA = "0xCC7130", Offset = "0xCC7130", VA = "0xCC7130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600141B")]
			[Address(RVA = "0xCC7388", Offset = "0xCC7388", VA = "0xCC7388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonRenderSeparator separator;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2844", Offset = "0x7D2844")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D2844", Offset = "0x7D2844")]
		public string run;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x7D28B8", Offset = "0x7D28B8")]
		public string pole;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startX;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float endX;

		[Token(Token = "0x40010C2")]
		private const float Speed = 18f;

		[Token(Token = "0x40010C3")]
		private const float RunTimeScale = 1.5f;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE7A3AC", Offset = "0xE7A3AC", VA = "0xE7A3AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6918", Offset = "0x7E6918")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xE7A418", Offset = "0xE7A418", VA = "0xE7A418")]
		private void SetXPosition(float x)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE7A488", Offset = "0xE7A488", VA = "0xE7A488")]
		public SpineboyPole()
		{
		}
	}
}
namespace proto
{
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC260", Offset = "0x7CC260")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC260", Offset = "0x7CC260")]
	public sealed class PhoneEvent : GeneratedMessageLite<PhoneEvent, PhoneEvent.Builder>
	{
		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2D8", Offset = "0x7CC2D8")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC2D8", Offset = "0x7CC2D8")]
		[DebuggerNonUserCode]
		public static class Types
		{
			[Token(Token = "0x20002EB")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC350", Offset = "0x7CC350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC350", Offset = "0x7CC350")]
			public enum Type
			{
				[Token(Token = "0x40010E2")]
				MOTION = 1,
				[Token(Token = "0x40010E3")]
				GYROSCOPE,
				[Token(Token = "0x40010E4")]
				ACCELEROMETER,
				[Token(Token = "0x40010E5")]
				DEPTH_MAP,
				[Token(Token = "0x40010E6")]
				ORIENTATION,
				[Token(Token = "0x40010E7")]
				KEY
			}

			[Token(Token = "0x20002EC")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3B8", Offset = "0x7CC3B8")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC3B8", Offset = "0x7CC3B8")]
			public sealed class MotionEvent : GeneratedMessageLite<MotionEvent, MotionEvent.Builder>
			{
				[Token(Token = "0x20002ED")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC428", Offset = "0x7CC428")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC428", Offset = "0x7CC428")]
				public static class Types
				{
					[Token(Token = "0x20002EE")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC498", Offset = "0x7CC498")]
					[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC498", Offset = "0x7CC498")]
					[DebuggerNonUserCode]
					public sealed class Pointer : GeneratedMessageLite<Pointer, Pointer.Builder>
					{
						[Token(Token = "0x20002EF")]
						[DebuggerNonUserCode]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC510", Offset = "0x7CC510")]
						[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC510", Offset = "0x7CC510")]
						public sealed class Builder : GeneratedBuilderLite<Pointer, Builder>
						{
							[Token(Token = "0x4001101")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
							private bool resultIsReadOnly;

							[Token(Token = "0x4001102")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
							private Pointer result;

							[Token(Token = "0x17000412")]
							protected override Builder ThisBuilder
							{
								[Token(Token = "0x6001486")]
								[Address(RVA = "0x1C70F38", Offset = "0x1C70F38", VA = "0x1C70F38", Slot = "7")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x17000413")]
							public override bool IsInitialized
							{
								[Token(Token = "0x600148A")]
								[Address(RVA = "0x1C70FC8", Offset = "0x1C70FC8", VA = "0x1C70FC8", Slot = "8")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x17000414")]
							protected override Pointer MessageBeingBuilt
							{
								[Token(Token = "0x600148B")]
								[Address(RVA = "0x1C70FE8", Offset = "0x1C70FE8", VA = "0x1C70FE8", Slot = "25")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x17000415")]
							public override Pointer DefaultInstanceForType
							{
								[Token(Token = "0x600148E")]
								[Address(RVA = "0x1C7114C", Offset = "0x1C7114C", VA = "0x1C7114C", Slot = "9")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x17000416")]
							public bool HasId
							{
								[Token(Token = "0x6001494")]
								[Address(RVA = "0x1C718C8", Offset = "0x1C718C8", VA = "0x1C718C8")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x17000417")]
							public int Id
							{
								[Token(Token = "0x6001495")]
								[Address(RVA = "0x1C718E4", Offset = "0x1C718E4", VA = "0x1C718E4")]
								get
								{
									return default(int);
								}
								[Token(Token = "0x6001496")]
								[Address(RVA = "0x1C713D0", Offset = "0x1C713D0", VA = "0x1C713D0")]
								set
								{
								}
							}

							[Token(Token = "0x17000418")]
							public bool HasNormalizedX
							{
								[Token(Token = "0x6001499")]
								[Address(RVA = "0x1C71988", Offset = "0x1C71988", VA = "0x1C71988")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x17000419")]
							public float NormalizedX
							{
								[Token(Token = "0x600149A")]
								[Address(RVA = "0x1C719A4", Offset = "0x1C719A4", VA = "0x1C719A4")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x600149B")]
								[Address(RVA = "0x1C713D4", Offset = "0x1C713D4", VA = "0x1C713D4")]
								set
								{
								}
							}

							[Token(Token = "0x1700041A")]
							public bool HasNormalizedY
							{
								[Token(Token = "0x600149E")]
								[Address(RVA = "0x1C71A50", Offset = "0x1C71A50", VA = "0x1C71A50")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x1700041B")]
							public float NormalizedY
							{
								[Token(Token = "0x600149F")]
								[Address(RVA = "0x1C71A6C", Offset = "0x1C71A6C", VA = "0x1C71A6C")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x60014A0")]
								[Address(RVA = "0x1C713D8", Offset = "0x1C713D8", VA = "0x1C713D8")]
								set
								{
								}
							}

							[Token(Token = "0x6001487")]
							[Address(RVA = "0x1C70AF0", Offset = "0x1C70AF0", VA = "0x1C70AF0")]
							public Builder()
							{
							}

							[Token(Token = "0x6001488")]
							[Address(RVA = "0x1C70CD4", Offset = "0x1C70CD4", VA = "0x1C70CD4")]
							internal Builder(Pointer cloneFrom)
							{
							}

							[Token(Token = "0x6001489")]
							[Address(RVA = "0x1C70F3C", Offset = "0x1C70F3C", VA = "0x1C70F3C")]
							private Pointer PrepareBuilder()
							{
								return null;
							}

							[Token(Token = "0x600148C")]
							[Address(RVA = "0x1C70FEC", Offset = "0x1C70FEC", VA = "0x1C70FEC", Slot = "10")]
							public override Builder Clear()
							{
								return null;
							}

							[Token(Token = "0x600148D")]
							[Address(RVA = "0x1C710A4", Offset = "0x1C710A4", VA = "0x1C710A4", Slot = "11")]
							public override Builder Clone()
							{
								return null;
							}

							[Token(Token = "0x600148F")]
							[Address(RVA = "0x1C711E8", Offset = "0x1C711E8", VA = "0x1C711E8", Slot = "13")]
							public override Pointer BuildPartial()
							{
								return null;
							}

							[Token(Token = "0x6001490")]
							[Address(RVA = "0x1C7121C", Offset = "0x1C7121C", VA = "0x1C7121C", Slot = "14")]
							public override Builder MergeFrom(IMessageLite other)
							{
								return null;
							}

							[Token(Token = "0x6001491")]
							[Address(RVA = "0x1C712CC", Offset = "0x1C712CC", VA = "0x1C712CC", Slot = "26")]
							public override Builder MergeFrom(Pointer other)
							{
								return null;
							}

							[Token(Token = "0x6001492")]
							[Address(RVA = "0x1C713DC", Offset = "0x1C713DC", VA = "0x1C713DC", Slot = "16")]
							public override Builder MergeFrom(ICodedInputStream input)
							{
								return null;
							}

							[Token(Token = "0x6001493")]
							[Address(RVA = "0x1C7149C", Offset = "0x1C7149C", VA = "0x1C7149C", Slot = "15")]
							public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
							{
								return null;
							}

							[Token(Token = "0x6001497")]
							[Address(RVA = "0x1C71900", Offset = "0x1C71900", VA = "0x1C71900")]
							public Builder SetId(int value)
							{
								return null;
							}

							[Token(Token = "0x6001498")]
							[Address(RVA = "0x1C71948", Offset = "0x1C71948", VA = "0x1C71948")]
							public Builder ClearId()
							{
								return null;
							}

							[Token(Token = "0x600149C")]
							[Address(RVA = "0x1C719C0", Offset = "0x1C719C0", VA = "0x1C719C0")]
							public Builder SetNormalizedX(float value)
							{
								return null;
							}

							[Token(Token = "0x600149D")]
							[Address(RVA = "0x1C71A10", Offset = "0x1C71A10", VA = "0x1C71A10")]
							public Builder ClearNormalizedX()
							{
								return null;
							}

							[Token(Token = "0x60014A1")]
							[Address(RVA = "0x1C71A88", Offset = "0x1C71A88", VA = "0x1C71A88")]
							public Builder SetNormalizedY(float value)
							{
								return null;
							}

							[Token(Token = "0x60014A2")]
							[Address(RVA = "0x1C71AD8", Offset = "0x1C71AD8", VA = "0x1C71AD8")]
							public Builder ClearNormalizedY()
							{
								return null;
							}
						}

						[Token(Token = "0x40010F4")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
						private static readonly Pointer defaultInstance;

						[Token(Token = "0x40010F5")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
						private static readonly string[] _pointerFieldNames;

						[Token(Token = "0x40010F6")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private static readonly uint[] _pointerFieldTags;

						[Token(Token = "0x40010F7")]
						public const int IdFieldNumber = 1;

						[Token(Token = "0x40010F8")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private bool hasId;

						[Token(Token = "0x40010F9")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
						private int id_;

						[Token(Token = "0x40010FA")]
						public const int NormalizedXFieldNumber = 2;

						[Token(Token = "0x40010FB")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
						private bool hasNormalizedX;

						[Token(Token = "0x40010FC")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
						private float normalizedX_;

						[Token(Token = "0x40010FD")]
						public const int NormalizedYFieldNumber = 3;

						[Token(Token = "0x40010FE")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
						private bool hasNormalizedY;

						[Token(Token = "0x40010FF")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
						private float normalizedY_;

						[Token(Token = "0x4001100")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
						private int memoizedSerializedSize;

						[Token(Token = "0x17000407")]
						public static Pointer DefaultInstance
						{
							[Token(Token = "0x6001467")]
							[Address(RVA = "0x1C6FC14", Offset = "0x1C6FC14", VA = "0x1C6FC14")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x17000408")]
						public override Pointer DefaultInstanceForType
						{
							[Token(Token = "0x6001468")]
							[Address(RVA = "0x1C6FC78", Offset = "0x1C6FC78", VA = "0x1C6FC78", Slot = "9")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x17000409")]
						protected override Pointer ThisMessage
						{
							[Token(Token = "0x6001469")]
							[Address(RVA = "0x1C6FD14", Offset = "0x1C6FD14", VA = "0x1C6FD14", Slot = "17")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x1700040A")]
						public bool HasId
						{
							[Token(Token = "0x600146A")]
							[Address(RVA = "0x1C6FD18", Offset = "0x1C6FD18", VA = "0x1C6FD18")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x1700040B")]
						public int Id
						{
							[Token(Token = "0x600146B")]
							[Address(RVA = "0x1C6FD20", Offset = "0x1C6FD20", VA = "0x1C6FD20")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x1700040C")]
						public bool HasNormalizedX
						{
							[Token(Token = "0x600146C")]
							[Address(RVA = "0x1C6FD28", Offset = "0x1C6FD28", VA = "0x1C6FD28")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x1700040D")]
						public float NormalizedX
						{
							[Token(Token = "0x600146D")]
							[Address(RVA = "0x1C6FD30", Offset = "0x1C6FD30", VA = "0x1C6FD30")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x1700040E")]
						public bool HasNormalizedY
						{
							[Token(Token = "0x600146E")]
							[Address(RVA = "0x1C6FD38", Offset = "0x1C6FD38", VA = "0x1C6FD38")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x1700040F")]
						public float NormalizedY
						{
							[Token(Token = "0x600146F")]
							[Address(RVA = "0x1C6FD40", Offset = "0x1C6FD40", VA = "0x1C6FD40")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x17000410")]
						public override bool IsInitialized
						{
							[Token(Token = "0x6001470")]
							[Address(RVA = "0x1C6FD48", Offset = "0x1C6FD48", VA = "0x1C6FD48", Slot = "10")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x17000411")]
						public override int SerializedSize
						{
							[Token(Token = "0x6001472")]
							[Address(RVA = "0x1C6FFCC", Offset = "0x1C6FFCC", VA = "0x1C6FFCC", Slot = "11")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x6001466")]
						[Address(RVA = "0x1C6FBC0", Offset = "0x1C6FBC0", VA = "0x1C6FBC0")]
						private Pointer()
						{
						}

						[Token(Token = "0x6001471")]
						[Address(RVA = "0x1C6FD50", Offset = "0x1C6FD50", VA = "0x1C6FD50", Slot = "14")]
						public override void WriteTo(ICodedOutputStream output)
						{
						}

						[Token(Token = "0x6001473")]
						[Address(RVA = "0x1C700EC", Offset = "0x1C700EC", VA = "0x1C700EC", Slot = "2")]
						public override int GetHashCode()
						{
							return default(int);
						}

						[Token(Token = "0x6001474")]
						[Address(RVA = "0x1C70174", Offset = "0x1C70174", VA = "0x1C70174", Slot = "0")]
						public override bool Equals(object obj)
						{
							return default(bool);
						}

						[Token(Token = "0x6001475")]
						[Address(RVA = "0x1C70298", Offset = "0x1C70298", VA = "0x1C70298", Slot = "15")]
						public override void PrintTo(TextWriter writer)
						{
						}

						[Token(Token = "0x6001476")]
						[Address(RVA = "0x1C703F8", Offset = "0x1C703F8", VA = "0x1C703F8")]
						public static Pointer ParseFrom(ByteString data)
						{
							return null;
						}

						[Token(Token = "0x6001477")]
						[Address(RVA = "0x1C704F0", Offset = "0x1C704F0", VA = "0x1C704F0")]
						public static Pointer ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6001478")]
						[Address(RVA = "0x1C705A4", Offset = "0x1C705A4", VA = "0x1C705A4")]
						public static Pointer ParseFrom(byte[] data)
						{
							return null;
						}

						[Token(Token = "0x6001479")]
						[Address(RVA = "0x1C70648", Offset = "0x1C70648", VA = "0x1C70648")]
						public static Pointer ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600147A")]
						[Address(RVA = "0x1C706FC", Offset = "0x1C706FC", VA = "0x1C706FC")]
						public static Pointer ParseFrom(System.IO.Stream input)
						{
							return null;
						}

						[Token(Token = "0x600147B")]
						[Address(RVA = "0x1C707A0", Offset = "0x1C707A0", VA = "0x1C707A0")]
						public static Pointer ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600147C")]
						[Address(RVA = "0x1C70854", Offset = "0x1C70854", VA = "0x1C70854")]
						public static Pointer ParseDelimitedFrom(System.IO.Stream input)
						{
							return null;
						}

						[Token(Token = "0x600147D")]
						[Address(RVA = "0x1C708F8", Offset = "0x1C708F8", VA = "0x1C708F8")]
						public static Pointer ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600147E")]
						[Address(RVA = "0x1C709AC", Offset = "0x1C709AC", VA = "0x1C709AC")]
						public static Pointer ParseFrom(ICodedInputStream input)
						{
							return null;
						}

						[Token(Token = "0x600147F")]
						[Address(RVA = "0x1C70A44", Offset = "0x1C70A44", VA = "0x1C70A44")]
						public static Pointer ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6001480")]
						[Address(RVA = "0x1C70AEC", Offset = "0x1C70AEC", VA = "0x1C70AEC")]
						private Pointer MakeReadOnly()
						{
							return null;
						}

						[Token(Token = "0x6001481")]
						[Address(RVA = "0x1C7049C", Offset = "0x1C7049C", VA = "0x1C7049C")]
						public static Builder CreateBuilder()
						{
							return null;
						}

						[Token(Token = "0x6001482")]
						[Address(RVA = "0x1C70BC4", Offset = "0x1C70BC4", VA = "0x1C70BC4", Slot = "13")]
						public override Builder ToBuilder()
						{
							return null;
						}

						[Token(Token = "0x6001483")]
						[Address(RVA = "0x1C70C80", Offset = "0x1C70C80", VA = "0x1C70C80", Slot = "12")]
						public override Builder CreateBuilderForType()
						{
							return null;
						}

						[Token(Token = "0x6001484")]
						[Address(RVA = "0x1C70C24", Offset = "0x1C70C24", VA = "0x1C70C24")]
						public static Builder CreateBuilder(Pointer prototype)
						{
							return null;
						}

						[Token(Token = "0x6001485")]
						[Address(RVA = "0x1C70D3C", Offset = "0x1C70D3C", VA = "0x1C70D3C")]
						static Pointer()
						{
						}
					}
				}

				[Token(Token = "0x20002F0")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC580", Offset = "0x7CC580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC580", Offset = "0x7CC580")]
				[DebuggerNonUserCode]
				public sealed class Builder : GeneratedBuilderLite<MotionEvent, Builder>
				{
					[Token(Token = "0x4001103")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4001104")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private MotionEvent result;

					[Token(Token = "0x1700041C")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60014A3")]
						[Address(RVA = "0x1C6DBC8", Offset = "0x1C6DBC8", VA = "0x1C6DBC8", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700041D")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60014A7")]
						[Address(RVA = "0x1C6DD98", Offset = "0x1C6DD98", VA = "0x1C6DD98", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700041E")]
					protected override MotionEvent MessageBeingBuilt
					{
						[Token(Token = "0x60014A8")]
						[Address(RVA = "0x1C6DDB8", Offset = "0x1C6DDB8", VA = "0x1C6DDB8", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700041F")]
					public override MotionEvent DefaultInstanceForType
					{
						[Token(Token = "0x60014AB")]
						[Address(RVA = "0x1C6DF1C", Offset = "0x1C6DF1C", VA = "0x1C6DF1C", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000420")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60014B1")]
						[Address(RVA = "0x1C6E78C", Offset = "0x1C6E78C", VA = "0x1C6E78C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000421")]
					public long Timestamp
					{
						[Token(Token = "0x60014B2")]
						[Address(RVA = "0x1C6E7A8", Offset = "0x1C6E7A8", VA = "0x1C6E7A8")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60014B3")]
						[Address(RVA = "0x1C6E1E8", Offset = "0x1C6E1E8", VA = "0x1C6E1E8")]
						set
						{
						}
					}

					[Token(Token = "0x17000422")]
					public bool HasAction
					{
						[Token(Token = "0x60014B6")]
						[Address(RVA = "0x1C6E84C", Offset = "0x1C6E84C", VA = "0x1C6E84C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000423")]
					public int Action
					{
						[Token(Token = "0x60014B7")]
						[Address(RVA = "0x1C6E868", Offset = "0x1C6E868", VA = "0x1C6E868")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x60014B8")]
						[Address(RVA = "0x1C6E1EC", Offset = "0x1C6E1EC", VA = "0x1C6E1EC")]
						set
						{
						}
					}

					[Token(Token = "0x17000424")]
					public IPopsicleList<Types.Pointer> PointersList
					{
						[Token(Token = "0x60014BB")]
						[Address(RVA = "0x1C6E90C", Offset = "0x1C6E90C", VA = "0x1C6E90C")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000425")]
					public int PointersCount
					{
						[Token(Token = "0x60014BC")]
						[Address(RVA = "0x1C6E92C", Offset = "0x1C6E92C", VA = "0x1C6E92C")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x60014A4")]
					[Address(RVA = "0x1C6DBCC", Offset = "0x1C6DBCC", VA = "0x1C6DBCC")]
					public Builder()
					{
					}

					[Token(Token = "0x60014A5")]
					[Address(RVA = "0x1C6DCA0", Offset = "0x1C6DCA0", VA = "0x1C6DCA0")]
					internal Builder(MotionEvent cloneFrom)
					{
					}

					[Token(Token = "0x60014A6")]
					[Address(RVA = "0x1C6DD08", Offset = "0x1C6DD08", VA = "0x1C6DD08")]
					private MotionEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60014A9")]
					[Address(RVA = "0x1C6DDBC", Offset = "0x1C6DDBC", VA = "0x1C6DDBC", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60014AA")]
					[Address(RVA = "0x1C6DE74", Offset = "0x1C6DE74", VA = "0x1C6DE74", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60014AC")]
					[Address(RVA = "0x1C6DFB8", Offset = "0x1C6DFB8", VA = "0x1C6DFB8", Slot = "13")]
					public override MotionEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60014AD")]
					[Address(RVA = "0x1C6DFF0", Offset = "0x1C6DFF0", VA = "0x1C6DFF0", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60014AE")]
					[Address(RVA = "0x1C6E0A0", Offset = "0x1C6E0A0", VA = "0x1C6E0A0", Slot = "26")]
					public override Builder MergeFrom(MotionEvent other)
					{
						return null;
					}

					[Token(Token = "0x60014AF")]
					[Address(RVA = "0x1C6E1F0", Offset = "0x1C6E1F0", VA = "0x1C6E1F0", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60014B0")]
					[Address(RVA = "0x1C6E2B0", Offset = "0x1C6E2B0", VA = "0x1C6E2B0", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60014B4")]
					[Address(RVA = "0x1C6E7C4", Offset = "0x1C6E7C4", VA = "0x1C6E7C4")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60014B5")]
					[Address(RVA = "0x1C6E80C", Offset = "0x1C6E80C", VA = "0x1C6E80C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60014B9")]
					[Address(RVA = "0x1C6E884", Offset = "0x1C6E884", VA = "0x1C6E884")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x60014BA")]
					[Address(RVA = "0x1C6E8CC", Offset = "0x1C6E8CC", VA = "0x1C6E8CC")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x60014BD")]
					[Address(RVA = "0x1C6E948", Offset = "0x1C6E948", VA = "0x1C6E948")]
					public Types.Pointer GetPointers(int index)
					{
						return null;
					}

					[Token(Token = "0x60014BE")]
					[Address(RVA = "0x1C6E964", Offset = "0x1C6E964", VA = "0x1C6E964")]
					public Builder SetPointers(int index, Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x60014BF")]
					[Address(RVA = "0x1C6EA0C", Offset = "0x1C6EA0C", VA = "0x1C6EA0C")]
					public Builder SetPointers(int index, Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x60014C0")]
					[Address(RVA = "0x1C6EACC", Offset = "0x1C6EACC", VA = "0x1C6EACC")]
					public Builder AddPointers(Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x60014C1")]
					[Address(RVA = "0x1C6EB6C", Offset = "0x1C6EB6C", VA = "0x1C6EB6C")]
					public Builder AddPointers(Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x60014C2")]
					[Address(RVA = "0x1C6EC24", Offset = "0x1C6EC24", VA = "0x1C6EC24")]
					public Builder AddRangePointers(IEnumerable<Types.Pointer> values)
					{
						return null;
					}

					[Token(Token = "0x60014C3")]
					[Address(RVA = "0x1C6ECA0", Offset = "0x1C6ECA0", VA = "0x1C6ECA0")]
					public Builder ClearPointers()
					{
						return null;
					}
				}

				[Token(Token = "0x40010E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly MotionEvent defaultInstance;

				[Token(Token = "0x40010E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _motionEventFieldNames;

				[Token(Token = "0x40010EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _motionEventFieldTags;

				[Token(Token = "0x40010EB")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40010EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x40010ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x40010EE")]
				public const int ActionFieldNumber = 2;

				[Token(Token = "0x40010EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasAction;

				[Token(Token = "0x40010F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int action_;

				[Token(Token = "0x40010F1")]
				public const int PointersFieldNumber = 3;

				[Token(Token = "0x40010F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private PopsicleList<Types.Pointer> pointers_;

				[Token(Token = "0x40010F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170003FC")]
				public static MotionEvent DefaultInstance
				{
					[Token(Token = "0x6001446")]
					[Address(RVA = "0xCCE35C", Offset = "0xCCE35C", VA = "0xCCE35C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003FD")]
				public override MotionEvent DefaultInstanceForType
				{
					[Token(Token = "0x6001447")]
					[Address(RVA = "0xCCE3C0", Offset = "0xCCE3C0", VA = "0xCCE3C0", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003FE")]
				protected override MotionEvent ThisMessage
				{
					[Token(Token = "0x6001448")]
					[Address(RVA = "0xCCE45C", Offset = "0xCCE45C", VA = "0xCCE45C", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003FF")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6001449")]
					[Address(RVA = "0xCCE460", Offset = "0xCCE460", VA = "0xCCE460")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000400")]
				public long Timestamp
				{
					[Token(Token = "0x600144A")]
					[Address(RVA = "0xCCE468", Offset = "0xCCE468", VA = "0xCCE468")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000401")]
				public bool HasAction
				{
					[Token(Token = "0x600144B")]
					[Address(RVA = "0xCCE470", Offset = "0xCCE470", VA = "0xCCE470")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000402")]
				public int Action
				{
					[Token(Token = "0x600144C")]
					[Address(RVA = "0xCCE478", Offset = "0xCCE478", VA = "0xCCE478")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000403")]
				public IList<Types.Pointer> PointersList
				{
					[Token(Token = "0x600144D")]
					[Address(RVA = "0xCCE480", Offset = "0xCCE480", VA = "0xCCE480")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000404")]
				public int PointersCount
				{
					[Token(Token = "0x600144E")]
					[Address(RVA = "0xCCE488", Offset = "0xCCE488", VA = "0xCCE488")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000405")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6001450")]
					[Address(RVA = "0xCCE540", Offset = "0xCCE540", VA = "0xCCE540", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000406")]
				public override int SerializedSize
				{
					[Token(Token = "0x6001452")]
					[Address(RVA = "0xCCE804", Offset = "0xCCE804", VA = "0xCCE804", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6001445")]
				[Address(RVA = "0xCCE2C8", Offset = "0xCCE2C8", VA = "0xCCE2C8")]
				private MotionEvent()
				{
				}

				[Token(Token = "0x600144F")]
				[Address(RVA = "0xCCE4DC", Offset = "0xCCE4DC", VA = "0xCCE4DC")]
				public Types.Pointer GetPointers(int index)
				{
					return null;
				}

				[Token(Token = "0x6001451")]
				[Address(RVA = "0xCCE548", Offset = "0xCCE548", VA = "0xCCE548", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6001453")]
				[Address(RVA = "0xCCEB98", Offset = "0xCCEB98", VA = "0xCCEB98", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6001454")]
				[Address(RVA = "0xCCEE58", Offset = "0xCCEE58", VA = "0xCCEE58", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6001455")]
				[Address(RVA = "0xCCF018", Offset = "0xCCF018", VA = "0xCCF018", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6001456")]
				[Address(RVA = "0xCCF164", Offset = "0xCCF164", VA = "0xCCF164")]
				public static MotionEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6001457")]
				[Address(RVA = "0xCCF260", Offset = "0xCCF260", VA = "0xCCF260")]
				public static MotionEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001458")]
				[Address(RVA = "0xCCF314", Offset = "0xCCF314", VA = "0xCCF314")]
				public static MotionEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6001459")]
				[Address(RVA = "0xCCF3B8", Offset = "0xCCF3B8", VA = "0xCCF3B8")]
				public static MotionEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600145A")]
				[Address(RVA = "0xCCF46C", Offset = "0xCCF46C", VA = "0xCCF46C")]
				public static MotionEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x600145B")]
				[Address(RVA = "0xCCF510", Offset = "0xCCF510", VA = "0xCCF510")]
				public static MotionEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600145C")]
				[Address(RVA = "0xCCF5C4", Offset = "0xCCF5C4", VA = "0xCCF5C4")]
				public static MotionEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x600145D")]
				[Address(RVA = "0xCCF668", Offset = "0xCCF668", VA = "0xCCF668")]
				public static MotionEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600145E")]
				[Address(RVA = "0xCCF71C", Offset = "0xCCF71C", VA = "0xCCF71C")]
				public static MotionEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x600145F")]
				[Address(RVA = "0xCCF7B4", Offset = "0xCCF7B4", VA = "0xCCF7B4")]
				public static MotionEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001460")]
				[Address(RVA = "0xCCF85C", Offset = "0xCCF85C", VA = "0xCCF85C")]
				private MotionEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6001461")]
				[Address(RVA = "0xCCF208", Offset = "0xCCF208", VA = "0xCCF208")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6001462")]
				[Address(RVA = "0xCCF8B8", Offset = "0xCCF8B8", VA = "0xCCF8B8", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6001463")]
				[Address(RVA = "0xCCF978", Offset = "0xCCF978", VA = "0xCCF978", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6001464")]
				[Address(RVA = "0xCCF918", Offset = "0xCCF918", VA = "0xCCF918")]
				public static Builder CreateBuilder(MotionEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6001465")]
				[Address(RVA = "0xCCF9D0", Offset = "0xCCF9D0", VA = "0xCCF9D0")]
				static MotionEvent()
				{
				}
			}

			[Token(Token = "0x20002F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC5F8", Offset = "0x7CC5F8")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC5F8", Offset = "0x7CC5F8")]
			public sealed class GyroscopeEvent : GeneratedMessageLite<GyroscopeEvent, GyroscopeEvent.Builder>
			{
				[Token(Token = "0x20002F2")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC668", Offset = "0x7CC668")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC668", Offset = "0x7CC668")]
				public sealed class Builder : GeneratedBuilderLite<GyroscopeEvent, Builder>
				{
					[Token(Token = "0x4001115")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4001116")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private GyroscopeEvent result;

					[Token(Token = "0x17000433")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60014E6")]
						[Address(RVA = "0x1C6C190", Offset = "0x1C6C190", VA = "0x1C6C190", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000434")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60014EA")]
						[Address(RVA = "0x1C6C360", Offset = "0x1C6C360", VA = "0x1C6C360", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000435")]
					protected override GyroscopeEvent MessageBeingBuilt
					{
						[Token(Token = "0x60014EB")]
						[Address(RVA = "0x1C6C380", Offset = "0x1C6C380", VA = "0x1C6C380", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000436")]
					public override GyroscopeEvent DefaultInstanceForType
					{
						[Token(Token = "0x60014EE")]
						[Address(RVA = "0x1C6C4E4", Offset = "0x1C6C4E4", VA = "0x1C6C4E4", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000437")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60014F4")]
						[Address(RVA = "0x1C6CD04", Offset = "0x1C6CD04", VA = "0x1C6CD04")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000438")]
					public long Timestamp
					{
						[Token(Token = "0x60014F5")]
						[Address(RVA = "0x1C6CD20", Offset = "0x1C6CD20", VA = "0x1C6CD20")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60014F6")]
						[Address(RVA = "0x1C6C780", Offset = "0x1C6C780", VA = "0x1C6C780")]
						set
						{
						}
					}

					[Token(Token = "0x17000439")]
					public bool HasX
					{
						[Token(Token = "0x60014F9")]
						[Address(RVA = "0x1C6CDC4", Offset = "0x1C6CDC4", VA = "0x1C6CDC4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700043A")]
					public float X
					{
						[Token(Token = "0x60014FA")]
						[Address(RVA = "0x1C6CDE0", Offset = "0x1C6CDE0", VA = "0x1C6CDE0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60014FB")]
						[Address(RVA = "0x1C6C784", Offset = "0x1C6C784", VA = "0x1C6C784")]
						set
						{
						}
					}

					[Token(Token = "0x1700043B")]
					public bool HasY
					{
						[Token(Token = "0x60014FE")]
						[Address(RVA = "0x1C6CE8C", Offset = "0x1C6CE8C", VA = "0x1C6CE8C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700043C")]
					public float Y
					{
						[Token(Token = "0x60014FF")]
						[Address(RVA = "0x1C6CEA8", Offset = "0x1C6CEA8", VA = "0x1C6CEA8")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6001500")]
						[Address(RVA = "0x1C6C788", Offset = "0x1C6C788", VA = "0x1C6C788")]
						set
						{
						}
					}

					[Token(Token = "0x1700043D")]
					public bool HasZ
					{
						[Token(Token = "0x6001503")]
						[Address(RVA = "0x1C6CF54", Offset = "0x1C6CF54", VA = "0x1C6CF54")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700043E")]
					public float Z
					{
						[Token(Token = "0x6001504")]
						[Address(RVA = "0x1C6CF70", Offset = "0x1C6CF70", VA = "0x1C6CF70")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6001505")]
						[Address(RVA = "0x1C6C78C", Offset = "0x1C6C78C", VA = "0x1C6C78C")]
						set
						{
						}
					}

					[Token(Token = "0x60014E7")]
					[Address(RVA = "0x1C6C194", Offset = "0x1C6C194", VA = "0x1C6C194")]
					public Builder()
					{
					}

					[Token(Token = "0x60014E8")]
					[Address(RVA = "0x1C6C268", Offset = "0x1C6C268", VA = "0x1C6C268")]
					internal Builder(GyroscopeEvent cloneFrom)
					{
					}

					[Token(Token = "0x60014E9")]
					[Address(RVA = "0x1C6C2D0", Offset = "0x1C6C2D0", VA = "0x1C6C2D0")]
					private GyroscopeEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60014EC")]
					[Address(RVA = "0x1C6C384", Offset = "0x1C6C384", VA = "0x1C6C384", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60014ED")]
					[Address(RVA = "0x1C6C43C", Offset = "0x1C6C43C", VA = "0x1C6C43C", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60014EF")]
					[Address(RVA = "0x1C6C580", Offset = "0x1C6C580", VA = "0x1C6C580", Slot = "13")]
					public override GyroscopeEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60014F0")]
					[Address(RVA = "0x1C6C5B8", Offset = "0x1C6C5B8", VA = "0x1C6C5B8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60014F1")]
					[Address(RVA = "0x1C6C668", Offset = "0x1C6C668", VA = "0x1C6C668", Slot = "26")]
					public override Builder MergeFrom(GyroscopeEvent other)
					{
						return null;
					}

					[Token(Token = "0x60014F2")]
					[Address(RVA = "0x1C6C790", Offset = "0x1C6C790", VA = "0x1C6C790", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60014F3")]
					[Address(RVA = "0x1C6C850", Offset = "0x1C6C850", VA = "0x1C6C850", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60014F7")]
					[Address(RVA = "0x1C6CD3C", Offset = "0x1C6CD3C", VA = "0x1C6CD3C")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60014F8")]
					[Address(RVA = "0x1C6CD84", Offset = "0x1C6CD84", VA = "0x1C6CD84")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60014FC")]
					[Address(RVA = "0x1C6CDFC", Offset = "0x1C6CDFC", VA = "0x1C6CDFC")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x60014FD")]
					[Address(RVA = "0x1C6CE4C", Offset = "0x1C6CE4C", VA = "0x1C6CE4C")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6001501")]
					[Address(RVA = "0x1C6CEC4", Offset = "0x1C6CEC4", VA = "0x1C6CEC4")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6001502")]
					[Address(RVA = "0x1C6CF14", Offset = "0x1C6CF14", VA = "0x1C6CF14")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x6001506")]
					[Address(RVA = "0x1C6CF8C", Offset = "0x1C6CF8C", VA = "0x1C6CF8C")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x6001507")]
					[Address(RVA = "0x1C6CFDC", Offset = "0x1C6CFDC", VA = "0x1C6CFDC")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x4001105")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly GyroscopeEvent defaultInstance;

				[Token(Token = "0x4001106")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _gyroscopeEventFieldNames;

				[Token(Token = "0x4001107")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _gyroscopeEventFieldTags;

				[Token(Token = "0x4001108")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4001109")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x400110A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x400110B")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x400110C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x400110D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x400110E")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x400110F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4001110")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4001111")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4001112")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4001113")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x4001114")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000426")]
				public static GyroscopeEvent DefaultInstance
				{
					[Token(Token = "0x60014C5")]
					[Address(RVA = "0xCCBEB0", Offset = "0xCCBEB0", VA = "0xCCBEB0")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000427")]
				public override GyroscopeEvent DefaultInstanceForType
				{
					[Token(Token = "0x60014C6")]
					[Address(RVA = "0xCCBF14", Offset = "0xCCBF14", VA = "0xCCBF14", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000428")]
				protected override GyroscopeEvent ThisMessage
				{
					[Token(Token = "0x60014C7")]
					[Address(RVA = "0xCCBFB0", Offset = "0xCCBFB0", VA = "0xCCBFB0", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000429")]
				public bool HasTimestamp
				{
					[Token(Token = "0x60014C8")]
					[Address(RVA = "0xCCBFB4", Offset = "0xCCBFB4", VA = "0xCCBFB4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700042A")]
				public long Timestamp
				{
					[Token(Token = "0x60014C9")]
					[Address(RVA = "0xCCBFBC", Offset = "0xCCBFBC", VA = "0xCCBFBC")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700042B")]
				public bool HasX
				{
					[Token(Token = "0x60014CA")]
					[Address(RVA = "0xCCBFC4", Offset = "0xCCBFC4", VA = "0xCCBFC4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700042C")]
				public float X
				{
					[Token(Token = "0x60014CB")]
					[Address(RVA = "0xCCBFCC", Offset = "0xCCBFCC", VA = "0xCCBFCC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700042D")]
				public bool HasY
				{
					[Token(Token = "0x60014CC")]
					[Address(RVA = "0xCCBFD4", Offset = "0xCCBFD4", VA = "0xCCBFD4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700042E")]
				public float Y
				{
					[Token(Token = "0x60014CD")]
					[Address(RVA = "0xCCBFDC", Offset = "0xCCBFDC", VA = "0xCCBFDC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700042F")]
				public bool HasZ
				{
					[Token(Token = "0x60014CE")]
					[Address(RVA = "0xCCBFE4", Offset = "0xCCBFE4", VA = "0xCCBFE4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000430")]
				public float Z
				{
					[Token(Token = "0x60014CF")]
					[Address(RVA = "0xCCBFEC", Offset = "0xCCBFEC", VA = "0xCCBFEC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000431")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60014D0")]
					[Address(RVA = "0xCCBFF4", Offset = "0xCCBFF4", VA = "0xCCBFF4", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000432")]
				public override int SerializedSize
				{
					[Token(Token = "0x60014D2")]
					[Address(RVA = "0xCCC310", Offset = "0xCCC310", VA = "0xCCC310", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60014C4")]
				[Address(RVA = "0xCCBE5C", Offset = "0xCCBE5C", VA = "0xCCBE5C")]
				private GyroscopeEvent()
				{
				}

				[Token(Token = "0x60014D1")]
				[Address(RVA = "0xCCBFFC", Offset = "0xCCBFFC", VA = "0xCCBFFC", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60014D3")]
				[Address(RVA = "0xCCC470", Offset = "0xCCC470", VA = "0xCCC470", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60014D4")]
				[Address(RVA = "0xCCC510", Offset = "0xCCC510", VA = "0xCCC510", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60014D5")]
				[Address(RVA = "0xCCC66C", Offset = "0xCCC66C", VA = "0xCCC66C", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60014D6")]
				[Address(RVA = "0xCCC814", Offset = "0xCCC814", VA = "0xCCC814")]
				public static GyroscopeEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60014D7")]
				[Address(RVA = "0xCCC910", Offset = "0xCCC910", VA = "0xCCC910")]
				public static GyroscopeEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60014D8")]
				[Address(RVA = "0xCCC9C4", Offset = "0xCCC9C4", VA = "0xCCC9C4")]
				public static GyroscopeEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60014D9")]
				[Address(RVA = "0xCCCA68", Offset = "0xCCCA68", VA = "0xCCCA68")]
				public static GyroscopeEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60014DA")]
				[Address(RVA = "0xCCCB1C", Offset = "0xCCCB1C", VA = "0xCCCB1C")]
				public static GyroscopeEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60014DB")]
				[Address(RVA = "0xCCCBC0", Offset = "0xCCCBC0", VA = "0xCCCBC0")]
				public static GyroscopeEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60014DC")]
				[Address(RVA = "0xCCCC74", Offset = "0xCCCC74", VA = "0xCCCC74")]
				public static GyroscopeEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60014DD")]
				[Address(RVA = "0xCCCD18", Offset = "0xCCCD18", VA = "0xCCCD18")]
				public static GyroscopeEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60014DE")]
				[Address(RVA = "0xCCCDCC", Offset = "0xCCCDCC", VA = "0xCCCDCC")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60014DF")]
				[Address(RVA = "0xCCCE64", Offset = "0xCCCE64", VA = "0xCCCE64")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60014E0")]
				[Address(RVA = "0xCCCF0C", Offset = "0xCCCF0C", VA = "0xCCCF0C")]
				private GyroscopeEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60014E1")]
				[Address(RVA = "0xCCC8B8", Offset = "0xCCC8B8", VA = "0xCCC8B8")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60014E2")]
				[Address(RVA = "0xCCCF10", Offset = "0xCCCF10", VA = "0xCCCF10", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60014E3")]
				[Address(RVA = "0xCCCFD0", Offset = "0xCCCFD0", VA = "0xCCCFD0", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60014E4")]
				[Address(RVA = "0xCCCF70", Offset = "0xCCCF70", VA = "0xCCCF70")]
				public static Builder CreateBuilder(GyroscopeEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60014E5")]
				[Address(RVA = "0xCCD028", Offset = "0xCCD028", VA = "0xCCD028")]
				static GyroscopeEvent()
				{
				}
			}

			[Token(Token = "0x20002F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC6E0", Offset = "0x7CC6E0")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC6E0", Offset = "0x7CC6E0")]
			[DebuggerNonUserCode]
			public sealed class AccelerometerEvent : GeneratedMessageLite<AccelerometerEvent, AccelerometerEvent.Builder>
			{
				[Token(Token = "0x20002F4")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC758", Offset = "0x7CC758")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC758", Offset = "0x7CC758")]
				[DebuggerNonUserCode]
				public sealed class Builder : GeneratedBuilderLite<AccelerometerEvent, Builder>
				{
					[Token(Token = "0x4001127")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4001128")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private AccelerometerEvent result;

					[Token(Token = "0x1700044C")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x600152A")]
						[Address(RVA = "0x1C6A290", Offset = "0x1C6A290", VA = "0x1C6A290", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700044D")]
					public override bool IsInitialized
					{
						[Token(Token = "0x600152E")]
						[Address(RVA = "0x1C6A460", Offset = "0x1C6A460", VA = "0x1C6A460", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700044E")]
					protected override AccelerometerEvent MessageBeingBuilt
					{
						[Token(Token = "0x600152F")]
						[Address(RVA = "0x1C6A480", Offset = "0x1C6A480", VA = "0x1C6A480", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700044F")]
					public override AccelerometerEvent DefaultInstanceForType
					{
						[Token(Token = "0x6001532")]
						[Address(RVA = "0x1C6A5E4", Offset = "0x1C6A5E4", VA = "0x1C6A5E4", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000450")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6001538")]
						[Address(RVA = "0x1C6AE04", Offset = "0x1C6AE04", VA = "0x1C6AE04")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000451")]
					public long Timestamp
					{
						[Token(Token = "0x6001539")]
						[Address(RVA = "0x1C6AE20", Offset = "0x1C6AE20", VA = "0x1C6AE20")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x600153A")]
						[Address(RVA = "0x1C6A880", Offset = "0x1C6A880", VA = "0x1C6A880")]
						set
						{
						}
					}

					[Token(Token = "0x17000452")]
					public bool HasX
					{
						[Token(Token = "0x600153D")]
						[Address(RVA = "0x1C6AEC4", Offset = "0x1C6AEC4", VA = "0x1C6AEC4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000453")]
					public float X
					{
						[Token(Token = "0x600153E")]
						[Address(RVA = "0x1C6AEE0", Offset = "0x1C6AEE0", VA = "0x1C6AEE0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600153F")]
						[Address(RVA = "0x1C6A884", Offset = "0x1C6A884", VA = "0x1C6A884")]
						set
						{
						}
					}

					[Token(Token = "0x17000454")]
					public bool HasY
					{
						[Token(Token = "0x6001542")]
						[Address(RVA = "0x1C6AF8C", Offset = "0x1C6AF8C", VA = "0x1C6AF8C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000455")]
					public float Y
					{
						[Token(Token = "0x6001543")]
						[Address(RVA = "0x1C6AFA8", Offset = "0x1C6AFA8", VA = "0x1C6AFA8")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6001544")]
						[Address(RVA = "0x1C6A888", Offset = "0x1C6A888", VA = "0x1C6A888")]
						set
						{
						}
					}

					[Token(Token = "0x17000456")]
					public bool HasZ
					{
						[Token(Token = "0x6001547")]
						[Address(RVA = "0x1C6B054", Offset = "0x1C6B054", VA = "0x1C6B054")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000457")]
					public float Z
					{
						[Token(Token = "0x6001548")]
						[Address(RVA = "0x1C6B070", Offset = "0x1C6B070", VA = "0x1C6B070")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6001549")]
						[Address(RVA = "0x1C6A88C", Offset = "0x1C6A88C", VA = "0x1C6A88C")]
						set
						{
						}
					}

					[Token(Token = "0x600152B")]
					[Address(RVA = "0x1C6A294", Offset = "0x1C6A294", VA = "0x1C6A294")]
					public Builder()
					{
					}

					[Token(Token = "0x600152C")]
					[Address(RVA = "0x1C6A368", Offset = "0x1C6A368", VA = "0x1C6A368")]
					internal Builder(AccelerometerEvent cloneFrom)
					{
					}

					[Token(Token = "0x600152D")]
					[Address(RVA = "0x1C6A3D0", Offset = "0x1C6A3D0", VA = "0x1C6A3D0")]
					private AccelerometerEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6001530")]
					[Address(RVA = "0x1C6A484", Offset = "0x1C6A484", VA = "0x1C6A484", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6001531")]
					[Address(RVA = "0x1C6A53C", Offset = "0x1C6A53C", VA = "0x1C6A53C", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6001533")]
					[Address(RVA = "0x1C6A680", Offset = "0x1C6A680", VA = "0x1C6A680", Slot = "13")]
					public override AccelerometerEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6001534")]
					[Address(RVA = "0x1C6A6B8", Offset = "0x1C6A6B8", VA = "0x1C6A6B8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6001535")]
					[Address(RVA = "0x1C6A768", Offset = "0x1C6A768", VA = "0x1C6A768", Slot = "26")]
					public override Builder MergeFrom(AccelerometerEvent other)
					{
						return null;
					}

					[Token(Token = "0x6001536")]
					[Address(RVA = "0x1C6A890", Offset = "0x1C6A890", VA = "0x1C6A890", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6001537")]
					[Address(RVA = "0x1C6A950", Offset = "0x1C6A950", VA = "0x1C6A950", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x600153B")]
					[Address(RVA = "0x1C6AE3C", Offset = "0x1C6AE3C", VA = "0x1C6AE3C")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x600153C")]
					[Address(RVA = "0x1C6AE84", Offset = "0x1C6AE84", VA = "0x1C6AE84")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6001540")]
					[Address(RVA = "0x1C6AEFC", Offset = "0x1C6AEFC", VA = "0x1C6AEFC")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6001541")]
					[Address(RVA = "0x1C6AF4C", Offset = "0x1C6AF4C", VA = "0x1C6AF4C")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6001545")]
					[Address(RVA = "0x1C6AFC4", Offset = "0x1C6AFC4", VA = "0x1C6AFC4")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6001546")]
					[Address(RVA = "0x1C6B014", Offset = "0x1C6B014", VA = "0x1C6B014")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x600154A")]
					[Address(RVA = "0x1C6B08C", Offset = "0x1C6B08C", VA = "0x1C6B08C")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x600154B")]
					[Address(RVA = "0x1C6B0DC", Offset = "0x1C6B0DC", VA = "0x1C6B0DC")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x4001117")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly AccelerometerEvent defaultInstance;

				[Token(Token = "0x4001118")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _accelerometerEventFieldNames;

				[Token(Token = "0x4001119")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _accelerometerEventFieldTags;

				[Token(Token = "0x400111A")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x400111B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x400111C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x400111D")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x400111E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x400111F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4001120")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4001121")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4001122")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4001123")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4001124")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4001125")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x4001126")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700043F")]
				public static AccelerometerEvent DefaultInstance
				{
					[Token(Token = "0x6001509")]
					[Address(RVA = "0xCC91E8", Offset = "0xCC91E8", VA = "0xCC91E8")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000440")]
				public override AccelerometerEvent DefaultInstanceForType
				{
					[Token(Token = "0x600150A")]
					[Address(RVA = "0xCC924C", Offset = "0xCC924C", VA = "0xCC924C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000441")]
				protected override AccelerometerEvent ThisMessage
				{
					[Token(Token = "0x600150B")]
					[Address(RVA = "0xCC92E8", Offset = "0xCC92E8", VA = "0xCC92E8", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000442")]
				public bool HasTimestamp
				{
					[Token(Token = "0x600150C")]
					[Address(RVA = "0xCC92EC", Offset = "0xCC92EC", VA = "0xCC92EC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000443")]
				public long Timestamp
				{
					[Token(Token = "0x600150D")]
					[Address(RVA = "0xCC92F4", Offset = "0xCC92F4", VA = "0xCC92F4")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000444")]
				public bool HasX
				{
					[Token(Token = "0x600150E")]
					[Address(RVA = "0xCC92FC", Offset = "0xCC92FC", VA = "0xCC92FC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000445")]
				public float X
				{
					[Token(Token = "0x600150F")]
					[Address(RVA = "0xCC9304", Offset = "0xCC9304", VA = "0xCC9304")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000446")]
				public bool HasY
				{
					[Token(Token = "0x6001510")]
					[Address(RVA = "0xCC930C", Offset = "0xCC930C", VA = "0xCC930C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000447")]
				public float Y
				{
					[Token(Token = "0x6001511")]
					[Address(RVA = "0xCC9314", Offset = "0xCC9314", VA = "0xCC9314")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000448")]
				public bool HasZ
				{
					[Token(Token = "0x6001512")]
					[Address(RVA = "0xCC931C", Offset = "0xCC931C", VA = "0xCC931C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000449")]
				public float Z
				{
					[Token(Token = "0x6001513")]
					[Address(RVA = "0xCC9324", Offset = "0xCC9324", VA = "0xCC9324")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700044A")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6001514")]
					[Address(RVA = "0xCC932C", Offset = "0xCC932C", VA = "0xCC932C", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700044B")]
				public override int SerializedSize
				{
					[Token(Token = "0x6001516")]
					[Address(RVA = "0xCC9648", Offset = "0xCC9648", VA = "0xCC9648", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6001508")]
				[Address(RVA = "0xCC9194", Offset = "0xCC9194", VA = "0xCC9194")]
				private AccelerometerEvent()
				{
				}

				[Token(Token = "0x6001515")]
				[Address(RVA = "0xCC9334", Offset = "0xCC9334", VA = "0xCC9334", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6001517")]
				[Address(RVA = "0xCC97A8", Offset = "0xCC97A8", VA = "0xCC97A8", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6001518")]
				[Address(RVA = "0xCC9848", Offset = "0xCC9848", VA = "0xCC9848", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6001519")]
				[Address(RVA = "0xCC99A4", Offset = "0xCC99A4", VA = "0xCC99A4", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x600151A")]
				[Address(RVA = "0xCC9B4C", Offset = "0xCC9B4C", VA = "0xCC9B4C")]
				public static AccelerometerEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x600151B")]
				[Address(RVA = "0xCC9C48", Offset = "0xCC9C48", VA = "0xCC9C48")]
				public static AccelerometerEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600151C")]
				[Address(RVA = "0xCC9CFC", Offset = "0xCC9CFC", VA = "0xCC9CFC")]
				public static AccelerometerEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x600151D")]
				[Address(RVA = "0xCC9DA0", Offset = "0xCC9DA0", VA = "0xCC9DA0")]
				public static AccelerometerEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600151E")]
				[Address(RVA = "0xCC9E54", Offset = "0xCC9E54", VA = "0xCC9E54")]
				public static AccelerometerEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x600151F")]
				[Address(RVA = "0xCC9EF8", Offset = "0xCC9EF8", VA = "0xCC9EF8")]
				public static AccelerometerEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001520")]
				[Address(RVA = "0xCC9FAC", Offset = "0xCC9FAC", VA = "0xCC9FAC")]
				public static AccelerometerEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x6001521")]
				[Address(RVA = "0xCCA050", Offset = "0xCCA050", VA = "0xCCA050")]
				public static AccelerometerEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001522")]
				[Address(RVA = "0xCCA104", Offset = "0xCCA104", VA = "0xCCA104")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6001523")]
				[Address(RVA = "0xCCA19C", Offset = "0xCCA19C", VA = "0xCCA19C")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001524")]
				[Address(RVA = "0xCCA244", Offset = "0xCCA244", VA = "0xCCA244")]
				private AccelerometerEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6001525")]
				[Address(RVA = "0xCC9BF0", Offset = "0xCC9BF0", VA = "0xCC9BF0")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6001526")]
				[Address(RVA = "0xCCA248", Offset = "0xCCA248", VA = "0xCCA248", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6001527")]
				[Address(RVA = "0xCCA308", Offset = "0xCCA308", VA = "0xCCA308", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6001528")]
				[Address(RVA = "0xCCA2A8", Offset = "0xCCA2A8", VA = "0xCCA2A8")]
				public static Builder CreateBuilder(AccelerometerEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6001529")]
				[Address(RVA = "0xCCA360", Offset = "0xCCA360", VA = "0xCCA360")]
				static AccelerometerEvent()
				{
				}
			}

			[Token(Token = "0x20002F5")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC7D0", Offset = "0x7CC7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC7D0", Offset = "0x7CC7D0")]
			[DebuggerNonUserCode]
			public sealed class DepthMapEvent : GeneratedMessageLite<DepthMapEvent, DepthMapEvent.Builder>
			{
				[Token(Token = "0x20002F6")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC848", Offset = "0x7CC848")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC848", Offset = "0x7CC848")]
				public sealed class Builder : GeneratedBuilderLite<DepthMapEvent, Builder>
				{
					[Token(Token = "0x4001139")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400113A")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private DepthMapEvent result;

					[Token(Token = "0x17000465")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x600156F")]
						[Address(RVA = "0x1C6B11C", Offset = "0x1C6B11C", VA = "0x1C6B11C", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000466")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6001573")]
						[Address(RVA = "0x1C6B2EC", Offset = "0x1C6B2EC", VA = "0x1C6B2EC", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000467")]
					protected override DepthMapEvent MessageBeingBuilt
					{
						[Token(Token = "0x6001574")]
						[Address(RVA = "0x1C6B30C", Offset = "0x1C6B30C", VA = "0x1C6B30C", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000468")]
					public override DepthMapEvent DefaultInstanceForType
					{
						[Token(Token = "0x6001577")]
						[Address(RVA = "0x1C6B470", Offset = "0x1C6B470", VA = "0x1C6B470", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000469")]
					public bool HasTimestamp
					{
						[Token(Token = "0x600157D")]
						[Address(RVA = "0x1C6BD08", Offset = "0x1C6BD08", VA = "0x1C6BD08")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700046A")]
					public long Timestamp
					{
						[Token(Token = "0x600157E")]
						[Address(RVA = "0x1C6BD24", Offset = "0x1C6BD24", VA = "0x1C6BD24")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x600157F")]
						[Address(RVA = "0x1C6B750", Offset = "0x1C6B750", VA = "0x1C6B750")]
						set
						{
						}
					}

					[Token(Token = "0x1700046B")]
					public bool HasWidth
					{
						[Token(Token = "0x6001582")]
						[Address(RVA = "0x1C6BDC8", Offset = "0x1C6BDC8", VA = "0x1C6BDC8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700046C")]
					public int Width
					{
						[Token(Token = "0x6001583")]
						[Address(RVA = "0x1C6BDE4", Offset = "0x1C6BDE4", VA = "0x1C6BDE4")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6001584")]
						[Address(RVA = "0x1C6B754", Offset = "0x1C6B754", VA = "0x1C6B754")]
						set
						{
						}
					}

					[Token(Token = "0x1700046D")]
					public bool HasHeight
					{
						[Token(Token = "0x6001587")]
						[Address(RVA = "0x1C6BE88", Offset = "0x1C6BE88", VA = "0x1C6BE88")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700046E")]
					public int Height
					{
						[Token(Token = "0x6001588")]
						[Address(RVA = "0x1C6BEA4", Offset = "0x1C6BEA4", VA = "0x1C6BEA4")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6001589")]
						[Address(RVA = "0x1C6B758", Offset = "0x1C6B758", VA = "0x1C6B758")]
						set
						{
						}
					}

					[Token(Token = "0x1700046F")]
					public IPopsicleList<float> ZDistancesList
					{
						[Token(Token = "0x600158C")]
						[Address(RVA = "0x1C6BF48", Offset = "0x1C6BF48", VA = "0x1C6BF48")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000470")]
					public int ZDistancesCount
					{
						[Token(Token = "0x600158D")]
						[Address(RVA = "0x1C6BF68", Offset = "0x1C6BF68", VA = "0x1C6BF68")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x6001570")]
					[Address(RVA = "0x1C6B120", Offset = "0x1C6B120", VA = "0x1C6B120")]
					public Builder()
					{
					}

					[Token(Token = "0x6001571")]
					[Address(RVA = "0x1C6B1F4", Offset = "0x1C6B1F4", VA = "0x1C6B1F4")]
					internal Builder(DepthMapEvent cloneFrom)
					{
					}

					[Token(Token = "0x6001572")]
					[Address(RVA = "0x1C6B25C", Offset = "0x1C6B25C", VA = "0x1C6B25C")]
					private DepthMapEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6001575")]
					[Address(RVA = "0x1C6B310", Offset = "0x1C6B310", VA = "0x1C6B310", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6001576")]
					[Address(RVA = "0x1C6B3C8", Offset = "0x1C6B3C8", VA = "0x1C6B3C8", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6001578")]
					[Address(RVA = "0x1C6B50C", Offset = "0x1C6B50C", VA = "0x1C6B50C", Slot = "13")]
					public override DepthMapEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6001579")]
					[Address(RVA = "0x1C6B544", Offset = "0x1C6B544", VA = "0x1C6B544", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x600157A")]
					[Address(RVA = "0x1C6B5F4", Offset = "0x1C6B5F4", VA = "0x1C6B5F4", Slot = "26")]
					public override Builder MergeFrom(DepthMapEvent other)
					{
						return null;
					}

					[Token(Token = "0x600157B")]
					[Address(RVA = "0x1C6B75C", Offset = "0x1C6B75C", VA = "0x1C6B75C", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x600157C")]
					[Address(RVA = "0x1C6B81C", Offset = "0x1C6B81C", VA = "0x1C6B81C", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6001580")]
					[Address(RVA = "0x1C6BD40", Offset = "0x1C6BD40", VA = "0x1C6BD40")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6001581")]
					[Address(RVA = "0x1C6BD88", Offset = "0x1C6BD88", VA = "0x1C6BD88")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6001585")]
					[Address(RVA = "0x1C6BE00", Offset = "0x1C6BE00", VA = "0x1C6BE00")]
					public Builder SetWidth(int value)
					{
						return null;
					}

					[Token(Token = "0x6001586")]
					[Address(RVA = "0x1C6BE48", Offset = "0x1C6BE48", VA = "0x1C6BE48")]
					public Builder ClearWidth()
					{
						return null;
					}

					[Token(Token = "0x600158A")]
					[Address(RVA = "0x1C6BEC0", Offset = "0x1C6BEC0", VA = "0x1C6BEC0")]
					public Builder SetHeight(int value)
					{
						return null;
					}

					[Token(Token = "0x600158B")]
					[Address(RVA = "0x1C6BF08", Offset = "0x1C6BF08", VA = "0x1C6BF08")]
					public Builder ClearHeight()
					{
						return null;
					}

					[Token(Token = "0x600158E")]
					[Address(RVA = "0x1C6BF84", Offset = "0x1C6BF84", VA = "0x1C6BF84")]
					public float GetZDistances(int index)
					{
						return default(float);
					}

					[Token(Token = "0x600158F")]
					[Address(RVA = "0x1C6BFA0", Offset = "0x1C6BFA0", VA = "0x1C6BFA0")]
					public Builder SetZDistances(int index, float value)
					{
						return null;
					}

					[Token(Token = "0x6001590")]
					[Address(RVA = "0x1C6C02C", Offset = "0x1C6C02C", VA = "0x1C6C02C")]
					public Builder AddZDistances(float value)
					{
						return null;
					}

					[Token(Token = "0x6001591")]
					[Address(RVA = "0x1C6C0A8", Offset = "0x1C6C0A8", VA = "0x1C6C0A8")]
					public Builder AddRangeZDistances(IEnumerable<float> values)
					{
						return null;
					}

					[Token(Token = "0x6001592")]
					[Address(RVA = "0x1C6C124", Offset = "0x1C6C124", VA = "0x1C6C124")]
					public Builder ClearZDistances()
					{
						return null;
					}
				}

				[Token(Token = "0x4001129")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly DepthMapEvent defaultInstance;

				[Token(Token = "0x400112A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _depthMapEventFieldNames;

				[Token(Token = "0x400112B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _depthMapEventFieldTags;

				[Token(Token = "0x400112C")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x400112D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x400112E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x400112F")]
				public const int WidthFieldNumber = 2;

				[Token(Token = "0x4001130")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasWidth;

				[Token(Token = "0x4001131")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int width_;

				[Token(Token = "0x4001132")]
				public const int HeightFieldNumber = 3;

				[Token(Token = "0x4001133")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasHeight;

				[Token(Token = "0x4001134")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private int height_;

				[Token(Token = "0x4001135")]
				public const int ZDistancesFieldNumber = 4;

				[Token(Token = "0x4001136")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int zDistancesMemoizedSerializedSize;

				[Token(Token = "0x4001137")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private PopsicleList<float> zDistances_;

				[Token(Token = "0x4001138")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000458")]
				public static DepthMapEvent DefaultInstance
				{
					[Token(Token = "0x600154D")]
					[Address(RVA = "0xCCA630", Offset = "0xCCA630", VA = "0xCCA630")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000459")]
				public override DepthMapEvent DefaultInstanceForType
				{
					[Token(Token = "0x600154E")]
					[Address(RVA = "0xCCA694", Offset = "0xCCA694", VA = "0xCCA694", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700045A")]
				protected override DepthMapEvent ThisMessage
				{
					[Token(Token = "0x600154F")]
					[Address(RVA = "0xCCA730", Offset = "0xCCA730", VA = "0xCCA730", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700045B")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6001550")]
					[Address(RVA = "0xCCA734", Offset = "0xCCA734", VA = "0xCCA734")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700045C")]
				public long Timestamp
				{
					[Token(Token = "0x6001551")]
					[Address(RVA = "0xCCA73C", Offset = "0xCCA73C", VA = "0xCCA73C")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700045D")]
				public bool HasWidth
				{
					[Token(Token = "0x6001552")]
					[Address(RVA = "0xCCA744", Offset = "0xCCA744", VA = "0xCCA744")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700045E")]
				public int Width
				{
					[Token(Token = "0x6001553")]
					[Address(RVA = "0xCCA74C", Offset = "0xCCA74C", VA = "0xCCA74C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700045F")]
				public bool HasHeight
				{
					[Token(Token = "0x6001554")]
					[Address(RVA = "0xCCA754", Offset = "0xCCA754", VA = "0xCCA754")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000460")]
				public int Height
				{
					[Token(Token = "0x6001555")]
					[Address(RVA = "0xCCA75C", Offset = "0xCCA75C", VA = "0xCCA75C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000461")]
				public IList<float> ZDistancesList
				{
					[Token(Token = "0x6001556")]
					[Address(RVA = "0xCCA764", Offset = "0xCCA764", VA = "0xCCA764")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000462")]
				public int ZDistancesCount
				{
					[Token(Token = "0x6001557")]
					[Address(RVA = "0xCCA7B0", Offset = "0xCCA7B0", VA = "0xCCA7B0")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000463")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6001559")]
					[Address(RVA = "0xCCA868", Offset = "0xCCA868", VA = "0xCCA868", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000464")]
				public override int SerializedSize
				{
					[Token(Token = "0x600155B")]
					[Address(RVA = "0xCCABB0", Offset = "0xCCABB0", VA = "0xCCABB0", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x600154C")]
				[Address(RVA = "0xCCA59C", Offset = "0xCCA59C", VA = "0xCCA59C")]
				private DepthMapEvent()
				{
				}

				[Token(Token = "0x6001558")]
				[Address(RVA = "0xCCA804", Offset = "0xCCA804", VA = "0xCCA804")]
				public float GetZDistances(int index)
				{
					return default(float);
				}

				[Token(Token = "0x600155A")]
				[Address(RVA = "0xCCA870", Offset = "0xCCA870", VA = "0xCCA870", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x600155C")]
				[Address(RVA = "0xCCAD50", Offset = "0xCCAD50", VA = "0xCCAD50", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x600155D")]
				[Address(RVA = "0xCCB024", Offset = "0xCCB024", VA = "0xCCB024", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x600155E")]
				[Address(RVA = "0xCCB210", Offset = "0xCCB210", VA = "0xCCB210", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x600155F")]
				[Address(RVA = "0xCCB3AC", Offset = "0xCCB3AC", VA = "0xCCB3AC")]
				public static DepthMapEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6001560")]
				[Address(RVA = "0xCCB4A8", Offset = "0xCCB4A8", VA = "0xCCB4A8")]
				public static DepthMapEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001561")]
				[Address(RVA = "0xCCB55C", Offset = "0xCCB55C", VA = "0xCCB55C")]
				public static DepthMapEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6001562")]
				[Address(RVA = "0xCCB600", Offset = "0xCCB600", VA = "0xCCB600")]
				public static DepthMapEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001563")]
				[Address(RVA = "0xCCB6B4", Offset = "0xCCB6B4", VA = "0xCCB6B4")]
				public static DepthMapEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x6001564")]
				[Address(RVA = "0xCCB758", Offset = "0xCCB758", VA = "0xCCB758")]
				public static DepthMapEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001565")]
				[Address(RVA = "0xCCB80C", Offset = "0xCCB80C", VA = "0xCCB80C")]
				public static DepthMapEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x6001566")]
				[Address(RVA = "0xCCB8B0", Offset = "0xCCB8B0", VA = "0xCCB8B0")]
				public static DepthMapEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001567")]
				[Address(RVA = "0xCCB964", Offset = "0xCCB964", VA = "0xCCB964")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6001568")]
				[Address(RVA = "0xCCB9FC", Offset = "0xCCB9FC", VA = "0xCCB9FC")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6001569")]
				[Address(RVA = "0xCCBAA4", Offset = "0xCCBAA4", VA = "0xCCBAA4")]
				private DepthMapEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x600156A")]
				[Address(RVA = "0xCCB450", Offset = "0xCCB450", VA = "0xCCB450")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x600156B")]
				[Address(RVA = "0xCCBB00", Offset = "0xCCBB00", VA = "0xCCBB00", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x600156C")]
				[Address(RVA = "0xCCBBC0", Offset = "0xCCBBC0", VA = "0xCCBBC0", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x600156D")]
				[Address(RVA = "0xCCBB60", Offset = "0xCCBB60", VA = "0xCCBB60")]
				public static Builder CreateBuilder(DepthMapEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x600156E")]
				[Address(RVA = "0xCCBC18", Offset = "0xCCBC18", VA = "0xCCBC18")]
				static DepthMapEvent()
				{
				}
			}

			[Token(Token = "0x20002F7")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC8C0", Offset = "0x7CC8C0")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC8C0", Offset = "0x7CC8C0")]
			public sealed class OrientationEvent : GeneratedMessageLite<OrientationEvent, OrientationEvent.Builder>
			{
				[Token(Token = "0x20002F8")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC930", Offset = "0x7CC930")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC930", Offset = "0x7CC930")]
				public sealed class Builder : GeneratedBuilderLite<OrientationEvent, Builder>
				{
					[Token(Token = "0x400114E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400114F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private OrientationEvent result;

					[Token(Token = "0x17000480")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60015B7")]
						[Address(RVA = "0x1C6ED0C", Offset = "0x1C6ED0C", VA = "0x1C6ED0C", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000481")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60015BB")]
						[Address(RVA = "0x1C6ED9C", Offset = "0x1C6ED9C", VA = "0x1C6ED9C", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000482")]
					protected override OrientationEvent MessageBeingBuilt
					{
						[Token(Token = "0x60015BC")]
						[Address(RVA = "0x1C6EDBC", Offset = "0x1C6EDBC", VA = "0x1C6EDBC", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000483")]
					public override OrientationEvent DefaultInstanceForType
					{
						[Token(Token = "0x60015BF")]
						[Address(RVA = "0x1C6EF20", Offset = "0x1C6EF20", VA = "0x1C6EF20", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000484")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60015C5")]
						[Address(RVA = "0x1C6F7E0", Offset = "0x1C6F7E0", VA = "0x1C6F7E0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000485")]
					public long Timestamp
					{
						[Token(Token = "0x60015C6")]
						[Address(RVA = "0x1C6F7FC", Offset = "0x1C6F7FC", VA = "0x1C6F7FC")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60015C7")]
						[Address(RVA = "0x1C6F1CC", Offset = "0x1C6F1CC", VA = "0x1C6F1CC")]
						set
						{
						}
					}

					[Token(Token = "0x17000486")]
					public bool HasX
					{
						[Token(Token = "0x60015CA")]
						[Address(RVA = "0x1C6F8A0", Offset = "0x1C6F8A0", VA = "0x1C6F8A0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000487")]
					public float X
					{
						[Token(Token = "0x60015CB")]
						[Address(RVA = "0x1C6F8BC", Offset = "0x1C6F8BC", VA = "0x1C6F8BC")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60015CC")]
						[Address(RVA = "0x1C6F1D0", Offset = "0x1C6F1D0", VA = "0x1C6F1D0")]
						set
						{
						}
					}

					[Token(Token = "0x17000488")]
					public bool HasY
					{
						[Token(Token = "0x60015CF")]
						[Address(RVA = "0x1C6F968", Offset = "0x1C6F968", VA = "0x1C6F968")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000489")]
					public float Y
					{
						[Token(Token = "0x60015D0")]
						[Address(RVA = "0x1C6F984", Offset = "0x1C6F984", VA = "0x1C6F984")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60015D1")]
						[Address(RVA = "0x1C6F1D4", Offset = "0x1C6F1D4", VA = "0x1C6F1D4")]
						set
						{
						}
					}

					[Token(Token = "0x1700048A")]
					public bool HasZ
					{
						[Token(Token = "0x60015D4")]
						[Address(RVA = "0x1C6FA30", Offset = "0x1C6FA30", VA = "0x1C6FA30")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700048B")]
					public float Z
					{
						[Token(Token = "0x60015D5")]
						[Address(RVA = "0x1C6FA4C", Offset = "0x1C6FA4C", VA = "0x1C6FA4C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60015D6")]
						[Address(RVA = "0x1C6F1D8", Offset = "0x1C6F1D8", VA = "0x1C6F1D8")]
						set
						{
						}
					}

					[Token(Token = "0x1700048C")]
					public bool HasW
					{
						[Token(Token = "0x60015D9")]
						[Address(RVA = "0x1C6FAF8", Offset = "0x1C6FAF8", VA = "0x1C6FAF8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700048D")]
					public float W
					{
						[Token(Token = "0x60015DA")]
						[Address(RVA = "0x1C6FB14", Offset = "0x1C6FB14", VA = "0x1C6FB14")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60015DB")]
						[Address(RVA = "0x1C6F1DC", Offset = "0x1C6F1DC", VA = "0x1C6F1DC")]
						set
						{
						}
					}

					[Token(Token = "0x60015B8")]
					[Address(RVA = "0x1C69C7C", Offset = "0x1C69C7C", VA = "0x1C69C7C")]
					public Builder()
					{
					}

					[Token(Token = "0x60015B9")]
					[Address(RVA = "0x1C69E60", Offset = "0x1C69E60", VA = "0x1C69E60")]
					internal Builder(OrientationEvent cloneFrom)
					{
					}

					[Token(Token = "0x60015BA")]
					[Address(RVA = "0x1C6ED10", Offset = "0x1C6ED10", VA = "0x1C6ED10")]
					private OrientationEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60015BD")]
					[Address(RVA = "0x1C6EDC0", Offset = "0x1C6EDC0", VA = "0x1C6EDC0", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60015BE")]
					[Address(RVA = "0x1C6EE78", Offset = "0x1C6EE78", VA = "0x1C6EE78", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60015C0")]
					[Address(RVA = "0x1C6EFBC", Offset = "0x1C6EFBC", VA = "0x1C6EFBC", Slot = "13")]
					public override OrientationEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60015C1")]
					[Address(RVA = "0x1C6EFF0", Offset = "0x1C6EFF0", VA = "0x1C6EFF0", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60015C2")]
					[Address(RVA = "0x1C6F0A0", Offset = "0x1C6F0A0", VA = "0x1C6F0A0", Slot = "26")]
					public override Builder MergeFrom(OrientationEvent other)
					{
						return null;
					}

					[Token(Token = "0x60015C3")]
					[Address(RVA = "0x1C6F1E0", Offset = "0x1C6F1E0", VA = "0x1C6F1E0", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60015C4")]
					[Address(RVA = "0x1C6F2A0", Offset = "0x1C6F2A0", VA = "0x1C6F2A0", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60015C8")]
					[Address(RVA = "0x1C6F818", Offset = "0x1C6F818", VA = "0x1C6F818")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60015C9")]
					[Address(RVA = "0x1C6F860", Offset = "0x1C6F860", VA = "0x1C6F860")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60015CD")]
					[Address(RVA = "0x1C6F8D8", Offset = "0x1C6F8D8", VA = "0x1C6F8D8")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x60015CE")]
					[Address(RVA = "0x1C6F928", Offset = "0x1C6F928", VA = "0x1C6F928")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x60015D2")]
					[Address(RVA = "0x1C6F9A0", Offset = "0x1C6F9A0", VA = "0x1C6F9A0")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x60015D3")]
					[Address(RVA = "0x1C6F9F0", Offset = "0x1C6F9F0", VA = "0x1C6F9F0")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x60015D7")]
					[Address(RVA = "0x1C6FA68", Offset = "0x1C6FA68", VA = "0x1C6FA68")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x60015D8")]
					[Address(RVA = "0x1C6FAB8", Offset = "0x1C6FAB8", VA = "0x1C6FAB8")]
					public Builder ClearZ()
					{
						return null;
					}

					[Token(Token = "0x60015DC")]
					[Address(RVA = "0x1C6FB30", Offset = "0x1C6FB30", VA = "0x1C6FB30")]
					public Builder SetW(float value)
					{
						return null;
					}

					[Token(Token = "0x60015DD")]
					[Address(RVA = "0x1C6FB80", Offset = "0x1C6FB80", VA = "0x1C6FB80")]
					public Builder ClearW()
					{
						return null;
					}
				}

				[Token(Token = "0x400113B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly OrientationEvent defaultInstance;

				[Token(Token = "0x400113C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _orientationEventFieldNames;

				[Token(Token = "0x400113D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _orientationEventFieldTags;

				[Token(Token = "0x400113E")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x400113F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4001140")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4001141")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x4001142")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x4001143")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4001144")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4001145")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4001146")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4001147")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4001148")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4001149")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x400114A")]
				public const int WFieldNumber = 5;

				[Token(Token = "0x400114B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private bool hasW;

				[Token(Token = "0x400114C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float w_;

				[Token(Token = "0x400114D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000471")]
				public static OrientationEvent DefaultInstance
				{
					[Token(Token = "0x6001594")]
					[Address(RVA = "0x1C68AA0", Offset = "0x1C68AA0", VA = "0x1C68AA0")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000472")]
				public override OrientationEvent DefaultInstanceForType
				{
					[Token(Token = "0x6001595")]
					[Address(RVA = "0x1C68B04", Offset = "0x1C68B04", VA = "0x1C68B04", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000473")]
				protected override OrientationEvent ThisMessage
				{
					[Token(Token = "0x6001596")]
					[Address(RVA = "0x1C68BA0", Offset = "0x1C68BA0", VA = "0x1C68BA0", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000474")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6001597")]
					[Address(RVA = "0x1C68BA4", Offset = "0x1C68BA4", VA = "0x1C68BA4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000475")]
				public long Timestamp
				{
					[Token(Token = "0x6001598")]
					[Address(RVA = "0x1C68BAC", Offset = "0x1C68BAC", VA = "0x1C68BAC")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000476")]
				public bool HasX
				{
					[Token(Token = "0x6001599")]
					[Address(RVA = "0x1C68BB4", Offset = "0x1C68BB4", VA = "0x1C68BB4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000477")]
				public float X
				{
					[Token(Token = "0x600159A")]
					[Address(RVA = "0x1C68BBC", Offset = "0x1C68BBC", VA = "0x1C68BBC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000478")]
				public bool HasY
				{
					[Token(Token = "0x600159B")]
					[Address(RVA = "0x1C68BC4", Offset = "0x1C68BC4", VA = "0x1C68BC4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000479")]
				public float Y
				{
					[Token(Token = "0x600159C")]
					[Address(RVA = "0x1C68BCC", Offset = "0x1C68BCC", VA = "0x1C68BCC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700047A")]
				public bool HasZ
				{
					[Token(Token = "0x600159D")]
					[Address(RVA = "0x1C68BD4", Offset = "0x1C68BD4", VA = "0x1C68BD4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700047B")]
				public float Z
				{
					[Token(Token = "0x600159E")]
					[Address(RVA = "0x1C68BDC", Offset = "0x1C68BDC", VA = "0x1C68BDC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700047C")]
				public bool HasW
				{
					[Token(Token = "0x600159F")]
					[Address(RVA = "0x1C68BE4", Offset = "0x1C68BE4", VA = "0x1C68BE4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700047D")]
				public float W
				{
					[Token(Token = "0x60015A0")]
					[Address(RVA = "0x1C68BEC", Offset = "0x1C68BEC", VA = "0x1C68BEC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700047E")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60015A1")]
					[Address(RVA = "0x1C68BF4", Offset = "0x1C68BF4", VA = "0x1C68BF4", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700047F")]
				public override int SerializedSize
				{
					[Token(Token = "0x60015A3")]
					[Address(RVA = "0x1C68FA8", Offset = "0x1C68FA8", VA = "0x1C68FA8", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6001593")]
				[Address(RVA = "0x1C68A4C", Offset = "0x1C68A4C", VA = "0x1C68A4C")]
				private OrientationEvent()
				{
				}

				[Token(Token = "0x60015A2")]
				[Address(RVA = "0x1C68BFC", Offset = "0x1C68BFC", VA = "0x1C68BFC", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60015A4")]
				[Address(RVA = "0x1C69148", Offset = "0x1C69148", VA = "0x1C69148", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60015A5")]
				[Address(RVA = "0x1C69200", Offset = "0x1C69200", VA = "0x1C69200", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60015A6")]
				[Address(RVA = "0x1C69394", Offset = "0x1C69394", VA = "0x1C69394", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60015A7")]
				[Address(RVA = "0x1C69584", Offset = "0x1C69584", VA = "0x1C69584")]
				public static OrientationEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60015A8")]
				[Address(RVA = "0x1C6967C", Offset = "0x1C6967C", VA = "0x1C6967C")]
				public static OrientationEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015A9")]
				[Address(RVA = "0x1C69730", Offset = "0x1C69730", VA = "0x1C69730")]
				public static OrientationEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60015AA")]
				[Address(RVA = "0x1C697D4", Offset = "0x1C697D4", VA = "0x1C697D4")]
				public static OrientationEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015AB")]
				[Address(RVA = "0x1C69888", Offset = "0x1C69888", VA = "0x1C69888")]
				public static OrientationEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60015AC")]
				[Address(RVA = "0x1C6992C", Offset = "0x1C6992C", VA = "0x1C6992C")]
				public static OrientationEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015AD")]
				[Address(RVA = "0x1C699E0", Offset = "0x1C699E0", VA = "0x1C699E0")]
				public static OrientationEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60015AE")]
				[Address(RVA = "0x1C69A84", Offset = "0x1C69A84", VA = "0x1C69A84")]
				public static OrientationEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015AF")]
				[Address(RVA = "0x1C69B38", Offset = "0x1C69B38", VA = "0x1C69B38")]
				public static OrientationEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60015B0")]
				[Address(RVA = "0x1C69BD0", Offset = "0x1C69BD0", VA = "0x1C69BD0")]
				public static OrientationEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015B1")]
				[Address(RVA = "0x1C69C78", Offset = "0x1C69C78", VA = "0x1C69C78")]
				private OrientationEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60015B2")]
				[Address(RVA = "0x1C69628", Offset = "0x1C69628", VA = "0x1C69628")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60015B3")]
				[Address(RVA = "0x1C69D50", Offset = "0x1C69D50", VA = "0x1C69D50", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60015B4")]
				[Address(RVA = "0x1C69E0C", Offset = "0x1C69E0C", VA = "0x1C69E0C", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60015B5")]
				[Address(RVA = "0x1C69DB0", Offset = "0x1C69DB0", VA = "0x1C69DB0")]
				public static Builder CreateBuilder(OrientationEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60015B6")]
				[Address(RVA = "0x1C69EC8", Offset = "0x1C69EC8", VA = "0x1C69EC8")]
				static OrientationEvent()
				{
				}
			}

			[Token(Token = "0x20002F9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC9A0", Offset = "0x7CC9A0")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CC9A0", Offset = "0x7CC9A0")]
			public sealed class KeyEvent : GeneratedMessageLite<KeyEvent, KeyEvent.Builder>
			{
				[Token(Token = "0x20002FA")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CCA10", Offset = "0x7CCA10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCA10", Offset = "0x7CCA10")]
				[DebuggerNonUserCode]
				public sealed class Builder : GeneratedBuilderLite<KeyEvent, Builder>
				{
					[Token(Token = "0x400115A")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400115B")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private KeyEvent result;

					[Token(Token = "0x17000497")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60015FC")]
						[Address(RVA = "0x1C6D01C", Offset = "0x1C6D01C", VA = "0x1C6D01C", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000498")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6001600")]
						[Address(RVA = "0x1C6D1EC", Offset = "0x1C6D1EC", VA = "0x1C6D1EC", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000499")]
					protected override KeyEvent MessageBeingBuilt
					{
						[Token(Token = "0x6001601")]
						[Address(RVA = "0x1C6D20C", Offset = "0x1C6D20C", VA = "0x1C6D20C", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700049A")]
					public override KeyEvent DefaultInstanceForType
					{
						[Token(Token = "0x6001604")]
						[Address(RVA = "0x1C6D370", Offset = "0x1C6D370", VA = "0x1C6D370", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700049B")]
					public bool HasAction
					{
						[Token(Token = "0x600160A")]
						[Address(RVA = "0x1C6DA48", Offset = "0x1C6DA48", VA = "0x1C6DA48")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700049C")]
					public int Action
					{
						[Token(Token = "0x600160B")]
						[Address(RVA = "0x1C6DA64", Offset = "0x1C6DA64", VA = "0x1C6DA64")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x600160C")]
						[Address(RVA = "0x1C6D5E4", Offset = "0x1C6D5E4", VA = "0x1C6D5E4")]
						set
						{
						}
					}

					[Token(Token = "0x1700049D")]
					public bool HasCode
					{
						[Token(Token = "0x600160F")]
						[Address(RVA = "0x1C6DB08", Offset = "0x1C6DB08", VA = "0x1C6DB08")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700049E")]
					public int Code
					{
						[Token(Token = "0x6001610")]
						[Address(RVA = "0x1C6DB24", Offset = "0x1C6DB24", VA = "0x1C6DB24")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6001611")]
						[Address(RVA = "0x1C6D5E8", Offset = "0x1C6D5E8", VA = "0x1C6D5E8")]
						set
						{
						}
					}

					[Token(Token = "0x60015FD")]
					[Address(RVA = "0x1C6D020", Offset = "0x1C6D020", VA = "0x1C6D020")]
					public Builder()
					{
					}

					[Token(Token = "0x60015FE")]
					[Address(RVA = "0x1C6D0F4", Offset = "0x1C6D0F4", VA = "0x1C6D0F4")]
					internal Builder(KeyEvent cloneFrom)
					{
					}

					[Token(Token = "0x60015FF")]
					[Address(RVA = "0x1C6D15C", Offset = "0x1C6D15C", VA = "0x1C6D15C")]
					private KeyEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6001602")]
					[Address(RVA = "0x1C6D210", Offset = "0x1C6D210", VA = "0x1C6D210", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6001603")]
					[Address(RVA = "0x1C6D2C8", Offset = "0x1C6D2C8", VA = "0x1C6D2C8", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6001605")]
					[Address(RVA = "0x1C6D40C", Offset = "0x1C6D40C", VA = "0x1C6D40C", Slot = "13")]
					public override KeyEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6001606")]
					[Address(RVA = "0x1C6D444", Offset = "0x1C6D444", VA = "0x1C6D444", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6001607")]
					[Address(RVA = "0x1C6D4F4", Offset = "0x1C6D4F4", VA = "0x1C6D4F4", Slot = "26")]
					public override Builder MergeFrom(KeyEvent other)
					{
						return null;
					}

					[Token(Token = "0x6001608")]
					[Address(RVA = "0x1C6D5EC", Offset = "0x1C6D5EC", VA = "0x1C6D5EC", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6001609")]
					[Address(RVA = "0x1C6D6AC", Offset = "0x1C6D6AC", VA = "0x1C6D6AC", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x600160D")]
					[Address(RVA = "0x1C6DA80", Offset = "0x1C6DA80", VA = "0x1C6DA80")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x600160E")]
					[Address(RVA = "0x1C6DAC8", Offset = "0x1C6DAC8", VA = "0x1C6DAC8")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6001612")]
					[Address(RVA = "0x1C6DB40", Offset = "0x1C6DB40", VA = "0x1C6DB40")]
					public Builder SetCode(int value)
					{
						return null;
					}

					[Token(Token = "0x6001613")]
					[Address(RVA = "0x1C6DB88", Offset = "0x1C6DB88", VA = "0x1C6DB88")]
					public Builder ClearCode()
					{
						return null;
					}
				}

				[Token(Token = "0x4001150")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly KeyEvent defaultInstance;

				[Token(Token = "0x4001151")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _keyEventFieldNames;

				[Token(Token = "0x4001152")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _keyEventFieldTags;

				[Token(Token = "0x4001153")]
				public const int ActionFieldNumber = 1;

				[Token(Token = "0x4001154")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasAction;

				[Token(Token = "0x4001155")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				private int action_;

				[Token(Token = "0x4001156")]
				public const int CodeFieldNumber = 2;

				[Token(Token = "0x4001157")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasCode;

				[Token(Token = "0x4001158")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int code_;

				[Token(Token = "0x4001159")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700048E")]
				public static KeyEvent DefaultInstance
				{
					[Token(Token = "0x60015DF")]
					[Address(RVA = "0xCCD2B8", Offset = "0xCCD2B8", VA = "0xCCD2B8")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700048F")]
				public override KeyEvent DefaultInstanceForType
				{
					[Token(Token = "0x60015E0")]
					[Address(RVA = "0xCCD31C", Offset = "0xCCD31C", VA = "0xCCD31C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000490")]
				protected override KeyEvent ThisMessage
				{
					[Token(Token = "0x60015E1")]
					[Address(RVA = "0xCCD3B8", Offset = "0xCCD3B8", VA = "0xCCD3B8", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000491")]
				public bool HasAction
				{
					[Token(Token = "0x60015E2")]
					[Address(RVA = "0xCCD3BC", Offset = "0xCCD3BC", VA = "0xCCD3BC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000492")]
				public int Action
				{
					[Token(Token = "0x60015E3")]
					[Address(RVA = "0xCCD3C4", Offset = "0xCCD3C4", VA = "0xCCD3C4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000493")]
				public bool HasCode
				{
					[Token(Token = "0x60015E4")]
					[Address(RVA = "0xCCD3CC", Offset = "0xCCD3CC", VA = "0xCCD3CC")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000494")]
				public int Code
				{
					[Token(Token = "0x60015E5")]
					[Address(RVA = "0xCCD3D4", Offset = "0xCCD3D4", VA = "0xCCD3D4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000495")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60015E6")]
					[Address(RVA = "0xCCD3DC", Offset = "0xCCD3DC", VA = "0xCCD3DC", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000496")]
				public override int SerializedSize
				{
					[Token(Token = "0x60015E8")]
					[Address(RVA = "0xCCD5C0", Offset = "0xCCD5C0", VA = "0xCCD5C0", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60015DE")]
				[Address(RVA = "0xCCD264", Offset = "0xCCD264", VA = "0xCCD264")]
				private KeyEvent()
				{
				}

				[Token(Token = "0x60015E7")]
				[Address(RVA = "0xCCD3E4", Offset = "0xCCD3E4", VA = "0xCCD3E4", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60015E9")]
				[Address(RVA = "0xCCD6A0", Offset = "0xCCD6A0", VA = "0xCCD6A0", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60015EA")]
				[Address(RVA = "0xCCD710", Offset = "0xCCD710", VA = "0xCCD710", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60015EB")]
				[Address(RVA = "0xCCD7FC", Offset = "0xCCD7FC", VA = "0xCCD7FC", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60015EC")]
				[Address(RVA = "0xCCD8F8", Offset = "0xCCD8F8", VA = "0xCCD8F8")]
				public static KeyEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60015ED")]
				[Address(RVA = "0xCCD9F4", Offset = "0xCCD9F4", VA = "0xCCD9F4")]
				public static KeyEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015EE")]
				[Address(RVA = "0xCCDAA8", Offset = "0xCCDAA8", VA = "0xCCDAA8")]
				public static KeyEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60015EF")]
				[Address(RVA = "0xCCDB4C", Offset = "0xCCDB4C", VA = "0xCCDB4C")]
				public static KeyEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015F0")]
				[Address(RVA = "0xCCDC00", Offset = "0xCCDC00", VA = "0xCCDC00")]
				public static KeyEvent ParseFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60015F1")]
				[Address(RVA = "0xCCDCA4", Offset = "0xCCDCA4", VA = "0xCCDCA4")]
				public static KeyEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015F2")]
				[Address(RVA = "0xCCDD58", Offset = "0xCCDD58", VA = "0xCCDD58")]
				public static KeyEvent ParseDelimitedFrom(System.IO.Stream input)
				{
					return null;
				}

				[Token(Token = "0x60015F3")]
				[Address(RVA = "0xCCDDFC", Offset = "0xCCDDFC", VA = "0xCCDDFC")]
				public static KeyEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015F4")]
				[Address(RVA = "0xCCDEB0", Offset = "0xCCDEB0", VA = "0xCCDEB0")]
				public static KeyEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60015F5")]
				[Address(RVA = "0xCCDF48", Offset = "0xCCDF48", VA = "0xCCDF48")]
				public static KeyEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60015F6")]
				[Address(RVA = "0xCCDFF0", Offset = "0xCCDFF0", VA = "0xCCDFF0")]
				private KeyEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60015F7")]
				[Address(RVA = "0xCCD99C", Offset = "0xCCD99C", VA = "0xCCD99C")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60015F8")]
				[Address(RVA = "0xCCDFF4", Offset = "0xCCDFF4", VA = "0xCCDFF4", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60015F9")]
				[Address(RVA = "0xCCE0B4", Offset = "0xCCE0B4", VA = "0xCCE0B4", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60015FA")]
				[Address(RVA = "0xCCE054", Offset = "0xCCE054", VA = "0xCCE054")]
				public static Builder CreateBuilder(KeyEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60015FB")]
				[Address(RVA = "0xCCE10C", Offset = "0xCCE10C", VA = "0xCCE10C")]
				static KeyEvent()
				{
				}
			}
		}

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CCA88", Offset = "0x7CCA88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCA88", Offset = "0x7CCA88")]
		[DebuggerNonUserCode]
		public sealed class Builder : GeneratedBuilderLite<PhoneEvent, Builder>
		{
			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool resultIsReadOnly;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PhoneEvent result;

			[Token(Token = "0x1700049F")]
			protected override Builder ThisBuilder
			{
				[Token(Token = "0x6001614")]
				[Address(RVA = "0xDBCAC8", Offset = "0xDBCAC8", VA = "0xDBCAC8", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			public override bool IsInitialized
			{
				[Token(Token = "0x6001618")]
				[Address(RVA = "0xDBCC98", Offset = "0xDBCC98", VA = "0xDBCC98", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A1")]
			protected override PhoneEvent MessageBeingBuilt
			{
				[Token(Token = "0x6001619")]
				[Address(RVA = "0xDBCCB8", Offset = "0xDBCCB8", VA = "0xDBCCB8", Slot = "25")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			public override PhoneEvent DefaultInstanceForType
			{
				[Token(Token = "0x600161C")]
				[Address(RVA = "0xDBCE1C", Offset = "0xDBCE1C", VA = "0xDBCE1C", Slot = "9")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			public bool HasType
			{
				[Token(Token = "0x6001622")]
				[Address(RVA = "0xDBE560", Offset = "0xDBE560", VA = "0xDBE560")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A4")]
			public Types.Type Type
			{
				[Token(Token = "0x6001623")]
				[Address(RVA = "0xDBE57C", Offset = "0xDBE57C", VA = "0xDBE57C")]
				get
				{
					return default(Types.Type);
				}
				[Token(Token = "0x6001624")]
				[Address(RVA = "0xDBD13C", Offset = "0xDBD13C", VA = "0xDBD13C")]
				set
				{
				}
			}

			[Token(Token = "0x170004A5")]
			public bool HasMotionEvent
			{
				[Token(Token = "0x6001627")]
				[Address(RVA = "0xDBE624", Offset = "0xDBE624", VA = "0xDBE624")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A6")]
			public Types.MotionEvent MotionEvent
			{
				[Token(Token = "0x6001628")]
				[Address(RVA = "0xDBE4A0", Offset = "0xDBE4A0", VA = "0xDBE4A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001629")]
				[Address(RVA = "0xDBE4BC", Offset = "0xDBE4BC", VA = "0xDBE4BC")]
				set
				{
				}
			}

			[Token(Token = "0x170004A7")]
			public bool HasGyroscopeEvent
			{
				[Token(Token = "0x600162E")]
				[Address(RVA = "0xDBE7AC", Offset = "0xDBE7AC", VA = "0xDBE7AC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A8")]
			public Types.GyroscopeEvent GyroscopeEvent
			{
				[Token(Token = "0x600162F")]
				[Address(RVA = "0xDBE4C0", Offset = "0xDBE4C0", VA = "0xDBE4C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001630")]
				[Address(RVA = "0xDBE4DC", Offset = "0xDBE4DC", VA = "0xDBE4DC")]
				set
				{
				}
			}

			[Token(Token = "0x170004A9")]
			public bool HasAccelerometerEvent
			{
				[Token(Token = "0x6001635")]
				[Address(RVA = "0xDBE934", Offset = "0xDBE934", VA = "0xDBE934")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004AA")]
			public Types.AccelerometerEvent AccelerometerEvent
			{
				[Token(Token = "0x6001636")]
				[Address(RVA = "0xDBE4E0", Offset = "0xDBE4E0", VA = "0xDBE4E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001637")]
				[Address(RVA = "0xDBE4FC", Offset = "0xDBE4FC", VA = "0xDBE4FC")]
				set
				{
				}
			}

			[Token(Token = "0x170004AB")]
			public bool HasDepthMapEvent
			{
				[Token(Token = "0x600163C")]
				[Address(RVA = "0xDBEABC", Offset = "0xDBEABC", VA = "0xDBEABC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004AC")]
			public Types.DepthMapEvent DepthMapEvent
			{
				[Token(Token = "0x600163D")]
				[Address(RVA = "0xDBE500", Offset = "0xDBE500", VA = "0xDBE500")]
				get
				{
					return null;
				}
				[Token(Token = "0x600163E")]
				[Address(RVA = "0xDBE51C", Offset = "0xDBE51C", VA = "0xDBE51C")]
				set
				{
				}
			}

			[Token(Token = "0x170004AD")]
			public bool HasOrientationEvent
			{
				[Token(Token = "0x6001643")]
				[Address(RVA = "0xDBEC44", Offset = "0xDBEC44", VA = "0xDBEC44")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004AE")]
			public Types.OrientationEvent OrientationEvent
			{
				[Token(Token = "0x6001644")]
				[Address(RVA = "0xDBE520", Offset = "0xDBE520", VA = "0xDBE520")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001645")]
				[Address(RVA = "0xDBE53C", Offset = "0xDBE53C", VA = "0xDBE53C")]
				set
				{
				}
			}

			[Token(Token = "0x170004AF")]
			public bool HasKeyEvent
			{
				[Token(Token = "0x600164A")]
				[Address(RVA = "0xDBEDCC", Offset = "0xDBEDCC", VA = "0xDBEDCC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004B0")]
			public Types.KeyEvent KeyEvent
			{
				[Token(Token = "0x600164B")]
				[Address(RVA = "0xDBE540", Offset = "0xDBE540", VA = "0xDBE540")]
				get
				{
					return null;
				}
				[Token(Token = "0x600164C")]
				[Address(RVA = "0xDBE55C", Offset = "0xDBE55C", VA = "0xDBE55C")]
				set
				{
				}
			}

			[Token(Token = "0x6001615")]
			[Address(RVA = "0xDBCACC", Offset = "0xDBCACC", VA = "0xDBCACC")]
			public Builder()
			{
			}

			[Token(Token = "0x6001616")]
			[Address(RVA = "0xDBCBA0", Offset = "0xDBCBA0", VA = "0xDBCBA0")]
			internal Builder(PhoneEvent cloneFrom)
			{
			}

			[Token(Token = "0x6001617")]
			[Address(RVA = "0xDBCC08", Offset = "0xDBCC08", VA = "0xDBCC08")]
			private PhoneEvent PrepareBuilder()
			{
				return null;
			}

			[Token(Token = "0x600161A")]
			[Address(RVA = "0xDBCCBC", Offset = "0xDBCCBC", VA = "0xDBCCBC", Slot = "10")]
			public override Builder Clear()
			{
				return null;
			}

			[Token(Token = "0x600161B")]
			[Address(RVA = "0xDBCD74", Offset = "0xDBCD74", VA = "0xDBCD74", Slot = "11")]
			public override Builder Clone()
			{
				return null;
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0xDBCEB8", Offset = "0xDBCEB8", VA = "0xDBCEB8", Slot = "13")]
			public override PhoneEvent BuildPartial()
			{
				return null;
			}

			[Token(Token = "0x600161E")]
			[Address(RVA = "0xDBCEF0", Offset = "0xDBCEF0", VA = "0xDBCEF0", Slot = "14")]
			public override Builder MergeFrom(IMessageLite other)
			{
				return null;
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0xDBCFA0", Offset = "0xDBCFA0", VA = "0xDBCFA0", Slot = "26")]
			public override Builder MergeFrom(PhoneEvent other)
			{
				return null;
			}

			[Token(Token = "0x6001620")]
			[Address(RVA = "0xDBDA28", Offset = "0xDBDA28", VA = "0xDBDA28", Slot = "16")]
			public override Builder MergeFrom(ICodedInputStream input)
			{
				return null;
			}

			[Token(Token = "0x6001621")]
			[Address(RVA = "0xDBDAE8", Offset = "0xDBDAE8", VA = "0xDBDAE8", Slot = "15")]
			public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
			{
				return null;
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xDBE598", Offset = "0xDBE598", VA = "0xDBE598")]
			public Builder SetType(Types.Type value)
			{
				return null;
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xDBE5E0", Offset = "0xDBE5E0", VA = "0xDBE5E0")]
			public Builder ClearType()
			{
				return null;
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0xDBE640", Offset = "0xDBE640", VA = "0xDBE640")]
			public Builder SetMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x600162B")]
			[Address(RVA = "0xDBE6CC", Offset = "0xDBE6CC", VA = "0xDBE6CC")]
			public Builder SetMotionEvent(Types.MotionEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0xDBD140", Offset = "0xDBD140", VA = "0xDBD140")]
			public Builder MergeMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x600162D")]
			[Address(RVA = "0xDBE76C", Offset = "0xDBE76C", VA = "0xDBE76C")]
			public Builder ClearMotionEvent()
			{
				return null;
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0xDBE7C8", Offset = "0xDBE7C8", VA = "0xDBE7C8")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0xDBE854", Offset = "0xDBE854", VA = "0xDBE854")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001633")]
			[Address(RVA = "0xDBD2BC", Offset = "0xDBD2BC", VA = "0xDBD2BC")]
			public Builder MergeGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001634")]
			[Address(RVA = "0xDBE8F4", Offset = "0xDBE8F4", VA = "0xDBE8F4")]
			public Builder ClearGyroscopeEvent()
			{
				return null;
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0xDBE950", Offset = "0xDBE950", VA = "0xDBE950")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001639")]
			[Address(RVA = "0xDBE9DC", Offset = "0xDBE9DC", VA = "0xDBE9DC")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0xDBD438", Offset = "0xDBD438", VA = "0xDBD438")]
			public Builder MergeAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xDBEA7C", Offset = "0xDBEA7C", VA = "0xDBEA7C")]
			public Builder ClearAccelerometerEvent()
			{
				return null;
			}

			[Token(Token = "0x600163F")]
			[Address(RVA = "0xDBEAD8", Offset = "0xDBEAD8", VA = "0xDBEAD8")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001640")]
			[Address(RVA = "0xDBEB64", Offset = "0xDBEB64", VA = "0xDBEB64")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xDBD5B4", Offset = "0xDBD5B4", VA = "0xDBD5B4")]
			public Builder MergeDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xDBEC04", Offset = "0xDBEC04", VA = "0xDBEC04")]
			public Builder ClearDepthMapEvent()
			{
				return null;
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xDBEC60", Offset = "0xDBEC60", VA = "0xDBEC60")]
			public Builder SetOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xDBECEC", Offset = "0xDBECEC", VA = "0xDBECEC")]
			public Builder SetOrientationEvent(Types.OrientationEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xDBD730", Offset = "0xDBD730", VA = "0xDBD730")]
			public Builder MergeOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0xDBED8C", Offset = "0xDBED8C", VA = "0xDBED8C")]
			public Builder ClearOrientationEvent()
			{
				return null;
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xDBEDE8", Offset = "0xDBEDE8", VA = "0xDBEDE8")]
			public Builder SetKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xDBEE74", Offset = "0xDBEE74", VA = "0xDBEE74")]
			public Builder SetKeyEvent(Types.KeyEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600164F")]
			[Address(RVA = "0xDBD8AC", Offset = "0xDBD8AC", VA = "0xDBD8AC")]
			public Builder MergeKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xDBEF14", Offset = "0xDBEF14", VA = "0xDBEF14")]
			public Builder ClearKeyEvent()
			{
				return null;
			}
		}

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly PhoneEvent defaultInstance;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] _phoneEventFieldNames;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] _phoneEventFieldTags;

		[Token(Token = "0x40010CB")]
		public const int TypeFieldNumber = 1;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasType;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Types.Type type_;

		[Token(Token = "0x40010CE")]
		public const int MotionEventFieldNumber = 2;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool hasMotionEvent;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Types.MotionEvent motionEvent_;

		[Token(Token = "0x40010D1")]
		public const int GyroscopeEventFieldNumber = 3;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasGyroscopeEvent;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Types.GyroscopeEvent gyroscopeEvent_;

		[Token(Token = "0x40010D4")]
		public const int AccelerometerEventFieldNumber = 4;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasAccelerometerEvent;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Types.AccelerometerEvent accelerometerEvent_;

		[Token(Token = "0x40010D7")]
		public const int DepthMapEventFieldNumber = 5;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasDepthMapEvent;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Types.DepthMapEvent depthMapEvent_;

		[Token(Token = "0x40010DA")]
		public const int OrientationEventFieldNumber = 6;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hasOrientationEvent;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Types.OrientationEvent orientationEvent_;

		[Token(Token = "0x40010DD")]
		public const int KeyEventFieldNumber = 7;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool hasKeyEvent;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Types.KeyEvent keyEvent_;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int memoizedSerializedSize;

		[Token(Token = "0x170003E9")]
		public static PhoneEvent DefaultInstance
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xFFA1FC", Offset = "0xFFA1FC", VA = "0xFFA1FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public override PhoneEvent DefaultInstanceForType
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xFFA260", Offset = "0xFFA260", VA = "0xFFA260", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		protected override PhoneEvent ThisMessage
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xFFA2FC", Offset = "0xFFA2FC", VA = "0xFFA2FC", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		public bool HasType
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xFFA300", Offset = "0xFFA300", VA = "0xFFA300")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003ED")]
		public Types.Type Type
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xFFA308", Offset = "0xFFA308", VA = "0xFFA308")]
			get
			{
				return default(Types.Type);
			}
		}

		[Token(Token = "0x170003EE")]
		public bool HasMotionEvent
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xFFA310", Offset = "0xFFA310", VA = "0xFFA310")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EF")]
		public Types.MotionEvent MotionEvent
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xFFA318", Offset = "0xFFA318", VA = "0xFFA318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public bool HasGyroscopeEvent
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xFFA3C0", Offset = "0xFFA3C0", VA = "0xFFA3C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F1")]
		public Types.GyroscopeEvent GyroscopeEvent
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xFFA3C8", Offset = "0xFFA3C8", VA = "0xFFA3C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public bool HasAccelerometerEvent
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xFFA470", Offset = "0xFFA470", VA = "0xFFA470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F3")]
		public Types.AccelerometerEvent AccelerometerEvent
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xFFA478", Offset = "0xFFA478", VA = "0xFFA478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		public bool HasDepthMapEvent
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xFFA520", Offset = "0xFFA520", VA = "0xFFA520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F5")]
		public Types.DepthMapEvent DepthMapEvent
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xFFA528", Offset = "0xFFA528", VA = "0xFFA528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		public bool HasOrientationEvent
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xFFA5D0", Offset = "0xFFA5D0", VA = "0xFFA5D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F7")]
		public Types.OrientationEvent OrientationEvent
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xFFA5D8", Offset = "0xFFA5D8", VA = "0xFFA5D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		public bool HasKeyEvent
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xFFA680", Offset = "0xFFA680", VA = "0xFFA680")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F9")]
		public Types.KeyEvent KeyEvent
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xFFA688", Offset = "0xFFA688", VA = "0xFFA688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		public override bool IsInitialized
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xFFA730", Offset = "0xFFA730", VA = "0xFFA730", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FB")]
		public override int SerializedSize
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0xFFAC74", Offset = "0xFFAC74", VA = "0xFFAC74", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFFA1A0", Offset = "0xFFA1A0", VA = "0xFFA1A0")]
		private PhoneEvent()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xFFA738", Offset = "0xFFA738", VA = "0xFFA738", Slot = "14")]
		public override void WriteTo(ICodedOutputStream output)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xFFAEDC", Offset = "0xFFAEDC", VA = "0xFFAEDC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xFFAFF4", Offset = "0xFFAFF4", VA = "0xFFAFF4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xFFB28C", Offset = "0xFFB28C", VA = "0xFFB28C", Slot = "15")]
		public override void PrintTo(TextWriter writer)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xFFB448", Offset = "0xFFB448", VA = "0xFFB448")]
		public static PhoneEvent ParseFrom(ByteString data)
		{
			return null;
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xFFB544", Offset = "0xFFB544", VA = "0xFFB544")]
		public static PhoneEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xFFB5F8", Offset = "0xFFB5F8", VA = "0xFFB5F8")]
		public static PhoneEvent ParseFrom(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xFFB69C", Offset = "0xFFB69C", VA = "0xFFB69C")]
		public static PhoneEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xFFB750", Offset = "0xFFB750", VA = "0xFFB750")]
		public static PhoneEvent ParseFrom(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xFFB7F4", Offset = "0xFFB7F4", VA = "0xFFB7F4")]
		public static PhoneEvent ParseFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xFFB8A8", Offset = "0xFFB8A8", VA = "0xFFB8A8")]
		public static PhoneEvent ParseDelimitedFrom(System.IO.Stream input)
		{
			return null;
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xFFB94C", Offset = "0xFFB94C", VA = "0xFFB94C")]
		public static PhoneEvent ParseDelimitedFrom(System.IO.Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xFFBA00", Offset = "0xFFBA00", VA = "0xFFBA00")]
		public static PhoneEvent ParseFrom(ICodedInputStream input)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xFFBA98", Offset = "0xFFBA98", VA = "0xFFBA98")]
		public static PhoneEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xFFBB40", Offset = "0xFFBB40", VA = "0xFFBB40")]
		private PhoneEvent MakeReadOnly()
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xFFB4EC", Offset = "0xFFB4EC", VA = "0xFFB4EC")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xFFBB44", Offset = "0xFFBB44", VA = "0xFFBB44", Slot = "13")]
		public override Builder ToBuilder()
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xFFBC04", Offset = "0xFFBC04", VA = "0xFFBC04", Slot = "12")]
		public override Builder CreateBuilderForType()
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xFFBBA4", Offset = "0xFFBBA4", VA = "0xFFBBA4")]
		public static Builder CreateBuilder(PhoneEvent prototype)
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xFFBC5C", Offset = "0xFFBC5C", VA = "0xFFBC5C")]
		static PhoneEvent()
		{
		}
	}
}
namespace proto.Proto
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCB00", Offset = "0x7CCB00")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7CCB00", Offset = "0x7CCB00")]
	[DebuggerNonUserCode]
	public static class PhoneEvent
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly object Descriptor;

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xFFBF58", Offset = "0xFFBF58", VA = "0xFFBF58")]
		public static void RegisterAllExtensions(ExtensionRegistry registry)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xFFBF5C", Offset = "0xFFBF5C", VA = "0xFFBF5C")]
		static PhoneEvent()
		{
		}
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x20002FD")]
	internal static class ControllerProviderFactory
	{
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x10C9154", Offset = "0x10C9154", VA = "0x10C9154")]
		internal static IControllerProvider CreateControllerProvider(GvrControllerInput owner)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	internal class AndroidNativeControllerProvider : IControllerProvider
	{
		[Token(Token = "0x20002FF")]
		private struct gvr_quat
		{
			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float z;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float w;
		}

		[Token(Token = "0x2000300")]
		private struct gvr_vec3
		{
			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float z;
		}

		[Token(Token = "0x2000301")]
		private struct gvr_vec2
		{
			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float x;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float y;
		}

		[Token(Token = "0x400115F")]
		private const int GVR_CONTROLLER_ENABLE_ORIENTATION = 1;

		[Token(Token = "0x4001160")]
		private const int GVR_CONTROLLER_ENABLE_TOUCH = 2;

		[Token(Token = "0x4001161")]
		private const int GVR_CONTROLLER_ENABLE_GYRO = 4;

		[Token(Token = "0x4001162")]
		private const int GVR_CONTROLLER_ENABLE_ACCEL = 8;

		[Token(Token = "0x4001163")]
		private const int GVR_CONTROLLER_ENABLE_GESTURES = 16;

		[Token(Token = "0x4001164")]
		private const int GVR_CONTROLLER_ENABLE_POSE_PREDICTION = 32;

		[Token(Token = "0x4001165")]
		private const int GVR_CONTROLLER_BUTTON_NONE = 0;

		[Token(Token = "0x4001166")]
		private const int GVR_CONTROLLER_BUTTON_CLICK = 1;

		[Token(Token = "0x4001167")]
		private const int GVR_CONTROLLER_BUTTON_HOME = 2;

		[Token(Token = "0x4001168")]
		private const int GVR_CONTROLLER_BUTTON_APP = 3;

		[Token(Token = "0x4001169")]
		private const int GVR_CONTROLLER_BUTTON_VOLUME_UP = 4;

		[Token(Token = "0x400116A")]
		private const int GVR_CONTROLLER_BUTTON_VOLUME_DOWN = 5;

		[Token(Token = "0x400116B")]
		private const int GVR_CONTROLLER_BUTTON_COUNT = 6;

		[Token(Token = "0x400116C")]
		private const int GVR_CONTROLLER_DISCONNECTED = 0;

		[Token(Token = "0x400116D")]
		private const int GVR_CONTROLLER_SCANNING = 1;

		[Token(Token = "0x400116E")]
		private const int GVR_CONTROLLER_CONNECTING = 2;

		[Token(Token = "0x400116F")]
		private const int GVR_CONTROLLER_CONNECTED = 3;

		[Token(Token = "0x4001170")]
		private const int GVR_CONTROLLER_API_OK = 0;

		[Token(Token = "0x4001171")]
		private const int GVR_CONTROLLER_API_UNSUPPORTED = 1;

		[Token(Token = "0x4001172")]
		private const int GVR_CONTROLLER_API_NOT_AUTHORIZED = 2;

		[Token(Token = "0x4001173")]
		private const int GVR_CONTROLLER_API_UNAVAILABLE = 3;

		[Token(Token = "0x4001174")]
		private const int GVR_CONTROLLER_API_SERVICE_OBSOLETE = 4;

		[Token(Token = "0x4001175")]
		private const int GVR_CONTROLLER_API_CLIENT_OBSOLETE = 5;

		[Token(Token = "0x4001176")]
		private const int GVR_CONTROLLER_API_MALFUNCTION = 6;

		[Token(Token = "0x4001177")]
		private const string dllName = "gvr";

		[Token(Token = "0x4001178")]
		private const string VRCORE_UTILS_CLASS = "com.google.vr.vrcore.base.api.VrCoreUtils";

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr api;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool hasBatteryMethods;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AndroidJavaObject androidContext;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AndroidJavaObject classLoader;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool error;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string errorDetails;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntPtr statePtr;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MutablePose3D pose3d;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool lastTouchState;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lastButtonState;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool lastAppButtonState;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool lastHomeButtonState;

		[Token(Token = "0x170004B1")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x166CAC0", Offset = "0x166CAC0", VA = "0x166CAC0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x166BBE0", Offset = "0x166BBE0", VA = "0x166BBE0")]
		private static extern int gvr_controller_get_default_options();

		[PreserveSig]
		[Token(Token = "0x6001655")]
		[Address(RVA = "0x166BC54", Offset = "0x166BC54", VA = "0x166BC54")]
		private static extern IntPtr gvr_controller_create_and_init_android(IntPtr jniEnv, IntPtr androidContext, IntPtr classLoader, int options, IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0x166BD04", Offset = "0x166BD04", VA = "0x166BD04")]
		private static extern void gvr_controller_destroy(ref IntPtr api);

		[PreserveSig]
		[Token(Token = "0x6001657")]
		[Address(RVA = "0x166BD84", Offset = "0x166BD84", VA = "0x166BD84")]
		private static extern void gvr_controller_pause(IntPtr api);

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x166BE04", Offset = "0x166BE04", VA = "0x166BE04")]
		private static extern void gvr_controller_resume(IntPtr api);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x166BE84", Offset = "0x166BE84", VA = "0x166BE84")]
		private static extern IntPtr gvr_controller_state_create();

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x166BEF8", Offset = "0x166BEF8", VA = "0x166BEF8")]
		private static extern void gvr_controller_state_destroy(ref IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x166BF78", Offset = "0x166BF78", VA = "0x166BF78")]
		private static extern void gvr_controller_state_update(IntPtr api, int flags, IntPtr out_state);

		[PreserveSig]
		[Token(Token = "0x600165C")]
		[Address(RVA = "0x166C010", Offset = "0x166C010", VA = "0x166C010")]
		private static extern int gvr_controller_state_get_api_status(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0x166C090", Offset = "0x166C090", VA = "0x166C090")]
		private static extern int gvr_controller_state_get_connection_state(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600165E")]
		[Address(RVA = "0x166C110", Offset = "0x166C110", VA = "0x166C110")]
		private static extern gvr_quat gvr_controller_state_get_orientation(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0x166C190", Offset = "0x166C190", VA = "0x166C190")]
		private static extern gvr_vec3 gvr_controller_state_get_gyro(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001660")]
		[Address(RVA = "0x166C210", Offset = "0x166C210", VA = "0x166C210")]
		private static extern gvr_vec3 gvr_controller_state_get_accel(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001661")]
		[Address(RVA = "0x166C290", Offset = "0x166C290", VA = "0x166C290")]
		private static extern byte gvr_controller_state_is_touching(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001662")]
		[Address(RVA = "0x166C310", Offset = "0x166C310", VA = "0x166C310")]
		private static extern gvr_vec2 gvr_controller_state_get_touch_pos(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001663")]
		[Address(RVA = "0x166C390", Offset = "0x166C390", VA = "0x166C390")]
		private static extern byte gvr_controller_state_get_touch_down(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001664")]
		[Address(RVA = "0x166C410", Offset = "0x166C410", VA = "0x166C410")]
		private static extern byte gvr_controller_state_get_touch_up(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001665")]
		[Address(RVA = "0x166C490", Offset = "0x166C490", VA = "0x166C490")]
		private static extern byte gvr_controller_state_get_recentered(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001666")]
		[Address(RVA = "0x166C510", Offset = "0x166C510", VA = "0x166C510")]
		private static extern byte gvr_controller_state_get_button_state(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x6001667")]
		[Address(RVA = "0x166C5A0", Offset = "0x166C5A0", VA = "0x166C5A0")]
		private static extern byte gvr_controller_state_get_button_down(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x6001668")]
		[Address(RVA = "0x166C630", Offset = "0x166C630", VA = "0x166C630")]
		private static extern byte gvr_controller_state_get_button_up(IntPtr state, int button);

		[PreserveSig]
		[Token(Token = "0x6001669")]
		[Address(RVA = "0x166C6C0", Offset = "0x166C6C0", VA = "0x166C6C0")]
		private static extern long gvr_controller_state_get_last_orientation_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166A")]
		[Address(RVA = "0x166C740", Offset = "0x166C740", VA = "0x166C740")]
		private static extern long gvr_controller_state_get_last_gyro_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166B")]
		[Address(RVA = "0x166C7C0", Offset = "0x166C7C0", VA = "0x166C7C0")]
		private static extern long gvr_controller_state_get_last_accel_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166C")]
		[Address(RVA = "0x166C840", Offset = "0x166C840", VA = "0x166C840")]
		private static extern long gvr_controller_state_get_last_touch_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0x166C8C0", Offset = "0x166C8C0", VA = "0x166C8C0")]
		private static extern long gvr_controller_state_get_last_button_timestamp(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166E")]
		[Address(RVA = "0x166C940", Offset = "0x166C940", VA = "0x166C940")]
		private static extern byte gvr_controller_state_get_battery_charging(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0x166C9C0", Offset = "0x166C9C0", VA = "0x166C9C0")]
		private static extern int gvr_controller_state_get_battery_level(IntPtr state);

		[PreserveSig]
		[Token(Token = "0x6001670")]
		[Address(RVA = "0x166CA40", Offset = "0x166CA40", VA = "0x166CA40")]
		private static extern long gvr_controller_state_get_last_battery_timestamp(IntPtr state);

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x166CAC8", Offset = "0x166CAC8", VA = "0x166CAC8")]
		internal AndroidNativeControllerProvider()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x166CFDC", Offset = "0x166CFDC", VA = "0x166CFDC", Slot = "1")]
		~AndroidNativeControllerProvider()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x166D054", Offset = "0x166D054", VA = "0x166D054", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x166D3F8", Offset = "0x166D3F8", VA = "0x166D3F8", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x166D458", Offset = "0x166D458", VA = "0x166D458", Slot = "6")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x166D3A0", Offset = "0x166D3A0", VA = "0x166D3A0")]
		private GvrConnectionState ConvertConnectionState(int connectionState)
		{
			return default(GvrConnectionState);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x166D3B0", Offset = "0x166D3B0", VA = "0x166D3B0")]
		private GvrControllerApiStatus ConvertControllerApiStatus(int gvrControllerApiStatus)
		{
			return default(GvrControllerApiStatus);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x166D3C0", Offset = "0x166D3C0", VA = "0x166D3C0")]
		private static void UpdateInputEvents(bool currentState, ref bool previousState, ref bool up, ref bool down)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x166CDEC", Offset = "0x166CDEC", VA = "0x166CDEC")]
		private static AndroidJavaObject GetClassLoaderFromActivity(AndroidJavaObject activity)
		{
			return null;
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x166D4B8", Offset = "0x166D4B8", VA = "0x166D4B8")]
		private static int GetVrCoreClientApiVersion(AndroidJavaObject activity)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000302")]
	internal class DummyControllerProvider : IControllerProvider
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState dummyState;

		[Token(Token = "0x170004B2")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x1064A2C", Offset = "0x1064A2C", VA = "0x1064A2C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1064A34", Offset = "0x1064A34", VA = "0x1064A34")]
		internal DummyControllerProvider()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1064A98", Offset = "0x1064A98", VA = "0x1064A98", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1064ABC", Offset = "0x1064ABC", VA = "0x1064ABC", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1064AC0", Offset = "0x1064AC0", VA = "0x1064AC0", Slot = "6")]
		public void OnResume()
		{
		}
	}
	[Token(Token = "0x2000303")]
	internal class MouseControllerProvider : IControllerProvider
	{
		[Token(Token = "0x400118F")]
		private const string AXIS_MOUSE_X = "Mouse X";

		[Token(Token = "0x4001190")]
		private const string AXIS_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState state;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 mouseDelta;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool wasClickButton;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool wasAppButton;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool wasHomeButton;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool wasTouching;

		[Token(Token = "0x4001197")]
		private const float ROTATE_SENSITIVITY = 4.5f;

		[Token(Token = "0x4001198")]
		private const float TOUCH_SENSITIVITY = 0.12f;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 INVERT_Y;

		[Token(Token = "0x170004B3")]
		public static bool IsMouseAvailable
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xFEE52C", Offset = "0xFEE52C", VA = "0xFEE52C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B4")]
		public static bool IsActivateButtonPressed
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xFEE5A0", Offset = "0xFEE5A0", VA = "0xFEE5A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B5")]
		public static bool IsClickButtonPressed
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xFEE5D4", Offset = "0xFEE5D4", VA = "0xFEE5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public static bool IsAppButtonPressed
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xFEE5E0", Offset = "0xFEE5E0", VA = "0xFEE5E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B7")]
		public static bool IsHomeButtonPressed
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xFEE5EC", Offset = "0xFEE5EC", VA = "0xFEE5EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public static bool IsTouching
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xFEE5F8", Offset = "0xFEE5F8", VA = "0xFEE5F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B9")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xFEE62C", Offset = "0xFEE62C", VA = "0xFEE62C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xFEE634", Offset = "0xFEE634", VA = "0xFEE634")]
		internal MouseControllerProvider()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xFEE698", Offset = "0xFEE698", VA = "0xFEE698", Slot = "7")]
		public void ReadState(ControllerState outState)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xFEE8D4", Offset = "0xFEE8D4", VA = "0xFEE8D4", Slot = "5")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xFEE8D8", Offset = "0xFEE8D8", VA = "0xFEE8D8", Slot = "6")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xFEE790", Offset = "0xFEE790", VA = "0xFEE790")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xFEEBAC", Offset = "0xFEEBAC", VA = "0xFEEBAC")]
		private void UpdateTouchPos()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xFEEC34", Offset = "0xFEEC34", VA = "0xFEEC34")]
		private void UpdateOrientation()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xFEE954", Offset = "0xFEE954", VA = "0xFEE954")]
		private void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xFEEE00", Offset = "0xFEEE00", VA = "0xFEEE00")]
		private void Recenter()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xFEEDE0", Offset = "0xFEEDE0", VA = "0xFEEDE0")]
		private void ClearTouchPos()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xFEE8DC", Offset = "0xFEE8DC", VA = "0xFEE8DC")]
		private void ClearState()
		{
		}
	}
	[Token(Token = "0x2000304")]
	internal class ControllerState
	{
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrConnectionState connectionState;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GvrControllerApiStatus apiStatus;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Quaternion orientation;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Vector3 gyro;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal Vector3 accel;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool isTouching;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal Vector2 touchPos;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal bool touchDown;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		internal bool touchUp;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		internal bool recentered;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		internal bool clickButtonState;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal bool clickButtonDown;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		internal bool clickButtonUp;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		internal bool appButtonState;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		internal bool appButtonDown;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal bool appButtonUp;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		internal bool homeButtonDown;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		internal bool homeButtonUp;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		internal bool homeButtonState;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal string errorDetails;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal IntPtr gvrPtr;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal bool isCharging;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x10C91AC", Offset = "0x10C91AC", VA = "0x10C91AC")]
		public void CopyFrom(ControllerState other)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x10C9288", Offset = "0x10C9288", VA = "0x10C9288")]
		public void ClearTransientState()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x10C929C", Offset = "0x10C929C", VA = "0x10C929C")]
		public ControllerState()
		{
		}
	}
	[Token(Token = "0x2000305")]
	internal class EmulatorConfig : MonoBehaviour
	{
		[Token(Token = "0x2000306")]
		public enum Mode
		{
			[Token(Token = "0x40011B6")]
			OFF,
			[Token(Token = "0x40011B7")]
			USB,
			[Token(Token = "0x40011B8")]
			WIFI
		}

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EmulatorConfig instance;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode PHONE_EVENT_MODE;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string USB_SERVER_IP;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string WIFI_SERVER_IP;

		[Token(Token = "0x170004BA")]
		public static EmulatorConfig Instance
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x1064DD8", Offset = "0x1064DD8", VA = "0x1064DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1065108", Offset = "0x1065108", VA = "0x1065108")]
		public EmulatorConfig()
		{
		}
	}
	[Token(Token = "0x2000307")]
	internal struct EmulatorGyroEvent
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x10651A8", Offset = "0x10651A8", VA = "0x10651A8")]
		public EmulatorGyroEvent(PhoneEvent.Types.GyroscopeEvent proto)
		{
		}
	}
	[Token(Token = "0x2000308")]
	internal struct EmulatorAccelEvent
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x1064D7C", Offset = "0x1064D7C", VA = "0x1064D7C")]
		public EmulatorAccelEvent(PhoneEvent.Types.AccelerometerEvent proto)
		{
		}
	}
	[Token(Token = "0x2000309")]
	internal struct EmulatorTouchEvent
	{
		[Token(Token = "0x200030A")]
		public enum Action
		{
			[Token(Token = "0x40011C4")]
			kActionDown = 0,
			[Token(Token = "0x40011C5")]
			kActionUp = 1,
			[Token(Token = "0x40011C6")]
			kActionMove = 2,
			[Token(Token = "0x40011C7")]
			kActionCancel = 3,
			[Token(Token = "0x40011C8")]
			kActionPointerDown = 5,
			[Token(Token = "0x40011C9")]
			kActionPointerUp = 6,
			[Token(Token = "0x40011CA")]
			kActionHoverMove = 7,
			[Token(Token = "0x40011CB")]
			kActionHoverEnter = 9,
			[Token(Token = "0x40011CC")]
			kActionHoverExit = 10
		}

		[Token(Token = "0x200030B")]
		public struct Pointer
		{
			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int fingerId;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float normalizedX;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float normalizedY;

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xF1FB54", Offset = "0xF1FB54", VA = "0xF1FB54")]
			public Pointer(int fingerId, float normalizedX, float normalizedY)
			{
			}

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xF1FB60", Offset = "0xF1FB60", VA = "0xF1FB60", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int action;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int relativeTimestamp;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly List<Pointer> pointers;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ACTION_POINTER_INDEX_SHIFT;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ACTION_POINTER_INDEX_MASK;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ACTION_MASK;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x10656BC", Offset = "0x10656BC", VA = "0x10656BC")]
		public EmulatorTouchEvent(PhoneEvent.Types.MotionEvent proto, long lastDownTimeMs)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1065A84", Offset = "0x1065A84", VA = "0x1065A84")]
		public EmulatorTouchEvent(Action action, int pointerId, int relativeTimestamp, List<Pointer> pointers)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1065D20", Offset = "0x1065D20", VA = "0x1065D20")]
		public Action getActionMasked()
		{
			return default(Action);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1065D90", Offset = "0x1065D90", VA = "0x1065D90")]
		public Pointer getActionPointer()
		{
			return default(Pointer);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1065CA4", Offset = "0x1065CA4", VA = "0x1065CA4")]
		private static int getActionUnmasked(Action action, int fingerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1065BF4", Offset = "0x1065BF4", VA = "0x1065BF4")]
		private static int findPointerIndex(int fingerId, List<Pointer> pointers)
		{
			return default(int);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1065E50", Offset = "0x1065E50", VA = "0x1065E50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200030C")]
	internal struct EmulatorOrientationEvent
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Quaternion orientation;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x106565C", Offset = "0x106565C", VA = "0x106565C")]
		public EmulatorOrientationEvent(PhoneEvent.Types.OrientationEvent proto)
		{
		}
	}
	[Token(Token = "0x200030D")]
	internal struct EmulatorButtonEvent
	{
		[Token(Token = "0x200030E")]
		public enum ButtonCode
		{
			[Token(Token = "0x40011D5")]
			kNone = 0,
			[Token(Token = "0x40011D6")]
			kHome = 3,
			[Token(Token = "0x40011D7")]
			kVolumeUp = 25,
			[Token(Token = "0x40011D8")]
			kVolumeDown = 24,
			[Token(Token = "0x40011D9")]
			kClick = 66,
			[Token(Token = "0x40011DA")]
			kApp = 82
		}

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ButtonCode code;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly bool down;

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1064DAC", Offset = "0x1064DAC", VA = "0x1064DAC")]
		public EmulatorButtonEvent(PhoneEvent.Types.KeyEvent proto)
		{
		}
	}
	[Token(Token = "0x200030F")]
	internal interface IControllerProvider
	{
		[Token(Token = "0x170004BB")]
		bool SupportsBatteryStatus
		{
			[Token(Token = "0x60016A8")]
			get;
		}

		[Token(Token = "0x60016A9")]
		void OnPause();

		[Token(Token = "0x60016AA")]
		void OnResume();

		[Token(Token = "0x60016AB")]
		void ReadState(ControllerState outState);
	}
	[Token(Token = "0x2000310")]
	internal static class HeadsetProviderFactory
	{
		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x12F2698", Offset = "0x12F2698", VA = "0x12F2698")]
		internal static IHeadsetProvider CreateProvider()
		{
			return null;
		}
	}
	[Token(Token = "0x2000311")]
	internal enum gvr_feature
	{
		[Token(Token = "0x40011DC")]
		HeadPose6dof = 3
	}
	[Token(Token = "0x2000312")]
	internal enum gvr_property_type
	{
		[Token(Token = "0x40011DE")]
		TrackingFloorHeight = 1,
		[Token(Token = "0x40011DF")]
		RecenterTransform,
		[Token(Token = "0x40011E0")]
		SafetyRegion,
		[Token(Token = "0x40011E1")]
		SafetyCylinderInnerRadius,
		[Token(Token = "0x40011E2")]
		SafetyCylinderOuterRadius
	}
	[Token(Token = "0x2000313")]
	internal enum gvr_value_type
	{
		[Token(Token = "0x40011E4")]
		None,
		[Token(Token = "0x40011E5")]
		Float,
		[Token(Token = "0x40011E6")]
		Double,
		[Token(Token = "0x40011E7")]
		Int,
		[Token(Token = "0x40011E8")]
		Int64,
		[Token(Token = "0x40011E9")]
		Flags,
		[Token(Token = "0x40011EA")]
		Sizei,
		[Token(Token = "0x40011EB")]
		Recti,
		[Token(Token = "0x40011EC")]
		Rectf,
		[Token(Token = "0x40011ED")]
		Vec2f,
		[Token(Token = "0x40011EE")]
		Vec3f,
		[Token(Token = "0x40011EF")]
		Quat,
		[Token(Token = "0x40011F0")]
		Mat4f,
		[Token(Token = "0x40011F1")]
		ClockTimePoint
	}
	[Token(Token = "0x2000314")]
	internal enum gvr_recenter_flags
	{
		[Token(Token = "0x40011F3")]
		None
	}
	[Token(Token = "0x2000315")]
	internal class AndroidNativeHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x2000316")]
		private class GvrValue
		{
			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly int HEADER_SIZE;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private gvr_value_header valueHeader;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private byte[] buffer;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IntPtr bufferPtr;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr valuePtr;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GCHandle bufferHandle;

			[Token(Token = "0x170004BD")]
			public IntPtr BufferPtr
			{
				[Token(Token = "0x60016BF")]
				[Address(RVA = "0xF19574", Offset = "0xF19574", VA = "0xF19574")]
				get
				{
					return default(IntPtr);
				}
			}

			[Token(Token = "0x170004BE")]
			public gvr_value_type TypeEnum
			{
				[Token(Token = "0x60016C0")]
				[Address(RVA = "0xF1957C", Offset = "0xF1957C", VA = "0xF1957C")]
				get
				{
					return default(gvr_value_type);
				}
			}

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xF193D4", Offset = "0xF193D4", VA = "0xF193D4")]
			public GvrValue()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xF19504", Offset = "0xF19504", VA = "0xF19504", Slot = "1")]
			~GvrValue()
			{
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xF19598", Offset = "0xF19598", VA = "0xF19598")]
			public void Parse()
			{
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xF1961C", Offset = "0xF1961C", VA = "0xF1961C")]
			public int ToInt32()
			{
				return default(int);
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xF196C4", Offset = "0xF196C4", VA = "0xF196C4")]
			public long ToInt64()
			{
				return default(long);
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xF1976C", Offset = "0xF1976C", VA = "0xF1976C")]
			public float ToFloat()
			{
				return default(float);
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xF19814", Offset = "0xF19814", VA = "0xF19814")]
			public double ToDouble()
			{
				return default(double);
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xF198BC", Offset = "0xF198BC", VA = "0xF198BC")]
			public Vector2 ToVector2()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xF199C4", Offset = "0xF199C4", VA = "0xF199C4")]
			public Vector3 ToVector3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xF19AD0", Offset = "0xF19AD0", VA = "0xF19AD0")]
			public Vector4 ToVector4()
			{
				return default(Vector4);
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xF19BDC", Offset = "0xF19BDC", VA = "0xF19BDC")]
			public Quaternion ToQuaternion()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xF19CE8", Offset = "0xF19CE8", VA = "0xF19CE8")]
			public gvr_rectf ToGvrRectf()
			{
				return default(gvr_rectf);
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xF19DF4", Offset = "0xF19DF4", VA = "0xF19DF4")]
			public gvr_recti ToGvrRecti()
			{
				return default(gvr_recti);
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xF19F00", Offset = "0xF19F00", VA = "0xF19F00")]
			public Matrix4x4 ToMatrix4x4()
			{
				return default(Matrix4x4);
			}
		}

		[StructLayout(0)]
		[Token(Token = "0x2000317")]
		private class gvr_recenter_event_data
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int recenter_event_type;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal uint recenter_event_flags;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float[] pose_transform;

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xF1A194", Offset = "0xF1A194", VA = "0xF1A194")]
			public gvr_recenter_event_data()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x2000318")]
		private class gvr_event_header
		{
			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal long timestamp;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int type;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int flags;

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xF1A18C", Offset = "0xF1A18C", VA = "0xF1A18C")]
			public gvr_event_header()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x2000319")]
		private class gvr_value_header
		{
			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal gvr_value_type value_type;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int flags;

			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xF194FC", Offset = "0xF194FC", VA = "0xF194FC")]
			public gvr_value_header()
			{
			}
		}

		[Token(Token = "0x200031A")]
		public struct gvr_sizei
		{
			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int width;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int height;
		}

		[Token(Token = "0x200031B")]
		public struct gvr_recti
		{
			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int left;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int right;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int bottom;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int top;
		}

		[Token(Token = "0x200031C")]
		public struct gvr_rectf
		{
			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float left;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float right;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float bottom;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float top;
		}

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr gvrContextPtr;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GvrValue gvrValue;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private gvr_event_header gvrEventHeader;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private gvr_recenter_event_data gvrRecenterEventData;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] gvrEventBuffer;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GCHandle gvrEventHandle;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntPtr gvrEventPtr;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IntPtr gvrPropertiesPtr;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int supportsPositionalTracking;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MutablePose3D transientRecenteredPose3d;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Matrix4x4 MATRIX4X4_IDENTITY;

		[Token(Token = "0x40011FF")]
		private const string DLL_NAME = "gvr";

		[Token(Token = "0x170004BC")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x166D6F4", Offset = "0x166D6F4", VA = "0x166D6F4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x166D7CC", Offset = "0x166D7CC", VA = "0x166D7CC")]
		internal AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x166D978", Offset = "0x166D978", VA = "0x166D978", Slot = "1")]
		~AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x166D9E8", Offset = "0x166D9E8", VA = "0x166D9E8", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x166DE70", Offset = "0x166DE70", VA = "0x166DE70", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x166E3F4", Offset = "0x166E3F4", VA = "0x166E3F4", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x166E4BC", Offset = "0x166E4BC", VA = "0x166E4BC", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x166E510", Offset = "0x166E510", VA = "0x166E510", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x166E564", Offset = "0x166E564", VA = "0x166E564", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x166DEC4", Offset = "0x166DEC4", VA = "0x166DEC4")]
		private bool _GvrGetProperty(gvr_property_type propertyType, GvrValue valueOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x166DCF8", Offset = "0x166DCF8", VA = "0x166DCF8")]
		private void _HandleRecenterEvent(ref HeadsetState state, gvr_recenter_event_data eventData)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x166E5B8", Offset = "0x166E5B8", VA = "0x166E5B8")]
		private gvr_value_type GetPropertyValueType(gvr_property_type propertyType)
		{
			return default(gvr_value_type);
		}

		[PreserveSig]
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x166D734", Offset = "0x166D734", VA = "0x166D734")]
		private static extern bool gvr_is_feature_supported(IntPtr gvr_context, int feature);

		[PreserveSig]
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x166DC68", Offset = "0x166DC68", VA = "0x166DC68")]
		private static extern int gvr_poll_event(IntPtr gvr_context, IntPtr event_out);

		[PreserveSig]
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x166E5DC", Offset = "0x166E5DC", VA = "0x166E5DC")]
		private static extern IntPtr gvr_get_current_properties(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x166E65C", Offset = "0x166E65C", VA = "0x166E65C")]
		private static extern int gvr_properties_get(IntPtr gvr_properties, gvr_property_type property_type, IntPtr value_out);
	}
	[Token(Token = "0x200031D")]
	internal class DummyHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x170004BF")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x1064AC4", Offset = "0x1064AC4", VA = "0x1064AC4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1064ACC", Offset = "0x1064ACC", VA = "0x1064ACC", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1064AD0", Offset = "0x1064AD0", VA = "0x1064AD0", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1064AD8", Offset = "0x1064AD8", VA = "0x1064AD8", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x1064AE0", Offset = "0x1064AE0", VA = "0x1064AE0", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1064AE8", Offset = "0x1064AE8", VA = "0x1064AE8", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x1064AF0", Offset = "0x1064AF0", VA = "0x1064AF0", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1064AF8", Offset = "0x1064AF8", VA = "0x1064AF8")]
		public DummyHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x200031E")]
	internal class EditorHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x170004C0")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x1064C28", Offset = "0x1064C28", VA = "0x1064C28", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1064C30", Offset = "0x1064C30", VA = "0x1064C30", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1064C34", Offset = "0x1064C34", VA = "0x1064C34", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1064C48", Offset = "0x1064C48", VA = "0x1064C48", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x1064C50", Offset = "0x1064C50", VA = "0x1064C50", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x1064C60", Offset = "0x1064C60", VA = "0x1064C60", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1064C74", Offset = "0x1064C74", VA = "0x1064C74", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1064C88", Offset = "0x1064C88", VA = "0x1064C88")]
		public EditorHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x200031F")]
	internal struct HeadsetState
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GvrEventType eventType;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int eventFlags;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal long eventTimestampNs;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrRecenterEventType recenterEventType;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal uint recenterEventFlags;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 recenteredPosition;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion recenteredRotation;

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x12F26F0", Offset = "0x12F26F0", VA = "0x12F26F0")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x2000320")]
	internal interface IHeadsetProvider
	{
		[Token(Token = "0x170004C1")]
		bool SupportsPositionalTracking
		{
			[Token(Token = "0x60016E2")]
			get;
		}

		[Token(Token = "0x60016E3")]
		void PollEventState(ref HeadsetState outState);

		[Token(Token = "0x60016E4")]
		bool TryGetFloorHeight(ref float floorHeight);

		[Token(Token = "0x60016E5")]
		bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation);

		[Token(Token = "0x60016E6")]
		bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType);

		[Token(Token = "0x60016E7")]
		bool TryGetSafetyCylinderInnerRadius(ref float innerRadius);

		[Token(Token = "0x60016E8")]
		bool TryGetSafetyCylinderOuterRadius(ref float outerRadius);
	}
	[Token(Token = "0x2000321")]
	public class InstantPreview : MonoBehaviour
	{
		[Token(Token = "0x2000322")]
		public enum Resolutions
		{
			[Token(Token = "0x400122A")]
			Big,
			[Token(Token = "0x400122B")]
			Regular,
			[Token(Token = "0x400122C")]
			WindowSized
		}

		[Token(Token = "0x2000323")]
		private struct ResolutionSize
		{
			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int width;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int height;
		}

		[Token(Token = "0x2000324")]
		public enum MultisampleCounts
		{
			[Token(Token = "0x4001230")]
			One,
			[Token(Token = "0x4001231")]
			Two,
			[Token(Token = "0x4001232")]
			Four,
			[Token(Token = "0x4001233")]
			Eight
		}

		[Token(Token = "0x2000325")]
		public enum BitRates
		{
			[Token(Token = "0x4001235")]
			_2000,
			[Token(Token = "0x4001236")]
			_4000,
			[Token(Token = "0x4001237")]
			_8000,
			[Token(Token = "0x4001238")]
			_16000,
			[Token(Token = "0x4001239")]
			_24000,
			[Token(Token = "0x400123A")]
			_32000
		}

		[Token(Token = "0x2000326")]
		private struct UnityRect
		{
			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float right;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float left;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float top;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bottom;
		}

		[Token(Token = "0x2000327")]
		private struct UnityEyeViews
		{
			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 leftEyePose;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4 rightEyePose;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UnityRect leftEyeViewSize;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public UnityRect rightEyeViewSize;
		}

		[Token(Token = "0x4001221")]
		private const string NoDevicesFoundAdbResult = "error: no devices/emulators found";

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2914", Offset = "0x7D2914")]
		private static InstantPreview <Instance>k__BackingField;

		[Token(Token = "0x4001223")]
		internal const string dllName = "instant_preview_unity_plugin";

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D2924", Offset = "0x7D2924")]
		public Resolutions OutputResolution;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D295C", Offset = "0x7D295C")]
		public MultisampleCounts MultisampleCount;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D2994", Offset = "0x7D2994")]
		public BitRates BitRate;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D29CC", Offset = "0x7D29CC")]
		public bool InstallApkOnRun;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object InstantPreviewApk;

		[Token(Token = "0x170004C2")]
		internal static InstantPreview Instance
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x16A7070", Offset = "0x16A7070", VA = "0x16A7070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E69C8", Offset = "0x7E69C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x16A70BC", Offset = "0x16A70BC", VA = "0x16A70BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E69D8", Offset = "0x7E69D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public bool IsCurrentlyConnected
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x16A710C", Offset = "0x16A710C", VA = "0x16A710C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x16A7114", Offset = "0x16A7114", VA = "0x16A7114")]
		public InstantPreview()
		{
		}
	}
	[Token(Token = "0x2000328")]
	internal interface IKeyboardProvider
	{
		[Token(Token = "0x170004C4")]
		string EditorText
		{
			[Token(Token = "0x60016F6")]
			get;
			[Token(Token = "0x60016F7")]
			set;
		}

		[Token(Token = "0x60016ED")]
		void OnPause();

		[Token(Token = "0x60016EE")]
		void OnResume();

		[Token(Token = "0x60016EF")]
		void ReadState(KeyboardState outState);

		[Token(Token = "0x60016F0")]
		bool Create(GvrKeyboard.KeyboardCallback keyboardEvent);

		[Token(Token = "0x60016F1")]
		void UpdateData();

		[Token(Token = "0x60016F2")]
		void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport);

		[Token(Token = "0x60016F3")]
		void Hide();

		[Token(Token = "0x60016F4")]
		void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model);

		[Token(Token = "0x60016F5")]
		void SetInputMode(GvrKeyboardInputMode mode);
	}
	[Token(Token = "0x2000329")]
	internal static class KeyboardProviderFactory
	{
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x16AA984", Offset = "0x16AA984", VA = "0x16AA984")]
		internal static IKeyboardProvider CreateKeyboardProvider(GvrKeyboard owner)
		{
			return null;
		}
	}
	[Token(Token = "0x200032A")]
	public class AndroidNativeKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x200032B")]
		private struct gvr_clock_time_point
		{
			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long monotonic_system_time_nanos;
		}

		[Token(Token = "0x200032C")]
		private struct gvr_recti
		{
			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int left;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int right;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bottom;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int top;
		}

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr renderEventFunction;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currentDistance;

		[Token(Token = "0x4001245")]
		private const string METHOD_NAME_GET_PACKAGE_MANAGER = "getPackageManager";

		[Token(Token = "0x4001246")]
		private const string METHOD_NAME_GET_PACKAGE_INFO = "getPackageInfo";

		[Token(Token = "0x4001247")]
		private const string PACKAGE_NAME_VRINPUTMETHOD = "com.google.android.vr.inputmethod";

		[Token(Token = "0x4001248")]
		private const string FIELD_NAME_VERSION_CODE = "versionCode";

		[Token(Token = "0x4001249")]
		private const int MIN_VERSION_VRINPUTMETHOD = 170509062;

		[Token(Token = "0x400124A")]
		private const string dllName = "gvr_keyboard_shim_unity";

		[Token(Token = "0x400124B")]
		private const int TRIGGER_NONE = 0;

		[Token(Token = "0x400124C")]
		private const int TRIGGER_PRESSED = 1;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IntPtr keyboard_context;

		[Token(Token = "0x400124E")]
		private const int advanceID = 1571584315;

		[Token(Token = "0x400124F")]
		private const int renderLeftID = 1022982717;

		[Token(Token = "0x4001250")]
		private const int renderRightID = 1022982718;

		[Token(Token = "0x4001251")]
		private const string KEYBOARD_JAVA_CLASS = "com.google.vr.keyboard.GvrKeyboardUnity";

		[Token(Token = "0x4001252")]
		private const long kPredictionTimeWithoutVsyncNanos = 50000000L;

		[Token(Token = "0x4001253")]
		private const int kGvrControllerButtonClick = 1;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string editorText;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isValid;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isReady;

		[Token(Token = "0x170004C5")]
		public string EditorText
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x166EFF4", Offset = "0x166EFF4", VA = "0x166EFF4", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x166F070", Offset = "0x166F070", VA = "0x166F070", Slot = "14")]
			set
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x166E6F4", Offset = "0x166E6F4", VA = "0x166E6F4")]
		private static extern gvr_clock_time_point gvr_get_time_point_now();

		[PreserveSig]
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x166E768", Offset = "0x166E768", VA = "0x166E768")]
		private static extern GvrKeyboardInputMode gvr_keyboard_get_input_mode(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x166E7E8", Offset = "0x166E7E8", VA = "0x166E7E8")]
		private static extern void gvr_keyboard_set_input_mode(IntPtr keyboard_context, GvrKeyboardInputMode mode);

		[PreserveSig]
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x166E878", Offset = "0x166E878", VA = "0x166E878")]
		private static extern IntPtr gvr_keyboard_initialize(AndroidJavaObject app_context, AndroidJavaObject class_loader);

		[PreserveSig]
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x166E894", Offset = "0x166E894", VA = "0x166E894")]
		private static extern IntPtr gvr_keyboard_create(IntPtr closure, GvrKeyboard.KeyboardCallback callback);

		[PreserveSig]
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x166E92C", Offset = "0x166E92C", VA = "0x166E92C")]
		private static extern void gvr_keyboard_get_recommended_world_from_keyboard_matrix(float distance_from_eye, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x166E9BC", Offset = "0x166E9BC", VA = "0x166E9BC")]
		private static extern void gvr_keyboard_set_world_from_keyboard_matrix(IntPtr keyboard_context, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6001700")]
		[Address(RVA = "0x166EA4C", Offset = "0x166EA4C", VA = "0x166EA4C")]
		private static extern void gvr_keyboard_show(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001701")]
		[Address(RVA = "0x166EACC", Offset = "0x166EACC", VA = "0x166EACC")]
		private static extern void gvr_keyboard_update_button_state(IntPtr keyboard_context, int buttonIndex, bool pressed);

		[PreserveSig]
		[Token(Token = "0x6001702")]
		[Address(RVA = "0x166EB64", Offset = "0x166EB64", VA = "0x166EB64")]
		private static extern bool gvr_keyboard_update_controller_ray(IntPtr keyboard_context, IntPtr vector3Start, IntPtr vector3End, IntPtr vector3Hit);

		[PreserveSig]
		[Token(Token = "0x6001703")]
		[Address(RVA = "0x166EC14", Offset = "0x166EC14", VA = "0x166EC14")]
		private static extern IntPtr gvr_keyboard_get_text(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001704")]
		[Address(RVA = "0x166EC94", Offset = "0x166EC94", VA = "0x166EC94")]
		private static extern int gvr_keyboard_set_text(IntPtr keyboard_context, IntPtr edit_text);

		[PreserveSig]
		[Token(Token = "0x6001705")]
		[Address(RVA = "0x166ED24", Offset = "0x166ED24", VA = "0x166ED24")]
		private static extern void gvr_keyboard_hide(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0x166EDA4", Offset = "0x166EDA4", VA = "0x166EDA4")]
		private static extern void gvr_keyboard_destroy(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001707")]
		[Address(RVA = "0x166EE24", Offset = "0x166EE24", VA = "0x166EE24")]
		private static extern void GvrKeyboardSetFrameData(IntPtr keyboard_context, gvr_clock_time_point t);

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0x166EEB0", Offset = "0x166EEB0", VA = "0x166EEB0")]
		private static extern void GvrKeyboardSetEyeData(int eye_type, Matrix4x4 modelview, Matrix4x4 projection, gvr_recti viewport);

		[PreserveSig]
		[Token(Token = "0x6001709")]
		[Address(RVA = "0x166EF80", Offset = "0x166EF80", VA = "0x166EF80")]
		private static extern IntPtr GetKeyboardRenderEventFunc();

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x166F0F4", Offset = "0x166F0F4", VA = "0x166F0F4", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x166F1F4", Offset = "0x166F1F4", VA = "0x166F1F4", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x166F1F8", Offset = "0x166F1F8", VA = "0x166F1F8", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x166F1FC", Offset = "0x166F1FC", VA = "0x166F1FC", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x166F248", Offset = "0x166F248", VA = "0x166F248")]
		public AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x166F520", Offset = "0x166F520", VA = "0x166F520", Slot = "1")]
		~AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x166F5C4", Offset = "0x166F5C4", VA = "0x166F5C4", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x166F9A0", Offset = "0x166F9A0", VA = "0x166F9A0", Slot = "11")]
		public void Show(Matrix4x4 userMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x166FDCC", Offset = "0x166FDCC", VA = "0x166FDCC", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x16700EC", Offset = "0x16700EC", VA = "0x16700EC", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1670378", Offset = "0x1670378", VA = "0x1670378", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x166FC04", Offset = "0x166FC04", VA = "0x166FC04")]
		private Matrix4x4 getRecommendedMatrix(float inputDistance)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x166F648", Offset = "0x166F648", VA = "0x166F648")]
		private bool IsVrInputMethodAppMinVersion(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032D")]
	internal class DummyKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyboardState dummyState;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A04", Offset = "0x7D2A04")]
		private string <EditorText>k__BackingField;

		[Token(Token = "0x170004C6")]
		public string EditorText
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0x1064BAC", Offset = "0x1064BAC", VA = "0x1064BAC", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E69E8", Offset = "0x7E69E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x1064BB4", Offset = "0x1064BB4", VA = "0x1064BB4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E69F8", Offset = "0x7E69F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x1064B00", Offset = "0x1064B00", VA = "0x1064B00")]
		internal DummyKeyboardProvider()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1064B64", Offset = "0x1064B64", VA = "0x1064B64", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1064B88", Offset = "0x1064B88", VA = "0x1064B88", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1064B8C", Offset = "0x1064B8C", VA = "0x1064B8C", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1064B90", Offset = "0x1064B90", VA = "0x1064B90", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1064B94", Offset = "0x1064B94", VA = "0x1064B94", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1064B98", Offset = "0x1064B98", VA = "0x1064B98", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1064B9C", Offset = "0x1064B9C", VA = "0x1064B9C", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1064BA0", Offset = "0x1064BA0", VA = "0x1064BA0", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1064BA8", Offset = "0x1064BA8", VA = "0x1064BA8", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class EmulatorKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject stub;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool showing;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GvrKeyboard.KeyboardCallback keyboardCallback;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string editorText;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isValid;

		[Token(Token = "0x170004C7")]
		public string EditorText
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x10651D8", Offset = "0x10651D8", VA = "0x10651D8", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x10651E0", Offset = "0x10651E0", VA = "0x10651E0", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x10651E8", Offset = "0x10651E8", VA = "0x10651E8", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x10651F0", Offset = "0x10651F0", VA = "0x10651F0")]
		public EmulatorKeyboardProvider()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x10652A8", Offset = "0x10652A8", VA = "0x10652A8", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x10652AC", Offset = "0x10652AC", VA = "0x10652AC", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x10652B0", Offset = "0x10652B0", VA = "0x10652B0", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x10652FC", Offset = "0x10652FC", VA = "0x10652FC", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1065370", Offset = "0x1065370", VA = "0x1065370", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1065410", Offset = "0x1065410", VA = "0x1065410", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x10655EC", Offset = "0x10655EC", VA = "0x10655EC", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x10655F0", Offset = "0x10655F0", VA = "0x10655F0", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1065598", Offset = "0x1065598", VA = "0x1065598")]
		private void SendUpdateNotification()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class GvrCursorHelper
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool cachedHeadEmulationActive;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool cachedControllerEmulationActive;

		[Token(Token = "0x170004C8")]
		public static bool HeadEmulationActive
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x1445400", Offset = "0x1445400", VA = "0x1445400")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public static bool ControllerEmulationActive
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x14454BC", Offset = "0x14454BC", VA = "0x14454BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1445454", Offset = "0x1445454", VA = "0x1445454")]
		private static void UpdateCursorLockState()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1445510", Offset = "0x1445510", VA = "0x1445510")]
		public GvrCursorHelper()
		{
		}
	}
}
namespace RetroAesthetics
{
	[Token(Token = "0x2000330")]
	[ExecuteInEditMode]
	public class CombineMeshes : MonoBehaviour
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorButtonAttribute", RVA = "0x7D2A14", Offset = "0x7D2A14")]
		public bool combineChildMeshes;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x10C595C", Offset = "0x10C595C", VA = "0x10C595C")]
		private void CombineButtonHandler()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x10C5968", Offset = "0x10C5968", VA = "0x10C5968", Slot = "4")]
		public virtual void CombineChildMeshes()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x10C5E10", Offset = "0x10C5E10", VA = "0x10C5E10")]
		public CombineMeshes()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class SceneField
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UnityEngine.Object m_SceneAsset;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_SceneName;

		[Token(Token = "0x170004CA")]
		public string SceneName
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xDA0460", Offset = "0xDA0460", VA = "0xDA0460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xDA0468", Offset = "0xDA0468", VA = "0xDA0468")]
		public static implicit operator string(SceneField sceneField)
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xDA0480", Offset = "0xDA0480", VA = "0xDA0480")]
		public SceneField()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class UVScroller : MonoBehaviour
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 scrollSpeed;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string textureName;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material target;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 offset;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xDEA08C", Offset = "0xDEA08C", VA = "0xDEA08C")]
		private void Start()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xDEA230", Offset = "0xDEA230", VA = "0xDEA230")]
		private void Update()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xDEA29C", Offset = "0xDEA29C", VA = "0xDEA29C")]
		public UVScroller()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCB88", Offset = "0x7CCB88")]
	[ImageEffectAllowedInSceneView]
	public class RetroCameraEffect : MonoBehaviour
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D2A6C", Offset = "0x7D2A6C")]
		public bool useStaticNoise;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D2AA4", Offset = "0x7D2AA4")]
		public Texture noiseTexture;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2ADC", Offset = "0x7D2ADC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D2ADC", Offset = "0x7D2ADC")]
		public float staticIntensity;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2B40", Offset = "0x7D2B40")]
		public bool randomGlitches;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2B50", Offset = "0x7D2B50")]
		public float glitchIntensity;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2B90", Offset = "0x7D2B90")]
		[SerializeField]
		public int glitchFrequency;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2BD4", Offset = "0x7D2BD4")]
		public bool useDisplacementWaves;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2BE4", Offset = "0x7D2BE4")]
		[SerializeField]
		public float displacementAmplitude;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2C24", Offset = "0x7D2C24")]
		public float displacementFrequency;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2C68", Offset = "0x7D2C68")]
		[SerializeField]
		public float displacementSpeed;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2CA8", Offset = "0x7D2CA8")]
		public bool useChromaticAberration;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2CB8", Offset = "0x7D2CB8")]
		[SerializeField]
		public float chromaticAberration;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2CFC", Offset = "0x7D2CFC")]
		public bool useVignette;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2D0C", Offset = "0x7D2D0C")]
		public float vignette;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2D4C", Offset = "0x7D2D4C")]
		public bool useBottomNoise;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2D5C", Offset = "0x7D2D5C")]
		public float bottomHeight;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2D74", Offset = "0x7D2D74")]
		public float bottomIntensity;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useBottomStretch;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2D8C", Offset = "0x7D2D8C")]
		public bool useRadialDistortion;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float radialIntensity;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float radialCurvature;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2D9C", Offset = "0x7D2D9C")]
		public float gammaScale;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7D2DAC", Offset = "0x7D2DAC")]
		public bool useScanlines;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float scanlineSize;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2DBC", Offset = "0x7D2DBC")]
		public float scanlineIntensity;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Material _material;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isFading;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _gammaTarget;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _gammaDelta;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Action _callback;

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x13064D0", Offset = "0x13064D0", VA = "0x13064D0", Slot = "4")]
		public virtual void Glitch(float amount = 1f)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1306594", Offset = "0x1306594", VA = "0x1306594", Slot = "5")]
		public virtual void FadeIn(float speed = 1f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x13065B4", Offset = "0x13065B4", VA = "0x13065B4", Slot = "6")]
		public virtual void FadeOut(float speed = 1f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x13065D0", Offset = "0x13065D0", VA = "0x13065D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1306748", Offset = "0x1306748", VA = "0x1306748")]
		private void Update()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x13067D8", Offset = "0x13067D8", VA = "0x13067D8")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1306E8C", Offset = "0x1306E8C", VA = "0x1306E8C")]
		public RetroCameraEffect()
		{
		}
	}
}
namespace RetroAesthetics.Demos
{
	[Token(Token = "0x2000334")]
	public class SpeedTilt : MonoBehaviour
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minimumLocalPositionY;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minimumLocalRotationX;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maximumFOV;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minSpeed;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxSpeed;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _maxPositionY;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _maxRotationX;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _lastPosition;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _distance;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _localPosition;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 _localRotationYZ;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera _camera;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _minFOV;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1283BE8", Offset = "0x1283BE8", VA = "0x1283BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1283DB8", Offset = "0x1283DB8", VA = "0x1283DB8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1283F48", Offset = "0x1283F48", VA = "0x1283F48")]
		public SpeedTilt()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class MenuScripts : MonoBehaviour
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneField loadingScene;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneField levelScene;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadeInMenu;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool fadeOutMenu;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RetroCameraEffect _cameraEffect;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation _loadingSceneAsync;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x11297F8", Offset = "0x11297F8", VA = "0x11297F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x11298B4", Offset = "0x11298B4", VA = "0x11298B4", Slot = "4")]
		public virtual void StartLevel()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1129AC8", Offset = "0x1129AC8", VA = "0x1129AC8")]
		private void LoadNextScene()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1129B54", Offset = "0x1129B54", VA = "0x1129B54")]
		public MenuScripts()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x2000336")]
	public class CameraRefocus
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Parent;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Refocus;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x10C1D4C", Offset = "0x10C1D4C", VA = "0x10C1D4C")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x10C1DAC", Offset = "0x10C1DAC", VA = "0x10C1DAC")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x10C1DB4", Offset = "0x10C1DB4", VA = "0x10C1DB4")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x10C1DBC", Offset = "0x10C1DBC", VA = "0x10C1DBC")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x10C1EB8", Offset = "0x10C1EB8", VA = "0x10C1EB8")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public class CurveControlledBob
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1056E18", Offset = "0x1056E18", VA = "0x1056E18")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1056EBC", Offset = "0x1056EBC", VA = "0x1056EBC")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1056FB8", Offset = "0x1056FB8", VA = "0x1056FB8")]
		public CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class FOVKick
	{
		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCC08", Offset = "0x7CCC08")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600175E")]
				[Address(RVA = "0xF206F8", Offset = "0xF206F8", VA = "0xF206F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001760")]
				[Address(RVA = "0xF20740", Offset = "0xF20740", VA = "0xF20740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xF20598", Offset = "0xF20598", VA = "0xF20598")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0xF205C4", Offset = "0xF205C4", VA = "0xF205C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0xF205C8", Offset = "0xF205C8", VA = "0xF205C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0xF20700", Offset = "0xF20700", VA = "0xF20700", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCC18", Offset = "0x7CCC18")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001764")]
				[Address(RVA = "0xF20548", Offset = "0xF20548", VA = "0xF20548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001766")]
				[Address(RVA = "0xF20590", Offset = "0xF20590", VA = "0xF20590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xF203D4", Offset = "0xF203D4", VA = "0xF203D4")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xF20400", Offset = "0xF20400", VA = "0xF20400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xF20404", Offset = "0xF20404", VA = "0xF20404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xF20550", Offset = "0xF20550", VA = "0xF20550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1067764", Offset = "0x1067764", VA = "0x1067764")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x10677A4", Offset = "0x10677A4", VA = "0x10677A4")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1067890", Offset = "0x1067890", VA = "0x1067890")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1067898", Offset = "0x1067898", VA = "0x1067898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6A08", Offset = "0x7E6A08")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1067904", Offset = "0x1067904", VA = "0x1067904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6A68", Offset = "0x7E6A68")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1067970", Offset = "0x1067970", VA = "0x1067970")]
		public FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class LerpControlledBob
	{
		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCC28", Offset = "0x7CCC28")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600176D")]
				[Address(RVA = "0xDB6B84", Offset = "0xDB6B84", VA = "0xDB6B84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176F")]
				[Address(RVA = "0xDB6BCC", Offset = "0xDB6BCC", VA = "0xDB6BCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0xDB69C8", Offset = "0xDB69C8", VA = "0xDB69C8")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0xDB69F4", Offset = "0xDB69F4", VA = "0xDB69F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0xDB69F8", Offset = "0xDB69F8", VA = "0xDB69F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0xDB6B8C", Offset = "0xDB6B8C", VA = "0xDB6B8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x16AC6D4", Offset = "0x16AC6D4", VA = "0x16AC6D4")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x16AC6DC", Offset = "0x16AC6DC", VA = "0x16AC6DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6B68", Offset = "0x7E6B68")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x16AC748", Offset = "0x16AC748", VA = "0x16AC748")]
		public LerpControlledBob()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200033D")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1116550", Offset = "0x1116550", VA = "0x1116550")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1116650", Offset = "0x1116650", VA = "0x1116650")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x11167F0", Offset = "0x11167F0", VA = "0x11167F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x111680C", Offset = "0x111680C", VA = "0x111680C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x11168CC", Offset = "0x11168CC", VA = "0x11168CC", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1116920", Offset = "0x1116920", VA = "0x1116920")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x10C0840", Offset = "0x10C0840", VA = "0x10C0840")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x10C0844", Offset = "0x10C0844", VA = "0x10C0844")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x10C0924", Offset = "0x10C0924", VA = "0x10C0924")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x10C0A04", Offset = "0x10C0A04", VA = "0x10C0A04")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x10C0AE4", Offset = "0x10C0AE4", VA = "0x10C0AE4")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x10C0BC4", Offset = "0x10C0BC4", VA = "0x10C0BC4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x10C0CA4", Offset = "0x10C0CA4", VA = "0x10C0CA4")]
		public void Update()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x10C0CA8", Offset = "0x10C0CA8", VA = "0x10C0CA8")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000340")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x40012CF")]
			Hardware,
			[Token(Token = "0x40012D0")]
			Touch
		}

		[Token(Token = "0x2000341")]
		public class VirtualAxis
		{
			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2DF4", Offset = "0x7D2DF4")]
			private string <name>k__BackingField;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E04", Offset = "0x7D2E04")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170004D2")]
			public string name
			{
				[Token(Token = "0x6001797")]
				[Address(RVA = "0xF1EE84", Offset = "0xF1EE84", VA = "0xF1EE84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C18", Offset = "0x7E6C18")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001798")]
				[Address(RVA = "0xF1EE8C", Offset = "0xF1EE8C", VA = "0xF1EE8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C28", Offset = "0x7E6C28")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D3")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001799")]
				[Address(RVA = "0xF1EE94", Offset = "0xF1EE94", VA = "0xF1EE94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C38", Offset = "0x7E6C38")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600179A")]
				[Address(RVA = "0xF1EE9C", Offset = "0xF1EE9C", VA = "0xF1EE9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C48", Offset = "0x7E6C48")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D4")]
			public float GetValue
			{
				[Token(Token = "0x600179F")]
				[Address(RVA = "0xF1EF8C", Offset = "0xF1EF8C", VA = "0xF1EF8C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170004D5")]
			public float GetValueRaw
			{
				[Token(Token = "0x60017A0")]
				[Address(RVA = "0xF1EF94", Offset = "0xF1EF94", VA = "0xF1EF94")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600179B")]
			[Address(RVA = "0xF1EEA8", Offset = "0xF1EEA8", VA = "0xF1EEA8")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x600179C")]
			[Address(RVA = "0xF1EEDC", Offset = "0xF1EEDC", VA = "0xF1EEDC")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x600179D")]
			[Address(RVA = "0xF1EF1C", Offset = "0xF1EF1C", VA = "0xF1EF1C")]
			public void Remove()
			{
			}

			[Token(Token = "0x600179E")]
			[Address(RVA = "0xF1EF84", Offset = "0xF1EF84", VA = "0xF1EF84")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000342")]
		public class VirtualButton
		{
			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E14", Offset = "0x7D2E14")]
			private string <name>k__BackingField;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E24", Offset = "0x7D2E24")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x170004D6")]
			public string name
			{
				[Token(Token = "0x60017A1")]
				[Address(RVA = "0xF1EF9C", Offset = "0xF1EF9C", VA = "0xF1EF9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C58", Offset = "0x7E6C58")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017A2")]
				[Address(RVA = "0xF1EFA4", Offset = "0xF1EFA4", VA = "0xF1EFA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C68", Offset = "0x7E6C68")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D7")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60017A3")]
				[Address(RVA = "0xF1EFAC", Offset = "0xF1EFAC", VA = "0xF1EFAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C78", Offset = "0x7E6C78")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60017A4")]
				[Address(RVA = "0xF1EFB4", Offset = "0xF1EFB4", VA = "0xF1EFB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C88", Offset = "0x7E6C88")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D8")]
			public bool GetButton
			{
				[Token(Token = "0x60017AA")]
				[Address(RVA = "0xF1F114", Offset = "0xF1F114", VA = "0xF1F114")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004D9")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0xF1F11C", Offset = "0xF1F11C", VA = "0xF1F11C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004DA")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60017AC")]
				[Address(RVA = "0xF1F14C", Offset = "0xF1F14C", VA = "0xF1F14C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xF1EFC0", Offset = "0xF1EFC0", VA = "0xF1EFC0")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xF1EFFC", Offset = "0xF1EFFC", VA = "0xF1EFFC")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xF1F044", Offset = "0xF1F044", VA = "0xF1F044")]
			public void Pressed()
			{
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xF1F080", Offset = "0xF1F080", VA = "0xF1F080")]
			public void Released()
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xF1F0AC", Offset = "0xF1F0AC", VA = "0xF1F0AC")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170004D1")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x10CAFFC", Offset = "0x10CAFFC", VA = "0x10CAFFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x10CA7B0", Offset = "0x10CA7B0", VA = "0x10CA7B0")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x10CA864", Offset = "0x10CA864", VA = "0x10CA864")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x10CA910", Offset = "0x10CA910", VA = "0x10CA910")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x10CA988", Offset = "0x10CA988", VA = "0x10CA988")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x10CAA00", Offset = "0x10CAA00", VA = "0x10CAA00")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x10CAA78", Offset = "0x10CAA78", VA = "0x10CAA78")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x10CAAF0", Offset = "0x10CAAF0", VA = "0x10CAAF0")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x10CABB4", Offset = "0x10CABB4", VA = "0x10CABB4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x10CAC2C", Offset = "0x10CAC2C", VA = "0x10CAC2C")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x10CACA4", Offset = "0x10CACA4", VA = "0x10CACA4")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x10CAD94", Offset = "0x10CAD94", VA = "0x10CAD94")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x10CAD08", Offset = "0x10CAD08", VA = "0x10CAD08")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x10CADF8", Offset = "0x10CADF8", VA = "0x10CADF8")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x10CAE74", Offset = "0x10CAE74", VA = "0x10CAE74")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x10CAEF0", Offset = "0x10CAEF0", VA = "0x10CAEF0")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x10C08A8", Offset = "0x10C08A8", VA = "0x10C08A8")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x10C0988", Offset = "0x10C0988", VA = "0x10C0988")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x10C0A68", Offset = "0x10C0A68", VA = "0x10C0A68")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x10C0C28", Offset = "0x10C0C28", VA = "0x10C0C28")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x10C0B48", Offset = "0x10C0B48", VA = "0x10C0B48")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10CAF6C", Offset = "0x10CAF6C", VA = "0x10CAF6C")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x10CB074", Offset = "0x10CB074", VA = "0x10CB074")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x10CB0F4", Offset = "0x10CB0F4", VA = "0x10CB0F4")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x10CB174", Offset = "0x10CB174", VA = "0x10CB174")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x16A2D44", Offset = "0x16A2D44", VA = "0x16A2D44")]
		private void Update()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x16A2D48", Offset = "0x16A2D48", VA = "0x16A2D48")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x16A2DC8", Offset = "0x16A2DC8", VA = "0x16A2DC8")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000345")]
		public enum AxisOption
		{
			[Token(Token = "0x40012E4")]
			Both,
			[Token(Token = "0x40012E5")]
			OnlyHorizontal,
			[Token(Token = "0x40012E6")]
			OnlyVertical
		}

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x16A7A10", Offset = "0x16A7A10", VA = "0x16A7A10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x16A7B50", Offset = "0x16A7B50", VA = "0x16A7B50")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x16A7B8C", Offset = "0x16A7B8C", VA = "0x16A7B8C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x16A7A14", Offset = "0x16A7A14", VA = "0x16A7A14")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x16A7BF0", Offset = "0x16A7BF0", VA = "0x16A7BF0", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x16A7D14", Offset = "0x16A7D14", VA = "0x16A7D14", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x16A7D5C", Offset = "0x16A7D5C", VA = "0x16A7D5C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x16A7D60", Offset = "0x16A7D60", VA = "0x16A7D60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x16A7DB8", Offset = "0x16A7DB8", VA = "0x16A7DB8")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xFED808", Offset = "0xFED808", VA = "0xFED808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xFED818", Offset = "0xFED818", VA = "0xFED818")]
		private void Start()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xFED810", Offset = "0xFED810", VA = "0xFED810")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xFED92C", Offset = "0xFED92C", VA = "0xFED92C")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xFEDBE8", Offset = "0xFEDBE8", VA = "0xFEDBE8")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		public enum AxisOptions
		{
			[Token(Token = "0x40012ED")]
			ForwardAxis,
			[Token(Token = "0x40012EE")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000349")]
		public class AxisMapping
		{
			[Token(Token = "0x200034A")]
			public enum MappingType
			{
				[Token(Token = "0x40012F2")]
				NamedAxis,
				[Token(Token = "0x40012F3")]
				MousePositionX,
				[Token(Token = "0x40012F4")]
				MousePositionY,
				[Token(Token = "0x40012F5")]
				MousePositionZ
			}

			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xCC8258", Offset = "0xCC8258", VA = "0xCC8258")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xE80AF4", Offset = "0xE80AF4", VA = "0xE80AF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xE80BB8", Offset = "0xE80BB8", VA = "0xE80BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xE80DE0", Offset = "0xE80DE0", VA = "0xE80DE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xE80DFC", Offset = "0xE80DFC", VA = "0xE80DFC")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCC48", Offset = "0x7CCC48")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x200034C")]
		public enum AxisOption
		{
			[Token(Token = "0x4001309")]
			Both,
			[Token(Token = "0x400130A")]
			OnlyHorizontal,
			[Token(Token = "0x400130B")]
			OnlyVertical
		}

		[Token(Token = "0x200034D")]
		public enum ControlStyle
		{
			[Token(Token = "0x400130D")]
			Absolute,
			[Token(Token = "0x400130E")]
			Relative,
			[Token(Token = "0x400130F")]
			Swipe
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xE818F4", Offset = "0xE818F4", VA = "0xE818F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xE81A34", Offset = "0xE81A34", VA = "0xE81A34")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xE818F8", Offset = "0xE818F8", VA = "0xE818F8")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE81AAC", Offset = "0xE81AAC", VA = "0xE81AAC")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE81B18", Offset = "0xE81B18", VA = "0xE81B18", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE81B50", Offset = "0xE81B50", VA = "0xE81B50")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE81C98", Offset = "0xE81C98", VA = "0xE81C98", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE81CCC", Offset = "0xE81CCC", VA = "0xE81CCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE81DCC", Offset = "0xE81DCC", VA = "0xE81DCC")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E34", Offset = "0x7D2E34")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x170004DB")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xDF5134", Offset = "0xDF5134", VA = "0xDF5134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6C98", Offset = "0x7E6C98")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xDF5140", Offset = "0xDF5140", VA = "0xDF5140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6CA8", Offset = "0x7E6CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xDF514C", Offset = "0xDF514C", VA = "0xDF514C")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xDF51B0", Offset = "0xDF51B0", VA = "0xDF51B0")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xDF5214", Offset = "0xDF5214", VA = "0xDF5214")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xDF5374", Offset = "0xDF5374", VA = "0xDF5374")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xDF54D4", Offset = "0xDF54D4", VA = "0xDF54D4")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xDF5574", Offset = "0xDF5574", VA = "0xDF5574")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xDF5614", Offset = "0xDF5614", VA = "0xDF5614")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xDF56B0", Offset = "0xDF56B0", VA = "0xDF56B0")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xDF56B8", Offset = "0xDF56B8", VA = "0xDF56B8")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xDF56C0", Offset = "0xDF56C0", VA = "0xDF56C0")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x60017D8")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x60017D9")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60017DA")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60017DB")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60017DC")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60017DD")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60017DE")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60017DF")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x60017E0")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x60017E1")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x60017E2")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xDF56C8", Offset = "0xDF56C8", VA = "0xDF56C8")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x200034F")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xFEDBF0", Offset = "0xFEDBF0", VA = "0xFEDBF0")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xFEDC80", Offset = "0xFEDC80", VA = "0xFEDC80")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xFEDD10", Offset = "0xFEDD10", VA = "0xFEDD10", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xFEDDB4", Offset = "0xFEDDB4", VA = "0xFEDDB4", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xFEDE58", Offset = "0xFEDE58", VA = "0xFEDE58", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xFEDEFC", Offset = "0xFEDEFC", VA = "0xFEDEFC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xFEDFA4", Offset = "0xFEDFA4", VA = "0xFEDFA4", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xFEE04C", Offset = "0xFEE04C", VA = "0xFEE04C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xFEE0F0", Offset = "0xFEE0F0", VA = "0xFEE0F0", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xFEE1A0", Offset = "0xFEE1A0", VA = "0xFEE1A0", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xFEE244", Offset = "0xFEE244", VA = "0xFEE244", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xFEE2E8", Offset = "0xFEE2E8", VA = "0xFEE2E8", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xFEE38C", Offset = "0xFEE38C", VA = "0xFEE38C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xFEE398", Offset = "0xFEE398", VA = "0xFEE398")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xE7B10C", Offset = "0xE7B10C", VA = "0xE7B10C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xE7B120", Offset = "0xE7B120", VA = "0xE7B120", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xE7B12C", Offset = "0xE7B12C", VA = "0xE7B12C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xE7B138", Offset = "0xE7B138", VA = "0xE7B138", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xE7B144", Offset = "0xE7B144", VA = "0xE7B144", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xE7B198", Offset = "0xE7B198", VA = "0xE7B198", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xE7B1EC", Offset = "0xE7B1EC", VA = "0xE7B1EC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE7B240", Offset = "0xE7B240", VA = "0xE7B240", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xE7B294", Offset = "0xE7B294", VA = "0xE7B294", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xE7B2E8", Offset = "0xE7B2E8", VA = "0xE7B2E8", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xE7B33C", Offset = "0xE7B33C", VA = "0xE7B33C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xE7B344", Offset = "0xE7B344", VA = "0xE7B344")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.Vehicles.Ball
{
	[Token(Token = "0x2000351")]
	public class Ball : MonoBehaviour
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovePower;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseTorque;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MaxAngularVelocity;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4001318")]
		private const float k_GroundRayLength = 1f;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1118E20", Offset = "0x1118E20", VA = "0x1118E20")]
		private void Start()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1118E90", Offset = "0x1118E90", VA = "0x1118E90")]
		public void Move(Vector3 moveDirection, bool jump)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1118FA8", Offset = "0x1118FA8", VA = "0x1118FA8")]
		public Ball()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class BallUserControl : MonoBehaviour
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Ball ball;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 move;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cam;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 camForward;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool jump;

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1118FCC", Offset = "0x1118FCC", VA = "0x1118FCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x11190E0", Offset = "0x11190E0", VA = "0x11190E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x11192B8", Offset = "0x11192B8", VA = "0x11192B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x11192F4", Offset = "0x11192F4", VA = "0x11192F4")]
		public BallUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.ThirdPerson
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCCA8", Offset = "0x7CCCA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCCA8", Offset = "0x7CCCA8")]
	public class AICharacterControl : MonoBehaviour
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E84", Offset = "0x7D2E84")]
		private NavMeshAgent <agent>k__BackingField;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2E94", Offset = "0x7D2E94")]
		private ThirdPersonCharacter <character>k__BackingField;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x170004DC")]
		public NavMeshAgent agent
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1664980", Offset = "0x1664980", VA = "0x1664980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6CB8", Offset = "0x7E6CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x1664988", Offset = "0x1664988", VA = "0x1664988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6CC8", Offset = "0x7E6CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public ThirdPersonCharacter character
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1664990", Offset = "0x1664990", VA = "0x1664990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6CD8", Offset = "0x7E6CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1664998", Offset = "0x1664998", VA = "0x1664998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6CE8", Offset = "0x7E6CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x16649A0", Offset = "0x16649A0", VA = "0x16649A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1664A44", Offset = "0x1664A44", VA = "0x1664A44")]
		private void Update()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1664B48", Offset = "0x1664B48", VA = "0x1664B48")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1664B50", Offset = "0x1664B50", VA = "0x1664B50")]
		public AICharacterControl()
		{
		}
	}
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCD3C", Offset = "0x7CCD3C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCD3C", Offset = "0x7CCD3C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCD3C", Offset = "0x7CCD3C")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2ED4", Offset = "0x7D2ED4")]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x400132E")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xE7FBA4", Offset = "0xE7FBA4", VA = "0xE7FBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xE7FC88", Offset = "0xE7FC88", VA = "0xE7FC88")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xE800F4", Offset = "0xE800F4", VA = "0xE800F4")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xE802DC", Offset = "0xE802DC", VA = "0xE802DC")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xE80424", Offset = "0xE80424", VA = "0xE80424")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xE80050", Offset = "0xE80050", VA = "0xE80050")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE7FF30", Offset = "0xE7FF30", VA = "0xE7FF30")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE7FEB8", Offset = "0xE7FEB8", VA = "0xE7FEB8")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE80684", Offset = "0xE80684", VA = "0xE80684")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE7FDA0", Offset = "0xE7FDA0", VA = "0xE7FDA0")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE80734", Offset = "0xE80734", VA = "0xE80734")]
		public ThirdPersonCharacter()
		{
		}
	}
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCE04", Offset = "0x7CCE04")]
	public class ThirdPersonUserControl : MonoBehaviour
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ThirdPersonCharacter m_Character;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xE80754", Offset = "0xE80754", VA = "0xE80754")]
		private void Start()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xE8087C", Offset = "0xE8087C", VA = "0xE8087C")]
		private void Update()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xE80908", Offset = "0xE80908", VA = "0xE80908")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xE80AEC", Offset = "0xE80AEC", VA = "0xE80AEC")]
		public ThirdPersonUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCE64", Offset = "0x7CCE64")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCE64", Offset = "0x7CCE64")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D2F84", Offset = "0x7D2F84")]
		[SerializeField]
		private float m_RunstepLenghten;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVKick m_FovKick;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveControlledBob m_HeadBob;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpControlledBob m_JumpBob;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x145170C", Offset = "0x145170C", VA = "0x145170C")]
		private void Start()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1451824", Offset = "0x1451824", VA = "0x1451824")]
		private void Update()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x14519A0", Offset = "0x14519A0", VA = "0x14519A0")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x14519F4", Offset = "0x14519F4", VA = "0x14519F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1451E40", Offset = "0x1451E40", VA = "0x1451E40")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1451E80", Offset = "0x1451E80", VA = "0x1451E80")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x145214C", Offset = "0x145214C", VA = "0x145214C")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1451F84", Offset = "0x1451F84", VA = "0x1451F84")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1451C9C", Offset = "0x1451C9C", VA = "0x1451C9C")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1451948", Offset = "0x1451948", VA = "0x1451948")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1452298", Offset = "0x1452298", VA = "0x1452298")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x14523D4", Offset = "0x14523D4", VA = "0x14523D4")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurveControlledBob motionBob;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StrideInterval;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3094", Offset = "0x7D3094")]
		public float RunningStrideLengthen;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x12F1A84", Offset = "0x12F1A84", VA = "0x12F1A84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x12F1AE0", Offset = "0x12F1AE0", VA = "0x12F1AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x12F1CEC", Offset = "0x12F1CEC", VA = "0x12F1CEC")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	public class MouseLook
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xFEEF08", Offset = "0xFEEF08", VA = "0xFEEF08")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xFEEF5C", Offset = "0xFEEF5C", VA = "0xFEEF5C")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xFEF2AC", Offset = "0xFEF2AC", VA = "0xFEF2AC")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xFEF29C", Offset = "0xFEF29C", VA = "0xFEF29C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xFEF2E0", Offset = "0xFEF2E0", VA = "0xFEF2E0")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xFEF234", Offset = "0xFEF234", VA = "0xFEF234")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xFEF35C", Offset = "0xFEF35C", VA = "0xFEF35C")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCEF8", Offset = "0x7CCEF8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCEF8", Offset = "0x7CCEF8")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200035A")]
		public class MovementSettings
		{
			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x600183F")]
			[Address(RVA = "0xDC1E8C", Offset = "0xDC1E8C", VA = "0xDC1E8C")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6001840")]
			[Address(RVA = "0xDC1F1C", Offset = "0xDC1F1C", VA = "0xDC1F1C")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200035B")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D30BC", Offset = "0x7D30BC")]
			public float shellOffset;

			[Token(Token = "0x6001841")]
			[Address(RVA = "0xDC1E70", Offset = "0xDC1E70", VA = "0xDC1E70")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x170004DE")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x1307548", Offset = "0x1307548", VA = "0x1307548")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004DF")]
		public bool Grounded
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1307564", Offset = "0x1307564", VA = "0x1307564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E0")]
		public bool Jumping
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x130756C", Offset = "0x130756C", VA = "0x130756C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E1")]
		public bool Running
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x1307574", Offset = "0x1307574", VA = "0x1307574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x130757C", Offset = "0x130757C", VA = "0x130757C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1307634", Offset = "0x1307634", VA = "0x1307634")]
		private void Update()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1307844", Offset = "0x1307844", VA = "0x1307844")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1307D78", Offset = "0x1307D78", VA = "0x1307D78")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1307DEC", Offset = "0x1307DEC", VA = "0x1307DEC")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1307CA8", Offset = "0x1307CA8", VA = "0x1307CA8")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x13076CC", Offset = "0x13076CC", VA = "0x13076CC")]
		private void RotateView()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1307B28", Offset = "0x1307B28", VA = "0x1307B28")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1307FC4", Offset = "0x1307FC4", VA = "0x1307FC4")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x200035C")]
	public class CaptionsPlacement : MonoBehaviour
	{
		[Token(Token = "0x200035D")]
		private enum Anchor
		{
			[Token(Token = "0x4001394")]
			TopLeft,
			[Token(Token = "0x4001395")]
			Top,
			[Token(Token = "0x4001396")]
			TopRight,
			[Token(Token = "0x4001397")]
			Left,
			[Token(Token = "0x4001398")]
			Center,
			[Token(Token = "0x4001399")]
			Right,
			[Token(Token = "0x400139A")]
			BottomLeft,
			[Token(Token = "0x400139B")]
			Bottom,
			[Token(Token = "0x400139C")]
			BottomRight
		}

		[Token(Token = "0x4001385")]
		private const Anchor LEFT_RIGHT_OFFSET = Anchor.Top;

		[Token(Token = "0x4001386")]
		private const Anchor TOP_BOTTOM_OFFSET = Anchor.Left;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3104", Offset = "0x7D3104")]
		[SerializeField]
		private Vector2 size;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3150", Offset = "0x7D3150")]
		private float scale;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector2 viewAngleConstraints;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D31AC", Offset = "0x7D31AC")]
		[SerializeField]
		private Image[] anchors;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform playerHead;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool endStuff;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool targetChanged;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 currentOffset;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float placementYAngle;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float placementXAngle;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Anchor prevAnchor;

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x10C2060", Offset = "0x10C2060", VA = "0x10C2060")]
		private void Start()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x10C2094", Offset = "0x10C2094", VA = "0x10C2094")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x10C2134", Offset = "0x10C2134", VA = "0x10C2134")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x10C2318", Offset = "0x10C2318", VA = "0x10C2318")]
		private (Vector3, Anchor) ConstrainPosition(Vector3 target)
		{
			return default((Vector3, Anchor));
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x10C270C", Offset = "0x10C270C", VA = "0x10C270C")]
		private void UpdateAnchor(Anchor activeAnchor)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x10C27F0", Offset = "0x10C27F0", VA = "0x10C27F0")]
		public CaptionsPlacement()
		{
		}
	}
}
namespace BNG
{
	[Token(Token = "0x200035E")]
	public enum HandPoseId
	{
		[Token(Token = "0x400139E")]
		Default = 0,
		[Token(Token = "0x400139F")]
		Generic = 1,
		[Token(Token = "0x40013A0")]
		PingPongBall = 2,
		[Token(Token = "0x40013A1")]
		Controller = 3,
		[Token(Token = "0x40013A2")]
		Rock = 4,
		[Token(Token = "0x40013A3")]
		PistolGrip = 50
	}
	[Token(Token = "0x200035F")]
	public class HandPoseDefinitions : MonoBehaviour
	{
		[Token(Token = "0x6001848")]
		[Address(RVA = "0x12EFDF8", Offset = "0x12EFDF8", VA = "0x12EFDF8")]
		public HandPoseDefinitions()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CCF8C", Offset = "0x7CCF8C")]
	[ExecuteInEditMode]
	public class AutoPoser : MonoBehaviour
	{
		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCFFC", Offset = "0x7CCFFC")]
		private sealed class <updateAutoPoseRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoPoser <>4__this;

			[Token(Token = "0x170004E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001862")]
				[Address(RVA = "0xF1AFC0", Offset = "0xF1AFC0", VA = "0xF1AFC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001864")]
				[Address(RVA = "0xF1B008", Offset = "0xF1B008", VA = "0xF1B008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185F")]
			[Address(RVA = "0xF1AED0", Offset = "0xF1AED0", VA = "0xF1AED0")]
			[DebuggerHidden]
			public <updateAutoPoseRoutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0xF1AEFC", Offset = "0xF1AEFC", VA = "0xF1AEFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001861")]
			[Address(RVA = "0xF1AF00", Offset = "0xF1AF00", VA = "0xF1AF00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xF1AFC8", Offset = "0xF1AFC8", VA = "0xF1AFC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3238", Offset = "0x7D3238")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3238", Offset = "0x7D3238")]
		public HandPose OpenHandPose;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3298", Offset = "0x7D3298")]
		public HandPose ClosedHandPose;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D32D0", Offset = "0x7D32D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D32D0", Offset = "0x7D32D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D32D0", Offset = "0x7D32D0")]
		public float FingerTipRadius;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D334C", Offset = "0x7D334C")]
		public FingerTipCollider ThumbCollider;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3384", Offset = "0x7D3384")]
		public FingerTipCollider IndexFingerCollider;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D33BC", Offset = "0x7D33BC")]
		public FingerTipCollider MiddleFingerCollider;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D33F4", Offset = "0x7D33F4")]
		public FingerTipCollider RingFingerCollider;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D342C", Offset = "0x7D342C")]
		public FingerTipCollider PinkyFingerCollider;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3464", Offset = "0x7D3464")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3464", Offset = "0x7D3464")]
		public bool UpdateContinuously;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D34C4", Offset = "0x7D34C4")]
		public HandPose IdleHandPose;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayerMask CollisionLayerMask;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D34FC", Offset = "0x7D34FC")]
		public bool ShowGizmos;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GizmoDisplayType GizmoType;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color GizmoColor;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HandPoser InspectedPose;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HandPoseDefinition currentPose;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HandPoseDefinition tempPose;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private HandPoseDefinition collisionPose;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _count;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _thumbHit;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool _indexHit;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool _middleHit;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		private bool _ringHit;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _pinkyHit;

		[Token(Token = "0x170004E2")]
		public HandPoseDefinition CollisionPose
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x1114E04", Offset = "0x1114E04", VA = "0x1114E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E3")]
		public bool CollisionDetected
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1114E0C", Offset = "0x1114E0C", VA = "0x1114E0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1114E44", Offset = "0x1114E44", VA = "0x1114E44")]
		private void Start()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1114EDC", Offset = "0x1114EDC", VA = "0x1114EDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x11150C0", Offset = "0x11150C0", VA = "0x11150C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1115460", Offset = "0x1115460", VA = "0x1115460", Slot = "4")]
		public virtual void UpdateAutoPose(bool lerp)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x11154B4", Offset = "0x11154B4", VA = "0x11154B4", Slot = "5")]
		public virtual void UpdateAutoPoseOnce()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x11154E0", Offset = "0x11154E0", VA = "0x11154E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6CF8", Offset = "0x7E6CF8")]
		private IEnumerator updateAutoPoseRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x11151FC", Offset = "0x11151FC", VA = "0x11151FC")]
		public HandPoseDefinition GetAutoPose()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x111554C", Offset = "0x111554C", VA = "0x111554C")]
		public HandPoseDefinition CopyHandDefinition(HandPoseDefinition ToCopy)
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1115C18", Offset = "0x1115C18", VA = "0x1115C18")]
		public FingerJoint GetJointCopy(FingerJoint ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1115B18", Offset = "0x1115B18", VA = "0x1115B18")]
		public List<FingerJoint> GetJointsCopy(List<FingerJoint> ToClone)
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x111562C", Offset = "0x111562C", VA = "0x111562C")]
		public bool GetThumbHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1115728", Offset = "0x1115728", VA = "0x1115728")]
		public bool GetIndexHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1115824", Offset = "0x1115824", VA = "0x1115824")]
		public bool GetMiddleHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1115920", Offset = "0x1115920", VA = "0x1115920")]
		public bool GetRingHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1115A1C", Offset = "0x1115A1C", VA = "0x1115A1C")]
		public bool GetPinkyHit(HandPoser poser)
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1115CA8", Offset = "0x1115CA8", VA = "0x1115CA8", Slot = "6")]
		public virtual bool LoopThroughJoints(List<Transform> fromJoints, List<FingerJoint> toJoints, Vector3 tipPosition, float tipRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1115F48", Offset = "0x1115F48", VA = "0x1115F48", Slot = "7")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1115FDC", Offset = "0x1115FDC", VA = "0x1115FDC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x11161D4", Offset = "0x11161D4", VA = "0x11161D4")]
		public void DrawJointGizmo(FingerTipCollider tipCollider, Vector3 defaultPosition, float radius, GizmoDisplayType gizmoType)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x111630C", Offset = "0x111630C", VA = "0x111630C")]
		public AutoPoser()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public enum GizmoDisplayType
	{
		[Token(Token = "0x40013C0")]
		Wire,
		[Token(Token = "0x40013C1")]
		Solid,
		[Token(Token = "0x40013C2")]
		None
	}
	[Token(Token = "0x2000363")]
	public class BoneMapping : MonoBehaviour
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3534", Offset = "0x7D3534")]
		public float Weight;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoneObject[] Fingers;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D354C", Offset = "0x7D354C")]
		public bool ShowGizmos;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x10BA55C", Offset = "0x10BA55C", VA = "0x10BA55C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x10BA74C", Offset = "0x10BA74C", VA = "0x10BA74C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x10BABC0", Offset = "0x10BABC0", VA = "0x10BABC0")]
		public BoneMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000364")]
	public class BoneObject
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] targetBones;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] destinationBones;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x10BABD8", Offset = "0x10BABD8", VA = "0x10BABD8")]
		public BoneObject()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class EditorHandle : MonoBehaviour
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowTransformName;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color BaseColor;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1064BBC", Offset = "0x1064BBC", VA = "0x1064BBC")]
		public EditorHandle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public class FingerJoint
	{
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string TransformName;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 LocalPosition;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Quaternion LocalRotation;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x145131C", Offset = "0x145131C", VA = "0x145131C")]
		public FingerJoint()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class FingerTipCollider : MonoBehaviour
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D35B4", Offset = "0x7D35B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D35B4", Offset = "0x7D35B4")]
		public float Radius;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1451324", Offset = "0x1451324", VA = "0x1451324")]
		public FingerTipCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D360C", Offset = "0x7D360C")]
		public string PoseName;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3644", Offset = "0x7D3644")]
		[SerializeField]
		public HandPoseDefinition Joints;

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x12EFAF0", Offset = "0x12EFAF0", VA = "0x12EFAF0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class HandPoseBlender : MonoBehaviour
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3690", Offset = "0x7D3690")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3690", Offset = "0x7D3690")]
		public bool UpdatePose;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D36F0", Offset = "0x7D36F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D36F0", Offset = "0x7D36F0")]
		public HandPose Pose1;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3750", Offset = "0x7D3750")]
		public HandPose Pose2;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3788", Offset = "0x7D3788")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3788", Offset = "0x7D3788")]
		public float ThumbValue;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D37DC", Offset = "0x7D37DC")]
		public float IndexValue;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D37F4", Offset = "0x7D37F4")]
		public float MiddleValue;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D380C", Offset = "0x7D380C")]
		public float RingValue;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3824", Offset = "0x7D3824")]
		public float PinkyValue;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D383C", Offset = "0x7D383C")]
		public float GripValue;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _lastGripValue;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected HandPoser handPoser;

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x12EFAF8", Offset = "0x12EFAF8", VA = "0x12EFAF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x12EFB4C", Offset = "0x12EFB4C", VA = "0x12EFB4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x12EFB64", Offset = "0x12EFB64", VA = "0x12EFB64", Slot = "4")]
		public virtual void UpdatePoseFromInputs()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x12EFB70", Offset = "0x12EFB70", VA = "0x12EFB70")]
		public void UpdateThumb(float amount)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x12EFBAC", Offset = "0x12EFBAC", VA = "0x12EFBAC")]
		public void UpdateIndex(float amount)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x12EFBE8", Offset = "0x12EFBE8", VA = "0x12EFBE8")]
		public void UpdateMiddle(float amount)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x12EFC2C", Offset = "0x12EFC2C", VA = "0x12EFC2C")]
		public void UpdateRing(float amount)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x12EFC68", Offset = "0x12EFC68", VA = "0x12EFC68")]
		public void UpdatePinky(float amount)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x12EFCA4", Offset = "0x12EFCA4", VA = "0x12EFCA4")]
		public void UpdateGrip(float amount)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x12EFCF4", Offset = "0x12EFCF4", VA = "0x12EFCF4", Slot = "5")]
		public virtual void DoIdleBlendPose()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x12EFDE0", Offset = "0x12EFDE0", VA = "0x12EFDE0")]
		public HandPoseBlender()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public class HandPoseDefinition
	{
		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3854", Offset = "0x7D3854")]
		[SerializeField]
		public FingerJoint WristJoint;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D38A0", Offset = "0x7D38A0")]
		[SerializeField]
		public List<FingerJoint> ThumbJoints;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D38EC", Offset = "0x7D38EC")]
		[SerializeField]
		public List<FingerJoint> IndexJoints;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3938", Offset = "0x7D3938")]
		[SerializeField]
		public List<FingerJoint> MiddleJoints;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3984", Offset = "0x7D3984")]
		[SerializeField]
		public List<FingerJoint> RingJoints;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D39D0", Offset = "0x7D39D0")]
		public List<FingerJoint> PinkyJoints;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3A1C", Offset = "0x7D3A1C")]
		public List<FingerJoint> OtherJoints;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x12EFDF0", Offset = "0x12EFDF0", VA = "0x12EFDF0")]
		public HandPoseDefinition()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[ExecuteInEditMode]
	public class HandPoser : MonoBehaviour
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3A68", Offset = "0x7D3A68")]
		public string ResourcePath;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PoseName;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3AA0", Offset = "0x7D3AA0")]
		public HandPose CurrentPose;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3AD8", Offset = "0x7D3AD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3AD8", Offset = "0x7D3AD8")]
		public float AnimationSpeed;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3B38", Offset = "0x7D3B38")]
		public bool UpdateJointRotations;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3B70", Offset = "0x7D3B70")]
		public bool UpdateJointPositions;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3BA8", Offset = "0x7D3BA8")]
		public bool UpdateWristPosition;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform WristJoint;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Transform> ThumbJoints;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Transform> IndexJoints;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Transform> MiddleJoints;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> RingJoints;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Transform> PinkyJoints;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> OtherJoints;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HandPose previousPose;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool doSingleAnimation;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool ContinuousUpdate;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float editorAnimationTime;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxEditorAnimationTime;

		[Token(Token = "0x170004E6")]
		public HandPoseDefinition HandPoseJoints
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x12EFE00", Offset = "0x12EFE00", VA = "0x12EFE00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x12EFE0C", Offset = "0x12EFE0C", VA = "0x12EFE0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x12EFE1C", Offset = "0x12EFE1C", VA = "0x12EFE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x12EFE68", Offset = "0x12EFE68", VA = "0x12EFE68")]
		public void CheckForPoseChange()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x12ECAEC", Offset = "0x12ECAEC", VA = "0x12ECAEC")]
		public void OnPoseChanged()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x12EFFCC", Offset = "0x12EFFCC", VA = "0x12EFFCC")]
		public FingerJoint GetWristJoint()
		{
			return null;
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x12EFFDC", Offset = "0x12EFFDC", VA = "0x12EFFDC")]
		public List<FingerJoint> GetThumbJoints()
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x12EFFEC", Offset = "0x12EFFEC", VA = "0x12EFFEC")]
		public List<FingerJoint> GetIndexJoints()
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x12EFFFC", Offset = "0x12EFFFC", VA = "0x12EFFFC")]
		public List<FingerJoint> GetMiddleJoints()
		{
			return null;
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x12F000C", Offset = "0x12F000C", VA = "0x12F000C")]
		public List<FingerJoint> GetRingJoints()
		{
			return null;
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x12F001C", Offset = "0x12F001C", VA = "0x12F001C")]
		public List<FingerJoint> GetPinkyJoints()
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x12F002C", Offset = "0x12F002C", VA = "0x12F002C")]
		public List<FingerJoint> GetOtherJoints()
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x12F003C", Offset = "0x12F003C", VA = "0x12F003C")]
		public int GetTotalJointsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x12F0140", Offset = "0x12F0140", VA = "0x12F0140")]
		public Transform GetTip(List<Transform> transforms)
		{
			return null;
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x12F01B4", Offset = "0x12F01B4", VA = "0x12F01B4")]
		public Transform GetThumbTip()
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x12F01BC", Offset = "0x12F01BC", VA = "0x12F01BC")]
		public Transform GetIndexTip()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x12F01C4", Offset = "0x12F01C4", VA = "0x12F01C4")]
		public Transform GetMiddleTip()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x12F01CC", Offset = "0x12F01CC", VA = "0x12F01CC")]
		public Transform GetRingTip()
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x12F01D4", Offset = "0x12F01D4", VA = "0x12F01D4")]
		public Transform GetPinkyTip()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x12F01DC", Offset = "0x12F01DC", VA = "0x12F01DC")]
		public static Vector3 GetFingerTipPositionWithOffset(List<Transform> jointTransforms, float tipRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x12F0370", Offset = "0x12F0370", VA = "0x12F0370", Slot = "4")]
		public virtual List<FingerJoint> GetJointsFromTransforms(List<Transform> jointTransforms)
		{
			return null;
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x12F04F0", Offset = "0x12F04F0", VA = "0x12F04F0", Slot = "5")]
		public virtual FingerJoint GetJointFromTransform(Transform jointTransform)
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x12F05D4", Offset = "0x12F05D4", VA = "0x12F05D4", Slot = "6")]
		public virtual void UpdateHandPose(HandPose handPose, bool lerp)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x12F05F8", Offset = "0x12F05F8", VA = "0x12F05F8", Slot = "7")]
		public virtual void UpdateHandPose(HandPoseDefinition pose, bool lerp)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x12F06F4", Offset = "0x12F06F4", VA = "0x12F06F4", Slot = "8")]
		public virtual void UpdateJoint(FingerJoint fromJoint, Transform toTransform, bool doLerp, bool updatePosition, bool updateRotation)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x12F0770", Offset = "0x12F0770", VA = "0x12F0770", Slot = "9")]
		public virtual void UpdateJoint(FingerJoint fromJoint, Transform toTransform, float lerpAmount, bool updatePosition, bool updateRotation)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x12F0934", Offset = "0x12F0934", VA = "0x12F0934", Slot = "10")]
		public virtual void UpdateJoints(List<FingerJoint> joints, List<Transform> toTransforms, bool doLerp)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x12F0998", Offset = "0x12F0998", VA = "0x12F0998", Slot = "11")]
		public virtual void UpdateJoints(List<FingerJoint> joints, List<Transform> toTransforms, float lerpAmount)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x12F0BB8", Offset = "0x12F0BB8", VA = "0x12F0BB8", Slot = "12")]
		public virtual HandPoseDefinition GetHandPoseDefinition()
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x12F0CC4", Offset = "0x12F0CC4", VA = "0x12F0CC4", Slot = "13")]
		public virtual void SavePoseAsScriptablObject(string poseName)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x12F0D38", Offset = "0x12F0D38", VA = "0x12F0D38", Slot = "14")]
		public virtual void CreateUniquePose(string poseName)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x12F0E68", Offset = "0x12F0E68", VA = "0x12F0E68", Slot = "15")]
		public virtual HandPose GetHandPoseScriptableObject()
		{
			return null;
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x12F0E70", Offset = "0x12F0E70", VA = "0x12F0E70", Slot = "16")]
		public virtual void DoPoseUpdate()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x12F0F40", Offset = "0x12F0F40", VA = "0x12F0F40", Slot = "17")]
		public virtual void ResetEditorHandles()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x12F10B0", Offset = "0x12F10B0", VA = "0x12F10B0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x12F10B4", Offset = "0x12F10B4", VA = "0x12F10B4")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class PoseableObject : MonoBehaviour
	{
		[Token(Token = "0x200036D")]
		public enum PoseType
		{
			[Token(Token = "0x40013FC")]
			HandPose,
			[Token(Token = "0x40013FD")]
			AutoPoseOnce,
			[Token(Token = "0x40013FE")]
			AutoPoseContinuous,
			[Token(Token = "0x40013FF")]
			Animator,
			[Token(Token = "0x4001400")]
			Other,
			[Token(Token = "0x4001401")]
			None
		}

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3BE0", Offset = "0x7D3BE0")]
		public PoseType poseType;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3C18", Offset = "0x7D3C18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3C18", Offset = "0x7D3C18")]
		public HandPose EquipHandPose;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3C78", Offset = "0x7D3C78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3C78", Offset = "0x7D3C78")]
		public float AutoPoseDuration;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3CD8", Offset = "0x7D3CD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3CD8", Offset = "0x7D3CD8")]
		public int HandPoseID;

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x12FD304", Offset = "0x12FD304", VA = "0x12FD304")]
		public PoseableObject()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class SampleHandController : MonoBehaviour
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerHandedness ControllerSide;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PoseableObject HeldObject;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool wasHoldingObject;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator handAnimator;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HandPoser handPoser;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AutoPoser autoPoser;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandPoseBlender poseBlender;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityEngine.XR.InputDevice> devices;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.XR.InputDevice controller;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xD9E4D8", Offset = "0xD9E4D8", VA = "0xD9E4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xD9E690", Offset = "0xD9E690", VA = "0xD9E690", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD9E69C", Offset = "0xD9E69C", VA = "0xD9E69C", Slot = "5")]
		public virtual void DoHandControllerUpdate()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD9E704", Offset = "0xD9E704", VA = "0xD9E704", Slot = "6")]
		public virtual void SetCurrentlyHeldObject(GameObject holdObject)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD9E7B4", Offset = "0xD9E7B4", VA = "0xD9E7B4", Slot = "7")]
		public virtual void ClearCurrentlyHeldObject()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xD9E840", Offset = "0xD9E840", VA = "0xD9E840", Slot = "8")]
		public virtual void ResetToIdleComponents()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xD9E93C", Offset = "0xD9E93C", VA = "0xD9E93C", Slot = "9")]
		public virtual void UpdateFingerInputs()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD9EC08", Offset = "0xD9EC08", VA = "0xD9EC08", Slot = "10")]
		public virtual void DoHeldItemPose()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xD9ED7C", Offset = "0xD9ED7C", VA = "0xD9ED7C", Slot = "11")]
		public virtual void DisableContinousAutoPose()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xD9EDFC", Offset = "0xD9EDFC", VA = "0xD9EDFC", Slot = "12")]
		public virtual void DoIdlePose()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD9EE1C", Offset = "0xD9EE1C", VA = "0xD9EE1C", Slot = "13")]
		public virtual bool HoldingObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD9EB14", Offset = "0xD9EB14", VA = "0xD9EB14")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD9EE88", Offset = "0xD9EE88", VA = "0xD9EE88", Slot = "14")]
		public virtual void UpdateXRDevices()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xD9EAD4", Offset = "0xD9EAD4", VA = "0xD9EAD4")]
		private float getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<float> usage)
		{
			return default(float);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xD9EF28", Offset = "0xD9EF28", VA = "0xD9EF28")]
		private bool getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xD9EF60", Offset = "0xD9EF60", VA = "0xD9EF60", Slot = "15")]
		public virtual UnityEngine.XR.InputDevice GetLeftController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD9F034", Offset = "0xD9F034", VA = "0xD9F034", Slot = "16")]
		public virtual UnityEngine.XR.InputDevice GetRightController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD9F108", Offset = "0xD9F108", VA = "0xD9F108", Slot = "17")]
		public virtual bool GetThumbIsNear()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD9F27C", Offset = "0xD9F27C", VA = "0xD9F27C", Slot = "18")]
		public virtual bool GetIndexIsNear()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD9F304", Offset = "0xD9F304", VA = "0xD9F304")]
		public SampleHandController()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public enum ControllerHandedness
	{
		[Token(Token = "0x400140C")]
		Left,
		[Token(Token = "0x400140D")]
		Right,
		[Token(Token = "0x400140E")]
		None
	}
	[Token(Token = "0x2000370")]
	public class SavePoseBinding : MonoBehaviour
	{
		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3D38", Offset = "0x7D3D38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3D38", Offset = "0x7D3D38")]
		public InputAction SaveInput;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3D98", Offset = "0x7D3D98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3D98", Offset = "0x7D3D98")]
		public string SaveNamePrefix;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3DF8", Offset = "0x7D3DF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3DF8", Offset = "0x7D3DF8")]
		public bool ShowKeybindingToolTip;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HandPoser handPoser;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD9FB00", Offset = "0xD9FB00", VA = "0xD9FB00")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xD9FB70", Offset = "0xD9FB70", VA = "0xD9FB70")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xD9FC40", Offset = "0xD9FC40", VA = "0xD9FC40")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD9FD6C", Offset = "0xD9FD6C", VA = "0xD9FD6C")]
		public SavePoseBinding()
		{
		}
	}
	[Token(Token = "0x2000371")]
	[ExecuteInEditMode]
	public class SkeletonVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowGizmos;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3E58", Offset = "0x7D3E58")]
		public float JointRadius;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D3E70", Offset = "0x7D3E70")]
		public float BoneThickness;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color GizmoColor;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowTransformNames;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isQuiting;

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1279574", Offset = "0x1279574", VA = "0x1279574")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1279580", Offset = "0x1279580", VA = "0x1279580")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1279584", Offset = "0x1279584", VA = "0x1279584", Slot = "4")]
		public virtual bool IsTipOfBone(Transform fingerJoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1279688", Offset = "0x1279688", VA = "0x1279688")]
		public void ResetEditorHandles()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x12797F8", Offset = "0x12797F8", VA = "0x12797F8")]
		public SkeletonVisualizer()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class XRTrackedPoseDriver : MonoBehaviour
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackableXRDevice Device;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UnityEngine.XR.InputDevice deviceToTrack;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 initialLocalPosition;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 currentLocalPosition;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Quaternion currentLocalRotation;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityEngine.XR.InputDevice> devices;

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xDF7584", Offset = "0xDF7584", VA = "0xDF7584", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xDF75E0", Offset = "0xDF75E0", VA = "0xDF75E0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xDF7654", Offset = "0xDF7654", VA = "0xDF7654", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xDF76C8", Offset = "0xDF76C8", VA = "0xDF76C8", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xDF76FC", Offset = "0xDF76FC", VA = "0xDF76FC", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xDF7708", Offset = "0xDF7708", VA = "0xDF7708", Slot = "9")]
		public virtual void RefreshDeviceStatus()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xDF79E0", Offset = "0xDF79E0", VA = "0xDF79E0", Slot = "10")]
		public virtual void UpdateDevice()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xDF7DC0", Offset = "0xDF7DC0", VA = "0xDF7DC0", Slot = "11")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xDF7B1C", Offset = "0xDF7B1C", VA = "0xDF7B1C")]
		public Vector3 GetHMDLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xDF7764", Offset = "0xDF7764", VA = "0xDF7764")]
		public UnityEngine.XR.InputDevice GetHMD()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xDF7BB4", Offset = "0xDF7BB4", VA = "0xDF7BB4")]
		public Quaternion GetHMDLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xDF7C48", Offset = "0xDF7C48", VA = "0xDF7C48")]
		public Vector3 GetControllerLocalPosition(ControllerHandedness handSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xDF7D04", Offset = "0xDF7D04", VA = "0xDF7D04")]
		public Quaternion GetControllerLocalRotation(ControllerHandedness handSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xDF7838", Offset = "0xDF7838", VA = "0xDF7838")]
		public UnityEngine.XR.InputDevice GetLeftController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xDF790C", Offset = "0xDF790C", VA = "0xDF790C")]
		public UnityEngine.XR.InputDevice GetRightController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xDF7DCC", Offset = "0xDF7DCC", VA = "0xDF7DCC")]
		public XRTrackedPoseDriver()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public enum TrackableXRDevice
	{
		[Token(Token = "0x4001421")]
		HMD,
		[Token(Token = "0x4001422")]
		LeftController,
		[Token(Token = "0x4001423")]
		RightController
	}
	[Token(Token = "0x2000374")]
	public class DemoCube : MonoBehaviour
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material HighlightMaterial;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ActiveMaterial;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool active;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool hovering;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material initialMaterial;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer render;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x105ACBC", Offset = "0x105ACBC", VA = "0x105ACBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x105AD24", Offset = "0x105AD24", VA = "0x105AD24")]
		public void SetActive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x105AD84", Offset = "0x105AD84", VA = "0x105AD84")]
		public void SetInactive(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x105AD8C", Offset = "0x105AD8C", VA = "0x105AD8C")]
		public void SetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x105AD98", Offset = "0x105AD98", VA = "0x105AD98")]
		public void ResetHovering(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x105AD30", Offset = "0x105AD30", VA = "0x105AD30")]
		public void UpdateMaterial()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x105ADA0", Offset = "0x105ADA0", VA = "0x105ADA0")]
		public DemoCube()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text LabelToUpdate;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProjectileLauncher DemoLauncher;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MaxLaunchedObjects;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> launchedObjects;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text JoystickText;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject AmmoObject;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ItemsHolder;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<Grabbable, PosRot> _initalGrabbables;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody cubeRigid;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody cubeRigid1;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody cubeRigid2;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigid3;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Grabbable> demoClips;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 rotateX;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 rotateY;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rotateZ;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rotateXYX;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x105B474", Offset = "0x105B474", VA = "0x105B474")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x105B910", Offset = "0x105B910", VA = "0x105B910")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x105BA80", Offset = "0x105BA80", VA = "0x105BA80")]
		public void UpdateSliderText(float sliderValue)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x105BBF0", Offset = "0x105BBF0", VA = "0x105BBF0")]
		public void UpdateJoystickText(float leverX, float leverY)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x105BD3C", Offset = "0x105BD3C", VA = "0x105BD3C")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x105C04C", Offset = "0x105C04C", VA = "0x105C04C")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x105C4FC", Offset = "0x105C4FC", VA = "0x105C4FC")]
		public void ShootLauncher()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x105B6E4", Offset = "0x105B6E4", VA = "0x105B6E4")]
		private void initGravityCubes()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x105B914", Offset = "0x105B914", VA = "0x105B914")]
		private void rotateGravityCubes()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x105C66C", Offset = "0x105C66C", VA = "0x105C66C")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class PosRot
	{
		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x12FCD48", Offset = "0x12FCD48", VA = "0x12FCD48")]
		public PosRot()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class CharacterConstraint : MonoBehaviour
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BNGPlayerController bngController;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x10C3A2C", Offset = "0x10C3A2C", VA = "0x10C3A2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x10C3AB4", Offset = "0x10C3AB4", VA = "0x10C3AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x10C3AC0", Offset = "0x10C3AC0", VA = "0x10C3AC0", Slot = "4")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x10C3BE0", Offset = "0x10C3BE0", VA = "0x10C3BE0")]
		public CharacterConstraint()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class CharacterIK : MonoBehaviour
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowLeftController;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FollowRightController;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FollowLeftFoot;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform FollowRightFoot;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform FollowHead;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FootYPosition;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IKActive;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool IKFeetActive;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool HideHead;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool HideLeftArm;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideRightArm;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool HideLeftHand;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool HideRightHand;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool HideLegs;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HipsJoint;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterController FollowPlayer;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform headBone;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform leftShoulderJoint;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform rightShoulderJoint;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform leftHandJoint;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform rightHandJoint;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float HipOffset;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 hideBoneScale;

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x10C3BE8", Offset = "0x10C3BE8", VA = "0x10C3BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x10C3CC4", Offset = "0x10C3CC4", VA = "0x10C3CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x10C3F68", Offset = "0x10C3F68", VA = "0x10C3F68")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x10C440C", Offset = "0x10C440C", VA = "0x10C440C")]
		public CharacterIK()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class CharacterYOffset : MonoBehaviour
	{
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x10C4438", Offset = "0x10C4438", VA = "0x10C4438")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x10C44E0", Offset = "0x10C44E0", VA = "0x10C44E0")]
		public CharacterYOffset()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class Climbable : Grabbable
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x10C4670", Offset = "0x10C4670", VA = "0x10C4670")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x10C475C", Offset = "0x10C475C", VA = "0x10C475C", Slot = "20")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x10C4804", Offset = "0x10C4804", VA = "0x10C4804", Slot = "28")]
		public override void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x10C48D8", Offset = "0x10C48D8", VA = "0x10C48D8")]
		public Climbable()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class CollisionSound : MonoBehaviour
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip CollisionAudio;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startTime;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider col;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable grab;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MinimumVolume;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaximumVolume;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RecentlyPlayedSound;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastPlayedSound;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LastRelativeVelocity;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x10C4F7C", Offset = "0x10C4F7C", VA = "0x10C4F7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x10C50AC", Offset = "0x10C50AC", VA = "0x10C50AC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x10C541C", Offset = "0x10C541C", VA = "0x10C541C")]
		private void resetLastPlayedSound()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x10C5424", Offset = "0x10C5424", VA = "0x10C5424")]
		public CollisionSound()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class ConstrainLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstrainLocalX;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LocalXMin;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LocalXMax;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConstrainLocalY;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LocalYMin;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMax;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ConstrainLocalZ;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LocalZMin;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LocalZMax;

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x10C8034", Offset = "0x10C8034", VA = "0x10C8034")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x10C8038", Offset = "0x10C8038", VA = "0x10C8038")]
		private void doConstrain()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x10C812C", Offset = "0x10C812C", VA = "0x10C812C")]
		public ConstrainLocalPosition()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class DamageCollider : MonoBehaviour
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Damage;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody ColliderRigidbody;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinForce;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LastRelativeVelocity;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LastDamageForce;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool TakeCollisionDamage;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CollisionDamage;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Damageable thisDamageable;

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1057CC4", Offset = "0x1057CC4", VA = "0x1057CC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x1057D80", Offset = "0x1057D80", VA = "0x1057D80")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1057DC8", Offset = "0x1057DC8", VA = "0x1057DC8", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x1058028", Offset = "0x1058028", VA = "0x1058028")]
		public DamageCollider()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class Damageable : MonoBehaviour
	{
		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD02C", Offset = "0x7CD02C")]
		private sealed class <RespawnRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable <>4__this;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001901")]
				[Address(RVA = "0xF1F8AC", Offset = "0xF1F8AC", VA = "0xF1F8AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001903")]
				[Address(RVA = "0xF1F8F4", Offset = "0xF1F8F4", VA = "0xF1F8F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xF1F468", Offset = "0xF1F468", VA = "0xF1F468")]
			[DebuggerHidden]
			public <RespawnRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xF1F494", Offset = "0xF1F494", VA = "0xF1F494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0xF1F498", Offset = "0xF1F498", VA = "0xF1F498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001902")]
			[Address(RVA = "0xF1F8B4", Offset = "0xF1F8B4", VA = "0xF1F8B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Health;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _startingHealth;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3E88", Offset = "0x7D3E88")]
		public GameObject SpawnOnDeath;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3EC0", Offset = "0x7D3EC0")]
		public List<GameObject> ActivateGameObjectsOnDeath;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3EF8", Offset = "0x7D3EF8")]
		public List<GameObject> DeactivateGameObjectsOnDeath;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3F30", Offset = "0x7D3F30")]
		public List<Collider> DeactivateCollidersOnDeath;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3F68", Offset = "0x7D3F68")]
		public bool DestroyOnDeath;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3FA0", Offset = "0x7D3FA0")]
		public bool DropOnDeath;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D3FD8", Offset = "0x7D3FD8")]
		public float DestroyDelay;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4010", Offset = "0x7D4010")]
		public bool Respawn;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4048", Offset = "0x7D4048")]
		public float RespawnTime;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4080", Offset = "0x7D4080")]
		public bool RemoveBulletHolesOnDeath;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D40B8", Offset = "0x7D40B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D40B8", Offset = "0x7D40B8")]
		public FloatEvent onDamaged;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4118", Offset = "0x7D4118")]
		public UnityEvent onDestroyed;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4150", Offset = "0x7D4150")]
		public UnityEvent onRespawn;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool destroyed;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rigid;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool initialWasKinematic;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x105804C", Offset = "0x105804C", VA = "0x105804C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x1058104", Offset = "0x1058104", VA = "0x1058104", Slot = "4")]
		public virtual void DealDamage(float damageAmount)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x10581B8", Offset = "0x10581B8", VA = "0x10581B8", Slot = "5")]
		public virtual void DealDamage(float damageAmount, [Optional] Vector3? hitPosition, [Optional] Vector3? hitNormal, bool reactToHit = true, [Optional] GameObject sender, [Optional] GameObject receiver)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1058258", Offset = "0x1058258", VA = "0x1058258", Slot = "6")]
		public virtual void DestroyThis()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1058924", Offset = "0x1058924", VA = "0x1058924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6DA8", Offset = "0x7E6DA8")]
		private IEnumerator RespawnRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x10589A0", Offset = "0x10589A0", VA = "0x10589A0")]
		public Damageable()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class DestroyObjectWithDelay : MonoBehaviour
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DestroySeconds;

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x105C764", Offset = "0x105C764", VA = "0x105C764")]
		private void Start()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x105C7EC", Offset = "0x105C7EC", VA = "0x105C7EC")]
		public DestroyObjectWithDelay()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class FollowRigidbody : MonoBehaviour
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTransform;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigid;

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1452D98", Offset = "0x1452D98", VA = "0x1452D98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1452DEC", Offset = "0x1452DEC", VA = "0x1452DEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1452E38", Offset = "0x1452E38", VA = "0x1452E38")]
		public FollowRigidbody()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTarget;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1452E40", Offset = "0x1452E40", VA = "0x1452E40")]
		private void Update()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1452F2C", Offset = "0x1452F2C", VA = "0x1452F2C")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class GrabAction : GrabbableEvents
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent OnGrabEvent;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable g;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastGrabTime;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float minTimeBetweenGrabs;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x173A0D8", Offset = "0x173A0D8", VA = "0x173A0D8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x173A2F4", Offset = "0x173A2F4", VA = "0x173A2F4")]
		public GrabAction()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class GrabPointTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000385")]
		public enum HandMovement
		{
			[Token(Token = "0x400149E")]
			Instant,
			[Token(Token = "0x400149F")]
			Lerp,
			[Token(Token = "0x40014A0")]
			None
		}

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4188", Offset = "0x7D4188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4188", Offset = "0x7D4188")]
		public HandMovement MoveInStyle;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D41E8", Offset = "0x7D41E8")]
		public HandMovement MoveOutStyle;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4220", Offset = "0x7D4220")]
		public float HandSpeed;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4258", Offset = "0x7D4258")]
		public bool LiveUpdateNearestGrabPoint;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4290", Offset = "0x7D4290")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4290", Offset = "0x7D4290")]
		public Grabbable GrabObject;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D42F0", Offset = "0x7D42F0")]
		public Grabbable OtherGrabbableMustBeHeld;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4328", Offset = "0x7D4328")]
		public List<GrabPoint> GrabPoints;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable dummyGrabbable;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabPoint closestPoint;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabber grabberInTrigger;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x173AD0C", Offset = "0x173AD0C", VA = "0x173AD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x173AFE0", Offset = "0x173AFE0", VA = "0x173AFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x173B498", Offset = "0x173B498", VA = "0x173B498", Slot = "4")]
		public virtual void UpdateGrabPoint(GrabPoint newPoint)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x173B610", Offset = "0x173B610", VA = "0x173B610")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x173B8A0", Offset = "0x173B8A0", VA = "0x173B8A0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x173B448", Offset = "0x173B448", VA = "0x173B448")]
		private void setGrabber(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x173B9F8", Offset = "0x173B9F8", VA = "0x173B9F8", Slot = "5")]
		public virtual void ReleaseGrabber()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x173BAC0", Offset = "0x173BAC0", VA = "0x173BAC0")]
		public GrabPointTrigger()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class GrabbableBezierLine : GrabbableEvents
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LineRenderer LineToDraw;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SegmentCount;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float LerpAmount;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float HeightAdjustment;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabber lineToGrabber;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabber lineRemoteGrabbing;

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1744DAC", Offset = "0x1744DAC", VA = "0x1744DAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1744EE4", Offset = "0x1744EE4", VA = "0x1744EE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1745394", Offset = "0x1745394", VA = "0x1745394", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x17453BC", Offset = "0x17453BC", VA = "0x17453BC", Slot = "8")]
		public override void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1745480", Offset = "0x1745480", VA = "0x1745480", Slot = "10")]
		public override void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1745494", Offset = "0x1745494", VA = "0x1745494", Slot = "12")]
		public override void OnBecomesClosestRemoteGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x17454A8", Offset = "0x17454A8", VA = "0x17454A8", Slot = "14")]
		public override void OnNoLongerClosestRemoteGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x17453CC", Offset = "0x17453CC", VA = "0x17453CC")]
		public void HighlightItem(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1744E58", Offset = "0x1744E58", VA = "0x1744E58")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1745220", Offset = "0x1745220", VA = "0x1745220")]
		public void DrawBezierCurve(Vector3 point0, Vector3 point1, Vector3 point2, LineRenderer lineRenderer)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x17454BC", Offset = "0x17454BC", VA = "0x17454BC")]
		public GrabbableBezierLine()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class GrabbableHaptics : GrabbableEvents
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HapticsOnValidPickup;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HapticsOnValidRemotePickup;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool HapticsOnCollision;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool HapticsOnGrab;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float VibrateFrequency;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float VibrateAmplitude;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float VibrateDuration;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1745608", Offset = "0x1745608", VA = "0x1745608", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x17456D8", Offset = "0x17456D8", VA = "0x17456D8", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x17456E0", Offset = "0x17456E0", VA = "0x17456E0", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x17456F0", Offset = "0x17456F0", VA = "0x17456F0", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1745630", Offset = "0x1745630", VA = "0x1745630")]
		private void doHaptics(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1745700", Offset = "0x1745700", VA = "0x1745700")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1745830", Offset = "0x1745830", VA = "0x1745830")]
		public GrabbableHaptics()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class GrabbableHighlight : GrabbableEvents
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1745858", Offset = "0x1745858", VA = "0x1745858", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1745860", Offset = "0x1745860", VA = "0x1745860", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1745868", Offset = "0x1745868", VA = "0x1745868", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x174586C", Offset = "0x174586C", VA = "0x174586C", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1745870", Offset = "0x1745870", VA = "0x1745870", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1745864", Offset = "0x1745864", VA = "0x1745864")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x174585C", Offset = "0x174585C", VA = "0x174585C")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1745874", Offset = "0x1745874", VA = "0x1745874")]
		public GrabbableHighlight()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class GrabbableHighlightMaterial : GrabbableEvents
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4360", Offset = "0x7D4360")]
		public List<Material> StandardMaterials;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4398", Offset = "0x7D4398")]
		public List<Material> HighlightMaterials;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Renderer;

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1745884", Offset = "0x1745884", VA = "0x1745884")]
		private void Start()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1745A38", Offset = "0x1745A38", VA = "0x1745A38", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1745AF8", Offset = "0x1745AF8", VA = "0x1745AF8", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1745BC4", Offset = "0x1745BC4", VA = "0x1745BC4", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1745BD4", Offset = "0x1745BD4", VA = "0x1745BD4", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1745BE4", Offset = "0x1745BE4", VA = "0x1745BE4", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1745B08", Offset = "0x1745B08", VA = "0x1745B08")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1745A3C", Offset = "0x1745A3C", VA = "0x1745A3C")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1745BF4", Offset = "0x1745BF4", VA = "0x1745BF4")]
		public GrabbableHighlightMaterial()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class GrabbableRingHelper : GrabbableEvents
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RingOnValidPickup;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool RingOnValidRemotePickup;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RingHelperScale;

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1745C04", Offset = "0x1745C04", VA = "0x1745C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1745ED4", Offset = "0x1745ED4", VA = "0x1745ED4")]
		public GrabbableRingHelper()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class HandyHaptics : MonoBehaviour
	{
		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber theGrabber;

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x12F199C", Offset = "0x12F199C", VA = "0x12F199C")]
		public void SmallShake(float vibrateFrequency, float vibrateAmplitude, float vibrateDuration)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x12F1A6C", Offset = "0x12F1A6C", VA = "0x12F1A6C")]
		public HandyHaptics()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x16AEF54", Offset = "0x16AEF54", VA = "0x16AEF54")]
		private void Start()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x16AEF58", Offset = "0x16AEF58", VA = "0x16AEF58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x16AEF5C", Offset = "0x16AEF5C", VA = "0x16AEF5C")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x16AF0EC", Offset = "0x16AF0EC", VA = "0x16AF0EC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x16AF0F0", Offset = "0x16AF0F0", VA = "0x16AF0F0")]
		public LineToTransform()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class LookAtTransform : MonoBehaviour
	{
		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseLerp;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseUpdate;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseLateUpdate;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x111EE70", Offset = "0x111EE70", VA = "0x111EE70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x111F08C", Offset = "0x111F08C", VA = "0x111F08C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x111EE80", Offset = "0x111EE80", VA = "0x111EE80")]
		private void lookAt()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x111F09C", Offset = "0x111F09C", VA = "0x111F09C")]
		public LookAtTransform()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class PlaySoundOnGrab : GrabbableEvents
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SoundToPlay;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xFFD488", Offset = "0xFFD488", VA = "0xFFD488", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xFFD554", Offset = "0xFFD554", VA = "0xFFD554")]
		public PlaySoundOnGrab()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class PunctureCollider : MonoBehaviour
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D43D0", Offset = "0x7D43D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D43D0", Offset = "0x7D43D0")]
		public float FRequiredPenetrationForce;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4430", Offset = "0x7D4430")]
		public float MinPenetration;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4468", Offset = "0x7D4468")]
		public float MaxPenetration;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D44A0", Offset = "0x7D44A0")]
		public float BreakDistance;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D44D8", Offset = "0x7D44D8")]
		public List<Collider> PunctureColliders;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4510", Offset = "0x7D4510")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4510", Offset = "0x7D4510")]
		public bool HasPunctured;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4570", Offset = "0x7D4570")]
		public GameObject PuncturedObject;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D45A8", Offset = "0x7D45A8")]
		public float PunctureValue;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float previousPunctureValue;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider col;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider hitCollilder;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider[] ignoreColliders;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigid;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject jointHelper;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody jointHelperRigid;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJoint jointHelperJoint;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FixedJoint fj;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float yPuncture;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float yPunctureMin;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float yPunctureMax;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float TargetDistance;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x12FEA44", Offset = "0x12FEA44", VA = "0x12FEA44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x12FEAF4", Offset = "0x12FEAF4", VA = "0x12FEAF4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x12FEC24", Offset = "0x12FEC24", VA = "0x12FEC24", Slot = "4")]
		public virtual void UpdatePunctureValue()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x12FEDE8", Offset = "0x12FEDE8", VA = "0x12FEDE8", Slot = "5")]
		public virtual void MovePunctureUp()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x12FEE9C", Offset = "0x12FEE9C", VA = "0x12FEE9C", Slot = "6")]
		public virtual void MovePunctureDown()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x12FEF50", Offset = "0x12FEF50", VA = "0x12FEF50", Slot = "7")]
		public virtual void CheckBreakDistance()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x12FF230", Offset = "0x12FF230", VA = "0x12FF230", Slot = "8")]
		public virtual void CheckPunctureRelease()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x12FF2F8", Offset = "0x12FF2F8", VA = "0x12FF2F8", Slot = "9")]
		public virtual void AdjustJointMass()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x12FF41C", Offset = "0x12FF41C", VA = "0x12FF41C", Slot = "10")]
		public virtual void ApplyResistanceForce()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x12FF524", Offset = "0x12FF524", VA = "0x12FF524", Slot = "11")]
		public virtual void DoPuncture(Collider colliderHit, Vector3 connectPosition)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x12FF8C8", Offset = "0x12FF8C8", VA = "0x12FF8C8")]
		public void SetPenetration(float penetrationAmount)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x12FF034", Offset = "0x12FF034", VA = "0x12FF034")]
		public void ReleasePuncture()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x12FF9D8", Offset = "0x12FF9D8", VA = "0x12FF9D8", Slot = "12")]
		public virtual bool CanPunctureObject(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x12FFAA8", Offset = "0x12FFAA8", VA = "0x12FFAA8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x12FFC30", Offset = "0x12FFC30", VA = "0x12FFC30")]
		public PunctureCollider()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class ReturnToSnapZone : MonoBehaviour
	{
		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D45E0", Offset = "0x7D45E0")]
		public SnapZone ReturnTo;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4618", Offset = "0x7D4618")]
		public float LerpSpeed;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4650", Offset = "0x7D4650")]
		public float ReturnDelay;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentDelay;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grab;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool useGravityInitial;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4688", Offset = "0x7D4688")]
		public float SnapDistance;

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1306F20", Offset = "0x1306F20", VA = "0x1306F20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1306FB0", Offset = "0x1306FB0", VA = "0x1306FB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x13070FC", Offset = "0x13070FC", VA = "0x13070FC")]
		private void moveToSnapZone()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1307290", Offset = "0x1307290", VA = "0x1307290")]
		public ReturnToSnapZone()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class RotateTowards : MonoBehaviour
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetTransform;

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD9BBE8", Offset = "0xD9BBE8", VA = "0xD9BBE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD9BCD4", Offset = "0xD9BCD4", VA = "0xD9BCD4")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class RotateWithHMD : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D46C0", Offset = "0x7D46C0")]
		public Transform FollowTransform;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D46F8", Offset = "0x7D46F8")]
		public CharacterController Character;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 Offset;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RotateSpeed;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MovementSmoothing;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 velocity;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4730", Offset = "0x7D4730")]
		public bool ParentToCharacter;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform originalParent;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform followTransform;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform camTransform;

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD9BCDC", Offset = "0xD9BCDC", VA = "0xD9BCDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD9BED8", Offset = "0xD9BED8", VA = "0xD9BED8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD9BEDC", Offset = "0xD9BEDC", VA = "0xD9BEDC")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD9C270", Offset = "0xD9C270", VA = "0xD9C270")]
		public RotateWithHMD()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class ScaleBetweenPoints : MonoBehaviour
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Begin;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform End;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DoUpdate;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DoLateUpdate;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool LookAtTarget;

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD9FDC8", Offset = "0xD9FDC8", VA = "0xD9FDC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD9FF90", Offset = "0xD9FF90", VA = "0xD9FF90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD9FDD8", Offset = "0xD9FDD8", VA = "0xD9FDD8")]
		private void doScale()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD9FFA0", Offset = "0xD9FFA0", VA = "0xD9FFA0")]
		public ScaleBetweenPoints()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class ScreenFader : MonoBehaviour
	{
		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD03C", Offset = "0x7CD03C")]
		private sealed class <fadeOutWithDelay>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySeconds;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x170004E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001973")]
				[Address(RVA = "0xCC1A64", Offset = "0xCC1A64", VA = "0xCC1A64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001975")]
				[Address(RVA = "0xCC1AAC", Offset = "0xCC1AAC", VA = "0xCC1AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001970")]
			[Address(RVA = "0xCC1980", Offset = "0xCC1980", VA = "0xCC1980")]
			[DebuggerHidden]
			public <fadeOutWithDelay>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001971")]
			[Address(RVA = "0xCC19AC", Offset = "0xCC19AC", VA = "0xCC19AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001972")]
			[Address(RVA = "0xCC19B0", Offset = "0xCC19B0", VA = "0xCC19B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0xCC1A6C", Offset = "0xCC1A6C", VA = "0xCC1A6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD04C", Offset = "0x7CD04C")]
		private sealed class <doFade>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float alphaFrom;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alphaTo;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <alpha>5__2;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001979")]
				[Address(RVA = "0xCC1930", Offset = "0xCC1930", VA = "0xCC1930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600197B")]
				[Address(RVA = "0xCC1978", Offset = "0xCC1978", VA = "0xCC1978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0xCC175C", Offset = "0xCC175C", VA = "0xCC175C")]
			[DebuggerHidden]
			public <doFade>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001977")]
			[Address(RVA = "0xCC1788", Offset = "0xCC1788", VA = "0xCC1788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xCC178C", Offset = "0xCC178C", VA = "0xCC178C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600197A")]
			[Address(RVA = "0xCC1938", Offset = "0xCC1938", VA = "0xCC1938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4768", Offset = "0x7D4768")]
		public bool FadeOnSceneLoaded;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D47A0", Offset = "0x7D47A0")]
		public Color FadeColor;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D47D8", Offset = "0x7D47D8")]
		public float FadeInSpeed;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeOutSpeed;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4810", Offset = "0x7D4810")]
		public float SceneFadeInDelay;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fadeObject;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform fadeObjectRect;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas fadeCanvas;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image fadeImage;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator fadeRoutine;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string faderName;

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xDA0660", Offset = "0xDA0660", VA = "0xDA0660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xDA066C", Offset = "0xDA066C", VA = "0xDA066C", Slot = "4")]
		protected virtual void initialize()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xDA0A88", Offset = "0xDA0A88", VA = "0xDA0A88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xDA0B44", Offset = "0xDA0B44", VA = "0xDA0B44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xDA0C00", Offset = "0xDA0C00", VA = "0xDA0C00")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xDA0CB4", Offset = "0xDA0CB4", VA = "0xDA0CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6E58", Offset = "0x7E6E58")]
		private IEnumerator fadeOutWithDelay(float delaySeconds)
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xDA0D30", Offset = "0xDA0D30", VA = "0xDA0D30", Slot = "5")]
		public virtual void DoFadeIn()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xDA0E78", Offset = "0xDA0E78", VA = "0xDA0E78", Slot = "6")]
		public virtual void DoFadeOut()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xDA0ED8", Offset = "0xDA0ED8", VA = "0xDA0ED8", Slot = "7")]
		public virtual void SetFadeLevel(float fadeLevel)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xDA0DF4", Offset = "0xDA0DF4", VA = "0xDA0DF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E6EB8", Offset = "0x7E6EB8")]
		private IEnumerator doFade(float alphaFrom, float alphaTo)
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xDA0FAC", Offset = "0xDA0FAC", VA = "0xDA0FAC", Slot = "8")]
		protected virtual void updateImageAlpha(float alphaValue)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xDA10D8", Offset = "0xDA10D8", VA = "0xDA10D8")]
		public ScreenFader()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class SnapZoneRingHelper : MonoBehaviour
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapZone Snap;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color RestingColor;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ValidSnapColor;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RestingScale;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ValidSnapScale;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasScaler ringCanvas;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text ringText;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabbablesInTrigger nearbyGrabbables;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool validSnap;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ScaleSpeed;

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x12837B8", Offset = "0x12837B8", VA = "0x12837B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1283860", Offset = "0x1283860", VA = "0x1283860")]
		private void Update()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1283928", Offset = "0x1283928", VA = "0x1283928")]
		private bool checkIsValidSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1283A24", Offset = "0x1283A24", VA = "0x1283A24")]
		public SnapZoneRingHelper()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TipOffset;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseWorldYAxis;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxViewDistance;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform childTransform;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DrawLineTo;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineToTransform lineTo;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lookAt;

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE814A4", Offset = "0xE814A4", VA = "0xE814A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xE815B8", Offset = "0xE815B8", VA = "0xE815B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xE815C4", Offset = "0xE815C4", VA = "0xE815C4", Slot = "4")]
		public virtual void UpdateTooltipPosition()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xE818CC", Offset = "0xE818CC", VA = "0xE818CC")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		public enum VelocityTrackingType
		{
			[Token(Token = "0x4001526")]
			Device,
			[Token(Token = "0x4001527")]
			PerFrame
		}

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4848", Offset = "0x7D4848")]
		public VelocityTrackingType trackingType;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4880", Offset = "0x7D4880")]
		public ControllerHand controllerHand;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D48B8", Offset = "0x7D48B8")]
		public float AverageVelocityCount;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _velocity;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _lastPosition;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion _lastRotation;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> previousVelocities;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> previousAngularVelocities;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float angle;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 axis;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject playSpace;

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xDF4130", Offset = "0xDF4130", VA = "0xDF4130")]
		private void Start()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xDF4184", Offset = "0xDF4184", VA = "0xDF4184")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xDF41F0", Offset = "0xDF41F0", VA = "0xDF41F0", Slot = "4")]
		public virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xDF4224", Offset = "0xDF4224", VA = "0xDF4224", Slot = "5")]
		public virtual void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xDF4334", Offset = "0xDF4334", VA = "0xDF4334", Slot = "6")]
		public virtual void UpdateAngularVelocity()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xDF44CC", Offset = "0xDF44CC", VA = "0xDF44CC", Slot = "7")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xDF4630", Offset = "0xDF4630", VA = "0xDF4630", Slot = "8")]
		public virtual Vector3 GetAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xDF4640", Offset = "0xDF4640", VA = "0xDF4640", Slot = "9")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xDF464C", Offset = "0xDF464C", VA = "0xDF464C", Slot = "10")]
		public virtual Vector3 GetAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xDF465C", Offset = "0xDF465C", VA = "0xDF465C", Slot = "11")]
		public virtual Vector3 GetAveragedVector(List<Vector3> vectors)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xDF4760", Offset = "0xDF4760", VA = "0xDF4760")]
		public VelocityTracker()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public enum LocomotionType
	{
		[Token(Token = "0x4001529")]
		Teleport,
		[Token(Token = "0x400152A")]
		SmoothLocomotion,
		[Token(Token = "0x400152B")]
		None
	}
	[Token(Token = "0x200039C")]
	public class BNGPlayerController : MonoBehaviour
	{
		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D48F0", Offset = "0x7D48F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D48F0", Offset = "0x7D48F0")]
		public bool MoveCharacterWithCamera;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4950", Offset = "0x7D4950")]
		public bool RotateCharacterWithCamera;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4988", Offset = "0x7D4988")]
		public bool ResizeCharacterHeightWithCamera;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D49C0", Offset = "0x7D49C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D49C0", Offset = "0x7D49C0")]
		public Transform TrackingSpace;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4A20", Offset = "0x7D4A20")]
		public Transform CameraRig;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4A58", Offset = "0x7D4A58")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4A90", Offset = "0x7D4A90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4A90", Offset = "0x7D4A90")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4AF0", Offset = "0x7D4AF0")]
		public float DistanceFromGround;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4B28", Offset = "0x7D4B28")]
		public float DistanceFromGroundOffset;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4B60", Offset = "0x7D4B60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4B60", Offset = "0x7D4B60")]
		public float MinimumCapsuleHeight;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4BC0", Offset = "0x7D4BC0")]
		public float MaximumCapsuleHeight;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float LastTeleportTime;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4C08", Offset = "0x7D4C08")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4C08", Offset = "0x7D4C08")]
		public float CharacterControllerYOffset;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float CameraHeight;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4C78", Offset = "0x7D4C78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4C78", Offset = "0x7D4C78")]
		public bool ElevateCameraIfNoHMDPresent;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4CD8", Offset = "0x7D4CD8")]
		public float ElevateCameraHeight;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D10", Offset = "0x7D4D10")]
		public float MinElevation;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float MaxElevation;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float LastPlayerMoveTime;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected CharacterController characterController;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody playerRigid;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected CapsuleCollider playerCapsule;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected PlayerClimbing playerClimbing;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool isClimbing;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		protected bool wasClimbing;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public RaycastHit groundHit;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected RaycastHit hit;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Transform mainCamera;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 _initialPosition;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float SphereColliderRadius;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector3 moveTest;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1116988", Offset = "0x1116988", VA = "0x1116988")]
		private void Start()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1116B58", Offset = "0x1116B58", VA = "0x1116B58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1116E44", Offset = "0x1116E44", VA = "0x1116E44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1116E78", Offset = "0x1116E78", VA = "0x1116E78", Slot = "4")]
		public virtual void CheckPlayerElevationRespawn()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x11170BC", Offset = "0x11170BC", VA = "0x11170BC", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1117678", Offset = "0x1117678", VA = "0x1117678", Slot = "6")]
		public virtual void RotateTrackingSpaceToCamera()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x111782C", Offset = "0x111782C", VA = "0x111782C", Slot = "7")]
		public virtual void UpdateCameraRigPosition()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1117A44", Offset = "0x1117A44", VA = "0x1117A44", Slot = "8")]
		public virtual void UpdateCharacterHeight()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1117D24", Offset = "0x1117D24", VA = "0x1117D24", Slot = "9")]
		public virtual void UpdateCameraHeight()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1117DAC", Offset = "0x1117DAC", VA = "0x1117DAC", Slot = "10")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1117FE8", Offset = "0x1117FE8", VA = "0x1117FE8", Slot = "11")]
		public virtual void CheckRigidbodyCapsuleMove(Vector3 movePosition)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1118160", Offset = "0x1118160", VA = "0x1118160", Slot = "12")]
		public virtual bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1118208", Offset = "0x1118208", VA = "0x1118208", Slot = "13")]
		public virtual void OnClimbingChange()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1118228", Offset = "0x1118228", VA = "0x1118228")]
		public BNGPlayerController()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D58", Offset = "0x7D4D58")]
		public float MinLocalY;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D90", Offset = "0x7D4D90")]
		public float MaxLocalY;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4DC8", Offset = "0x7D4DC8")]
		public float ClickTolerance;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4E00", Offset = "0x7D4E00")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UITrigger> uiTriggers;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpringJoint joint;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool clickingDown;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClick;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float ButtonSpeed;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float SpringForce;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x10BF7C0", Offset = "0x10BF7C0", VA = "0x10BF7C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x10BF8E0", Offset = "0x10BF8E0", VA = "0x10BF8E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x10BFCA0", Offset = "0x10BFCA0", VA = "0x10BFCA0", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x10BFD04", Offset = "0x10BFD04", VA = "0x10BFD04", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x10BFD68", Offset = "0x10BFD68", VA = "0x10BFD68", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x10BFE50", Offset = "0x10BFE50", VA = "0x10BFE50", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x10BFF38", Offset = "0x10BFF38", VA = "0x10BFF38")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x10C0188", Offset = "0x10C0188", VA = "0x10C0188")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x10C033C", Offset = "0x10C033C", VA = "0x10C033C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x10C04E8", Offset = "0x10C04E8", VA = "0x10C04E8")]
		public Button()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class ControllerModelSelector : MonoBehaviour
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int disableIndex;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isQuitting;

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x10C86FC", Offset = "0x10C86FC", VA = "0x10C86FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x10C87A4", Offset = "0x10C87A4", VA = "0x10C87A4")]
		public void UpdateControllerModel()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x10C88D0", Offset = "0x10C88D0", VA = "0x10C88D0")]
		public void EnableChildController(int childIndex)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x10C8964", Offset = "0x10C8964", VA = "0x10C8964")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x10C8A20", Offset = "0x10C8A20", VA = "0x10C8A20")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x10C8A2C", Offset = "0x10C8A2C", VA = "0x10C8A2C")]
		public ControllerModelSelector()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class GrabPoint : MonoBehaviour
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4E38", Offset = "0x7D4E38")]
		public HandPoseType handPoseType;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4E70", Offset = "0x7D4E70")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4EA8", Offset = "0x7D4EA8")]
		public HandPoseId HandPose;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4EE0", Offset = "0x7D4EE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4EE0", Offset = "0x7D4EE0")]
		public bool LeftHandIsValid;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4F40", Offset = "0x7D4F40")]
		public bool RightHandIsValid;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4F78", Offset = "0x7D4F78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4F78", Offset = "0x7D4F78")]
		public Transform HandPosition;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D4FD8", Offset = "0x7D4FD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4FD8", Offset = "0x7D4FD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4FD8", Offset = "0x7D4FD8")]
		public float MaxDegreeDifferenceAllowed;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5054", Offset = "0x7D5054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5054", Offset = "0x7D5054")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5054", Offset = "0x7D5054")]
		public float IndexBlendMin;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D50CC", Offset = "0x7D50CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D50CC", Offset = "0x7D50CC")]
		public float IndexBlendMax;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5120", Offset = "0x7D5120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5120", Offset = "0x7D5120")]
		public float ThumbBlendMin;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5174", Offset = "0x7D5174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5174", Offset = "0x7D5174")]
		public float ThumbBlendMax;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 previewModelOffsetLeft;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 previewModelOffsetRight;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D51C8", Offset = "0x7D51C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D51C8", Offset = "0x7D51C8")]
		public bool ShowAngleGizmo;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool offsetFound;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x173A310", Offset = "0x173A310", VA = "0x173A310")]
		public void UpdatePreviewTransforms()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x173A634", Offset = "0x173A634", VA = "0x173A634")]
		public void UpdateHandPosePreview()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x173A808", Offset = "0x173A808", VA = "0x173A808")]
		public void UpdateAutoPoserPreview()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x173AB2C", Offset = "0x173AB2C", VA = "0x173AB2C")]
		public void UpdateChildAnimators()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x173ACC8", Offset = "0x173ACC8", VA = "0x173ACC8")]
		public GrabPoint()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BeingHeld;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Grabber> validGrabbers;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Grabber> heldByGrabbers;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool changeKinematicOnGrab;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool wasKinematic;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		protected bool usedGravity;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected CollisionDetectionMode initialCollisionMode;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RigidbodyInterpolation initialInterpolationMode;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool remoteGrabbing;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5228", Offset = "0x7D5228")]
		public bool linearDrive;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5260", Offset = "0x7D5260")]
		public GrabButton GrabButton;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5298", Offset = "0x7D5298")]
		public HoldType Grabtype;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D52D0", Offset = "0x7D52D0")]
		public GrabPhysics GrabPhysics;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5308", Offset = "0x7D5308")]
		public GrabType GrabMechanic;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5340", Offset = "0x7D5340")]
		public float GrabSpeed;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5378", Offset = "0x7D5378")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5378", Offset = "0x7D5378")]
		public bool RemoteGrabbable;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RemoteGrabMovement RemoteGrabMechanic;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D53D8", Offset = "0x7D53D8")]
		public float RemoteGrabDistance;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5410", Offset = "0x7D5410")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5410", Offset = "0x7D5410")]
		public float ThrowForceMultiplier;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5470", Offset = "0x7D5470")]
		public float ThrowForceMultiplierAngular;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D54A8", Offset = "0x7D54A8")]
		public float BreakDistance;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D54E0", Offset = "0x7D54E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D54E0", Offset = "0x7D54E0")]
		public bool HideHandGraphics;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5540", Offset = "0x7D5540")]
		public bool ParentToHands;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5578", Offset = "0x7D5578")]
		public bool ParentHandModel;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D55B0", Offset = "0x7D55B0")]
		public bool SnapHandModel;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D55E8", Offset = "0x7D55E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D55E8", Offset = "0x7D55E8")]
		public bool CanBeDropped;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5648", Offset = "0x7D5648")]
		public bool CanBeSnappedToSnapZone;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5680", Offset = "0x7D5680")]
		public bool ForceDisableKinematicOnDrop;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D56B8", Offset = "0x7D56B8")]
		public bool InstantMovement;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D56F0", Offset = "0x7D56F0")]
		public bool MakeChildCollidersGrabbable;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5728", Offset = "0x7D5728")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5728", Offset = "0x7D5728")]
		public HandPoseType handPoseType;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected HandPoseType initialHandPoseType;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5788", Offset = "0x7D5788")]
		public HandPose SelectedHandPose;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected HandPose initialHandPose;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D57C0", Offset = "0x7D57C0")]
		public HandPoseId CustomHandPose;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected HandPoseId initialHandPoseId;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D57F8", Offset = "0x7D57F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D57F8", Offset = "0x7D57F8")]
		public OtherGrabBehavior SecondaryGrabBehavior;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5858", Offset = "0x7D5858")]
		public TwoHandedPositionType TwoHandedPosition;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5890", Offset = "0x7D5890")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5890", Offset = "0x7D5890")]
		public float TwoHandedPostionLerpAmount;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D58E4", Offset = "0x7D58E4")]
		public TwoHandedRotationType TwoHandedRotation;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D591C", Offset = "0x7D591C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D591C", Offset = "0x7D591C")]
		public float TwoHandedRotationLerpAmount;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5970", Offset = "0x7D5970")]
		public TwoHandedDropMechanic TwoHandedDropBehavior;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D59A8", Offset = "0x7D59A8")]
		public TwoHandedLookDirection TwoHandedLookVector;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D59E0", Offset = "0x7D59E0")]
		public float SecondHandLookSpeed;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5A18", Offset = "0x7D5A18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5A18", Offset = "0x7D5A18")]
		public Grabbable SecondaryGrabbable;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5A78", Offset = "0x7D5A78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5A78", Offset = "0x7D5A78")]
		public Grabbable OtherGrabbableMustBeGrabbed;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5AD8", Offset = "0x7D5AD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5AD8", Offset = "0x7D5AD8")]
		public float CollisionSpring;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5B38", Offset = "0x7D5B38")]
		public float CollisionSlerp;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5B70", Offset = "0x7D5B70")]
		public ConfigurableJointMotion CollisionLinearMotionX;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5BA8", Offset = "0x7D5BA8")]
		public ConfigurableJointMotion CollisionLinearMotionY;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5BE0", Offset = "0x7D5BE0")]
		public ConfigurableJointMotion CollisionLinearMotionZ;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C18", Offset = "0x7D5C18")]
		public ConfigurableJointMotion CollisionAngularMotionX;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C50", Offset = "0x7D5C50")]
		public ConfigurableJointMotion CollisionAngularMotionY;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C88", Offset = "0x7D5C88")]
		public ConfigurableJointMotion CollisionAngularMotionZ;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5CC0", Offset = "0x7D5CC0")]
		public bool ApplyCorrectiveForce;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5CF8", Offset = "0x7D5CF8")]
		public float MoveVelocityForce;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float MoveAngularVelocityForce;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public float LastGrabTime;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public float LastDropTime;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool AddControllerVelocityOnDrop;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float journeyLength;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5D60", Offset = "0x7D5D60")]
		private Vector3 <OriginalScale>k__BackingField;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5D70", Offset = "0x7D5D70")]
		[SerializeField]
		public List<Collider> collisions;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5DBC", Offset = "0x7D5DBC")]
		private float <lastCollisionSeconds>k__BackingField;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5DCC", Offset = "0x7D5DCC")]
		private float <lastNoCollisionSeconds>k__BackingField;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5DDC", Offset = "0x7D5DDC")]
		private float <requestSpringTime>k__BackingField;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform primaryGrabOffset;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform secondaryGrabOffset;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public GrabPoint ActiveGrabPoint;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public Vector3 SecondaryLookOffset;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Transform SecondaryLookAtTransform;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public Transform LocalOffsetTransform;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Transform _grabTransform;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform _grabTransformSecondary;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5E2C", Offset = "0x7D5E2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5E2C", Offset = "0x7D5E2C")]
		public List<Transform> GrabPoints;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _canBeMoved;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected Transform originalParent;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected InputBridge input;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected ConfigurableJoint connectedJoint;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Vector3 previousPosition;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		protected float lastItemTeleportTime;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected bool recentlyTeleported;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		[HideInInspector]
		public bool UseCustomInspector;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private BNGPlayerController _player;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected Collider col;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected Rigidbody rigid;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Grabber flyingTo;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected List<GrabbableEvents> events;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected bool didParentHands;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Transform startPosition;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Transform endPosition;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public OculusLinearMapping linearMapping;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool repositionGameObject;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		public bool maintainMomemntum;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float momemtumDampenRate;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float initialMappingOffset;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private int numMappingChangeSamples;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float prevMapping;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float mappingChangeRate;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int sampleCount;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Transform parentOfHand;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Transform startingRotation;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool initiatedFlick;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float flickStartVelocity;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float FlickSpeed;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float lastFlickTime;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float FlickForce;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float angle;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Vector3 axis;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Vector3 angularTarget;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 angularMovement;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private bool subscribedToEvents;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26D")]
		private bool grabbableIsLocked;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private Transform _priorParent;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Quaternion _priorLocalOffsetRotation;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Grabber _priorPrimaryGrabber;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool lockPos;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool lockRot;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int lockRequests;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool quitting;

		[Token(Token = "0x170004ED")]
		public bool BeingHeldWithTwoHands
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x173BAD8", Offset = "0x173BAD8", VA = "0x173BAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004EE")]
		public List<Grabber> HeldByGrabbers
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x173BBA0", Offset = "0x173BBA0", VA = "0x173BBA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EF")]
		public bool RemoteGrabbing
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x173BBA8", Offset = "0x173BBA8", VA = "0x173BBA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F0")]
		public Vector3 OriginalScale
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x173BBB0", Offset = "0x173BBB0", VA = "0x173BBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6FB8", Offset = "0x7E6FB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x173BBC0", Offset = "0x173BBC0", VA = "0x173BBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6FC8", Offset = "0x7E6FC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public float lastCollisionSeconds
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x173BBD0", Offset = "0x173BBD0", VA = "0x173BBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6FD8", Offset = "0x7E6FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x173BBD8", Offset = "0x173BBD8", VA = "0x173BBD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6FE8", Offset = "0x7E6FE8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public float lastNoCollisionSeconds
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x173BBE0", Offset = "0x173BBE0", VA = "0x173BBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E6FF8", Offset = "0x7E6FF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x173BBE8", Offset = "0x173BBE8", VA = "0x173BBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7008", Offset = "0x7E7008")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public bool RecentlyCollided
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x173BBF0", Offset = "0x173BBF0", VA = "0x173BBF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F4")]
		public float requestSpringTime
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x173BC6C", Offset = "0x173BC6C", VA = "0x173BC6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7018", Offset = "0x7E7018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x173BC74", Offset = "0x173BC74", VA = "0x173BC74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7028", Offset = "0x7E7028")]
			protected set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public Vector3 grabPosition
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x173BC7C", Offset = "0x173BC7C", VA = "0x173BC7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004F6")]
		[HideInInspector]
		public Vector3 GrabPositionOffset
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x173BD10", Offset = "0x173BD10", VA = "0x173BD10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004F7")]
		[HideInInspector]
		public Vector3 GrabRotationOffset
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x173BDAC", Offset = "0x173BDAC", VA = "0x173BDAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004F8")]
		public Transform grabTransform
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x173BE48", Offset = "0x173BE48", VA = "0x173BE48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F9")]
		public Transform grabTransformSecondary
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x173BF68", Offset = "0x173BF68", VA = "0x173BF68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		public bool CanBeMoved
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x173C09C", Offset = "0x173C09C", VA = "0x173C09C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FB")]
		protected BNGPlayerController player
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x173C0A4", Offset = "0x173C0A4", VA = "0x173C0A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		public Grabber FlyingToGrabber
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x173C0B4", Offset = "0x173C0B4", VA = "0x173C0B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FD")]
		public bool DidParentHands
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x173C0BC", Offset = "0x173C0BC", VA = "0x173C0BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x173C0C4", Offset = "0x173C0C4", VA = "0x173C0C4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x173C740", Offset = "0x173C740", VA = "0x173C740")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x173CA50", Offset = "0x173CA50", VA = "0x173CA50", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x173DD6C", Offset = "0x173DD6C", VA = "0x173DD6C", Slot = "5")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x173DE88", Offset = "0x173DE88", VA = "0x173DE88", Slot = "6")]
		public virtual Vector3 GetGrabberWithGrabPointOffset(Grabber grabber, Transform grabPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x173DFE8", Offset = "0x173DFE8", VA = "0x173DFE8", Slot = "7")]
		public virtual Quaternion GetGrabberWithOffsetWorldRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x173D720", Offset = "0x173D720", VA = "0x173D720")]
		protected void positionHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x173E084", Offset = "0x173E084", VA = "0x173E084", Slot = "8")]
		public virtual bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x173E178", Offset = "0x173E178", VA = "0x173E178", Slot = "9")]
		public virtual void UpdateRemoteGrab()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x173E1BC", Offset = "0x173E1BC", VA = "0x173E1BC", Slot = "10")]
		public virtual void CheckRemoteGrabLinear()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x173E958", Offset = "0x173E958", VA = "0x173E958", Slot = "11")]
		public virtual void CheckRemoteGrabVelocity()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x173F23C", Offset = "0x173F23C", VA = "0x173F23C", Slot = "12")]
		public virtual void InitiateFlick()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x173F3A0", Offset = "0x173F3A0", VA = "0x173F3A0")]
		public Vector3 GetVelocityToHitTargetByTime(Vector3 startPosition, Vector3 targetPosition, Vector3 gravityBase, float timeToTarget)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x173F534", Offset = "0x173F534", VA = "0x173F534", Slot = "13")]
		public virtual void CheckRemoteGrabFlick()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x173F62C", Offset = "0x173F62C", VA = "0x173F62C", Slot = "14")]
		public virtual void UpdateFixedJoints()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x173F8A8", Offset = "0x173F8A8", VA = "0x173F8A8", Slot = "15")]
		public virtual void UpdatePhysicsJoints()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x173FCEC", Offset = "0x173FCEC", VA = "0x173FCEC")]
		private void setPositionSpring(float spring, float damper)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x173FE84", Offset = "0x173FE84", VA = "0x173FE84")]
		private void setSlerpDrive(float slerp, float damper)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x173FF68", Offset = "0x173FF68", VA = "0x173FF68", Slot = "16")]
		public virtual Vector3 GetGrabberVector3(Grabber grabber, bool isSecondary)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x173FFC0", Offset = "0x173FFC0", VA = "0x173FFC0", Slot = "17")]
		public virtual Quaternion GetGrabberQuaternion(Grabber grabber, bool isSecondary)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x173F6F4", Offset = "0x173F6F4", VA = "0x173F6F4")]
		private void moveWithVelocity()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x17401BC", Offset = "0x17401BC", VA = "0x17401BC")]
		private void rotateWithVelocity()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1740004", Offset = "0x1740004", VA = "0x1740004")]
		public Vector3 GetGrabbersAveragedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x173ECC4", Offset = "0x173ECC4", VA = "0x173ECC4")]
		public Quaternion GetGrabbersAveragedRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1740524", Offset = "0x1740524", VA = "0x1740524", Slot = "18")]
		public virtual void UpdateKinematicPhysics()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1740B78", Offset = "0x1740B78", VA = "0x1740B78", Slot = "19")]
		public virtual void UpdateVelocityPhysics()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x173D4DC", Offset = "0x173D4DC", VA = "0x173D4DC")]
		public void checkParentHands(Grabber g)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x173C640", Offset = "0x173C640", VA = "0x173C640")]
		private bool canBeMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x173D7FC", Offset = "0x173D7FC", VA = "0x173D7FC")]
		private void checkSecondaryLook()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x17409CC", Offset = "0x17409CC", VA = "0x17409CC")]
		public void rotateGrabber(bool lerp = false)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1740EE8", Offset = "0x1740EE8", VA = "0x1740EE8")]
		public Transform GetGrabPoint()
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1740EF0", Offset = "0x1740EF0", VA = "0x1740EF0", Slot = "20")]
		public virtual void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x17419D8", Offset = "0x17419D8", VA = "0x17419D8", Slot = "21")]
		protected virtual void setupConfigJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1741BB4", Offset = "0x1741BB4", VA = "0x1741BB4", Slot = "22")]
		protected virtual void setupFixedJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1741CA8", Offset = "0x1741CA8", VA = "0x1741CA8", Slot = "23")]
		protected virtual void setupKinematicGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1741DCC", Offset = "0x1741DCC", VA = "0x1741DCC", Slot = "24")]
		protected virtual void setupVelocityGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x1741E1C", Offset = "0x1741E1C", VA = "0x1741E1C", Slot = "25")]
		public virtual void GrabRemoteItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1741EF8", Offset = "0x1741EF8", VA = "0x1741EF8", Slot = "26")]
		public virtual void ResetGrabbing()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x1741FE8", Offset = "0x1741FE8", VA = "0x1741FE8", Slot = "27")]
		public virtual void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1740DE8", Offset = "0x1740DE8", VA = "0x1740DE8")]
		private void clearLookAtTransform()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x173CFE8", Offset = "0x173CFE8", VA = "0x173CFE8")]
		private void callEvents(Grabber g)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1742AC0", Offset = "0x1742AC0", VA = "0x1742AC0", Slot = "28")]
		public virtual void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1742AD8", Offset = "0x1742AD8", VA = "0x1742AD8", Slot = "29")]
		public virtual void DropItem(bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1742B34", Offset = "0x1742B34", VA = "0x1742B34")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1742B70", Offset = "0x1742B70", VA = "0x1742B70")]
		public void ResetParent()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1742BA4", Offset = "0x1742BA4", VA = "0x1742BA4")]
		public void UpdateOriginalParent(Transform newOriginalParent)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1742BAC", Offset = "0x1742BAC", VA = "0x1742BAC")]
		public void UpdateOriginalParent()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1742BE4", Offset = "0x1742BE4", VA = "0x1742BE4")]
		public ControllerHand GetControllerHand(Grabber g)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1742C68", Offset = "0x1742C68", VA = "0x1742C68", Slot = "30")]
		public virtual Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x1742DD4", Offset = "0x1742DD4", VA = "0x1742DD4", Slot = "31")]
		public virtual Grabber GetClosestGrabber()
		{
			return null;
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x1742F34", Offset = "0x1742F34", VA = "0x1742F34", Slot = "32")]
		public virtual Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1743238", Offset = "0x1743238", VA = "0x1743238", Slot = "33")]
		public virtual void Release(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1743304", Offset = "0x1743304", VA = "0x1743304", Slot = "34")]
		public virtual bool IsValidCollision(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1743348", Offset = "0x1743348", VA = "0x1743348", Slot = "35")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x17434FC", Offset = "0x17434FC", VA = "0x17434FC", Slot = "36")]
		public virtual void parentHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1741AF4", Offset = "0x1741AF4", VA = "0x1741AF4")]
		private void setupConfigJoint(Grabber g)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x17427FC", Offset = "0x17427FC", VA = "0x17427FC")]
		private void removeConfigJoint()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x17417F8", Offset = "0x17417F8", VA = "0x17417F8")]
		public void addGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x17428AC", Offset = "0x17428AC", VA = "0x17428AC")]
		public void removeGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x173E794", Offset = "0x173E794", VA = "0x173E794")]
		private void movePosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x173E870", Offset = "0x173E870", VA = "0x173E870")]
		private void moveRotation(Quaternion worldRotation)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1740988", Offset = "0x1740988", VA = "0x1740988")]
		protected Vector3 getRemotePosition(Grabber toGrabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x173E594", Offset = "0x173E594", VA = "0x173E594")]
		protected Quaternion getRemoteRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x173CE40", Offset = "0x173CE40", VA = "0x173CE40")]
		private void filterCollisions()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x1743604", Offset = "0x1743604", VA = "0x1743604", Slot = "37")]
		public virtual BNGPlayerController GetBNGPlayerController()
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x1743744", Offset = "0x1743744", VA = "0x1743744", Slot = "38")]
		public virtual void RequestSpringTime(float seconds)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1743788", Offset = "0x1743788", VA = "0x1743788", Slot = "39")]
		public virtual void AddValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x1743870", Offset = "0x1743870", VA = "0x1743870", Slot = "40")]
		public virtual void RemoveValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1743910", Offset = "0x1743910", VA = "0x1743910", Slot = "41")]
		public virtual void SubscribeToMoveEvents()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1743B84", Offset = "0x1743B84", VA = "0x1743B84", Slot = "42")]
		public virtual void UnsubscribeFromMoveEvents()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1743DE4", Offset = "0x1743DE4", VA = "0x1743DE4", Slot = "43")]
		public virtual void LockGrabbable()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1743E00", Offset = "0x1743E00", VA = "0x1743E00", Slot = "44")]
		public virtual void LockGrabbableWithRotation()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1743E1C", Offset = "0x1743E1C", VA = "0x1743E1C", Slot = "45")]
		public virtual void RequestLockGrabbable()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1743FE4", Offset = "0x1743FE4", VA = "0x1743FE4", Slot = "46")]
		public virtual void RequestUnlockGrabbable()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1744024", Offset = "0x1744024", VA = "0x1744024", Slot = "47")]
		public virtual void ResetLockResets()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x17440F0", Offset = "0x17440F0", VA = "0x17440F0", Slot = "48")]
		public virtual void LockGrabbable(bool lockPosition, bool lockRotation, bool overridePriorLock)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x174432C", Offset = "0x174432C", VA = "0x174432C", Slot = "49")]
		public virtual void UnlockGrabbable()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x17445CC", Offset = "0x17445CC", VA = "0x17445CC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x174475C", Offset = "0x174475C", VA = "0x174475C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x1744844", Offset = "0x1744844", VA = "0x1744844")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x1744910", Offset = "0x1744910", VA = "0x1744910")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x174491C", Offset = "0x174491C", VA = "0x174491C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x1744948", Offset = "0x1744948", VA = "0x1744948")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x1744AB8", Offset = "0x1744AB8", VA = "0x1744AB8")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x173C898", Offset = "0x173C898", VA = "0x173C898")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x17418E0", Offset = "0x17418E0", VA = "0x17418E0")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x1744B54", Offset = "0x1744B54", VA = "0x1744B54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x1744CF0", Offset = "0x1744CF0", VA = "0x1744CF0")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public enum GrabType
	{
		[Token(Token = "0x40015EA")]
		Snap,
		[Token(Token = "0x40015EB")]
		Precise
	}
	[Token(Token = "0x20003A2")]
	public enum RemoteGrabMovement
	{
		[Token(Token = "0x40015ED")]
		Linear,
		[Token(Token = "0x40015EE")]
		Velocity,
		[Token(Token = "0x40015EF")]
		Flick
	}
	[Token(Token = "0x20003A3")]
	public enum GrabPhysics
	{
		[Token(Token = "0x40015F1")]
		None = 2,
		[Token(Token = "0x40015F2")]
		PhysicsJoint = 0,
		[Token(Token = "0x40015F3")]
		FixedJoint = 3,
		[Token(Token = "0x40015F4")]
		Velocity = 4,
		[Token(Token = "0x40015F5")]
		Kinematic = 1
	}
	[Token(Token = "0x20003A4")]
	public enum OtherGrabBehavior
	{
		[Token(Token = "0x40015F7")]
		None,
		[Token(Token = "0x40015F8")]
		SwapHands,
		[Token(Token = "0x40015F9")]
		DualGrab
	}
	[Token(Token = "0x20003A5")]
	public enum TwoHandedPositionType
	{
		[Token(Token = "0x40015FB")]
		Lerp,
		[Token(Token = "0x40015FC")]
		None
	}
	[Token(Token = "0x20003A6")]
	public enum TwoHandedRotationType
	{
		[Token(Token = "0x40015FE")]
		Lerp,
		[Token(Token = "0x40015FF")]
		Slerp,
		[Token(Token = "0x4001600")]
		LookAtSecondary,
		[Token(Token = "0x4001601")]
		None
	}
	[Token(Token = "0x20003A7")]
	public enum TwoHandedDropMechanic
	{
		[Token(Token = "0x4001603")]
		Drop,
		[Token(Token = "0x4001604")]
		Transfer,
		[Token(Token = "0x4001605")]
		None
	}
	[Token(Token = "0x20003A8")]
	public enum TwoHandedLookDirection
	{
		[Token(Token = "0x4001607")]
		Horizontal,
		[Token(Token = "0x4001608")]
		Vertical
	}
	[Token(Token = "0x20003A9")]
	public enum HandPoseType
	{
		[Token(Token = "0x400160A")]
		AnimatorID,
		[Token(Token = "0x400160B")]
		HandPose,
		[Token(Token = "0x400160C")]
		AutoPoseOnce,
		[Token(Token = "0x400160D")]
		AutoPoseContinuous,
		[Token(Token = "0x400160E")]
		None
	}
	[Token(Token = "0x20003AA")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5E9C", Offset = "0x7D5E9C")]
		public Grabbable ParentGrabbable;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x17454DC", Offset = "0x17454DC", VA = "0x17454DC")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD05C", Offset = "0x7CD05C")]
	public abstract class GrabbableEvents : MonoBehaviour
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Grabbable grab;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Grabber thisGrabber;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected InputBridge input;

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1745530", Offset = "0x1745530", VA = "0x1745530", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x17455BC", Offset = "0x17455BC", VA = "0x17455BC", Slot = "5")]
		public virtual void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x17455C4", Offset = "0x17455C4", VA = "0x17455C4", Slot = "6")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x17455C8", Offset = "0x17455C8", VA = "0x17455C8", Slot = "7")]
		public virtual void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x174547C", Offset = "0x174547C", VA = "0x174547C", Slot = "8")]
		public virtual void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x17455CC", Offset = "0x17455CC", VA = "0x17455CC", Slot = "9")]
		public virtual void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1745490", Offset = "0x1745490", VA = "0x1745490", Slot = "10")]
		public virtual void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x17455D0", Offset = "0x17455D0", VA = "0x17455D0", Slot = "11")]
		public virtual void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x17454A4", Offset = "0x17454A4", VA = "0x17454A4", Slot = "12")]
		public virtual void OnBecomesClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x17455D4", Offset = "0x17455D4", VA = "0x17455D4", Slot = "13")]
		public virtual void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x17454B8", Offset = "0x17454B8", VA = "0x17454B8", Slot = "14")]
		public virtual void OnNoLongerClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x17455D8", Offset = "0x17455D8", VA = "0x17455D8", Slot = "15")]
		public virtual void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x17455DC", Offset = "0x17455DC", VA = "0x17455DC", Slot = "16")]
		public virtual void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x17455E0", Offset = "0x17455E0", VA = "0x17455E0", Slot = "17")]
		public virtual void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x17455E4", Offset = "0x17455E4", VA = "0x17455E4", Slot = "18")]
		public virtual void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x17455E8", Offset = "0x17455E8", VA = "0x17455E8", Slot = "19")]
		public virtual void OnButton1()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x17455EC", Offset = "0x17455EC", VA = "0x17455EC", Slot = "20")]
		public virtual void OnButton1Down()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x17455F0", Offset = "0x17455F0", VA = "0x17455F0", Slot = "21")]
		public virtual void OnButton1Up()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x17455F4", Offset = "0x17455F4", VA = "0x17455F4", Slot = "22")]
		public virtual void OnButton2()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x17455F8", Offset = "0x17455F8", VA = "0x17455F8", Slot = "23")]
		public virtual void OnButton2Down()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x17455FC", Offset = "0x17455FC", VA = "0x17455FC", Slot = "24")]
		public virtual void OnButton2Up()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x1745600", Offset = "0x1745600", VA = "0x1745600", Slot = "25")]
		public virtual void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1745604", Offset = "0x1745604", VA = "0x1745604", Slot = "26")]
		public virtual void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x173A308", Offset = "0x173A308", VA = "0x173A308")]
		protected GrabbableEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1452CF0", Offset = "0x1452CF0", VA = "0x1452CF0")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class FloatFloatEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1452D3C", Offset = "0x1452D3C", VA = "0x1452D3C")]
		public FloatFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class GrabberEvent : UnityEvent<Grabber>
	{
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1749880", Offset = "0x1749880", VA = "0x1749880")]
		public GrabberEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class GrabbableEvent : UnityEvent<Grabbable>
	{
		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x17454E4", Offset = "0x17454E4", VA = "0x17454E4")]
		public GrabbableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class RaycastHitEvent : UnityEvent<RaycastHit>
	{
		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1300714", Offset = "0x1300714", VA = "0x1300714")]
		public RaycastHitEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B1")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xDF3728", Offset = "0xDF3728", VA = "0xDF3728")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xDF3774", Offset = "0xDF3774", VA = "0xDF3774")]
		public Vector3Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B3")]
	public class PointerEventDataEvent : UnityEvent<PointerEventData>
	{
		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x12FC9C0", Offset = "0x12FC9C0", VA = "0x12FC9C0")]
		public PointerEventDataEvent()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class GrabbableUnityEvents : GrabbableEvents
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent onGrab;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRelease;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onBecomesClosestGrabbable;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onNoLongerClosestGrabbable;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onBecomesClosestRemoteGrabbable;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onNoLongerClosestRemoteGrabbable;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onGrip;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onTrigger;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onButton1;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onButton1Down;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onButton1Up;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onButton2;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onButton2Down;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onButton2Up;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onSnapZoneEnter;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onSnapZoneExit;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1745EF0", Offset = "0x1745EF0", VA = "0x1745EF0", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1745F64", Offset = "0x1745F64", VA = "0x1745F64", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1745F78", Offset = "0x1745F78", VA = "0x1745F78", Slot = "7")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1745F8C", Offset = "0x1745F8C", VA = "0x1745F8C", Slot = "9")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1745FA0", Offset = "0x1745FA0", VA = "0x1745FA0", Slot = "11")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1745FB4", Offset = "0x1745FB4", VA = "0x1745FB4", Slot = "13")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1745FC8", Offset = "0x1745FC8", VA = "0x1745FC8", Slot = "15")]
		public override void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1746038", Offset = "0x1746038", VA = "0x1746038", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x17460A8", Offset = "0x17460A8", VA = "0x17460A8", Slot = "17")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x17460BC", Offset = "0x17460BC", VA = "0x17460BC", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x17460D0", Offset = "0x17460D0", VA = "0x17460D0", Slot = "19")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x17460E4", Offset = "0x17460E4", VA = "0x17460E4", Slot = "20")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x17460F8", Offset = "0x17460F8", VA = "0x17460F8", Slot = "21")]
		public override void OnButton1Up()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x174610C", Offset = "0x174610C", VA = "0x174610C", Slot = "22")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1746120", Offset = "0x1746120", VA = "0x1746120", Slot = "23")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x1746134", Offset = "0x1746134", VA = "0x1746134", Slot = "24")]
		public override void OnButton2Up()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1746148", Offset = "0x1746148", VA = "0x1746148", Slot = "25")]
		public override void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x174615C", Offset = "0x174615C", VA = "0x174615C", Slot = "26")]
		public override void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1746170", Offset = "0x1746170", VA = "0x1746170")]
		public GrabbableUnityEvents()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class GrabbablesInTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, Grabbable> NearbyGrabbables;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Collider, Grabbable> ValidGrabbables;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Collider, Grabbable> ValidRemoteGrabbables;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable ClosestRemoteGrabbable;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5ED4", Offset = "0x7D5ED4")]
		public bool FireGrabbableEvents;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5F0C", Offset = "0x7D5F0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5F0C", Offset = "0x7D5F0C")]
		public bool RaycastRemoteGrabbables;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5F6C", Offset = "0x7D5F6C")]
		public bool RemoteGrabbablesMustBeVisible;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5FA4", Offset = "0x7D5FA4")]
		public LayerMask RemoteCollisionLayers;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable _closest;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lastDistance;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _thisDistance;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Collider, Grabbable> _valids;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Collider, Grabbable> _filtered;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _eyeTransform;

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1746178", Offset = "0x1746178", VA = "0x1746178")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x174628C", Offset = "0x174628C", VA = "0x174628C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x17462B0", Offset = "0x17462B0", VA = "0x17462B0")]
		private void updateClosestGrabbable()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x1746310", Offset = "0x1746310", VA = "0x1746310")]
		private void updateClosestRemoteGrabbables()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x17465C0", Offset = "0x17465C0", VA = "0x17465C0", Slot = "4")]
		public virtual Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false, bool raycastCheck = false)
		{
			return null;
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1746934", Offset = "0x1746934", VA = "0x1746934", Slot = "5")]
		public virtual bool CheckObjectBetweenGrabbable(Vector3 startingPosition, Grabbable theGrabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x17463A8", Offset = "0x17463A8", VA = "0x17463A8")]
		public Dictionary<Collider, Grabbable> GetValidGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1746AD0", Offset = "0x1746AD0", VA = "0x1746AD0", Slot = "6")]
		protected virtual bool isValidGrabbable(Collider col, Grabbable grab)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x1746D1C", Offset = "0x1746D1C", VA = "0x1746D1C", Slot = "7")]
		public virtual Dictionary<Collider, Grabbable> SanitizeGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x174700C", Offset = "0x174700C", VA = "0x174700C", Slot = "8")]
		public virtual void AddNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x174713C", Offset = "0x174713C", VA = "0x174713C", Slot = "9")]
		public virtual void RemoveNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1747220", Offset = "0x1747220", VA = "0x1747220", Slot = "10")]
		public virtual void RemoveNearbyGrabbable(Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x17473F8", Offset = "0x17473F8", VA = "0x17473F8", Slot = "11")]
		public virtual void AddValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x1747710", Offset = "0x1747710", VA = "0x1747710", Slot = "12")]
		public virtual void RemoveValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x17477F4", Offset = "0x17477F4", VA = "0x17477F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1747960", Offset = "0x1747960", VA = "0x1747960")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1747A9C", Offset = "0x1747A9C", VA = "0x1747A9C")]
		public GrabbablesInTrigger()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD0BC", Offset = "0x7CD0BC")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5FDC", Offset = "0x7D5FDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D5FDC", Offset = "0x7D5FDC")]
		public ControllerHand HandSide;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D603C", Offset = "0x7D603C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D603C", Offset = "0x7D603C")]
		public HoldType DefaultHoldType;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D609C", Offset = "0x7D609C")]
		public GrabButton DefaultGrabButton;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D60D4", Offset = "0x7D60D4")]
		public InputActionReference GrabAction;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D610C", Offset = "0x7D610C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D610C", Offset = "0x7D610C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D610C", Offset = "0x7D610C")]
		public float GripAmount;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6184", Offset = "0x7D6184")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D6184", Offset = "0x7D6184")]
		public float ReleaseGripAmount;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D61D8", Offset = "0x7D61D8")]
		public float GrabCheckSeconds;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentGrabTime;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6210", Offset = "0x7D6210")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6210", Offset = "0x7D6210")]
		public Grabbable EquipGrabbableOnStart;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6270", Offset = "0x7D6270")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6270", Offset = "0x7D6270")]
		public Transform HandsGraphics;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform handsGraphicsParent;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 handsGraphicsPosition;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion handsGraphicsRotation;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D62D0", Offset = "0x7D62D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D62D0", Offset = "0x7D62D0")]
		public Grabbable HeldGrabbable;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6330", Offset = "0x7D6330")]
		public bool ForceGrab;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6368", Offset = "0x7D6368")]
		public bool ForceRelease;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D63A0", Offset = "0x7D63A0")]
		public float LastDropTime;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabbable previousClosest;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Grabbable previousClosestRemote;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GrabbablesInTrigger grabsInTrigger;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Grabbable flyingGrabbable;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float flyingTime;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D63D8", Offset = "0x7D63D8")]
		private Vector3 <handsGraphicsGrabberOffset>k__BackingField;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D63E8", Offset = "0x7D63E8")]
		private Vector3 <handsGraphicsGrabberOffsetRotation>k__BackingField;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Vector3 PreviousPosition;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Transform DummyTransform;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Rigidbody rb;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public InputBridge input;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool FreshGrip;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6428", Offset = "0x7D6428")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6428", Offset = "0x7D6428")]
		public GrabbableEvent onGrabEvent;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6488", Offset = "0x7D6488")]
		public GrabbableEvent onAfterGrabEvent;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D64C0", Offset = "0x7D64C0")]
		public GrabbableEvent onReleaseEvent;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public VelocityTracker velocityTracker;

		[Token(Token = "0x170004FE")]
		public bool HoldingItem
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x173A288", Offset = "0x173A288", VA = "0x173A288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FF")]
		public bool RemoteGrabbingItem
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x173A21C", Offset = "0x173A21C", VA = "0x173A21C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000500")]
		public GrabbablesInTrigger GrabsInTrigger
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1747AD8", Offset = "0x1747AD8", VA = "0x1747AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000501")]
		public Grabbable RemoteGrabbingGrabbable
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1747AE0", Offset = "0x1747AE0", VA = "0x1747AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		public Vector3 handsGraphicsGrabberOffset
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x1747AE8", Offset = "0x1747AE8", VA = "0x1747AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7038", Offset = "0x7E7038")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x1747AF4", Offset = "0x1747AF4", VA = "0x1747AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7048", Offset = "0x7E7048")]
			private set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public Vector3 handsGraphicsGrabberOffsetRotation
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x1747B00", Offset = "0x1747B00", VA = "0x1747B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7058", Offset = "0x7E7058")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x1747B0C", Offset = "0x1747B0C", VA = "0x1747B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7068", Offset = "0x7E7068")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x1747B18", Offset = "0x1747B18", VA = "0x1747B18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x1747FAC", Offset = "0x1747FAC", VA = "0x1747FAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x17487B0", Offset = "0x17487B0", VA = "0x17487B0", Slot = "4")]
		protected virtual void updateFreshGrabStatus()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1748180", Offset = "0x1748180", VA = "0x1748180")]
		private void checkGrabbableEvents()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x174891C", Offset = "0x174891C", VA = "0x174891C", Slot = "5")]
		public virtual bool InputCheckGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1748A2C", Offset = "0x1748A2C", VA = "0x1748A2C", Slot = "6")]
		public virtual bool GetInputDownForGrabbable(Grabbable grabObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x1748BA4", Offset = "0x1748BA4", VA = "0x1748BA4")]
		private HoldType getHoldType(Grabbable grab)
		{
			return default(HoldType);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x1748D48", Offset = "0x1748D48", VA = "0x1748D48", Slot = "7")]
		public virtual GrabButton GetGrabButton(Grabbable grab)
		{
			return default(GrabButton);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x174894C", Offset = "0x174894C", VA = "0x174894C")]
		private Grabbable getClosestOrRemote()
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x17486B8", Offset = "0x17486B8", VA = "0x17486B8")]
		private bool inputCheckRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1748830", Offset = "0x1748830", VA = "0x1748830")]
		private float getGrabInput(GrabButton btn)
		{
			return default(float);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1748C50", Offset = "0x1748C50", VA = "0x1748C50")]
		private bool getToggleInput(GrabButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1748DF4", Offset = "0x1748DF4", VA = "0x1748DF4", Slot = "8")]
		public virtual bool TryGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1748F60", Offset = "0x1748F60", VA = "0x1748F60", Slot = "9")]
		public virtual void GrabGrabbable(Grabbable item)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1749100", Offset = "0x1749100", VA = "0x1749100", Slot = "10")]
		public virtual void DidDrop()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x17491F4", Offset = "0x17491F4", VA = "0x17491F4", Slot = "11")]
		public virtual void HideHandGraphics()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x1749294", Offset = "0x1749294", VA = "0x1749294", Slot = "12")]
		public virtual void ResetHandGraphics()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x174939C", Offset = "0x174939C", VA = "0x174939C", Slot = "13")]
		public virtual void TryRelease()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x17480E8", Offset = "0x17480E8", VA = "0x17480E8")]
		private void resetFlyingGrabbable()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x174943C", Offset = "0x174943C", VA = "0x174943C", Slot = "14")]
		public virtual Vector3 GetGrabberAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x174945C", Offset = "0x174945C", VA = "0x174945C", Slot = "15")]
		public virtual Vector3 GetGrabberAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x174947C", Offset = "0x174947C", VA = "0x174947C")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class HandModelSelector : MonoBehaviour
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6508", Offset = "0x7D6508")]
		public int DefaultHandsModel;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6540", Offset = "0x7D6540")]
		public bool LoadHandSelectionFromPrefs;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6578", Offset = "0x7D6578")]
		public ControllerBinding ToggleHandsInput;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D65B0", Offset = "0x7D65B0")]
		public Transform LeftHandGFXHolder;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D65E8", Offset = "0x7D65E8")]
		public Transform RightHandGFXHolder;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _selectedHandGFX;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6620", Offset = "0x7D6620")]
		public CharacterIK IKBody;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIPointer uiPoint;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Transform> leftHandModels;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform activatedLeftModel;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Transform> rightHandModels;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform activatedRightModel;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x12ED354", Offset = "0x12ED354", VA = "0x12ED354")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x12EDAB0", Offset = "0x12EDAB0", VA = "0x12EDAB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x12ED3E8", Offset = "0x12ED3E8", VA = "0x12ED3E8")]
		public void CacheHandModels()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x12ED544", Offset = "0x12ED544", VA = "0x12ED544")]
		public void ChangeHandsModel(int childIndex, bool save = false)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x12EDAF8", Offset = "0x12EDAF8", VA = "0x12EDAF8")]
		public HandModelSelector()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class HeadCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScreenFader fader;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FadeDistance;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FadeOutDistance;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinFade;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxFade;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6658", Offset = "0x7D6658")]
		public bool CheckOnlyIfHMDActive;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool IgnoreHeldGrabbables;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DistanceTransform;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cols;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentFade;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastFade;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Collider> collisions;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x12F1D7C", Offset = "0x12F1D7C", VA = "0x12F1D7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x12F1E34", Offset = "0x12F1E34", VA = "0x12F1E34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x12F20DC", Offset = "0x12F20DC", VA = "0x12F20DC")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x12F23C0", Offset = "0x12F23C0", VA = "0x12F23C0")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x12F24C8", Offset = "0x12F24C8", VA = "0x12F24C8")]
		public HeadCollisionFade()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class HeadCollisionMove : MonoBehaviour
	{
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD11C", Offset = "0x7CD11C")]
		private sealed class <PushBackPlayer>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeadCollisionMove <>4__this;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A94")]
				[Address(RVA = "0xDB5B9C", Offset = "0xDB5B9C", VA = "0xDB5B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A96")]
				[Address(RVA = "0xDB5BE4", Offset = "0xDB5BE4", VA = "0xDB5BE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xDB5AA0", Offset = "0xDB5AA0", VA = "0xDB5AA0")]
			[DebuggerHidden]
			public <PushBackPlayer>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xDB5ACC", Offset = "0xDB5ACC", VA = "0xDB5ACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xDB5AD0", Offset = "0xDB5AD0", VA = "0xDB5AD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xDB5BA4", Offset = "0xDB5BA4", VA = "0xDB5BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6690", Offset = "0x7D6690")]
		public bool CollisionEnabled;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D66C8", Offset = "0x7D66C8")]
		public bool OnlyCollideAgainstWorld;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string worldTag;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject cameraRig;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform centerEyeAnchor;

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x12F24EC", Offset = "0x12F24EC", VA = "0x12F24EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x12F24F0", Offset = "0x12F24F0", VA = "0x12F24F0")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x12F25D0", Offset = "0x12F25D0", VA = "0x12F25D0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x12F2564", Offset = "0x12F2564", VA = "0x12F2564")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7078", Offset = "0x7E7078")]
		private IEnumerator PushBackPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x12F263C", Offset = "0x12F263C", VA = "0x12F263C")]
		public HeadCollisionMove()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class HingeHelper : GrabbableEvents
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6730", Offset = "0x7D6730")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6730", Offset = "0x7D6730")]
		public bool SnapToDegrees;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6790", Offset = "0x7D6790")]
		public float SnapDegrees;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D67C8", Offset = "0x7D67C8")]
		public Transform SnapGraphics;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6800", Offset = "0x7D6800")]
		public AudioClip SnapSound;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6838", Offset = "0x7D6838")]
		public float RandomizePitch;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6870", Offset = "0x7D6870")]
		public float SnapHaptics;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D68A8", Offset = "0x7D68A8")]
		public Text LabelToUpdate;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D68E0", Offset = "0x7D68E0")]
		public FloatEvent onHingeChange;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onHingeSnapChange;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastDegrees;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastSnapDegrees;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x12F47A8", Offset = "0x12F47A8", VA = "0x12F47A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x12F47FC", Offset = "0x12F47FC", VA = "0x12F47FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x12F4AA0", Offset = "0x12F4AA0", VA = "0x12F4AA0")]
		public void OnSnapChange(float yAngle)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x12F4C88", Offset = "0x12F4C88", VA = "0x12F4C88", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x12F4A30", Offset = "0x12F4A30", VA = "0x12F4A30")]
		public void OnHingeChange(float hingeAmount)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x12F4A0C", Offset = "0x12F4A0C", VA = "0x12F4A0C")]
		private float getSmoothedValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x12F4CE8", Offset = "0x12F4CE8", VA = "0x12F4CE8")]
		public HingeHelper()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001684")]
		Left,
		[Token(Token = "0x4001685")]
		Right,
		[Token(Token = "0x4001686")]
		None
	}
	[Token(Token = "0x20003BD")]
	public enum ControllerBinding
	{
		[Token(Token = "0x4001688")]
		None,
		[Token(Token = "0x4001689")]
		AButton,
		[Token(Token = "0x400168A")]
		AButtonDown,
		[Token(Token = "0x400168B")]
		BButton,
		[Token(Token = "0x400168C")]
		BButtonDown,
		[Token(Token = "0x400168D")]
		XButton,
		[Token(Token = "0x400168E")]
		XButtonDown,
		[Token(Token = "0x400168F")]
		YButton,
		[Token(Token = "0x4001690")]
		YButtonDown,
		[Token(Token = "0x4001691")]
		LeftTrigger,
		[Token(Token = "0x4001692")]
		LeftTriggerDown,
		[Token(Token = "0x4001693")]
		LeftGrip,
		[Token(Token = "0x4001694")]
		LeftGripDown,
		[Token(Token = "0x4001695")]
		LeftThumbstick,
		[Token(Token = "0x4001696")]
		LeftThumbstickDown,
		[Token(Token = "0x4001697")]
		RightTrigger,
		[Token(Token = "0x4001698")]
		RightTriggerDown,
		[Token(Token = "0x4001699")]
		RightGrip,
		[Token(Token = "0x400169A")]
		RightGripDown,
		[Token(Token = "0x400169B")]
		RightThumbstick,
		[Token(Token = "0x400169C")]
		RightThumbstickDown,
		[Token(Token = "0x400169D")]
		StartButton,
		[Token(Token = "0x400169E")]
		StartButtonDown,
		[Token(Token = "0x400169F")]
		BackButton,
		[Token(Token = "0x40016A0")]
		BackButtonDown
	}
	[Token(Token = "0x20003BE")]
	public enum GrabbedControllerBinding
	{
		[Token(Token = "0x40016A2")]
		None,
		[Token(Token = "0x40016A3")]
		Button1,
		[Token(Token = "0x40016A4")]
		Button1Down,
		[Token(Token = "0x40016A5")]
		Button2,
		[Token(Token = "0x40016A6")]
		Button2Down,
		[Token(Token = "0x40016A7")]
		Trigger,
		[Token(Token = "0x40016A8")]
		TriggerDown,
		[Token(Token = "0x40016A9")]
		Grip,
		[Token(Token = "0x40016AA")]
		GripDown
	}
	[Token(Token = "0x20003BF")]
	public enum InputAxis
	{
		[Token(Token = "0x40016AC")]
		None,
		[Token(Token = "0x40016AD")]
		LeftThumbStickAxis,
		[Token(Token = "0x40016AE")]
		LeftTouchPadAxis,
		[Token(Token = "0x40016AF")]
		RightThumbStickAxis,
		[Token(Token = "0x40016B0")]
		RightTouchPadAxis
	}
	[Token(Token = "0x20003C0")]
	public enum ControllerType
	{
		[Token(Token = "0x40016B2")]
		None,
		[Token(Token = "0x40016B3")]
		Unknown,
		[Token(Token = "0x40016B4")]
		OculusTouch,
		[Token(Token = "0x40016B5")]
		Wand,
		[Token(Token = "0x40016B6")]
		Knuckles
	}
	[Token(Token = "0x20003C1")]
	public enum HandControl
	{
		[Token(Token = "0x40016B8")]
		LeftGrip,
		[Token(Token = "0x40016B9")]
		RightGrip,
		[Token(Token = "0x40016BA")]
		LeftTrigger,
		[Token(Token = "0x40016BB")]
		RightTrigger,
		[Token(Token = "0x40016BC")]
		None
	}
	[Token(Token = "0x20003C2")]
	public enum GrabButton
	{
		[Token(Token = "0x40016BE")]
		Grip,
		[Token(Token = "0x40016BF")]
		Trigger,
		[Token(Token = "0x40016C0")]
		Inherit
	}
	[Token(Token = "0x20003C3")]
	public enum HoldType
	{
		[Token(Token = "0x40016C2")]
		HoldDown,
		[Token(Token = "0x40016C3")]
		Toggle,
		[Token(Token = "0x40016C4")]
		Inherit
	}
	[Token(Token = "0x20003C4")]
	public enum XRInputSource
	{
		[Token(Token = "0x40016C6")]
		XRInput,
		[Token(Token = "0x40016C7")]
		OVRInput,
		[Token(Token = "0x40016C8")]
		SteamVR,
		[Token(Token = "0x40016C9")]
		Pico,
		[Token(Token = "0x40016CA")]
		UnityInput
	}
	[Token(Token = "0x20003C5")]
	public enum SDKProvider
	{
		[Token(Token = "0x40016CC")]
		Unknown,
		[Token(Token = "0x40016CD")]
		OculusSDK,
		[Token(Token = "0x40016CE")]
		OpenVR
	}
	[Token(Token = "0x20003C6")]
	public class InputBridge : MonoBehaviour
	{
		[Token(Token = "0x20003C7")]
		public delegate void InputsUpdatedAction();

		[Token(Token = "0x20003C8")]
		public delegate void ControllerFoundAction();

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD12C", Offset = "0x7CD12C")]
		private sealed class <changeOriginModeRoutine>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputBridge <>4__this;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrackingOriginModeFlags trackingOrigin;

			[Token(Token = "0x1700050E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF0")]
				[Address(RVA = "0xDB61C4", Offset = "0xDB61C4", VA = "0xDB61C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF2")]
				[Address(RVA = "0xDB620C", Offset = "0xDB620C", VA = "0xDB620C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xDB5F48", Offset = "0xDB5F48", VA = "0xDB5F48")]
			[DebuggerHidden]
			public <changeOriginModeRoutine>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xDB5F74", Offset = "0xDB5F74", VA = "0xDB5F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xDB5F78", Offset = "0xDB5F78", VA = "0xDB5F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xDB61CC", Offset = "0xDB61CC", VA = "0xDB61CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD13C", Offset = "0x7CD13C")]
		private sealed class <Vibrate>d__179 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x17000510")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF6")]
				[Address(RVA = "0xDB5EF8", Offset = "0xDB5EF8", VA = "0xDB5EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000511")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF8")]
				[Address(RVA = "0xDB5F40", Offset = "0xDB5F40", VA = "0xDB5F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xDB5E2C", Offset = "0xDB5E2C", VA = "0xDB5E2C")]
			[DebuggerHidden]
			public <Vibrate>d__179(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xDB5E58", Offset = "0xDB5E58", VA = "0xDB5E58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xDB5E5C", Offset = "0xDB5E5C", VA = "0xDB5E5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xDB5F00", Offset = "0xDB5F00", VA = "0xDB5F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputBridge _instance;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6918", Offset = "0x7D6918")]
		[SerializeField]
		public XRInputSource InputSource;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6964", Offset = "0x7D6964")]
		public InputActionAsset actionSet;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D69B0", Offset = "0x7D69B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D69B0", Offset = "0x7D69B0")]
		public TrackingOriginModeFlags TrackingOrigin;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6A20", Offset = "0x7D6A20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6A20", Offset = "0x7D6A20")]
		public float ThumbstickDeadzoneX;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6A80", Offset = "0x7D6A80")]
		public float ThumbstickDeadzoneY;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6AB8", Offset = "0x7D6AB8")]
		public float LeftGrip;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LeftGripDown;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float RightGrip;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RightGripDown;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6AF0", Offset = "0x7D6AF0")]
		public float LeftTrigger;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool LeftTriggerNear;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool LeftTriggerUp;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool LeftTriggerDown;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RightTrigger;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RightTriggerUp;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RightTriggerDown;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool RightTriggerNear;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool LeftThumbNear;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool RightThumbNear;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6B28", Offset = "0x7D6B28")]
		public bool LeftThumbstickDown;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool LeftThumbstickUp;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool RightThumbstickDown;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool RightThumbstickUp;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LeftThumbstick;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool RightThumbstick;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6B60", Offset = "0x7D6B60")]
		public bool AButton;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6B98", Offset = "0x7D6B98")]
		public bool AButtonDown;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool AButtonUp;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public bool BButton;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6BD0", Offset = "0x7D6BD0")]
		public bool BButtonDown;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool BButtonUp;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool XButton;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6C08", Offset = "0x7D6C08")]
		public bool XButtonDown;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool XButtonUp;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool YButton;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool YButtonDown;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool YButtonUp;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		public bool StartButton;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool StartButtonDown;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool BackButton;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool BackButtonDown;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6C40", Offset = "0x7D6C40")]
		public Vector2 LeftThumbstickAxis;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector2 RightThumbstickAxis;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 LeftTouchPadAxis;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 RightTouchPadAxis;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6C78", Offset = "0x7D6C78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6C78", Offset = "0x7D6C78")]
		public float LeftThumbCurl;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float LeftIndexCurl;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float LeftMiddleCurl;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float LeftRingCurl;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float LeftPinkyCurl;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6CD8", Offset = "0x7D6CD8")]
		public float RightThumbCurl;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float RightIndexCurl;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float RightMiddleCurl;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float RightRingCurl;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float RightPinkyCurl;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _downThreshold;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool SteamVRSupport;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6D10", Offset = "0x7D6D10")]
		public ControllerType ConnectedControllerType;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6D48", Offset = "0x7D6D48")]
		public bool HMDActive;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D80", Offset = "0x7D6D80")]
		private SDKProvider <LoadedSDK>k__BackingField;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D90", Offset = "0x7D6D90")]
		private bool <IsOculusDevice>k__BackingField;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DA0", Offset = "0x7D6DA0")]
		private bool <IsOculusQuest>k__BackingField;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DB0", Offset = "0x7D6DB0")]
		private bool <IsHTCDevice>k__BackingField;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DC0", Offset = "0x7D6DC0")]
		private bool <IsPicoDevice>k__BackingField;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DD0", Offset = "0x7D6DD0")]
		private bool <IsValveIndexController>k__BackingField;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6DE0", Offset = "0x7D6DE0")]
		public bool SupportsBothTouchPadAndJoystick;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6E18", Offset = "0x7D6E18")]
		public bool SupportsIndexTouch;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6E50", Offset = "0x7D6E50")]
		public bool SupportsThumbTouch;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UnityEngine.XR.InputDevice> devices;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InputAction leftGrip;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InputAction leftTrigger;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private InputAction leftTriggerNear;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private InputAction rightGrip;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private InputAction rightTrigger;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private InputAction rightTriggerNear;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private InputAction leftThumbstick;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private InputAction leftThumbstickDown;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private InputAction leftThumbNear;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private InputAction leftTouchpad;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private InputAction leftTouchpadDown;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private InputAction rightThumbstick;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private InputAction rightThumbstickDown;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private InputAction rightThumbNear;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private InputAction rightTouchpad;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private InputAction rightTouchpadDown;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputAction aButton;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private InputAction bButton;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private InputAction xButton;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private InputAction yButton;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private InputAction startButton;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private InputAction backButton;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public bool ShowInputDebugger;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private UnityEngine.XR.InputDevice primaryLeftController;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private UnityEngine.XR.InputDevice primaryRightController;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private InputFeatureUsage<Vector2> thumbstickAxis;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private InputFeatureUsage<Vector2> thumbstickAxisSecondary;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private InputFeatureUsage<bool> thumbstickAxisClick;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool setTrackingOrigin;

		[Token(Token = "0x17000506")]
		public static InputBridge Instance
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x16A2DD0", Offset = "0x16A2DD0", VA = "0x16A2DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000507")]
		public float DownThreshold
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x16A2FB4", Offset = "0x16A2FB4", VA = "0x16A2FB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000508")]
		public SDKProvider LoadedSDK
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x16A2FBC", Offset = "0x16A2FBC", VA = "0x16A2FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7128", Offset = "0x7E7128")]
			get
			{
				return default(SDKProvider);
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x16A2FC4", Offset = "0x16A2FC4", VA = "0x16A2FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7138", Offset = "0x7E7138")]
			private set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public bool IsOculusDevice
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0x16A2FCC", Offset = "0x16A2FCC", VA = "0x16A2FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7148", Offset = "0x7E7148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x16A2FD4", Offset = "0x16A2FD4", VA = "0x16A2FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7158", Offset = "0x7E7158")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public bool IsOculusQuest
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0x16A2FE0", Offset = "0x16A2FE0", VA = "0x16A2FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7168", Offset = "0x7E7168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x16A2FE8", Offset = "0x16A2FE8", VA = "0x16A2FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7178", Offset = "0x7E7178")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public bool IsHTCDevice
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x16A2FF4", Offset = "0x16A2FF4", VA = "0x16A2FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7188", Offset = "0x7E7188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x16A2FFC", Offset = "0x16A2FFC", VA = "0x16A2FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7198", Offset = "0x7E7198")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public bool IsPicoDevice
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x16A3008", Offset = "0x16A3008", VA = "0x16A3008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71A8", Offset = "0x7E71A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x16A3010", Offset = "0x16A3010", VA = "0x16A3010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71B8", Offset = "0x7E71B8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public bool IsValveIndexController
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x16A301C", Offset = "0x16A301C", VA = "0x16A301C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71C8", Offset = "0x7E71C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x16A3024", Offset = "0x16A3024", VA = "0x16A3024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71D8", Offset = "0x7E71D8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event InputsUpdatedAction OnInputsUpdated
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x16A3030", Offset = "0x16A3030", VA = "0x16A3030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71E8", Offset = "0x7E71E8")]
			add
			{
			}
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x16A3128", Offset = "0x16A3128", VA = "0x16A3128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E71F8", Offset = "0x7E71F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event ControllerFoundAction OnControllerFound
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x16A3220", Offset = "0x16A3220", VA = "0x16A3220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7208", Offset = "0x7E7208")]
			add
			{
			}
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x16A3318", Offset = "0x16A3318", VA = "0x16A3318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7218", Offset = "0x7E7218")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x16A3410", Offset = "0x16A3410", VA = "0x16A3410")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x16A3770", Offset = "0x16A3770", VA = "0x16A3770")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x16A3784", Offset = "0x16A3784", VA = "0x16A3784")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x16A3894", Offset = "0x16A3894", VA = "0x16A3894")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x16A3994", Offset = "0x16A3994", VA = "0x16A3994")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x16A39CC", Offset = "0x16A39CC", VA = "0x16A39CC", Slot = "4")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x16A3AB8", Offset = "0x16A3AB8", VA = "0x16A3AB8", Slot = "5")]
		public virtual void UpdateSteamInput()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x16A3ABC", Offset = "0x16A3ABC", VA = "0x16A3ABC", Slot = "6")]
		public virtual void UpdateXRInput()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x16A48B0", Offset = "0x16A48B0", VA = "0x16A48B0", Slot = "7")]
		public virtual void UpdateUnityInput()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x16A4CFC", Offset = "0x16A4CFC", VA = "0x16A4CFC", Slot = "8")]
		public virtual void CreateUnityInputActions()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x16A52F4", Offset = "0x16A52F4", VA = "0x16A52F4", Slot = "9")]
		public virtual void EnableActions()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x16A5720", Offset = "0x16A5720", VA = "0x16A5720", Slot = "10")]
		public virtual void DisableActions()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x16A5254", Offset = "0x16A5254", VA = "0x16A5254")]
		public InputAction CreateInputAction(string actionName, string binding, bool valueType)
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x16A5B4C", Offset = "0x16A5B4C", VA = "0x16A5B4C", Slot = "11")]
		public virtual void UpdateOVRInput()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x16A5BC4", Offset = "0x16A5BC4", VA = "0x16A5BC4", Slot = "12")]
		public virtual void UpdatePicoInput()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x16A5BC8", Offset = "0x16A5BC8", VA = "0x16A5BC8", Slot = "13")]
		public virtual void UpdateDeviceActive()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x16A47BC", Offset = "0x16A47BC", VA = "0x16A47BC")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x16A5D5C", Offset = "0x16A5D5C", VA = "0x16A5D5C")]
		public bool GetControllerBindingValue(ControllerBinding val)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x16A5EA0", Offset = "0x16A5EA0", VA = "0x16A5EA0")]
		public bool GetGrabbedControllerBinding(GrabbedControllerBinding val, ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x16A5FB0", Offset = "0x16A5FB0", VA = "0x16A5FB0")]
		public Vector2 GetInputAxisValue(InputAxis val)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x16A475C", Offset = "0x16A475C", VA = "0x16A475C")]
		private Vector2 ApplyDeadZones(Vector2 pos, float deadZoneX, float deadZoneY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x16A6008", Offset = "0x16A6008", VA = "0x16A6008")]
		private void onDeviceChanged(UnityEngine.XR.InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x16A35B8", Offset = "0x16A35B8", VA = "0x16A35B8")]
		private void setDeviceProperties()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x16A603C", Offset = "0x16A603C", VA = "0x16A603C", Slot = "14")]
		public virtual bool GetSupportsIndexTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x16A6044", Offset = "0x16A6044", VA = "0x16A6044", Slot = "15")]
		public virtual SDKProvider GetLoadedSDK()
		{
			return default(SDKProvider);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x16A60F8", Offset = "0x16A60F8", VA = "0x16A60F8", Slot = "16")]
		public virtual bool GetSupportsThumbTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x16A6100", Offset = "0x16A6100", VA = "0x16A6100", Slot = "17")]
		public virtual bool GetIsOculusDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x16A61C0", Offset = "0x16A61C0", VA = "0x16A61C0", Slot = "18")]
		public virtual bool GetIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x16A62F8", Offset = "0x16A62F8", VA = "0x16A62F8", Slot = "19")]
		public virtual bool GetIsHTCDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x16A638C", Offset = "0x16A638C", VA = "0x16A638C", Slot = "20")]
		public virtual bool GetIsPicoDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x16A5C88", Offset = "0x16A5C88", VA = "0x16A5C88")]
		public UnityEngine.XR.InputDevice GetHMD()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x16A6404", Offset = "0x16A6404", VA = "0x16A6404")]
		public string GetHMDName()
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x16A6430", Offset = "0x16A6430", VA = "0x16A6430")]
		public Vector3 GetHMDLocalPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x16A64C8", Offset = "0x16A64C8", VA = "0x16A64C8")]
		public Quaternion GetHMDLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x16A4544", Offset = "0x16A4544", VA = "0x16A4544")]
		public UnityEngine.XR.InputDevice GetLeftController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x16A4618", Offset = "0x16A4618", VA = "0x16A4618")]
		public UnityEngine.XR.InputDevice GetRightController()
		{
			return default(UnityEngine.XR.InputDevice);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x16A655C", Offset = "0x16A655C", VA = "0x16A655C")]
		public Vector3 GetControllerLocalPosition(ControllerHand handSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x16A6618", Offset = "0x16A6618", VA = "0x16A6618")]
		public Quaternion GetControllerLocalRotation(ControllerHand handSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x16A66D4", Offset = "0x16A66D4", VA = "0x16A66D4", Slot = "21")]
		public virtual ControllerType GetControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x16A6708", Offset = "0x16A6708", VA = "0x16A6708")]
		public Vector3 GetControllerVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x16A67FC", Offset = "0x16A67FC", VA = "0x16A67FC")]
		public Vector3 GetControllerAngularVelocity(ControllerHand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x16A68B0", Offset = "0x16A68B0", VA = "0x16A68B0", Slot = "22")]
		public virtual string GetControllerName()
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x16A69FC", Offset = "0x16A69FC", VA = "0x16A69FC", Slot = "23")]
		public virtual bool GetIsValveIndexController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x16A477C", Offset = "0x16A477C", VA = "0x16A477C")]
		private float getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<float> usage, bool clamp = true)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x16A46EC", Offset = "0x16A46EC", VA = "0x16A46EC")]
		private bool getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x16A4724", Offset = "0x16A4724", VA = "0x16A4724")]
		private Vector2 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector2> usage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x16A67BC", Offset = "0x16A67BC", VA = "0x16A67BC")]
		private Vector3 getFeatureUsage(UnityEngine.XR.InputDevice device, InputFeatureUsage<Vector3> usage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x16A6AF8", Offset = "0x16A6AF8", VA = "0x16A6AF8", Slot = "24")]
		public virtual void SetTrackingOriginMode(TrackingOriginModeFlags trackingOrigin)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x16A6B24", Offset = "0x16A6B24", VA = "0x16A6B24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7228", Offset = "0x7E7228")]
		private IEnumerator changeOriginModeRoutine(TrackingOriginModeFlags trackingOrigin)
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x16A6BA0", Offset = "0x16A6BA0", VA = "0x16A6BA0")]
		public void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x16A6E60", Offset = "0x16A6E60", VA = "0x16A6E60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7288", Offset = "0x7E7288")]
		private IEnumerator Vibrate(float frequency, float amplitude, float duration, ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x16A6ED4", Offset = "0x16A6ED4", VA = "0x16A6ED4")]
		public InputBridge()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class JoystickControl : MonoBehaviour
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6EB8", Offset = "0x7D6EB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6EB8", Offset = "0x7D6EB8")]
		public float DeadZone;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinDegrees;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxDegrees;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LeverPercentageX;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LeverPercentageY;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 LeverVector;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UseSmoothLook;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2Event onJoystickVectorChange;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable grab;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float angleX;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angleY;

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x16A7E44", Offset = "0x16A7E44", VA = "0x16A7E44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x16A7EBC", Offset = "0x16A7EBC", VA = "0x16A7EBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x16A8634", Offset = "0x16A8634", VA = "0x16A8634")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x16A81FC", Offset = "0x16A81FC", VA = "0x16A81FC")]
		private void doJoystickLook()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x16A8688", Offset = "0x16A8688", VA = "0x16A8688", Slot = "4")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x16A8700", Offset = "0x16A8700", VA = "0x16A8700", Slot = "5")]
		public virtual void OnJoystickChange(Vector2 joystickVector)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x16A8778", Offset = "0x16A8778", VA = "0x16A8778")]
		public JoystickControl()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class JoystickVehicleControl : MonoBehaviour
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6F18", Offset = "0x7D6F18")]
		public Grabbable JoystickGrabbable;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6F50", Offset = "0x7D6F50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6F50", Offset = "0x7D6F50")]
		public bool UseSmoothLook;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SmoothLookSpeed;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6FB0", Offset = "0x7D6FB0")]
		public Transform HingeXTransform;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MinXAngle;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxXAngle;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D6FE8", Offset = "0x7D6FE8")]
		public Transform HingeYTransform;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MinYAngle;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaxYAngle;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7020", Offset = "0x7D7020")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7020", Offset = "0x7D7020")]
		public float ReturnToCenterSpeed;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7080", Offset = "0x7D7080")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7080", Offset = "0x7D7080")]
		public float DeadZone;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2Event onJoystickVectorChange;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D70E0", Offset = "0x7D70E0")]
		public float LeverPercentageX;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float LeverPercentageY;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 LeverVector;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angleX;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float angleY;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion originalRot;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x16A87A4", Offset = "0x16A87A4", VA = "0x16A87A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x16A8CF8", Offset = "0x16A8CF8", VA = "0x16A8CF8", Slot = "4")]
		public virtual void CallJoystickEvents()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x16A8E3C", Offset = "0x16A8E3C", VA = "0x16A8E3C", Slot = "5")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x16A8EB4", Offset = "0x16A8EB4", VA = "0x16A8EB4", Slot = "6")]
		public virtual void OnJoystickChange(Vector2 joystickVector)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x16A8F2C", Offset = "0x16A8F2C", VA = "0x16A8F2C")]
		public JoystickVehicleControl()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class Lever : MonoBehaviour
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7118", Offset = "0x7D7118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7118", Offset = "0x7D7118")]
		public float MinimumXRotation;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7178", Offset = "0x7D7178")]
		public float MaximumXRotation;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D71B0", Offset = "0x7D71B0")]
		public float InitialXRotation;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D71E8", Offset = "0x7D71E8")]
		public AudioClip SwitchOnSound;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SwitchOffSound;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7220", Offset = "0x7D7220")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7220", Offset = "0x7D7220")]
		public float SwitchTolerance;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7280", Offset = "0x7D7280")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7280", Offset = "0x7D7280")]
		public bool UseSmoothLook;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D72E0", Offset = "0x7D72E0")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7318", Offset = "0x7D7318")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7318", Offset = "0x7D7318")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7378", Offset = "0x7D7378")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7378", Offset = "0x7D7378")]
		public bool ReturnToCenter;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D73D8", Offset = "0x7D73D8")]
		public float ReturnLookSpeed;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7410", Offset = "0x7D7410")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7410", Offset = "0x7D7410")]
		public bool SnapToGrabber;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7470", Offset = "0x7D7470")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7470", Offset = "0x7D7470")]
		public bool DropLeverOnActivation;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D74D0", Offset = "0x7D74D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D74D0", Offset = "0x7D74D0")]
		public float LeverPercentage;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7530", Offset = "0x7D7530")]
		public bool ShowEditorGizmos;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7568", Offset = "0x7D7568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7568", Offset = "0x7D7568")]
		public UnityEvent onLeverDown;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D75C8", Offset = "0x7D75C8")]
		public UnityEvent onLeverUp;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7600", Offset = "0x7D7600")]
		public FloatEvent onLeverChange;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grabbable grab;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rb;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audioSource;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool switchedOn;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private HingeJoint hingedJoint;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _lastLocalAngle;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion initialOffset;

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x16AC7DC", Offset = "0x16AC7DC", VA = "0x16AC7DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x16AC9A0", Offset = "0x16AC9A0", VA = "0x16AC9A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x16AC9DC", Offset = "0x16AC9DC", VA = "0x16AC9DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x16ACBFC", Offset = "0x16ACBFC", VA = "0x16ACBFC", Slot = "4")]
		public virtual float GetAnglePercentage(float currentAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x16ACDBC", Offset = "0x16ACDBC", VA = "0x16ACDBC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x16ACDC0", Offset = "0x16ACDC0", VA = "0x16ACDC0")]
		private void doLeverLook()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x16AD25C", Offset = "0x16AD25C", VA = "0x16AD25C", Slot = "5")]
		public virtual void SetLeverAngle(float angle)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x16AD2B8", Offset = "0x16AD2B8", VA = "0x16AD2B8", Slot = "6")]
		public virtual void OnLeverChange(float percentage)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x16AD328", Offset = "0x16AD328", VA = "0x16AD328", Slot = "7")]
		public virtual void OnLeverDown()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x16AD444", Offset = "0x16AD444", VA = "0x16AD444", Slot = "8")]
		public virtual void OnLeverUp()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x16AD564", Offset = "0x16AD564", VA = "0x16AD564")]
		public Lever()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class LocomotionManager : MonoBehaviour
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7638", Offset = "0x7D7638")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7638", Offset = "0x7D7638")]
		public LocomotionType DefaultLocomotion;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LocomotionType selectedLocomotion;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7698", Offset = "0x7D7698")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7698", Offset = "0x7D7698")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D76F8", Offset = "0x7D76F8")]
		public List<ControllerBinding> locomotionToggleInput;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7730", Offset = "0x7D7730")]
		public InputActionReference LocomotionToggleAction;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BNGPlayerController player;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerTeleport teleport;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool actionToggle;

		[Token(Token = "0x17000512")]
		public LocomotionType SelectedLocomotion
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x111E6D4", Offset = "0x111E6D4", VA = "0x111E6D4")]
			get
			{
				return default(LocomotionType);
			}
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x111E6DC", Offset = "0x111E6DC", VA = "0x111E6DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x111E814", Offset = "0x111E814", VA = "0x111E814")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x111E84C", Offset = "0x111E84C", VA = "0x111E84C", Slot = "4")]
		public virtual void CheckControllerToggleInput()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x111E940", Offset = "0x111E940", VA = "0x111E940")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x111EA68", Offset = "0x111EA68", VA = "0x111EA68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x111EB90", Offset = "0x111EB90", VA = "0x111EB90")]
		public void OnLocomotionToggle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x111E93C", Offset = "0x111E93C", VA = "0x111E93C")]
		public void LocomotionToggle()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x111EB9C", Offset = "0x111EB9C", VA = "0x111EB9C")]
		public void UpdateTeleportStatus()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x111E798", Offset = "0x111E798", VA = "0x111E798")]
		public void ChangeLocomotion(LocomotionType locomotionType, bool save)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x111EBC8", Offset = "0x111EBC8", VA = "0x111EBC8")]
		public void ChangeLocomotionType(LocomotionType loc)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x111ECE8", Offset = "0x111ECE8", VA = "0x111ECE8")]
		private void toggleTeleport(bool enabled)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x111ED10", Offset = "0x111ED10", VA = "0x111ED10")]
		private void toggleSmoothLocomotion(bool enabled)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x111EDB0", Offset = "0x111EDB0", VA = "0x111EDB0")]
		public void ToggleLocomotionType()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x111EDCC", Offset = "0x111EDCC", VA = "0x111EDCC")]
		public LocomotionManager()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class PlayerClimbing : MonoBehaviour
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7768", Offset = "0x7D7768")]
		public Transform LeftControllerTransform;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RightControllerTransform;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D77A0", Offset = "0x7D77A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D77A0", Offset = "0x7D77A0")]
		public float ClimbingCapsuleHeight;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7800", Offset = "0x7D7800")]
		public float ClimbingCapsuleCenter;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7838", Offset = "0x7D7838")]
		public bool ApplyHapticsOnGrab;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7870", Offset = "0x7D7870")]
		public float VibrateFrequency;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D78A8", Offset = "0x7D78A8")]
		public float VibrateAmplitude;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D78E0", Offset = "0x7D78E0")]
		public float VibrateDuration;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Grabber> climbers;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool wasGrippingClimbable;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody playerRigid;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _checkedRigidPlayer;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isRigidPlayer;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7918", Offset = "0x7D7918")]
		public bool GrippingClimbable;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 previousLeftControllerPosition;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 previousRightControllerPosition;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 controllerMoveAmount;

		[Token(Token = "0x17000513")]
		public bool IsRigidbodyPlayer
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x12F5AF4", Offset = "0x12F5AF4", VA = "0x12F5AF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x12F5BAC", Offset = "0x12F5BAC", VA = "0x12F5BAC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x12F5CAC", Offset = "0x12F5CAC", VA = "0x12F5CAC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x12F5D9C", Offset = "0x12F5D9C", VA = "0x12F5D9C", Slot = "4")]
		public virtual void AddClimber(Climbable climbable, Grabber grab)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x12F6078", Offset = "0x12F6078", VA = "0x12F6078", Slot = "5")]
		public virtual void RemoveClimber(Grabber grab)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x12F615C", Offset = "0x12F615C", VA = "0x12F615C", Slot = "6")]
		public virtual bool GrippingAtLeastOneClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x12F62D0", Offset = "0x12F62D0", VA = "0x12F62D0", Slot = "7")]
		protected virtual void checkClimbing()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x12F6894", Offset = "0x12F6894", VA = "0x12F6894")]
		private void DoPhysicalClimbing()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x12F66D8", Offset = "0x12F66D8", VA = "0x12F66D8")]
		private void onGrabbedClimbable()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x12F67B4", Offset = "0x12F67B4", VA = "0x12F67B4")]
		private void onReleasedClimbable()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x12F6B4C", Offset = "0x12F6B4C", VA = "0x12F6B4C")]
		public PlayerClimbing()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class PlayerGravity : MonoBehaviour
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7950", Offset = "0x7D7950")]
		public bool GravityEnabled;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7988", Offset = "0x7D7988")]
		public Vector3 Gravity;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController characterController;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody playerRigidbody;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _movementY;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _initialGravityModifier;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _validRigidBody;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x12F6BAC", Offset = "0x12F6BAC", VA = "0x12F6BAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x12F6CA0", Offset = "0x12F6CA0", VA = "0x12F6CA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x12F6E3C", Offset = "0x12F6E3C", VA = "0x12F6E3C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x12F6B00", Offset = "0x12F6B00", VA = "0x12F6B00")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x12F6F20", Offset = "0x12F6F20", VA = "0x12F6F20")]
		public PlayerGravity()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class PlayerMovingPlatformSupport : MonoBehaviour
	{
		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D79C0", Offset = "0x7D79C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D79C0", Offset = "0x7D79C0")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected RaycastHit groundHit;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController characterController;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _initialCharacterParent;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DistanceFromGround;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MovingPlatform CurrentPlatform;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasOnPlatform;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool requiresReparent;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject _lastHitObject;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x12F6F5C", Offset = "0x12F6F5C", VA = "0x12F6F5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x12F6FF4", Offset = "0x12F6FF4", VA = "0x12F6FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x12F7000", Offset = "0x12F7000", VA = "0x12F7000")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x12F700C", Offset = "0x12F700C", VA = "0x12F700C", Slot = "4")]
		public virtual void CheckMovingPlatform()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x12F73AC", Offset = "0x12F73AC", VA = "0x12F73AC", Slot = "5")]
		public virtual void UpdateCurrentPlatform()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x12F7490", Offset = "0x12F7490", VA = "0x12F7490", Slot = "6")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x12F780C", Offset = "0x12F780C", VA = "0x12F780C")]
		public PlayerMovingPlatformSupport()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public enum RotationMechanic
	{
		[Token(Token = "0x40017A9")]
		Snap,
		[Token(Token = "0x40017AA")]
		Smooth
	}
	[Token(Token = "0x20003D3")]
	public class PlayerRotation : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		public delegate void OnBeforeRotateAction();

		[Token(Token = "0x20003D5")]
		public delegate void OnAfterRotateAction();

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7A20", Offset = "0x7D7A20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7A20", Offset = "0x7D7A20")]
		public bool AllowInput;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7A80", Offset = "0x7D7A80")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7AB8", Offset = "0x7D7AB8")]
		public InputActionReference RotateAction;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7AF0", Offset = "0x7D7AF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7AF0", Offset = "0x7D7AF0")]
		public RotationMechanic RotationType;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7B50", Offset = "0x7D7B50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7B50", Offset = "0x7D7B50")]
		public float SnapRotationAmount;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7BB0", Offset = "0x7D7BB0")]
		public float SnapInputAmount;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7BE8", Offset = "0x7D7BE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7BE8", Offset = "0x7D7BE8")]
		public float SmoothTurnSpeed;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7C48", Offset = "0x7D7C48")]
		public float SmoothTurnMinInput;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform transformForSnap;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float recentSnapTurnTime;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float rotationAmount;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float xAxis;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float previousXInput;

		[Token(Token = "0x14000037")]
		public static event OnBeforeRotateAction OnBeforeRotate
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x12F7814", Offset = "0x12F7814", VA = "0x12F7814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7388", Offset = "0x7E7388")]
			add
			{
			}
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0x12F78D0", Offset = "0x12F78D0", VA = "0x12F78D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7398", Offset = "0x7E7398")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public static event OnAfterRotateAction OnAfterRotate
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0x12F798C", Offset = "0x12F798C", VA = "0x12F798C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73A8", Offset = "0x7E73A8")]
			add
			{
			}
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x12F7A4C", Offset = "0x12F7A4C", VA = "0x12F7A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73B8", Offset = "0x7E73B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x12F7B0C", Offset = "0x12F7B0C", VA = "0x12F7B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x12F7B74", Offset = "0x12F7B74", VA = "0x12F7B74", Slot = "4")]
		public virtual float GetAxisInput()
		{
			return default(float);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x12F7D2C", Offset = "0x12F7D2C", VA = "0x12F7D2C", Slot = "5")]
		public virtual void DoSnapRotation(float xInput)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x12F7EE0", Offset = "0x12F7EE0", VA = "0x12F7EE0", Slot = "6")]
		public virtual bool RecentlySnapTurned()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x12F7F1C", Offset = "0x12F7F1C", VA = "0x12F7F1C", Slot = "7")]
		public virtual void DoSmoothRotation(float xInput)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x12F800C", Offset = "0x12F800C", VA = "0x12F800C")]
		public PlayerRotation()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public enum TeleportControls
	{
		[Token(Token = "0x40017BB")]
		ThumbstickRotate,
		[Token(Token = "0x40017BC")]
		ThumbstickDown,
		[Token(Token = "0x40017BD")]
		BButton,
		[Token(Token = "0x40017BE")]
		None
	}
	[Token(Token = "0x20003D7")]
	public class PlayerTeleport : MonoBehaviour
	{
		[Token(Token = "0x20003D8")]
		public delegate void OnBeforeTeleportFadeAction();

		[Token(Token = "0x20003D9")]
		public delegate void OnBeforeTeleportAction();

		[Token(Token = "0x20003DA")]
		public delegate void OnAfterTeleportAction();

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD14C", Offset = "0x7CD14C")]
		private sealed class <doTeleport>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTeleport <>4__this;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool rotatePlayer;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion playerRotation;

			[Token(Token = "0x40017FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 playerDestination;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B78")]
				[Address(RVA = "0xDBFA68", Offset = "0xDBFA68", VA = "0xDBFA68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B7A")]
				[Address(RVA = "0xDBFAB0", Offset = "0xDBFAB0", VA = "0xDBFAB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xDBF63C", Offset = "0xDBF63C", VA = "0xDBF63C")]
			[DebuggerHidden]
			public <doTeleport>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xDBF668", Offset = "0xDBF668", VA = "0xDBF668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xDBF66C", Offset = "0xDBF66C", VA = "0xDBF66C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xDBFA70", Offset = "0xDBFA70", VA = "0xDBFA70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7CA0", Offset = "0x7D7CA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7CA0", Offset = "0x7D7CA0")]
		public LineRenderer TeleportLine;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7D00", Offset = "0x7D7D00")]
		public Color ValidTeleport;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7D38", Offset = "0x7D7D38")]
		public Color InvalidTeleport;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7D70", Offset = "0x7D7D70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7D70", Offset = "0x7D7D70")]
		public ControllerHand HandSide;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7DD0", Offset = "0x7D7DD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7DD0", Offset = "0x7D7DD0")]
		public Transform TeleportBeginTransform;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7E30", Offset = "0x7D7E30")]
		public Transform TeleportBeginTransformAlt;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7E68", Offset = "0x7D7E68")]
		public Transform TeleportDestination;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7EA0", Offset = "0x7D7EA0")]
		[HideInInspector]
		public TeleportDestination DestinationObject;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7EEC", Offset = "0x7D7EEC")]
		public GameObject TeleportMarker;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7F24", Offset = "0x7D7F24")]
		public Transform DirectionIndicator;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D7F5C", Offset = "0x7D7F5C")]
		public float MaxRange;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7F94", Offset = "0x7D7F94")]
		public int SegmentCount;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D7FCC", Offset = "0x7D7FCC")]
		public float SimulationVelocity;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8004", Offset = "0x7D8004")]
		public float SegmentScale;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D803C", Offset = "0x7D803C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D803C", Offset = "0x7D803C")]
		public LayerMask CollisionLayers;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D809C", Offset = "0x7D809C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D80D4", Offset = "0x7D80D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D80D4", Offset = "0x7D80D4")]
		public TeleportControls ControlType;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8134", Offset = "0x7D8134")]
		public InputActionReference InitiateTeleportAction;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D816C", Offset = "0x7D816C")]
		public bool AllowTeleportRotation;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool _reachThumbThreshold;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D81A4", Offset = "0x7D81A4")]
		public bool ForceStraightArrow;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D81DC", Offset = "0x7D81DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D81DC", Offset = "0x7D81DC")]
		public float MaxSlope;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D823C", Offset = "0x7D823C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D823C", Offset = "0x7D823C")]
		public float TeleportYOffset;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D829C", Offset = "0x7D829C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D829C", Offset = "0x7D829C")]
		public bool FadeScreenOnTeleport;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D82FC", Offset = "0x7D82FC")]
		public float TeleportFadeSpeed;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8334", Offset = "0x7D8334")]
		public float TeleportDelay;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D836C", Offset = "0x7D836C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D836C", Offset = "0x7D836C")]
		public PhysicMaterial FrictionMaterial;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CharacterController controller;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BNGPlayerController playerController;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rigidbody playerRigid;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private InputBridge input;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform cameraRig;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ScreenFader fader;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool aimingTeleport;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		protected bool validTeleport;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		protected bool teleportationEnabled;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _invalidFrames;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _initialLineWidth;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool isMain;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public RoboRotate roboRotate;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject actualCamera;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool setVariables;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Collider _hitObject;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 _hitVector;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float _hitAngle;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RaycastHit hit;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3[] segments;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 segVelocity;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float segTime;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int segCount;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool isDestination;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector2 teleportAxis;

		[Token(Token = "0x17000514")]
		private Transform teleportTransform
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x12F82F4", Offset = "0x12F82F4", VA = "0x12F82F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000515")]
		private Vector2 handedThumbstickAxis
		{
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x12F8310", Offset = "0x12F8310", VA = "0x12F8310")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000516")]
		public bool AimingTeleport
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x12F8350", Offset = "0x12F8350", VA = "0x12F8350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000039")]
		public static event OnBeforeTeleportFadeAction OnBeforeTeleportFade
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x12F8358", Offset = "0x12F8358", VA = "0x12F8358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73C8", Offset = "0x7E73C8")]
			add
			{
			}
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x12F8414", Offset = "0x12F8414", VA = "0x12F8414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73D8", Offset = "0x7E73D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public static event OnBeforeTeleportAction OnBeforeTeleport
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x12F84D0", Offset = "0x12F84D0", VA = "0x12F84D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73E8", Offset = "0x7E73E8")]
			add
			{
			}
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x12F8590", Offset = "0x12F8590", VA = "0x12F8590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E73F8", Offset = "0x7E73F8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public static event OnAfterTeleportAction OnAfterTeleport
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x12F8650", Offset = "0x12F8650", VA = "0x12F8650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7408", Offset = "0x7E7408")]
			add
			{
			}
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x12F8710", Offset = "0x12F8710", VA = "0x12F8710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7418", Offset = "0x7E7418")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x12F87D0", Offset = "0x12F87D0", VA = "0x12F87D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x12F8AA8", Offset = "0x12F8AA8", VA = "0x12F8AA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x12F87D4", Offset = "0x12F87D4", VA = "0x12F87D4")]
		private void setupVariables()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x12F8BA4", Offset = "0x12F8BA4", VA = "0x12F8BA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x12F8C40", Offset = "0x12F8C40", VA = "0x12F8C40")]
		public void DoCheckTeleport()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x12F8D34", Offset = "0x12F8D34", VA = "0x12F8D34")]
		public void TryOrHideTeleport()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x12F8D50", Offset = "0x12F8D50", VA = "0x12F8D50")]
		public void EnableTeleportation()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x12F8D5C", Offset = "0x12F8D5C", VA = "0x12F8D5C")]
		public void DisableTeleportation()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x12F8D70", Offset = "0x12F8D70", VA = "0x12F8D70", Slot = "4")]
		protected virtual void calculateParabola()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x12F95D0", Offset = "0x12F95D0", VA = "0x12F95D0", Slot = "5")]
		protected virtual bool teleportClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x12F9848", Offset = "0x12F9848", VA = "0x12F9848", Slot = "6")]
		protected virtual void hideTeleport()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x12F98AC", Offset = "0x12F98AC", VA = "0x12F98AC", Slot = "7")]
		protected virtual void updateTeleport()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x12F9908", Offset = "0x12F9908", VA = "0x12F9908", Slot = "8")]
		protected virtual void rotateMarker()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x12F9BA8", Offset = "0x12F9BA8", VA = "0x12F9BA8", Slot = "9")]
		protected virtual void tryTeleport()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x12F9E64", Offset = "0x12F9E64", VA = "0x12F9E64", Slot = "10")]
		public virtual void BeforeTeleportFade()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x12F9F38", Offset = "0x12F9F38", VA = "0x12F9F38", Slot = "11")]
		public virtual void BeforeTeleport()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x12FA00C", Offset = "0x12FA00C", VA = "0x12FA00C", Slot = "12")]
		public virtual void AfterTeleport()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x12F9D98", Offset = "0x12F9D98", VA = "0x12F9D98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7428", Offset = "0x7E7428")]
		private IEnumerator doTeleport(Vector3 playerDestination, Quaternion playerRotation, bool rotatePlayer)
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x12FA11C", Offset = "0x12FA11C", VA = "0x12FA11C")]
		public void TeleportPlayer(Vector3 destination, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x12FA14C", Offset = "0x12FA14C", VA = "0x12FA14C")]
		public void TeleportPlayerToTransform(Transform destination)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x12FA1EC", Offset = "0x12FA1EC", VA = "0x12FA1EC", Slot = "13")]
		public virtual bool KeyDownForTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x12FA510", Offset = "0x12FA510", VA = "0x12FA510", Slot = "14")]
		public virtual bool KeyUpFromTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x12FA614", Offset = "0x12FA614", VA = "0x12FA614")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x12FA728", Offset = "0x12FA728", VA = "0x12FA728")]
		public PlayerTeleport()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class PointerEvents : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D83FC", Offset = "0x7D83FC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D83FC", Offset = "0x7D83FC")]
		public float MaxDistance;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D845C", Offset = "0x7D845C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D845C", Offset = "0x7D845C")]
		public bool Enabled;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D84BC", Offset = "0x7D84BC")]
		public PointerEventDataEvent OnPointerClickEvent;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PointerEventDataEvent OnPointerEnterEvent;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PointerEventDataEvent OnPointerExitEvent;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerEventDataEvent OnPointerDownEvent;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PointerEventDataEvent OnPointerUpEvent;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x12FCA0C", Offset = "0x12FCA0C", VA = "0x12FCA0C", Slot = "9")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x12FCA98", Offset = "0x12FCA98", VA = "0x12FCA98", Slot = "10")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x12FCB24", Offset = "0x12FCB24", VA = "0x12FCB24", Slot = "11")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x12FCB94", Offset = "0x12FCB94", VA = "0x12FCB94", Slot = "12")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x12FCC20", Offset = "0x12FCC20", VA = "0x12FCC20", Slot = "13")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x12FCC90", Offset = "0x12FCC90", VA = "0x12FCC90", Slot = "14")]
		public virtual bool DistanceExceeded(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x12FCCB0", Offset = "0x12FCCB0", VA = "0x12FCCB0")]
		public PointerEvents()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public enum RemoteGrabType
	{
		[Token(Token = "0x4001804")]
		Trigger,
		[Token(Token = "0x4001805")]
		Raycast,
		[Token(Token = "0x4001806")]
		Spherecast
	}
	[Token(Token = "0x20003DE")]
	public class RemoteGrabber : MonoBehaviour
	{
		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RemoteGrabType PhysicsCheckType;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D84F4", Offset = "0x7D84F4")]
		public bool TriggerRequiresRaycast;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RaycastLength;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SphereCastLength;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float SphereCastRadius;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask RemoteGrabLayers;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbablesInTrigger ParentGrabber;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider _lastColliderHit;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ShowGizmos;

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1302B64", Offset = "0x1302B64", VA = "0x1302B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1302CB0", Offset = "0x1302CB0", VA = "0x1302CB0", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1302EB4", Offset = "0x1302EB4", VA = "0x1302EB4")]
		private void ObjectHit(Collider colliderHit)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1303034", Offset = "0x1303034", VA = "0x1303034")]
		public void RemovePreviousHitObject()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x130315C", Offset = "0x130315C", VA = "0x130315C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1303364", Offset = "0x1303364", VA = "0x1303364")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x130354C", Offset = "0x130354C", VA = "0x130354C")]
		public RemoteGrabber()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class Slider : MonoBehaviour
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _slidePercentage;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x17000519")]
		public float SlidePercentage
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x127AE64", Offset = "0x127AE64", VA = "0x127AE64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x127AE6C", Offset = "0x127AE6C", VA = "0x127AE6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x127AF78", Offset = "0x127AF78", VA = "0x127AF78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x127B004", Offset = "0x127B004", VA = "0x127B004", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x127B074", Offset = "0x127B074", VA = "0x127B074")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public enum MovementVector
	{
		[Token(Token = "0x4001817")]
		HMD,
		[Token(Token = "0x4001818")]
		Controller
	}
	[Token(Token = "0x20003E1")]
	public class SmoothLocomotion : MonoBehaviour
	{
		[Token(Token = "0x20003E2")]
		public delegate void OnBeforeMoveAction();

		[Token(Token = "0x20003E3")]
		public delegate void OnAfterMoveAction();

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerControllerType ControllerType;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D852C", Offset = "0x7D852C")]
		public float MovementSpeed;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8564", Offset = "0x7D8564")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8564", Offset = "0x7D8564")]
		public float MovementForce;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D85C4", Offset = "0x7D85C4")]
		public float MaxHorizontalVelocity;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D85FC", Offset = "0x7D85FC")]
		public float MaxVerticalVelocity;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8634", Offset = "0x7D8634")]
		public float StepHeight;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D866C", Offset = "0x7D866C")]
		public float MaxSlopeAngle;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D86A4", Offset = "0x7D86A4")]
		public PhysicMaterial MovementMaterial;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D86DC", Offset = "0x7D86DC")]
		public PhysicMaterial FrictionMaterial;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8714", Offset = "0x7D8714")]
		public float MovementDrag;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D874C", Offset = "0x7D874C")]
		public float StaticDrag;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8784", Offset = "0x7D8784")]
		public float AirDrag;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D87BC", Offset = "0x7D87BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D87BC", Offset = "0x7D87BC")]
		public Transform ForwardDirection;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D881C", Offset = "0x7D881C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D881C", Offset = "0x7D881C")]
		public bool AllowInput;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D887C", Offset = "0x7D887C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D887C", Offset = "0x7D887C")]
		public bool UpdateMovement;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D88DC", Offset = "0x7D88DC")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8914", Offset = "0x7D8914")]
		public InputActionReference MoveAction;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D894C", Offset = "0x7D894C")]
		public bool RequireAppFocus;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8984", Offset = "0x7D8984")]
		public float SprintSpeed;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D89BC", Offset = "0x7D89BC")]
		public List<ControllerBinding> SprintInput;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D89F4", Offset = "0x7D89F4")]
		public InputActionReference SprintAction;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8A2C", Offset = "0x7D8A2C")]
		public float StrafeSpeed;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float StrafeSprintSpeed;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8A64", Offset = "0x7D8A64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8A64", Offset = "0x7D8A64")]
		public float JumpForce;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8AC4", Offset = "0x7D8AC4")]
		public List<ControllerBinding> JumpInput;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8AFC", Offset = "0x7D8AFC")]
		public InputActionReference JumpAction;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8B34", Offset = "0x7D8B34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8B34", Offset = "0x7D8B34")]
		public bool AirControl;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8B94", Offset = "0x7D8B94")]
		public float AirControlSpeed;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CharacterController characterController;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody playerRigid;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SphereCollider playerSphere;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float movementX;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float movementY;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float movementZ;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _verticalSpeed;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 additionalMovement;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool playerInitialized;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float lastJumpTime;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float lastMoveTime;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float Magnitude;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8BEC", Offset = "0x7D8BEC")]
		public int GroundContacts;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float SurfaceAngle;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float SurfaceHeight;

		[Token(Token = "0x1400003C")]
		public static event OnBeforeMoveAction OnBeforeMove
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x127F638", Offset = "0x127F638", VA = "0x127F638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E74D8", Offset = "0x7E74D8")]
			add
			{
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x127F6F4", Offset = "0x127F6F4", VA = "0x127F6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E74E8", Offset = "0x7E74E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event OnAfterMoveAction OnAfterMove
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x127F7B0", Offset = "0x127F7B0", VA = "0x127F7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E74F8", Offset = "0x7E74F8")]
			add
			{
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x127F870", Offset = "0x127F870", VA = "0x127F870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7508", Offset = "0x7E7508")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x127F930", Offset = "0x127F930", VA = "0x127F930", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x127F988", Offset = "0x127F988", VA = "0x127F988", Slot = "5")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x127F9CC", Offset = "0x127F9CC", VA = "0x127F9CC", Slot = "6")]
		public virtual void CheckControllerReferences()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x127FB9C", Offset = "0x127FB9C", VA = "0x127FB9C", Slot = "7")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x127FCB4", Offset = "0x127FCB4", VA = "0x127FCB4", Slot = "8")]
		public virtual void DoRigidBodyJump()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x127FD4C", Offset = "0x127FD4C", VA = "0x127FD4C", Slot = "9")]
		public virtual Vector2 GetMovementAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1280068", Offset = "0x1280068", VA = "0x1280068", Slot = "10")]
		public virtual void MoveCharacter()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x128025C", Offset = "0x128025C", VA = "0x128025C", Slot = "11")]
		public virtual void MoveRigidCharacter(Vector3 moveTo)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1280260", Offset = "0x1280260", VA = "0x1280260", Slot = "12")]
		public virtual void MoveRigidCharacter()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1280690", Offset = "0x1280690", VA = "0x1280690", Slot = "13")]
		public virtual void MoveCharacter(Vector3 motion)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x12808CC", Offset = "0x12808CC", VA = "0x12808CC", Slot = "14")]
		public virtual bool CheckJump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1280A64", Offset = "0x1280A64", VA = "0x1280A64", Slot = "15")]
		public virtual bool CheckSprint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1280BEC", Offset = "0x1280BEC", VA = "0x1280BEC", Slot = "16")]
		public virtual bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1280C8C", Offset = "0x1280C8C", VA = "0x1280C8C", Slot = "17")]
		public virtual void SetupCharacterController()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1280E40", Offset = "0x1280E40", VA = "0x1280E40", Slot = "18")]
		public virtual void SetupRigidbodyPlayer()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x12810C8", Offset = "0x12810C8", VA = "0x12810C8", Slot = "19")]
		public virtual void EnableMovement()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x12810D4", Offset = "0x12810D4", VA = "0x12810D4", Slot = "20")]
		public virtual void DisableMovement()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x12810DC", Offset = "0x12810DC", VA = "0x12810DC")]
		private void OnCollisionStay(Collision collisionInfo)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1281330", Offset = "0x1281330", VA = "0x1281330")]
		public SmoothLocomotion()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public enum PlayerControllerType
	{
		[Token(Token = "0x4001848")]
		CharacterController,
		[Token(Token = "0x4001849")]
		Rigidbody
	}
	[Token(Token = "0x20003E5")]
	public class SnapZone : MonoBehaviour
	{
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8C24", Offset = "0x7D8C24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8C24", Offset = "0x7D8C24")]
		public Grabbable HeldItem;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8C84", Offset = "0x7D8C84")]
		public Grabbable StartingItem;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8CBC", Offset = "0x7D8CBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8CBC", Offset = "0x7D8CBC")]
		public bool CanDropItem;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8D1C", Offset = "0x7D8D1C")]
		public bool CanSwapItem;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8D54", Offset = "0x7D8D54")]
		public bool CanRemoveItem;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8D8C", Offset = "0x7D8D8C")]
		public float ScaleItem;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _scaleTo;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool DisableColliders;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> disabledColliders;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8DC4", Offset = "0x7D8DC4")]
		public bool DuplicateItemOnGrab;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8DFC", Offset = "0x7D8DFC")]
		public float MaxDropTime;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float LastSnapTime;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8E44", Offset = "0x7D8E44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8E44", Offset = "0x7D8E44")]
		public List<string> OnlyAllowNames;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8EA4", Offset = "0x7D8EA4")]
		public List<string> ExcludeTransformNames;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8EDC", Offset = "0x7D8EDC")]
		public AudioClip SoundOnSnap;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip SoundOnUnsnap;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8F14", Offset = "0x7D8F14")]
		public GrabbableEvent OnSnapEvent;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrabbableEvent OnDetachEvent;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GrabbablesInTrigger gZone;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody heldItemRigid;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool heldItemWasKinematic;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Grabbable trackedItem;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SnapZoneOffset offset;

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x1281F40", Offset = "0x1281F40", VA = "0x1281F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x12820C0", Offset = "0x12820C0", VA = "0x12820C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x128247C", Offset = "0x128247C", VA = "0x128247C")]
		private Grabbable getClosestGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1282A68", Offset = "0x1282A68", VA = "0x1282A68", Slot = "4")]
		public virtual void GrabGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x128295C", Offset = "0x128295C", VA = "0x128295C")]
		private void disableGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x1282FC8", Offset = "0x1282FC8", VA = "0x1282FC8", Slot = "5")]
		public virtual void GrabEquipped(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x12832C0", Offset = "0x12832C0", VA = "0x12832C0", Slot = "6")]
		public virtual bool CanBeRemoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1283328", Offset = "0x1283328", VA = "0x1283328", Slot = "7")]
		public virtual void ReleaseAll()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1283710", Offset = "0x1283710", VA = "0x1283710")]
		public SnapZone()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class SnapZoneOffset : MonoBehaviour
	{
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPositionOffset;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 LocalRotationOffset;

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x12837B0", Offset = "0x12837B0", VA = "0x12837B0")]
		public SnapZoneOffset()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class SnapZoneScale : MonoBehaviour
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8F5C", Offset = "0x7D8F5C")]
		public float Scale;

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1283A7C", Offset = "0x1283A7C", VA = "0x1283A7C")]
		public SnapZoneScale()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class SteeringWheel : GrabbableEvents
	{
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8F94", Offset = "0x7D8F94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D8F94", Offset = "0x7D8F94")]
		public float MinAngle;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D8FF4", Offset = "0x7D8FF4")]
		public float MaxAngle;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D902C", Offset = "0x7D902C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D902C", Offset = "0x7D902C")]
		public Transform RotatorObject;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D908C", Offset = "0x7D908C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D908C", Offset = "0x7D908C")]
		public float RotationSpeed;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D90EC", Offset = "0x7D90EC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D90EC", Offset = "0x7D90EC")]
		public bool AllowTwoHanded;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D914C", Offset = "0x7D914C")]
		public bool ReturnToCenter;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ReturnToCenterSpeed;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9184", Offset = "0x7D9184")]
		public Text DebugText;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D91BC", Offset = "0x7D91BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D91BC", Offset = "0x7D91BC")]
		public FloatEvent onAngleChange;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D921C", Offset = "0x7D921C")]
		public FloatEvent onValueChange;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9254", Offset = "0x7D9254")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9254", Offset = "0x7D9254")]
		public bool ShowEditorGizmos;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 rotatePosition;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 previousPrimaryPosition;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 previousSecondaryPosition;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float targetAngle;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float previousTargetAngle;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float smoothedAngle;

		[Token(Token = "0x1700051A")]
		public float Angle
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xE7C52C", Offset = "0xE7C52C", VA = "0xE7C52C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051B")]
		public float RawAngle
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xE7C53C", Offset = "0xE7C53C", VA = "0xE7C53C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051C")]
		public float ScaleValue
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xE7C544", Offset = "0xE7C544", VA = "0xE7C544")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051D")]
		public float ScaleValueInverted
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xE7C584", Offset = "0xE7C584", VA = "0xE7C584")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051E")]
		public float AngleInverted
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xE7C59C", Offset = "0xE7C59C", VA = "0xE7C59C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051F")]
		public Grabber PrimaryGrabber
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xE7C5C0", Offset = "0xE7C5C0", VA = "0xE7C5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		public Grabber SecondaryGrabber
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xE7C67C", Offset = "0xE7C67C", VA = "0xE7C67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xE7C734", Offset = "0xE7C734", VA = "0xE7C734")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xE7C7F0", Offset = "0xE7C7F0", VA = "0xE7C7F0", Slot = "27")]
		public virtual void UpdateAngleCalculations()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xE7CB54", Offset = "0xE7CB54", VA = "0xE7CB54")]
		public float GetRelativeAngle(Vector3 position1, Vector3 position2)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xE7CBD4", Offset = "0xE7CBD4", VA = "0xE7CBD4", Slot = "28")]
		public virtual void ApplyAngleToSteeringWheel(float angle)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xE7CBFC", Offset = "0xE7CBFC", VA = "0xE7CBFC", Slot = "29")]
		public virtual void UpdatePreviewText()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xE7CD54", Offset = "0xE7CD54", VA = "0xE7CD54", Slot = "30")]
		public virtual void CallEvents()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xE7CDD8", Offset = "0xE7CDD8", VA = "0xE7CDD8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xE7CEEC", Offset = "0xE7CEEC", VA = "0xE7CEEC", Slot = "31")]
		public virtual void ReturnToCenterAngle()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xE7C5C4", Offset = "0xE7C5C4", VA = "0xE7C5C4")]
		public Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xE7C680", Offset = "0xE7C680", VA = "0xE7C680")]
		public Grabber GetSecondaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xE7CFB0", Offset = "0xE7CFB0", VA = "0xE7CFB0", Slot = "32")]
		public virtual void UpdatePreviousAngle(float angle)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xE7CFB8", Offset = "0xE7CFB8", VA = "0xE7CFB8", Slot = "33")]
		public virtual float GetScaledValue(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xE7CFD8", Offset = "0xE7CFD8", VA = "0xE7CFD8")]
		public SteeringWheel()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class TrackedDevice : MonoBehaviour
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackableDevice Device;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected UnityEngine.XR.InputDevice deviceToTrack;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 initialLocalPosition;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 currentLocalPosition;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Quaternion currentLocalRotation;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xE845F4", Offset = "0xE845F4", VA = "0xE845F4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xE84650", Offset = "0xE84650", VA = "0xE84650", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xE846C4", Offset = "0xE846C4", VA = "0xE846C4", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xE84738", Offset = "0xE84738", VA = "0xE84738", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xE8476C", Offset = "0xE8476C", VA = "0xE8476C", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xE84778", Offset = "0xE84778", VA = "0xE84778", Slot = "9")]
		public virtual void RefreshDeviceStatus()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xE84888", Offset = "0xE84888", VA = "0xE84888", Slot = "10")]
		public virtual void UpdateDevice()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xE84AAC", Offset = "0xE84AAC", VA = "0xE84AAC", Slot = "11")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xE84AB8", Offset = "0xE84AB8", VA = "0xE84AB8")]
		public TrackedDevice()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public enum TrackableDevice
	{
		[Token(Token = "0x400187D")]
		HMD,
		[Token(Token = "0x400187E")]
		LeftController,
		[Token(Token = "0x400187F")]
		RightController
	}
	[Token(Token = "0x20003EB")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD15C", Offset = "0x7CD15C")]
		private sealed class <QueueDestroy>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400188C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0xF1AD28", Offset = "0xF1AD28", VA = "0xF1AD28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE3")]
				[Address(RVA = "0xF1AD70", Offset = "0xF1AD70", VA = "0xF1AD70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xF1AB6C", Offset = "0xF1AB6C", VA = "0xF1AB6C")]
			[DebuggerHidden]
			public <QueueDestroy>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xF1AB98", Offset = "0xF1AB98", VA = "0xF1AB98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xF1AB9C", Offset = "0xF1AB9C", VA = "0xF1AB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xF1AD30", Offset = "0xF1AD30", VA = "0xF1AD30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD16C", Offset = "0x7CD16C")]
		private sealed class <ReEnableCollider>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x4001891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <waitFrames>5__2;

			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <x>5__3;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE7")]
				[Address(RVA = "0xF1AE78", Offset = "0xF1AE78", VA = "0xF1AE78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE9")]
				[Address(RVA = "0xF1AEC0", Offset = "0xF1AEC0", VA = "0xF1AEC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xF1AD78", Offset = "0xF1AD78", VA = "0xF1AD78")]
			[DebuggerHidden]
			public <ReEnableCollider>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xF1ADA4", Offset = "0xF1ADA4", VA = "0xF1ADA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xF1ADA8", Offset = "0xF1ADA8", VA = "0xF1ADA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xF1AE80", Offset = "0xF1AE80", VA = "0xF1AE80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Grabbable grab;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Flying;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ZVel;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider ShaftCollider;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource impactSound;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float flightTime;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float destroyTime;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine queueDestroy;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Projectile ProjectileObject;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arrowDamage;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1679094", Offset = "0x1679094", VA = "0x1679094")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x167920C", Offset = "0x167920C", VA = "0x167920C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x167942C", Offset = "0x167942C", VA = "0x167942C")]
		public void ShootArrow(Vector3 shotForce)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x167959C", Offset = "0x167959C", VA = "0x167959C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7518", Offset = "0x7E7518")]
		private IEnumerator QueueDestroy()
		{
			return null;
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1679530", Offset = "0x1679530", VA = "0x1679530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7578", Offset = "0x7E7578")]
		private IEnumerator ReEnableCollider()
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1679608", Offset = "0x1679608", VA = "0x1679608")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1679B68", Offset = "0x1679B68", VA = "0x1679B68")]
		private void tryStickArrow(Collision collision)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1679F30", Offset = "0x1679F30", VA = "0x1679F30")]
		private void playSoundInterval(float fromSeconds, float toSeconds)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x167A04C", Offset = "0x167A04C", VA = "0x167A04C")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class ArrowGrabArea : MonoBehaviour
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Bow theBow;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x110ACF0", Offset = "0x110ACF0", VA = "0x110ACF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x110AD60", Offset = "0x110AD60", VA = "0x110AD60")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x110AF2C", Offset = "0x110AF2C", VA = "0x110AF2C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x110B05C", Offset = "0x110B05C", VA = "0x110B05C")]
		public ArrowGrabArea()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class AutoGrabGrabbable : GrabbableEvents
	{
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1114DD4", Offset = "0x1114DD4", VA = "0x1114DD4", Slot = "8")]
		public override void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1114DFC", Offset = "0x1114DFC", VA = "0x1114DFC")]
		public AutoGrabGrabbable()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class Bow : GrabbableEvents
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D92B4", Offset = "0x7D92B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D92B4", Offset = "0x7D92B4")]
		public float BowForce;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9314", Offset = "0x7D9314")]
		public bool AlignBowToArrow;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D934C", Offset = "0x7D934C")]
		public Transform BowModel;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9384", Offset = "0x7D9384")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9384", Offset = "0x7D9384")]
		public Transform ArrowRest;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool CanGrabArrowFromKnock;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D93E4", Offset = "0x7D93E4")]
		public string ArrowPrefabName;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D941C", Offset = "0x7D941C")]
		public Transform ArrowRestLeftHanded;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform ArrowKnock;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9454", Offset = "0x7D9454")]
		public bool IgnoreXPosition;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool IgnoreYPosition;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AllowNegativeZ;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D948C", Offset = "0x7D948C")]
		public bool CanGrabArrow;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Grabber ClosestGrabber;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Arrow GrabbedArrow;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable arrowGrabbable;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Grabber arrowGrabber;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3 LastValidPosition;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9504", Offset = "0x7D9504")]
		public float MaxStringDistance;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float StringDistance;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D953C", Offset = "0x7D953C")]
		private float <DrawPercent>k__BackingField;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _lastDrawPercent;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _lastDrawHaptic;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _lastDrawHapticTime;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool playedDrawSound;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 initialKnockPosition;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool holdingArrow;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Grabbable bowGrabbable;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D954C", Offset = "0x7D954C")]
		public Text PercentageUI;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<DrawDefinition> drawDefs;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AudioSource audioSource;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 BowUp;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float AlignBowSpeed;

		[Token(Token = "0x17000525")]
		public float DrawPercent
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x10BD004", Offset = "0x10BD004", VA = "0x10BD004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7678", Offset = "0x7E7678")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x10BD00C", Offset = "0x10BD00C", VA = "0x10BD00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7688", Offset = "0x7E7688")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x10BD014", Offset = "0x10BD014", VA = "0x10BD014")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x10BD310", Offset = "0x10BD310", VA = "0x10BD310")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x10BDC14", Offset = "0x10BDC14", VA = "0x10BDC14")]
		private Transform getArrowRest()
		{
			return null;
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x10BDB88", Offset = "0x10BDB88", VA = "0x10BDB88")]
		private bool canGrabArrowFromKnock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x10BE168", Offset = "0x10BE168", VA = "0x10BE168")]
		private float getGrabArrowInput()
		{
			return default(float);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x10BE2C4", Offset = "0x10BE2C4", VA = "0x10BE2C4")]
		private float getGripInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x10BE280", Offset = "0x10BE280", VA = "0x10BE280")]
		private float getTriggerInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x10BDEC8", Offset = "0x10BDEC8", VA = "0x10BDEC8")]
		private void setKnockPosition()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x10BE108", Offset = "0x10BE108", VA = "0x10BE108")]
		private void checkDrawSound()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x10BD6B4", Offset = "0x10BD6B4", VA = "0x10BD6B4")]
		private void updateDrawDistance()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x10BD81C", Offset = "0x10BD81C", VA = "0x10BD81C")]
		private void checkBowHaptics()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x10BDAE0", Offset = "0x10BDAE0", VA = "0x10BDAE0")]
		private void resetStringPosition()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x10BE320", Offset = "0x10BE320", VA = "0x10BE320", Slot = "27")]
		protected virtual void alignArrow()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x10BE44C", Offset = "0x10BE44C", VA = "0x10BE44C", Slot = "28")]
		protected virtual void alignBow()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x10BE7C0", Offset = "0x10BE7C0", VA = "0x10BE7C0", Slot = "29")]
		public virtual void ResetBowAlignment()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x10BDD14", Offset = "0x10BDD14", VA = "0x10BDD14")]
		public void GrabArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x10BD994", Offset = "0x10BD994", VA = "0x10BD994")]
		public void ReleaseArrow()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x10BE88C", Offset = "0x10BE88C", VA = "0x10BE88C", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x10BE878", Offset = "0x10BE878", VA = "0x10BE878")]
		private void resetArrowValues()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x10BE8BC", Offset = "0x10BE8BC", VA = "0x10BE8BC")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x10BE308", Offset = "0x10BE308", VA = "0x10BE308")]
		private void playBowDraw()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x10BE85C", Offset = "0x10BE85C", VA = "0x10BE85C")]
		private void playBowRelease()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x10BE9FC", Offset = "0x10BE9FC", VA = "0x10BE9FC")]
		public Bow()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x10BEA8C", Offset = "0x10BEA8C", VA = "0x10BEA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7698", Offset = "0x7E7698")]
		private bool <checkBowHaptics>b__43_0(DrawDefinition x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F1")]
	public class DrawDefinition
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D9584", Offset = "0x7D9584")]
		private float <DrawPercentage>k__BackingField;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D9594", Offset = "0x7D9594")]
		private float <HapticAmplitude>k__BackingField;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D95A4", Offset = "0x7D95A4")]
		private float <HapticFrequency>k__BackingField;

		[Token(Token = "0x17000526")]
		public float DrawPercentage
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x10643C4", Offset = "0x10643C4", VA = "0x10643C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76A8", Offset = "0x7E76A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x10643CC", Offset = "0x10643CC", VA = "0x10643CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76B8", Offset = "0x7E76B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public float HapticAmplitude
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x10643D4", Offset = "0x10643D4", VA = "0x10643D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76C8", Offset = "0x7E76C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x10643DC", Offset = "0x10643DC", VA = "0x10643DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76D8", Offset = "0x7E76D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public float HapticFrequency
		{
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x10643E4", Offset = "0x10643E4", VA = "0x10643E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76E8", Offset = "0x7E76E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x10643EC", Offset = "0x10643EC", VA = "0x10643EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E76F8", Offset = "0x7E76F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x10643F4", Offset = "0x10643F4", VA = "0x10643F4")]
		public DrawDefinition()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class BowArm : MonoBehaviour
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bow BowItem;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BowPercentStart;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotateDegrees;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _startRotation;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _endRotation;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool RotateX;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool RotateZ;

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x10BEAC4", Offset = "0x10BEAC4", VA = "0x10BEAC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x10BEBEC", Offset = "0x10BEBEC", VA = "0x10BEBEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x10BED28", Offset = "0x10BED28", VA = "0x10BED28")]
		public BowArm()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class BulletHole : MonoBehaviour
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BulletHoleDecal;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxScale;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinScale;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomYRotation;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyTime;

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x10BF0BC", Offset = "0x10BF0BC", VA = "0x10BF0BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x10BF268", Offset = "0x10BF268", VA = "0x10BF268")]
		public void TryAttachTo(Collider col)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x10BF3D0", Offset = "0x10BF3D0", VA = "0x10BF3D0")]
		private bool transformIsEqualScale(Transform theTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x10BF44C", Offset = "0x10BF44C", VA = "0x10BF44C")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x10BF4E4", Offset = "0x10BF4E4", VA = "0x10BF4E4")]
		public BulletHole()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class CalibratePlayerHeight : MonoBehaviour
	{
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD17C", Offset = "0x7CD17C")]
		private sealed class <setupInitialOffset>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalibratePlayerHeight <>4__this;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C25")]
				[Address(RVA = "0xF1C00C", Offset = "0xF1C00C", VA = "0xF1C00C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C27")]
				[Address(RVA = "0xF1C054", Offset = "0xF1C054", VA = "0xF1C054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xF1BF20", Offset = "0xF1BF20", VA = "0xF1BF20")]
			[DebuggerHidden]
			public <setupInitialOffset>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xF1BF4C", Offset = "0xF1BF4C", VA = "0xF1BF4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xF1BF50", Offset = "0xF1BF50", VA = "0xF1BF50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xF1C014", Offset = "0xF1C014", VA = "0xF1C014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D95B4", Offset = "0x7D95B4")]
		public float DesiredPlayerHeight;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D95EC", Offset = "0x7D95EC")]
		public BNGPlayerController PlayerController;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9624", Offset = "0x7D9624")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9624", Offset = "0x7D9624")]
		public bool CalibrateOnStart;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9684", Offset = "0x7D9684")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9684", Offset = "0x7D9684")]
		public InputAction CalibrateHeightAction;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _initialOffset;

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x10C19F8", Offset = "0x10C19F8", VA = "0x10C19F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x10C1BB4", Offset = "0x10C1BB4", VA = "0x10C1BB4")]
		public void CalibrateHeight()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x10C1BBC", Offset = "0x10C1BBC", VA = "0x10C1BBC")]
		public void CalibrateHeight(float calibrateHeight)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x10C1C84", Offset = "0x10C1C84", VA = "0x10C1C84")]
		public void ResetPlayerHeight()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x10C1BFC", Offset = "0x10C1BFC", VA = "0x10C1BFC")]
		public float GetCurrentPlayerHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x10C1CA4", Offset = "0x10C1CA4", VA = "0x10C1CA4", Slot = "4")]
		public virtual void SetInitialOffset()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x10C1B48", Offset = "0x10C1B48", VA = "0x10C1B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7708", Offset = "0x7E7708")]
		private IEnumerator setupInitialOffset()
		{
			return null;
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x10C1D28", Offset = "0x10C1D28", VA = "0x10C1D28")]
		public CalibratePlayerHeight()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x10C1D44", Offset = "0x10C1D44", VA = "0x10C1D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7768", Offset = "0x7E7768")]
		private void <Start>b__5_0(InputAction.CallbackContext context)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class CustomCenterOfMass : MonoBehaviour
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D96E4", Offset = "0x7D96E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D96E4", Offset = "0x7D96E4")]
		public Vector3 CenterOfMass;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9744", Offset = "0x7D9744")]
		public Transform CenterOfMassTransform;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D977C", Offset = "0x7D977C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D977C", Offset = "0x7D977C")]
		public bool ShowGizmo;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x10576DC", Offset = "0x10576DC", VA = "0x10576DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x105774C", Offset = "0x105774C", VA = "0x105774C", Slot = "4")]
		public virtual void SetCenterOfMass(Vector3 center)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1057808", Offset = "0x1057808", VA = "0x1057808", Slot = "5")]
		protected virtual Vector3 getThisCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x105789C", Offset = "0x105789C", VA = "0x105789C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x10579D4", Offset = "0x10579D4", VA = "0x10579D4")]
		public CustomCenterOfMass()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class DrawerSound : MonoBehaviour
	{
		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DrawerOpenSound;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DrawerOpenValue;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip DrawerCloseSound;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DrawerCloseValue;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool playedOpenSound;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool playedCloseSound;

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x10647B4", Offset = "0x10647B4", VA = "0x10647B4")]
		public void OnDrawerUpdate(float drawerValue)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1064960", Offset = "0x1064960", VA = "0x1064960")]
		public DrawerSound()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class Explosive : MonoBehaviour
	{
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD18C", Offset = "0x7CD18C")]
		private sealed class <explosionRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Explosive <>4__this;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C37")]
				[Address(RVA = "0xF20384", Offset = "0xF20384", VA = "0xF20384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C39")]
				[Address(RVA = "0xF203CC", Offset = "0xF203CC", VA = "0xF203CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xF1FF2C", Offset = "0xF1FF2C", VA = "0xF1FF2C")]
			[DebuggerHidden]
			public <explosionRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xF1FF58", Offset = "0xF1FF58", VA = "0xF1FF58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xF1FF5C", Offset = "0xF1FF5C", VA = "0xF1FF5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xF2038C", Offset = "0xF2038C", VA = "0xF2038C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD19C", Offset = "0x7CD19C")]
		private sealed class <dealDelayedDamaged>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable damageable;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Explosive <>4__this;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3D")]
				[Address(RVA = "0xF1FEDC", Offset = "0xF1FEDC", VA = "0xF1FEDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3F")]
				[Address(RVA = "0xF1FF24", Offset = "0xF1FF24", VA = "0xF1FF24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xF1FDEC", Offset = "0xF1FDEC", VA = "0xF1FDEC")]
			[DebuggerHidden]
			public <dealDelayedDamaged>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xF1FE18", Offset = "0xF1FE18", VA = "0xF1FE18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xF1FE1C", Offset = "0xF1FE1C", VA = "0xF1FE1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xF1FEE4", Offset = "0xF1FEE4", VA = "0xF1FEE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D97DC", Offset = "0x7D97DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D97DC", Offset = "0x7D97DC")]
		public float ExplosionRadius;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D983C", Offset = "0x7D983C")]
		public float ExplosionDamage;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9874", Offset = "0x7D9874")]
		public float ExplosionForce;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D98AC", Offset = "0x7D98AC")]
		public float ExplosiveUpwardsModifier;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D98E4", Offset = "0x7D98E4")]
		public bool ShowExplosionRadius;

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1067550", Offset = "0x1067550", VA = "0x1067550", Slot = "4")]
		public virtual void DoExplosion()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x106757C", Offset = "0x106757C", VA = "0x106757C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E77C8", Offset = "0x7E77C8")]
		private IEnumerator explosionRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x10675E8", Offset = "0x10675E8", VA = "0x10675E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7828", Offset = "0x7E7828")]
		private IEnumerator dealDelayedDamaged(Damageable damageable, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x1067670", Offset = "0x1067670", VA = "0x1067670")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x10676D4", Offset = "0x10676D4", VA = "0x10676D4")]
		public Explosive()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x10676F0", Offset = "0x10676F0", VA = "0x10676F0")]
		public static bool GetDown(this ControllerBinding binding)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FC")]
	public class FPSText : MonoBehaviour
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deltaTime;

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x106798C", Offset = "0x106798C", VA = "0x106798C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x10679E0", Offset = "0x10679E0", VA = "0x10679E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1067AD4", Offset = "0x1067AD4", VA = "0x1067AD4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1067BA4", Offset = "0x1067BA4", VA = "0x1067BA4")]
		public FPSText()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class Flashlight : GrabbableEvents
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light SpotLight;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LightSwitch;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalSwitchPosition;

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1452BDC", Offset = "0x1452BDC", VA = "0x1452BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1452C20", Offset = "0x1452C20", VA = "0x1452C20", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1452C94", Offset = "0x1452C94", VA = "0x1452C94", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1452CE8", Offset = "0x1452CE8", VA = "0x1452CE8")]
		public Flashlight()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class GrappleShot : GrabbableEvents
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D991C", Offset = "0x7D991C")]
		public float MaxRange;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9954", Offset = "0x7D9954")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9954", Offset = "0x7D9954")]
		public float GrappleReelForce;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D99B4", Offset = "0x7D99B4")]
		public float MinReelDistance;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D99EC", Offset = "0x7D99EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D99EC", Offset = "0x7D99EC")]
		public float GrappleForce;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9A4C", Offset = "0x7D9A4C")]
		public ForceMode GrappleForceMode;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9A84", Offset = "0x7D9A84")]
		public LayerMask GrappleLayers;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9ABC", Offset = "0x7D9ABC")]
		public Transform MuzzleTransform;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HitTargetPrefab;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer GrappleLine;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LineRenderer HelperLine;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip GrappleShotSound;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool grappling;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool wasGrappling;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CharacterController characterController;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerClimbing playerClimbing;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody playerRigid;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AudioSource audioSource;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9AF4", Offset = "0x7D9AF4")]
		public float currentGrappleDistance;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool validTargetFound;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool isDynamic;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody grappleTargetRigid;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider grappleTargetCollider;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform grappleTargetParent;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool requireRelease;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool climbing;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Climbable ClimbHelper;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x17498CC", Offset = "0x17498CC", VA = "0x17498CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1749A90", Offset = "0x1749A90", VA = "0x1749A90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x174A17C", Offset = "0x174A17C", VA = "0x174A17C", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x174A204", Offset = "0x174A204", VA = "0x174A204")]
		private void updateGrappleDistance()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x174A9C8", Offset = "0x174A9C8", VA = "0x174A9C8", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x174A9D0", Offset = "0x174A9D0", VA = "0x174A9D0", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x174A834", Offset = "0x174A834", VA = "0x174A834")]
		private void onReleaseGrapple()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1749B18", Offset = "0x1749B18", VA = "0x1749B18")]
		private void drawGrappleHelper()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x174A034", Offset = "0x174A034", VA = "0x174A034")]
		private void drawGrappleLine()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x174A0C0", Offset = "0x174A0C0", VA = "0x174A0C0")]
		private void hideGrappleLine()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x174AA74", Offset = "0x174AA74", VA = "0x174AA74")]
		private void showGrappleHelper(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1749F00", Offset = "0x1749F00", VA = "0x1749F00")]
		private void hideGrappleHelper()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x174A294", Offset = "0x174A294", VA = "0x174A294")]
		private void reelInGrapple(float triggerValue)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x174A734", Offset = "0x174A734", VA = "0x174A734")]
		private void shootGrapple()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x174AC1C", Offset = "0x174AC1C", VA = "0x174AC1C")]
		private void dropGrapple()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x174A9D4", Offset = "0x174A9D4", VA = "0x174A9D4")]
		private void changeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x174AC28", Offset = "0x174AC28", VA = "0x174AC28")]
		public GrappleShot()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class HandJet : GrabbableEvents
	{
		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9B2C", Offset = "0x7D9B2C")]
		public float JetForce;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9B64", Offset = "0x7D9B64")]
		public ParticleSystem JetFX;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9B9C", Offset = "0x7D9B9C")]
		public bool DisableGravityWhileHeld;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterController characterController;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerGravity playerGravity;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody playerRigid;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 moveDirection;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 addRigidForce;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x12ECB2C", Offset = "0x12ECB2C", VA = "0x12ECB2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x12ECCCC", Offset = "0x12ECCCC", VA = "0x12ECCCC", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x12ED0F4", Offset = "0x12ED0F4", VA = "0x12ED0F4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x12ED224", Offset = "0x12ED224", VA = "0x12ED224", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x12ED238", Offset = "0x12ED238", VA = "0x12ED238")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x12ED2D8", Offset = "0x12ED2D8", VA = "0x12ED2D8", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x12ECD1C", Offset = "0x12ECD1C", VA = "0x12ECD1C")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x12ED010", Offset = "0x12ED010", VA = "0x12ED010")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x12ED314", Offset = "0x12ED314", VA = "0x12ED314", Slot = "18")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x12ED33C", Offset = "0x12ED33C", VA = "0x12ED33C")]
		public HandJet()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class HandModelSwitcher : MonoBehaviour
	{
		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int HandModelId;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandModelSelector hms;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x12EDB10", Offset = "0x12EDB10", VA = "0x12EDB10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x12EDC54", Offset = "0x12EDC54", VA = "0x12EDC54")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x12EDD2C", Offset = "0x12EDD2C", VA = "0x12EDD2C")]
		public HandModelSwitcher()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class IKDummy : MonoBehaviour
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ThisEyeBone;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform PlayerTransform;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HeadFollow;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightHandFollow;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandFollow;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 HandRotationOffset;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator animator;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform headBone;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform leftHandDummy;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightHandDummy;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform leftHandOnPlayer;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform rightHandOnPlayer;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lookatDummy;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 localPos;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion localRot;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform cam;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 leftHandLocalPos;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 rightHandLocalPos;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion leftHandLocalRot;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion rightHandLocalRot;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 LeftHandsOffset;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 RightHandsOffset;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x16A0A64", Offset = "0x16A0A64", VA = "0x16A0A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x16A0CC4", Offset = "0x16A0CC4", VA = "0x16A0CC4")]
		public Transform SetParentAndLocalPosRot(string transformName, Transform parentToSet)
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x16A0D80", Offset = "0x16A0D80", VA = "0x16A0D80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x16A105C", Offset = "0x16A105C", VA = "0x16A105C")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x16A1304", Offset = "0x16A1304", VA = "0x16A1304")]
		public IKDummy()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRange;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LaserEnd;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Active;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x16ABC08", Offset = "0x16ABC08", VA = "0x16ABC08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x16ABC5C", Offset = "0x16ABC5C", VA = "0x16ABC5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x16ABF6C", Offset = "0x16ABF6C", VA = "0x16ABF6C")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class LaserSword : GrabbableEvents
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grabbable;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BladeTransform;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RaycastTransform;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask LaserCollision;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem CollisionParticle;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool BladeEnabled;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool SaberSwitchOn;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float LaserLength;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LaserActivateSpeed;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource CollisionAudio;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool Colliding;

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x16ABF84", Offset = "0x16ABF84", VA = "0x16ABF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x16AC038", Offset = "0x16AC038", VA = "0x16AC038")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x16AC578", Offset = "0x16AC578", VA = "0x16AC578", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x16AC214", Offset = "0x16AC214", VA = "0x16AC214")]
		private void checkCollision()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x16AC594", Offset = "0x16AC594", VA = "0x16AC594")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x16AC6C0", Offset = "0x16AC6C0", VA = "0x16AC6C0")]
		public LaserSword()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class LiquidWobble : MonoBehaviour
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPos;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 velocity;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastRot;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 angularVelocity;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxWobble;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float WobbleSpeed;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Recovery;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float wobbleAmountX;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float wobbleAmountZ;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float wobbleAmountToAddX;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float wobbleAmountToAddZ;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulse;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float time;

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x16AF0F8", Offset = "0x16AF0F8", VA = "0x16AF0F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x16AF14C", Offset = "0x16AF14C", VA = "0x16AF14C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x16AF3F0", Offset = "0x16AF3F0", VA = "0x16AF3F0")]
		public LiquidWobble()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class Marker : GrabbableEvents
	{
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1BC", Offset = "0x7CD1BC")]
		private sealed class <WriteRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Marker <>4__this;

			[Token(Token = "0x1700052F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C82")]
				[Address(RVA = "0xDB7F38", Offset = "0xDB7F38", VA = "0xDB7F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000530")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C84")]
				[Address(RVA = "0xDB7F80", Offset = "0xDB7F80", VA = "0xDB7F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xDB7C74", Offset = "0xDB7C74", VA = "0xDB7C74")]
			[DebuggerHidden]
			public <WriteRoutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xDB7CA0", Offset = "0xDB7CA0", VA = "0xDB7CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xDB7CA4", Offset = "0xDB7CA4", VA = "0xDB7CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xDB7F40", Offset = "0xDB7F40", VA = "0xDB7F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material DrawMaterial;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color DrawColor;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float LineWidth;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform RaycastStart;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask DrawingLayers;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float RaycastLength;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MinDrawDistance;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ReuseTolerance;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool IsNewDraw;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastDrawPoint;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LineRenderer LineRenderer;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform root;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTransform;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine drawRoutine;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastLineWidth;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int renderLifeTime;

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x1122E08", Offset = "0x1122E08", VA = "0x1122E08", Slot = "5")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x1122EBC", Offset = "0x1122EBC", VA = "0x1122EBC", Slot = "6")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x1122E50", Offset = "0x1122E50", VA = "0x1122E50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7938", Offset = "0x7E7938")]
		private IEnumerator WriteRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x1122EF8", Offset = "0x1122EF8", VA = "0x1122EF8")]
		private void InitDraw(Vector3 position, Quaternion rotation, float lineWidth, Color lineColor)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x1123020", Offset = "0x1123020", VA = "0x1123020")]
		private Vector3 DrawPoint(Vector3 lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor, Quaternion rotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x112352C", Offset = "0x112352C", VA = "0x112352C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x11235E8", Offset = "0x11235E8", VA = "0x11235E8")]
		public Marker()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class MoveToWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Waypoint Destination;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementSpeed;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9BD4", Offset = "0x7D9BD4")]
		public float StartDelay;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool reachedDelay;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayedTime;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 PositionDifference;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool MoveInUpdate;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MoveInFixedUpdate;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xFEF558", Offset = "0xFEF558", VA = "0xFEF558")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xFEF5BC", Offset = "0xFEF5BC", VA = "0xFEF5BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xFEF92C", Offset = "0xFEF92C", VA = "0xFEF92C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xFEF680", Offset = "0xFEF680", VA = "0xFEF680")]
		private void movePlatform(float timeDelta)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xFEF960", Offset = "0xFEF960", VA = "0xFEF960")]
		private void resetDelayStatus()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xFEF96C", Offset = "0xFEF96C", VA = "0xFEF96C")]
		public MoveToWaypoint()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9C0C", Offset = "0x7D9C0C")]
		public MovingPlatformMethod MovementMethod;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 PositionDelta;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Quaternion RotationDelta;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Quaternion previousRotation;

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xFEF98C", Offset = "0xFEF98C", VA = "0xFEF98C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xFEFA98", Offset = "0xFEFA98", VA = "0xFEFA98")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public enum MovingPlatformMethod
	{
		[Token(Token = "0x4001969")]
		ParentToPlatform,
		[Token(Token = "0x400196A")]
		PositionDifference
	}
	[Token(Token = "0x200040A")]
	public class PlayerScaler : MonoBehaviour
	{
		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> ScaleObjects;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float scaleSpeed;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x12F80C4", Offset = "0x12F80C4", VA = "0x12F80C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x12F82E0", Offset = "0x12F82E0", VA = "0x12F82E0")]
		public PlayerScaler()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class ProjectileLauncher : MonoBehaviour
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectileObject;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ProjectileForce;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LaunchSound;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem LaunchParticles;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _initialProjectileForce;

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x12FE748", Offset = "0x12FE748", VA = "0x12FE748")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x12FE754", Offset = "0x12FE754", VA = "0x12FE754")]
		public GameObject ShootProjectile(float projectileForce)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x12FEA1C", Offset = "0x12FEA1C", VA = "0x12FEA1C")]
		public void ShootProjectile()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x12FEA24", Offset = "0x12FEA24", VA = "0x12FEA24")]
		public void SetForce(float force)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x12FEA2C", Offset = "0x12FEA2C", VA = "0x12FEA2C")]
		public float GetInitialProjectileForce()
		{
			return default(float);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x12FEA34", Offset = "0x12FEA34", VA = "0x12FEA34")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1CC", Offset = "0x7CD1CC")]
		private sealed class <FadeThenLoadScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x17000531")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9B")]
				[Address(RVA = "0xCC170C", Offset = "0xCC170C", VA = "0xCC170C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9D")]
				[Address(RVA = "0xCC1754", Offset = "0xCC1754", VA = "0xCC1754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xCC1534", Offset = "0xCC1534", VA = "0xCC1534")]
			[DebuggerHidden]
			public <FadeThenLoadScene>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xCC1560", Offset = "0xCC1560", VA = "0xCC1560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xCC1564", Offset = "0xCC1564", VA = "0xCC1564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xCC1714", Offset = "0xCC1714", VA = "0xCC1714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9C64", Offset = "0x7D9C64")]
		public LoadSceneMode loadSceneMode;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9C9C", Offset = "0x7D9C9C")]
		public bool UseSceenFader;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9CD4", Offset = "0x7D9CD4")]
		public float ScreenFadeTime;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScreenFader sf;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _loadSceneName;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xDA04D4", Offset = "0xDA04D4", VA = "0xDA04D4")]
		public void LoadScene(string SceneName)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xDA0588", Offset = "0xDA0588", VA = "0xDA0588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E79E8", Offset = "0x7E79E8")]
		public IEnumerator FadeThenLoadScene()
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xDA05F4", Offset = "0xDA05F4", VA = "0xDA05F4")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class SlidingDoorMover : MonoBehaviour
	{
		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DoorSpeed;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OpenXValue;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float targetXPosition;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float smoothedPosition;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x127B088", Offset = "0x127B088", VA = "0x127B088")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x127B0F8", Offset = "0x127B0F8", VA = "0x127B0F8")]
		public void SetTargetPosition(float targetValue)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x127B108", Offset = "0x127B108", VA = "0x127B108")]
		public SlidingDoorMover()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class TimeController : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1DC", Offset = "0x7CD1DC")]
		private sealed class <resumeTimeRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimeController <>4__this;

			[Token(Token = "0x17000534")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAC")]
				[Address(RVA = "0xCC83F8", Offset = "0xCC83F8", VA = "0xCC83F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000535")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAE")]
				[Address(RVA = "0xCC8440", Offset = "0xCC8440", VA = "0xCC8440", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xCC8260", Offset = "0xCC8260", VA = "0xCC8260")]
			[DebuggerHidden]
			public <resumeTimeRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xCC828C", Offset = "0xCC828C", VA = "0xCC828C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xCC8290", Offset = "0xCC8290", VA = "0xCC8290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xCC8400", Offset = "0xCC8400", VA = "0xCC8400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9D0C", Offset = "0x7D9D0C")]
		public float SlowTimeScale;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9D44", Offset = "0x7D9D44")]
		public bool YKeySlowsTime;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9D7C", Offset = "0x7D9D7C")]
		public InputActionReference SlowTimeAction;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9DB4", Offset = "0x7D9DB4")]
		public AudioClip SlowTimeClip;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9DEC", Offset = "0x7D9DEC")]
		public AudioClip SpeedupTimeClip;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9E24", Offset = "0x7D9E24")]
		public bool SetFixedDelta;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9E5C", Offset = "0x7D9E5C")]
		public bool CheckInput;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool _slowingTime;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private bool routineRunning;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float originalFixedDelta;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource audioSource;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ForceTimeScale;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator resumeRoutine;

		[Token(Token = "0x17000533")]
		public bool TimeSlowing
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xE80E0C", Offset = "0xE80E0C", VA = "0xE80E0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xE80E14", Offset = "0xE80E14", VA = "0xE80E14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xE80ED0", Offset = "0xE80ED0", VA = "0xE80ED0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xE810F0", Offset = "0xE810F0", VA = "0xE810F0", Slot = "4")]
		public virtual bool SlowTimeInputDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xE80F2C", Offset = "0xE80F2C", VA = "0xE80F2C")]
		public void SlowTime()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xE81088", Offset = "0xE81088", VA = "0xE81088")]
		public void ResumeTime()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xE811F8", Offset = "0xE811F8", VA = "0xE811F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7A98", Offset = "0x7E7A98")]
		private IEnumerator resumeTimeRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xE81264", Offset = "0xE81264", VA = "0xE81264")]
		public TimeController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class ToggleActiveOnInputAction : MonoBehaviour
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference InputAction;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToggleObject;

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xE81280", Offset = "0xE81280", VA = "0xE81280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xE8133C", Offset = "0xE8133C", VA = "0xE8133C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xE813F8", Offset = "0xE813F8", VA = "0xE813F8")]
		public void ToggleActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xE8149C", Offset = "0xE8149C", VA = "0xE8149C")]
		public ToggleActiveOnInputAction()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class VREmulator : MonoBehaviour
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9E94", Offset = "0x7D9E94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9E94", Offset = "0x7D9E94")]
		public bool EmulatorEnabled;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9EF4", Offset = "0x7D9EF4")]
		public bool EditorOnly;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9F2C", Offset = "0x7D9F2C")]
		public bool RequireGameFocus;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9F64", Offset = "0x7D9F64")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9F64", Offset = "0x7D9F64")]
		public InputActionAsset EmulatorActionSet;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D9FD4", Offset = "0x7D9FD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D9FD4", Offset = "0x7D9FD4")]
		public bool ForceStraightTeleportRotation;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA034", Offset = "0x7DA034")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA034", Offset = "0x7DA034")]
		public bool AllowUpDownControls;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA094", Offset = "0x7DA094")]
		public InputActionReference PlayerUpAction;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA0CC", Offset = "0x7DA0CC")]
		public InputActionReference PlayerDownAction;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA104", Offset = "0x7DA104")]
		public float MinPlayerHeight;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA13C", Offset = "0x7DA13C")]
		public float MaxPlayerHeight;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA174", Offset = "0x7DA174")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA174", Offset = "0x7DA174")]
		public InputActionReference LockCameraAction;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA1D4", Offset = "0x7DA1D4")]
		public InputActionReference CameraLookAction;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA20C", Offset = "0x7DA20C")]
		public float CameraLookSensitivityX;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA244", Offset = "0x7DA244")]
		public float CameraLookSensitivityY;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA27C", Offset = "0x7DA27C")]
		public float MinimumCameraY;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA2B4", Offset = "0x7DA2B4")]
		public float MaximumCameraY;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA2EC", Offset = "0x7DA2EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA2EC", Offset = "0x7DA2EC")]
		public InputActionReference LeftGripAction;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA34C", Offset = "0x7DA34C")]
		public InputActionReference LeftTriggerAction;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA384", Offset = "0x7DA384")]
		public InputActionReference LeftThumbNearAction;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA3BC", Offset = "0x7DA3BC")]
		public InputActionReference RightGripAction;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA3F4", Offset = "0x7DA3F4")]
		public InputActionReference RightTriggerAction;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA42C", Offset = "0x7DA42C")]
		public InputActionReference RightThumbNearAction;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float mouseRotationX;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float mouseRotationY;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform mainCameraTransform;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform leftControllerTranform;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform rightControllerTranform;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform leftHandAnchor;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform rightHandAnchor;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BNGPlayerController player;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PlayerTeleport playerTeleport;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool didFirstActivate;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Grabber grabberLeft;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Grabber grabberRight;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _originalPlayerYOffset;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA464", Offset = "0x7DA464")]
		public bool HMDIsActive;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Vector3 LeftControllerPosition;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 RightControllerPosition;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool priorStraightSetting;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float prevVal;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isQuitting;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xDEE2BC", Offset = "0xDEE2BC", VA = "0xDEE2BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xDEE6C8", Offset = "0xDEE6C8", VA = "0xDEE6C8")]
		public void OnBeforeRender()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xDEE760", Offset = "0xDEE760", VA = "0xDEE760")]
		private void onFirstActivate()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xDEE790", Offset = "0xDEE790", VA = "0xDEE790")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xDEED80", Offset = "0xDEED80", VA = "0xDEED80", Slot = "4")]
		public virtual bool HasRequiredFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xDEE894", Offset = "0xDEE894", VA = "0xDEE894")]
		public void CheckHeadControls()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xDEEDA0", Offset = "0xDEEDA0", VA = "0xDEEDA0")]
		public void UpdateInputs()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xDEEAEC", Offset = "0xDEEAEC", VA = "0xDEEAEC")]
		public void CheckPlayerControls()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xDEF7C0", Offset = "0xDEF7C0", VA = "0xDEF7C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xDEF7C4", Offset = "0xDEF7C4", VA = "0xDEF7C4", Slot = "5")]
		public virtual void UpdateControllerPositions()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xDEF524", Offset = "0xDEF524", VA = "0xDEF524")]
		private void checkGrabbers()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xDEF888", Offset = "0xDEF888", VA = "0xDEF888", Slot = "6")]
		public virtual void ResetHands()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xDEF954", Offset = "0xDEF954", VA = "0xDEF954", Slot = "7")]
		public virtual void ResetAll()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xDEFA54", Offset = "0xDEFA54", VA = "0xDEFA54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xDEFF4C", Offset = "0xDEFF4C", VA = "0xDEFF4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xDF045C", Offset = "0xDF045C", VA = "0xDF045C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xDF0468", Offset = "0xDF0468", VA = "0xDF0468")]
		public VREmulator()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class VehicleController : MonoBehaviour
	{
		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1EC", Offset = "0x7CD1EC")]
		private sealed class <crankEngine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VehicleController <>4__this;

			[Token(Token = "0x17000536")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDC")]
				[Address(RVA = "0xCC9010", Offset = "0xCC9010", VA = "0xCC9010", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000537")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDE")]
				[Address(RVA = "0xCC9058", Offset = "0xCC9058", VA = "0xCC9058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xCC8DD4", Offset = "0xCC8DD4", VA = "0xCC8DD4")]
			[DebuggerHidden]
			public <crankEngine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xCC8E00", Offset = "0xCC8E00", VA = "0xCC8E00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xCC8E04", Offset = "0xCC8E04", VA = "0xCC8E04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xCC9018", Offset = "0xCC9018", VA = "0xCC9018", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA49C", Offset = "0x7DA49C")]
		public float MotorTorque;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxSpeed;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxSteeringAngle;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA4D4", Offset = "0x7DA4D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA4D4", Offset = "0x7DA4D4")]
		public bool CheckTriggerInput;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable SteeringGrabbable;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA534", Offset = "0x7DA534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA534", Offset = "0x7DA534")]
		public bool EngineOn;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA594", Offset = "0x7DA594")]
		public float CrankTime;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA5CC", Offset = "0x7DA5CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA5CC", Offset = "0x7DA5CC")]
		public Text SpeedLabel;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA62C", Offset = "0x7DA62C")]
		public AudioSource EngineAudio;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA664", Offset = "0x7DA664")]
		public AudioClip IdleSound;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA69C", Offset = "0x7DA69C")]
		public AudioClip CrankSound;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip CollisionSound;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float SteeringAngle;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float MotorInput;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float CurrentSpeed;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA704", Offset = "0x7DA704")]
		public List<WheelObject> Wheels;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 initialPosition;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody rb;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool wasHoldingSteering;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isHoldingSteering;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool crankingEngine;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xDF37C0", Offset = "0xDF37C0", VA = "0xDF37C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xDF3838", Offset = "0xDF3838", VA = "0xDF3838")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xDF39C0", Offset = "0xDF39C0", VA = "0xDF39C0", Slot = "4")]
		public virtual void CrankEngine()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xDF3A0C", Offset = "0xDF3A0C", VA = "0xDF3A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7B48", Offset = "0x7E7B48")]
		private IEnumerator crankEngine()
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xDF3A78", Offset = "0xDF3A78", VA = "0xDF3A78", Slot = "5")]
		public virtual void CheckOutOfBounds()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDF3AE4", Offset = "0xDF3AE4", VA = "0xDF3AE4", Slot = "6")]
		public virtual void GetTorqueInputFromTriggers()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDF3BAC", Offset = "0xDF3BAC", VA = "0xDF3BAC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDF3D18", Offset = "0xDF3D18", VA = "0xDF3D18", Slot = "7")]
		public virtual void UpdateWheelTorque()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xDF3E28", Offset = "0xDF3E28", VA = "0xDF3E28", Slot = "8")]
		public virtual void SetSteeringAngle(float steeringAngle)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xDF3E30", Offset = "0xDF3E30", VA = "0xDF3E30", Slot = "9")]
		public virtual void SetSteeringAngleInverted(float steeringAngle)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xDF3E3C", Offset = "0xDF3E3C", VA = "0xDF3E3C", Slot = "10")]
		public virtual void SetSteeringAngle(Vector2 steeringAngle)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xDF3E44", Offset = "0xDF3E44", VA = "0xDF3E44", Slot = "11")]
		public virtual void SetSteeringAngleInverted(Vector2 steeringAngle)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xDF3E50", Offset = "0xDF3E50", VA = "0xDF3E50", Slot = "12")]
		public virtual void SetMotorTorqueInput(float input)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xDF3E58", Offset = "0xDF3E58", VA = "0xDF3E58", Slot = "13")]
		public virtual void SetMotorTorqueInputInverted(float input)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xDF3E64", Offset = "0xDF3E64", VA = "0xDF3E64", Slot = "14")]
		public virtual void SetMotorTorqueInput(Vector2 input)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xDF3E6C", Offset = "0xDF3E6C", VA = "0xDF3E6C", Slot = "15")]
		public virtual void SetMotorTorqueInputInverted(Vector2 input)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xDF3E78", Offset = "0xDF3E78", VA = "0xDF3E78", Slot = "16")]
		public virtual void UpdateWheelVisuals(WheelObject wheel)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xDF3F68", Offset = "0xDF3F68", VA = "0xDF3F68", Slot = "17")]
		public virtual void UpdateEngineAudio()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xDF4028", Offset = "0xDF4028", VA = "0xDF4028")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDF3C24", Offset = "0xDF3C24", VA = "0xDF3C24")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDF4100", Offset = "0xDF4100", VA = "0xDF4100")]
		public VehicleController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public class WheelObject
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider Wheel;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform WheelVisual;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ApplyTorque;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool ApplySteering;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xDF756C", Offset = "0xDF756C", VA = "0xDF756C")]
		public WheelObject()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint Destination;

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xDF6510", Offset = "0xDF6510", VA = "0xDF6510")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xDF666C", Offset = "0xDF666C", VA = "0xDF666C")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class Zipline : GrabbableEvents
	{
		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ZiplineStart;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ZiplineEnd;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZiplineSpeed;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseLinearMovement;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastMoveTime;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool movingForward;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xDF7E5C", Offset = "0xDF7E5C", VA = "0xDF7E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xDF7F2C", Offset = "0xDF7F2C", VA = "0xDF7F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xDF8004", Offset = "0xDF8004", VA = "0xDF8004")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xDF8134", Offset = "0xDF8134", VA = "0xDF8134", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xDF83EC", Offset = "0xDF83EC", VA = "0xDF83EC", Slot = "19")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xDF8430", Offset = "0xDF8430", VA = "0xDF8430", Slot = "22")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xDF8194", Offset = "0xDF8194", VA = "0xDF8194")]
		private void moveTowards(Vector3 pos, bool forwardDirection)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xDF8474", Offset = "0xDF8474", VA = "0xDF8474")]
		public Zipline()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class ControllerOffsetHelper : MonoBehaviour
	{
		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1FC", Offset = "0x7CD1FC")]
		private sealed class <checkForController>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerOffsetHelper <>4__this;

			[Token(Token = "0x17000538")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xF1C830", Offset = "0xF1C830", VA = "0xF1C830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000539")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF7")]
				[Address(RVA = "0xF1C878", Offset = "0xF1C878", VA = "0xF1C878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xF1C708", Offset = "0xF1C708", VA = "0xF1C708")]
			[DebuggerHidden]
			public <checkForController>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xF1C734", Offset = "0xF1C734", VA = "0xF1C734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xF1C738", Offset = "0xF1C738", VA = "0xF1C738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xF1C838", Offset = "0xF1C838", VA = "0xF1C838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerHand ControllerHand;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA73C", Offset = "0x7DA73C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DA73C", Offset = "0x7DA73C")]
		[SerializeField]
		private string thisControllerModel;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerOffset thisOffset;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA7BC", Offset = "0x7DA7BC")]
		public Vector3 OffsetPosition;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA7F4", Offset = "0x7DA7F4")]
		public Vector3 OffsetRotation;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ControllerOffset> ControllerOffsets;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x10C8AAC", Offset = "0x10C8AAC", VA = "0x10C8AAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x10C8B38", Offset = "0x10C8B38", VA = "0x10C8B38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7BF8", Offset = "0x7E7BF8")]
		private IEnumerator checkForController()
		{
			return null;
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x10C8BA4", Offset = "0x10C8BA4", VA = "0x10C8BA4", Slot = "4")]
		public virtual void OnControllerFound()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x10C8CB8", Offset = "0x10C8CB8", VA = "0x10C8CB8", Slot = "5")]
		public virtual ControllerOffset GetControllerOffset(string controllerName)
		{
			return null;
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x10C8DCC", Offset = "0x10C8DCC", VA = "0x10C8DCC", Slot = "6")]
		public virtual void DefineControllerOffsets()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x10C907C", Offset = "0x10C907C", VA = "0x10C907C", Slot = "7")]
		public virtual ControllerOffset GetOpenXROffset()
		{
			return null;
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x10C911C", Offset = "0x10C911C", VA = "0x10C911C")]
		public ControllerOffsetHelper()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x10C912C", Offset = "0x10C912C", VA = "0x10C912C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7C58", Offset = "0x7E7C58")]
		private bool <GetControllerOffset>b__9_0(ControllerOffset x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200041A")]
	public class ControllerOffset
	{
		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DA82C", Offset = "0x7DA82C")]
		private string <ControllerName>k__BackingField;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DA83C", Offset = "0x7DA83C")]
		private Vector3 <LeftControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DA84C", Offset = "0x7DA84C")]
		private Vector3 <RightControllerPositionOffset>k__BackingField;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DA85C", Offset = "0x7DA85C")]
		private Vector3 <LeftControllerRotationOffset>k__BackingField;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DA86C", Offset = "0x7DA86C")]
		private Vector3 <RightControlleRotationOffset>k__BackingField;

		[Token(Token = "0x1700053A")]
		public string ControllerName
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x10C8A34", Offset = "0x10C8A34", VA = "0x10C8A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7CB8", Offset = "0x7E7CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x10C8A3C", Offset = "0x10C8A3C", VA = "0x10C8A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7CC8", Offset = "0x7E7CC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		public Vector3 LeftControllerPositionOffset
		{
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x10C8A44", Offset = "0x10C8A44", VA = "0x10C8A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7CD8", Offset = "0x7E7CD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x10C8A50", Offset = "0x10C8A50", VA = "0x10C8A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7CE8", Offset = "0x7E7CE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public Vector3 RightControllerPositionOffset
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x10C8A5C", Offset = "0x10C8A5C", VA = "0x10C8A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7CF8", Offset = "0x7E7CF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x10C8A68", Offset = "0x10C8A68", VA = "0x10C8A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7D08", Offset = "0x7E7D08")]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public Vector3 LeftControllerRotationOffset
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x10C8A74", Offset = "0x10C8A74", VA = "0x10C8A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7D18", Offset = "0x7E7D18")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x10C8A80", Offset = "0x10C8A80", VA = "0x10C8A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7D28", Offset = "0x7E7D28")]
			set
			{
			}
		}

		[Token(Token = "0x1700053E")]
		public Vector3 RightControlleRotationOffset
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x10C8A8C", Offset = "0x10C8A8C", VA = "0x10C8A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7D38", Offset = "0x7E7D38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x10C8A98", Offset = "0x10C8A98", VA = "0x10C8A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E7D48", Offset = "0x7E7D48")]
			set
			{
			}
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x10C8AA4", Offset = "0x10C8AA4", VA = "0x10C8AA4")]
		public ControllerOffset()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class DetachableLimb : MonoBehaviour
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ShrinkBone;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ReplaceGrabbableWith;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject EnableOnDetach;

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x105C8F8", Offset = "0x105C8F8", VA = "0x105C8F8")]
		public void DoDismemberment(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x105CB84", Offset = "0x105CB84", VA = "0x105CB84")]
		public void ReverseDismemberment()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x105CC88", Offset = "0x105CC88", VA = "0x105CC88")]
		public DetachableLimb()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class DoorHelper : MonoBehaviour
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DoorOpenSound;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip DoorCloseSound;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA87C", Offset = "0x7DA87C")]
		public bool RequireHandleTurnToOpen;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool handleLocked;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandleFollower;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DegreesTurned;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DegreesTurnToOpen;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform DoorLockTransform;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLockPosition;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HingeJoint hinge;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playedOpenSound;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool readyToPlayCloseSound;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AngularVelocitySnapDoor;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float AngularVelocity;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA8B4", Offset = "0x7DA8B4")]
		public bool DoorIsLocked;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lockPos;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 currentRotation;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float moveLockAmount;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float rotateAngles;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float ratio;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x10637F8", Offset = "0x10637F8", VA = "0x10637F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x10638D4", Offset = "0x10638D4", VA = "0x10638D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1063CF0", Offset = "0x1063CF0", VA = "0x1063CF0")]
		public DoorHelper()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class GrabberArea : MonoBehaviour
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber InArea;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Grabber> grabbersInArea;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x17494A0", Offset = "0x17494A0", VA = "0x17494A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x17494C4", Offset = "0x17494C4", VA = "0x17494C4")]
		public Grabber GetOpenGrabber()
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1749618", Offset = "0x1749618", VA = "0x1749618")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x174976C", Offset = "0x174976C", VA = "0x174976C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1749878", Offset = "0x1749878", VA = "0x1749878")]
		public GrabberArea()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class HandCollision : MonoBehaviour
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController HandControl;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber HandGrabber;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EnableHandCollision;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableCollisionOnPoint;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableCollisionOnFist;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableCollisionOnAllPoses;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EnableCollisionDuringGrab;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PointAmount;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GripAmount;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MakingFist;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Collider> handColliders;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x12EA4B0", Offset = "0x12EA4B0", VA = "0x12EA4B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x12EA5D8", Offset = "0x12EA5D8", VA = "0x12EA5D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x12EA914", Offset = "0x12EA914", VA = "0x12EA914")]
		public HandCollision()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA8EC", Offset = "0x7DA8EC")]
		public Transform HandAnchor;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA924", Offset = "0x7DA924")]
		public bool ResetHandAnchorPosition;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator HandAnimator;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA95C", Offset = "0x7DA95C")]
		public HandPoser handPoser;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA994", Offset = "0x7DA994")]
		public AutoPoser autoPoser;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HandPoseBlender poseBlender;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DA9CC", Offset = "0x7DA9CC")]
		public HandPoserType IdlePoseType;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAA04", Offset = "0x7DAA04")]
		public bool UseIndexFingerTracking;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAA3C", Offset = "0x7DAA3C")]
		public float HandAnimationSpeed;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAA74", Offset = "0x7DAA74")]
		public Grabber grabber;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DAAAC", Offset = "0x7DAAAC")]
		public float GripAmount;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _prevGrip;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float PointAmount;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _prevPoint;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float ThumbAmount;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _prevThumb;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _thumbIsNear;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _indexIsNear;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _triggerValue;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _gripValue;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int PoseId;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ControllerOffsetHelper offset;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private InputBridge input;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody rigid;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform offsetTransform;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject PreviousHeldObject;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool DoUpdateAnimationStates;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool DoUpdateHandPoser;

		[Token(Token = "0x1700053F")]
		private Vector3 offsetPosition
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x12EA92C", Offset = "0x12EA92C", VA = "0x12EA92C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000540")]
		private Vector3 offsetRotation
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x12EA9BC", Offset = "0x12EA9BC", VA = "0x12EA9BC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x12EAA4C", Offset = "0x12EAA4C", VA = "0x12EAA4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x12EADA8", Offset = "0x12EADA8", VA = "0x12EADA8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x12EAE08", Offset = "0x12EAE08", VA = "0x12EAE08", Slot = "4")]
		public virtual void UpdateHeldObjectState()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x12EAE74", Offset = "0x12EAE74", VA = "0x12EAE74", Slot = "5")]
		public virtual void UpdateIdleState()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x12EAEC0", Offset = "0x12EAEC0", VA = "0x12EAEC0", Slot = "6")]
		public virtual bool HoldingObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x12EAF84", Offset = "0x12EAF84", VA = "0x12EAF84", Slot = "7")]
		public virtual void CheckForGrabChange()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x12EB11C", Offset = "0x12EB11C", VA = "0x12EB11C", Slot = "8")]
		public virtual void OnGrabChange(GameObject newlyHeldObject)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x12EB2CC", Offset = "0x12EB2CC", VA = "0x12EB2CC", Slot = "9")]
		public virtual void OnGrabDrop()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x12EB35C", Offset = "0x12EB35C", VA = "0x12EB35C", Slot = "10")]
		public virtual void SetHandAnimator()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x12EB418", Offset = "0x12EB418", VA = "0x12EB418", Slot = "11")]
		public virtual void UpdateFromInputs()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x12EB604", Offset = "0x12EB604", VA = "0x12EB604", Slot = "12")]
		public virtual void UpdateAnimimationStates()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x12EBA04", Offset = "0x12EBA04", VA = "0x12EBA04")]
		private void setAnimatorBlend(float min, float max, float input, int animationLayer)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x12EBA2C", Offset = "0x12EBA2C", VA = "0x12EBA2C", Slot = "13")]
		public virtual bool IsAnimatorGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x12EBB38", Offset = "0x12EBB38", VA = "0x12EBB38", Slot = "14")]
		public virtual void UpdateHandPoser()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x12EBD9C", Offset = "0x12EBD9C", VA = "0x12EBD9C", Slot = "15")]
		public virtual bool IsHandPoserGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x12EBEA8", Offset = "0x12EBEA8", VA = "0x12EBEA8", Slot = "16")]
		public virtual void UpdateHandPoserIdleState()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x12EC044", Offset = "0x12EC044", VA = "0x12EC044", Slot = "17")]
		public virtual void UpdateIndexFingerBlending()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x12EC048", Offset = "0x12EC048", VA = "0x12EC048", Slot = "18")]
		public virtual bool SetupPoseBlender()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x12EC29C", Offset = "0x12EC29C", VA = "0x12EC29C", Slot = "19")]
		public virtual HandPose GetDefaultOpenPose()
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x12EC2F8", Offset = "0x12EC2F8", VA = "0x12EC2F8", Slot = "20")]
		public virtual HandPose GetDefaultClosedPose()
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x12EC354", Offset = "0x12EC354", VA = "0x12EC354", Slot = "21")]
		public virtual void EnableHandPoser()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x12EC3E4", Offset = "0x12EC3E4", VA = "0x12EC3E4", Slot = "22")]
		public virtual void EnableAutoPoser(bool continuous)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x12EC59C", Offset = "0x12EC59C", VA = "0x12EC59C", Slot = "23")]
		public virtual void DisablePoseBlender()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x12EC620", Offset = "0x12EC620", VA = "0x12EC620", Slot = "24")]
		public virtual void DisableAutoPoser()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x12EC6A4", Offset = "0x12EC6A4", VA = "0x12EC6A4", Slot = "25")]
		public virtual bool IsAutoPoserGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x12EC7B4", Offset = "0x12EC7B4", VA = "0x12EC7B4", Slot = "26")]
		public virtual void EnableHandAnimator()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x12EC898", Offset = "0x12EC898", VA = "0x12EC898", Slot = "27")]
		public virtual void DisableHandAnimator()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x12EC940", Offset = "0x12EC940", VA = "0x12EC940", Slot = "28")]
		public virtual void OnGrabberGrabbed(Grabbable grabbed)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x12ECA40", Offset = "0x12ECA40", VA = "0x12ECA40", Slot = "29")]
		public virtual void UpdateCurrentHandPose()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x12ECAFC", Offset = "0x12ECAFC", VA = "0x12ECAFC", Slot = "30")]
		public virtual void OnGrabberReleased(Grabbable released)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x12ECB08", Offset = "0x12ECB08", VA = "0x12ECB08")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public enum HandPoserType
	{
		[Token(Token = "0x4001A31")]
		HandPoser,
		[Token(Token = "0x4001A32")]
		Animator,
		[Token(Token = "0x4001A33")]
		AutoPoser,
		[Token(Token = "0x4001A34")]
		None
	}
	[Token(Token = "0x2000421")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD20C", Offset = "0x7CD20C")]
		private sealed class <UnignoreAllCollisions>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <thisGrabbable>5__2;

			[Token(Token = "0x17000542")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D4D")]
				[Address(RVA = "0xDB5920", Offset = "0xDB5920", VA = "0xDB5920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000543")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4F")]
				[Address(RVA = "0xDB5968", Offset = "0xDB5968", VA = "0xDB5968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xDB5830", Offset = "0xDB5830", VA = "0xDB5830")]
			[DebuggerHidden]
			public <UnignoreAllCollisions>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xDB585C", Offset = "0xDB585C", VA = "0xDB585C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xDB5860", Offset = "0xDB5860", VA = "0xDB5860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xDB5928", Offset = "0xDB5928", VA = "0xDB5928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAAE4", Offset = "0x7DAAE4")]
		public Transform AttachTo;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAB1C", Offset = "0x7DAB1C")]
		public float HandVelocity;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAB54", Offset = "0x7DAB54")]
		public bool DisableHandCollidersOnGrab;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAB8C", Offset = "0x7DAB8C")]
		public float SnapBackDistance;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DABC4", Offset = "0x7DABC4")]
		public Grabber ThisGrabber;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DABFC", Offset = "0x7DABFC")]
		public Grabber DisableGrabber;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAC34", Offset = "0x7DAC34")]
		public RemoteGrabber ThisRemoteGrabber;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAC6C", Offset = "0x7DAC6C")]
		public RemoteGrabber DisableRemoteGrabber;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DACA4", Offset = "0x7DACA4")]
		public PhysicMaterial ColliderMaterial;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform HandModel;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform HandModelOffset;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Collider> handColliders;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable heldGrabbable;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Collider> collisions;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LineRenderer line;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 localHandOffset;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 localHandOffsetRotation;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool wasHoldingObject;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Grabbable remoteIgnoredGrabbable;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _priorParent;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _priorLocalOffsetPosition;

		[Token(Token = "0x17000541")]
		public bool HoldingObject
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x12EDD3C", Offset = "0x12EDD3C", VA = "0x12EDD3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x12EDE00", Offset = "0x12EDE00", VA = "0x12EDE00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x12EE344", Offset = "0x12EE344", VA = "0x12EE344")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x12EEA24", Offset = "0x12EEA24", VA = "0x12EEA24")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x12EE0FC", Offset = "0x12EE0FC", VA = "0x12EE0FC")]
		private void initHandColliders()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x12EE7A0", Offset = "0x12EE7A0", VA = "0x12EE7A0")]
		private void checkRemoteCollision()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x12EE620", Offset = "0x12EE620", VA = "0x12EE620")]
		private void drawDistanceLine()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x12EE948", Offset = "0x12EE948", VA = "0x12EE948")]
		private void checkBreakDistance()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x12EE470", Offset = "0x12EE470", VA = "0x12EE470")]
		private void updateHandGraphics()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x12EEE34", Offset = "0x12EEE34", VA = "0x12EEE34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7D58", Offset = "0x7E7D58")]
		private IEnumerator UnignoreAllCollisions()
		{
			return null;
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x12EED00", Offset = "0x12EED00", VA = "0x12EED00")]
		public void IgnoreGrabbableCollisions(Grabbable grab, bool ignorePhysics)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x12EEEA0", Offset = "0x12EEEA0", VA = "0x12EEEA0")]
		public void DisableHandColliders()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x12EEFE8", Offset = "0x12EEFE8", VA = "0x12EEFE8")]
		public void EnableHandColliders()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x12EF130", Offset = "0x12EF130", VA = "0x12EF130", Slot = "4")]
		public virtual void OnGrabbedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x12EF148", Offset = "0x12EF148", VA = "0x12EF148", Slot = "5")]
		public virtual void LockLocalPosition()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x12EF198", Offset = "0x12EF198", VA = "0x12EF198", Slot = "6")]
		public virtual void UnlockLocalPosition()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x12EF1CC", Offset = "0x12EF1CC", VA = "0x12EF1CC", Slot = "7")]
		public virtual void OnReleasedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x12EF270", Offset = "0x12EF270", VA = "0x12EF270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x12EF510", Offset = "0x12EF510", VA = "0x12EF510", Slot = "8")]
		public virtual void LockOffset()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x12EF560", Offset = "0x12EF560", VA = "0x12EF560", Slot = "9")]
		public virtual void UnlockOffset()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x12EF624", Offset = "0x12EF624", VA = "0x12EF624")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x12EF8F0", Offset = "0x12EF8F0", VA = "0x12EF8F0")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x12EFA54", Offset = "0x12EFA54", VA = "0x12EFA54")]
		public bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x12EFA5C", Offset = "0x12EFA5C", VA = "0x12EFA5C")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class HandRepresentationHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DACDC", Offset = "0x7DACDC")]
		public Transform HandToToggle;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAD14", Offset = "0x7DAD14")]
		public Transform OtherHandTransform;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAD4C", Offset = "0x7DAD4C")]
		public float DistanceToShow;

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x12F1144", Offset = "0x12F1144", VA = "0x12F1144")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x12F11F4", Offset = "0x12F11F4", VA = "0x12F11F4")]
		public HandRepresentationHelper()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class HandleGFXHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable HandleGrabbable;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMin;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LocalYMax;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initialRot;

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x12F1208", Offset = "0x12F1208", VA = "0x12F1208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x12F1244", Offset = "0x12F1244", VA = "0x12F1244")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x12F14D8", Offset = "0x12F14D8", VA = "0x12F14D8")]
		public HandleGFXHelper()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class HandleHelper : MonoBehaviour
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD21C", Offset = "0x7CD21C")]
		private sealed class <doRelease>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandleHelper <>4__this;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0xDB5A50", Offset = "0xDB5A50", VA = "0xDB5A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5F")]
				[Address(RVA = "0xDB5A98", Offset = "0xDB5A98", VA = "0xDB5A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xDB5970", Offset = "0xDB5970", VA = "0xDB5970")]
			[DebuggerHidden]
			public <doRelease>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xDB599C", Offset = "0xDB599C", VA = "0xDB599C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xDB59A0", Offset = "0xDB59A0", VA = "0xDB59A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xDB5A58", Offset = "0xDB5A58", VA = "0xDB5A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigid;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandleTransform;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabbable thisGrab;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool didRelease;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastAngularVelocity;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x12F14F4", Offset = "0x12F14F4", VA = "0x12F14F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x12F1688", Offset = "0x12F1688", VA = "0x12F1688")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x12F1954", Offset = "0x12F1954", VA = "0x12F1954")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x12F18E8", Offset = "0x12F18E8", VA = "0x12F18E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7E08", Offset = "0x7E7E08")]
		private IEnumerator doRelease()
		{
			return null;
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x12F1994", Offset = "0x12F1994", VA = "0x12F1994")]
		public HandleHelper()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class IgnoreColliders : MonoBehaviour
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> CollidersToIgnore;

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x16A1358", Offset = "0x16A1358", VA = "0x16A1358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x16A1500", Offset = "0x16A1500", VA = "0x16A1500")]
		public IgnoreColliders()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class InvalidTeleportArea : MonoBehaviour
	{
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x16A7134", Offset = "0x16A7134", VA = "0x16A7134")]
		public InvalidTeleportArea()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class JointBreaker : MonoBehaviour
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BreakDistance;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float JointDistance;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DestroyJointOnBreak;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabberEvent OnBreakEvent;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Joint theJoint;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startPos;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool brokeJoint;

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x16A74E0", Offset = "0x16A74E0", VA = "0x16A74E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x16A7558", Offset = "0x16A7558", VA = "0x16A7558")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x16A75C4", Offset = "0x16A75C4", VA = "0x16A75C4")]
		public void BreakJoint()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x16A776C", Offset = "0x16A776C", VA = "0x16A776C")]
		public JointBreaker()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class JointHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockXPosition;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LockYPosition;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool LockZPosition;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool LockXScale;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockYScale;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LockZScale;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool LockXRotation;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool LockYRotation;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LockZRotation;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialRotation;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialScale;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentPosition;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 currentScale;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x16A7784", Offset = "0x16A7784", VA = "0x16A7784")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x16A7800", Offset = "0x16A7800", VA = "0x16A7800")]
		private void lockPosition()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x16A79F0", Offset = "0x16A79F0", VA = "0x16A79F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x16A79F4", Offset = "0x16A79F4", VA = "0x16A79F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x16A79F8", Offset = "0x16A79F8", VA = "0x16A79F8")]
		public JointHelper()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class RagdollHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> colliders;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider playerCol;

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x12FFFA8", Offset = "0x12FFFA8", VA = "0x12FFFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x130014C", Offset = "0x130014C", VA = "0x130014C")]
		public RagdollHelper()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class RingHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAD84", Offset = "0x7DAD84")]
		public Grabbable grabbable;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DADBC", Offset = "0x7DADBC")]
		public GrabPoint Grabpoint;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DADF4", Offset = "0x7DADF4")]
		public Color RingColor;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAE2C", Offset = "0x7DAE2C")]
		public Color RingSelectedColor;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAE64", Offset = "0x7DAE64")]
		public Color RingSecondarySelectedColor;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ringSizeInRange;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ringSizeGrabbable;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAE9C", Offset = "0x7DAE9C")]
		public bool HideIfHandsAreFull;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAED4", Offset = "0x7DAED4")]
		public float RingFadeSpeed;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Canvas canvas;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Text text;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CanvasScaler scaler;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabber leftGrabber;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabber rightGrabber;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Grabber closestGrabber;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool handsFull;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _initalOpacity;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _currentOpacity;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform mainCam;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xD98618", Offset = "0xD98618", VA = "0xD98618")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xD98800", Offset = "0xD98800", VA = "0xD98800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xD98E08", Offset = "0xD98E08", VA = "0xD98E08", Slot = "4")]
		public virtual void AssignCamera()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xD98EF8", Offset = "0xD98EF8", VA = "0xD98EF8", Slot = "5")]
		public virtual void AssignGrabbers()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xD98CF8", Offset = "0xD98CF8", VA = "0xD98CF8")]
		private Color getSelectedColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xD99060", Offset = "0xD99060", VA = "0xD99060")]
		public RingHelper()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class ScaleMaterialHelper : MonoBehaviour
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer ren;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Tiling;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Offset;

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xD9FFB0", Offset = "0xD9FFB0", VA = "0xD9FFB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xDA0008", Offset = "0xDA0008", VA = "0xDA0008")]
		private void updateTexture()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xDA0118", Offset = "0xDA0118", VA = "0xDA0118")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xDA0150", Offset = "0xDA0150", VA = "0xDA0150")]
		public ScaleMaterialHelper()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class StaticBatch : MonoBehaviour
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material CombineMaterial;

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xE7BEDC", Offset = "0xE7BEDC", VA = "0xE7BEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xE7C524", Offset = "0xE7C524", VA = "0xE7C524")]
		public StaticBatch()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAF0C", Offset = "0x7DAF0C")]
		public Transform DestinationTransform;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAF44", Offset = "0x7DAF44")]
		public bool ForcePlayerRotation;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAF7C", Offset = "0x7DAF7C")]
		public UnityEvent OnPlayerTeleported;

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE7F8E0", Offset = "0xE7F8E0", VA = "0xE7F8E0")]
		public TeleportDestination()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class TeleportPlayerOnEnter : MonoBehaviour
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TeleportDestination;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE7F8E8", Offset = "0xE7F8E8", VA = "0xE7F8E8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xE7FA38", Offset = "0xE7FA38", VA = "0xE7FA38")]
		public TeleportPlayerOnEnter()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class UITrigger : MonoBehaviour
	{
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xDEA084", Offset = "0xDEA084", VA = "0xDEA084")]
		public UITrigger()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class VRIFGrabpointUpdater : MonoBehaviour
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DAFB4", Offset = "0x7DAFB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DAFB4", Offset = "0x7DAFB4")]
		public Vector3 PriorModelOffsetRightPosition;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB014", Offset = "0x7DB014")]
		public Vector3 NewModelOffsetRightPosition;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB04C", Offset = "0x7DB04C")]
		public Vector3 PriorModelOffsetRightRotation;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB084", Offset = "0x7DB084")]
		public Vector3 NewModelOffsetRightRotation;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB0BC", Offset = "0x7DB0BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB0BC", Offset = "0x7DB0BC")]
		public Vector3 PriorModelOffsetLeftPosition;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB11C", Offset = "0x7DB11C")]
		public Vector3 NewModelOffsetLeftPosition;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB154", Offset = "0x7DB154")]
		public Vector3 PriorModelOffsetLeftRotation;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB18C", Offset = "0x7DB18C")]
		public Vector3 NewModelOffsetLeftRotation;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xDF04C0", Offset = "0xDF04C0", VA = "0xDF04C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xDF04C4", Offset = "0xDF04C4", VA = "0xDF04C4")]
		public void ApplyGrabPointUpdate()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDF076C", Offset = "0xDF076C", VA = "0xDF076C")]
		public VRIFGrabpointUpdater()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class UIButtonCollider : MonoBehaviour
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB1C4", Offset = "0x7DB1C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB1C4", Offset = "0x7DB1C4")]
		public bool CanBeHeldDown;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB224", Offset = "0x7DB224")]
		public float InitialHoldDownDelay;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB25C", Offset = "0x7DB25C")]
		public float HoldDownDelay;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB294", Offset = "0x7DB294")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB294", Offset = "0x7DB294")]
		public bool AnimateKey;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB2F4", Offset = "0x7DB2F4")]
		public float PressedInZValue;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB32C", Offset = "0x7DB32C")]
		public float PressInSpeed;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.UI.Button uiButton;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int itemsInTrigger;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool readyForDownEvent;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int clickCount;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float lastPressTime;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected BoxCollider boxCollider;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float colliderInitialCenterZ;

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDE8E14", Offset = "0xDE8E14", VA = "0xDE8E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDE8EE4", Offset = "0xDE8EE4", VA = "0xDE8EE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDE9398", Offset = "0xDE9398", VA = "0xDE9398")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xDE9450", Offset = "0xDE9450", VA = "0xDE9450")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDE9508", Offset = "0xDE9508", VA = "0xDE9508")]
		public UIButtonCollider()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class UICanvasGroup : MonoBehaviour
	{
		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> CanvasObjects;

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDE9538", Offset = "0xDE9538", VA = "0xDE9538")]
		public void ActivateCanvas(int CanvasIndex)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDE965C", Offset = "0xDE965C", VA = "0xDE965C")]
		public UICanvasGroup()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class UIPointer : MonoBehaviour
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB364", Offset = "0x7DB364")]
		public ControllerHand ControllerSide;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB39C", Offset = "0x7DB39C")]
		public bool AutoUpdateUITransforms;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cursor;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _cursor;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB3D4", Offset = "0x7DB3D4")]
		public bool HidePointerIfNoObjectsFound;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB40C", Offset = "0x7DB40C")]
		public float FixedPointerLength;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB444", Offset = "0x7DB444")]
		public bool CursorScaling;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB47C", Offset = "0x7DB47C")]
		public float CursorMinScale;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float CursorMaxScale;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _cursorInitialLocalScale;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB4B4", Offset = "0x7DB4B4")]
		public float LineDistanceModifier;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRUISystem uiSystem;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEvents selectedPointerEvents;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PointerEventData data;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB4EC", Offset = "0x7DB4EC")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDE9664", Offset = "0xDE9664", VA = "0xDE9664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xDE99D8", Offset = "0xDE99D8", VA = "0xDE99D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xDE99DC", Offset = "0xDE99DC", VA = "0xDE99DC")]
		private void updateUITransforms()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xDE9A60", Offset = "0xDE9A60", VA = "0xDE9A60")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xDE9A6C", Offset = "0xDE9A6C", VA = "0xDE9A6C", Slot = "4")]
		public virtual void UpdatePointer()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xDE9EE4", Offset = "0xDE9EE4", VA = "0xDE9EE4", Slot = "5")]
		public virtual void HidePointer()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xDEA048", Offset = "0xDEA048", VA = "0xDEA048")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD22C", Offset = "0x7CD22C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD22C", Offset = "0x7CD22C")]
	public class VRCanvas : MonoBehaviour
	{
		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xDEE240", Offset = "0xDEE240", VA = "0xDEE240")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xDEE2B4", Offset = "0xDEE2B4", VA = "0xDEE2B4")]
		public VRCanvas()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class VRKeyboard : MonoBehaviour
	{
		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2C0", Offset = "0x7CD2C0")]
		private sealed class <IncreaseInputFieldCareteRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRKeyboard <>4__this;

			[Token(Token = "0x17000546")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9F")]
				[Address(RVA = "0xCC8D84", Offset = "0xCC8D84", VA = "0xCC8D84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000547")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA1")]
				[Address(RVA = "0xCC8DCC", Offset = "0xCC8DCC", VA = "0xCC8DCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xCC8C88", Offset = "0xCC8C88", VA = "0xCC8C88")]
			[DebuggerHidden]
			public <IncreaseInputFieldCareteRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xCC8CB4", Offset = "0xCC8CB4", VA = "0xCC8CB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xCC8CB8", Offset = "0xCC8CB8", VA = "0xCC8CB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xCC8D8C", Offset = "0xCC8D8C", VA = "0xCC8D8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2D0", Offset = "0x7CD2D0")]
		private sealed class <DecreaseInputFieldCareteRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRKeyboard <>4__this;

			[Token(Token = "0x17000548")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0xCC8C38", Offset = "0xCC8C38", VA = "0xCC8C38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000549")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA7")]
				[Address(RVA = "0xCC8C80", Offset = "0xCC8C80", VA = "0xCC8C80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xCC8B3C", Offset = "0xCC8B3C", VA = "0xCC8B3C")]
			[DebuggerHidden]
			public <DecreaseInputFieldCareteRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xCC8B68", Offset = "0xCC8B68", VA = "0xCC8B68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xCC8B6C", Offset = "0xCC8B6C", VA = "0xCC8B6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xCC8C40", Offset = "0xCC8C40", VA = "0xCC8C40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField AttachedInputField;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseShift;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB524", Offset = "0x7DB524")]
		public AudioClip KeyPressSound;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VRKeyboardKey> KeyboardKeys;

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xDF07BC", Offset = "0xDF07BC", VA = "0xDF07BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xDF083C", Offset = "0xDF083C", VA = "0xDF083C")]
		public void PressKey(string key)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xDF0934", Offset = "0xDF0934", VA = "0xDF0934")]
		public void UpdateInputField(string key)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xDF0DD4", Offset = "0xDF0DD4", VA = "0xDF0DD4", Slot = "4")]
		public virtual void PlayClickSound()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xDF0DA8", Offset = "0xDF0DA8", VA = "0xDF0DA8")]
		public void MoveCaretUp()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xDF0C00", Offset = "0xDF0C00", VA = "0xDF0C00")]
		public void MoveCaretBack()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xDF0C2C", Offset = "0xDF0C2C", VA = "0xDF0C2C")]
		public void ToggleShift()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xDF11DC", Offset = "0xDF11DC", VA = "0xDF11DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7EB8", Offset = "0x7E7EB8")]
		private IEnumerator IncreaseInputFieldCareteRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xDF1248", Offset = "0xDF1248", VA = "0xDF1248")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E7F18", Offset = "0x7E7F18")]
		private IEnumerator DecreaseInputFieldCareteRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xDF12B4", Offset = "0xDF12B4", VA = "0xDF12B4")]
		public void AttachToInputField(InputField inputField)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xDF12BC", Offset = "0xDF12BC", VA = "0xDF12BC")]
		public VRKeyboard()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class VRKeyboardKey : MonoBehaviour
	{
		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityEngine.UI.Button thisButton;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text thisButtonText;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRKeyboard vrKeyboard;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Keycode;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string KeycodeShift;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool UseShiftKey;

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xDF12C4", Offset = "0xDF12C4", VA = "0xDF12C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xDF1404", Offset = "0xDF1404", VA = "0xDF1404", Slot = "4")]
		public virtual void ToggleShift()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xDF14D8", Offset = "0xDF14D8", VA = "0xDF14D8", Slot = "5")]
		public virtual void OnKeyHit()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xDF1524", Offset = "0xDF1524", VA = "0xDF1524", Slot = "6")]
		public virtual void OnKeyHit(string key)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDF163C", Offset = "0xDF163C", VA = "0xDF163C")]
		public VRKeyboardKey()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class VRTextInput : MonoBehaviour
	{
		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField thisInputField;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AttachToVRKeyboard;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool ActivateKeyboardOnSelect;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DeactivateKeyboardOnDeselect;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRKeyboard AttachedKeyboard;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFocused;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool wasFocused;

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDF1644", Offset = "0xDF1644", VA = "0xDF1644")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xDF1724", Offset = "0xDF1724", VA = "0xDF1724")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xDF17F8", Offset = "0xDF17F8", VA = "0xDF17F8")]
		public void OnInputSelect()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDF18C8", Offset = "0xDF18C8", VA = "0xDF18C8")]
		public void OnInputDeselect()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDF1990", Offset = "0xDF1990", VA = "0xDF1990")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDF1AAC", Offset = "0xDF1AAC", VA = "0xDF1AAC")]
		public VRTextInput()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class VRUISystem : BaseInputModule
	{
		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB56C", Offset = "0x7DB56C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB56C", Offset = "0x7DB56C")]
		public ControllerHand SelectedHand;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB5CC", Offset = "0x7DB5CC")]
		public Transform LeftPointerTransform;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB604", Offset = "0x7DB604")]
		public Transform RightPointerTransform;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB63C", Offset = "0x7DB63C")]
		public List<ControllerBinding> ControllerInput;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB674", Offset = "0x7DB674")]
		public InputActionReference UIInputAction;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB6AC", Offset = "0x7DB6AC")]
		public bool AddPhysicsRaycaster;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask PhysicsRaycasterEventMask;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB6E4", Offset = "0x7DB6E4")]
		public bool RightThumbstickScroll;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB71C", Offset = "0x7DB71C")]
		public GameObject PressingObject;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject DraggingObject;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject ReleasingObject;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DB754", Offset = "0x7DB754")]
		private PointerEventData <EventData>k__BackingField;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Camera cameraCaster;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject _initialPressObject;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _lastInputDown;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool inputDown;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUISystem _instance;

		[Token(Token = "0x1700054A")]
		public PointerEventData EventData
		{
			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xDF1ABC", Offset = "0xDF1ABC", VA = "0xDF1ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8018", Offset = "0x7E8018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xDF1AC4", Offset = "0xDF1AC4", VA = "0xDF1AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8028", Offset = "0x7E8028")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		public static VRUISystem Instance
		{
			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xDE97CC", Offset = "0xDE97CC", VA = "0xDE97CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xDF1ACC", Offset = "0xDF1ACC", VA = "0xDF1ACC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xDF1ADC", Offset = "0xDF1ADC", VA = "0xDF1ADC", Slot = "26")]
		protected virtual void initEventSystem()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xDF1BCC", Offset = "0xDF1BCC", VA = "0xDF1BCC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xDF1C04", Offset = "0xDF1C04", VA = "0xDF1C04")]
		private void init()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xDF1D7C", Offset = "0xDF1D7C", VA = "0xDF1D7C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xDF1D80", Offset = "0xDF1D80", VA = "0xDF1D80")]
		public void DoProcess()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xDF2100", Offset = "0xDF2100", VA = "0xDF2100", Slot = "27")]
		public virtual bool InputReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xDF2298", Offset = "0xDF2298", VA = "0xDF2298", Slot = "28")]
		public virtual bool CameraCasterReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xDF233C", Offset = "0xDF233C", VA = "0xDF233C", Slot = "29")]
		public virtual void PressDown()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xDF2578", Offset = "0xDF2578", VA = "0xDF2578", Slot = "30")]
		public virtual void Press()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xDF2768", Offset = "0xDF2768", VA = "0xDF2768", Slot = "31")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xDF2A08", Offset = "0xDF2A08", VA = "0xDF2A08", Slot = "32")]
		public virtual void ClearAll()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xDF2A94", Offset = "0xDF2A94", VA = "0xDF2A94", Slot = "33")]
		public virtual void SetPressingObject(GameObject pressing)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xDF2ACC", Offset = "0xDF2ACC", VA = "0xDF2ACC", Slot = "34")]
		public virtual void SetDraggingObject(GameObject dragging)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xDF2AEC", Offset = "0xDF2AEC", VA = "0xDF2AEC", Slot = "35")]
		public virtual void SetReleasingObject(GameObject releasing)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xDF2AF4", Offset = "0xDF2AF4", VA = "0xDF2AF4", Slot = "36")]
		public virtual void AssignCameraToAllCanvases(Camera cam)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xDF2BE4", Offset = "0xDF2BE4", VA = "0xDF2BE4", Slot = "37")]
		public virtual void AddCanvas(Canvas canvas)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xDF2BF8", Offset = "0xDF2BF8", VA = "0xDF2BF8", Slot = "38")]
		public virtual void AddCanvasToCamera(Canvas canvas, Camera cam)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xDF2C98", Offset = "0xDF2C98", VA = "0xDF2C98", Slot = "39")]
		public virtual void UpdateControllerHand(ControllerHand hand)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xDF2E08", Offset = "0xDF2E08", VA = "0xDF2E08")]
		public VRUISystem()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class DestroyIfPlayMode : MonoBehaviour
	{
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x105C698", Offset = "0x105C698", VA = "0x105C698")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x105C75C", Offset = "0x105C75C", VA = "0x105C75C")]
		public DestroyIfPlayMode()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUtils _instance;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LogTextColor;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color WarnTextColor;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color ErrTextColor;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform DebugTextHolder;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float MaxTextEntries;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string LastDebugMsg;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int lastDebugMsgCount;

		[Token(Token = "0x1700054C")]
		public static VRUtils Instance
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xDF0EA0", Offset = "0xDF0EA0", VA = "0xDF0EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xDF2EC0", Offset = "0xDF2EC0", VA = "0xDF2EC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xDF2FCC", Offset = "0xDF2FCC", VA = "0xDF2FCC")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xDF3478", Offset = "0xDF3478", VA = "0xDF3478")]
		public void Warn(string msg)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xDF3514", Offset = "0xDF3514", VA = "0xDF3514")]
		public void Error(string msg)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xDF3068", Offset = "0xDF3068", VA = "0xDF3068")]
		public void VRDebugLog(string msg, Color logColor)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xDF35B0", Offset = "0xDF35B0", VA = "0xDF35B0")]
		public void CullDebugPanel()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xDF1010", Offset = "0xDF1010", VA = "0xDF1010")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xDF3684", Offset = "0xDF3684", VA = "0xDF3684")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xDF36CC", Offset = "0xDF36CC", VA = "0xDF36CC")]
		public VRUtils()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class AmmoDispenser : MonoBehaviour
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber LeftGrabber;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber RightGrabber;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmmoDispenserObject;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PistolClip;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ShotgunShell;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject RifleClip;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int CurrentPistolClips;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int CurrentRifleClips;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int CurrentShotgunShells;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1665230", Offset = "0x1665230", VA = "0x1665230")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x16652A8", Offset = "0x16652A8", VA = "0x16652A8")]
		private bool grabberHasWeapon(Grabber g)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x16653F8", Offset = "0x16653F8", VA = "0x16653F8")]
		public GameObject GetAmmo()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1665760", Offset = "0x1665760", VA = "0x1665760")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1665A28", Offset = "0x1665A28", VA = "0x1665A28", Slot = "4")]
		public virtual void AddAmmo(string AmmoName)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x1665B10", Offset = "0x1665B10", VA = "0x1665B10")]
		public AmmoDispenser()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class AmmoDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text AmmoLabel;

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1665B28", Offset = "0x1665B28", VA = "0x1665B28")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x1665C10", Offset = "0x1665C10", VA = "0x1665C10")]
		public AmmoDisplay()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x10BED5C", Offset = "0x10BED5C", VA = "0x10BED5C")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class BulletInsert : MonoBehaviour
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AcceptBulletName;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip InsertSound;

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x10BF508", Offset = "0x10BF508", VA = "0x10BF508")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x10BF76C", Offset = "0x10BF76C", VA = "0x10BF76C")]
		public BulletInsert()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class MagazineSlide : MonoBehaviour
	{
		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2E0", Offset = "0x7CD2E0")]
		private sealed class <EjectMagRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable ejectedMag;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagazineSlide <>4__this;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF1")]
				[Address(RVA = "0xDB7AB0", Offset = "0xDB7AB0", VA = "0xDB7AB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF3")]
				[Address(RVA = "0xDB7AF8", Offset = "0xDB7AF8", VA = "0xDB7AF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xDB7800", Offset = "0xDB7800", VA = "0xDB7800")]
			[DebuggerHidden]
			public <EjectMagRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xDB782C", Offset = "0xDB782C", VA = "0xDB782C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xDB7830", Offset = "0xDB7830", VA = "0xDB7830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xDB7AB8", Offset = "0xDB7AB8", VA = "0xDB7AB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB764", Offset = "0x7DB764")]
		public string AcceptableMagazineName;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable AttachedWeapon;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ClipSnapDistance;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClipUnsnapDistance;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float EjectForce;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable HeldMagazine;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider HeldCollider;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MagazineDistance;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool magazineInPlace;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool lockedInPlace;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ClipAttachSound;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip ClipDetachSound;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabberArea grabClipArea;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastEjectTime;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1121884", Offset = "0x1121884", VA = "0x1121884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x11219FC", Offset = "0x11219FC", VA = "0x11219FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1121F38", Offset = "0x1121F38", VA = "0x1121F38")]
		private bool recentlyEjected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1121EE4", Offset = "0x1121EE4", VA = "0x1121EE4")]
		private void moveMagazine(Vector3 localPosition)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1121CD8", Offset = "0x1121CD8", VA = "0x1121CD8")]
		public void CheckGrabClipInput()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1121F74", Offset = "0x1121F74", VA = "0x1121F74")]
		private void attachMagazine()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1122220", Offset = "0x1122220", VA = "0x1122220")]
		private Grabbable detachMagazine()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x11225F0", Offset = "0x11225F0", VA = "0x11225F0")]
		public void EjectMagazine()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1122638", Offset = "0x1122638", VA = "0x1122638")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E8038", Offset = "0x7E8038")]
		private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1122518", Offset = "0x1122518", VA = "0x1122518")]
		public void OnGrabClipArea(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x11226B0", Offset = "0x11226B0", VA = "0x11226B0", Slot = "4")]
		public virtual void AttachGrabbableMagazine(Grabbable mag, Collider magCollider)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1122790", Offset = "0x1122790", VA = "0x1122790")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x11228CC", Offset = "0x11228CC", VA = "0x11228CC")]
		public MagazineSlide()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class Projectile : MonoBehaviour
	{
		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2F0", Offset = "0x7CD2F0")]
		private sealed class <CheckForRaycast>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Projectile <>4__this;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xDC0D00", Offset = "0xDC0D00", VA = "0xDC0D00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E00")]
				[Address(RVA = "0xDC0D48", Offset = "0xDC0D48", VA = "0xDC0D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xDC0BFC", Offset = "0xDC0BFC", VA = "0xDC0BFC")]
			[DebuggerHidden]
			public <CheckForRaycast>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xDC0C28", Offset = "0xDC0C28", VA = "0xDC0C28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xDC0C2C", Offset = "0xDC0C2C", VA = "0xDC0C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xDC0D08", Offset = "0xDC0D08", VA = "0xDC0D08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _checkRaycast;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Damage;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AddRigidForce;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool StickToObject;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MinForceHit;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB79C", Offset = "0x7DB79C")]
		public UnityEvent onDealtDamageEvent;

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x12FDF08", Offset = "0x12FDF08", VA = "0x12FDF08")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x12FDF14", Offset = "0x12FDF14", VA = "0x12FDF14", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x12FE2A0", Offset = "0x12FE2A0", VA = "0x12FE2A0", Slot = "5")]
		public virtual void DoHitFX(Vector3 pos, Quaternion rot, Collider col)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x12FE4A0", Offset = "0x12FE4A0", VA = "0x12FE4A0", Slot = "6")]
		public virtual void MarkAsRaycastBullet()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x12FE540", Offset = "0x12FE540", VA = "0x12FE540", Slot = "7")]
		public virtual void DoRayCastProjectile()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x12FE4D4", Offset = "0x12FE4D4", VA = "0x12FE4D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E80E8", Offset = "0x7E80E8")]
		private IEnumerator CheckForRaycast()
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x12FE728", Offset = "0x12FE728", VA = "0x12FE728")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class RaycastWeapon : GrabbableEvents
	{
		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD300", Offset = "0x7CD300")]
		private sealed class <doMuzzleFlash>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xDC1E18", Offset = "0xDC1E18", VA = "0xDC1E18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1E")]
				[Address(RVA = "0xDC1E60", Offset = "0xDC1E60", VA = "0xDC1E60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xDC1CBC", Offset = "0xDC1CBC", VA = "0xDC1CBC")]
			[DebuggerHidden]
			public <doMuzzleFlash>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xDC1CE8", Offset = "0xDC1CE8", VA = "0xDC1CE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xDC1CEC", Offset = "0xDC1CEC", VA = "0xDC1CEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xDC1E20", Offset = "0xDC1E20", VA = "0xDC1E20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD310", Offset = "0x7CD310")]
		private sealed class <animateSlideAndEject>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frames>5__2;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <slideEndReached>5__3;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <slideDestination>5__4;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <slideBeginningReached>5__5;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E22")]
				[Address(RVA = "0xDC1C6C", Offset = "0xDC1C6C", VA = "0xDC1C6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E24")]
				[Address(RVA = "0xDC1CB4", Offset = "0xDC1CB4", VA = "0xDC1CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xDC1738", Offset = "0xDC1738", VA = "0xDC1738")]
			[DebuggerHidden]
			public <animateSlideAndEject>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xDC1764", Offset = "0xDC1764", VA = "0xDC1764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xDC1768", Offset = "0xDC1768", VA = "0xDC1768", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xDC1C74", Offset = "0xDC1C74", VA = "0xDC1C74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB7D4", Offset = "0x7DB7D4")]
		public float MaxRange;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Damage;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB80C", Offset = "0x7DB80C")]
		public FiringType FiringMethod;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ReloadType ReloadMethod;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB844", Offset = "0x7DB844")]
		public float FiringRate;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastShotTime;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB87C", Offset = "0x7DB87C")]
		public float BulletImpactForce;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB8B4", Offset = "0x7DB8B4")]
		public float InternalAmmo;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB8EC", Offset = "0x7DB8EC")]
		public float MaxInternalAmmo;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB924", Offset = "0x7DB924")]
		public bool AutoChamberRounds;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB95C", Offset = "0x7DB95C")]
		public bool MustChamberRounds;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DB994", Offset = "0x7DB994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB994", Offset = "0x7DB994")]
		public bool AlwaysFireProjectile;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DB9F4", Offset = "0x7DB9F4")]
		public bool FireProjectileInSlowMo;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBA2C", Offset = "0x7DBA2C")]
		public float SlowMoRateOfFire;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBA64", Offset = "0x7DBA64")]
		public float ShotForce;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBA9C", Offset = "0x7DBA9C")]
		public float BulletCasingForce;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DBAD4", Offset = "0x7DBAD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBAD4", Offset = "0x7DBAD4")]
		public Vector3 RecoilForce;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBB34", Offset = "0x7DBB34")]
		public float RecoilDuration;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody weaponRigid;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DBB6C", Offset = "0x7DBB6C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DBBA4", Offset = "0x7DBBA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBBA4", Offset = "0x7DBBA4")]
		public Transform TriggerTransform;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBC04", Offset = "0x7DBC04")]
		public Transform SlideTransform;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBC3C", Offset = "0x7DBC3C")]
		public Transform MuzzlePointTransform;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBC74", Offset = "0x7DBC74")]
		public Transform EjectPointTransform;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBCAC", Offset = "0x7DBCAC")]
		public Transform ChamberedBullet;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBCE4", Offset = "0x7DBCE4")]
		public GameObject MuzzleFlashObject;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBD1C", Offset = "0x7DBD1C")]
		public GameObject BulletCasingPrefab;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBD54", Offset = "0x7DBD54")]
		public GameObject ProjectilePrefab;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBD8C", Offset = "0x7DBD8C")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBDC4", Offset = "0x7DBDC4")]
		public AudioClip GunShotSound;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DBDFC", Offset = "0x7DBDFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBDFC", Offset = "0x7DBDFC")]
		public float GunShotVolume;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBE50", Offset = "0x7DBE50")]
		public AudioClip EmptySound;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBE88", Offset = "0x7DBE88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DBE88", Offset = "0x7DBE88")]
		public float EmptySoundVolume;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBEDC", Offset = "0x7DBEDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DBEDC", Offset = "0x7DBEDC")]
		public float SlideDistance;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBF3C", Offset = "0x7DBF3C")]
		public bool ForceSlideBackOnLastShot;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBF74", Offset = "0x7DBF74")]
		public float slideSpeed;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float minSlideDistance;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DBFAC", Offset = "0x7DBFAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DBFAC", Offset = "0x7DBFAC")]
		public List<GrabbedControllerBinding> EjectInput;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC00C", Offset = "0x7DC00C")]
		public List<GrabbedControllerBinding> ReleaseSlideInput;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC044", Offset = "0x7DC044")]
		public List<GrabbedControllerBinding> ReloadInput;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC07C", Offset = "0x7DC07C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC07C", Offset = "0x7DC07C")]
		public bool BulletInChamber;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC0DC", Offset = "0x7DC0DC")]
		public bool EmptyBulletInChamber;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC114", Offset = "0x7DC114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC114", Offset = "0x7DC114")]
		public UnityEvent onShootEvent;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC174", Offset = "0x7DC174")]
		public UnityEvent onAttachedAmmoEvent;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC1AC", Offset = "0x7DC1AC")]
		public UnityEvent onDetachedAmmoEvent;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC1E4", Offset = "0x7DC1E4")]
		public UnityEvent onWeaponChargedEvent;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC21C", Offset = "0x7DC21C")]
		public FloatEvent onDealtDamageEvent;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC254", Offset = "0x7DC254")]
		public RaycastHitEvent onRaycastHitEvent;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected bool slideForcedBack;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected WeaponSlide ws;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool readyToShoot;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		protected bool playedEmptySound;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected IEnumerator shotRoutine;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1300760", Offset = "0x1300760", VA = "0x1300760")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x13008EC", Offset = "0x13008EC", VA = "0x13008EC", Slot = "16")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1300A30", Offset = "0x1300A30", VA = "0x1300A30")]
		private void checkSlideInput()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x1300B54", Offset = "0x1300B54", VA = "0x1300B54")]
		private void checkEjectInput()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1300C78", Offset = "0x1300C78", VA = "0x1300C78", Slot = "27")]
		public virtual void CheckReloadInput()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1300DA8", Offset = "0x1300DA8", VA = "0x1300DA8", Slot = "28")]
		public virtual void UnlockSlide()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1300E3C", Offset = "0x1300E3C", VA = "0x1300E3C", Slot = "29")]
		public virtual void EjectMagazine()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1300EF0", Offset = "0x1300EF0", VA = "0x1300EF0", Slot = "30")]
		public virtual void Shoot()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x130152C", Offset = "0x130152C", VA = "0x130152C", Slot = "31")]
		public virtual void ApplyRecoil()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1301678", Offset = "0x1301678", VA = "0x1301678", Slot = "32")]
		public virtual void OnRaycastHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x13019B0", Offset = "0x13019B0", VA = "0x13019B0", Slot = "33")]
		public virtual void ApplyParticleFX(Vector3 position, Quaternion rotation, Collider attachTo)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1301B24", Offset = "0x1301B24", VA = "0x1301B24", Slot = "34")]
		public virtual void OnAttachedAmmo()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1301B5C", Offset = "0x1301B5C", VA = "0x1301B5C", Slot = "35")]
		public virtual void OnDetachedAmmo()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1301B94", Offset = "0x1301B94", VA = "0x1301B94", Slot = "36")]
		public virtual int GetBulletCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1301C30", Offset = "0x1301C30", VA = "0x1301C30", Slot = "37")]
		public virtual void RemoveBullet()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1301D54", Offset = "0x1301D54", VA = "0x1301D54", Slot = "38")]
		public virtual void Reload()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1300834", Offset = "0x1300834", VA = "0x1300834")]
		private void updateChamberedBullet()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x13014D4", Offset = "0x13014D4", VA = "0x13014D4")]
		private void chamberRound()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1301D60", Offset = "0x1301D60", VA = "0x1301D60")]
		private void randomizeMuzzleFlashScaleRotation()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1301E28", Offset = "0x1301E28", VA = "0x1301E28", Slot = "39")]
		public virtual void OnWeaponCharged(bool allowCasingEject)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x1301EE8", Offset = "0x1301EE8", VA = "0x1301EE8", Slot = "40")]
		protected virtual void ejectCasing()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x1302070", Offset = "0x1302070", VA = "0x1302070", Slot = "41")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E8198", Offset = "0x7E8198")]
		protected virtual IEnumerator doMuzzleFlash()
		{
			return null;
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x13020DC", Offset = "0x13020DC", VA = "0x13020DC", Slot = "42")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E81F8", Offset = "0x7E81F8")]
		protected virtual IEnumerator animateSlideAndEject()
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x1302148", Offset = "0x1302148", VA = "0x1302148")]
		public RaycastWeapon()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public enum FiringType
	{
		[Token(Token = "0x4001B59")]
		Semi,
		[Token(Token = "0x4001B5A")]
		Automatic
	}
	[Token(Token = "0x200044B")]
	public enum ReloadType
	{
		[Token(Token = "0x4001B5C")]
		InfiniteAmmo,
		[Token(Token = "0x4001B5D")]
		ManualClip,
		[Token(Token = "0x4001B5E")]
		InternalAmmo
	}
	[Token(Token = "0x200044C")]
	public class WeaponSlide : MonoBehaviour
	{
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD320", Offset = "0x7CD320")]
		private sealed class <UnlockSlideRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponSlide <>4__this;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E36")]
				[Address(RVA = "0xCC913C", Offset = "0xCC913C", VA = "0xCC913C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E38")]
				[Address(RVA = "0xCC9184", Offset = "0xCC9184", VA = "0xCC9184", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xCC9060", Offset = "0xCC9060", VA = "0xCC9060")]
			[DebuggerHidden]
			public <UnlockSlideRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xCC908C", Offset = "0xCC908C", VA = "0xCC908C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xCC9090", Offset = "0xCC9090", VA = "0xCC9090", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xCC9144", Offset = "0xCC9144", VA = "0xCC9144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinLocalZ;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLocalZ;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool slidingBack;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool LockedBack;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SlideReleaseSound;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip LockedBackSound;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ZeroMassWhenNotHeld;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable parentGrabbable;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float initialMass;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _lockPosition;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool lockSlidePosition;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xDF6674", Offset = "0xDF6674", VA = "0xDF6674")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xDF683C", Offset = "0xDF683C", VA = "0xDF683C", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xDF68F0", Offset = "0xDF68F0", VA = "0xDF68F0", Slot = "5")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xDF69A4", Offset = "0xDF69A4", VA = "0xDF69A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xDF6C80", Offset = "0xDF6C80", VA = "0xDF6C80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xDF6D78", Offset = "0xDF6D78", VA = "0xDF6D78", Slot = "6")]
		public virtual void LockBack()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xDF6E14", Offset = "0xDF6E14", VA = "0xDF6E14", Slot = "7")]
		public virtual void UnlockBack()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xDF6B48", Offset = "0xDF6B48", VA = "0xDF6B48")]
		private void onSlideBack()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xDF6C1C", Offset = "0xDF6C1C", VA = "0xDF6C1C")]
		private void onSlideForward()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xDF706C", Offset = "0xDF706C", VA = "0xDF706C", Slot = "8")]
		public virtual void LockSlidePosition()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xDF70DC", Offset = "0xDF70DC", VA = "0xDF70DC", Slot = "9")]
		public virtual void UnlockSlidePosition()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xDF7114", Offset = "0xDF7114", VA = "0xDF7114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E82F8", Offset = "0x7E82F8")]
		public IEnumerator UnlockSlideRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xDF6F2C", Offset = "0xDF6F2C", VA = "0xDF6F2C")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xDF7180", Offset = "0xDF7180", VA = "0xDF7180")]
		public WeaponSlide()
		{
		}
	}
}
namespace DinoFractureDemo
{
	[Token(Token = "0x200044E")]
	public enum ButtonState
	{
		[Token(Token = "0x4001B73")]
		Rest,
		[Token(Token = "0x4001B74")]
		Hover,
		[Token(Token = "0x4001B75")]
		Pressed
	}
	[Token(Token = "0x200044F")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D RestTexture;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D HoverTexture;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D PressedTexture;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ButtonState _state;

		[Token(Token = "0x17000557")]
		public ButtonState State
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x10C05CC", Offset = "0x10C05CC", VA = "0x10C05CC")]
			get
			{
				return default(ButtonState);
			}
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x10C05D4", Offset = "0x10C05D4", VA = "0x10C05D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x10C0644", Offset = "0x10C0644", VA = "0x10C0644")]
		public bool UpdateState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x10C0838", Offset = "0x10C0838", VA = "0x10C0838")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD330", Offset = "0x7CD330")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD330", Offset = "0x7CD330")]
	public class FractureOnClick : MonoBehaviour
	{
		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x1453FC4", Offset = "0x1453FC4", VA = "0x1453FC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x145417C", Offset = "0x145417C", VA = "0x145417C")]
		public FractureOnClick()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class GameRoot : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD3C4", Offset = "0x7CD3C4")]
		private sealed class <ResetCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameRoot <>4__this;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0xF275CC", Offset = "0xF275CC", VA = "0xF275CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E49")]
				[Address(RVA = "0xF27614", Offset = "0xF27614", VA = "0xF27614", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xF27480", Offset = "0xF27480", VA = "0xF27480")]
			[DebuggerHidden]
			public <ResetCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xF274AC", Offset = "0xF274AC", VA = "0xF274AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xF274B0", Offset = "0xF274B0", VA = "0xF274B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xF275D4", Offset = "0xF275D4", VA = "0xF275D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameRoot _Instance;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Main;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject BackupRoot;

		[Token(Token = "0x17000558")]
		public static GameRoot Instance
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x145D920", Offset = "0x145D920", VA = "0x145D920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x145D96C", Offset = "0x145D96C", VA = "0x145D96C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x145DA50", Offset = "0x145DA50", VA = "0x145DA50")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x145DA94", Offset = "0x145DA94", VA = "0x145DA94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E83A8", Offset = "0x7E83A8")]
		public IEnumerator ResetCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x145DB00", Offset = "0x145DB00", VA = "0x145DB00")]
		public GameRoot()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class TurnOffLightOnFracture : MonoBehaviour
	{
		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xDE8024", Offset = "0xDE8024", VA = "0xDE8024")]
		private void OnFracture(OnFractureEventArgs fractureRoot)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xDE80CC", Offset = "0xDE80CC", VA = "0xDE80CC")]
		public TurnOffLightOnFracture()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class UI : MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject CannonBallTemplate;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject BackButton;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ForwardButton;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ResetButton;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int PanelCount;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int StartPanelIndex;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float PanelWidth;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve MoveCurve;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MoveTime;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _targetPanel;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _moveStartPos;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _moveT;

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xDE8858", Offset = "0xDE8858", VA = "0xDE8858")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xDE88CC", Offset = "0xDE88CC", VA = "0xDE88CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xDE8870", Offset = "0xDE8870", VA = "0xDE8870")]
		private void SetButtonStates()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xDE8E04", Offset = "0xDE8E04", VA = "0xDE8E04")]
		public UI()
		{
		}
	}
}
namespace DinoFracture
{
	[Token(Token = "0x2000455")]
	public class DisableObjectsOnFracture : MonoBehaviour
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] ObjectsToDisable;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x105F0F4", Offset = "0x105F0F4", VA = "0x105F0F4")]
		private void OnFracture(OnFractureEventArgs e)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x105F1E0", Offset = "0x105F1E0", VA = "0x105F1E0")]
		public DisableObjectsOnFracture()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public sealed class OnFractureEventArgs
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FractureGeometry OriginalObject;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FracturePiecesRootObject;

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xFF6B30", Offset = "0xFF6B30", VA = "0xFF6B30")]
		public OnFractureEventArgs(FractureGeometry orig, GameObject root)
		{
		}
	}
	[Token(Token = "0x2000457")]
	public sealed class AsyncFractureResult
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DC28C", Offset = "0x7DC28C")]
		private bool <IsComplete>k__BackingField;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DC29C", Offset = "0x7DC29C")]
		private GameObject <PiecesRoot>k__BackingField;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DC2AC", Offset = "0x7DC2AC")]
		private Bounds <EntireMeshBounds>k__BackingField;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DC2BC", Offset = "0x7DC2BC")]
		private bool <StopRequested>k__BackingField;

		[Token(Token = "0x1700055B")]
		public bool IsComplete
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x110B064", Offset = "0x110B064", VA = "0x110B064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8458", Offset = "0x7E8458")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x110B06C", Offset = "0x110B06C", VA = "0x110B06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8468", Offset = "0x7E8468")]
			private set
			{
			}
		}

		[Token(Token = "0x1700055C")]
		public GameObject PiecesRoot
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x110B078", Offset = "0x110B078", VA = "0x110B078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8478", Offset = "0x7E8478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x110B080", Offset = "0x110B080", VA = "0x110B080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8488", Offset = "0x7E8488")]
			private set
			{
			}
		}

		[Token(Token = "0x1700055D")]
		public Bounds EntireMeshBounds
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x110B088", Offset = "0x110B088", VA = "0x110B088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8498", Offset = "0x7E8498")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x110B09C", Offset = "0x110B09C", VA = "0x110B09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E84A8", Offset = "0x7E84A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700055E")]
		internal bool StopRequested
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x110B0B0", Offset = "0x110B0B0", VA = "0x110B0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E84B8", Offset = "0x7E84B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x110B0B8", Offset = "0x110B0B8", VA = "0x110B0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E84C8", Offset = "0x7E84C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x110B0C4", Offset = "0x110B0C4", VA = "0x110B0C4")]
		internal void SetResult(GameObject rootGO, Bounds bounds)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x110B180", Offset = "0x110B180", VA = "0x110B180")]
		public void StopFracture()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x110B18C", Offset = "0x110B18C", VA = "0x110B18C")]
		public AsyncFractureResult()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public sealed class FractureEngine : MonoBehaviour
	{
		[Token(Token = "0x2000459")]
		private struct FractureInstance
		{
			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncFractureResult Result;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IEnumerator Enumerator;

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xF21AB4", Offset = "0xF21AB4", VA = "0xF21AB4")]
			public FractureInstance(AsyncFractureResult result, IEnumerator enumerator)
			{
			}
		}

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD3D4", Offset = "0x7CD3D4")]
		private sealed class <WaitForResults>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncFractureOperation operation;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool transferMass;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FractureGeometry callback;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform piecesParent;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool hideAfterFracture;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AsyncFractureResult result;

			[Token(Token = "0x17000562")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6D")]
				[Address(RVA = "0xF21A64", Offset = "0xF21A64", VA = "0xF21A64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000563")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0xF21AAC", Offset = "0xF21AAC", VA = "0xF21AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xF20F60", Offset = "0xF20F60", VA = "0xF20F60")]
			[DebuggerHidden]
			public <WaitForResults>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xF20F8C", Offset = "0xF20F8C", VA = "0xF20F8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xF20F90", Offset = "0xF20F90", VA = "0xF20F90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xF21A6C", Offset = "0xF21A6C", VA = "0xF21A6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FractureEngine _instance;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _suspended;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FractureInstance> _runningFractures;

		[Token(Token = "0x1700055F")]
		private static FractureEngine Instance
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x1453220", Offset = "0x1453220", VA = "0x1453220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000560")]
		public static bool Suspended
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x145332C", Offset = "0x145332C", VA = "0x145332C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x145334C", Offset = "0x145334C", VA = "0x145334C")]
			set
			{
			}
		}

		[Token(Token = "0x17000561")]
		public static bool HasFracturesInProgress
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x145337C", Offset = "0x145337C", VA = "0x145337C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x14533D4", Offset = "0x14533D4", VA = "0x14533D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1453478", Offset = "0x1453478", VA = "0x1453478")]
		public static AsyncFractureResult StartFracture(FractureDetails details, FractureGeometry callback, Transform piecesParent, bool transferMass, bool hideAfterFracture)
		{
			return null;
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1453828", Offset = "0x1453828", VA = "0x1453828")]
		private void OnEditorUpdate()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1453A5C", Offset = "0x1453A5C", VA = "0x1453A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x14538D4", Offset = "0x14538D4", VA = "0x14538D4")]
		private void UpdateFractures()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1453778", Offset = "0x1453778", VA = "0x1453778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E84D8", Offset = "0x7E84D8")]
		private IEnumerator WaitForResults(AsyncFractureOperation operation, FractureGeometry callback, Transform piecesParent, bool transferMass, bool hideAfterFracture, AsyncFractureResult result)
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x1453A60", Offset = "0x1453A60", VA = "0x1453A60")]
		public FractureEngine()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public abstract class FractureGeometry : MonoBehaviour
	{
		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material InsideMaterial;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject FractureTemplate;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform PiecesParent;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int NumFracturePieces;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int NumIterations;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int NumGenerations;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float FractureRadius;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FractureUVScale UVScale;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool DistributeMass;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _processingFracture;

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x1453AD8", Offset = "0x1453AD8", VA = "0x1453AD8")]
		public AsyncFractureResult Fracture()
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x1453B28", Offset = "0x1453B28", VA = "0x1453B28")]
		public AsyncFractureResult Fracture(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1453B4C", Offset = "0x1453B4C", VA = "0x1453B4C")]
		protected AsyncFractureResult Fracture(FractureDetails details, bool hideAfterFracture)
		{
			return null;
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x1453F0C", Offset = "0x1453F0C", VA = "0x1453F0C")]
		protected void StopFracture()
		{
		}

		[Token(Token = "0x6001E74")]
		protected abstract AsyncFractureResult FractureInternal(Vector3 localPos);

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1453F14", Offset = "0x1453F14", VA = "0x1453F14", Slot = "5")]
		internal virtual void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1453FA0", Offset = "0x1453FA0", VA = "0x1453FA0")]
		protected FractureGeometry()
		{
		}
	}
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD3E4", Offset = "0x7CD3E4")]
	public class FractureOnCollision : MonoBehaviour
	{
		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ForceThreshold;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ForceFalloffRadius;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AdjustForKinematic;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _impactVelocity;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _impactMass;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _impactPoint;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _impactBody;

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1454184", Offset = "0x1454184", VA = "0x1454184")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1454188", Offset = "0x1454188", VA = "0x1454188")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x14544FC", Offset = "0x14544FC", VA = "0x14544FC")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x1454848", Offset = "0x1454848", VA = "0x1454848")]
		public FractureOnCollision()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class GlueEdgeOnFracture : MonoBehaviour
	{
		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CollisionTag;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _collisionCount;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _fractureFrame;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RigidbodyConstraints _rigidBodyConstraints;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _rigidBodyVelocity;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _rigidBodyAngularVelocity;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _impactPoint;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _impactVelocity;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _impactMass;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x17384F0", Offset = "0x17384F0", VA = "0x17384F0")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x1738750", Offset = "0x1738750", VA = "0x1738750")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x17387C0", Offset = "0x17387C0", VA = "0x17387C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x1738ABC", Offset = "0x1738ABC", VA = "0x1738ABC")]
		private void OnFracture(OnFractureEventArgs fractureRoot)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x17389B0", Offset = "0x17389B0", VA = "0x17389B0")]
		private void SetGlued(bool glued)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x1738BFC", Offset = "0x1738BFC", VA = "0x1738BFC")]
		public GlueEdgeOnFracture()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class NotifyOnFracture : MonoBehaviour
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] GameObjects;

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xFF01C8", Offset = "0xFF01C8", VA = "0xFF01C8")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xFF0334", Offset = "0xFF0334", VA = "0xFF0334")]
		public NotifyOnFracture()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD444", Offset = "0x7CD444")]
	public class PlaySoundOnFracture : MonoBehaviour
	{
		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xFFD098", Offset = "0xFFD098", VA = "0xFFD098")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xFFD480", Offset = "0xFFD480", VA = "0xFFD480")]
		public PlaySoundOnFracture()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class PreFracturedGeometry : FractureGeometry
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject GeneratedPieces;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Bounds EntireMeshBounds;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<PreFracturedGeometry> _completionCallback;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncFractureResult _runningFracture;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _ignoreOnFractured;

		[Token(Token = "0x17000564")]
		public AsyncFractureResult RunningFracture
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x12FD718", Offset = "0x12FD718", VA = "0x12FD718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x12FD720", Offset = "0x12FD720", VA = "0x12FD720")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x12FD724", Offset = "0x12FD724", VA = "0x12FD724")]
		public void Prime()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x12FD820", Offset = "0x12FD820", VA = "0x12FD820")]
		public void GenerateFractureMeshes(Action<PreFracturedGeometry> completedCallback)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x12FD850", Offset = "0x12FD850", VA = "0x12FD850")]
		public void GenerateFractureMeshes(Vector3 localPoint, Action<PreFracturedGeometry> completedCallback)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x12FDB04", Offset = "0x12FDB04", VA = "0x12FDB04")]
		public void StopRunningFracture()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x12FDB40", Offset = "0x12FDB40", VA = "0x12FDB40")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x12FDA6C", Offset = "0x12FDA6C", VA = "0x12FDA6C")]
		private void OnPreFractureComplete()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x12FDB58", Offset = "0x12FDB58", VA = "0x12FDB58", Slot = "4")]
		protected override AsyncFractureResult FractureInternal(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x12FDE04", Offset = "0x12FDE04", VA = "0x12FDE04")]
		private void EnableFracturePieces()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x12FDEA8", Offset = "0x12FDEA8", VA = "0x12FDEA8", Slot = "5")]
		internal override void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x12FDF00", Offset = "0x12FDF00", VA = "0x12FDF00")]
		public PreFracturedGeometry()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class RuntimeFracturedGeometry : FractureGeometry
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool Asynchronous;

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xD9C338", Offset = "0xD9C338", VA = "0xD9C338", Slot = "4")]
		protected override AsyncFractureResult FractureInternal(Vector3 localPos)
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xD9C398", Offset = "0xD9C398", VA = "0xD9C398")]
		public RuntimeFracturedGeometry()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class TransferJointsOnFracture : MonoBehaviour
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform IncomingJointsSearchRoot;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DistanceTolerance;

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xE84AC0", Offset = "0xE84AC0", VA = "0xE84AC0")]
		private void OnFracture(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xE84B90", Offset = "0xE84B90", VA = "0xE84B90")]
		private void TransferOurJoint(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xE8534C", Offset = "0xE8534C", VA = "0xE8534C")]
		private void RewriteOtherJoints(OnFractureEventArgs args)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xE85780", Offset = "0xE85780", VA = "0xE85780")]
		public TransferJointsOnFracture()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class TriggerExplosionOnCollision : MonoBehaviour
	{
		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FractureGeometry[] Explosives;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Force;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Radius;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xDE7748", Offset = "0xDE7748", VA = "0xDE7748")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xDE7960", Offset = "0xDE7960", VA = "0xDE7960")]
		private void Explode(GameObject root, Bounds bounds)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xDE7AFC", Offset = "0xDE7AFC", VA = "0xDE7AFC")]
		public TriggerExplosionOnCollision()
		{
		}
	}
}
namespace DinoFracture.Internal
{
	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD4A4", Offset = "0x7CD4A4")]
	public class DestroyOnAudioFinish : MonoBehaviour
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _source;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x105C7F4", Offset = "0x105C7F4", VA = "0x105C7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x105C854", Offset = "0x105C854", VA = "0x105C854")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x105C8F0", Offset = "0x105C8F0", VA = "0x105C8F0")]
		public DestroyOnAudioFinish()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD504", Offset = "0x7CD504")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD504", Offset = "0x7CD504")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7DC2CC", Offset = "0x7DC2CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC2CC", Offset = "0x7DC2CC")]
		private MediaPlayer _media;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC32C", Offset = "0x7DC32C")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC378", Offset = "0x7DC378")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7DC378", Offset = "0x7DC378")]
		private Material _material;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture _originalTexture;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _originalScale;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 _originalOffset;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propCroppingScalars;

		[Token(Token = "0x4001BD8")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propChromaTex;

		[Token(Token = "0x4001BDA")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001BDC")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x17000565")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x1676294", Offset = "0x1676294", VA = "0x1676294")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x167629C", Offset = "0x167629C", VA = "0x167629C")]
			set
			{
			}
		}

		[Token(Token = "0x17000566")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x1676478", Offset = "0x1676478", VA = "0x1676478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x1676480", Offset = "0x1676480", VA = "0x1676480")]
			set
			{
			}
		}

		[Token(Token = "0x17000567")]
		public Material Material
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x167650C", Offset = "0x167650C", VA = "0x167650C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x1676514", Offset = "0x1676514", VA = "0x1676514")]
			set
			{
			}
		}

		[Token(Token = "0x17000568")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x16765A0", Offset = "0x16765A0", VA = "0x16765A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x16765A8", Offset = "0x16765A8", VA = "0x16765A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000569")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x16765F4", Offset = "0x16765F4", VA = "0x16765F4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x16765FC", Offset = "0x16765FC", VA = "0x16765FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700056A")]
		public Vector2 Scale
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x1676634", Offset = "0x1676634", VA = "0x1676634")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x167663C", Offset = "0x167663C", VA = "0x167663C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1676674", Offset = "0x1676674", VA = "0x1676674")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x16762A0", Offset = "0x16762A0", VA = "0x16762A0")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1676964", Offset = "0x1676964", VA = "0x1676964")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x1676EDC", Offset = "0x1676EDC", VA = "0x1676EDC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1676970", Offset = "0x1676970", VA = "0x1676970")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1676EFC", Offset = "0x1676EFC", VA = "0x1676EFC")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1677664", Offset = "0x1677664", VA = "0x1677664")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x16777A0", Offset = "0x16777A0", VA = "0x16777A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x16777DC", Offset = "0x16777DC", VA = "0x16777DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x1677688", Offset = "0x1677688", VA = "0x1677688")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x16777E0", Offset = "0x16777E0", VA = "0x16777E0")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x1677900", Offset = "0x1677900", VA = "0x1677900")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD568", Offset = "0x7CD568")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD568", Offset = "0x7CD568")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC408", Offset = "0x7DC408")]
		private MediaPlayer _media;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DC454", Offset = "0x7DC454")]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7DC4A0", Offset = "0x7DC4A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DC4A0", Offset = "0x7DC4A0")]
		private Renderer _mesh;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4001BEB")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x4001BED")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001BEF")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propCroppingScalars;

		[Token(Token = "0x1700056B")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x1677984", Offset = "0x1677984", VA = "0x1677984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x167798C", Offset = "0x167798C", VA = "0x167798C")]
			set
			{
			}
		}

		[Token(Token = "0x1700056C")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x1677B68", Offset = "0x1677B68", VA = "0x1677B68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x1677B70", Offset = "0x1677B70", VA = "0x1677B70")]
			set
			{
			}
		}

		[Token(Token = "0x1700056D")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x1677BFC", Offset = "0x1677BFC", VA = "0x1677BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x1677C04", Offset = "0x1677C04", VA = "0x1677C04")]
			set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x1677C90", Offset = "0x1677C90", VA = "0x1677C90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1677C98", Offset = "0x1677C98", VA = "0x1677C98")]
			set
			{
			}
		}

		[Token(Token = "0x1700056F")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x1677CE4", Offset = "0x1677CE4", VA = "0x1677CE4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x1677CEC", Offset = "0x1677CEC", VA = "0x1677CEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000570")]
		public Vector2 Scale
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x1677D24", Offset = "0x1677D24", VA = "0x1677D24")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x1677D2C", Offset = "0x1677D2C", VA = "0x1677D2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1677D64", Offset = "0x1677D64", VA = "0x1677D64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1678054", Offset = "0x1678054", VA = "0x1678054")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1678540", Offset = "0x1678540", VA = "0x1678540")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1677990", Offset = "0x1677990", VA = "0x1677990")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x1678060", Offset = "0x1678060", VA = "0x1678060")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x1678560", Offset = "0x1678560", VA = "0x1678560")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x1678C4C", Offset = "0x1678C4C", VA = "0x1678C4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x1678DC4", Offset = "0x1678DC4", VA = "0x1678DC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x1678DD4", Offset = "0x1678DD4", VA = "0x1678DD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x1678DDC", Offset = "0x1678DDC", VA = "0x1678DDC")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class AudioChannelMixer : MonoBehaviour
	{
		[Token(Token = "0x4001BF2")]
		private const int MaxChannels = 8;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC530", Offset = "0x7DC530")]
		[SerializeField]
		private float[] _channels;

		[Token(Token = "0x17000571")]
		public float[] Channel
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x11138C4", Offset = "0x11138C4", VA = "0x11138C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x11138CC", Offset = "0x11138CC", VA = "0x11138CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x11138D4", Offset = "0x11138D4", VA = "0x11138D4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x111396C", Offset = "0x111396C", VA = "0x111396C")]
		private void ChangeChannelCount(int numChannels)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x1113A9C", Offset = "0x1113A9C", VA = "0x1113A9C")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x1113B80", Offset = "0x1113B80", VA = "0x1113B80")]
		public AudioChannelMixer()
		{
		}
	}
	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD5CC", Offset = "0x7CD5CC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD5CC", Offset = "0x7CD5CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD5CC", Offset = "0x7CD5CC")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x2000469")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x4001BF9")]
			Single,
			[Token(Token = "0x4001BFA")]
			Multiple
		}

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x1113B88", Offset = "0x1113B88", VA = "0x1113B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x1113BDC", Offset = "0x1113BDC", VA = "0x1113BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x1113D98", Offset = "0x1113D98", VA = "0x1113D98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x1113DA0", Offset = "0x1113DA0", VA = "0x1113DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1113BE4", Offset = "0x1113BE4", VA = "0x1113BE4")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x1114150", Offset = "0x1114150", VA = "0x1114150")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x1113ED8", Offset = "0x1113ED8", VA = "0x1113ED8")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x11141B8", Offset = "0x11141B8", VA = "0x11141B8")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD678", Offset = "0x7CD678")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD678", Offset = "0x7CD678")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD678", Offset = "0x7CD678")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CD678", Offset = "0x7CD678")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x200046B")]
		public enum Layout
		{
			[Token(Token = "0x4001C0D")]
			FacebookTransform32,
			[Token(Token = "0x4001C0E")]
			Facebook360Capture
		}

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propStereo;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4001C08")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x4001C0A")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x17000572")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x1055740", Offset = "0x1055740", VA = "0x1055740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x1055738", Offset = "0x1055738", VA = "0x1055738")]
			set
			{
			}
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x1055748", Offset = "0x1055748", VA = "0x1055748")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x10558AC", Offset = "0x10558AC", VA = "0x10558AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1056040", Offset = "0x1056040", VA = "0x1056040")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x105619C", Offset = "0x105619C", VA = "0x105619C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x1055A4C", Offset = "0x1055A4C", VA = "0x1055A4C")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x10569CC", Offset = "0x10569CC", VA = "0x10569CC")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x1056E04", Offset = "0x1056E04", VA = "0x1056E04")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD758", Offset = "0x7CD758")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x4001C14")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x4001C15")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x17000573")]
		public bool DisplayControls
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1058A94", Offset = "0x1058A94", VA = "0x1058A94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x1058A9C", Offset = "0x1058A9C", VA = "0x1058A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000574")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x1058AA8", Offset = "0x1058AA8", VA = "0x1058AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x1058AB0", Offset = "0x1058AB0", VA = "0x1058AB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x1058B34", Offset = "0x1058B34", VA = "0x1058B34")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1058B7C", Offset = "0x1058B7C", VA = "0x1058B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x1058B84", Offset = "0x1058B84", VA = "0x1058B84")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x105A3CC", Offset = "0x105A3CC", VA = "0x105A3CC")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD794", Offset = "0x7CD794")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD794", Offset = "0x7CD794")]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x105F5E4", Offset = "0x105F5E4", VA = "0x105F5E4")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x105F794", Offset = "0x105F794", VA = "0x105F794")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD808", Offset = "0x7CD808")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD808", Offset = "0x7CD808")]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x4001C1A")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001C1B")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC620", Offset = "0x7DC620")]
		public float _x;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC638", Offset = "0x7DC638")]
		public float _y;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC650", Offset = "0x7DC650")]
		public float _width;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC668", Offset = "0x7DC668")]
		public float _height;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x105F79C", Offset = "0x105F79C", VA = "0x105F79C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x105F8C8", Offset = "0x105F8C8", VA = "0x105F8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x105FA30", Offset = "0x105FA30", VA = "0x105FA30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x105FAD8", Offset = "0x105FAD8", VA = "0x105FAD8")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x105FD5C", Offset = "0x105FD5C", VA = "0x105FD5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1060080", Offset = "0x1060080", VA = "0x1060080")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x10609A4", Offset = "0x10609A4", VA = "0x10609A4")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1060A90", Offset = "0x1060A90", VA = "0x1060A90")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD87C", Offset = "0x7CD87C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD87C", Offset = "0x7CD87C")]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _lastWidth;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _lastHeight;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _flipY;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Texture _lastTexture;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4001C42")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x4001C44")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int _propCroppingScalars;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _userMaterial;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material _material;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<int> QuadIndices;

		[Token(Token = "0x17000575")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x106161C", Offset = "0x106161C", VA = "0x106161C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000576")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x1062608", Offset = "0x1062608", VA = "0x1062608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x1062610", Offset = "0x1062610", VA = "0x1062610")]
			set
			{
			}
		}

		[Token(Token = "0x17000577")]
		public Rect uvRect
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x10626B4", Offset = "0x10626B4", VA = "0x10626B4")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x10626C0", Offset = "0x10626C0", VA = "0x10626C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1060AE0", Offset = "0x1060AE0", VA = "0x1060AE0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1060CF4", Offset = "0x1060CF4", VA = "0x1060CF4")]
		private static bool HasMask(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1060E54", Offset = "0x1060E54", VA = "0x1060E54")]
		private static Shader EnsureShader(Shader shader, string name)
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1060F78", Offset = "0x1060F78", VA = "0x1060F78")]
		private static Shader EnsureAlphaPackingShader()
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x106100C", Offset = "0x106100C", VA = "0x106100C")]
		private static Shader EnsureStereoPackingShader()
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x10610A4", Offset = "0x10610A4", VA = "0x10610A4")]
		private Shader EnsureAndroidOESShader()
		{
			return null;
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x1061138", Offset = "0x1061138", VA = "0x1061138", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1061228", Offset = "0x1061228", VA = "0x1061228", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x10612F0", Offset = "0x10612F0", VA = "0x10612F0")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x10617D0", Offset = "0x10617D0", VA = "0x10617D0")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1061940", Offset = "0x1061940", VA = "0x1061940")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x1061B38", Offset = "0x1061B38", VA = "0x1061B38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1062750", Offset = "0x1062750", VA = "0x1062750", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7E8588", Offset = "0x7E8588")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1062948", Offset = "0x1062948", VA = "0x1062948", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1062FFC", Offset = "0x1062FFC", VA = "0x1062FFC", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7E85C0", Offset = "0x7E85C0")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x10629EC", Offset = "0x10629EC", VA = "0x10629EC")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1063000", Offset = "0x1063000", VA = "0x1063000")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1063590", Offset = "0x1063590", VA = "0x1063590")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD8F0", Offset = "0x7CD8F0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD8F0", Offset = "0x7CD8F0")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000471")]
		public class Setup
		{
			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xDBA3EC", Offset = "0xDBA3EC", VA = "0xDBA3EC")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x2000472")]
		public enum FileLocation
		{
			[Token(Token = "0x4001C96")]
			AbsolutePathOrURL,
			[Token(Token = "0x4001C97")]
			RelativeToProjectFolder,
			[Token(Token = "0x4001C98")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x4001C99")]
			RelativeToDataFolder,
			[Token(Token = "0x4001C9A")]
			RelativeToPersistentDataFolder
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		public class PlatformOptions
		{
			[Serializable]
			[Token(Token = "0x2000474")]
			public struct HTTPHeader
			{
				[Token(Token = "0x4001C9E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string header;

				[Token(Token = "0x4001C9F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string value;

				[Token(Token = "0x6001F76")]
				[Address(RVA = "0xCC918C", Offset = "0xCC918C", VA = "0xCC918C")]
				public HTTPHeader(string header, string value)
				{
				}
			}

			[Token(Token = "0x2000475")]
			private enum ParseJSONHeadersState
			{
				[Token(Token = "0x4001CA1")]
				Begin,
				[Token(Token = "0x4001CA2")]
				FindKey,
				[Token(Token = "0x4001CA3")]
				ReadKey,
				[Token(Token = "0x4001CA4")]
				FindColon,
				[Token(Token = "0x4001CA5")]
				FindValue,
				[Token(Token = "0x4001CA6")]
				ReadValue,
				[Token(Token = "0x4001CA7")]
				FindComma,
				[Token(Token = "0x4001CA8")]
				Finished,
				[Token(Token = "0x4001CA9")]
				Failed
			}

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xDBA33C", Offset = "0xDBA33C", VA = "0xDBA33C", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xDBA344", Offset = "0xDBA344", VA = "0xDBA344", Slot = "5")]
			public virtual string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xDBA34C", Offset = "0xDBA34C", VA = "0xDBA34C", Slot = "6")]
			public virtual string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xDBA354", Offset = "0xDBA354", VA = "0xDBA354", Slot = "7")]
			public virtual string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xDB92C4", Offset = "0xDB92C4", VA = "0xDB92C4")]
			protected static string StringAsJsonString(string str)
			{
				return null;
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xDB980C", Offset = "0xDB980C", VA = "0xDB980C")]
			protected static List<HTTPHeader> ParseJsonHTTPHeadersIntoHTTPHeaderList(string httpHeaderJson)
			{
				return null;
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xDB9C40", Offset = "0xDB9C40", VA = "0xDB9C40")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000476")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xDBA118", Offset = "0xDBA118", VA = "0xDBA118", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xDBA1D4", Offset = "0xDBA1D4", VA = "0xDBA1D4")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000477")]
		public class OptionsApple : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x2000478")]
			public enum AudioMode
			{
				[Token(Token = "0x4001CBC")]
				SystemDirect,
				[Token(Token = "0x4001CBD")]
				Unity
			}

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioMode audioMode;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Multiline]
			[SerializeField]
			private string httpHeaderJson;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string keyServerURLOverride;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string keyServerAuthToken;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Multiline]
			public string base64EncodedKeyBlob;

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xDB9C50", Offset = "0xDB9C50", VA = "0xDB9C50")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xDB9E88", Offset = "0xDB9E88", VA = "0xDB9E88", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xDB9F34", Offset = "0xDB9F34", VA = "0xDB9F34", Slot = "5")]
			public override string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xDB9F3C", Offset = "0xDB9F3C", VA = "0xDB9F3C", Slot = "6")]
			public override string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xDB9F44", Offset = "0xDB9F44", VA = "0xDB9F44", Slot = "7")]
			public override string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0xDB9F4C", Offset = "0xDB9F4C", VA = "0xDB9F4C", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xDB9FB8", Offset = "0xDB9FB8", VA = "0xDB9FB8", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xDB9FF4", Offset = "0xDB9FF4", VA = "0xDB9FF4")]
			public OptionsApple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000479")]
		public class OptionsMacOSX : OptionsApple
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xDBA0C0", Offset = "0xDBA0C0", VA = "0xDBA0C0")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047A")]
		public class OptionsIOS : OptionsApple
		{
			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool resumePlaybackOnAudioSessionRouteChange;

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xDBA074", Offset = "0xDBA074", VA = "0xDBA074", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xDBA0B4", Offset = "0xDBA0B4", VA = "0xDBA0B4")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047B")]
		public class OptionsTVOS : OptionsIOS
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xDBA0D4", Offset = "0xDBA0D4", VA = "0xDBA0D4")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047C")]
		public class OptionsAndroid : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[Multiline]
			private string httpHeaderJson;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DCA50", Offset = "0x7DCA50")]
			public int fileOffset;

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xDB908C", Offset = "0xDB908C", VA = "0xDB908C")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xDB96C4", Offset = "0xDB96C4", VA = "0xDB96C4", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xDB9764", Offset = "0xDB9764", VA = "0xDB9764", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xDB97D0", Offset = "0xDB97D0", VA = "0xDB97D0", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xDB9BB4", Offset = "0xDB9BB4", VA = "0xDB9BB4")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047D")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xDBA284", Offset = "0xDBA284", VA = "0xDBA284", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xDBA2C4", Offset = "0xDBA2C4", VA = "0xDBA2C4")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047E")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xDBA2E0", Offset = "0xDBA2E0", VA = "0xDBA2E0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xDBA320", Offset = "0xDBA320", VA = "0xDBA320")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047F")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebGL.ExternalLibrary externalLibrary;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useTextureMips;

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xDBA0E0", Offset = "0xDBA0E0", VA = "0xDBA0E0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xDBA108", Offset = "0xDBA108", VA = "0xDBA108")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000480")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xDBA0C4", Offset = "0xDBA0C4", VA = "0xDBA0C4")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x2000481")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD954", Offset = "0x7CD954")]
		private sealed class <LoadSubtitlesCoroutine>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000596")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0xDB903C", Offset = "0xDB903C", VA = "0xDB903C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000597")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F9A")]
				[Address(RVA = "0xDB9084", Offset = "0xDB9084", VA = "0xDB9084", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xDB8D7C", Offset = "0xDB8D7C", VA = "0xDB8D7C")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xDB8DA8", Offset = "0xDB8DA8", VA = "0xDB8DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xDB8DAC", Offset = "0xDB8DAC", VA = "0xDB8DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xDB9044", Offset = "0xDB9044", VA = "0xDB9044", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD964", Offset = "0x7CD964")]
		private sealed class <FinalRenderCapture>d__188 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x17000598")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F9E")]
				[Address(RVA = "0xDB8D2C", Offset = "0xDB8D2C", VA = "0xDB8D2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000599")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA0")]
				[Address(RVA = "0xDB8D74", Offset = "0xDB8D74", VA = "0xDB8D74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xDB8BBC", Offset = "0xDB8BBC", VA = "0xDB8BBC")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__188(int <>1__state)
			{
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xDB8BE8", Offset = "0xDB8BE8", VA = "0xDB8BE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xDB8BEC", Offset = "0xDB8BEC", VA = "0xDB8BEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xDB8D34", Offset = "0xDB8D34", VA = "0xDB8D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD974", Offset = "0x7CD974")]
		private sealed class <ExtractFrameCoroutine>d__209 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int timeThresholdMs;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool accurateSeek;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <result>5__2;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currFc>5__3;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <iterations>5__4;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <maxIterations>5__5;

			[Token(Token = "0x1700059A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA4")]
				[Address(RVA = "0xDB8B6C", Offset = "0xDB8B6C", VA = "0xDB8B6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA6")]
				[Address(RVA = "0xDB8BB4", Offset = "0xDB8BB4", VA = "0xDB8BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xDB7F88", Offset = "0xDB7F88", VA = "0xDB7F88")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__209(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xDB7FB4", Offset = "0xDB7FB4", VA = "0xDB7FB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xDB7FB8", Offset = "0xDB7FB8", VA = "0xDB7FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xDB8B74", Offset = "0xDB8B74", VA = "0xDB8B74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC6F0", Offset = "0x7DC6F0")]
		public float m_Volume;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC708", Offset = "0x7DC708")]
		private float m_Balance;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC748", Offset = "0x7DC748")]
		[SerializeField]
		public float m_PlaybackRate;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC788", Offset = "0x7DC788")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC7C0", Offset = "0x7DC7C0")]
		public int m_AnisoLevel;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC838", Offset = "0x7DC838")]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7DC880", Offset = "0x7DC880")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_eventMask;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _pauseMediaOnAppPause;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool _playMediaOnAppUnpause;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaControl m_Control;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaInfo m_Info;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IDisposable m_Dispose;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_VideoOpened;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool m_WasPlayingOnExternalPause;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_EventFired_Started;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x17000578")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x1123FA0", Offset = "0x1123FA0", VA = "0x1123FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000579")]
		public bool Persistent
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x1123FA8", Offset = "0x1123FA8", VA = "0x1123FA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x1123FB0", Offset = "0x1123FB0", VA = "0x1123FB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700057A")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x1123FBC", Offset = "0x1123FBC", VA = "0x1123FBC")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x1123FC4", Offset = "0x1123FC4", VA = "0x1123FC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700057B")]
		public virtual IMediaInfo Info
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x1123FCC", Offset = "0x1123FCC", VA = "0x1123FCC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		public virtual IMediaControl Control
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x1123FD4", Offset = "0x1123FD4", VA = "0x1123FD4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057D")]
		public virtual IMediaPlayer Player
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x1123FDC", Offset = "0x1123FDC", VA = "0x1123FDC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x1123FE4", Offset = "0x1123FE4", VA = "0x1123FE4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057F")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x1123FEC", Offset = "0x1123FEC", VA = "0x1123FEC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x1123FF4", Offset = "0x1123FF4", VA = "0x1123FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000581")]
		public bool VideoOpened
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x11240E8", Offset = "0x11240E8", VA = "0x11240E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000582")]
		public bool PauseMediaOnAppPause
		{
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x11240F0", Offset = "0x11240F0", VA = "0x11240F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x11240F8", Offset = "0x11240F8", VA = "0x11240F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public bool PlayMediaOnAppUnpause
		{
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x1124104", Offset = "0x1124104", VA = "0x1124104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x112410C", Offset = "0x112410C", VA = "0x112410C")]
			set
			{
			}
		}

		[Token(Token = "0x17000584")]
		public FileFormat ForceFileFormat
		{
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x1124118", Offset = "0x1124118", VA = "0x1124118")]
			get
			{
				return default(FileFormat);
			}
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x1124120", Offset = "0x1124120", VA = "0x1124120")]
			set
			{
			}
		}

		[Token(Token = "0x17000585")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x1124130", Offset = "0x1124130", VA = "0x1124130")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x1124128", Offset = "0x1124128", VA = "0x1124128")]
			set
			{
			}
		}

		[Token(Token = "0x17000586")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x1124138", Offset = "0x1124138", VA = "0x1124138")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x1124140", Offset = "0x1124140", VA = "0x1124140")]
			set
			{
			}
		}

		[Token(Token = "0x17000587")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x112414C", Offset = "0x112414C", VA = "0x112414C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x1124154", Offset = "0x1124154", VA = "0x1124154")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x112415C", Offset = "0x112415C", VA = "0x112415C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x1124164", Offset = "0x1124164", VA = "0x1124164")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x112416C", Offset = "0x112416C", VA = "0x112416C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x1124174", Offset = "0x1124174", VA = "0x1124174")]
			set
			{
			}
		}

		[Token(Token = "0x1700058A")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x112417C", Offset = "0x112417C", VA = "0x112417C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058B")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1124184", Offset = "0x1124184", VA = "0x1124184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058C")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x112418C", Offset = "0x112418C", VA = "0x112418C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058D")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1124194", Offset = "0x1124194", VA = "0x1124194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058E")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x112419C", Offset = "0x112419C", VA = "0x112419C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058F")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x11241A4", Offset = "0x11241A4", VA = "0x11241A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x11241AC", Offset = "0x11241AC", VA = "0x11241AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000591")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x11241B4", Offset = "0x11241B4", VA = "0x11241B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x11241BC", Offset = "0x11241BC", VA = "0x11241BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000593")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x1125348", Offset = "0x1125348", VA = "0x1125348")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000594")]
		public string SubtitlePath
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x1125350", Offset = "0x1125350", VA = "0x1125350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000595")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x1125358", Offset = "0x1125358", VA = "0x1125358")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x11241C4", Offset = "0x11241C4", VA = "0x11241C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1124250", Offset = "0x1124250", VA = "0x1124250")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1124560", Offset = "0x1124560", VA = "0x1124560")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1124D20", Offset = "0x1124D20", VA = "0x1124D20")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x111C8F4", Offset = "0x111C8F4", VA = "0x111C8F4")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x111CB9C", Offset = "0x111CB9C", VA = "0x111CB9C")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x111CD78", Offset = "0x111CD78", VA = "0x111CD78")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x111CD7C", Offset = "0x111CD7C", VA = "0x111CD7C")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x11248F0", Offset = "0x11248F0", VA = "0x11248F0")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1125424", Offset = "0x1125424", VA = "0x1125424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E85F8", Offset = "0x7E85F8")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x11254B4", Offset = "0x11254B4", VA = "0x11254B4")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1124D64", Offset = "0x1124D64", VA = "0x1124D64")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1124F64", Offset = "0x1124F64", VA = "0x1124F64")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1125158", Offset = "0x1125158", VA = "0x1125158")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1125268", Offset = "0x1125268", VA = "0x1125268")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x11245E4", Offset = "0x11245E4", VA = "0x11245E4")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x11255C8", Offset = "0x11255C8", VA = "0x11255C8")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x111CC1C", Offset = "0x111CC1C", VA = "0x111CC1C")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1125C6C", Offset = "0x1125C6C", VA = "0x1125C6C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1125DB0", Offset = "0x1125DB0", VA = "0x1125DB0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1125EE0", Offset = "0x1125EE0", VA = "0x1125EE0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1125F98", Offset = "0x1125F98", VA = "0x1125F98")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1126078", Offset = "0x1126078", VA = "0x1126078", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1126FD4", Offset = "0x1126FD4", VA = "0x1126FD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x1126FD8", Offset = "0x1126FD8", VA = "0x1126FD8")]
		private void UpdateResampler()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x11270BC", Offset = "0x11270BC", VA = "0x11270BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x112718C", Offset = "0x112718C", VA = "0x112718C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1127268", Offset = "0x1127268", VA = "0x1127268", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x112733C", Offset = "0x112733C", VA = "0x112733C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1124CE0", Offset = "0x1124CE0", VA = "0x1124CE0")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1125C3C", Offset = "0x1125C3C", VA = "0x1125C3C")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x11274B8", Offset = "0x11274B8", VA = "0x11274B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E8658", Offset = "0x7E8658")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1125360", Offset = "0x1125360", VA = "0x1125360")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1127524", Offset = "0x1127524", VA = "0x1127524")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x112752C", Offset = "0x112752C", VA = "0x112752C")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1127658", Offset = "0x1127658", VA = "0x1127658")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1125B10", Offset = "0x1125B10", VA = "0x1125B10")]
		private string GetPlatformVideoApiString()
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1125A9C", Offset = "0x1125A9C", VA = "0x1125A9C")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1125AB8", Offset = "0x1125AB8", VA = "0x1125AB8")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1125368", Offset = "0x1125368", VA = "0x1125368")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1127760", Offset = "0x1127760", VA = "0x1127760", Slot = "11")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1127A00", Offset = "0x1127A00", VA = "0x1127A00")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x11264FC", Offset = "0x11264FC", VA = "0x11264FC")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1126348", Offset = "0x1126348", VA = "0x1126348")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1126734", Offset = "0x1126734", VA = "0x1126734")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1126934", Offset = "0x1126934", VA = "0x1126934")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1125C20", Offset = "0x1125C20", VA = "0x1125C20")]
		protected bool IsHandleEvent(MediaPlayerEvent.EventType eventType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1127C90", Offset = "0x1127C90", VA = "0x1127C90")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x1127D20", Offset = "0x1127D20", VA = "0x1127D20")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1128650", Offset = "0x1128650", VA = "0x1128650")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x112874C", Offset = "0x112874C", VA = "0x112874C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x11288E0", Offset = "0x11288E0", VA = "0x11288E0")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1128B8C", Offset = "0x1128B8C", VA = "0x1128B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E86B8", Offset = "0x7E86B8")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1128C38", Offset = "0x1128C38", VA = "0x1128C38")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1128C68", Offset = "0x1128C68", VA = "0x1128C68")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1128E84", Offset = "0x1128E84", VA = "0x1128E84")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1129310", Offset = "0x1129310", VA = "0x1129310")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000485")]
	public class MediaPlaylist
	{
		[Serializable]
		[Token(Token = "0x2000486")]
		public class MediaItem
		{
			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MediaPlayer.FileLocation fileLocation;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string filePath;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool loop;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public PlaylistMediaPlayer.StartMode startMode;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public PlaylistMediaPlayer.ProgressMode progressMode;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public float progressTimeSeconds;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool autoPlay;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public StereoPacking stereoPacking;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public AlphaPacking alphaPacking;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public bool isOverrideTransition;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public PlaylistMediaPlayer.Transition overrideTransition;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public float overrideTransitionDuration;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public PlaylistMediaPlayer.Easing overrideTransitionEasing;

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xDBA3F4", Offset = "0xDBA3F4", VA = "0xDBA3F4")]
			public MediaItem()
			{
			}
		}

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<MediaItem> _items;

		[Token(Token = "0x1700059C")]
		public List<MediaItem> Items
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x1129708", Offset = "0x1129708", VA = "0x1129708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1129710", Offset = "0x1129710", VA = "0x1129710")]
		public bool HasItemAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x112977C", Offset = "0x112977C", VA = "0x112977C")]
		public MediaPlaylist()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD984", Offset = "0x7CD984")]
	public class PlaylistMediaPlayer : MediaPlayer, IMediaProducer
	{
		[Token(Token = "0x2000488")]
		public enum Transition
		{
			[Token(Token = "0x4001D15")]
			None,
			[Token(Token = "0x4001D16")]
			Fade,
			[Token(Token = "0x4001D17")]
			Black,
			[Token(Token = "0x4001D18")]
			White,
			[Token(Token = "0x4001D19")]
			Transparent,
			[Token(Token = "0x4001D1A")]
			Horiz,
			[Token(Token = "0x4001D1B")]
			Vert,
			[Token(Token = "0x4001D1C")]
			Diag,
			[Token(Token = "0x4001D1D")]
			MirrorH,
			[Token(Token = "0x4001D1E")]
			MirrorV,
			[Token(Token = "0x4001D1F")]
			MirrorD,
			[Token(Token = "0x4001D20")]
			ScrollV,
			[Token(Token = "0x4001D21")]
			ScrollH,
			[Token(Token = "0x4001D22")]
			Circle,
			[Token(Token = "0x4001D23")]
			Diamond,
			[Token(Token = "0x4001D24")]
			Blinds,
			[Token(Token = "0x4001D25")]
			Arrows,
			[Token(Token = "0x4001D26")]
			SlideH,
			[Token(Token = "0x4001D27")]
			SlideV,
			[Token(Token = "0x4001D28")]
			Zoom,
			[Token(Token = "0x4001D29")]
			RectV,
			[Token(Token = "0x4001D2A")]
			Random
		}

		[Token(Token = "0x2000489")]
		public enum PlaylistLoopMode
		{
			[Token(Token = "0x4001D2C")]
			None,
			[Token(Token = "0x4001D2D")]
			Loop
		}

		[Token(Token = "0x200048A")]
		public enum StartMode
		{
			[Token(Token = "0x4001D2F")]
			Immediate,
			[Token(Token = "0x4001D30")]
			Manual
		}

		[Token(Token = "0x200048B")]
		public enum ProgressMode
		{
			[Token(Token = "0x4001D32")]
			OnFinish,
			[Token(Token = "0x4001D33")]
			BeforeFinish,
			[Token(Token = "0x4001D34")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x200048C")]
		public class Easing
		{
			[Token(Token = "0x200048D")]
			public enum Preset
			{
				[Token(Token = "0x4001D37")]
				Step,
				[Token(Token = "0x4001D38")]
				Linear,
				[Token(Token = "0x4001D39")]
				InQuad,
				[Token(Token = "0x4001D3A")]
				OutQuad,
				[Token(Token = "0x4001D3B")]
				InOutQuad,
				[Token(Token = "0x4001D3C")]
				InCubic,
				[Token(Token = "0x4001D3D")]
				OutCubic,
				[Token(Token = "0x4001D3E")]
				InOutCubic,
				[Token(Token = "0x4001D3F")]
				InQuint,
				[Token(Token = "0x4001D40")]
				OutQuint,
				[Token(Token = "0x4001D41")]
				InOutQuint,
				[Token(Token = "0x4001D42")]
				InQuart,
				[Token(Token = "0x4001D43")]
				OutQuart,
				[Token(Token = "0x4001D44")]
				InOutQuart,
				[Token(Token = "0x4001D45")]
				InExpo,
				[Token(Token = "0x4001D46")]
				OutExpo,
				[Token(Token = "0x4001D47")]
				InOutExpo,
				[Token(Token = "0x4001D48")]
				Random,
				[Token(Token = "0x4001D49")]
				RandomNotStep
			}

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Preset preset;

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xDC02A4", Offset = "0xDC02A4", VA = "0xDC02A4")]
			public static Func<float, float> GetFunction(Preset preset)
			{
				return null;
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xDC0590", Offset = "0xDC0590", VA = "0xDC0590")]
			public static float PowerEaseIn(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0xDC0594", Offset = "0xDC0594", VA = "0xDC0594")]
			public static float PowerEaseOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xDC05BC", Offset = "0xDC05BC", VA = "0xDC05BC")]
			public static float PowerEaseInOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xDC0614", Offset = "0xDC0614", VA = "0xDC0614")]
			public static float Step(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xDC062C", Offset = "0xDC062C", VA = "0xDC062C")]
			public static float Linear(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0xDC0630", Offset = "0xDC0630", VA = "0xDC0630")]
			public static float InQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xDC0638", Offset = "0xDC0638", VA = "0xDC0638")]
			public static float OutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xDC0654", Offset = "0xDC0654", VA = "0xDC0654")]
			public static float InOutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xDC0698", Offset = "0xDC0698", VA = "0xDC0698")]
			public static float InCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xDC06A0", Offset = "0xDC06A0", VA = "0xDC06A0")]
			public static float OutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xDC06CC", Offset = "0xDC06CC", VA = "0xDC06CC")]
			public static float InOutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xDC072C", Offset = "0xDC072C", VA = "0xDC072C")]
			public static float InQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xDC0734", Offset = "0xDC0734", VA = "0xDC0734")]
			public static float OutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xDC0760", Offset = "0xDC0760", VA = "0xDC0760")]
			public static float InOutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xDC07C0", Offset = "0xDC07C0", VA = "0xDC07C0")]
			public static float InQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xDC07C8", Offset = "0xDC07C8", VA = "0xDC07C8")]
			public static float OutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xDC07F4", Offset = "0xDC07F4", VA = "0xDC07F4")]
			public static float InOutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xDC0854", Offset = "0xDC0854", VA = "0xDC0854")]
			public static float InExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xDC0878", Offset = "0xDC0878", VA = "0xDC0878")]
			public static float OutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xDC08AC", Offset = "0xDC08AC", VA = "0xDC08AC")]
			public static float InOutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xDC091C", Offset = "0xDC091C", VA = "0xDC091C")]
			public Easing()
			{
			}
		}

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private MediaPlayer _playerA;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private MediaPlayer _playerB;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _playlistAutoProgress;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DCBAC", Offset = "0x7DCBAC")]
		[SerializeField]
		private bool _autoCloseVideo;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private PlaylistLoopMode _playlistLoopMode;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private MediaPlaylist _playlist;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DCC18", Offset = "0x7DCC18")]
		private bool _pausePreviousOnTransition;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Transition _nextTransition;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Easing _transitionEasing;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propFromTex;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propT;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _playlistIndex;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MediaPlayer _nextPlayer;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Shader _shader;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _material;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Transition _currentTransition;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string _currentTransitionName;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _currentTransitionDuration;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Easing.Preset _currentTransitionEasing;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _textureTimer;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _transitionTimer;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Func<float, float> _easeFunc;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _rt;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private MediaPlaylist.MediaItem _currentItem;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MediaPlaylist.MediaItem _nextItem;

		[Token(Token = "0x1700059D")]
		public MediaPlayer CurrentPlayer
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x12FA7BC", Offset = "0x12FA7BC", VA = "0x12FA7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059E")]
		public MediaPlayer NextPlayer
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x12FA84C", Offset = "0x12FA84C", VA = "0x12FA84C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059F")]
		public MediaPlaylist Playlist
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x12FA854", Offset = "0x12FA854", VA = "0x12FA854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		public int PlaylistIndex
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x12FA85C", Offset = "0x12FA85C", VA = "0x12FA85C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005A1")]
		public MediaPlaylist.MediaItem PlaylistItem
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x12FA864", Offset = "0x12FA864", VA = "0x12FA864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A2")]
		public PlaylistLoopMode LoopMode
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x12FA8F8", Offset = "0x12FA8F8", VA = "0x12FA8F8")]
			get
			{
				return default(PlaylistLoopMode);
			}
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x12FA900", Offset = "0x12FA900", VA = "0x12FA900")]
			set
			{
			}
		}

		[Token(Token = "0x170005A3")]
		public bool AutoProgress
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x12FA908", Offset = "0x12FA908", VA = "0x12FA908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x12FA910", Offset = "0x12FA910", VA = "0x12FA910")]
			set
			{
			}
		}

		[Token(Token = "0x170005A4")]
		public override IMediaInfo Info
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x12FA91C", Offset = "0x12FA91C", VA = "0x12FA91C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A5")]
		public override IMediaControl Control
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x12FA9C4", Offset = "0x12FA9C4", VA = "0x12FA9C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		public override IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x12FAA6C", Offset = "0x12FAA6C", VA = "0x12FAA6C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x12FABC0", Offset = "0x12FABC0", VA = "0x12FABC0")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x12FAF44", Offset = "0x12FAF44", VA = "0x12FAF44")]
		private Texture GetCurrentTexture()
		{
			return null;
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x12FB08C", Offset = "0x12FB08C", VA = "0x12FB08C")]
		private Texture GetNextTexture()
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x12FB1C0", Offset = "0x12FB1C0", VA = "0x12FB1C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x12FB2E0", Offset = "0x12FB2E0", VA = "0x12FB2E0", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x12FB3D0", Offset = "0x12FB3D0", VA = "0x12FB3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x12FB660", Offset = "0x12FB660", VA = "0x12FB660")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x12FB8B0", Offset = "0x12FB8B0", VA = "0x12FB8B0")]
		public bool PrevItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x12FB828", Offset = "0x12FB828", VA = "0x12FB828")]
		public bool NextItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x12FB8BC", Offset = "0x12FB8BC", VA = "0x12FB8BC")]
		public bool CanJumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x12FB56C", Offset = "0x12FB56C", VA = "0x12FB56C")]
		public bool JumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x12FB950", Offset = "0x12FB950", VA = "0x12FB950")]
		public void OpenVideoFile(MediaPlaylist.MediaItem mediaItem)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x12FAB28", Offset = "0x12FAB28", VA = "0x12FAB28")]
		private bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x12FBB10", Offset = "0x12FBB10", VA = "0x12FBB10")]
		private void SetTransition(Transition transition, float duration, Easing.Preset easing)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x12FBD28", Offset = "0x12FBD28", VA = "0x12FBD28", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x12FC284", Offset = "0x12FC284", VA = "0x12FC284", Slot = "13")]
		public Texture GetTexture(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x12FC28C", Offset = "0x12FC28C", VA = "0x12FC28C", Slot = "12")]
		public int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x12FC350", Offset = "0x12FC350", VA = "0x12FC350", Slot = "14")]
		public int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x12FC418", Offset = "0x12FC418", VA = "0x12FC418", Slot = "15")]
		public bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x12FC4E0", Offset = "0x12FC4E0", VA = "0x12FC4E0", Slot = "16")]
		public long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x12FC5A8", Offset = "0x12FC5A8", VA = "0x12FC5A8", Slot = "17")]
		public bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x12FC670", Offset = "0x12FC670", VA = "0x12FC670", Slot = "18")]
		public Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x12FBBC4", Offset = "0x12FBBC4", VA = "0x12FBBC4")]
		private static string GetTransitionName(Transition transition)
		{
			return null;
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x12FC764", Offset = "0x12FC764", VA = "0x12FC764")]
		public PlaylistMediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048E")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x200048F")]
		public enum EventType
		{
			[Token(Token = "0x4001D4B")]
			Success,
			[Token(Token = "0x4001D4C")]
			Failed
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xE7D06C", Offset = "0xE7D06C", VA = "0xE7D06C")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		public enum StreamType
		{
			[Token(Token = "0x4001D56")]
			HLS
		}

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x170005A7")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xE7D008", Offset = "0xE7D008", VA = "0xE7D008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		public bool Loaded
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xE7D36C", Offset = "0xE7D36C", VA = "0xE7D36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A9")]
		public Stream Root
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xE7D374", Offset = "0xE7D374", VA = "0xE7D374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AA")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xE7D38C", Offset = "0xE7D38C", VA = "0xE7D38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AB")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xE7D3A4", Offset = "0xE7D3A4", VA = "0xE7D3A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xE7D0B8", Offset = "0xE7D0B8", VA = "0xE7D0B8")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xE7D3BC", Offset = "0xE7D3BC", VA = "0xE7D3BC")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xE7D46C", Offset = "0xE7D46C", VA = "0xE7D46C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xE7D47C", Offset = "0xE7D47C", VA = "0xE7D47C")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD9C0", Offset = "0x7CD9C0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CD9C0", Offset = "0x7CD9C0")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xE7D8A0", Offset = "0xE7D8A0", VA = "0xE7D8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xE7DA4C", Offset = "0xE7DA4C", VA = "0xE7DA4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xE7D8A8", Offset = "0xE7D8A8", VA = "0xE7D8A8")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xE7DA54", Offset = "0xE7DA54", VA = "0xE7DA54")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xE7DC48", Offset = "0xE7DC48", VA = "0xE7DC48")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CDA24", Offset = "0x7CDA24")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7CDA24", Offset = "0x7CDA24")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DCCB4", Offset = "0x7DCCB4")]
		public Camera _camera;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7DCCEC", Offset = "0x7DCCEC")]
		public MeshRenderer _renderer;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _foundCamera;

		[Token(Token = "0x170005AC")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xDEADC4", Offset = "0xDEADC4", VA = "0xDEADC4")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xDEADCC", Offset = "0xDEADCC", VA = "0xDEADCC")]
			set
			{
			}
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xDEADD4", Offset = "0xDEADD4", VA = "0xDEADD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xDEAF28", Offset = "0xDEAF28", VA = "0xDEAF28")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xDEB060", Offset = "0xDEB060", VA = "0xDEB060")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xDEB424", Offset = "0xDEB424", VA = "0xDEB424")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x2000495")]
		private struct Native
		{
			[Token(Token = "0x2000496")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x4001D87")]
				Nop,
				[Token(Token = "0x4001D88")]
				PlayerSetup,
				[Token(Token = "0x4001D89")]
				PlayerUpdate,
				[Token(Token = "0x4001D8A")]
				PlayerDestroy,
				[Token(Token = "0x4001D8B")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xF18F5C", Offset = "0xF18F5C", VA = "0xF18F5C")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xF18FD0", Offset = "0xF18FD0", VA = "0xF18FD0")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002045")]
			[Address(RVA = "0xF19050", Offset = "0xF19050", VA = "0xF19050")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xF190CC", Offset = "0xF190CC", VA = "0xF190CC")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xF1914C", Offset = "0xF1914C", VA = "0xF1914C")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xF191CC", Offset = "0xF191CC", VA = "0xF191CC")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002049")]
			[Address(RVA = "0xF1924C", Offset = "0xF1924C", VA = "0xF1924C")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600204A")]
			[Address(RVA = "0xF192CC", Offset = "0xF192CC", VA = "0xF192CC")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x600204B")]
			[Address(RVA = "0xF1934C", Offset = "0xF1934C", VA = "0xF1934C")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D m_Texture;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_TextureHandle;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_DurationMs;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_Width;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Height;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Android.VideoApi m_API;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool m_FocusEnabled;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntPtr m_Method_Update;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntPtr m_Method_SetHeadRotation;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntPtr m_Method_GetCurrentTimeMs;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IntPtr m_Method_GetSourceVideoFrameRate;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IntPtr m_Method_IsPlaying;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr m_Method_IsPaused;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IntPtr m_Method_IsFinished;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IntPtr m_Method_IsSeeking;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IntPtr m_Method_IsBuffering;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IntPtr m_Method_IsLooping;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IntPtr m_Method_HasVideo;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IntPtr m_Method_HasAudio;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IntPtr m_Method_SetFocusProps;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IntPtr m_Method_SetFocusEnabled;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IntPtr m_Method_SetFocusRotation;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private jvalue[] m_Value0;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private jvalue[] m_Value1;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private jvalue[] m_Value2;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private jvalue[] m_Value4;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _textureQuality;

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1665C18", Offset = "0x1665C18", VA = "0x1665C18")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x16660B4", Offset = "0x16660B4", VA = "0x16660B4")]
		public static void DeinitPlatform()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1666264", Offset = "0x1666264", VA = "0x1666264")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1666300", Offset = "0x1666300", VA = "0x1666300")]
		private IntPtr GetMethod(string methodName, string signature)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1666478", Offset = "0x1666478", VA = "0x1666478")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1666C20", Offset = "0x1666C20", VA = "0x1666C20")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1666D88", Offset = "0x1666D88", VA = "0x1666D88", Slot = "183")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1666EE8", Offset = "0x1666EE8", VA = "0x1666EE8", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1666F4C", Offset = "0x1666F4C", VA = "0x1666F4C", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1667180", Offset = "0x1667180", VA = "0x1667180")]
		private void DisplayLoadFailureSuggestion(string path)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1667240", Offset = "0x1667240", VA = "0x1667240", Slot = "123")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x16673C0", Offset = "0x16673C0", VA = "0x16673C0", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1667540", Offset = "0x1667540", VA = "0x1667540", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1667640", Offset = "0x1667640", VA = "0x1667640", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x16677B8", Offset = "0x16677B8", VA = "0x16677B8", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1667930", Offset = "0x1667930", VA = "0x1667930", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1667AA8", Offset = "0x1667AA8", VA = "0x1667AA8", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1667B0C", Offset = "0x1667B0C", VA = "0x1667B0C", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1667B18", Offset = "0x1667B18", VA = "0x1667B18", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1667C20", Offset = "0x1667C20", VA = "0x1667C20", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1667D28", Offset = "0x1667D28", VA = "0x1667D28", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1667E30", Offset = "0x1667E30", VA = "0x1667E30", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1667F54", Offset = "0x1667F54", VA = "0x1667F54", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1668078", Offset = "0x1668078", VA = "0x1668078", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x16681E4", Offset = "0x16681E4", VA = "0x16681E4", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x16682F0", Offset = "0x16682F0", VA = "0x16682F0", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x1668410", Offset = "0x1668410", VA = "0x1668410", Slot = "169")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1668730", Offset = "0x1668730", VA = "0x1668730", Slot = "170")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x166883C", Offset = "0x166883C", VA = "0x166883C", Slot = "172")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x16689BC", Offset = "0x16689BC", VA = "0x16689BC", Slot = "173")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1668B98", Offset = "0x1668B98", VA = "0x1668B98", Slot = "174")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1668E30", Offset = "0x1668E30", VA = "0x1668E30", Slot = "175")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x16692A4", Offset = "0x16692A4", VA = "0x16692A4", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x16692AC", Offset = "0x16692AC", VA = "0x16692AC", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x16692B4", Offset = "0x16692B4", VA = "0x16692B4", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x16692BC", Offset = "0x16692BC", VA = "0x16692BC", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1669434", Offset = "0x1669434", VA = "0x1669434", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1669558", Offset = "0x1669558", VA = "0x1669558", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1669564", Offset = "0x1669564", VA = "0x1669564", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x16696DC", Offset = "0x16696DC", VA = "0x16696DC", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1669854", Offset = "0x1669854", VA = "0x1669854", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x16699CC", Offset = "0x16699CC", VA = "0x16699CC", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1669B44", Offset = "0x1669B44", VA = "0x1669B44", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1669CBC", Offset = "0x1669CBC", VA = "0x1669CBC", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1669CFC", Offset = "0x1669CFC", VA = "0x1669CFC", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1669D88", Offset = "0x1669D88", VA = "0x1669D88", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1669D90", Offset = "0x1669D90", VA = "0x1669D90", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1669E90", Offset = "0x1669E90", VA = "0x1669E90", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1669FB0", Offset = "0x1669FB0", VA = "0x1669FB0", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x166A0BC", Offset = "0x166A0BC", VA = "0x166A0BC", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x166A1DC", Offset = "0x166A1DC", VA = "0x166A1DC", Slot = "159")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x166A2E8", Offset = "0x166A2E8", VA = "0x166A2E8", Slot = "161")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x166A408", Offset = "0x166A408", VA = "0x166A408", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x166A528", Offset = "0x166A528", VA = "0x166A528", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x166A648", Offset = "0x166A648", VA = "0x166A648", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x166A744", Offset = "0x166A744", VA = "0x166A744", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x166A77C", Offset = "0x166A77C", VA = "0x166A77C", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x166A784", Offset = "0x166A784", VA = "0x166A784", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x166A7B8", Offset = "0x166A7B8", VA = "0x166A7B8", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x166A7C0", Offset = "0x166A7C0", VA = "0x166A7C0", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x166A7C4", Offset = "0x166A7C4", VA = "0x166A7C4", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x166A808", Offset = "0x166A808", VA = "0x166A808", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x166A928", Offset = "0x166A928", VA = "0x166A928", Slot = "138")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x166AB78", Offset = "0x166AB78", VA = "0x166AB78", Slot = "152")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x166AC98", Offset = "0x166AC98", VA = "0x166AC98", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x166B394", Offset = "0x166B394", VA = "0x166B394", Slot = "192")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x166B39C", Offset = "0x166B39C", VA = "0x166B39C", Slot = "198")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x166B4A8", Offset = "0x166B4A8", VA = "0x166B4A8", Slot = "122")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x166B5C8", Offset = "0x166B5C8", VA = "0x166B5C8", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x166B760", Offset = "0x166B760", VA = "0x166B760", Slot = "189")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x166B768", Offset = "0x166B768", VA = "0x166B768", Slot = "154")]
		public override float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x166B880", Offset = "0x166B880", VA = "0x166B880", Slot = "187")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class AudioOutputManager
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x170005AD")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x600204C")]
			[Address(RVA = "0x11141D0", Offset = "0x11141D0", VA = "0x11141D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x111428C", Offset = "0x111428C", VA = "0x111428C")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1114348", Offset = "0x1114348", VA = "0x1114348")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x11149F4", Offset = "0x11149F4", VA = "0x11149F4")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x2000498")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _isSeekingStarted;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _stallDetectionTimer;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _stallDetectionFrame;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x6002051")]
		public abstract string GetVersion();

		[Token(Token = "0x6002052")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x11193B0", Offset = "0x11193B0", VA = "0x11193B0", Slot = "105")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x11193B8", Offset = "0x11193B8", VA = "0x11193B8", Slot = "106")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x11193C0", Offset = "0x11193C0", VA = "0x11193C0", Slot = "107")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x11193C8", Offset = "0x11193C8", VA = "0x11193C8", Slot = "108")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x11193D0", Offset = "0x11193D0", VA = "0x11193D0", Slot = "109")]
		public virtual void CloseVideo()
		{
		}

		[Token(Token = "0x6002058")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x6002059")]
		public abstract bool IsLooping();

		[Token(Token = "0x600205A")]
		public abstract bool HasMetaData();

		[Token(Token = "0x600205B")]
		public abstract bool CanPlay();

		[Token(Token = "0x600205C")]
		public abstract void Play();

		[Token(Token = "0x600205D")]
		public abstract void Pause();

		[Token(Token = "0x600205E")]
		public abstract void Stop();

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x11193E0", Offset = "0x11193E0", VA = "0x11193E0", Slot = "117")]
		public virtual void Rewind()
		{
		}

		[Token(Token = "0x6002060")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x6002061")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x11193F4", Offset = "0x11193F4", VA = "0x11193F4", Slot = "120")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x6002063")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1119404", Offset = "0x1119404", VA = "0x1119404", Slot = "122")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x111940C", Offset = "0x111940C", VA = "0x111940C", Slot = "123")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x6002067")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x6002068")]
		public abstract float GetDurationMs();

		[Token(Token = "0x6002069")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x600206A")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1119414", Offset = "0x1119414", VA = "0x1119414", Slot = "129")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600206C")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x600206D")]
		public abstract bool HasAudio();

		[Token(Token = "0x600206E")]
		public abstract bool HasVideo();

		[Token(Token = "0x600206F")]
		public abstract bool IsSeeking();

		[Token(Token = "0x6002070")]
		public abstract bool IsPlaying();

		[Token(Token = "0x6002071")]
		public abstract bool IsPaused();

		[Token(Token = "0x6002072")]
		public abstract bool IsFinished();

		[Token(Token = "0x6002073")]
		public abstract bool IsBuffering();

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1119454", Offset = "0x1119454", VA = "0x1119454", Slot = "138")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x111945C", Offset = "0x111945C", VA = "0x111945C", Slot = "139")]
		public virtual void SetPlayWithoutBuffering(bool playWithoutBuffering)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1119460", Offset = "0x1119460", VA = "0x1119460", Slot = "140")]
		public virtual void SetKeyServerURL(string url)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1119464", Offset = "0x1119464", VA = "0x1119464", Slot = "141")]
		public virtual void SetKeyServerAuthToken(string token)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1119468", Offset = "0x1119468", VA = "0x1119468", Slot = "142")]
		public virtual void SetDecryptionKeyBase64(string key)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x111946C", Offset = "0x111946C", VA = "0x111946C", Slot = "143")]
		public virtual void SetDecryptionKey(byte[] key)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1119470", Offset = "0x1119470", VA = "0x1119470", Slot = "144")]
		public virtual bool IsExternalPlaybackSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1119478", Offset = "0x1119478", VA = "0x1119478", Slot = "145")]
		public virtual bool IsExternalPlaybackActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x1119480", Offset = "0x1119480", VA = "0x1119480", Slot = "146")]
		public virtual void SetAllowsExternalPlayback(bool allowsExternalPlayback)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1119484", Offset = "0x1119484", VA = "0x1119484", Slot = "147")]
		public virtual void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1119488", Offset = "0x1119488", VA = "0x1119488", Slot = "148")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x600207F")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x6002080")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1119490", Offset = "0x1119490", VA = "0x1119490", Slot = "151")]
		public virtual bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1119498", Offset = "0x1119498", VA = "0x1119498", Slot = "152")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6002083")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x11194A0", Offset = "0x11194A0", VA = "0x11194A0", Slot = "154")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x111951C", Offset = "0x111951C", VA = "0x111951C", Slot = "155")]
		public virtual Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002086")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x6002087")]
		public abstract bool IsMuted();

		[Token(Token = "0x6002088")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x111955C", Offset = "0x111955C", VA = "0x111955C", Slot = "159")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x600208A")]
		public abstract float GetVolume();

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x1119560", Offset = "0x1119560", VA = "0x1119560", Slot = "161")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x600208C")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x1119568", Offset = "0x1119568", VA = "0x1119568", Slot = "163")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x600208E")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x600208F")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x6002090")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x6002091")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1119590", Offset = "0x1119590", VA = "0x1119590", Slot = "168")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x1119598", Offset = "0x1119598", VA = "0x1119598", Slot = "169")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x111959C", Offset = "0x111959C", VA = "0x111959C", Slot = "170")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x11195A0", Offset = "0x11195A0", VA = "0x11195A0", Slot = "171")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x11195A4", Offset = "0x11195A4", VA = "0x11195A4", Slot = "172")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x11195A8", Offset = "0x11195A8", VA = "0x11195A8", Slot = "173")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x11195AC", Offset = "0x11195AC", VA = "0x11195AC", Slot = "174")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x11195B0", Offset = "0x11195B0", VA = "0x11195B0", Slot = "175")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x600209A")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x11195B4", Offset = "0x11195B4", VA = "0x11195B4", Slot = "177")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x600209C")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x600209D")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x600209E")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x600209F")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x60020A0")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x11195DC", Offset = "0x11195DC", VA = "0x11195DC", Slot = "183")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x60020A2")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x60020A3")]
		public abstract void Update();

		[Token(Token = "0x60020A4")]
		public abstract void Render();

		[Token(Token = "0x60020A5")]
		public abstract void Dispose();

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x11195E4", Offset = "0x11195E4", VA = "0x11195E4", Slot = "49")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x11195EC", Offset = "0x11195EC", VA = "0x11195EC", Slot = "188")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x11195F4", Offset = "0x11195F4", VA = "0x11195F4", Slot = "87")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x11195FC", Offset = "0x11195FC", VA = "0x11195FC", Slot = "189")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1119604", Offset = "0x1119604", VA = "0x1119604", Slot = "190")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x111960C", Offset = "0x111960C", VA = "0x111960C", Slot = "191")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1119614", Offset = "0x1119614", VA = "0x1119614", Slot = "51")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x11196A4", Offset = "0x11196A4", VA = "0x11196A4", Slot = "192")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x1119764", Offset = "0x1119764", VA = "0x1119764", Slot = "193")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x1119768", Offset = "0x1119768", VA = "0x1119768")]
		protected bool IsExpectingNewVideoFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x11197EC", Offset = "0x11197EC", VA = "0x11197EC", Slot = "194")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x111988C", Offset = "0x111988C", VA = "0x111988C", Slot = "22")]
		public bool IsSeekingStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x11198AC", Offset = "0x11198AC", VA = "0x11198AC", Slot = "23")]
		public void ResetEventState()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x11198B4", Offset = "0x11198B4", VA = "0x11198B4", Slot = "99")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1119908", Offset = "0x1119908", VA = "0x1119908", Slot = "195")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1119A58", Offset = "0x1119A58", VA = "0x1119A58", Slot = "196")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1119A70", Offset = "0x1119A70", VA = "0x1119A70", Slot = "197")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1119AD0", Offset = "0x1119AD0", VA = "0x1119AD0", Slot = "198")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1119AD4", Offset = "0x1119AD4", VA = "0x1119AD4")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x4001D9A")]
		private const string BANDWIDTH_NAME = "BANDWIDTH=";

		[Token(Token = "0x4001D9B")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x4001D9C")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x4001D9D")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x170005AE")]
		public override int Width
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x12E9444", Offset = "0x12E9444", VA = "0x12E9444", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005AF")]
		public override int Height
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x12E944C", Offset = "0x12E944C", VA = "0x12E944C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B0")]
		public override int Bandwidth
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x12E9454", Offset = "0x12E9454", VA = "0x12E9454", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B1")]
		public override string URL
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x12E945C", Offset = "0x12E945C", VA = "0x12E945C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x12E9464", Offset = "0x12E9464", VA = "0x12E9464", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x12E9590", Offset = "0x12E9590", VA = "0x12E9590", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x12E9598", Offset = "0x12E9598", VA = "0x12E9598", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x12E96C4", Offset = "0x12E96C4", VA = "0x12E96C4", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x12E96CC", Offset = "0x12E96CC", VA = "0x12E96CC")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x12E98E8", Offset = "0x12E98E8", VA = "0x12E98E8")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x12E9940", Offset = "0x12E9940", VA = "0x12E9940")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x12E9E10", Offset = "0x12E9E10", VA = "0x12E9E10")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x12EA2E8", Offset = "0x12EA2E8", VA = "0x12EA2E8")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200049A")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x200049B")]
		public enum EventType
		{
			[Token(Token = "0x4001DA6")]
			MetaDataReady,
			[Token(Token = "0x4001DA7")]
			ReadyToPlay,
			[Token(Token = "0x4001DA8")]
			Started,
			[Token(Token = "0x4001DA9")]
			FirstFrameReady,
			[Token(Token = "0x4001DAA")]
			FinishedPlaying,
			[Token(Token = "0x4001DAB")]
			Closing,
			[Token(Token = "0x4001DAC")]
			Error,
			[Token(Token = "0x4001DAD")]
			SubtitleChange,
			[Token(Token = "0x4001DAE")]
			Stalled,
			[Token(Token = "0x4001DAF")]
			Unstalled,
			[Token(Token = "0x4001DB0")]
			ResolutionChanged,
			[Token(Token = "0x4001DB1")]
			StartedSeeking,
			[Token(Token = "0x4001DB2")]
			FinishedSeeking,
			[Token(Token = "0x4001DB3")]
			StartedBuffering,
			[Token(Token = "0x4001DB4")]
			FinishedBuffering,
			[Token(Token = "0x4001DB5")]
			PropertiesChanged,
			[Token(Token = "0x4001DB6")]
			PlaylistItemChanged,
			[Token(Token = "0x4001DB7")]
			PlaylistFinished
		}

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityAction<MediaPlayer, EventType, ErrorCode>> _listeners;

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1125BB0", Offset = "0x1125BB0", VA = "0x1125BB0")]
		public bool HasListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1129520", Offset = "0x1129520", VA = "0x1129520")]
		public new void AddListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x11295E4", Offset = "0x11295E4", VA = "0x11295E4")]
		public new void RemoveListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x11296A8", Offset = "0x11296A8", VA = "0x11296A8")]
		public new void RemoveAllListeners()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1124058", Offset = "0x1124058", VA = "0x1124058")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x60020CB")]
		void OnEnable();

		[Token(Token = "0x60020CC")]
		void Update();

		[Token(Token = "0x60020CD")]
		void Render();
	}
	[Token(Token = "0x200049D")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x60020CE")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x60020CF")]
		int GetSubtitleIndex();

		[Token(Token = "0x60020D0")]
		string GetSubtitleText();
	}
	[Token(Token = "0x200049E")]
	public interface IMediaControl
	{
		[Token(Token = "0x60020D1")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x60020D2")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x60020D3")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x60020D4")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x60020D5")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x60020D6")]
		void CloseVideo();

		[Token(Token = "0x60020D7")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x60020D8")]
		bool IsLooping();

		[Token(Token = "0x60020D9")]
		bool HasMetaData();

		[Token(Token = "0x60020DA")]
		bool CanPlay();

		[Token(Token = "0x60020DB")]
		bool IsPlaying();

		[Token(Token = "0x60020DC")]
		bool IsSeeking();

		[Token(Token = "0x60020DD")]
		bool IsPaused();

		[Token(Token = "0x60020DE")]
		bool IsFinished();

		[Token(Token = "0x60020DF")]
		bool IsBuffering();

		[Token(Token = "0x60020E0")]
		bool IsSeekingStarted();

		[Token(Token = "0x60020E1")]
		void ResetEventState();

		[Token(Token = "0x60020E2")]
		void Play();

		[Token(Token = "0x60020E3")]
		void Pause();

		[Token(Token = "0x60020E4")]
		void Stop();

		[Token(Token = "0x60020E5")]
		void Rewind();

		[Token(Token = "0x60020E6")]
		void Seek(float timeMs);

		[Token(Token = "0x60020E7")]
		void SeekFast(float timeMs);

		[Token(Token = "0x60020E8")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x60020E9")]
		float GetCurrentTimeMs();

		[Token(Token = "0x60020EA")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x60020EB")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x60020EC")]
		float GetPlaybackRate();

		[Token(Token = "0x60020ED")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x60020EE")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x60020EF")]
		bool IsMuted();

		[Token(Token = "0x60020F0")]
		void SetVolume(float volume);

		[Token(Token = "0x60020F1")]
		void SetBalance(float balance);

		[Token(Token = "0x60020F2")]
		float GetVolume();

		[Token(Token = "0x60020F3")]
		float GetBalance();

		[Token(Token = "0x60020F4")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x60020F5")]
		void SetAudioTrack(int index);

		[Token(Token = "0x60020F6")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x60020F7")]
		void SetVideoTrack(int index);

		[Token(Token = "0x60020F8")]
		float GetBufferingProgress();

		[Token(Token = "0x60020F9")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x60020FA")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x60020FB")]
		ErrorCode GetLastError();

		[Token(Token = "0x60020FC")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x60020FD")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x60020FE")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x60020FF")]
		int GetNumAudioChannels();

		[Token(Token = "0x6002100")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x6002101")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x6002102")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x6002103")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x6002104")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x6002105")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x6002106")]
		void ResetAudioFocus();

		[Token(Token = "0x6002107")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);

		[Token(Token = "0x6002108")]
		void SetPlayWithoutBuffering(bool playWithoutBuffering);

		[Token(Token = "0x6002109")]
		void SetKeyServerURL(string url);

		[Token(Token = "0x600210A")]
		void SetKeyServerAuthToken(string token);

		[Token(Token = "0x600210B")]
		void SetDecryptionKeyBase64(string key);

		[Token(Token = "0x600210C")]
		void SetDecryptionKey(byte[] key);

		[Token(Token = "0x600210D")]
		bool IsExternalPlaybackSupported();

		[Token(Token = "0x600210E")]
		bool IsExternalPlaybackActive();

		[Token(Token = "0x600210F")]
		void SetAllowsExternalPlayback(bool allowsExternalPlayback);

		[Token(Token = "0x6002110")]
		void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode);
	}
	[Token(Token = "0x200049F")]
	public interface IMediaInfo
	{
		[Token(Token = "0x6002111")]
		float GetDurationMs();

		[Token(Token = "0x6002112")]
		int GetVideoWidth();

		[Token(Token = "0x6002113")]
		int GetVideoHeight();

		[Token(Token = "0x6002114")]
		Rect GetCropRect();

		[Token(Token = "0x6002115")]
		float GetVideoFrameRate();

		[Token(Token = "0x6002116")]
		float GetVideoDisplayRate();

		[Token(Token = "0x6002117")]
		bool HasVideo();

		[Token(Token = "0x6002118")]
		bool HasAudio();

		[Token(Token = "0x6002119")]
		int GetAudioTrackCount();

		[Token(Token = "0x600211A")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x600211B")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x600211C")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x600211D")]
		int GetVideoTrackCount();

		[Token(Token = "0x600211E")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x600211F")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x6002120")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6002121")]
		string GetPlayerDescription();

		[Token(Token = "0x6002122")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x6002123")]
		bool IsPlaybackStalled();

		[Token(Token = "0x6002124")]
		float[] GetTextureTransform();

		[Token(Token = "0x6002125")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x20004A0")]
	public interface IMediaProducer
	{
		[Token(Token = "0x6002126")]
		int GetTextureCount();

		[Token(Token = "0x6002127")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x6002128")]
		int GetTextureFrameCount();

		[Token(Token = "0x6002129")]
		bool SupportsTextureFrameCount();

		[Token(Token = "0x600212A")]
		long GetTextureTimeStamp();

		[Token(Token = "0x600212B")]
		bool RequiresVerticalFlip();

		[Token(Token = "0x600212C")]
		Matrix4x4 GetYpCbCrTransform();
	}
	[Token(Token = "0x20004A1")]
	public enum Platform
	{
		[Token(Token = "0x4001DB9")]
		Windows = 0,
		[Token(Token = "0x4001DBA")]
		MacOSX = 1,
		[Token(Token = "0x4001DBB")]
		iOS = 2,
		[Token(Token = "0x4001DBC")]
		tvOS = 3,
		[Token(Token = "0x4001DBD")]
		Android = 4,
		[Token(Token = "0x4001DBE")]
		WindowsPhone = 5,
		[Token(Token = "0x4001DBF")]
		WindowsUWP = 6,
		[Token(Token = "0x4001DC0")]
		WebGL = 7,
		[Token(Token = "0x4001DC1")]
		PS4 = 8,
		[Token(Token = "0x4001DC2")]
		Count = 9,
		[Token(Token = "0x4001DC3")]
		Unknown = 100
	}
	[Token(Token = "0x20004A2")]
	public enum StereoPacking
	{
		[Token(Token = "0x4001DC5")]
		None,
		[Token(Token = "0x4001DC6")]
		TopBottom,
		[Token(Token = "0x4001DC7")]
		LeftRight,
		[Token(Token = "0x4001DC8")]
		CustomUV
	}
	[Token(Token = "0x20004A3")]
	public enum StereoEye
	{
		[Token(Token = "0x4001DCA")]
		Both,
		[Token(Token = "0x4001DCB")]
		Left,
		[Token(Token = "0x4001DCC")]
		Right
	}
	[Token(Token = "0x20004A4")]
	public enum AlphaPacking
	{
		[Token(Token = "0x4001DCE")]
		None,
		[Token(Token = "0x4001DCF")]
		TopBottom,
		[Token(Token = "0x4001DD0")]
		LeftRight
	}
	[Token(Token = "0x20004A5")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001DD2")]
		None = 0,
		[Token(Token = "0x4001DD3")]
		LoadFailed = 100,
		[Token(Token = "0x4001DD4")]
		DecodeFailed = 200
	}
	[Token(Token = "0x20004A6")]
	public enum Orientation
	{
		[Token(Token = "0x4001DD6")]
		Landscape,
		[Token(Token = "0x4001DD7")]
		LandscapeFlipped,
		[Token(Token = "0x4001DD8")]
		Portrait,
		[Token(Token = "0x4001DD9")]
		PortraitFlipped
	}
	[Token(Token = "0x20004A7")]
	public enum VideoMapping
	{
		[Token(Token = "0x4001DDB")]
		Unknown,
		[Token(Token = "0x4001DDC")]
		Normal,
		[Token(Token = "0x4001DDD")]
		EquiRectangular360,
		[Token(Token = "0x4001DDE")]
		EquiRectangular180,
		[Token(Token = "0x4001DDF")]
		CubeMap3x2
	}
	[Token(Token = "0x20004A8")]
	public enum ExternalPlaybackFillMode
	{
		[Token(Token = "0x4001DE1")]
		Resize,
		[Token(Token = "0x4001DE2")]
		ResizeAspect,
		[Token(Token = "0x4001DE3")]
		ResizeAspectFill
	}
	[Token(Token = "0x20004A9")]
	public enum FileFormat
	{
		[Token(Token = "0x4001DE5")]
		Unknown,
		[Token(Token = "0x4001DE6")]
		HLS,
		[Token(Token = "0x4001DE7")]
		DASH,
		[Token(Token = "0x4001DE8")]
		SmoothStreaming
	}
	[Token(Token = "0x20004AA")]
	public static class Windows
	{
		[Token(Token = "0x20004AB")]
		public enum VideoApi
		{
			[Token(Token = "0x4001DEC")]
			MediaFoundation,
			[Token(Token = "0x4001DED")]
			DirectShow
		}

		[Token(Token = "0x4001DE9")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x4001DEA")]
		public const string AudioDeviceOutputName_Rift = "Headphones (Rift Audio)";
	}
	[Token(Token = "0x20004AC")]
	public static class Android
	{
		[Token(Token = "0x20004AD")]
		public enum VideoApi
		{
			[Token(Token = "0x4001DEF")]
			MediaPlayer = 1,
			[Token(Token = "0x4001DF0")]
			ExoPlayer
		}
	}
	[Token(Token = "0x20004AE")]
	public static class WebGL
	{
		[Token(Token = "0x20004AF")]
		public enum ExternalLibrary
		{
			[Token(Token = "0x4001DF2")]
			None,
			[Token(Token = "0x4001DF3")]
			DashJs,
			[Token(Token = "0x4001DF4")]
			HlsJs,
			[Token(Token = "0x4001DF5")]
			Custom
		}
	}
	[Token(Token = "0x20004B0")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x4001DF7")]
		TBE_8_2,
		[Token(Token = "0x4001DF8")]
		TBE_8,
		[Token(Token = "0x4001DF9")]
		TBE_6_2,
		[Token(Token = "0x4001DFA")]
		TBE_6,
		[Token(Token = "0x4001DFB")]
		TBE_4_2,
		[Token(Token = "0x4001DFC")]
		TBE_4,
		[Token(Token = "0x4001DFD")]
		TBE_8_PAIR0,
		[Token(Token = "0x4001DFE")]
		TBE_8_PAIR1,
		[Token(Token = "0x4001DFF")]
		TBE_8_PAIR2,
		[Token(Token = "0x4001E00")]
		TBE_8_PAIR3,
		[Token(Token = "0x4001E01")]
		TBE_CHANNEL0,
		[Token(Token = "0x4001E02")]
		TBE_CHANNEL1,
		[Token(Token = "0x4001E03")]
		TBE_CHANNEL2,
		[Token(Token = "0x4001E04")]
		TBE_CHANNEL3,
		[Token(Token = "0x4001E05")]
		TBE_CHANNEL4,
		[Token(Token = "0x4001E06")]
		TBE_CHANNEL5,
		[Token(Token = "0x4001E07")]
		TBE_CHANNEL6,
		[Token(Token = "0x4001E08")]
		TBE_CHANNEL7,
		[Token(Token = "0x4001E09")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x4001E0A")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x4001E0B")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x4001E0C")]
		AMBIX_4,
		[Token(Token = "0x4001E0D")]
		AMBIX_9,
		[Token(Token = "0x4001E0E")]
		AMBIX_9_2,
		[Token(Token = "0x4001E0F")]
		AMBIX_16,
		[Token(Token = "0x4001E10")]
		AMBIX_16_2,
		[Token(Token = "0x4001E11")]
		STEREO,
		[Token(Token = "0x4001E12")]
		INVALID
	}
	[Token(Token = "0x20004B1")]
	public struct TimeRange
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x20004B2")]
	public class Subtitle
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xE7D6C0", Offset = "0xE7D6C0", VA = "0xE7D6C0")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xE7D6EC", Offset = "0xE7D6EC", VA = "0xE7D6EC")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xE7D718", Offset = "0xE7D718", VA = "0xE7D718")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public static class Helper
	{
		[Token(Token = "0x4001E19")]
		public const string ScriptVersion = "1.11.7";

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x12F273C", Offset = "0x12F273C", VA = "0x12F273C")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x12F2838", Offset = "0x12F2838", VA = "0x12F2838")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x12F290C", Offset = "0x12F290C", VA = "0x12F290C")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x12F2B50", Offset = "0x12F2B50", VA = "0x12F2B50")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x12F2C64", Offset = "0x12F2C64", VA = "0x12F2C64")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x12F3028", Offset = "0x12F3028", VA = "0x12F3028")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x12F3174", Offset = "0x12F3174", VA = "0x12F3174")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x12F339C", Offset = "0x12F339C", VA = "0x12F339C")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x12F34EC", Offset = "0x12F34EC", VA = "0x12F34EC")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x12F359C", Offset = "0x12F359C", VA = "0x12F359C")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x12F36EC", Offset = "0x12F36EC", VA = "0x12F36EC")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x12F37D0", Offset = "0x12F37D0", VA = "0x12F37D0")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x12F3870", Offset = "0x12F3870", VA = "0x12F3870")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x12F38B8", Offset = "0x12F38B8", VA = "0x12F38B8")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x12F391C", Offset = "0x12F391C", VA = "0x12F391C")]
		public static float FindNextKeyFrameTimeSeconds(float seconds, float frameRate, int keyFrameInterval)
		{
			return default(float);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x12F39E4", Offset = "0x12F39E4", VA = "0x12F39E4")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x12F3A98", Offset = "0x12F3A98", VA = "0x12F3A98")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x12F3E18", Offset = "0x12F3E18", VA = "0x12F3E18")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x12F4140", Offset = "0x12F4140", VA = "0x12F4140")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x12F4270", Offset = "0x12F4270", VA = "0x12F4270")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B4")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPlaying;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isPaused;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentTime;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _volume;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _playbackRate;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _bLoop;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _Width;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _height;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _fakeFlipTime;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _frameCount;

		[Token(Token = "0x4001E27")]
		private const float FrameRate = 10f;

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xFF0390", Offset = "0xFF0390", VA = "0xFF0390", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xFF03D4", Offset = "0xFF03D4", VA = "0xFF03D4", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xFF0514", Offset = "0xFF0514", VA = "0xFF0514", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xFF0554", Offset = "0xFF0554", VA = "0xFF0554", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xFF0560", Offset = "0xFF0560", VA = "0xFF0560", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xFF0568", Offset = "0xFF0568", VA = "0xFF0568", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xFF0570", Offset = "0xFF0570", VA = "0xFF0570", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xFF0578", Offset = "0xFF0578", VA = "0xFF0578", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xFF0580", Offset = "0xFF0580", VA = "0xFF0580", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xFF0588", Offset = "0xFF0588", VA = "0xFF0588", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xFF0598", Offset = "0xFF0598", VA = "0xFF0598", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xFF05A4", Offset = "0xFF05A4", VA = "0xFF05A4", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFF05AC", Offset = "0xFF05AC", VA = "0xFF05AC", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xFF05B4", Offset = "0xFF05B4", VA = "0xFF05B4", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xFF05BC", Offset = "0xFF05BC", VA = "0xFF05BC", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xFF05C4", Offset = "0xFF05C4", VA = "0xFF05C4", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFF0608", Offset = "0xFF0608", VA = "0xFF0608", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xFF0610", Offset = "0xFF0610", VA = "0xFF0610", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xFF061C", Offset = "0xFF061C", VA = "0xFF061C", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFF0624", Offset = "0xFF0624", VA = "0xFF0624", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xFF062C", Offset = "0xFF062C", VA = "0xFF062C", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xFF0634", Offset = "0xFF0634", VA = "0xFF0634", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFF063C", Offset = "0xFF063C", VA = "0xFF063C", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xFF0644", Offset = "0xFF0644", VA = "0xFF0644", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xFF064C", Offset = "0xFF064C", VA = "0xFF064C", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xFF065C", Offset = "0xFF065C", VA = "0xFF065C", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xFF066C", Offset = "0xFF066C", VA = "0xFF066C", Slot = "120")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xFF067C", Offset = "0xFF067C", VA = "0xFF067C", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xFF0684", Offset = "0xFF0684", VA = "0xFF0684", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xFF068C", Offset = "0xFF068C", VA = "0xFF068C", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xFF0694", Offset = "0xFF0694", VA = "0xFF0694", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xFF069C", Offset = "0xFF069C", VA = "0xFF069C", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xFF06A0", Offset = "0xFF06A0", VA = "0xFF06A0", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xFF06A8", Offset = "0xFF06A8", VA = "0xFF06A8", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xFF06B0", Offset = "0xFF06B0", VA = "0xFF06B0", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xFF06B8", Offset = "0xFF06B8", VA = "0xFF06B8", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xFF06C0", Offset = "0xFF06C0", VA = "0xFF06C0", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xFF06C8", Offset = "0xFF06C8", VA = "0xFF06C8", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xFF06CC", Offset = "0xFF06CC", VA = "0xFF06CC", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xFF06D4", Offset = "0xFF06D4", VA = "0xFF06D4", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xFF06DC", Offset = "0xFF06DC", VA = "0xFF06DC", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xFF0720", Offset = "0xFF0720", VA = "0xFF0720", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xFF0728", Offset = "0xFF0728", VA = "0xFF0728", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xFF072C", Offset = "0xFF072C", VA = "0xFF072C", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xFF0770", Offset = "0xFF0770", VA = "0xFF0770", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xFF0778", Offset = "0xFF0778", VA = "0xFF0778", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xFF0780", Offset = "0xFF0780", VA = "0xFF0780", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xFF08E0", Offset = "0xFF08E0", VA = "0xFF08E0", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xFF08E4", Offset = "0xFF08E4", VA = "0xFF08E4", Slot = "187")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xFF08E8", Offset = "0xFF08E8", VA = "0xFF08E8")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class Resampler
	{
		[Token(Token = "0x20004B6")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x6002192")]
			[Address(RVA = "0xDC1E68", Offset = "0xDC1E68", VA = "0xDC1E68")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		public enum ResampleMode
		{
			[Token(Token = "0x4001E43")]
			POINT,
			[Token(Token = "0x4001E44")]
			LINEAR
		}

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DCD34", Offset = "0x7DCD34")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7DCD44", Offset = "0x7DCD44")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x4001E3A")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x4001E3B")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _videoFrameRate;

		[Token(Token = "0x170005B2")]
		public int DroppedFrames
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0x13035A0", Offset = "0x13035A0", VA = "0x13035A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B3")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x13035A8", Offset = "0x13035A8", VA = "0x13035A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B4")]
		public long BaseTimestamp
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x13035B0", Offset = "0x13035B0", VA = "0x13035B0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x13035B8", Offset = "0x13035B8", VA = "0x13035B8")]
			set
			{
			}
		}

		[Token(Token = "0x170005B5")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x13035C0", Offset = "0x13035C0", VA = "0x13035C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x13035C8", Offset = "0x13035C8", VA = "0x13035C8")]
			set
			{
			}
		}

		[Token(Token = "0x170005B6")]
		public float LastT
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0x13035D0", Offset = "0x13035D0", VA = "0x13035D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8808", Offset = "0x7E8808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600217D")]
			[Address(RVA = "0x13035D8", Offset = "0x13035D8", VA = "0x13035D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8818", Offset = "0x7E8818")]
			private set
			{
			}
		}

		[Token(Token = "0x170005B7")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x13035E0", Offset = "0x13035E0", VA = "0x13035E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8828", Offset = "0x7E8828")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x13035E8", Offset = "0x13035E8", VA = "0x13035E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7E8838", Offset = "0x7E8838")]
			private set
			{
			}
		}

		[Token(Token = "0x170005B8")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x1303A24", Offset = "0x1303A24", VA = "0x1303A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x13035F0", Offset = "0x13035F0", VA = "0x13035F0")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1303724", Offset = "0x1303724", VA = "0x1303724")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x1303714", Offset = "0x1303714", VA = "0x1303714")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x1303B6C", Offset = "0x1303B6C", VA = "0x1303B6C")]
		public void Release()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1303C24", Offset = "0x1303C24", VA = "0x1303C24")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x1303E88", Offset = "0x1303E88", VA = "0x1303E88")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1304488", Offset = "0x1304488", VA = "0x1304488")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x13048A4", Offset = "0x13048A4", VA = "0x13048A4")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1304A90", Offset = "0x1304A90", VA = "0x1304A90")]
		private int FindClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1304C44", Offset = "0x1304C44", VA = "0x1304C44")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1304DFC", Offset = "0x1304DFC", VA = "0x1304DFC")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1304F88", Offset = "0x1304F88", VA = "0x1304F88")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1305274", Offset = "0x1305274", VA = "0x1305274")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1303A2C", Offset = "0x1303A2C", VA = "0x1303A2C")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1305484", Offset = "0x1305484", VA = "0x1305484")]
		private float GuessFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x130572C", Offset = "0x130572C", VA = "0x130572C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x13064A0", Offset = "0x13064A0", VA = "0x13064A0")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public abstract class Stream
	{
		[Token(Token = "0x20004B9")]
		public struct Chunk
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x170005B9")]
		public abstract int Width
		{
			[Token(Token = "0x6002193")]
			get;
		}

		[Token(Token = "0x170005BA")]
		public abstract int Height
		{
			[Token(Token = "0x6002194")]
			get;
		}

		[Token(Token = "0x170005BB")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x6002195")]
			get;
		}

		[Token(Token = "0x170005BC")]
		public abstract string URL
		{
			[Token(Token = "0x6002196")]
			get;
		}

		[Token(Token = "0x6002197")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x6002198")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x6002199")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x600219A")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xE7D000", Offset = "0xE7D000", VA = "0xE7D000")]
		protected Stream()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo.Demos
{
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CDA88", Offset = "0x7CDA88")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float z;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timer;

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x1116364", Offset = "0x1116364", VA = "0x1116364")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x11163EC", Offset = "0x11163EC", VA = "0x11163EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x1116368", Offset = "0x1116368", VA = "0x1116368")]
		private void Randomise()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x11164B4", Offset = "0x11164B4", VA = "0x11164B4")]
		public AutoRotate()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class DemoInfo : MonoBehaviour
	{
		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _title;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string _description;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MediaPlayer _media;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x105ADA8", Offset = "0x105ADA8", VA = "0x105ADA8")]
		public DemoInfo()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class FrameExtract : MonoBehaviour
	{
		[Token(Token = "0x4001E4D")]
		private const int NumFrames = 8;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _accurateSeek;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _timeoutMs;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin _skin;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _asyncExtract;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _busyProcessingFrame;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _timeStepSeconds;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameIndex;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _texture;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _displaySheet;

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x14548DC", Offset = "0x14548DC", VA = "0x14548DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1454A40", Offset = "0x1454A40", VA = "0x1454A40")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x1454A9C", Offset = "0x1454A9C", VA = "0x1454A9C")]
		private void OnNewMediaReady()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1454D28", Offset = "0x1454D28", VA = "0x1454D28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x1454E10", Offset = "0x1454E10", VA = "0x1454E10")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1454FD0", Offset = "0x1454FD0", VA = "0x1454FD0")]
		private void ProcessExtractedFrame(Texture2D texture)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1454EA0", Offset = "0x1454EA0", VA = "0x1454EA0")]
		private void ExtractNextFrame()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x14551F8", Offset = "0x14551F8", VA = "0x14551F8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x14555D8", Offset = "0x14555D8", VA = "0x14555D8")]
		public FrameExtract()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class Mapping3D : MonoBehaviour
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _cubePrefab;

		[Token(Token = "0x4001E59")]
		private const int MaxCubes = 48;

		[Token(Token = "0x4001E5A")]
		private const float SpawnTime = 0.25f;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _cubes;

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1122A5C", Offset = "0x1122A5C", VA = "0x1122A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1122AF8", Offset = "0x1122AF8", VA = "0x1122AF8")]
		private void SpawnCube()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1122CC4", Offset = "0x1122CC4", VA = "0x1122CC4")]
		private void RemoveCube()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1122D84", Offset = "0x1122D84", VA = "0x1122D84")]
		public Mapping3D()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class SampleApp_Multiple : MonoBehaviour
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_videoPath;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer.FileLocation m_videoLocation;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_NumVideosAdded;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DisplayUGUI> m_aAddedVideos;

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xD9D8A8", Offset = "0xD9D8A8", VA = "0xD9D8A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xD9DBD8", Offset = "0xD9DBD8", VA = "0xD9DBD8")]
		private void UpdateVideosLayout()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xD9DE08", Offset = "0xD9DE08", VA = "0xD9DE08")]
		public void AddVideoClicked()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xD9E104", Offset = "0xD9E104", VA = "0xD9E104")]
		public void RemoveVideoClicked()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xD9E2B0", Offset = "0xD9E2B0", VA = "0xD9E2B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xD9E43C", Offset = "0xD9E43C", VA = "0xD9E43C")]
		public SampleApp_Multiple()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ChangeAudioTrack : MonoBehaviour
	{
		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _trackIndex;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isQueued;

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x10C30F8", Offset = "0x10C30F8", VA = "0x10C30F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x10C3104", Offset = "0x10C3104", VA = "0x10C3104")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x10C3140", Offset = "0x10C3140", VA = "0x10C3140")]
		private bool IsVideoLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x10C3270", Offset = "0x10C3270", VA = "0x10C3270")]
		private static bool DoChangeAudioTrack(MediaPlayer mp, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x10C3468", Offset = "0x10C3468", VA = "0x10C3468")]
		public ChangeAudioTrack()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class ChangeStereoMode : MonoBehaviour
	{
		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ApplyToMesh _applyToMesh;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x10C3594", Offset = "0x10C3594", VA = "0x10C3594")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x10C36F8", Offset = "0x10C36F8", VA = "0x10C36F8")]
		public ChangeStereoMode()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class ChangeVideoExample : MonoBehaviour
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x10C3814", Offset = "0x10C3814", VA = "0x10C3814")]
		public void LoadVideo(string filePath)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x10C383C", Offset = "0x10C383C", VA = "0x10C383C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x10C3A24", Offset = "0x10C3A24", VA = "0x10C3A24")]
		public ChangeVideoExample()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class LoadFromBuffer : MonoBehaviour
	{
		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x111C828", Offset = "0x111C828", VA = "0x111C828")]
		private void Start()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x111C974", Offset = "0x111C974", VA = "0x111C974")]
		public LoadFromBuffer()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class LoadFromBufferInChunks : MonoBehaviour
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x111C9D0", Offset = "0x111C9D0", VA = "0x111C9D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x111CD80", Offset = "0x111CD80", VA = "0x111CD80")]
		public LoadFromBufferInChunks()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class NativeMediaOpen : MonoBehaviour
	{
		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _player;

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xFEFEDC", Offset = "0xFEFEDC", VA = "0xFEFEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xFEFEE0", Offset = "0xFEFEE0", VA = "0xFEFEE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xFEFEE4", Offset = "0xFEFEE4", VA = "0xFEFEE4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xFF01A4", Offset = "0xFF01A4", VA = "0xFF01A4")]
		public NativeMediaOpen()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class PlaybackSync : MonoBehaviour
	{
		[Token(Token = "0x20004C6")]
		private enum State
		{
			[Token(Token = "0x4001E73")]
			Loading,
			[Token(Token = "0x4001E74")]
			Playing,
			[Token(Token = "0x4001E75")]
			Finished
		}

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _masterPlayer;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer[] _slavePlayers;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _toleranceMs;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _matchVideo;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool _muteSlaves;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State _state;

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xFFD55C", Offset = "0xFFD55C", VA = "0xFFD55C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xFFD610", Offset = "0xFFD610", VA = "0xFFD610")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xFFDAB4", Offset = "0xFFDAB4", VA = "0xFFDAB4")]
		private bool IsAllVideosLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xFFDC5C", Offset = "0xFFDC5C", VA = "0xFFDC5C")]
		private static bool IsVideoLoaded(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xFFDB34", Offset = "0xFFDB34", VA = "0xFFDB34")]
		private static bool IsPlaybackFinished(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xFFDEA4", Offset = "0xFFDEA4", VA = "0xFFDEA4")]
		public PlaybackSync()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class StartEndPoint : MonoBehaviour
	{
		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _startPointSeconds;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _endPointSeconds;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _loop;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7DCDF4", Offset = "0x7DCDF4")]
		public float _startLoopSeconds;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isStartQueued;

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xE7B4CC", Offset = "0xE7B4CC", VA = "0xE7B4CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xE7B4D8", Offset = "0xE7B4D8", VA = "0xE7B4D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xE7B544", Offset = "0xE7B544", VA = "0xE7B544")]
		private static bool IsVideoLoaded(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xE7B66C", Offset = "0xE7B66C", VA = "0xE7B66C")]
		private static void DoStart(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xE7B758", Offset = "0xE7B758", VA = "0xE7B758")]
		private static void DoCheckEnd(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xE7B8E4", Offset = "0xE7B8E4", VA = "0xE7B8E4")]
		private static void DoCheckLoop(MediaPlayer mp, float positionSeconds, float positionLoop)
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xE7BAF8", Offset = "0xE7BAF8", VA = "0xE7BAF8")]
		public StartEndPoint()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class VideoTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeTimeMs;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _fade;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _fadeDirection;

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xDF4E60", Offset = "0xDF4E60", VA = "0xDF4E60")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xDF4EF0", Offset = "0xDF4EF0", VA = "0xDF4EF0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xDF4F6C", Offset = "0xDF4F6C", VA = "0xDF4F6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xDF5124", Offset = "0xDF5124", VA = "0xDF5124")]
		public VideoTrigger()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAE8", Offset = "0x7CDAE8")]
		private sealed class <LoadVideoWithFading>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleController <>4__this;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fade>5__2;

			[Token(Token = "0x170005BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E6")]
				[Address(RVA = "0xCC1FC8", Offset = "0xCC1FC8", VA = "0xCC1FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021E8")]
				[Address(RVA = "0xCC2010", Offset = "0xCC2010", VA = "0xCC2010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0xCC1AB4", Offset = "0xCC1AB4", VA = "0xCC1AB4")]
			[DebuggerHidden]
			public <LoadVideoWithFading>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xCC1AE0", Offset = "0xCC1AE0", VA = "0xCC1AE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0xCC1AE4", Offset = "0xCC1AE4", VA = "0xCC1AE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E7")]
			[Address(RVA = "0xCC1FD0", Offset = "0xCC1FD0", VA = "0xCC1FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _folder;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] _filenames;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _streams;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayIMGUI _display;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin _guiSkin;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _width;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _height;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _durationSeconds;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _useFading;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<string> _eventLog;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eventTimer;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MediaPlayer.FileLocation _nextVideoLocation;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nextVideoPath;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xDA1498", Offset = "0xDA1498", VA = "0xDA1498")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xDA1554", Offset = "0xDA1554", VA = "0xDA1554")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xDA1610", Offset = "0xDA1610", VA = "0xDA1610")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xDA1894", Offset = "0xDA1894", VA = "0xDA1894")]
		private void AddEvent(MediaPlayerEvent.EventType et)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xDA164C", Offset = "0xDA164C", VA = "0xDA164C")]
		private void GatherProperties()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xDA1A2C", Offset = "0xDA1A2C", VA = "0xDA1A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xDA1C34", Offset = "0xDA1C34", VA = "0xDA1C34")]
		private void LoadVideo(string filePath, bool url = false)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xDA1D38", Offset = "0xDA1D38", VA = "0xDA1D38")]
		private static bool VideoIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xDA1E64", Offset = "0xDA1E64", VA = "0xDA1E64")]
		private static bool AudioIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xDA20AC", Offset = "0xDA20AC", VA = "0xDA20AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7E8848", Offset = "0x7E8848")]
		private IEnumerator LoadVideoWithFading()
		{
			return null;
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xDA2118", Offset = "0xDA2118", VA = "0xDA2118")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xDA43D0", Offset = "0xDA43D0", VA = "0xDA43D0")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class SphereDemo : MonoBehaviour
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _zeroCameraPosition;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _allowRecenter;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _allowVrToggle;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool _lockPitch;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _spinX;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _spinY;

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xE75698", Offset = "0xE75698", VA = "0xE75698")]
		private static bool IsVrPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xE75844", Offset = "0xE75844", VA = "0xE75844")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xE75940", Offset = "0xE75940", VA = "0xE75940")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xE7597C", Offset = "0xE7597C", VA = "0xE7597C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xE75C68", Offset = "0xE75C68", VA = "0xE75C68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xE75CC4", Offset = "0xE75CC4", VA = "0xE75CC4")]
		public SphereDemo()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class VCR : MonoBehaviour
	{
		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer _mediaPlayerB;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayUGUI _mediaDisplay;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _bufferedSliderRect;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.UI.Slider _videoSeekSlider;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _setVideoSeekSliderValue;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _wasPlayingOnScrub;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.UI.Slider _audioVolumeSlider;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _setAudioVolumeSliderValue;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle _AutoStartToggle;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle _MuteToggle;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MediaPlayer.FileLocation _location;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _folder;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] _videoFiles;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _VideoIndex;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _bufferedSliderImage;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MediaPlayer _loadingPlayer;

		[Token(Token = "0x170005BF")]
		public MediaPlayer PlayingPlayer
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0xDEB42C", Offset = "0xDEB42C", VA = "0xDEB42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C0")]
		public MediaPlayer LoadingPlayer
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0xDEB4BC", Offset = "0xDEB4BC", VA = "0xDEB4BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xDEB4C4", Offset = "0xDEB4C4", VA = "0xDEB4C4")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xDEB610", Offset = "0xDEB610", VA = "0xDEB610")]
		public void OnOpenVideoFile()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xDEB7A8", Offset = "0xDEB7A8", VA = "0xDEB7A8")]
		public void OnAutoStartChange()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xDEB960", Offset = "0xDEB960", VA = "0xDEB960")]
		public void OnMuteChange()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xDEBB68", Offset = "0xDEBB68", VA = "0xDEBB68")]
		public void OnPlayButton()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xDEBC88", Offset = "0xDEBC88", VA = "0xDEBC88")]
		public void OnPauseButton()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xDEBDA8", Offset = "0xDEBDA8", VA = "0xDEBDA8")]
		public void OnVideoSeekSlider()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xDEBFEC", Offset = "0xDEBFEC", VA = "0xDEBFEC")]
		public void OnVideoSliderDown()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xDEC1B0", Offset = "0xDEC1B0", VA = "0xDEC1B0")]
		public void OnVideoSliderUp()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xDEC2D4", Offset = "0xDEC2D4", VA = "0xDEC2D4")]
		public void OnAudioVolumeSlider()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xDEC5A8", Offset = "0xDEC5A8", VA = "0xDEC5A8")]
		public void OnRewindButton()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xDEC6C8", Offset = "0xDEC6C8", VA = "0xDEC6C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xDEC6D4", Offset = "0xDEC6D4", VA = "0xDEC6D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xDEC9B0", Offset = "0xDEC9B0", VA = "0xDEC9B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xDECB58", Offset = "0xDECB58", VA = "0xDECB58")]
		private void Update()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xDED24C", Offset = "0xDED24C", VA = "0xDED24C")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xDED34C", Offset = "0xDED34C", VA = "0xDED34C")]
		public VCR()
		{
		}
	}
}
