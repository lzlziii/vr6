using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Numerics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using AOT;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DigitalOpus.MB.Core;
using EzySlice;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using PlayFab;
using PlayFab.ClientModels;
using Qiyu.Sdk.Platform;
using SmfLite;
using StylizedWater;
using TMPro;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.Inputs;
using UnityEngine.XR.Management;
using VolumetricLines;
using YUR.Fit.Core.Models;
using YUR.Fit.Core.Watch;
using YUR.Fit.Unity;
using YUR.Fit.Unity.Utilities;
using YUR.SDK.Core.Configuration;
using YUR.SDK.Core.Enums;
using YUR.SDK.Core.Interfaces;
using YUR.SDK.Core.Utils;
using YUR.SDK.Core.Watch;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AchievementManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000003")]
	public class Achievement
	{
		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite icon;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display;

		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ID;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int goal;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool unlocked;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hidden;

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x10C97D0", Offset = "0x10C97D0", VA = "0x10C97D0")]
		public Achievement()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementManager achievementManagerInstance;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color achievmentUnlocked;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject achievementUnlockedNotify;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject achievementNotifContainer;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject achievementObj;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string dictionaryString;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public Achievement[] achievements;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x10C8534", Offset = "0x10C8534", VA = "0x10C8534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x10C86DC", Offset = "0x10C86DC", VA = "0x10C86DC")]
	public void AddAchievementProgress(string ID, int value)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10C8D60", Offset = "0x10C8D60", VA = "0x10C8D60")]
	public void SetAchievement(string ID, int value)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x10C8880", Offset = "0x10C8880", VA = "0x10C8880")]
	public void ShowUnlockedTic(Achievement achievement)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x10C8F00", Offset = "0x10C8F00", VA = "0x10C8F00")]
	public void PopulateAchievementList(Transform parent)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x10C8614", Offset = "0x10C8614", VA = "0x10C8614")]
	public void LoadAchievementData()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x10C8C38", Offset = "0x10C8C38", VA = "0x10C8C38")]
	public void SaveAchievementData(string achID)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x10C96C8", Offset = "0x10C96C8", VA = "0x10C96C8")]
	public int GetAchievementPref(string type, string achID)
	{
		return default(int);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x10C9740", Offset = "0x10C9740", VA = "0x10C9740")]
	public void SetAchievementPref(string type, string achID, int value)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x10C97C8", Offset = "0x10C97C8", VA = "0x10C97C8")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x2000007")]
public class ClickBtn : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text clickDisplay;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int clicks;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x10C9844", Offset = "0x10C9844", VA = "0x10C9844")]
	public void Click()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x10C996C", Offset = "0x10C996C", VA = "0x10C996C")]
	public ClickBtn()
	{
	}
}
[Token(Token = "0x2000008")]
public class AchManager : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool AchtheOne;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool introeaster;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int allEggs;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int countEggs;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x10C9974", Offset = "0x10C9974", VA = "0x10C9974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x10CA234", Offset = "0x10CA234", VA = "0x10CA234")]
	public AchManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class AlignSpawnerToPlayerPosition : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Playerhead;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector3 spawnerPosition;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 spawnerPositionHigher;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int countFrame;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x10CA244", Offset = "0x10CA244", VA = "0x10CA244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x10CA330", Offset = "0x10CA330", VA = "0x10CA330")]
	public AlignSpawnerToPlayerPosition()
	{
	}
}
[Token(Token = "0x200000A")]
public class SVOption : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image BackgroundImage;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image ForegroundImage;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle toggle;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Range(0f, 1f)]
	private float Saturation;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[Range(0f, 1f)]
	private float Value;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ColorPaletteController ColorPaltte;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color color;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x10CA3BC", Offset = "0x10CA3BC", VA = "0x10CA3BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x10CA4CC", Offset = "0x10CA4CC", VA = "0x10CA4CC")]
	private void OnHueChange(float hue)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x10CA5E8", Offset = "0x10CA5E8", VA = "0x10CA5E8")]
	public void OnCheckChange(bool isChecked)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x10CA53C", Offset = "0x10CA53C", VA = "0x10CA53C")]
	private void UpdateSpritesColor()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x10CA6B4", Offset = "0x10CA6B4", VA = "0x10CA6B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x10CA75C", Offset = "0x10CA75C", VA = "0x10CA75C")]
	public SVOption()
	{
	}
}
[Token(Token = "0x200000B")]
public class ColorPaletteController : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IInitializePotentialDragHandler
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ColorPaletteController instance;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform picker;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image pickedColorImage;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material colorWheelMat;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int wheelsCount;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("clockwise angle of the begnning point starting from positive x-axis")]
	[Range(0f, 360f)]
	[SerializeField]
	private float startingAngle;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[InspectorName("Control Sat & Val")]
	private bool controlSV;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool inertia;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float decelerationRate;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool wholeSegment;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.5f, 0.001f)]
	[SerializeField]
	[Header("Limits")]
	private float minimumSatValStep;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Range(0f, 1f)]
	private float minimumSaturation;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[SerializeField]
	private float maximumSaturation;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	[SerializeField]
	private float minimumValue;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	[SerializeField]
	private float maximumValue;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dragging;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float satValAmount;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float omega;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float previousTheta;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float theta;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float previousDiscretedH;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float sat;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float val;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color selectedColor;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ColorChangeEvent OnColorChange;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HueChangeEvent OnHueChange;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector2 centerPoint;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float paletteRadius;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float pickerHueOffset;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2 prevPos;

	[Token(Token = "0x17000001")]
	public Color SelectedColor
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x10CA76C", Offset = "0x10CA76C", VA = "0x10CA76C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x10CA778", Offset = "0x10CA778", VA = "0x10CA778")]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public float Hue
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x10CA854", Offset = "0x10CA854", VA = "0x10CA854")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x10CA85C", Offset = "0x10CA85C", VA = "0x10CA85C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public float Value
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x10CA864", Offset = "0x10CA864", VA = "0x10CA864")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x10CA61C", Offset = "0x10CA61C", VA = "0x10CA61C")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public float Saturation
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x10CABD8", Offset = "0x10CABD8", VA = "0x10CABD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x10CA668", Offset = "0x10CA668", VA = "0x10CA668")]
		set
		{
		}
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x10CABE0", Offset = "0x10CABE0", VA = "0x10CABE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x10CAE6C", Offset = "0x10CAE6C", VA = "0x10CAE6C")]
	private void UpdateMaterialInitialValues()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x10CAC48", Offset = "0x10CAC48", VA = "0x10CAC48")]
	private void CalculatePresets()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10CAF4C", Offset = "0x10CAF4C", VA = "0x10CAF4C")]
	public void CalculateSaturationAndValue(float amount)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x10CAFA8", Offset = "0x10CAFA8", VA = "0x10CAFA8")]
	public void UpdateHue()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10CA86C", Offset = "0x10CA86C", VA = "0x10CA86C")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x10CA9CC", Offset = "0x10CA9CC", VA = "0x10CA9CC")]
	public void UpdateColor()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x10CAFC0", Offset = "0x10CAFC0", VA = "0x10CAFC0", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x10CB304", Offset = "0x10CB304", VA = "0x10CB304", Slot = "7")]
	public void OnInitializePotentialDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x10CB38C", Offset = "0x10CB38C", VA = "0x10CB38C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x10CB424", Offset = "0x10CB424", VA = "0x10CB424", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x10CB4AC", Offset = "0x10CB4AC", VA = "0x10CB4AC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x10CB5B4", Offset = "0x10CB5B4", VA = "0x10CB5B4")]
	public ColorPaletteController()
	{
	}
}
[Serializable]
[Token(Token = "0x200000C")]
public class ColorChangeEvent : UnityEvent<Color>
{
	[Token(Token = "0x6000033")]
	[Address(RVA = "0x10CB5FC", Offset = "0x10CB5FC", VA = "0x10CB5FC")]
	public ColorChangeEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class HueChangeEvent : UnityEvent<float>
{
	[Token(Token = "0x6000034")]
	[Address(RVA = "0x10CB644", Offset = "0x10CB644", VA = "0x10CB644")]
	public HueChangeEvent()
	{
	}
}
[Token(Token = "0x200000E")]
public class AsyncLoading : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShaderVariantCollection target;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool warmupOnStart;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x10CB68C", Offset = "0x10CB68C", VA = "0x10CB68C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x10CB700", Offset = "0x10CB700", VA = "0x10CB700")]
	private void WarmupShaderVariantCollection()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x10CB71C", Offset = "0x10CB71C", VA = "0x10CB71C")]
	public AsyncLoading()
	{
	}
}
[Token(Token = "0x200000F")]
public class source : MonoBehaviour
{
	[Token(Token = "0x6000038")]
	[Address(RVA = "0x10CB72C", Offset = "0x10CB72C", VA = "0x10CB72C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x10CB730", Offset = "0x10CB730", VA = "0x10CB730")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x10CB734", Offset = "0x10CB734", VA = "0x10CB734")]
	public source()
	{
	}
}
[Token(Token = "0x2000010")]
public class GetAudioFiles : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FileDirectory;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Source;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip Clip;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> Files;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioClip> Clips;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x10CB73C", Offset = "0x10CB73C", VA = "0x10CB73C")]
	[Obsolete]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x10CB974", Offset = "0x10CB974", VA = "0x10CB974")]
	public void PlaySong(int _listIndex)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x10CB9F8", Offset = "0x10CB9F8", VA = "0x10CB9F8")]
	public GetAudioFiles()
	{
	}
}
[Token(Token = "0x2000011")]
public class AutoLoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000044")]
			[Address(RVA = "0x10CBD50", Offset = "0x10CBD50", VA = "0x10CBD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x10CBD98", Offset = "0x10CBD98", VA = "0x10CBD98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x10CBB44", Offset = "0x10CBB44", VA = "0x10CBB44")]
		[DebuggerHidden]
		public <LoadScene>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x10CBB74", Offset = "0x10CBB74", VA = "0x10CBB74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x10CBB78", Offset = "0x10CBB78", VA = "0x10CBB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x10CBD58", Offset = "0x10CBD58", VA = "0x10CBD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRMenue vrmenue;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x10CBAB8", Offset = "0x10CBAB8", VA = "0x10CBAB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x10CBAE4", Offset = "0x10CBAE4", VA = "0x10CBAE4")]
	[IteratorStateMachine(typeof(<LoadScene>d__2))]
	private IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x10CBB6C", Offset = "0x10CBB6C", VA = "0x10CBB6C")]
	public AutoLoadLevel()
	{
	}
}
[Token(Token = "0x2000013")]
[RequireComponent(typeof(ScrollRect))]
public class AutoScrollRect : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ScrollContent;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float joyStickDirection;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 scrollDelta;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isPointerOver;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x10CBDA0", Offset = "0x10CBDA0", VA = "0x10CBDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x10CBF94", Offset = "0x10CBF94", VA = "0x10CBF94", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x10CBFA0", Offset = "0x10CBFA0", VA = "0x10CBFA0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x10CBFA8", Offset = "0x10CBFA8", VA = "0x10CBFA8")]
	public AutoScrollRect()
	{
	}
}
[Token(Token = "0x2000014")]
public class BeatColors : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeatColors instance;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] beatColors;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x10CBFB8", Offset = "0x10CBFB8", VA = "0x10CBFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x10CC004", Offset = "0x10CC004", VA = "0x10CC004")]
	public BeatColors()
	{
	}
}
[Token(Token = "0x2000015")]
public class BladeParent : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	private const int NUM_VERTICES = 12;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Tooltip("The empty game object located at the tip of the blade")]
	private GameObject _tip;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The empty game object located at the base of the blade")]
	[SerializeField]
	private GameObject _base;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("The mesh object with the mesh filter and mesh renderer")]
	private GameObject _meshParent;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Tooltip("The number of frame that the trail should be rendered for")]
	private int _trailFrameLength;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _mesh;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Vector3[] _vertices;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _frameCount;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UnityEngine.Vector3 _previousTipPosition;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Vector3 _previousBasePosition;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private UnityEngine.Vector3 _triggerEnterTipPosition;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityEngine.Vector3 _triggerEnterBasePosition;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private UnityEngine.Vector3 _triggerExitTipPosition;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x10CC00C", Offset = "0x10CC00C", VA = "0x10CC00C")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x10CC144", Offset = "0x10CC144", VA = "0x10CC144")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x10CC638", Offset = "0x10CC638", VA = "0x10CC638")]
	public BladeParent()
	{
	}
}
[Token(Token = "0x2000016")]
public class BladeVelocity : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 _prevPosition;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEngine.Vector3 velocity;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bladeVelocityM;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x10CC648", Offset = "0x10CC648", VA = "0x10CC648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x10CC7BC", Offset = "0x10CC7BC", VA = "0x10CC7BC")]
	public BladeVelocity()
	{
	}
}
[Token(Token = "0x2000017")]
public class ButtonScroll : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollRectScript scrollRectScript;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isLeftButton;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x10CC7C4", Offset = "0x10CC7C4", VA = "0x10CC7C4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x10CC888", Offset = "0x10CC888", VA = "0x10CC888")]
	public ButtonScroll()
	{
	}
}
[Token(Token = "0x2000018")]
public class CheckIfAudible : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioListener audioListener;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceFromPlayer;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x10CC890", Offset = "0x10CC890", VA = "0x10CC890")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x10CC91C", Offset = "0x10CC91C", VA = "0x10CC91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x10CCA14", Offset = "0x10CCA14", VA = "0x10CCA14")]
	private void ToggleAudioSource(bool isAudible)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10CCA78", Offset = "0x10CCA78", VA = "0x10CCA78")]
	public CheckIfAudible()
	{
	}
}
[Token(Token = "0x2000019")]
public class collisionExplode : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10CCA80", Offset = "0x10CCA80", VA = "0x10CCA80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x10CCAD0", Offset = "0x10CCAD0", VA = "0x10CCAD0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10CCC2C", Offset = "0x10CCC2C", VA = "0x10CCC2C")]
	public collisionExplode()
	{
	}
}
[Token(Token = "0x200001A")]
public class ConveyorPhysics : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x10CCC34", Offset = "0x10CCC34", VA = "0x10CCC34")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x10CCC94", Offset = "0x10CCC94", VA = "0x10CCC94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x10CCE34", Offset = "0x10CCE34", VA = "0x10CCE34")]
	public ConveyorPhysics()
	{
	}
}
[Token(Token = "0x200001B")]
[RequireComponent(typeof(ReflectionProbe))]
public class CubemapUpdater : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int countFrames;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x10CCE98", Offset = "0x10CCE98", VA = "0x10CCE98")]
	private void Start()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x10CCEA0", Offset = "0x10CCEA0", VA = "0x10CCEA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x10CCED8", Offset = "0x10CCED8", VA = "0x10CCED8")]
	public CubemapUpdater()
	{
	}
}
[Token(Token = "0x200001C")]
public class Deflector : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int deflectMethod;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x10CCEE0", Offset = "0x10CCEE0", VA = "0x10CCEE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x10CD284", Offset = "0x10CD284", VA = "0x10CD284")]
	public Deflector()
	{
	}
}
[Token(Token = "0x200001D")]
public class DontDestoryPico : MonoBehaviour
{
	[Token(Token = "0x6000063")]
	[Address(RVA = "0x10CD294", Offset = "0x10CD294", VA = "0x10CD294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x10CD300", Offset = "0x10CD300", VA = "0x10CD300")]
	public DontDestoryPico()
	{
	}
}
[Token(Token = "0x200001E")]
public class DontDestoryQiyu : MonoBehaviour
{
	[Token(Token = "0x6000065")]
	[Address(RVA = "0x10CD308", Offset = "0x10CD308", VA = "0x10CD308")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x10CD374", Offset = "0x10CD374", VA = "0x10CD374")]
	public DontDestoryQiyu()
	{
	}
}
[Token(Token = "0x200001F")]
public class DontDestroy : MonoBehaviour
{
	[Token(Token = "0x6000067")]
	[Address(RVA = "0x10CD37C", Offset = "0x10CD37C", VA = "0x10CD37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x10CD3E8", Offset = "0x10CD3E8", VA = "0x10CD3E8")]
	public DontDestroy()
	{
	}
}
[Token(Token = "0x2000020")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x10CD3F0", Offset = "0x10CD3F0", VA = "0x10CD3F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x10CD4D0", Offset = "0x10CD4D0", VA = "0x10CD4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x10CD590", Offset = "0x10CD590", VA = "0x10CD590")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x2000021")]
[CreateAssetMenu]
public class RampAsset : ScriptableObject
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient gradient;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int size;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool up;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool overwriteExisting;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x10CD5A4", Offset = "0x10CD5A4", VA = "0x10CD5A4")]
	public RampAsset()
	{
	}
}
[Token(Token = "0x2000022")]
public class AdjustTimeScale : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x10CD61C", Offset = "0x10CD61C", VA = "0x10CD61C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x10CD66C", Offset = "0x10CD66C", VA = "0x10CD66C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x10CD870", Offset = "0x10CD870", VA = "0x10CD870")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x10CD894", Offset = "0x10CD894", VA = "0x10CD894")]
	public AdjustTimeScale()
	{
	}
}
[Token(Token = "0x2000023")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x2000024")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000076")]
			[Address(RVA = "0x10CDA2C", Offset = "0x10CDA2C", VA = "0x10CDA2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000078")]
			[Address(RVA = "0x10CDA74", Offset = "0x10CDA74", VA = "0x10CDA74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x10CD904", Offset = "0x10CD904", VA = "0x10CD904")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x10CD93C", Offset = "0x10CD93C", VA = "0x10CD93C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x10CD940", Offset = "0x10CD940", VA = "0x10CD940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x10CDA34", Offset = "0x10CDA34", VA = "0x10CDA34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x10CD89C", Offset = "0x10CD89C", VA = "0x10CD89C")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10CD92C", Offset = "0x10CD92C", VA = "0x10CD92C")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x2000025")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[CompilerGenerated]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0x10CDEAC", Offset = "0x10CDEAC", VA = "0x10CDEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0x10CDEF4", Offset = "0x10CDEF4", VA = "0x10CDEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x10CDBD4", Offset = "0x10CDBD4", VA = "0x10CDBD4")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x10CDC2C", Offset = "0x10CDC2C", VA = "0x10CDC2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x10CDC30", Offset = "0x10CDC30", VA = "0x10CDC30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x10CDEB4", Offset = "0x10CDEB4", VA = "0x10CDEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[CompilerGenerated]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0x10CE0A8", Offset = "0x10CE0A8", VA = "0x10CE0A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0x10CE0F0", Offset = "0x10CE0F0", VA = "0x10CE0F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x10CDBFC", Offset = "0x10CDBFC", VA = "0x10CDBFC")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x10CDEFC", Offset = "0x10CDEFC", VA = "0x10CDEFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x10CDF00", Offset = "0x10CDF00", VA = "0x10CDF00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x10CE0B0", Offset = "0x10CE0B0", VA = "0x10CE0B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_isExtinguished;

	[Token(Token = "0x4000087")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10CDA7C", Offset = "0x10CDA7C", VA = "0x10CDA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x10CDB34", Offset = "0x10CDB34", VA = "0x10CDB34")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x10CDB6C", Offset = "0x10CDB6C", VA = "0x10CDB6C")]
	[IteratorStateMachine(typeof(<Extinguishing>d__6))]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10CDACC", Offset = "0x10CDACC", VA = "0x10CDACC")]
	[IteratorStateMachine(typeof(<StartingFire>d__7))]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10CDC24", Offset = "0x10CDC24", VA = "0x10CDC24")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x2000028")]
public class GunAim : MonoBehaviour
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int borderLeft;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int borderRight;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int borderTop;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int borderBottom;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera parentCamera;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isOutOfBounds;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x10CE0F8", Offset = "0x10CE0F8", VA = "0x10CE0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x10CE148", Offset = "0x10CE148", VA = "0x10CE148")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x10CE228", Offset = "0x10CE228", VA = "0x10CE228")]
	public bool GetIsOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x10CE230", Offset = "0x10CE230", VA = "0x10CE230")]
	public GunAim()
	{
	}
}
[Token(Token = "0x2000029")]
public class GunShoot : MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fireRate;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float weaponRange;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gunEnd;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem cartridgeEjection;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject metalHitEffect;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sandHitEffect;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stoneHitEffect;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waterLeakEffect;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject waterLeakExtinguishEffect;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] fleshHitEffects;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject woodHitEffect;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float nextFire;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunAim gunAim;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x10CE238", Offset = "0x10CE238", VA = "0x10CE238")]
	private void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x10CE2B4", Offset = "0x10CE2B4", VA = "0x10CE2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x10CE420", Offset = "0x10CE420", VA = "0x10CE420")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x10CE864", Offset = "0x10CE864", VA = "0x10CE864")]
	private void SpawnDecal(RaycastHit hit, GameObject prefab)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x10CE994", Offset = "0x10CE994", VA = "0x10CE994")]
	public GunShoot()
	{
	}
}
[Token(Token = "0x200002A")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x10CE9A8", Offset = "0x10CE9A8", VA = "0x10CE9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x10CE9F8", Offset = "0x10CE9F8", VA = "0x10CE9F8")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x10CEB34", Offset = "0x10CEB34", VA = "0x10CEB34")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class ParticleExamples
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string description;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeaponEffect;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleSystemGO;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Vector3 particlePosition;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UnityEngine.Vector3 particleRotation;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x10CEBB0", Offset = "0x10CEBB0", VA = "0x10CEBB0")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x200002C")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gunGameObject;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGO;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnLocation;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text description;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text navigationDetails;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10CEBB8", Offset = "0x10CEBB8", VA = "0x10CEBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10CEBD4", Offset = "0x10CEBD4", VA = "0x10CEBD4")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10CEEE8", Offset = "0x10CEEE8", VA = "0x10CEEE8")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x200002D")]
public class ProximityActivate : MonoBehaviour
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform distanceActivator;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAtActivator;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform activator;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool activeState;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup target;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtCamera;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool enableInfoPanel;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject infoIcon;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float alpha;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CanvasGroup infoPanel;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion originRotation;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion targetRotation;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10CEEF0", Offset = "0x10CEEF0", VA = "0x10CEEF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x10CEFE8", Offset = "0x10CEFE8", VA = "0x10CEFE8")]
	private bool IsTargetNear()
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x10CF3A0", Offset = "0x10CF3A0", VA = "0x10CF3A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x10CF658", Offset = "0x10CF658", VA = "0x10CF658")]
	public ProximityActivate()
	{
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(CharacterController))]
public class SimpleCharacterMotor : MonoBehaviour
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CursorLockMode cursorLockMode;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cursorVisible;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Movement")]
	public float walkSpeed;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float runSpeed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	[Header("Look")]
	public Transform cameraPivot;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lookSpeed;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invertY;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	[Header("Smoothing")]
	public float movementAcceleration;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController controller;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 movement;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private UnityEngine.Vector3 finalMovement;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion targetRotation;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion targetPivotRotation;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x10CF668", Offset = "0x10CF668", VA = "0x10CF668")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10CF71C", Offset = "0x10CF71C", VA = "0x10CF71C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x10CF8E4", Offset = "0x10CF8E4", VA = "0x10CF8E4")]
	private void UpdateLookRotation()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x10CF734", Offset = "0x10CF734", VA = "0x10CF734")]
	private void UpdateTranslation()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10CFBB4", Offset = "0x10CFBB4", VA = "0x10CFBB4")]
	public SimpleCharacterMotor()
	{
	}
}
[Token(Token = "0x200002F")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000030")]
	public class Section
	{
		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x10CFBF8", Offset = "0x10CFBF8", VA = "0x10CFBF8")]
		public Section()
		{
		}
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10CFBF0", Offset = "0x10CFBF0", VA = "0x10CFBF0")]
	public Readme()
	{
	}
}
[Token(Token = "0x2000031")]
public class FlyCamera : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mainSpeed;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shiftAdd;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxShift;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float camSens;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 lastMouse;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float totalRun;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10CFC00", Offset = "0x10CFC00", VA = "0x10CFC00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10CFE64", Offset = "0x10CFE64", VA = "0x10CFE64")]
	private UnityEngine.Vector3 GetBaseInput()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10CFEF8", Offset = "0x10CFEF8", VA = "0x10CFEF8")]
	public FlyCamera()
	{
	}
}
[Token(Token = "0x2000032")]
public class NoiseMaker : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComputeShader computeShader;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ComputeBuffer buffer;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fogMat;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int size;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int height;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture3D tex3D;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float noiseSize;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float seed;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10CFF18", Offset = "0x10CFF18", VA = "0x10CFF18")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10CFF44", Offset = "0x10CFF44", VA = "0x10CFF44")]
	[ContextMenu("Generate Noise")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x10D02A8", Offset = "0x10D02A8", VA = "0x10D02A8")]
	public NoiseMaker()
	{
	}
}
[Token(Token = "0x2000033")]
public class FadeLine : MonoBehaviour
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fadeOutSpeed;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float FadeOutTime;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10D02C4", Offset = "0x10D02C4", VA = "0x10D02C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10D0314", Offset = "0x10D0314", VA = "0x10D0314")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10D031C", Offset = "0x10D031C", VA = "0x10D031C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10D0398", Offset = "0x10D0398", VA = "0x10D0398")]
	public FadeLine()
	{
	}
}
[Token(Token = "0x2000034")]
public class FixedXRInteractorLineVisual : XRInteractorLineVisual
{
	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10D03A8", Offset = "0x10D03A8", VA = "0x10D03A8")]
	public FixedXRInteractorLineVisual()
	{
	}
}
[Token(Token = "0x2000035")]
public class FixRotation : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotation;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x10D03B0", Offset = "0x10D03B0", VA = "0x10D03B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x10D03E0", Offset = "0x10D03E0", VA = "0x10D03E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x10D040C", Offset = "0x10D040C", VA = "0x10D040C")]
	public FixRotation()
	{
	}
}
[Token(Token = "0x2000036")]
public class FlyInFront : MonoBehaviour
{
	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x10D0414", Offset = "0x10D0414", VA = "0x10D0414")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x10D0524", Offset = "0x10D0524", VA = "0x10D0524")]
	public FlyInFront()
	{
	}
}
[Token(Token = "0x2000037")]
public class GameInfo : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LeaderboardManager lbm;

	[Token(Token = "0x1700000D")]
	public static GameInfo gameInfo
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x10D0578", Offset = "0x10D0578", VA = "0x10D0578")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x10D052C", Offset = "0x10D052C", VA = "0x10D052C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x10D05C0", Offset = "0x10D05C0", VA = "0x10D05C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x10D0610", Offset = "0x10D0610", VA = "0x10D0610")]
	public void SetScoreInt(int scoreInt, int fitlevel, int hit)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x10D0780", Offset = "0x10D0780", VA = "0x10D0780")]
	public void SetScoreFloat(float scoreFloat)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x10D08C4", Offset = "0x10D08C4", VA = "0x10D08C4")]
	public void GetScoreInt()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x10D0AD8", Offset = "0x10D0AD8", VA = "0x10D0AD8")]
	public void GetScoreFloat()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x10D0B44", Offset = "0x10D0B44", VA = "0x10D0B44")]
	public GameInfo()
	{
	}
}
[Token(Token = "0x2000038")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager instance;

	[Token(Token = "0x40000EE")]
	private const string TAG = "QiyuTAGTest";

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string scenename;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool yurfitActive;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int fps;

	[Token(Token = "0x1700000E")]
	public static GameManager Instance
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x10D0F04", Offset = "0x10D0F04", VA = "0x10D0F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x10D0B4C", Offset = "0x10D0B4C", VA = "0x10D0B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x10D0FC0", Offset = "0x10D0FC0", VA = "0x10D0FC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x10D10A8", Offset = "0x10D10A8", VA = "0x10D10A8")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x10D11B0", Offset = "0x10D11B0", VA = "0x10D11B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x10D0C50", Offset = "0x10D0C50", VA = "0x10D0C50")]
	private void MSAAFix()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x10D13B0", Offset = "0x10D13B0", VA = "0x10D13B0")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x10D16E4", Offset = "0x10D16E4", VA = "0x10D16E4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x10D1468", Offset = "0x10D1468", VA = "0x10D1468")]
	private void FocusAcquired()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x10D15A4", Offset = "0x10D15A4", VA = "0x10D15A4")]
	private void FocusLost()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10D0FB8", Offset = "0x10D0FB8", VA = "0x10D0FB8")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000039")]
public class GraphicsSettingsSB : MonoBehaviour
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI MsaaValue;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider MSAASlider;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int qualityIndexMSAA;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI RenderScaleValue;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider RenderScale;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int qualityIndexRenderScaleValue;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI QualityValue;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider QualitySlider;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int qualityIndexQualityValue;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle SpectatorToggle;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x10D1798", Offset = "0x10D1798", VA = "0x10D1798")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x10D1C54", Offset = "0x10D1C54", VA = "0x10D1C54")]
	public void SetMSAA()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x10D1DC8", Offset = "0x10D1DC8", VA = "0x10D1DC8")]
	public void SetReolution()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x10D2038", Offset = "0x10D2038", VA = "0x10D2038")]
	public void SetQuality()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x10D2154", Offset = "0x10D2154", VA = "0x10D2154")]
	public void SpectatorActivator()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x10D2234", Offset = "0x10D2234", VA = "0x10D2234")]
	public GraphicsSettingsSB()
	{
	}
}
[Token(Token = "0x200003A")]
public class HangOnCloth : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToHang;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Cloth myCloth;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x10D223C", Offset = "0x10D223C", VA = "0x10D223C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x10D228C", Offset = "0x10D228C", VA = "0x10D228C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x10D232C", Offset = "0x10D232C", VA = "0x10D232C")]
	public HangOnCloth()
	{
	}
}
[Token(Token = "0x200003B")]
public class WaterReflection : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera mainCamera;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera reflectionCamera;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The plane where the camera will be reflected, the water plane or any object with the same position and rotation")]
	public Transform reflectionPlane;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The texture used by the Water shader to display the reflection")]
	public RenderTexture outputTexture;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool copyCameraParamerers;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float verticalOffset;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isReady;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform reflectionCamTransform;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x10D2334", Offset = "0x10D2334", VA = "0x10D2334")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x10D24AC", Offset = "0x10D24AC", VA = "0x10D24AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x10D24BC", Offset = "0x10D24BC", VA = "0x10D24BC")]
	private void RenderReflection()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x10D2394", Offset = "0x10D2394", VA = "0x10D2394")]
	private void Validate()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x10D266C", Offset = "0x10D266C", VA = "0x10D266C")]
	public WaterReflection()
	{
	}
}
[Token(Token = "0x200003C")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x10D2674", Offset = "0x10D2674", VA = "0x10D2674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x10D2680", Offset = "0x10D2680", VA = "0x10D2680")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x10D2798", Offset = "0x10D2798", VA = "0x10D2798")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200003D")]
public class CFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x10D373C", Offset = "0x10D373C", VA = "0x10D373C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x10D3784", Offset = "0x10D3784", VA = "0x10D3784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x10D346C", Offset = "0x10D346C", VA = "0x10D346C")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x10D35CC", Offset = "0x10D35CC", VA = "0x10D35CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x10D35D0", Offset = "0x10D35D0", VA = "0x10D35D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x10D3744", Offset = "0x10D3744", VA = "0x10D3744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Space]
	public Image slowMoBtn;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public Text EffectLabel;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityEngine.Vector3 defaultCamPosition;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x10D27A8", Offset = "0x10D27A8", VA = "0x10D27A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x10D2B74", Offset = "0x10D2B74", VA = "0x10D2B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x10D31CC", Offset = "0x10D31CC", VA = "0x10D31CC")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x10D328C", Offset = "0x10D328C", VA = "0x10D328C")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x10D335C", Offset = "0x10D335C", VA = "0x10D335C")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x10D33FC", Offset = "0x10D33FC", VA = "0x10D33FC")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x10D3400", Offset = "0x10D3400", VA = "0x10D3400")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x10D2A48", Offset = "0x10D2A48", VA = "0x10D2A48")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x10D2FB0", Offset = "0x10D2FB0", VA = "0x10D2FB0")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x10D3404", Offset = "0x10D3404", VA = "0x10D3404")]
	[IteratorStateMachine(typeof(<CheckForDeletedParticles>d__25))]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x10D2E18", Offset = "0x10D2E18", VA = "0x10D2E18")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x10D2E4C", Offset = "0x10D2E4C", VA = "0x10D2E4C")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x10D2E80", Offset = "0x10D2E80", VA = "0x10D2E80")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x10D3494", Offset = "0x10D3494", VA = "0x10D3494")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000040")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 min;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEngine.Vector3 max;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x10D378C", Offset = "0x10D378C", VA = "0x10D378C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x10D3814", Offset = "0x10D3814", VA = "0x10D3814")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000041")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 baseDir;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Vector3 axis;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 dir;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x10D382C", Offset = "0x10D382C", VA = "0x10D382C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x10D3970", Offset = "0x10D3970", VA = "0x10D3970")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x10D3A4C", Offset = "0x10D3A4C", VA = "0x10D3A4C")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x2000042")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x10D3AE8", Offset = "0x10D3AE8", VA = "0x10D3AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x10D3C24", Offset = "0x10D3C24", VA = "0x10D3C24")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000043")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 rotation;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Vector3 axis;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 dir;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x10D3C80", Offset = "0x10D3C80", VA = "0x10D3C80")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x10D3D20", Offset = "0x10D3D20", VA = "0x10D3D20")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x10D3D90", Offset = "0x10D3D90", VA = "0x10D3D90")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000044")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000045")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x10D4068", Offset = "0x10D4068", VA = "0x10D4068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x10D40B0", Offset = "0x10D40B0", VA = "0x10D40B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x10D3EC0", Offset = "0x10D3EC0", VA = "0x10D3EC0")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x10D3EF0", Offset = "0x10D3EF0", VA = "0x10D3EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x10D3EF4", Offset = "0x10D3EF4", VA = "0x10D3EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x10D4070", Offset = "0x10D4070", VA = "0x10D4070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x10D3E0C", Offset = "0x10D3E0C", VA = "0x10D3E0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x10D3E58", Offset = "0x10D3E58", VA = "0x10D3E58")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__2))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x10D3EE8", Offset = "0x10D3EE8", VA = "0x10D3EE8")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000046")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 rotation;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x10D40B8", Offset = "0x10D40B8", VA = "0x10D40B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x10D4120", Offset = "0x10D4120", VA = "0x10D4120")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000047")]
[RequireComponent(typeof(Light))]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x10D4130", Offset = "0x10D4130", VA = "0x10D4130")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x10D4190", Offset = "0x10D4190", VA = "0x10D4190")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x10D41A4", Offset = "0x10D41A4", VA = "0x10D41A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x10D4254", Offset = "0x10D4254", VA = "0x10D4254")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000048")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x10D4264", Offset = "0x10D4264", VA = "0x10D4264")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x10D42C4", Offset = "0x10D42C4", VA = "0x10D42C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x10D4340", Offset = "0x10D4340", VA = "0x10D4340")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x10D44A4", Offset = "0x10D44A4", VA = "0x10D44A4")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000049")]
public class KeepLocalTransform : MonoBehaviour
{
	[Token(Token = "0x600010E")]
	[Address(RVA = "0x10D44B4", Offset = "0x10D44B4", VA = "0x10D44B4")]
	private void update()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x10D44B8", Offset = "0x10D44B8", VA = "0x10D44B8")]
	public KeepLocalTransform()
	{
	}
}
[Token(Token = "0x200004A")]
public class LaserSpark : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x10D44C0", Offset = "0x10D44C0", VA = "0x10D44C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x10D4510", Offset = "0x10D4510", VA = "0x10D4510")]
	public LaserSpark()
	{
	}
}
[Token(Token = "0x200004B")]
public class LeaderboardManagerOculus : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<LeaderboardEntry> lbeScore;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LeaderboardEntry> lbeFitLevel;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int amount;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] entryObjects;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isfloat;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x10D4518", Offset = "0x10D4518", VA = "0x10D4518")]
	public void SubmitScore(string leaderboardname, int score)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x10D45D0", Offset = "0x10D45D0", VA = "0x10D45D0")]
	public void SubmitScore(string leaderboardname, float score)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x10D46B4", Offset = "0x10D46B4", VA = "0x10D46B4")]
	public void GetLeaderBoardData(string leaderboardnameScore, string leaderboardnameFitLevel, bool b)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x10D485C", Offset = "0x10D485C", VA = "0x10D485C")]
	private void LeaderboardGetCallbackScore(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x10D5124", Offset = "0x10D5124", VA = "0x10D5124")]
	private void LeaderboardGetCallbackFitLevel(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x10D4C30", Offset = "0x10D4C30", VA = "0x10D4C30")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x10D54F8", Offset = "0x10D54F8", VA = "0x10D54F8")]
	public LeaderboardManagerOculus()
	{
	}
}
[Token(Token = "0x200004C")]
public class LeaderboardManager : MonoBehaviour
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<LeaderboardEntry> lbeScore;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LeaderboardEntry> lbeFitLevel;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int amount;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] entryObjects;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isfloat;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x10D5500", Offset = "0x10D5500", VA = "0x10D5500")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x10D5698", Offset = "0x10D5698", VA = "0x10D5698")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x10D06C8", Offset = "0x10D06C8", VA = "0x10D06C8")]
	public void SubmitScore(string leaderboardname, int score)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x10D07E0", Offset = "0x10D07E0", VA = "0x10D07E0")]
	public void SubmitScore(string leaderboardname, float score)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x10D0930", Offset = "0x10D0930", VA = "0x10D0930")]
	public void GetLeaderBoardData(string leaderboardnameScore, string leaderboardnameFitLevel, bool b)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x10D5750", Offset = "0x10D5750", VA = "0x10D5750")]
	private void LeaderboardGetCallbackScore(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x10D6018", Offset = "0x10D6018", VA = "0x10D6018")]
	private void LeaderboardGetCallbackFitLevel(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x10D5B24", Offset = "0x10D5B24", VA = "0x10D5B24")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x10D63EC", Offset = "0x10D63EC", VA = "0x10D63EC")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class DemoScriptUpload : MonoBehaviour
{
	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private sealed class <DownloadScores>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoScriptUpload <>4__this;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012A")]
			[Address(RVA = "0x10D6DF4", Offset = "0x10D6DF4", VA = "0x10D6DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012C")]
			[Address(RVA = "0x10D6E3C", Offset = "0x10D6E3C", VA = "0x10D6E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x10D6810", Offset = "0x10D6810", VA = "0x10D6810")]
		[DebuggerHidden]
		public <DownloadScores>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x10D6BD0", Offset = "0x10D6BD0", VA = "0x10D6BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x10D6BD4", Offset = "0x10D6BD4", VA = "0x10D6BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x10D6DFC", Offset = "0x10D6DFC", VA = "0x10D6DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int boardID;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x10D63F4", Offset = "0x10D63F4", VA = "0x10D63F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x10D67A8", Offset = "0x10D67A8", VA = "0x10D67A8")]
	[IteratorStateMachine(typeof(<DownloadScores>d__2))]
	private IEnumerator DownloadScores()
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x10D6838", Offset = "0x10D6838", VA = "0x10D6838")]
	private void OnLeaderboardUpdated(LB_Entry[] entries)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x10D6AE0", Offset = "0x10D6AE0", VA = "0x10D6AE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x10D6BC8", Offset = "0x10D6BC8", VA = "0x10D6BC8")]
	public DemoScriptUpload()
	{
	}
}
[Token(Token = "0x200004F")]
public class LB_Controller : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	public delegate void OnAllScoresUpdated(LB_Entry[] entries);

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leaderboardStoreScore;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string API_KEY;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LB_Entry[] leaderboardEntries;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LB_Controller instance;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OnAllScoresUpdated OnUpdatedScores;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x10D6E44", Offset = "0x10D6E44", VA = "0x10D6E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x10D6FAC", Offset = "0x10D6FAC", VA = "0x10D6FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10D6528", Offset = "0x10D6528", VA = "0x10D6528")]
	public void StoreScore(float score, string username, int boardid)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x10D6C9C", Offset = "0x10D6C9C", VA = "0x10D6C9C")]
	public void ReloadLeaderboard(int boardid)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x10D7198", Offset = "0x10D7198", VA = "0x10D7198")]
	private void OnRequestFinished(LB_Entry[] entries)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x10D72D0", Offset = "0x10D72D0", VA = "0x10D72D0")]
	public LB_Entry[] Entries()
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x10D72D8", Offset = "0x10D72D8", VA = "0x10D72D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x10D6F54", Offset = "0x10D6F54", VA = "0x10D6F54")]
	public LB_Controller()
	{
	}
}
[Serializable]
[Token(Token = "0x2000051")]
public class Status
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int code;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string msg;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x10D731C", Offset = "0x10D731C", VA = "0x10D731C")]
	public Status()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public class RequestStatus
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Status status;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x10D7324", Offset = "0x10D7324", VA = "0x10D7324")]
	public RequestStatus()
	{
	}
}
[Serializable]
[Token(Token = "0x2000053")]
public class LB_Entry
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int rank;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int points;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x10D732C", Offset = "0x10D732C", VA = "0x10D732C")]
	public LB_Entry()
	{
	}
}
[Serializable]
[Token(Token = "0x2000054")]
public class LeaderboardResult
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LB_Entry[] entries;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x10D7334", Offset = "0x10D7334", VA = "0x10D7334")]
	public LeaderboardResult()
	{
	}
}
[Token(Token = "0x2000055")]
public class LB_GetAllScores : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	public delegate void OnGetAllScoresFinishedDelegate(LB_Entry[] entries);

	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <WaitForRequest>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LB_GetAllScores <>4__this;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int boardid;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000149")]
			[Address(RVA = "0x10D7798", Offset = "0x10D7798", VA = "0x10D7798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014B")]
			[Address(RVA = "0x10D77E0", Offset = "0x10D77E0", VA = "0x10D77E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x10D7420", Offset = "0x10D7420", VA = "0x10D7420")]
		[DebuggerHidden]
		public <WaitForRequest>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x10D7520", Offset = "0x10D7520", VA = "0x10D7520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x10D7524", Offset = "0x10D7524", VA = "0x10D7524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x10D77A0", Offset = "0x10D77A0", VA = "0x10D77A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000058")]
	[CompilerGenerated]
	private sealed class <Queue>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LB_GetAllScores <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014F")]
			[Address(RVA = "0x10D78A4", Offset = "0x10D78A4", VA = "0x10D78A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0x10D78EC", Offset = "0x10D78EC", VA = "0x10D78EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x10D74B0", Offset = "0x10D74B0", VA = "0x10D74B0")]
		[DebuggerHidden]
		public <Queue>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x10D77E8", Offset = "0x10D77E8", VA = "0x10D77E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x10D77EC", Offset = "0x10D77EC", VA = "0x10D77EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x10D78AC", Offset = "0x10D78AC", VA = "0x10D78AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnGetAllScoresFinishedDelegate OnFinishedDelegate;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string API_KEY;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_boardid;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10D733C", Offset = "0x10D733C", VA = "0x10D733C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10D7170", Offset = "0x10D7170", VA = "0x10D7170")]
	public void GetAllScores(int boardid, string KEY)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10D73A8", Offset = "0x10D73A8", VA = "0x10D73A8")]
	[IteratorStateMachine(typeof(<WaitForRequest>d__6))]
	private IEnumerator WaitForRequest(int boardid)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10D7448", Offset = "0x10D7448", VA = "0x10D7448")]
	[IteratorStateMachine(typeof(<Queue>d__7))]
	private IEnumerator Queue()
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10D74D8", Offset = "0x10D74D8", VA = "0x10D74D8")]
	public LB_GetAllScores()
	{
	}
}
[Token(Token = "0x2000059")]
public class LB_StoreScore : MonoBehaviour
{
	[Token(Token = "0x200005A")]
	[CompilerGenerated]
	private sealed class <WaitForRequest>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LB_StoreScore <>4__this;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float score;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string username;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int boardid;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0x10D7CD0", Offset = "0x10D7CD0", VA = "0x10D7CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x10D7D18", Offset = "0x10D7D18", VA = "0x10D7D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x10D79F0", Offset = "0x10D79F0", VA = "0x10D79F0")]
		[DebuggerHidden]
		public <WaitForRequest>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x10D7AB0", Offset = "0x10D7AB0", VA = "0x10D7AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x10D7AB4", Offset = "0x10D7AB4", VA = "0x10D7AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x10D7CD8", Offset = "0x10D7CD8", VA = "0x10D7CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005B")]
	[CompilerGenerated]
	private sealed class <Queue>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LB_StoreScore <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x10D7DE4", Offset = "0x10D7DE4", VA = "0x10D7DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000162")]
			[Address(RVA = "0x10D7E2C", Offset = "0x10D7E2C", VA = "0x10D7E2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x10D7A80", Offset = "0x10D7A80", VA = "0x10D7A80")]
		[DebuggerHidden]
		public <Queue>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x10D7D20", Offset = "0x10D7D20", VA = "0x10D7D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x10D7D24", Offset = "0x10D7D24", VA = "0x10D7D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x10D7DEC", Offset = "0x10D7DEC", VA = "0x10D7DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string API_KEY;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_username;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_score;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_boardid;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x10D78F4", Offset = "0x10D78F4", VA = "0x10D78F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x10D7018", Offset = "0x10D7018", VA = "0x10D7018")]
	public void StoreScore(float score, string username, int boardid, string KEY)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x10D7960", Offset = "0x10D7960", VA = "0x10D7960")]
	[IteratorStateMachine(typeof(<WaitForRequest>d__6))]
	private IEnumerator WaitForRequest(float score, string username, int boardid)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x10D7A18", Offset = "0x10D7A18", VA = "0x10D7A18")]
	[IteratorStateMachine(typeof(<Queue>d__7))]
	private IEnumerator Queue()
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x10D7AA8", Offset = "0x10D7AA8", VA = "0x10D7AA8")]
	public LB_StoreScore()
	{
	}
}
[Token(Token = "0x200005C")]
public class LevelEndStopSpawning : MonoBehaviour
{
	[Token(Token = "0x6000163")]
	[Address(RVA = "0x10D7E34", Offset = "0x10D7E34", VA = "0x10D7E34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x10D7EC4", Offset = "0x10D7EC4", VA = "0x10D7EC4")]
	public LevelEndStopSpawning()
	{
	}
}
[Token(Token = "0x200005D")]
public class LIVMirrorFix : MonoBehaviour
{
	[Token(Token = "0x6000165")]
	[Address(RVA = "0x10D7ECC", Offset = "0x10D7ECC", VA = "0x10D7ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x10D7FE4", Offset = "0x10D7FE4", VA = "0x10D7FE4")]
	public LIVMirrorFix()
	{
	}
}
[Token(Token = "0x200005E")]
public class LoadAudio : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip TutorialAudio;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip CaveAudio;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip VioletAudio;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip OrangeAudio;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip WhiteAudio;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip YellowAudio;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip StarsAudio;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip BlackholeAudio;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip DarkAudio;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip OthersideAudio;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip OceanAudio;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x10D7FEC", Offset = "0x10D7FEC", VA = "0x10D7FEC")]
	public LoadAudio()
	{
	}
}
[Token(Token = "0x200005F")]
public class SliderLogic : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pointCounter;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float seconds;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float hapticsduration;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject endPoint;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x10D7FF4", Offset = "0x10D7FF4", VA = "0x10D7FF4")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x10D8140", Offset = "0x10D8140", VA = "0x10D8140")]
	public SliderLogic()
	{
	}
}
[Token(Token = "0x2000060")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private UnityEngine.Vector3 _lookAtTarget;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x10D8150", Offset = "0x10D8150", VA = "0x10D8150")]
	private void Update()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10D8208", Offset = "0x10D8208", VA = "0x10D8208")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x2000061")]
public class MouseMove : MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _sensitivity;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.Vector3 _originalPos;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x10D8218", Offset = "0x10D8218", VA = "0x10D8218")]
	private void Start()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x10D8248", Offset = "0x10D8248", VA = "0x10D8248")]
	private void Update()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x10D82F8", Offset = "0x10D82F8", VA = "0x10D82F8")]
	public MouseMove()
	{
	}
}
[Token(Token = "0x2000062")]
public class SwooshTest : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationClip _animation;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationState _animationState;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _start;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int _end;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _startN;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _endN;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _time;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _prevTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _prevAnimTime;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeleeWeaponTrail _trail;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _firstFrame;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x10D8308", Offset = "0x10D8308", VA = "0x10D8308")]
	private void Start()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x10D83D8", Offset = "0x10D83D8", VA = "0x10D83D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x10D84B8", Offset = "0x10D84B8", VA = "0x10D84B8")]
	public SwooshTest()
	{
	}
}
[Token(Token = "0x2000063")]
public class Interpolate
{
	[Token(Token = "0x2000064")]
	public enum EaseType
	{
		[Token(Token = "0x4000195")]
		Linear,
		[Token(Token = "0x4000196")]
		EaseInQuad,
		[Token(Token = "0x4000197")]
		EaseOutQuad,
		[Token(Token = "0x4000198")]
		EaseInOutQuad,
		[Token(Token = "0x4000199")]
		EaseInCubic,
		[Token(Token = "0x400019A")]
		EaseOutCubic,
		[Token(Token = "0x400019B")]
		EaseInOutCubic,
		[Token(Token = "0x400019C")]
		EaseInQuart,
		[Token(Token = "0x400019D")]
		EaseOutQuart,
		[Token(Token = "0x400019E")]
		EaseInOutQuart,
		[Token(Token = "0x400019F")]
		EaseInQuint,
		[Token(Token = "0x40001A0")]
		EaseOutQuint,
		[Token(Token = "0x40001A1")]
		EaseInOutQuint,
		[Token(Token = "0x40001A2")]
		EaseInSine,
		[Token(Token = "0x40001A3")]
		EaseOutSine,
		[Token(Token = "0x40001A4")]
		EaseInOutSine,
		[Token(Token = "0x40001A5")]
		EaseInExpo,
		[Token(Token = "0x40001A6")]
		EaseOutExpo,
		[Token(Token = "0x40001A7")]
		EaseInOutExpo,
		[Token(Token = "0x40001A8")]
		EaseInCirc,
		[Token(Token = "0x40001A9")]
		EaseOutCirc,
		[Token(Token = "0x40001AA")]
		EaseInOutCirc
	}

	[Token(Token = "0x2000065")]
	public delegate UnityEngine.Vector3 ToVector3<T>(T v);

	[Token(Token = "0x2000066")]
	public delegate float Function(float a, float b, float c, float d);

	[Token(Token = "0x2000067")]
	[CompilerGenerated]
	private sealed class <NewTimer>d__3 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float duration;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float <>3__duration;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700001D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0x10D9BB4", Offset = "0x10D9BB4", VA = "0x10D9BB4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x10D9BFC", Offset = "0x10D9BFC", VA = "0x10D9BFC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x10D8560", Offset = "0x10D8560", VA = "0x10D8560")]
		[DebuggerHidden]
		public <NewTimer>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x10D9B00", Offset = "0x10D9B00", VA = "0x10D9B00", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x10D9B04", Offset = "0x10D9B04", VA = "0x10D9B04", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x10D9BBC", Offset = "0x10D9BBC", VA = "0x10D9BBC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x10D9C58", Offset = "0x10D9C58", VA = "0x10D9C58", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x10D9CFC", Offset = "0x10D9CFC", VA = "0x10D9CFC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000068")]
	[CompilerGenerated]
	private sealed class <NewCounter>d__6 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int start;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int <>3__start;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int step;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__step;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int end;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int <>3__end;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x1700001F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x10D9D68", Offset = "0x10D9D68", VA = "0x10D9D68", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0x10D9DB0", Offset = "0x10D9DB0", VA = "0x10D9DB0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x10D8624", Offset = "0x10D8624", VA = "0x10D8624")]
		[DebuggerHidden]
		public <NewCounter>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x10D9D00", Offset = "0x10D9D00", VA = "0x10D9D00", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x10D9D04", Offset = "0x10D9D04", VA = "0x10D9D04", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x10D9D70", Offset = "0x10D9D70", VA = "0x10D9D70", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x10D9E0C", Offset = "0x10D9E0C", VA = "0x10D9E0C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x10D9EC0", Offset = "0x10D9EC0", VA = "0x10D9EC0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000069")]
	[CompilerGenerated]
	private sealed class <NewEase>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 end;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 start;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerable<float> driver;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Function ease;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float total;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private UnityEngine.Vector3 <distance>5__2;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B8")]
			[Address(RVA = "0x10DA294", Offset = "0x10DA294", VA = "0x10DA294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x10DA2DC", Offset = "0x10DA2DC", VA = "0x10DA2DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x10D8810", Offset = "0x10D8810", VA = "0x10D8810")]
		[DebuggerHidden]
		public <NewEase>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x10D9EC4", Offset = "0x10D9EC4", VA = "0x10D9EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x10D9EE0", Offset = "0x10D9EE0", VA = "0x10D9EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x10DA1E4", Offset = "0x10DA1E4", VA = "0x10DA1E4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x10DA29C", Offset = "0x10DA29C", VA = "0x10DA29C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006A")]
	[CompilerGenerated]
	private sealed class <NewBezier>d__16<T> : IEnumerable<UnityEngine.Vector3>, IEnumerable, IEnumerator<UnityEngine.Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEngine.Vector3 <>2__current;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerable<float> steps;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<float> <>3__steps;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Function ease;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Function <>3__ease;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maxStep;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float <>3__maxStep;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEngine.Vector3[] <points>5__2;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x17000023")]
		private UnityEngine.Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x60001BF")]
			[DebuggerHidden]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C1")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BB")]
		[DebuggerHidden]
		public <NewBezier>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60001BC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BD")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001C0")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001C2")]
		[DebuggerHidden]
		private IEnumerator<UnityEngine.Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001C3")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200006B")]
	[CompilerGenerated]
	private sealed class <NewCatmullRom>d__20<T> : IEnumerable<UnityEngine.Vector3>, IEnumerable, IEnumerator<UnityEngine.Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEngine.Vector3 <>2__current;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool loop;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool <>3__loop;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int slices;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>3__slices;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <last>5__2;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <current>5__3;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <previous>5__4;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <start>5__5;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <end>5__6;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <next>5__7;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <stepCount>5__8;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <step>5__9;

		[Token(Token = "0x17000025")]
		private UnityEngine.Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x60001C7")]
			[DebuggerHidden]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C4")]
		[DebuggerHidden]
		public <NewCatmullRom>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60001C5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001CA")]
		[DebuggerHidden]
		private IEnumerator<UnityEngine.Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001CB")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x10D84C8", Offset = "0x10D84C8", VA = "0x10D84C8")]
	private static UnityEngine.Vector3 Identity(UnityEngine.Vector3 v)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x10D84CC", Offset = "0x10D84CC", VA = "0x10D84CC")]
	private static UnityEngine.Vector3 TransformDotPosition(Transform t)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x10D84E0", Offset = "0x10D84E0", VA = "0x10D84E0")]
	[IteratorStateMachine(typeof(<NewTimer>d__3))]
	private static IEnumerable<float> NewTimer(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10D8594", Offset = "0x10D8594", VA = "0x10D8594")]
	[IteratorStateMachine(typeof(<NewCounter>d__6))]
	private static IEnumerable<float> NewCounter(int start, int end, int step)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10D8658", Offset = "0x10D8658", VA = "0x10D8658")]
	public static IEnumerator NewEase(Function ease, UnityEngine.Vector3 start, UnityEngine.Vector3 end, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x10D8790", Offset = "0x10D8790", VA = "0x10D8790")]
	public static IEnumerator NewEase(Function ease, UnityEngine.Vector3 start, UnityEngine.Vector3 end, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10D86D0", Offset = "0x10D86D0", VA = "0x10D86D0")]
	[IteratorStateMachine(typeof(<NewEase>d__9))]
	private static IEnumerator NewEase(Function ease, UnityEngine.Vector3 start, UnityEngine.Vector3 end, float total, IEnumerable<float> driver)
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x10D8838", Offset = "0x10D8838", VA = "0x10D8838")]
	private static UnityEngine.Vector3 Ease(Function ease, UnityEngine.Vector3 start, UnityEngine.Vector3 distance, float elapsedTime, float duration)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x10D88F8", Offset = "0x10D88F8", VA = "0x10D88F8")]
	public static Function Ease(EaseType type)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x10D8D58", Offset = "0x10D8D58", VA = "0x10D8D58")]
	public static IEnumerable<UnityEngine.Vector3> NewBezier(Function ease, Transform[] nodes, float duration)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10D8E24", Offset = "0x10D8E24", VA = "0x10D8E24")]
	public static IEnumerable<UnityEngine.Vector3> NewBezier(Function ease, Transform[] nodes, int slices)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10D8EFC", Offset = "0x10D8EFC", VA = "0x10D8EFC")]
	public static IEnumerable<UnityEngine.Vector3> NewBezier(Function ease, UnityEngine.Vector3[] points, float duration)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x10D8FC8", Offset = "0x10D8FC8", VA = "0x10D8FC8")]
	public static IEnumerable<UnityEngine.Vector3> NewBezier(Function ease, UnityEngine.Vector3[] points, int slices)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[IteratorStateMachine(typeof(<NewBezier>d__16<>))]
	private static IEnumerable<UnityEngine.Vector3> NewBezier<T>(Function ease, IList nodes, ToVector3<T> toVector3, float maxStep, IEnumerable<float> steps)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x10D90A0", Offset = "0x10D90A0", VA = "0x10D90A0")]
	private static UnityEngine.Vector3 Bezier(Function ease, UnityEngine.Vector3[] points, float elapsedTime, float duration)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x10D9210", Offset = "0x10D9210", VA = "0x10D9210")]
	public static IEnumerable<UnityEngine.Vector3> NewCatmullRom(Transform[] nodes, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x10D92C0", Offset = "0x10D92C0", VA = "0x10D92C0")]
	public static IEnumerable<UnityEngine.Vector3> NewCatmullRom(UnityEngine.Vector3[] points, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[IteratorStateMachine(typeof(<NewCatmullRom>d__20<>))]
	private static IEnumerable<UnityEngine.Vector3> NewCatmullRom<T>(IList nodes, ToVector3<T> toVector3, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x10D9370", Offset = "0x10D9370", VA = "0x10D9370")]
	private static UnityEngine.Vector3 CatmullRom(UnityEngine.Vector3 previous, UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Vector3 next, float elapsedTime, float duration)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x10D9430", Offset = "0x10D9430", VA = "0x10D9430")]
	private static float Linear(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x10D9448", Offset = "0x10D9448", VA = "0x10D9448")]
	private static float EaseInQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x10D9468", Offset = "0x10D9468", VA = "0x10D9468")]
	private static float EaseOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x10D9490", Offset = "0x10D9490", VA = "0x10D9490")]
	private static float EaseInOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x10D94F4", Offset = "0x10D94F4", VA = "0x10D94F4")]
	private static float EaseInCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x10D9518", Offset = "0x10D9518", VA = "0x10D9518")]
	private static float EaseOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x10D954C", Offset = "0x10D954C", VA = "0x10D954C")]
	private static float EaseInOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x10D95AC", Offset = "0x10D95AC", VA = "0x10D95AC")]
	private static float EaseInQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x10D95D4", Offset = "0x10D95D4", VA = "0x10D95D4")]
	private static float EaseOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x10D9608", Offset = "0x10D9608", VA = "0x10D9608")]
	private static float EaseInOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x10D9674", Offset = "0x10D9674", VA = "0x10D9674")]
	private static float EaseInQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x10D96A0", Offset = "0x10D96A0", VA = "0x10D96A0")]
	private static float EaseOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x10D96DC", Offset = "0x10D96DC", VA = "0x10D96DC")]
	private static float EaseInOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x10D974C", Offset = "0x10D974C", VA = "0x10D974C")]
	private static float EaseInSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x10D9790", Offset = "0x10D9790", VA = "0x10D9790")]
	private static float EaseOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x10D97D0", Offset = "0x10D97D0", VA = "0x10D97D0")]
	private static float EaseInOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x10D9820", Offset = "0x10D9820", VA = "0x10D9820")]
	private static float EaseInExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x10D9864", Offset = "0x10D9864", VA = "0x10D9864")]
	private static float EaseOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x10D98A8", Offset = "0x10D98A8", VA = "0x10D98A8")]
	private static float EaseInOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x10D9930", Offset = "0x10D9930", VA = "0x10D9930")]
	private static float EaseInCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x10D9960", Offset = "0x10D9960", VA = "0x10D9960")]
	private static float EaseOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x10D9994", Offset = "0x10D9994", VA = "0x10D9994")]
	private static float EaseInOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x10D99F8", Offset = "0x10D99F8", VA = "0x10D99F8")]
	public Interpolate()
	{
	}
}
[Token(Token = "0x200006C")]
public class MeleeWeaponTrail : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public class Point
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeCreated;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Vector3 basePosition;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 tipPosition;

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x10DCAF4", Offset = "0x10DCAF4", VA = "0x10DCAF4")]
		public Point()
		{
		}
	}

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _emit;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _use;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _emitTime;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material _material;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _lifeTime;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Color[] _colors;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float[] _sizes;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _minVertexDistance;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _maxVertexDistance;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _minVertexDistanceSqr;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _maxVertexDistanceSqr;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _maxAngle;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool _autoDestruct;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int subdivisions;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _base;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _tip;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Point> _points;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Point> _smoothedPoints;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _trailObject;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh _trailMesh;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UnityEngine.Vector3 _lastPosition;

	[Token(Token = "0x17000027")]
	public bool Emit
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x10DA2E4", Offset = "0x10DA2E4", VA = "0x10DA2E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool Use
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x10DA2F0", Offset = "0x10DA2F0", VA = "0x10DA2F0")]
		set
		{
		}
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x10DA2FC", Offset = "0x10DA2FC", VA = "0x10DA2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x10DA63C", Offset = "0x10DA63C", VA = "0x10DA63C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x10DA698", Offset = "0x10DA698", VA = "0x10DA698")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x10DB734", Offset = "0x10DB734", VA = "0x10DB734")]
	private void RemoveOldPoints(List<Point> pointList)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x10DBA28", Offset = "0x10DBA28", VA = "0x10DBA28")]
	public MeleeWeaponTrail()
	{
	}
}
[Token(Token = "0x200006E")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x10DCAFC", Offset = "0x10DCAFC", VA = "0x10DCAFC")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x10DCB88", Offset = "0x10DCB88", VA = "0x10DCB88")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x10DD084", Offset = "0x10DD084", VA = "0x10DD084")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x10DD278", Offset = "0x10DD278", VA = "0x10DD278")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200006F")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x10DD2E0", Offset = "0x10DD2E0", VA = "0x10DD2E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x10DD378", Offset = "0x10DD378", VA = "0x10DD378")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000070")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x10DD380", Offset = "0x10DD380", VA = "0x10DD380")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x10DD4B4", Offset = "0x10DD4B4", VA = "0x10DD4B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x10DD64C", Offset = "0x10DD64C", VA = "0x10DD64C")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x10DDC7C", Offset = "0x10DDC7C", VA = "0x10DDC7C")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000071")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x10DDC84", Offset = "0x10DDC84", VA = "0x10DDC84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x10DDD1C", Offset = "0x10DDD1C", VA = "0x10DDD1C")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000072")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	[CompilerGenerated]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E8")]
			[Address(RVA = "0x10DE4C8", Offset = "0x10DE4C8", VA = "0x10DE4C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0x10DE510", Offset = "0x10DE510", VA = "0x10DE510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x10DE234", Offset = "0x10DE234", VA = "0x10DE234")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x10DE370", Offset = "0x10DE370", VA = "0x10DE370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x10DE374", Offset = "0x10DE374", VA = "0x10DE374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x10DE4D0", Offset = "0x10DE4D0", VA = "0x10DE4D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x10DDD24", Offset = "0x10DDD24", VA = "0x10DDD24")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x10DDDA8", Offset = "0x10DDDA8", VA = "0x10DDDA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x10DE1CC", Offset = "0x10DE1CC", VA = "0x10DE1CC")]
	[IteratorStateMachine(typeof(<largeNumber>d__6))]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x10DE25C", Offset = "0x10DE25C", VA = "0x10DE25C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x10DE2F4", Offset = "0x10DE2F4", VA = "0x10DE2F4")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000074")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x10DE518", Offset = "0x10DE518", VA = "0x10DE518")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x10DE568", Offset = "0x10DE568", VA = "0x10DE568")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x10DE5E8", Offset = "0x10DE5E8", VA = "0x10DE5E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x10DE680", Offset = "0x10DE680", VA = "0x10DE680")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000075")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x10DE688", Offset = "0x10DE688", VA = "0x10DE688")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x10DE7B8", Offset = "0x10DE7B8", VA = "0x10DE7B8")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x2000076")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x10DE7C0", Offset = "0x10DE7C0", VA = "0x10DE7C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x10DE858", Offset = "0x10DE858", VA = "0x10DE858")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000077")]
[ExecuteInEditMode]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x10DE860", Offset = "0x10DE860", VA = "0x10DE860")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x2000078")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x10DE868", Offset = "0x10DE868", VA = "0x10DE868")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x10DEA50", Offset = "0x10DEA50", VA = "0x10DEA50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x10DF62C", Offset = "0x10DF62C", VA = "0x10DF62C")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x10DF738", Offset = "0x10DF738", VA = "0x10DF738")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000079")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x10DF740", Offset = "0x10DF740", VA = "0x10DF740")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x10DF7D8", Offset = "0x10DF7D8", VA = "0x10DF7D8")]
	public void Start()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10DF878", Offset = "0x10DF878", VA = "0x10DF878")]
	public void Update()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x10DFB08", Offset = "0x10DFB08", VA = "0x10DFB08")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x200007A")]
[RequireComponent(typeof(AudioSource))]
public class Metronom : MonoBehaviour
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double bpm;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int signatureHi;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int signatureLo;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double nextTick;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float amp;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float phase;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double sampleRate;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int accent;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool running;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x10DFB10", Offset = "0x10DFB10", VA = "0x10DFB10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x10DFB5C", Offset = "0x10DFB5C", VA = "0x10DFB5C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x10DFDE4", Offset = "0x10DFDE4", VA = "0x10DFDE4")]
	public Metronom()
	{
	}
}
[Token(Token = "0x200007B")]
public class ModeSelection : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	[CompilerGenerated]
	private sealed class <LoadNewScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeSelection <>4__this;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000209")]
			[Address(RVA = "0x10E01E4", Offset = "0x10E01E4", VA = "0x10E01E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x10E022C", Offset = "0x10E022C", VA = "0x10E022C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x10E0078", Offset = "0x10E0078", VA = "0x10E0078")]
		[DebuggerHidden]
		public <LoadNewScene>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x10E00A8", Offset = "0x10E00A8", VA = "0x10E00A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x10E00AC", Offset = "0x10E00AC", VA = "0x10E00AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x10E01EC", Offset = "0x10E01EC", VA = "0x10E01EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fitnessmode;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool Flowmode;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRScreenFade1 ovrFade;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound1;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x10DFE08", Offset = "0x10DFE08", VA = "0x10DFE08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x10DFE74", Offset = "0x10DFE74", VA = "0x10DFE74")]
	public void Infinity()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x10DFF6C", Offset = "0x10DFF6C", VA = "0x10DFF6C")]
	public void Action()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x10DFFEC", Offset = "0x10DFFEC", VA = "0x10DFFEC")]
	public void Fitness()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x10E0070", Offset = "0x10E0070", VA = "0x10E0070")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x10DFEF8", Offset = "0x10DFEF8", VA = "0x10DFEF8")]
	[IteratorStateMachine(typeof(<LoadNewScene>d__9))]
	private IEnumerator LoadNewScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x10E00A0", Offset = "0x10E00A0", VA = "0x10E00A0")]
	public ModeSelection()
	{
	}
}
[Token(Token = "0x200007D")]
public class MysticSphereActivatePulsing : MonoBehaviour
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSyncScale thisScaler;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x10E0234", Offset = "0x10E0234", VA = "0x10E0234")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x10E0298", Offset = "0x10E0298", VA = "0x10E0298")]
	public MysticSphereActivatePulsing()
	{
	}
}
[Token(Token = "0x200007E")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x600020E")]
	[Address(RVA = "0x10E02A0", Offset = "0x10E02A0", VA = "0x10E02A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x10E02A4", Offset = "0x10E02A4", VA = "0x10E02A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x10E02A8", Offset = "0x10E02A8", VA = "0x10E02A8")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x200007F")]
[ExecuteAlways]
public class PipeLineAssetScene : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderPipelineAsset renderPipelineAsset;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x10E02B0", Offset = "0x10E02B0", VA = "0x10E02B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x10E02D4", Offset = "0x10E02D4", VA = "0x10E02D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x10E02F8", Offset = "0x10E02F8", VA = "0x10E02F8")]
	public PipeLineAssetScene()
	{
	}
}
[Token(Token = "0x2000080")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private UnityEngine.Vector3 headPos;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x10E0300", Offset = "0x10E0300", VA = "0x10E0300")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10E0440", Offset = "0x10E0440", VA = "0x10E0440")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x10E0770", Offset = "0x10E0770", VA = "0x10E0770")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10E0908", Offset = "0x10E0908", VA = "0x10E0908", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x10E0B7C", Offset = "0x10E0B7C", VA = "0x10E0B7C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000081")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10E0BFC", Offset = "0x10E0BFC", VA = "0x10E0BFC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10E0C78", Offset = "0x10E0C78", VA = "0x10E0C78")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x10E0DE8", Offset = "0x10E0DE8", VA = "0x10E0DE8")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000082")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700002D")]
	public bool IsVisible
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x10E0DF0", Offset = "0x10E0DF0", VA = "0x10E0DF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x10E0DF8", Offset = "0x10E0DF8", VA = "0x10E0DF8")]
		set
		{
		}
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x10E0F1C", Offset = "0x10E0F1C", VA = "0x10E0F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10E110C", Offset = "0x10E110C", VA = "0x10E110C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10E1114", Offset = "0x10E1114", VA = "0x10E1114")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000083")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000084")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x10E1D08", Offset = "0x10E1D08", VA = "0x10E1D08")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000085")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x10E1D10", Offset = "0x10E1D10", VA = "0x10E1D10")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x10E1EEC", Offset = "0x10E1EEC", VA = "0x10E1EEC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x10E1128", Offset = "0x10E1128", VA = "0x10E1128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x10E126C", Offset = "0x10E126C", VA = "0x10E126C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x10E1660", Offset = "0x10E1660", VA = "0x10E1660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x10E15C0", Offset = "0x10E15C0", VA = "0x10E15C0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x10E19EC", Offset = "0x10E19EC", VA = "0x10E19EC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x10E1E44", Offset = "0x10E1E44", VA = "0x10E1E44")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000086")]
public class P2PManager
{
	[Token(Token = "0x2000087")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000246")]
		Update = 1
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x10E1F80", Offset = "0x10E1F80", VA = "0x10E1F80")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x10E204C", Offset = "0x10E204C", VA = "0x10E204C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x10E228C", Offset = "0x10E228C", VA = "0x10E228C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x10E23D4", Offset = "0x10E23D4", VA = "0x10E23D4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x10E2524", Offset = "0x10E2524", VA = "0x10E2524")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x10E2710", Offset = "0x10E2710", VA = "0x10E2710")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x10E2AC8", Offset = "0x10E2AC8", VA = "0x10E2AC8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x10E2D50", Offset = "0x10E2D50", VA = "0x10E2D50")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x10E28D4", Offset = "0x10E28D4", VA = "0x10E28D4")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x10E2C9C", Offset = "0x10E2C9C", VA = "0x10E2C9C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x10E29A0", Offset = "0x10E29A0", VA = "0x10E29A0")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x10E2F78", Offset = "0x10E2F78", VA = "0x10E2F78")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x10E2910", Offset = "0x10E2910", VA = "0x10E2910")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x10E2CD4", Offset = "0x10E2CD4", VA = "0x10E2CD4")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x10E2A38", Offset = "0x10E2A38", VA = "0x10E2A38")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x10E2FF4", Offset = "0x10E2FF4", VA = "0x10E2FF4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000088")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x10E3070", Offset = "0x10E3070", VA = "0x10E3070", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x10E33F0", Offset = "0x10E33F0", VA = "0x10E33F0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x10E3414", Offset = "0x10E3414", VA = "0x10E3414", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x10E37B4", Offset = "0x10E37B4", VA = "0x10E37B4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x10E3914", Offset = "0x10E3914", VA = "0x10E3914")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x10E3990", Offset = "0x10E3990", VA = "0x10E3990")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x10E3A7C", Offset = "0x10E3A7C", VA = "0x10E3A7C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000089")]
public class RemotePlayer
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Vector3 receivedRootPosition;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public UnityEngine.Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10E3B54", Offset = "0x10E3B54", VA = "0x10E3B54")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200008A")]
public class RoomManager
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x10E3B5C", Offset = "0x10E3B5C", VA = "0x10E3B5C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x10E3C40", Offset = "0x10E3C40", VA = "0x10E3C40")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x10E3E40", Offset = "0x10E3E40", VA = "0x10E3E40")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x10E3F58", Offset = "0x10E3F58", VA = "0x10E3F58")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x10E4010", Offset = "0x10E4010", VA = "0x10E4010")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x10E43FC", Offset = "0x10E43FC", VA = "0x10E43FC")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x10E3E6C", Offset = "0x10E3E6C", VA = "0x10E3E6C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x10E4474", Offset = "0x10E4474", VA = "0x10E4474")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x10E4B8C", Offset = "0x10E4B8C", VA = "0x10E4B8C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x10E4E60", Offset = "0x10E4E60", VA = "0x10E4E60")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x10E473C", Offset = "0x10E473C", VA = "0x10E473C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200008B")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	public enum State
	{
		[Token(Token = "0x400027E")]
		INITIALIZING,
		[Token(Token = "0x400027F")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000280")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000281")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000282")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000283")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000284")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000285")]
		SHUTDOWN
	}

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly UnityEngine.Vector3 START_POSITION_ONE;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly UnityEngine.Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly UnityEngine.Vector3 START_POSITION_TWO;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly UnityEngine.Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly UnityEngine.Vector3 START_POSITION_THREE;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly UnityEngine.Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly UnityEngine.Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700002E")]
	public static State CurrentState
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x10E6B9C", Offset = "0x10E6B9C", VA = "0x10E6B9C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700002F")]
	public static ulong MyID
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x10E2114", Offset = "0x10E2114", VA = "0x10E2114")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000030")]
	public static string MyOculusID
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x10E6C00", Offset = "0x10E6C00", VA = "0x10E6C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10E342C", Offset = "0x10E342C", VA = "0x10E342C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x10E309C", Offset = "0x10E309C", VA = "0x10E309C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x10E58DC", Offset = "0x10E58DC", VA = "0x10E58DC")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x10E3410", Offset = "0x10E3410", VA = "0x10E3410", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x10E5A64", Offset = "0x10E5A64", VA = "0x10E5A64")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x10E5B5C", Offset = "0x10E5B5C", VA = "0x10E5B5C")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x10E62EC", Offset = "0x10E62EC", VA = "0x10E62EC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x10E6704", Offset = "0x10E6704", VA = "0x10E6704")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x10E6928", Offset = "0x10E6928", VA = "0x10E6928")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x10E6B34", Offset = "0x10E6B34", VA = "0x10E6B34")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x10E5768", Offset = "0x10E5768", VA = "0x10E5768")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x10E3D94", Offset = "0x10E3D94", VA = "0x10E3D94")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x10E40FC", Offset = "0x10E40FC", VA = "0x10E40FC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x10E6D04", Offset = "0x10E6D04", VA = "0x10E6D04")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x10E433C", Offset = "0x10E433C", VA = "0x10E433C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x10E4EC8", Offset = "0x10E4EC8", VA = "0x10E4EC8")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x10E52A4", Offset = "0x10E52A4", VA = "0x10E52A4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x10E5384", Offset = "0x10E5384", VA = "0x10E5384")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x10E21D8", Offset = "0x10E21D8", VA = "0x10E21D8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x10E504C", Offset = "0x10E504C", VA = "0x10E504C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x10E50D4", Offset = "0x10E50D4", VA = "0x10E50D4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x10E6E88", Offset = "0x10E6E88", VA = "0x10E6E88")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x10E714C", Offset = "0x10E714C", VA = "0x10E714C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x10E5700", Offset = "0x10E5700", VA = "0x10E5700")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x10E22FC", Offset = "0x10E22FC", VA = "0x10E22FC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x10E3AD8", Offset = "0x10E3AD8", VA = "0x10E3AD8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200008D")]
public class VoipManager
{
	[Token(Token = "0x600026B")]
	[Address(RVA = "0x10E5810", Offset = "0x10E5810", VA = "0x10E5810")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x10E7084", Offset = "0x10E7084", VA = "0x10E7084")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x10E6AC4", Offset = "0x10E6AC4", VA = "0x10E6AC4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x10E7394", Offset = "0x10E7394", VA = "0x10E7394")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x10E74E4", Offset = "0x10E74E4", VA = "0x10E74E4")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200008E")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x10E76D0", Offset = "0x10E76D0", VA = "0x10E76D0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x10E7740", Offset = "0x10E7740", VA = "0x10E7740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x10E7884", Offset = "0x10E7884", VA = "0x10E7884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x10E78D8", Offset = "0x10E78D8", VA = "0x10E78D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x10E7770", Offset = "0x10E7770", VA = "0x10E7770")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x10E7988", Offset = "0x10E7988", VA = "0x10E7988")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, UnityEngine.Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x10E79A0", Offset = "0x10E79A0", VA = "0x10E79A0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200008F")]
public class AvatarLayer
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x10E79A8", Offset = "0x10E79A8", VA = "0x10E79A8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000090")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x10E79B0", Offset = "0x10E79B0", VA = "0x10E79B0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000091")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x10EAA28", Offset = "0x10EAA28", VA = "0x10EAA28")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000093")]
	public enum HandType
	{
		[Token(Token = "0x40002E5")]
		Right,
		[Token(Token = "0x40002E6")]
		Left,
		[Token(Token = "0x40002E7")]
		Max
	}

	[Token(Token = "0x2000094")]
	public enum HandJoint
	{
		[Token(Token = "0x40002E9")]
		HandBase,
		[Token(Token = "0x40002EA")]
		IndexBase,
		[Token(Token = "0x40002EB")]
		IndexTip,
		[Token(Token = "0x40002EC")]
		ThumbBase,
		[Token(Token = "0x40002ED")]
		ThumbTip,
		[Token(Token = "0x40002EE")]
		Max
	}

	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AA")]
			[Address(RVA = "0x10EC29C", Offset = "0x10EC29C", VA = "0x10EC29C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AC")]
			[Address(RVA = "0x10EC2E4", Offset = "0x10EC2E4", VA = "0x10EC2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x10EBE74", Offset = "0x10EBE74", VA = "0x10EBE74")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x10EC100", Offset = "0x10EC100", VA = "0x10EC100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x10EC104", Offset = "0x10EC104", VA = "0x10EC104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x10EC2A4", Offset = "0x10EC2A4", VA = "0x10EC2A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	[SerializeField]
	[Header("Performance")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float[] visemes;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool showLeftController;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool showRightController;

	[Token(Token = "0x40002C6")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly UnityEngine.Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40002C8")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40002C9")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40002CA")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40002CB")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40002CC")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static UnityEngine.Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x10E79C4", Offset = "0x10E79C4", VA = "0x10E79C4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x10E7D38", Offset = "0x10E7D38", VA = "0x10E7D38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x10E7DD0", Offset = "0x10E7DD0", VA = "0x10E7DD0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x10E7E2C", Offset = "0x10E7E2C", VA = "0x10E7E2C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x10E7F40", Offset = "0x10E7F40", VA = "0x10E7F40")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x10E801C", Offset = "0x10E801C", VA = "0x10E801C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x10E80EC", Offset = "0x10E80EC", VA = "0x10E80EC")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x10E82BC", Offset = "0x10E82BC", VA = "0x10E82BC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x10E8384", Offset = "0x10E8384", VA = "0x10E8384")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x10E83F8", Offset = "0x10E83F8", VA = "0x10E83F8")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x10E84B0", Offset = "0x10E84B0", VA = "0x10E84B0")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x10E8538", Offset = "0x10E8538", VA = "0x10E8538")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(UnityEngine.Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x10E85DC", Offset = "0x10E85DC", VA = "0x10E85DC")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, UnityEngine.Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x10E85F4", Offset = "0x10E85F4", VA = "0x10E85F4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000287")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x10E8A00", Offset = "0x10E8A00", VA = "0x10E8A00")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x10E8D2C", Offset = "0x10E8D2C", VA = "0x10E8D2C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x10E8EC0", Offset = "0x10E8EC0", VA = "0x10E8EC0")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x10E90FC", Offset = "0x10E90FC", VA = "0x10E90FC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x10E9228", Offset = "0x10E9228", VA = "0x10E9228")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x10E9570", Offset = "0x10E9570", VA = "0x10E9570")]
	private void Start()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x10E9884", Offset = "0x10E9884", VA = "0x10E9884")]
	private void Update()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x10EA198", Offset = "0x10EA198", VA = "0x10EA198")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x10EA1DC", Offset = "0x10EA1DC", VA = "0x10EA1DC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x10E39D4", Offset = "0x10E39D4", VA = "0x10E39D4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x10E94C8", Offset = "0x10E94C8", VA = "0x10E94C8")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x10EA208", Offset = "0x10EA208", VA = "0x10EA208")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x10E9C68", Offset = "0x10E9C68", VA = "0x10E9C68")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x10EA48C", Offset = "0x10EA48C", VA = "0x10EA48C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x10EA2B0", Offset = "0x10EA2B0", VA = "0x10EA2B0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x10EAA94", Offset = "0x10EAA94", VA = "0x10EAA94")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x10EAF0C", Offset = "0x10EAF0C", VA = "0x10EAF0C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x10EB324", Offset = "0x10EB324", VA = "0x10EB324")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x10EB45C", Offset = "0x10EB45C", VA = "0x10EB45C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x10EB628", Offset = "0x10EB628", VA = "0x10EB628")]
	public void GetPointingDirection(HandType hand, ref UnityEngine.Vector3 forward, ref UnityEngine.Vector3 up)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x10E9C78", Offset = "0x10E9C78", VA = "0x10E9C78")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x10EB6F0", Offset = "0x10EB6F0", VA = "0x10EB6F0")]
	private static ovrAvatarLight CreateLightDirectional(uint id, UnityEngine.Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x10EB718", Offset = "0x10EB718", VA = "0x10EB718")]
	private static ovrAvatarLight CreateLightPoint(uint id, UnityEngine.Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x10EB740", Offset = "0x10EB740", VA = "0x10EB740")]
	private static ovrAvatarLight CreateLightSpot(uint id, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x10EA048", Offset = "0x10EA048", VA = "0x10EA048")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x10EB77C", Offset = "0x10EB77C", VA = "0x10EB77C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x10EBE0C", Offset = "0x10EBE0C", VA = "0x10EBE0C")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__131))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x10EBE9C", Offset = "0x10EBE9C", VA = "0x10EBE9C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x10EBCA0", Offset = "0x10EBCA0", VA = "0x10EBCA0")]
	public GameObject CreateHelperObject(Transform parent, UnityEngine.Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x10EBF40", Offset = "0x10EBF40", VA = "0x10EBF40")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000096")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x10EC2EC", Offset = "0x10EC2EC", VA = "0x10EC2EC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000097")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x10EC2F4", Offset = "0x10EC2F4", VA = "0x10EC2F4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10ED458", Offset = "0x10ED458", VA = "0x10ED458")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x10ED0A4", Offset = "0x10ED0A4", VA = "0x10ED0A4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x10ECE34", Offset = "0x10ECE34", VA = "0x10ECE34")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x10ECF08", Offset = "0x10ECF08", VA = "0x10ECF08")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x10ED6A4", Offset = "0x10ED6A4", VA = "0x10ED6A4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000098")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40002F7")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x10EDBF0", Offset = "0x10EDBF0", VA = "0x10EDBF0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000099")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x10EDE28", Offset = "0x10EDE28", VA = "0x10EDE28")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x10EE244", Offset = "0x10EE244", VA = "0x10EE244")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200009A")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x10EB1D8", Offset = "0x10EB1D8", VA = "0x10EB1D8")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x10EE358", Offset = "0x10EE358", VA = "0x10EE358")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x10EE460", Offset = "0x10EE460", VA = "0x10EE460")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200009B")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x10EE4B4", Offset = "0x10EE4B4", VA = "0x10EE4B4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x10EDF30", Offset = "0x10EDF30", VA = "0x10EDF30")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x10EE4BC", Offset = "0x10EE4BC", VA = "0x10EE4BC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x10EE510", Offset = "0x10EE510", VA = "0x10EE510")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x10EEC18", Offset = "0x10EEC18", VA = "0x10EEC18")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x10EE298", Offset = "0x10EE298", VA = "0x10EE298")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200009C")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200009D")]
	public enum PacketMode
	{
		[Token(Token = "0x400030B")]
		SDK,
		[Token(Token = "0x400030C")]
		Unity
	}

	[Token(Token = "0x200009E")]
	public struct ControllerPose
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x10F00E8", Offset = "0x10F00E8", VA = "0x10F00E8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200009F")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UnityEngine.Vector3 headPosition;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 handLeftPosition;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector3 handRightPosition;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x10EA730", Offset = "0x10EA730", VA = "0x10EA730")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x10F0054", Offset = "0x10F0054", VA = "0x10F0054")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60002C2")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x10F0064", Offset = "0x10F0064", VA = "0x10F0064")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x10E0930", Offset = "0x10E0930", VA = "0x10E0930")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x10F00E0", Offset = "0x10F00E0", VA = "0x10F00E0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x10E0BEC", Offset = "0x10E0BEC", VA = "0x10E0BEC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000A0")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x10F0158", Offset = "0x10F0158", VA = "0x10F0158")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x10F0284", Offset = "0x10F0284", VA = "0x10F0284")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private UnityEngine.Vector3 centerEyePosition;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x10F02E0", Offset = "0x10F02E0", VA = "0x10F02E0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x10F0420", Offset = "0x10F0420", VA = "0x10F0420")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x10F0750", Offset = "0x10F0750", VA = "0x10F0750")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x10F096C", Offset = "0x10F096C", VA = "0x10F096C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x10F0994", Offset = "0x10F0994", VA = "0x10F0994")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000A2")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20000A3")]
	public enum TextureType
	{
		[Token(Token = "0x4000342")]
		DiffuseTextures,
		[Token(Token = "0x4000343")]
		NormalMaps,
		[Token(Token = "0x4000344")]
		RoughnessMaps,
		[Token(Token = "0x4000345")]
		Count
	}

	[Token(Token = "0x20000A4")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20000A5")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20000A6")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20000A7")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1158890", Offset = "0x1158890", VA = "0x1158890")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x1159154", Offset = "0x1159154", VA = "0x1159154", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x115919C", Offset = "0x115919C", VA = "0x115919C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1158898", Offset = "0x1158898", VA = "0x1158898")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x11588C0", Offset = "0x11588C0", VA = "0x11588C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x11588C4", Offset = "0x11588C4", VA = "0x11588C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x115915C", Offset = "0x115915C", VA = "0x115915C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400033D")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400033E")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400033F")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000340")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x10F0A34", Offset = "0x10F0A34", VA = "0x10F0A34")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x10F0BB4", Offset = "0x10F0BB4", VA = "0x10F0BB4")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x10F0BDC", Offset = "0x10F0BDC", VA = "0x10F0BDC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x10F12D8", Offset = "0x10F12D8", VA = "0x10F12D8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x10F1340", Offset = "0x10F1340", VA = "0x10F1340")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x10F0C7C", Offset = "0x10F0C7C", VA = "0x10F0C7C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x10F1390", Offset = "0x10F1390", VA = "0x10F1390")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x10F10AC", Offset = "0x10F10AC", VA = "0x10F10AC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x10F146C", Offset = "0x10F146C", VA = "0x10F146C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x10F16F0", Offset = "0x10F16F0", VA = "0x10F16F0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x10F1814", Offset = "0x10F1814", VA = "0x10F1814")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x10F184C", Offset = "0x10F184C", VA = "0x10F184C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x10F1264", Offset = "0x10F1264", VA = "0x10F1264")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x10F2454", Offset = "0x10F2454", VA = "0x10F2454")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000A9")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000035")]
	public float Duration
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x11591A4", Offset = "0x11591A4", VA = "0x11591A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000036")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x1159208", Offset = "0x1159208", VA = "0x1159208")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1159290", Offset = "0x1159290", VA = "0x1159290")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x11593C0", Offset = "0x11593C0", VA = "0x11593C0")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1159630", Offset = "0x1159630", VA = "0x1159630")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1159778", Offset = "0x1159778", VA = "0x1159778")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x11598FC", Offset = "0x11598FC", VA = "0x11598FC")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1159ADC", Offset = "0x1159ADC", VA = "0x1159ADC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x115A024", Offset = "0x115A024", VA = "0x115A024")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000AA")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x115A24C", Offset = "0x115A24C", VA = "0x115A24C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x115A354", Offset = "0x115A354", VA = "0x115A354")]
	public static void Write(this BinaryWriter writer, UnityEngine.Vector3 vec3)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x115A4E0", Offset = "0x115A4E0", VA = "0x115A4E0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x115A3B8", Offset = "0x115A3B8", VA = "0x115A3B8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x115A440", Offset = "0x115A440", VA = "0x115A440")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000AB")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1159E88", Offset = "0x1159E88", VA = "0x1159E88")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x115A708", Offset = "0x115A708", VA = "0x115A708")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x115A528", Offset = "0x115A528", VA = "0x115A528")]
	public static UnityEngine.Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x115A594", Offset = "0x115A594", VA = "0x115A594")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x115A624", Offset = "0x115A624", VA = "0x115A624")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000367")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000368")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x115A758", Offset = "0x115A758", VA = "0x115A758")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x115A7DC", Offset = "0x115A7DC", VA = "0x115A7DC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x115A7F8", Offset = "0x115A7F8", VA = "0x115A7F8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x115A9A8", Offset = "0x115A9A8", VA = "0x115A9A8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x115AB30", Offset = "0x115AB30", VA = "0x115AB30")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x115ABD8", Offset = "0x115ABD8", VA = "0x115ABD8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x115ACB4", Offset = "0x115ACB4", VA = "0x115ACB4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x115AF18", Offset = "0x115AF18", VA = "0x115AF18")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x115B260", Offset = "0x115B260", VA = "0x115B260")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x115B364", Offset = "0x115B364", VA = "0x115B364")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000AE")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000371")]
	Body = 1,
	[Token(Token = "0x4000372")]
	Hands = 2,
	[Token(Token = "0x4000373")]
	Base = 4,
	[Token(Token = "0x4000374")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000375")]
	Expressive = 0x20,
	[Token(Token = "0x4000376")]
	All = -1
}
[Token(Token = "0x20000AF")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000378")]
	AvatarSpecification,
	[Token(Token = "0x4000379")]
	AssetLoaded,
	[Token(Token = "0x400037A")]
	Count
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000B2")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000380")]
	Mesh,
	[Token(Token = "0x4000381")]
	Texture,
	[Token(Token = "0x4000382")]
	Pose,
	[Token(Token = "0x4000383")]
	Material,
	[Token(Token = "0x4000384")]
	CombinedMesh,
	[Token(Token = "0x4000385")]
	PBSMaterial,
	[Token(Token = "0x4000386")]
	FailedLoad,
	[Token(Token = "0x4000387")]
	Count
}
[Token(Token = "0x20000B3")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000B5")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000B7")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000B8")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40003BC")]
	RGB24,
	[Token(Token = "0x40003BD")]
	DXT1,
	[Token(Token = "0x40003BE")]
	DXT5,
	[Token(Token = "0x40003BF")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40003C0")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40003C1")]
	Count
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000BA")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40003C9")]
	SkinnedMeshRender,
	[Token(Token = "0x40003CA")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40003CB")]
	ProjectorRender,
	[Token(Token = "0x40003CC")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40003CD")]
	Count
}
[Token(Token = "0x20000BB")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40003CF")]
	Unknown,
	[Token(Token = "0x40003D0")]
	Default,
	[Token(Token = "0x40003D1")]
	Verbose,
	[Token(Token = "0x40003D2")]
	Debug,
	[Token(Token = "0x40003D3")]
	Info,
	[Token(Token = "0x40003D4")]
	Warn,
	[Token(Token = "0x40003D5")]
	Error,
	[Token(Token = "0x40003D6")]
	Fatal,
	[Token(Token = "0x40003D7")]
	Silent
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 position;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 scale;
}
[Token(Token = "0x20000BD")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40003DC")]
	One = 1,
	[Token(Token = "0x40003DD")]
	Two = 2,
	[Token(Token = "0x40003DE")]
	Three = 4,
	[Token(Token = "0x40003DF")]
	Joystick = 8
}
[Token(Token = "0x20000BE")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40003E1")]
	One = 1,
	[Token(Token = "0x40003E2")]
	Two = 2,
	[Token(Token = "0x40003E3")]
	Joystick = 4,
	[Token(Token = "0x40003E4")]
	ThumbRest = 8,
	[Token(Token = "0x40003E5")]
	Index = 0x10,
	[Token(Token = "0x40003E6")]
	Pointing = 0x40,
	[Token(Token = "0x40003E7")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000BF")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000C1")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000C2")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 basePosition;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C7")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000407")]
	Add,
	[Token(Token = "0x4000408")]
	Multiply,
	[Token(Token = "0x4000409")]
	Count
}
[Token(Token = "0x20000C8")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400040B")]
	Color,
	[Token(Token = "0x400040C")]
	Texture,
	[Token(Token = "0x400040D")]
	TextureSingleChannel,
	[Token(Token = "0x400040E")]
	Parallax,
	[Token(Token = "0x400040F")]
	Count
}
[Token(Token = "0x20000C9")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000411")]
	None,
	[Token(Token = "0x4000412")]
	Positional,
	[Token(Token = "0x4000413")]
	ViewReflection,
	[Token(Token = "0x4000414")]
	Fresnel,
	[Token(Token = "0x4000415")]
	Pulse,
	[Token(Token = "0x4000416")]
	Count
}
[Token(Token = "0x20000CA")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000418")]
	Touch,
	[Token(Token = "0x4000419")]
	Malibu,
	[Token(Token = "0x400041A")]
	Go,
	[Token(Token = "0x400041B")]
	Quest,
	[Token(Token = "0x400041C")]
	Count
}
[Token(Token = "0x20000CB")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400041E")]
	Lowest = 1,
	[Token(Token = "0x400041F")]
	Medium = 3,
	[Token(Token = "0x4000420")]
	Highest = 5
}
[Token(Token = "0x20000CC")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000422")]
	Unknown = -1,
	[Token(Token = "0x4000423")]
	One,
	[Token(Token = "0x4000424")]
	Two
}
[Token(Token = "0x20000CD")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x115B73C", Offset = "0x115B73C", VA = "0x115B73C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x115B76C", Offset = "0x115B76C", VA = "0x115B76C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x115B97C", Offset = "0x115B97C", VA = "0x115B97C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000CE")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x115BBC0", Offset = "0x115BBC0", VA = "0x115BBC0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x115BBF0", Offset = "0x115BBF0", VA = "0x115BBF0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x115BF80", Offset = "0x115BF80", VA = "0x115BF80", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000CF")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x115C328", Offset = "0x115C328", VA = "0x115C328")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x115C358", Offset = "0x115C358", VA = "0x115C358", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x115C5A0", Offset = "0x115C5A0", VA = "0x115C5A0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D0")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x115C874", Offset = "0x115C874", VA = "0x115C874")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x115C8A4", Offset = "0x115C8A4", VA = "0x115C8A4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x115CA6C", Offset = "0x115CA6C", VA = "0x115CA6C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D1")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x115CC80", Offset = "0x115CC80", VA = "0x115CC80")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000D3")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000459")]
	FirstPerson = 1,
	[Token(Token = "0x400045A")]
	ThirdPerson = 2,
	[Token(Token = "0x400045B")]
	SelfOccluding = 4
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000D6")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000D7")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000D8")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000471")]
	Default,
	[Token(Token = "0x4000472")]
	GripSphere,
	[Token(Token = "0x4000473")]
	GripCube,
	[Token(Token = "0x4000474")]
	Count
}
[Token(Token = "0x20000D9")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000476")]
	Body,
	[Token(Token = "0x4000477")]
	Clothing,
	[Token(Token = "0x4000478")]
	Eyewear,
	[Token(Token = "0x4000479")]
	Hair,
	[Token(Token = "0x400047A")]
	Beard,
	[Token(Token = "0x400047B")]
	Count
}
[Token(Token = "0x20000DA")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000DB")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000DC")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000DD")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000DE")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000485")]
	AvatarHead,
	[Token(Token = "0x4000486")]
	AvatarHand,
	[Token(Token = "0x4000487")]
	Object,
	[Token(Token = "0x4000488")]
	ObjectStatic,
	[Token(Token = "0x4000489")]
	Count
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public UnityEngine.Vector3 worldPosition;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000E0")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000E2")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000E3")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000495")]
	Point,
	[Token(Token = "0x4000496")]
	Direction,
	[Token(Token = "0x4000497")]
	Spot,
	[Token(Token = "0x4000498")]
	Count
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEngine.Vector3 worldDirection;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 worldPosition;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000E5")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000E6")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000E7")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000E8")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40004AE")]
	None = 0u,
	[Token(Token = "0x40004AF")]
	GazeTarget = 1u,
	[Token(Token = "0x40004B0")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000E9")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEngine.Vector3 startPoint;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEngine.Vector3 endPoint;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 color;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000EA")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000EB")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000EC")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000ED")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000EE")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x115ED28", Offset = "0x115ED28", VA = "0x115ED28")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40004C5")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000037")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1158ED8", Offset = "0x1158ED8", VA = "0x1158ED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x115DAA0", Offset = "0x115DAA0", VA = "0x115DAA0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x115DDA8", Offset = "0x115DDA8", VA = "0x115DDA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x115DE0C", Offset = "0x115DE0C", VA = "0x115DE0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x115E7AC", Offset = "0x115E7AC", VA = "0x115E7AC")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x115E7FC", Offset = "0x115E7FC", VA = "0x115E7FC")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x115E84C", Offset = "0x115E84C", VA = "0x115E84C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x115E8F4", Offset = "0x115E8F4", VA = "0x115E8F4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x115E94C", Offset = "0x115E94C", VA = "0x115E94C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x115E5D0", Offset = "0x115E5D0", VA = "0x115E5D0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x115EA10", Offset = "0x115EA10", VA = "0x115EA10")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x115EB5C", Offset = "0x115EB5C", VA = "0x115EB5C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x115AEA0", Offset = "0x115AEA0", VA = "0x115AEA0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x115EC48", Offset = "0x115EC48", VA = "0x115EC48")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x115DD68", Offset = "0x115DD68", VA = "0x115DD68")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1159098", Offset = "0x1159098", VA = "0x1159098")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x115ED10", Offset = "0x115ED10", VA = "0x115ED10")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000F0")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000038")]
	public static string AppID
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x115ECD8", Offset = "0x115ECD8", VA = "0x115ECD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x115EE78", Offset = "0x115EE78", VA = "0x115EE78")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x115ECF4", Offset = "0x115ECF4", VA = "0x115ECF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x115EE98", Offset = "0x115EE98", VA = "0x115EE98")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x115ED54", Offset = "0x115ED54", VA = "0x115ED54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x115EEB8", Offset = "0x115EEB8", VA = "0x115EEB8")]
		set
		{
		}
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x115EF04", Offset = "0x115EF04", VA = "0x115EF04")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000F1")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x115EF54", Offset = "0x115EF54", VA = "0x115EF54")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x115F1E0", Offset = "0x115F1E0", VA = "0x115F1E0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x115F098", Offset = "0x115F098", VA = "0x115F098")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x115F3F0", Offset = "0x115F3F0", VA = "0x115F3F0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000F2")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x115F400", Offset = "0x115F400", VA = "0x115F400")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x115F538", Offset = "0x115F538", VA = "0x115F538")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x115F6E8", Offset = "0x115F6E8", VA = "0x115F6E8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000F3")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40004DC")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40004DD")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40004DE")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x115F6F8", Offset = "0x115F6F8", VA = "0x115F6F8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x116060C", Offset = "0x116060C", VA = "0x116060C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1160818", Offset = "0x1160818", VA = "0x1160818")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x115FDD8", Offset = "0x115FDD8", VA = "0x115FDD8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x115FAD4", Offset = "0x115FAD4", VA = "0x115FAD4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x115FC4C", Offset = "0x115FC4C", VA = "0x115FC4C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x116103C", Offset = "0x116103C", VA = "0x116103C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000F4")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F5")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000F6")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x11617A4", Offset = "0x11617A4", VA = "0x11617A4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000F7")]
	public struct TextureSet
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1161994", Offset = "0x1161994", VA = "0x1161994")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000F8")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0x11621B4", Offset = "0x11621B4", VA = "0x11621B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x11621FC", Offset = "0x11621FC", VA = "0x11621FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1161AC8", Offset = "0x1161AC8", VA = "0x1161AC8")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1161BF4", Offset = "0x1161BF4", VA = "0x1161BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1161BF8", Offset = "0x1161BF8", VA = "0x1161BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x11621BC", Offset = "0x11621BC", VA = "0x11621BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40004E2")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40004E3")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40004E6")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40004E7")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40004E8")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40004E9")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40004EA")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40004EB")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40004EC")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x116104C", Offset = "0x116104C", VA = "0x116104C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1161428", Offset = "0x1161428", VA = "0x1161428")]
	public void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x115910C", Offset = "0x115910C", VA = "0x115910C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x116160C", Offset = "0x116160C", VA = "0x116160C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x116158C", Offset = "0x116158C", VA = "0x116158C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x11617B4", Offset = "0x11617B4", VA = "0x11617B4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11619A4", Offset = "0x11619A4", VA = "0x11619A4")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1161A3C", Offset = "0x1161A3C", VA = "0x1161A3C")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x115E9D0", Offset = "0x115E9D0", VA = "0x115E9D0")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1161AF0", Offset = "0x1161AF0", VA = "0x1161AF0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000F9")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1162204", Offset = "0x1162204", VA = "0x1162204")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1162334", Offset = "0x1162334", VA = "0x1162334")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000FA")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	public delegate void OnClick();

	[Token(Token = "0x20000FC")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000FD")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000FE")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x40004FE")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40004FF")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000500")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UnityEngine.Vector3 menuOffset;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1162394", Offset = "0x1162394", VA = "0x1162394")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1162888", Offset = "0x1162888", VA = "0x1162888")]
	public void Show()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1162BF0", Offset = "0x1162BF0", VA = "0x1162BF0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1162D6C", Offset = "0x1162D6C", VA = "0x1162D6C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1162F84", Offset = "0x1162F84", VA = "0x1162F84")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1162BE0", Offset = "0x1162BE0", VA = "0x1162BE0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1163278", Offset = "0x1163278", VA = "0x1163278")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x116357C", Offset = "0x116357C", VA = "0x116357C")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1163914", Offset = "0x1163914", VA = "0x1163914")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1163A0C", Offset = "0x1163A0C", VA = "0x1163A0C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1163BD0", Offset = "0x1163BD0", VA = "0x1163BD0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1163C68", Offset = "0x1163C68", VA = "0x1163C68")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1163E24", Offset = "0x1163E24", VA = "0x1163E24")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1164000", Offset = "0x1164000", VA = "0x1164000")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x11642DC", Offset = "0x11642DC", VA = "0x11642DC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x11643CC", Offset = "0x11643CC", VA = "0x11643CC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1164460", Offset = "0x1164460", VA = "0x1164460")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000104")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1164A94", Offset = "0x1164A94", VA = "0x1164A94")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1164B24", Offset = "0x1164B24", VA = "0x1164B24")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1164BC0", Offset = "0x1164BC0", VA = "0x1164BC0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1164BF8", Offset = "0x1164BF8", VA = "0x1164BF8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000105")]
public class HandedInputSelectorAltered : MonoBehaviour
{
	[Token(Token = "0x2000106")]
	[CompilerGenerated]
	private sealed class <DelayActivate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandedInputSelectorAltered <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0x1165120", Offset = "0x1165120", VA = "0x1165120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0x1165168", Offset = "0x1165168", VA = "0x1165168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x1164FC4", Offset = "0x1164FC4", VA = "0x1164FC4")]
		[DebuggerHidden]
		public <DelayActivate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1164FF4", Offset = "0x1164FF4", VA = "0x1164FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1164FF8", Offset = "0x1164FF8", VA = "0x1164FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1165128", Offset = "0x1165128", VA = "0x1165128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandedInputSelectorAltered instance;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRRayInteractor rightray;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRRayInteractor leftray;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UISphere;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool LeftHandNow;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1164C00", Offset = "0x1164C00", VA = "0x1164C00")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1164C4C", Offset = "0x1164C4C", VA = "0x1164C4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1164C98", Offset = "0x1164C98", VA = "0x1164C98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1164DE4", Offset = "0x1164DE4", VA = "0x1164DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1164E30", Offset = "0x1164E30", VA = "0x1164E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1164D7C", Offset = "0x1164D7C", VA = "0x1164D7C")]
	[IteratorStateMachine(typeof(<DelayActivate>d__10))]
	private IEnumerator DelayActivate()
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1164FEC", Offset = "0x1164FEC", VA = "0x1164FEC")]
	public HandedInputSelectorAltered()
	{
	}
}
[Token(Token = "0x2000107")]
public class HandedInputSelectorXR : MonoBehaviour
{
	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1165170", Offset = "0x1165170", VA = "0x1165170")]
	public HandedInputSelectorXR()
	{
	}
}
[Token(Token = "0x2000108")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000109")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000538")]
		On,
		[Token(Token = "0x4000539")]
		Off,
		[Token(Token = "0x400053A")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 _startPoint;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 _forward;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector3 _endPoint;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700003F")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1165178", Offset = "0x1165178", VA = "0x1165178")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1162848", Offset = "0x1162848", VA = "0x1162848")]
		set
		{
		}
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1165180", Offset = "0x1165180", VA = "0x1165180")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x11651D0", Offset = "0x11651D0", VA = "0x11651D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1165308", Offset = "0x1165308", VA = "0x1165308", Slot = "5")]
	public override void SetCursorStartDest(UnityEngine.Vector3 start, UnityEngine.Vector3 dest, UnityEngine.Vector3 normal)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1165324", Offset = "0x1165324", VA = "0x1165324", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1165374", Offset = "0x1165374", VA = "0x1165374")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1165514", Offset = "0x1165514", VA = "0x1165514")]
	private void UpdateLaserBeam(UnityEngine.Vector3 start, UnityEngine.Vector3 end)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1165624", Offset = "0x1165624", VA = "0x1165624")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x11656A8", Offset = "0x11656A8", VA = "0x11656A8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1165768", Offset = "0x1165768", VA = "0x1165768")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1165810", Offset = "0x1165810", VA = "0x1165810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x11658FC", Offset = "0x11658FC", VA = "0x11658FC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200010A")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Vector3 m_initialOffset;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x116590C", Offset = "0x116590C", VA = "0x116590C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1165B8C", Offset = "0x1165B8C", VA = "0x1165B8C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1165ECC", Offset = "0x1165ECC", VA = "0x1165ECC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200010B")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1165ED4", Offset = "0x1165ED4", VA = "0x1165ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1165F64", Offset = "0x1165F64", VA = "0x1165F64")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x116618C", Offset = "0x116618C", VA = "0x116618C")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200010C")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000040")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1166230", Offset = "0x1166230", VA = "0x1166230")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1165AF0", Offset = "0x1165AF0", VA = "0x1165AF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1166194", Offset = "0x1166194", VA = "0x1166194")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x116623C", Offset = "0x116623C", VA = "0x116623C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x11663A8", Offset = "0x11663A8", VA = "0x11663A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x116652C", Offset = "0x116652C", VA = "0x116652C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1166534", Offset = "0x1166534", VA = "0x1166534")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200010D")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000548")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000549")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400054A")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1166544", Offset = "0x1166544", VA = "0x1166544")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x116654C", Offset = "0x116654C", VA = "0x116654C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11665C8", Offset = "0x11665C8", VA = "0x11665C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11666EC", Offset = "0x11666EC", VA = "0x11666EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1166810", Offset = "0x1166810", VA = "0x1166810")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1166B30", Offset = "0x1166B30", VA = "0x1166B30")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1166D90", Offset = "0x1166D90", VA = "0x1166D90")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010E")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11674E8", Offset = "0x11674E8", VA = "0x11674E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1167580", Offset = "0x1167580", VA = "0x1167580")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200010F")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	public enum States
	{
		[Token(Token = "0x4000578")]
		Ready,
		[Token(Token = "0x4000579")]
		Aim,
		[Token(Token = "0x400057A")]
		CancelAim,
		[Token(Token = "0x400057B")]
		PreTeleport,
		[Token(Token = "0x400057C")]
		CancelTeleport,
		[Token(Token = "0x400057D")]
		Teleporting,
		[Token(Token = "0x400057E")]
		PostTeleport
	}

	[Token(Token = "0x2000111")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000580")]
		None,
		[Token(Token = "0x4000581")]
		Aim,
		[Token(Token = "0x4000582")]
		PreTeleport,
		[Token(Token = "0x4000583")]
		Teleport
	}

	[Token(Token = "0x2000112")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000585")]
		Point,
		[Token(Token = "0x4000586")]
		Sphere,
		[Token(Token = "0x4000587")]
		Capsule
	}

	[Token(Token = "0x2000113")]
	public class AimData
	{
		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Vector3? Destination;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x17000044")]
		public List<UnityEngine.Vector3> Points
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x1169230", Offset = "0x1169230", VA = "0x1169230")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x1169238", Offset = "0x1169238", VA = "0x1169238")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x11691B0", Offset = "0x11691B0", VA = "0x11691B0")]
		public AimData()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1169240", Offset = "0x1169240", VA = "0x1169240")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x1169388", Offset = "0x1169388", VA = "0x1169388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x11693D0", Offset = "0x11693D0", VA = "0x11693D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1167F4C", Offset = "0x1167F4C", VA = "0x1167F4C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1169298", Offset = "0x1169298", VA = "0x1169298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x116929C", Offset = "0x116929C", VA = "0x116929C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1169390", Offset = "0x1169390", VA = "0x1169390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000115")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000400")]
			[Address(RVA = "0x116951C", Offset = "0x116951C", VA = "0x116951C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000402")]
			[Address(RVA = "0x1169564", Offset = "0x1169564", VA = "0x1169564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x11683C8", Offset = "0x11683C8", VA = "0x11683C8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x11693D8", Offset = "0x11693D8", VA = "0x11693D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x11693DC", Offset = "0x11693DC", VA = "0x11693DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1169524", Offset = "0x1169524", VA = "0x1169524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000406")]
			[Address(RVA = "0x1169610", Offset = "0x1169610", VA = "0x1169610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x1169658", Offset = "0x1169658", VA = "0x1169658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1168590", Offset = "0x1168590", VA = "0x1168590")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x116956C", Offset = "0x116956C", VA = "0x116956C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1169570", Offset = "0x1169570", VA = "0x1169570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1169618", Offset = "0x1169618", VA = "0x1169618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000117")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x116973C", Offset = "0x116973C", VA = "0x116973C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040E")]
			[Address(RVA = "0x1169784", Offset = "0x1169784", VA = "0x1169784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1168758", Offset = "0x1168758", VA = "0x1168758")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1169660", Offset = "0x1169660", VA = "0x1169660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1169664", Offset = "0x1169664", VA = "0x1169664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1169744", Offset = "0x1169744", VA = "0x1169744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000118")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000412")]
			[Address(RVA = "0x1169830", Offset = "0x1169830", VA = "0x1169830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000414")]
			[Address(RVA = "0x1169878", Offset = "0x1169878", VA = "0x1169878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1168920", Offset = "0x1168920", VA = "0x1168920")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x116978C", Offset = "0x116978C", VA = "0x116978C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1169790", Offset = "0x1169790", VA = "0x1169790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1169838", Offset = "0x1169838", VA = "0x1169838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000119")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x1169958", Offset = "0x1169958", VA = "0x1169958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x11699A0", Offset = "0x11699A0", VA = "0x11699A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1168AE8", Offset = "0x1168AE8", VA = "0x1168AE8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1169880", Offset = "0x1169880", VA = "0x1169880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1169884", Offset = "0x1169884", VA = "0x1169884", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1169960", Offset = "0x1169960", VA = "0x1169960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011A")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x1169A90", Offset = "0x1169A90", VA = "0x1169A90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x1169AD8", Offset = "0x1169AD8", VA = "0x1169AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1168CB0", Offset = "0x1168CB0", VA = "0x1168CB0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x11699A8", Offset = "0x11699A8", VA = "0x11699A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x11699AC", Offset = "0x11699AC", VA = "0x11699AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1169A98", Offset = "0x1169A98", VA = "0x1169A98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000041")]
	public States CurrentState
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x11675D0", Offset = "0x11675D0", VA = "0x11675D0")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x11675D8", Offset = "0x11675D8", VA = "0x11675D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x11677A8", Offset = "0x11677A8", VA = "0x11677A8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000043")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x11677CC", Offset = "0x11677CC", VA = "0x11677CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x11677D4", Offset = "0x11677D4", VA = "0x11677D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, UnityEngine.Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x11675E0", Offset = "0x11675E0", VA = "0x11675E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1167690", Offset = "0x1167690", VA = "0x1167690")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1167E14", Offset = "0x1167E14", VA = "0x1167E14")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1167EB0", Offset = "0x1167EB0", VA = "0x1167EB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1167F74", Offset = "0x1167F74", VA = "0x1167F74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1168010", Offset = "0x1168010", VA = "0x1168010")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x11680AC", Offset = "0x11680AC", VA = "0x11680AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x116815C", Offset = "0x116815C", VA = "0x116815C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1168228", Offset = "0x1168228", VA = "0x1168228")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x11682C4", Offset = "0x11682C4", VA = "0x11682C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x11683F0", Offset = "0x11683F0", VA = "0x11683F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x116848C", Offset = "0x116848C", VA = "0x116848C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x11685B8", Offset = "0x11685B8", VA = "0x11685B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1168654", Offset = "0x1168654", VA = "0x1168654")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1168780", Offset = "0x1168780", VA = "0x1168780")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x116881C", Offset = "0x116881C", VA = "0x116881C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1168948", Offset = "0x1168948", VA = "0x1168948")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x11689E4", Offset = "0x11689E4", VA = "0x11689E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1168B10", Offset = "0x1168B10", VA = "0x1168B10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1168BAC", Offset = "0x1168BAC", VA = "0x1168BAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, UnityEngine.Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1168CD8", Offset = "0x1168CD8", VA = "0x1168CD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1168D88", Offset = "0x1168D88", VA = "0x1168D88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1167588", Offset = "0x1167588", VA = "0x1167588")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x11675AC", Offset = "0x11675AC", VA = "0x11675AC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1167740", Offset = "0x1167740", VA = "0x1167740")]
	public void OnUpdateTeleportDestination(bool isValidDestination, UnityEngine.Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x11677DC", Offset = "0x11677DC", VA = "0x11677DC")]
	public bool AimCollisionTest(UnityEngine.Vector3 start, UnityEngine.Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1167AA4", Offset = "0x1167AA4", VA = "0x1167AA4")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1167B4C", Offset = "0x1167B4C", VA = "0x1167B4C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1167C10", Offset = "0x1167C10", VA = "0x1167C10")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1167C4C", Offset = "0x1167C4C", VA = "0x1167C4C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1167CFC", Offset = "0x1167CFC", VA = "0x1167CFC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1167D2C", Offset = "0x1167D2C", VA = "0x1167D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1167D80", Offset = "0x1167D80", VA = "0x1167D80", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1167E0C", Offset = "0x1167E0C", VA = "0x1167E0C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1167DA4", Offset = "0x1167DA4", VA = "0x1167DA4")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x116820C", Offset = "0x116820C", VA = "0x116820C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1168360", Offset = "0x1168360", VA = "0x1168360")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1168528", Offset = "0x1168528", VA = "0x1168528")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x11686F0", Offset = "0x11686F0", VA = "0x11686F0")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x11688B8", Offset = "0x11688B8", VA = "0x11688B8")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1168A80", Offset = "0x1168A80", VA = "0x1168A80")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1168C48", Offset = "0x1168C48", VA = "0x1168C48")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1168E38", Offset = "0x1168E38", VA = "0x1168E38")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1168F4C", Offset = "0x1168F4C", VA = "0x1168F4C")]
	public UnityEngine.Vector3 GetCharacterPosition()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1168F7C", Offset = "0x1168F7C", VA = "0x1168F7C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x11690B8", Offset = "0x11690B8", VA = "0x11690B8")]
	public void DoWarp(UnityEngine.Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x11691A0", Offset = "0x11691A0", VA = "0x11691A0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200011B")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1166650", Offset = "0x1166650", VA = "0x1166650")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1166774", Offset = "0x1166774", VA = "0x1166774")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1169AE0", Offset = "0x1169AE0", VA = "0x1169AE0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1169B7C", Offset = "0x1169B7C", VA = "0x1169B7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1169C18", Offset = "0x1169C18", VA = "0x1169C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1169CD0", Offset = "0x1169CD0", VA = "0x1169CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1169CD4", Offset = "0x1169CD4", VA = "0x1169CD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1169D48", Offset = "0x1169D48", VA = "0x1169D48")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1169E6C", Offset = "0x1169E6C", VA = "0x1169E6C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x116A0E4", Offset = "0x116A0E4", VA = "0x116A0E4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x116A304", Offset = "0x116A304", VA = "0x116A304")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200011C")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600042C")]
	[Address(RVA = "0x116A324", Offset = "0x116A324", VA = "0x116A324", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x116A34C", Offset = "0x116A34C", VA = "0x116A34C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600042E")]
	public abstract void GetPoints(List<UnityEngine.Vector3> points);

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x116A3D4", Offset = "0x116A3D4", VA = "0x116A3D4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200011D")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x116A3DC", Offset = "0x116A3DC", VA = "0x116A3DC", Slot = "8")]
	public override void GetPoints(List<UnityEngine.Vector3> points)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x116A56C", Offset = "0x116A56C", VA = "0x116A56C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200011E")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0.001f, 50f)]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	public float AimVelocity;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x116A57C", Offset = "0x116A57C", VA = "0x116A57C", Slot = "8")]
	public override void GetPoints(List<UnityEngine.Vector3> points)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x116A750", Offset = "0x116A750", VA = "0x116A750")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200011F")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3[] _linePoints;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x116A764", Offset = "0x116A764", VA = "0x116A764")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x116A870", Offset = "0x116A870", VA = "0x116A870")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x116A89C", Offset = "0x116A89C", VA = "0x116A89C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x116A8C8", Offset = "0x116A8C8", VA = "0x116A8C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x116A964", Offset = "0x116A964", VA = "0x116A964", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x116A9AC", Offset = "0x116A9AC", VA = "0x116A9AC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x116A9F8", Offset = "0x116A9F8", VA = "0x116A9F8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000120")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, UnityEngine.Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000053")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600043B")]
		[Address(RVA = "0x116AAF4", Offset = "0x116AAF4", VA = "0x116AAF4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x116AAFC", Offset = "0x116AAFC", VA = "0x116AAFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x116AC7C", Offset = "0x116AC7C", VA = "0x116AC7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x116AD2C", Offset = "0x116AD2C", VA = "0x116AD2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x116AB08", Offset = "0x116AB08", VA = "0x116AB08")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x116AB84", Offset = "0x116AB84", VA = "0x116AB84")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x116AC48", Offset = "0x116AC48", VA = "0x116AC48")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x116AC78", Offset = "0x116AC78", VA = "0x116AC78")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1167C28", Offset = "0x1167C28", VA = "0x1167C28")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x116ADDC", Offset = "0x116ADDC", VA = "0x116ADDC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x116ADF8", Offset = "0x116ADF8", VA = "0x116ADF8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, UnityEngine.Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000121")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000122")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x116B380", Offset = "0x116B380", VA = "0x116B380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x116B3C8", Offset = "0x116B3C8", VA = "0x116B3C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x116B204", Offset = "0x116B204", VA = "0x116B204")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x116B2FC", Offset = "0x116B2FC", VA = "0x116B2FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x116B300", Offset = "0x116B300", VA = "0x116B300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x116B388", Offset = "0x116B388", VA = "0x116B388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000123")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x116B460", Offset = "0x116B460", VA = "0x116B460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x116B4A8", Offset = "0x116B4A8", VA = "0x116B4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x116B294", Offset = "0x116B294", VA = "0x116B294")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x116B3D0", Offset = "0x116B3D0", VA = "0x116B3D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x116B3D4", Offset = "0x116B3D4", VA = "0x116B3D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x116B468", Offset = "0x116B468", VA = "0x116B468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x116AFEC", Offset = "0x116AFEC", VA = "0x116AFEC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x116B0AC", Offset = "0x116B0AC", VA = "0x116B0AC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x116B0F0", Offset = "0x116B0F0", VA = "0x116B0F0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x116B19C", Offset = "0x116B19C", VA = "0x116B19C")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x116B22C", Offset = "0x116B22C", VA = "0x116B22C")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600044C")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000124")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x17000058")]
	public Transform Pointer
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0x116B4B0", Offset = "0x116B4B0", VA = "0x116B4B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x116B4B8", Offset = "0x116B4B8", VA = "0x116B4B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x116B4C0", Offset = "0x116B4C0", VA = "0x116B4C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x116B5EC", Offset = "0x116B5EC", VA = "0x116B5EC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x116B6A0", Offset = "0x116B6A0", VA = "0x116B6A0")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000125")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000126")]
	public enum InputModes
	{
		[Token(Token = "0x40005D8")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40005D9")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40005DA")]
		ThumbstickTeleport,
		[Token(Token = "0x40005DB")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000127")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40005DD")]
		A,
		[Token(Token = "0x40005DE")]
		B,
		[Token(Token = "0x40005DF")]
		LeftTrigger,
		[Token(Token = "0x40005E0")]
		LeftThumbstick,
		[Token(Token = "0x40005E1")]
		RightTrigger,
		[Token(Token = "0x40005E2")]
		RightThumbstick,
		[Token(Token = "0x40005E3")]
		X,
		[Token(Token = "0x40005E4")]
		Y
	}

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x116B6A4", Offset = "0x116B6A4", VA = "0x116B6A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x116B6A8", Offset = "0x116B6A8", VA = "0x116B6A8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x116BADC", Offset = "0x116BADC", VA = "0x116BADC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x116BB98", Offset = "0x116BB98", VA = "0x116BB98")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000128")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000129")]
	public enum OrientationModes
	{
		[Token(Token = "0x40005E9")]
		HeadRelative,
		[Token(Token = "0x40005EA")]
		ForwardFacing
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0x116D030", Offset = "0x116D030", VA = "0x116D030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0x116D078", Offset = "0x116D078", VA = "0x116D078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x116CE4C", Offset = "0x116CE4C", VA = "0x116CE4C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x116CF8C", Offset = "0x116CF8C", VA = "0x116CF8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x116CF90", Offset = "0x116CF90", VA = "0x116CF90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x116D038", Offset = "0x116D038", VA = "0x116D038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x116CC70", Offset = "0x116CC70", VA = "0x116CC70")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x116CD4C", Offset = "0x116CD4C", VA = "0x116CD4C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x116CD54", Offset = "0x116CD54", VA = "0x116CD54", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x116CDA0", Offset = "0x116CDA0", VA = "0x116CDA0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x116CDE4", Offset = "0x116CDE4", VA = "0x116CDE4")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600046A")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x116CE74", Offset = "0x116CE74", VA = "0x116CE74")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200012B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000473")]
	[Address(RVA = "0x116D080", Offset = "0x116D080", VA = "0x116D080", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x116D084", Offset = "0x116D084", VA = "0x116D084", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x116D0FC", Offset = "0x116D0FC", VA = "0x116D0FC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200012C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x116D100", Offset = "0x116D100", VA = "0x116D100", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x116D150", Offset = "0x116D150", VA = "0x116D150", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x116D5CC", Offset = "0x116D5CC", VA = "0x116D5CC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200012D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x116D5D0", Offset = "0x116D5D0", VA = "0x116D5D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x116D608", Offset = "0x116D608", VA = "0x116D608", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x116DAE0", Offset = "0x116DAE0", VA = "0x116DAE0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200012E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x116DAF0", Offset = "0x116DAF0", VA = "0x116DAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x116DAF4", Offset = "0x116DAF4", VA = "0x116DAF4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x116DAFC", Offset = "0x116DAFC", VA = "0x116DAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x116DBE8", Offset = "0x116DBE8", VA = "0x116DBE8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x116DC04", Offset = "0x116DC04", VA = "0x116DC04")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200012F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700005B")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x116DC1C", Offset = "0x116DC1C", VA = "0x116DC1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x116DC24", Offset = "0x116DC24", VA = "0x116DC24")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x116DC2C", Offset = "0x116DC2C", VA = "0x116DC2C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x116DC88", Offset = "0x116DC88", VA = "0x116DC88", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x116DCA8", Offset = "0x116DCA8", VA = "0x116DCA8")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x116CD94", Offset = "0x116CD94", VA = "0x116CD94", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x116CDDC", Offset = "0x116CDDC", VA = "0x116CDDC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x116CD44", Offset = "0x116CD44", VA = "0x116CD44")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000130")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000131")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x116E35C", Offset = "0x116E35C", VA = "0x116E35C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0x116E3A4", Offset = "0x116E3A4", VA = "0x116E3A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x116DF30", Offset = "0x116DF30", VA = "0x116DF30")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x116E0B0", Offset = "0x116E0B0", VA = "0x116E0B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x116E0B4", Offset = "0x116E0B4", VA = "0x116E0B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x116E364", Offset = "0x116E364", VA = "0x116E364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<UnityEngine.Vector3> _aimPoints;

	[Token(Token = "0x4000604")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x116DD78", Offset = "0x116DD78", VA = "0x116DD78")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x116DE74", Offset = "0x116DE74", VA = "0x116DE74", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x116DEA0", Offset = "0x116DEA0", VA = "0x116DEA0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x116DEC8", Offset = "0x116DEC8", VA = "0x116DEC8")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x116DF58", Offset = "0x116DF58", VA = "0x116DF58", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600048E")]
	protected abstract bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end);

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x116DF74", Offset = "0x116DF74", VA = "0x116DF74", Slot = "10")]
	public virtual UnityEngine.Vector3? ConsiderDestination(UnityEngine.Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x2000132")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x116E3AC", Offset = "0x116E3AC", VA = "0x116E3AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x116E40C", Offset = "0x116E40C", VA = "0x116E40C", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x116E578", Offset = "0x116E578", VA = "0x116E578", Slot = "10")]
	public override UnityEngine.Vector3? ConsiderDestination(UnityEngine.Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x116E668", Offset = "0x116E668", VA = "0x116E668")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x116E66C", Offset = "0x116E66C", VA = "0x116E66C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000133")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x116E678", Offset = "0x116E678", VA = "0x116E678", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x116E878", Offset = "0x116E878", VA = "0x116E878")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000134")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600049E")]
	[Address(RVA = "0x116E884", Offset = "0x116E884", VA = "0x116E884", Slot = "9")]
	protected override bool ConsiderTeleport(UnityEngine.Vector3 start, ref UnityEngine.Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x116E9F0", Offset = "0x116E9F0", VA = "0x116E9F0")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000135")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x116E9F4", Offset = "0x116E9F4", VA = "0x116E9F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x116EA7C", Offset = "0x116EA7C", VA = "0x116EA7C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004A2")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x116EB00", Offset = "0x116EB00", VA = "0x116EB00")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000136")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0x116EE44", Offset = "0x116EE44", VA = "0x116EE44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0x116EE8C", Offset = "0x116EE8C", VA = "0x116EE8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x116EB90", Offset = "0x116EB90", VA = "0x116EB90")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x116ED48", Offset = "0x116ED48", VA = "0x116ED48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x116ED4C", Offset = "0x116ED4C", VA = "0x116ED4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x116EE4C", Offset = "0x116EE4C", VA = "0x116EE4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	public float TeleportDelay;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x116EB08", Offset = "0x116EB08", VA = "0x116EB08", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x116EB28", Offset = "0x116EB28", VA = "0x116EB28")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x116EBB8", Offset = "0x116EBB8", VA = "0x116EBB8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000138")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x116EE94", Offset = "0x116EE94", VA = "0x116EE94", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x116EEB0", Offset = "0x116EEB0", VA = "0x116EEB0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000139")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200013A")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 <startPosition>5__2;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x116F0BC", Offset = "0x116F0BC", VA = "0x116F0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x116F104", Offset = "0x116F104", VA = "0x116F104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x116EF40", Offset = "0x116EF40", VA = "0x116EF40")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x116EFA4", Offset = "0x116EFA4", VA = "0x116EFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x116EFA8", Offset = "0x116EFA8", VA = "0x116EFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x116F0C4", Offset = "0x116F0C4", VA = "0x116F0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	[Tooltip("How much time the warp transition takes to complete.")]
	public float TransitionDuration;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x116EEB8", Offset = "0x116EEB8", VA = "0x116EEB8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x116EED8", Offset = "0x116EED8", VA = "0x116EED8")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x116EF68", Offset = "0x116EF68", VA = "0x116EF68")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200013B")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200013C")]
	public enum PlabackState
	{
		[Token(Token = "0x4000634")]
		Idle = 1,
		[Token(Token = "0x4000635")]
		Preparing,
		[Token(Token = "0x4000636")]
		Buffering,
		[Token(Token = "0x4000637")]
		Ready,
		[Token(Token = "0x4000638")]
		Ended
	}

	[Token(Token = "0x200013D")]
	public enum StereoMode
	{
		[Token(Token = "0x400063A")]
		Unknown = -1,
		[Token(Token = "0x400063B")]
		Mono,
		[Token(Token = "0x400063C")]
		TopBottom,
		[Token(Token = "0x400063D")]
		LeftRight,
		[Token(Token = "0x400063E")]
		Mesh
	}

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000062")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x116F10C", Offset = "0x116F10C", VA = "0x116F10C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000063")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x116F3FC", Offset = "0x116F3FC", VA = "0x116F3FC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000064")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x116F67C", Offset = "0x116F67C", VA = "0x116F67C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x116F6F0", Offset = "0x116F6F0", VA = "0x116F6F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x116F7F4", Offset = "0x116F7F4", VA = "0x116F7F4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000067")]
	public static long Duration
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x116F8FC", Offset = "0x116F8FC", VA = "0x116F8FC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000068")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x116FA04", Offset = "0x116FA04", VA = "0x116FA04")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000069")]
	public static int VideoWidth
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x116FB0C", Offset = "0x116FB0C", VA = "0x116FB0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006A")]
	public static int VideoHeight
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x116FC14", Offset = "0x116FC14", VA = "0x116FC14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x116FD1C", Offset = "0x116FD1C", VA = "0x116FD1C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x116FE24", Offset = "0x116FE24", VA = "0x116FE24")]
		set
		{
		}
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x116FF84", Offset = "0x116FF84", VA = "0x116FF84")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1170190", Offset = "0x1170190", VA = "0x1170190")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1170298", Offset = "0x1170298", VA = "0x1170298")]
	public static void Play()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x11703A0", Offset = "0x11703A0", VA = "0x11703A0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x11704A8", Offset = "0x11704A8", VA = "0x11704A8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1170610", Offset = "0x1170610", VA = "0x1170610")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1170774", Offset = "0x1170774", VA = "0x1170774")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200013E")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x11709B8", Offset = "0x11709B8", VA = "0x11709B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1170A54", Offset = "0x1170A54", VA = "0x1170A54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1170AF0", Offset = "0x1170AF0", VA = "0x1170AF0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1170B0C", Offset = "0x1170B0C", VA = "0x1170B0C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200013F")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000140")]
	public enum ButtonType
	{
		[Token(Token = "0x4000642")]
		Play,
		[Token(Token = "0x4000643")]
		Pause,
		[Token(Token = "0x4000644")]
		FastForward,
		[Token(Token = "0x4000645")]
		Rewind,
		[Token(Token = "0x4000646")]
		SkipForward,
		[Token(Token = "0x4000647")]
		SkipBack,
		[Token(Token = "0x4000648")]
		Stop
	}

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700006C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1170B14", Offset = "0x1170B14", VA = "0x1170B14")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1170B1C", Offset = "0x1170B1C", VA = "0x1170B1C")]
		set
		{
		}
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1170B40", Offset = "0x1170B40", VA = "0x1170B40", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1171994", Offset = "0x1171994", VA = "0x1171994")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000141")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000142")]
	public enum VideoShape
	{
		[Token(Token = "0x400065D")]
		_360,
		[Token(Token = "0x400065E")]
		_180,
		[Token(Token = "0x400065F")]
		Quad
	}

	[Token(Token = "0x2000143")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000661")]
		Mono,
		[Token(Token = "0x4000662")]
		TopBottom,
		[Token(Token = "0x4000663")]
		LeftRight,
		[Token(Token = "0x4000664")]
		BottomTop
	}

	[Token(Token = "0x2000144")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x1172E2C", Offset = "0x1172E2C", VA = "0x1172E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x1172E74", Offset = "0x1172E74", VA = "0x1172E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1172038", Offset = "0x1172038", VA = "0x1172038")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1172C8C", Offset = "0x1172C8C", VA = "0x1172C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1172C90", Offset = "0x1172C90", VA = "0x1172C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1172E34", Offset = "0x1172E34", VA = "0x1172E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700006D")]
	public bool IsPlaying
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x11719EC", Offset = "0x11719EC", VA = "0x11719EC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x11719F4", Offset = "0x11719F4", VA = "0x11719F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public long Duration
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1171A00", Offset = "0x1171A00", VA = "0x1171A00")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1171A08", Offset = "0x1171A08", VA = "0x1171A08")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1171A10", Offset = "0x1171A10", VA = "0x1171A10")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1171A18", Offset = "0x1171A18", VA = "0x1171A18")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1171A20", Offset = "0x1171A20", VA = "0x1171A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1171C70", Offset = "0x1171C70", VA = "0x1171C70")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1171CD0", Offset = "0x1171CD0", VA = "0x1171CD0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1171FD0", Offset = "0x1171FD0", VA = "0x1171FD0")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1172060", Offset = "0x1172060", VA = "0x1172060")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1172300", Offset = "0x1172300", VA = "0x1172300")]
	public void Play()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1172384", Offset = "0x1172384", VA = "0x1172384")]
	public void Pause()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1172404", Offset = "0x1172404", VA = "0x1172404")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x11724F0", Offset = "0x11724F0", VA = "0x11724F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1172A80", Offset = "0x1172A80", VA = "0x1172A80")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1172B1C", Offset = "0x1172B1C", VA = "0x1172B1C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1172B9C", Offset = "0x1172B9C", VA = "0x1172B9C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1172C7C", Offset = "0x1172C7C", VA = "0x1172C7C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000146")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000681")]
		Playing,
		[Token(Token = "0x4000682")]
		Paused,
		[Token(Token = "0x4000683")]
		Rewinding,
		[Token(Token = "0x4000684")]
		FastForwarding
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1172F50", Offset = "0x1172F50", VA = "0x1172F50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x117327C", Offset = "0x117327C", VA = "0x117327C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x117344C", Offset = "0x117344C", VA = "0x117344C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1173570", Offset = "0x1173570", VA = "0x1173570")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x117366C", Offset = "0x117366C", VA = "0x117366C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1173544", Offset = "0x1173544", VA = "0x1173544")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x11736CC", Offset = "0x11736CC", VA = "0x11736CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x117317C", Offset = "0x117317C", VA = "0x117317C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x11739D8", Offset = "0x11739D8", VA = "0x11739D8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000148")]
[ExecuteInEditMode]
[RequireComponent(typeof(OVROverlay))]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	private enum CubeFace
	{
		[Token(Token = "0x4000699")]
		Right,
		[Token(Token = "0x400069A")]
		Left,
		[Token(Token = "0x400069B")]
		Top,
		[Token(Token = "0x400069C")]
		Bottom,
		[Token(Token = "0x400069D")]
		Front,
		[Token(Token = "0x400069E")]
		Back,
		[Token(Token = "0x400069F")]
		COUNT
	}

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<UnityEngine.Vector3> _Verts;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private UnityEngine.Vector3 _LastPosition;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityEngine.Vector3 _LastScale;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Vector3[] BottomLeft;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly UnityEngine.Vector3[] RightVector;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly UnityEngine.Vector3[] UpVector;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x11739E8", Offset = "0x11739E8", VA = "0x11739E8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1173B5C", Offset = "0x1173B5C", VA = "0x1173B5C")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1173CA0", Offset = "0x1173CA0", VA = "0x1173CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11740A8", Offset = "0x11740A8", VA = "0x11740A8")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1174388", Offset = "0x1174388", VA = "0x1174388")]
	public static void GenerateMesh(List<UnityEngine.Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1176128", Offset = "0x1176128", VA = "0x1176128")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1176160", Offset = "0x1176160", VA = "0x1176160")]
	private static UnityEngine.Vector3 GetSphereVert(float theta, float phi)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11746C0", Offset = "0x11746C0", VA = "0x11746C0")]
	public static void BuildSphere(List<UnityEngine.Vector3> verts, List<Vector2> uv, List<int> triangles, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11761B4", Offset = "0x11761B4", VA = "0x11761B4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11762F4", Offset = "0x11762F4", VA = "0x11762F4")]
	private static UnityEngine.Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1174E44", Offset = "0x1174E44", VA = "0x1174E44")]
	public static void BuildCube(List<UnityEngine.Vector3> verts, List<Vector2> uv, List<int> triangles, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11753A8", Offset = "0x11753A8", VA = "0x11753A8")]
	public static void BuildQuad(List<UnityEngine.Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1175AC8", Offset = "0x1175AC8", VA = "0x1175AC8")]
	public static void BuildHemicylinder(List<UnityEngine.Vector3> verts, List<Vector2> uv, List<int> triangles, UnityEngine.Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1176400", Offset = "0x1176400", VA = "0x1176400")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200014A")]
public static class VectorUtil
{
	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1172A08", Offset = "0x1172A08", VA = "0x1172A08")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200014B")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40006A1")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x11768E8", Offset = "0x11768E8", VA = "0x11768E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1176ED8", Offset = "0x1176ED8", VA = "0x1176ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1177134", Offset = "0x1177134", VA = "0x1177134")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1177298", Offset = "0x1177298", VA = "0x1177298")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1177400", Offset = "0x1177400", VA = "0x1177400")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1177584", Offset = "0x1177584", VA = "0x1177584")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200014C")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40006AA")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1177594", Offset = "0x1177594", VA = "0x1177594")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x11775E0", Offset = "0x11775E0", VA = "0x11775E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x11775E4", Offset = "0x11775E4", VA = "0x11775E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1176C98", Offset = "0x1176C98", VA = "0x1176C98")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x11775E8", Offset = "0x11775E8", VA = "0x11775E8")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1177804", Offset = "0x1177804", VA = "0x1177804")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200014D")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x117780C", Offset = "0x117780C", VA = "0x117780C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1177D5C", Offset = "0x1177D5C", VA = "0x1177D5C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1177E08", Offset = "0x1177E08", VA = "0x1177E08")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1178020", Offset = "0x1178020", VA = "0x1178020")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11780F4", Offset = "0x11780F4", VA = "0x11780F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x11781CC", Offset = "0x11781CC", VA = "0x11781CC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1178234", Offset = "0x1178234", VA = "0x1178234")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x200014E")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x600051E")]
	[Address(RVA = "0x11783DC", Offset = "0x11783DC", VA = "0x11783DC")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200014F")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x11783E4", Offset = "0x11783E4", VA = "0x11783E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x117847C", Offset = "0x117847C", VA = "0x117847C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1178554", Offset = "0x1178554", VA = "0x1178554")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x11785B0", Offset = "0x11785B0", VA = "0x11785B0")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000150")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x11785B8", Offset = "0x11785B8", VA = "0x11785B8")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000151")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x1178984", Offset = "0x1178984", VA = "0x1178984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x11789CC", Offset = "0x11789CC", VA = "0x11789CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x117884C", Offset = "0x117884C", VA = "0x117884C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x117887C", Offset = "0x117887C", VA = "0x117887C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1178880", Offset = "0x1178880", VA = "0x1178880", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x117898C", Offset = "0x117898C", VA = "0x117898C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x11785C0", Offset = "0x11785C0", VA = "0x11785C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x11786B4", Offset = "0x11786B4", VA = "0x11786B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x117864C", Offset = "0x117864C", VA = "0x117864C")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1178874", Offset = "0x1178874", VA = "0x1178874")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000153")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Vector3[] _vertices;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x11789D4", Offset = "0x11789D4", VA = "0x11789D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x117A340", Offset = "0x117A340", VA = "0x117A340")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000154")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000074")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x117A348", Offset = "0x117A348", VA = "0x117A348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x117A398", Offset = "0x117A398", VA = "0x117A398")]
	public void Start()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x117A7C4", Offset = "0x117A7C4", VA = "0x117A7C4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x117A89C", Offset = "0x117A89C", VA = "0x117A89C")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000534")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000536")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000537")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000538")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000539")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600053A")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600053B")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x117A8F4", Offset = "0x117A8F4", VA = "0x117A8F4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x117A934", Offset = "0x117A934", VA = "0x117A934")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x117A9A0", Offset = "0x117A9A0", VA = "0x117A9A0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x117AAEC", Offset = "0x117AAEC", VA = "0x117AAEC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x117ABBC", Offset = "0x117ABBC", VA = "0x117ABBC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x117A6A0", Offset = "0x117A6A0", VA = "0x117A6A0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x117AC8C", Offset = "0x117AC8C", VA = "0x117AC8C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x117ACD8", Offset = "0x117ACD8", VA = "0x117ACD8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x117ADE8", Offset = "0x117ADE8", VA = "0x117ADE8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000155")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	public enum DrawMode
	{
		[Token(Token = "0x40006D9")]
		Opaque,
		[Token(Token = "0x40006DA")]
		OpaqueWithClip,
		[Token(Token = "0x40006DB")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40006DC")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly UnityEngine.Plane[] _FrustumPlanes;

	[Token(Token = "0x17000075")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x117C344", Offset = "0x117C344", VA = "0x117C344")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x117C3C8", Offset = "0x117C3C8", VA = "0x117C3C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x117ADF0", Offset = "0x117ADF0", VA = "0x117ADF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x117B9CC", Offset = "0x117B9CC", VA = "0x117B9CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x117BA40", Offset = "0x117BA40", VA = "0x117BA40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x117BB10", Offset = "0x117BB10", VA = "0x117BB10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x117BBE0", Offset = "0x117BBE0", VA = "0x117BBE0", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x117BDE4", Offset = "0x117BDE4", VA = "0x117BDE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x117C484", Offset = "0x117C484", VA = "0x117C484")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000157")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x117C534", Offset = "0x117C534", VA = "0x117C534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x117C880", Offset = "0x117C880", VA = "0x117C880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x117CA14", Offset = "0x117CA14", VA = "0x117CA14")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x117CA1C", Offset = "0x117CA1C", VA = "0x117CA1C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x117CA04", Offset = "0x117CA04", VA = "0x117CA04")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x117CA24", Offset = "0x117CA24", VA = "0x117CA24")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000158")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000159")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x117D0D8", Offset = "0x117D0D8", VA = "0x117D0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x117D120", Offset = "0x117D120", VA = "0x117D120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x117CF94", Offset = "0x117CF94", VA = "0x117CF94")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x117CFEC", Offset = "0x117CFEC", VA = "0x117CFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x117CFF0", Offset = "0x117CFF0", VA = "0x117CFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x117D0E0", Offset = "0x117D0E0", VA = "0x117D0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x117D298", Offset = "0x117D298", VA = "0x117D298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0x117D2E0", Offset = "0x117D2E0", VA = "0x117D2E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x117CFBC", Offset = "0x117CFBC", VA = "0x117CFBC")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x117D128", Offset = "0x117D128", VA = "0x117D128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x117D12C", Offset = "0x117D12C", VA = "0x117D12C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x117D2A0", Offset = "0x117D2A0", VA = "0x117D2A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x117CA2C", Offset = "0x117CA2C", VA = "0x117CA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x117CCCC", Offset = "0x117CCCC", VA = "0x117CCCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x117CD1C", Offset = "0x117CD1C", VA = "0x117CD1C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x117CE70", Offset = "0x117CE70", VA = "0x117CE70")]
	public void Release()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x117CEFC", Offset = "0x117CEFC", VA = "0x117CEFC")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x117CDBC", Offset = "0x117CDBC", VA = "0x117CDBC")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x117CFE4", Offset = "0x117CFE4", VA = "0x117CFE4")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200015B")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000568")]
	[Address(RVA = "0x117D2E8", Offset = "0x117D2E8", VA = "0x117D2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x117D33C", Offset = "0x117D33C", VA = "0x117D33C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200015C")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x117D344", Offset = "0x117D344", VA = "0x117D344")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x117D518", Offset = "0x117D518", VA = "0x117D518")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x117D5A8", Offset = "0x117D5A8", VA = "0x117D5A8")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x117D604", Offset = "0x117D604", VA = "0x117D604")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200015D")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x117E748", Offset = "0x117E748", VA = "0x117E748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x117E790", Offset = "0x117E790", VA = "0x117E790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x117E4BC", Offset = "0x117E4BC", VA = "0x117E4BC")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x117E584", Offset = "0x117E584", VA = "0x117E584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x117E588", Offset = "0x117E588", VA = "0x117E588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x117E750", Offset = "0x117E750", VA = "0x117E750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 localPosition;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x117D60C", Offset = "0x117D60C", VA = "0x117D60C")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x117D8A8", Offset = "0x117D8A8", VA = "0x117D8A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x117DB94", Offset = "0x117DB94", VA = "0x117DB94")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x117DE8C", Offset = "0x117DE8C", VA = "0x117DE8C")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x117E164", Offset = "0x117E164", VA = "0x117E164")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x117E24C", Offset = "0x117E24C", VA = "0x117E24C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x117E3D8", Offset = "0x117E3D8", VA = "0x117E3D8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x117E334", Offset = "0x117E334", VA = "0x117E334")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x117E4E4", Offset = "0x117E4E4", VA = "0x117E4E4")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200015F")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000711")]
		Default,
		[Token(Token = "0x4000712")]
		ForcedHand,
		[Token(Token = "0x4000713")]
		DollyHand,
		[Token(Token = "0x4000714")]
		DollyAttached,
		[Token(Token = "0x4000715")]
		HorizontalScaled,
		[Token(Token = "0x4000716")]
		VerticalScaled,
		[Token(Token = "0x4000717")]
		Menu
	}

	[Token(Token = "0x2000161")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000162")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000163")]
	public delegate void SetCursorPosition(UnityEngine.Vector3 cursorPosition);

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x117E798", Offset = "0x117E798", VA = "0x117E798")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x117E7F8", Offset = "0x117E7F8", VA = "0x117E7F8")]
	public void Release()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x117E814", Offset = "0x117E814", VA = "0x117E814")]
	public void CursorPos(UnityEngine.Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x117E830", Offset = "0x117E830", VA = "0x117E830")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000164")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3[] handVertices;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x117EAD8", Offset = "0x117EAD8", VA = "0x117EAD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x117ED0C", Offset = "0x117ED0C", VA = "0x117ED0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x117EED4", Offset = "0x117EED4", VA = "0x117EED4")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x117F4DC", Offset = "0x117F4DC", VA = "0x117F4DC")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, UnityEngine.Vector3 point1, UnityEngine.Vector3 point2)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x117FA74", Offset = "0x117FA74", VA = "0x117FA74")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1181D7C", Offset = "0x1181D7C", VA = "0x1181D7C")]
	private void AddVertex(UnityEngine.Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x11820F0", Offset = "0x11820F0", VA = "0x11820F0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000165")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1183114", Offset = "0x1183114", VA = "0x1183114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x118347C", Offset = "0x118347C", VA = "0x118347C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x11831B0", Offset = "0x11831B0", VA = "0x11831B0")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x11838E4", Offset = "0x11838E4", VA = "0x11838E4")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1183E54", Offset = "0x1183E54", VA = "0x1183E54")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000166")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x1186624", Offset = "0x1186624", VA = "0x1186624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x118666C", Offset = "0x118666C", VA = "0x118666C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1185F70", Offset = "0x1185F70", VA = "0x1185F70")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1186358", Offset = "0x1186358", VA = "0x1186358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x118635C", Offset = "0x118635C", VA = "0x118635C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x118662C", Offset = "0x118662C", VA = "0x118662C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private UnityEngine.Vector3 localGrabOffset;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 camGrabPosition;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private UnityEngine.Vector3 handGrabPosition;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UnityEngine.Vector3 cursorPosition;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1183E64", Offset = "0x1183E64", VA = "0x1183E64")]
	private void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1184054", Offset = "0x1184054", VA = "0x1184054")]
	private void Update()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1184EF0", Offset = "0x1184EF0", VA = "0x1184EF0")]
	private void GrabHoverObject(GameObject grbObj, UnityEngine.Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1185C88", Offset = "0x1185C88", VA = "0x1185C88")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1183FEC", Offset = "0x1183FEC", VA = "0x1183FEC")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x118429C", Offset = "0x118429C", VA = "0x118429C")]
	private void FindHoverObject(UnityEngine.Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x11851E8", Offset = "0x11851E8", VA = "0x11851E8")]
	private void ManipulateObject(GameObject obj, UnityEngine.Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1185F98", Offset = "0x1185F98", VA = "0x1185F98")]
	private void ClampGrabOffset(ref UnityEngine.Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x118604C", Offset = "0x118604C", VA = "0x118604C")]
	private UnityEngine.Vector3 ClampScale(UnityEngine.Vector3 localScale, Vector2 thumb)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x118607C", Offset = "0x118607C", VA = "0x118607C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1185E54", Offset = "0x1185E54", VA = "0x1185E54")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x118616C", Offset = "0x118616C", VA = "0x118616C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000168")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1186674", Offset = "0x1186674", VA = "0x1186674")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x11867D4", Offset = "0x11867D4", VA = "0x11867D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1186888", Offset = "0x1186888", VA = "0x1186888")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000169")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	public enum BrushState
	{
		[Token(Token = "0x4000754")]
		Idle,
		[Token(Token = "0x4000755")]
		Inking
	}

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<UnityEngine.Vector3> inkPositions;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1186890", Offset = "0x1186890", VA = "0x1186890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1186898", Offset = "0x1186898", VA = "0x1186898")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1186B48", Offset = "0x1186B48", VA = "0x1186B48")]
	private void StartLine(UnityEngine.Vector3 inkPos)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1186D68", Offset = "0x1186D68", VA = "0x1186D68")]
	private void UpdateLine(UnityEngine.Vector3 inkPos)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1186FA8", Offset = "0x1186FA8", VA = "0x1186FA8")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1186A60", Offset = "0x1186A60", VA = "0x1186A60")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1187078", Offset = "0x1187078", VA = "0x1187078")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200016B")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1187108", Offset = "0x1187108", VA = "0x1187108")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1187268", Offset = "0x1187268", VA = "0x1187268")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1187454", Offset = "0x1187454", VA = "0x1187454")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200016C")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x118745C", Offset = "0x118745C", VA = "0x118745C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1187624", Offset = "0x1187624", VA = "0x1187624")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x11877C4", Offset = "0x11877C4", VA = "0x11877C4")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200016D")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x200016E")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x11883B0", Offset = "0x11883B0", VA = "0x11883B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x11883F8", Offset = "0x11883F8", VA = "0x11883F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1188124", Offset = "0x1188124", VA = "0x1188124")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1188268", Offset = "0x1188268", VA = "0x1188268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x118826C", Offset = "0x118826C", VA = "0x118826C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x11883B8", Offset = "0x11883B8", VA = "0x11883B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x1188560", Offset = "0x1188560", VA = "0x1188560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x11885A8", Offset = "0x11885A8", VA = "0x11885A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x118814C", Offset = "0x118814C", VA = "0x118814C")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1188400", Offset = "0x1188400", VA = "0x1188400", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1188404", Offset = "0x1188404", VA = "0x1188404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1188568", Offset = "0x1188568", VA = "0x1188568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 cursorPosition;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x11877CC", Offset = "0x11877CC", VA = "0x11877CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1187AE0", Offset = "0x1187AE0", VA = "0x1187AE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1187E80", Offset = "0x1187E80", VA = "0x1187E80")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1187FD8", Offset = "0x1187FD8", VA = "0x1187FD8")]
	public void Release()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1187F60", Offset = "0x1187F60", VA = "0x1187F60")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__18))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x11880AC", Offset = "0x11880AC", VA = "0x11880AC")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__19))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1188174", Offset = "0x1188174", VA = "0x1188174")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1188194", Offset = "0x1188194", VA = "0x1188194")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x11881B4", Offset = "0x11881B4", VA = "0x11881B4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1187A78", Offset = "0x1187A78", VA = "0x1187A78")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x11881E8", Offset = "0x11881E8", VA = "0x11881E8")]
	public void Cursor(UnityEngine.Vector3 cP)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x11881F4", Offset = "0x11881F4", VA = "0x11881F4")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1187AF8", Offset = "0x1187AF8", VA = "0x1187AF8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1188200", Offset = "0x1188200", VA = "0x1188200")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000170")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x11885B0", Offset = "0x11885B0", VA = "0x11885B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1188664", Offset = "0x1188664", VA = "0x1188664")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000171")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x118866C", Offset = "0x118866C", VA = "0x118866C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x11886D8", Offset = "0x11886D8", VA = "0x11886D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x11889CC", Offset = "0x11889CC", VA = "0x11889CC")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000172")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x11889D4", Offset = "0x11889D4", VA = "0x11889D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1188E28", Offset = "0x1188E28", VA = "0x1188E28")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000173")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1188E30", Offset = "0x1188E30", VA = "0x1188E30")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1189058", Offset = "0x1189058", VA = "0x1189058")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x11890A4", Offset = "0x11890A4", VA = "0x11890A4")]
	public void Release()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x11890E4", Offset = "0x11890E4", VA = "0x11890E4")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000174")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x11897D0", Offset = "0x11897D0", VA = "0x11897D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x1189818", Offset = "0x1189818", VA = "0x1189818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x11896A4", Offset = "0x11896A4", VA = "0x11896A4")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x11896E4", Offset = "0x11896E4", VA = "0x11896E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x11896E8", Offset = "0x11896E8", VA = "0x11896E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x11897D8", Offset = "0x11897D8", VA = "0x11897D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x11890EC", Offset = "0x11890EC", VA = "0x11890EC")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1189110", Offset = "0x1189110", VA = "0x1189110")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1189200", Offset = "0x1189200", VA = "0x1189200")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x11892A4", Offset = "0x11892A4", VA = "0x11892A4")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x11894EC", Offset = "0x11894EC", VA = "0x11894EC")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1189590", Offset = "0x1189590", VA = "0x1189590")]
	public void Release(UnityEngine.Vector3 pos, UnityEngine.Vector3 vel, UnityEngine.Vector3 angVel)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1189474", Offset = "0x1189474", VA = "0x1189474")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x11896CC", Offset = "0x11896CC", VA = "0x11896CC")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000176")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1189820", Offset = "0x1189820", VA = "0x1189820")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1189B1C", Offset = "0x1189B1C", VA = "0x1189B1C")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000177")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1189B24", Offset = "0x1189B24", VA = "0x1189B24")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1189D08", Offset = "0x1189D08", VA = "0x1189D08")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x118A178", Offset = "0x118A178", VA = "0x118A178")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1189BAC", Offset = "0x1189BAC", VA = "0x1189BAC")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x118A37C", Offset = "0x118A37C", VA = "0x118A37C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out UnityEngine.Vector3 position, out Quaternion rotation, out UnityEngine.Vector3 localScale)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x118A868", Offset = "0x118A868", VA = "0x118A868")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000178")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x118AA84", Offset = "0x118AA84", VA = "0x118AA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x118AACC", Offset = "0x118AACC", VA = "0x118AACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x118A8D8", Offset = "0x118A8D8", VA = "0x118A8D8")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x118A990", Offset = "0x118A990", VA = "0x118A990", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x118A994", Offset = "0x118A994", VA = "0x118A994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x118AA8C", Offset = "0x118AA8C", VA = "0x118AA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x118A870", Offset = "0x118A870", VA = "0x118A870")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x118A900", Offset = "0x118A900", VA = "0x118A900", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x118A920", Offset = "0x118A920", VA = "0x118A920", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x118A988", Offset = "0x118A988", VA = "0x118A988")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200017A")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000600")]
	[Address(RVA = "0x118AAD4", Offset = "0x118AAD4", VA = "0x118AAD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x118AAD8", Offset = "0x118AAD8", VA = "0x118AAD8")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x200017B")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x118AAE0", Offset = "0x118AAE0", VA = "0x118AAE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x118AB50", Offset = "0x118AB50", VA = "0x118AB50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x118ABD4", Offset = "0x118ABD4", VA = "0x118ABD4")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x200017C")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	public enum Method
	{
		[Token(Token = "0x40007B1")]
		Adapt,
		[Token(Token = "0x40007B2")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40007B3")]
		Scale,
		[Token(Token = "0x40007B4")]
		None
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x17000086")]
	public UnityEngine.Vector3 PivotPosition
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x118ABE4", Offset = "0x118ABE4", VA = "0x118ABE4")]
		get
		{
			return default(UnityEngine.Vector3);
		}
	}

	[Token(Token = "0x17000087")]
	public UnityEngine.Vector3 NewSize
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x118AC00", Offset = "0x118AC00", VA = "0x118AC00")]
		[CompilerGenerated]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x118AC0C", Offset = "0x118AC0C", VA = "0x118AC0C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public UnityEngine.Vector3 DefaultSize
	{
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x118AC18", Offset = "0x118AC18", VA = "0x118AC18")]
		[CompilerGenerated]
		get
		{
			return default(UnityEngine.Vector3);
		}
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x118AC24", Offset = "0x118AC24", VA = "0x118AC24")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public Mesh Mesh
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x118AC30", Offset = "0x118AC30", VA = "0x118AC30")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x118AC38", Offset = "0x118AC38", VA = "0x118AC38")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x118AC40", Offset = "0x118AC40", VA = "0x118AC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x118AD50", Offset = "0x118AD50", VA = "0x118AD50")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x200017E")]
public class SimpleResizer
{
	[Token(Token = "0x600060E")]
	[Address(RVA = "0x118A4D4", Offset = "0x118A4D4", VA = "0x118A4D4")]
	public void CreateResizedObject(UnityEngine.Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x118AD58", Offset = "0x118AD58", VA = "0x118AD58")]
	private Mesh ProcessVertices(SimpleResizable resizable, UnityEngine.Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x118AFDC", Offset = "0x118AFDC", VA = "0x118AFDC")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x118A4CC", Offset = "0x118A4CC", VA = "0x118A4CC")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200017F")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x118B084", Offset = "0x118B084", VA = "0x118B084", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x118B088", Offset = "0x118B088", VA = "0x118B088", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x118B4F0", Offset = "0x118B4F0", VA = "0x118B4F0")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x2000180")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	public enum GeometryType
	{
		[Token(Token = "0x40007BC")]
		Plane,
		[Token(Token = "0x40007BD")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000182")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x118B540", Offset = "0x118B540", VA = "0x118B540")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, UnityEngine.Vector3 position, Quaternion rotation, UnityEngine.Vector3 localScale)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x118B96C", Offset = "0x118B96C", VA = "0x118B96C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x118C2A4", Offset = "0x118C2A4", VA = "0x118C2A4")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out UnityEngine.Vector3 position, out Quaternion rotation, out UnityEngine.Vector3 localScale)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x118C17C", Offset = "0x118C17C", VA = "0x118C17C")]
	private void GetTopPlaneFromVolume(Transform volume, UnityEngine.Vector3 dimensions, out UnityEngine.Vector3 position, out Quaternion rotation, out UnityEngine.Vector3 localScale)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x118C324", Offset = "0x118C324", VA = "0x118C324")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000183")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062E")]
			[Address(RVA = "0x118D078", Offset = "0x118D078", VA = "0x118D078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0x118D0C0", Offset = "0x118D0C0", VA = "0x118D0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x118C4DC", Offset = "0x118C4DC", VA = "0x118C4DC")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x118CF08", Offset = "0x118CF08", VA = "0x118CF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x118CF0C", Offset = "0x118CF0C", VA = "0x118CF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x118D080", Offset = "0x118D080", VA = "0x118D080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C0")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("canvas_")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("pivot_")]
	private Transform _pivot;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("anchorMenu_")]
	private GameObject _anchorMenu;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("saveIcon_")]
	private GameObject _saveIcon;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[FormerlySerializedAs("labelImage_")]
	private Image _labelImage;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[FormerlySerializedAs("labelBaseColor_")]
	private Color _labelBaseColor;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("labelHighlightColor_")]
	private Color _labelHighlightColor;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[FormerlySerializedAs("labelSelectedColor_")]
	private Color _labelSelectedColor;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("uiManager_")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700008A")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x118C988", Offset = "0x118C988", VA = "0x118C988")]
		set
		{
		}
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x118C32C", Offset = "0x118C32C", VA = "0x118C32C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x118C474", Offset = "0x118C474", VA = "0x118C474")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x118C504", Offset = "0x118C504", VA = "0x118C504")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x118C77C", Offset = "0x118C77C", VA = "0x118C77C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x118C84C", Offset = "0x118C84C", VA = "0x118C84C")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x118C8B8", Offset = "0x118C8B8", VA = "0x118C8B8")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x118C9A8", Offset = "0x118C9A8", VA = "0x118C9A8")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x118CAC4", Offset = "0x118CAC4", VA = "0x118CAC4")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x118CBCC", Offset = "0x118CBCC", VA = "0x118CBCC")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x118C554", Offset = "0x118C554", VA = "0x118C554")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x118C688", Offset = "0x118C688", VA = "0x118C688")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x118CC8C", Offset = "0x118CC8C", VA = "0x118CC8C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x118CDB0", Offset = "0x118CDB0", VA = "0x118CDB0")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000185")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000186")]
	public enum AnchorMode
	{
		[Token(Token = "0x40007E9")]
		Create,
		[Token(Token = "0x40007EA")]
		Select
	}

	[Token(Token = "0x2000187")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("lineRenderer_")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x1700008D")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x118D0C8", Offset = "0x118D0C8", VA = "0x118D0C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x118D0D0", Offset = "0x118D0D0", VA = "0x118D0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x118D190", Offset = "0x118D190", VA = "0x118D190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x118D2B0", Offset = "0x118D2B0", VA = "0x118D2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x118D724", Offset = "0x118D724", VA = "0x118D724")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x118D790", Offset = "0x118D790", VA = "0x118D790")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x118D260", Offset = "0x118D260", VA = "0x118D260")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x118D9E8", Offset = "0x118D9E8", VA = "0x118D9E8")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x118DA68", Offset = "0x118DA68", VA = "0x118DA68")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x118DA80", Offset = "0x118DA80", VA = "0x118DA80")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x118D9D0", Offset = "0x118D9D0", VA = "0x118D9D0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x118D630", Offset = "0x118D630", VA = "0x118D630")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x118DC68", Offset = "0x118DC68", VA = "0x118DC68")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x118DB00", Offset = "0x118DB00", VA = "0x118DB00")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x118DBDC", Offset = "0x118DBDC", VA = "0x118DBDC")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x118DD54", Offset = "0x118DD54", VA = "0x118DD54")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x118DBFC", Offset = "0x118DBFC", VA = "0x118DBFC")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x118DC34", Offset = "0x118DC34", VA = "0x118DC34")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x118D3B0", Offset = "0x118D3B0", VA = "0x118D3B0")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x118DE40", Offset = "0x118DE40", VA = "0x118DE40")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x118DE5C", Offset = "0x118DE5C", VA = "0x118DE5C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x118DED8", Offset = "0x118DED8", VA = "0x118DED8")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x118DFF0", Offset = "0x118DFF0", VA = "0x118DFF0")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000188")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x118D7E4", Offset = "0x118D7E4", VA = "0x118D7E4")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x118E1AC", Offset = "0x118E1AC", VA = "0x118E1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x118E0CC", Offset = "0x118E0CC", VA = "0x118E0CC")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x118E228", Offset = "0x118E228", VA = "0x118E228")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x118E040", Offset = "0x118E040", VA = "0x118E040")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x118E3D8", Offset = "0x118E3D8", VA = "0x118E3D8")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000189")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x118E510", Offset = "0x118E510", VA = "0x118E510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x118E714", Offset = "0x118E714", VA = "0x118E714")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x118E818", Offset = "0x118E818", VA = "0x118E818")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200018B")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x118E83C", Offset = "0x118E83C", VA = "0x118E83C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x118E864", Offset = "0x118E864", VA = "0x118E864")]
	private void Update()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x118E9A0", Offset = "0x118E9A0", VA = "0x118E9A0")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x200018C")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Time")]
	[SerializeField]
	private float m_fixedTimeStep;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Physics")]
	[SerializeField]
	private float m_gravityScalar;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x118E9B0", Offset = "0x118E9B0", VA = "0x118E9B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x118EA48", Offset = "0x118EA48", VA = "0x118EA48")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x118EA50", Offset = "0x118EA50", VA = "0x118EA50")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x118EB14", Offset = "0x118EB14", VA = "0x118EB14")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x200018D")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x40007F8")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x40007F9")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("External")]
	[SerializeField]
	private Transform m_trackingSpace;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Settings")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x118EB34", Offset = "0x118EB34", VA = "0x118EB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x118ED78", Offset = "0x118ED78", VA = "0x118ED78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x118F1A8", Offset = "0x118F1A8", VA = "0x118F1A8")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x118F2D4", Offset = "0x118F2D4", VA = "0x118F2D4")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x200018E")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Settings")]
	private float m_minExtent;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Components")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x118F2EC", Offset = "0x118F2EC", VA = "0x118F2EC")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x118F2F4", Offset = "0x118F2F4", VA = "0x118F2F4")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x118F318", Offset = "0x118F318", VA = "0x118F318")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x118F41C", Offset = "0x118F41C", VA = "0x118F41C")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x200018F")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private Vector2 m_xExtent;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Components")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x118F42C", Offset = "0x118F42C", VA = "0x118F42C")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x118F438", Offset = "0x118F438", VA = "0x118F438")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x118F45C", Offset = "0x118F45C", VA = "0x118F45C")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x118F7B4", Offset = "0x118F7B4", VA = "0x118F7B4")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x2000190")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Components")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x118F7C8", Offset = "0x118F7C8", VA = "0x118F7C8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x118F7EC", Offset = "0x118F7EC", VA = "0x118F7EC")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x118F80C", Offset = "0x118F80C", VA = "0x118F80C")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x2000191")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Left Column Components")]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Right Column Components")]
	[SerializeField]
	private UiBoolInspector m_ax;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x118F814", Offset = "0x118F814", VA = "0x118F814")]
	private void Start()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x118F83C", Offset = "0x118F83C", VA = "0x118F83C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x118FD58", Offset = "0x118FD58", VA = "0x118FD58")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x118FD98", Offset = "0x118FD98", VA = "0x118FD98")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x118FE1C", Offset = "0x118FE1C", VA = "0x118FE1C")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x2000192")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x118FE2C", Offset = "0x118FE2C", VA = "0x118FE2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x11900F8", Offset = "0x11900F8", VA = "0x11900F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1190210", Offset = "0x1190210", VA = "0x1190210")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x11902AC", Offset = "0x11902AC", VA = "0x11902AC")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x11902F0", Offset = "0x11902F0", VA = "0x11902F0")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x119038C", Offset = "0x119038C", VA = "0x119038C")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x11902FC", Offset = "0x11902FC", VA = "0x11902FC")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1190398", Offset = "0x1190398", VA = "0x1190398")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1190428", Offset = "0x1190428", VA = "0x1190428")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1190254", Offset = "0x1190254", VA = "0x1190254")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x118FED0", Offset = "0x118FED0", VA = "0x118FED0")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1190490", Offset = "0x1190490", VA = "0x1190490")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x2000193")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Components")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1190498", Offset = "0x1190498", VA = "0x1190498")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x11904BC", Offset = "0x11904BC", VA = "0x11904BC")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x119056C", Offset = "0x119056C", VA = "0x119056C")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x2000194")]
public class OculusMobileMRC : MonoBehaviour
{
	[Token(Token = "0x6000682")]
	[Address(RVA = "0x1190574", Offset = "0x1190574", VA = "0x1190574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1190628", Offset = "0x1190628", VA = "0x1190628")]
	public OculusMobileMRC()
	{
	}
}
[Token(Token = "0x2000195")]
[RequireComponent(typeof(LineRenderer))]
public class UVScroller_C : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MainoffsetX;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MainoffsetY;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool UseCustomTex;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string CustomTexName;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1190630", Offset = "0x1190630", VA = "0x1190630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1190700", Offset = "0x1190700", VA = "0x1190700")]
	public UVScroller_C()
	{
	}
}
[Token(Token = "0x2000196")]
public class pauseObject : MonoBehaviour
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem PS;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1190758", Offset = "0x1190758", VA = "0x1190758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x11907A8", Offset = "0x11907A8", VA = "0x11907A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1190818", Offset = "0x1190818", VA = "0x1190818")]
	public pauseObject()
	{
	}
}
[Token(Token = "0x2000197")]
public class PauseParticle : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particlSys;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggered;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool triggered1;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1190820", Offset = "0x1190820", VA = "0x1190820")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1190870", Offset = "0x1190870", VA = "0x1190870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1190878", Offset = "0x1190878", VA = "0x1190878")]
	private void Update()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x119091C", Offset = "0x119091C", VA = "0x119091C")]
	public PauseParticle()
	{
	}
}
[Token(Token = "0x2000198")]
public class PlayerAccuracyRecorder : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float averageValue;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int numberOfPlaySessions;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int weightFactor;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<float> inputValuesList;

	[Token(Token = "0x4000833")]
	private const string INPUT_VALUES_KEY = "input_values_accuracy";

	[Token(Token = "0x4000834")]
	private const string NUMBER_OF_PLAY_SESSIONS_KEY = "number_of_play_sessions_accuracy";

	[Token(Token = "0x4000835")]
	private const string AVERAGE_VALUE_KEY = "average_value_accuracy";

	[Token(Token = "0x4000836")]
	private const int MAX_NUMBER_OF_PLAY_SESSIONS = 20;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RadialDisplayIndicator radialDisplay;

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1190924", Offset = "0x1190924", VA = "0x1190924")]
	private void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1190AF8", Offset = "0x1190AF8", VA = "0x1190AF8")]
	public void RecordInputValue(float inputValue)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1190BFC", Offset = "0x1190BFC", VA = "0x1190BFC")]
	private void UpdateAverageValue()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1190C9C", Offset = "0x1190C9C", VA = "0x1190C9C")]
	private void SaveData()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1190E64", Offset = "0x1190E64", VA = "0x1190E64")]
	public PlayerAccuracyRecorder()
	{
	}
}
[Token(Token = "0x200019A")]
public class PlayerInputErrorWorkaround : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerInput Input;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1190F68", Offset = "0x1190F68", VA = "0x1190F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1190FB8", Offset = "0x1190FB8", VA = "0x1190FB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1190FD8", Offset = "0x1190FD8", VA = "0x1190FD8")]
	public PlayerInputErrorWorkaround()
	{
	}
}
[Token(Token = "0x200019B")]
public class PlayerProgressRecorder : MonoBehaviour
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float averageValue;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int numberOfPlaySessions;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int weightFactor;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<float> inputValuesList;

	[Token(Token = "0x400083F")]
	private const string INPUT_VALUES_KEY = "input_values_power";

	[Token(Token = "0x4000840")]
	private const string NUMBER_OF_PLAY_SESSIONS_KEY = "number_of_play_sessions_power";

	[Token(Token = "0x4000841")]
	private const string AVERAGE_VALUE_KEY = "average_value_power";

	[Token(Token = "0x4000842")]
	private const int MAX_NUMBER_OF_PLAY_SESSIONS = 20;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RadialDisplayIndicator radialDisplay;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1190FE0", Offset = "0x1190FE0", VA = "0x1190FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x11911B4", Offset = "0x11911B4", VA = "0x11911B4")]
	public void RecordInputValue(float inputValue)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x11912B8", Offset = "0x11912B8", VA = "0x11912B8")]
	private void UpdateAverageValue()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1191358", Offset = "0x1191358", VA = "0x1191358")]
	private void SaveData()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1191520", Offset = "0x1191520", VA = "0x1191520")]
	public PlayerProgressRecorder()
	{
	}
}
[Token(Token = "0x200019D")]
public class PlaymodeSelector : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CanvasLeft;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CanvasRight;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PanelWorlds;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PanelStart;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1191624", Offset = "0x1191624", VA = "0x1191624")]
	public PlaymodeSelector()
	{
	}
}
[Token(Token = "0x200019E")]
public class pxr_passthrough : MonoBehaviour
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer OVRPassLayer;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x119162C", Offset = "0x119162C", VA = "0x119162C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x11916B4", Offset = "0x11916B4", VA = "0x11916B4")]
	public pxr_passthrough()
	{
	}
}
[Token(Token = "0x200019F")]
public class RadialIndicator : MonoBehaviour
{
	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <DelteteRadial>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RadialIndicator <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x1191E7C", Offset = "0x1191E7C", VA = "0x1191E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x1191EC4", Offset = "0x1191EC4", VA = "0x1191EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1191D48", Offset = "0x1191D48", VA = "0x1191D48")]
		[DebuggerHidden]
		public <DelteteRadial>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1191DD0", Offset = "0x1191DD0", VA = "0x1191DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1191DD4", Offset = "0x1191DD4", VA = "0x1191DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1191E84", Offset = "0x1191E84", VA = "0x1191E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("UI Indicator")]
	[SerializeField]
	private Image radialIndicatorUI;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float indicatorTimer;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float indicatorBufferTimer;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float indicatorMaxTime;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float indicatorScaledValue;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int difficultyMultiplier;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static RadialIndicator radialindicator;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int frames;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x11916BC", Offset = "0x11916BC", VA = "0x11916BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1191800", Offset = "0x1191800", VA = "0x1191800")]
	public void UpdateIndicator(float indicatorSetter)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x11918FC", Offset = "0x11918FC", VA = "0x11918FC")]
	public void AddToIndicatorTime(float addTime)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x11919BC", Offset = "0x11919BC", VA = "0x11919BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1191894", Offset = "0x1191894", VA = "0x1191894")]
	[IteratorStateMachine(typeof(<DelteteRadial>d__12))]
	private IEnumerator DelteteRadial()
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1191D70", Offset = "0x1191D70", VA = "0x1191D70")]
	public RadialIndicator()
	{
	}
}
[Token(Token = "0x20001A1")]
public class RefreshLocalLeaderBoard : MonoBehaviour
{
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighScoreTableOrg localHighScores;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1191ECC", Offset = "0x1191ECC", VA = "0x1191ECC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1191EE8", Offset = "0x1191EE8", VA = "0x1191EE8")]
	public RefreshLocalLeaderBoard()
	{
	}
}
[Token(Token = "0x20001A2")]
public class RotateObjectTowardsAngle : MonoBehaviour
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float overshootTime;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotateBackTime;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startAngle;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetAngle;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float overshootStartTime;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotateBackStartTime;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float overshootAngle;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool rotateBack;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool reachedTarget;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1191EF0", Offset = "0x1191EF0", VA = "0x1191EF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1191FBC", Offset = "0x1191FBC", VA = "0x1191FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x11920BC", Offset = "0x11920BC", VA = "0x11920BC")]
	public RotateObjectTowardsAngle()
	{
	}
}
[Token(Token = "0x20001A3")]
public class RuntimeXRLoaderManager : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	[CompilerGenerated]
	private sealed class <StartXRCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeXRLoaderManager <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x11925BC", Offset = "0x11925BC", VA = "0x11925BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x1192604", Offset = "0x1192604", VA = "0x1192604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1192310", Offset = "0x1192310", VA = "0x1192310")]
		[DebuggerHidden]
		public <StartXRCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x11923FC", Offset = "0x11923FC", VA = "0x11923FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1192400", Offset = "0x1192400", VA = "0x1192400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x11925C4", Offset = "0x11925C4", VA = "0x11925C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRLoader m_SelectedXRLoader;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x11920CC", Offset = "0x11920CC", VA = "0x11920CC")]
	private void StartXR(int loaderIndex)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x11922A8", Offset = "0x11922A8", VA = "0x11922A8")]
	[IteratorStateMachine(typeof(<StartXRCoroutine>d__2))]
	private IEnumerator StartXRCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1192338", Offset = "0x1192338", VA = "0x1192338")]
	private void StopXR()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x11923F4", Offset = "0x11923F4", VA = "0x11923F4")]
	public RuntimeXRLoaderManager()
	{
	}
}
[Token(Token = "0x20001A5")]
public class PlatformTest : MonoBehaviour
{
	[Token(Token = "0x4000865")]
	private const string TAG = "PlatformTest";

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uid;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text nickName;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text pic;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x119260C", Offset = "0x119260C", VA = "0x119260C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1192794", Offset = "0x1192794", VA = "0x1192794")]
	private void OnGetDeepLink(QiyuMessage.MessageResult<QiyuMessage.DeepLinkParam> msg)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1192858", Offset = "0x1192858", VA = "0x1192858")]
	public void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1192908", Offset = "0x1192908", VA = "0x1192908")]
	public void GoHomeLogin()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1192964", Offset = "0x1192964", VA = "0x1192964")]
	public void GetQiyuAccountInfo()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1192A4C", Offset = "0x1192A4C", VA = "0x1192A4C")]
	public void OpenApp()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1192AF4", Offset = "0x1192AF4", VA = "0x1192AF4")]
	private void TestQiyuPrefs()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1192DFC", Offset = "0x1192DFC", VA = "0x1192DFC")]
	public void OnClickButton(GameObject btn)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1192FA4", Offset = "0x1192FA4", VA = "0x1192FA4")]
	public PlatformTest()
	{
	}
}
[Token(Token = "0x20001A7")]
public class QiyuPayTest : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	private const string TAG = "QiyuPayTest";

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textField;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dropdown dropdown_sku;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dropdown dropdown_orderId;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1193228", Offset = "0x1193228", VA = "0x1193228")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x119347C", Offset = "0x119347C", VA = "0x119347C")]
	public void OnClickButton(GameObject btn)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x119394C", Offset = "0x119394C", VA = "0x119394C")]
	public QiyuPayTest()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Screenshot : MonoBehaviour
{
	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string path;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Range(1f, 5f)]
	private int size;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1194580", Offset = "0x1194580", VA = "0x1194580")]
	public Screenshot()
	{
	}
}
[Token(Token = "0x20001AB")]
public class AIScript : MonoBehaviour
{
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1194590", Offset = "0x1194590", VA = "0x1194590")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x11945DC", Offset = "0x11945DC", VA = "0x11945DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1194758", Offset = "0x1194758", VA = "0x1194758")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1194848", Offset = "0x1194848", VA = "0x1194848")]
	public AIScript()
	{
	}
}
[Token(Token = "0x20001AC")]
public class AnimateDissolve : MonoBehaviour
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blend;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1194850", Offset = "0x1194850", VA = "0x1194850")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x11948A8", Offset = "0x11948A8", VA = "0x11948A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1194938", Offset = "0x1194938", VA = "0x1194938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1194944", Offset = "0x1194944", VA = "0x1194944")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x11949F8", Offset = "0x11949F8", VA = "0x11949F8")]
	public AnimateDissolve()
	{
	}
}
[Token(Token = "0x20001AD")]
public class AnimateDissolveDestroy : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blend;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1194A08", Offset = "0x1194A08", VA = "0x1194A08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1194A58", Offset = "0x1194A58", VA = "0x1194A58")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1194B74", Offset = "0x1194B74", VA = "0x1194B74")]
	public AnimateDissolveDestroy()
	{
	}
}
[Token(Token = "0x20001AE")]
public class AnimateDissolveIntro : MonoBehaviour
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blend;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1194B84", Offset = "0x1194B84", VA = "0x1194B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1194B90", Offset = "0x1194B90", VA = "0x1194B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1194C14", Offset = "0x1194C14", VA = "0x1194C14")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1194CB0", Offset = "0x1194CB0", VA = "0x1194CB0")]
	public AnimateDissolveIntro()
	{
	}
}
[Token(Token = "0x20001AF")]
public class AnimateDissolveMiss : MonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blend;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float deactivationDelay;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1194CC0", Offset = "0x1194CC0", VA = "0x1194CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1194D18", Offset = "0x1194D18", VA = "0x1194D18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1195740", Offset = "0x1195740", VA = "0x1195740")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x11957E0", Offset = "0x11957E0", VA = "0x11957E0")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x119590C", Offset = "0x119590C", VA = "0x119590C")]
	public AnimateDissolveMiss()
	{
	}
}
[Token(Token = "0x20001B0")]
public class AnimateDissolveTimer : MonoBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float blend;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float blendingVar;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deactivationDelay;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource source;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip audioTimerSound;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool tiktok;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrailRenderer tr1;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TrailRenderer tr2;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrailRenderer tr3;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrailRenderer tr4;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float elapsedTime;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1195924", Offset = "0x1195924", VA = "0x1195924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1195934", Offset = "0x1195934", VA = "0x1195934")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1195990", Offset = "0x1195990", VA = "0x1195990")]
	public AnimateDissolveTimer()
	{
	}
}
[Token(Token = "0x20001B1")]
public class AnimateText : AudioSyncer
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool trig;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool deady;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro text;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string TextFrame0;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string TextFrame1;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string TextFrameDead;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x11959A0", Offset = "0x11959A0", VA = "0x11959A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x11959F0", Offset = "0x11959F0", VA = "0x11959F0", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x11959F8", Offset = "0x11959F8", VA = "0x11959F8", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1195A68", Offset = "0x1195A68", VA = "0x1195A68")]
	public void Dead()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1195A9C", Offset = "0x1195A9C", VA = "0x1195A9C")]
	public void Born()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1195AA4", Offset = "0x1195AA4", VA = "0x1195AA4")]
	public AnimateText()
	{
	}
}
[Token(Token = "0x20001B2")]
public class AnimateTextNoSync : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool trig;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool deady;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string TextFrame0;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string TextFrame1;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string TextFrameDead;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1195AB4", Offset = "0x1195AB4", VA = "0x1195AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1195AB8", Offset = "0x1195AB8", VA = "0x1195AB8")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1195ABC", Offset = "0x1195ABC", VA = "0x1195ABC")]
	public void OnBeat()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1195B24", Offset = "0x1195B24", VA = "0x1195B24")]
	public void Dead()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1195B58", Offset = "0x1195B58", VA = "0x1195B58")]
	public void Born()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1195B60", Offset = "0x1195B60", VA = "0x1195B60")]
	public AnimateTextNoSync()
	{
	}
}
[Token(Token = "0x20001B3")]
public class AudioSpawner : AudioSyncer
{
	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <ShootLeft>d__57 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float x;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float y;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <SLtimer>5__2;

		[Token(Token = "0x17000092")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x119B2F0", Offset = "0x119B2F0", VA = "0x119B2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x119B338", Offset = "0x119B338", VA = "0x119B338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x119AF74", Offset = "0x119AF74", VA = "0x119AF74")]
		[DebuggerHidden]
		public <ShootLeft>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x119AF9C", Offset = "0x119AF9C", VA = "0x119AF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x119AFA0", Offset = "0x119AFA0", VA = "0x119AFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x119B2F8", Offset = "0x119B2F8", VA = "0x119B2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B5")]
	[CompilerGenerated]
	private sealed class <ShootRight>d__59 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float x;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float y;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <SRtimer>5__2;

		[Token(Token = "0x17000094")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x119B710", Offset = "0x119B710", VA = "0x119B710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0x119B758", Offset = "0x119B758", VA = "0x119B758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x119B394", Offset = "0x119B394", VA = "0x119B394")]
		[DebuggerHidden]
		public <ShootRight>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x119B3BC", Offset = "0x119B3BC", VA = "0x119B3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x119B3C0", Offset = "0x119B3C0", VA = "0x119B3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x119B718", Offset = "0x119B718", VA = "0x119B718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[CompilerGenerated]
	private sealed class <HitLeft>d__92 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Lrotation;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <HLtimer>5__2;

		[Token(Token = "0x17000096")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x119BC24", Offset = "0x119BC24", VA = "0x119BC24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x119BC6C", Offset = "0x119BC6C", VA = "0x119BC6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x119B7B4", Offset = "0x119B7B4", VA = "0x119B7B4")]
		[DebuggerHidden]
		public <HitLeft>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x119B7DC", Offset = "0x119B7DC", VA = "0x119B7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x119B7E0", Offset = "0x119B7E0", VA = "0x119B7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x119BC2C", Offset = "0x119BC2C", VA = "0x119BC2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B7")]
	[CompilerGenerated]
	private sealed class <HitRight>d__93 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Rrotation;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <HRtimer>5__2;

		[Token(Token = "0x17000098")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x119C138", Offset = "0x119C138", VA = "0x119C138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x119C180", Offset = "0x119C180", VA = "0x119C180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x119BCC8", Offset = "0x119BCC8", VA = "0x119BCC8")]
		[DebuggerHidden]
		public <HitRight>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x119BCF0", Offset = "0x119BCF0", VA = "0x119BCF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x119BCF4", Offset = "0x119BCF4", VA = "0x119BCF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x119C140", Offset = "0x119C140", VA = "0x119C140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B8")]
	[CompilerGenerated]
	private sealed class <Slider>d__95 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <Stimer>5__2;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <slider>5__3;

		[Token(Token = "0x1700009A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x119C6E0", Offset = "0x119C6E0", VA = "0x119C6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x119C728", Offset = "0x119C728", VA = "0x119C728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x119C1DC", Offset = "0x119C1DC", VA = "0x119C1DC")]
		[DebuggerHidden]
		public <Slider>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x119C204", Offset = "0x119C204", VA = "0x119C204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x119C208", Offset = "0x119C208", VA = "0x119C208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x119C6E8", Offset = "0x119C6E8", VA = "0x119C6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[CompilerGenerated]
	private sealed class <HitSound>d__96 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <HStimer>5__2;

		[Token(Token = "0x1700009C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x119C914", Offset = "0x119C914", VA = "0x119C914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x119C95C", Offset = "0x119C95C", VA = "0x119C95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x119C784", Offset = "0x119C784", VA = "0x119C784")]
		[DebuggerHidden]
		public <HitSound>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x119C7AC", Offset = "0x119C7AC", VA = "0x119C7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x119C7B0", Offset = "0x119C7B0", VA = "0x119C7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x119C91C", Offset = "0x119C91C", VA = "0x119C91C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <FylingObstacleSound>d__97 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner <>4__this;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <FOtimer>5__2;

		[Token(Token = "0x1700009E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x119CB50", Offset = "0x119CB50", VA = "0x119CB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0x119CB98", Offset = "0x119CB98", VA = "0x119CB98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x119C9B8", Offset = "0x119C9B8", VA = "0x119C9B8")]
		[DebuggerHidden]
		public <FylingObstacleSound>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x119C9E0", Offset = "0x119C9E0", VA = "0x119C9E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x119C9E4", Offset = "0x119C9E4", VA = "0x119C9E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x119CB58", Offset = "0x119CB58", VA = "0x119CB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] points;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float beat;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float xteTakt;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float xteTaktintern;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timerSpawner;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int randompointBlue;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int randompointRed;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int randompoint;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int secondPoint;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int randomRotation;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int secondRotation;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int randomSphere;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int randomSphereTrigger;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float distanceTwo;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Tutorial tutorial;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RedSpheres;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RedSpheresMiss;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BlueSpheres;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int BlueSpheresMiss;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ShootSpheres;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int ShootSpheresMiss;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Runners;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int RunnersMiss;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Shooters;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int ShootersMiss;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool SpawnOKR;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public static bool SpawnOKL;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color blue;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color pink;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color green;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color red;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float ShootspherSpawnDelay;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float HitspherSpawnDelay;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float HitSoundPlayDelay;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float FOSoundPlayDelay;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float HitSoundAudioDelayCompensation;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float audiosSlashingVolume;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource audioplayer;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool sliderFirstL;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private static bool sliderFirstR;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static GameObject SliderEndPointObject;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject lastSpawnR;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject lastSpawnL;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float secondsPerBeat;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float beatsPerSecond;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool BoxingSpawn;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool FitnessFlow;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip hitSound;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip flyingObstacleSound;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int xVariationL;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int yVariationL;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int xVariationL2;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int yVariationL2;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float FloatxVariationL;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float FloatyVariationL;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float FloatxVariationR;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float FloatyVariationR;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private UnityEngine.Vector3 PositionR;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private UnityEngine.Vector3 PositionL;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float FloatxVariationL2;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float FloatyVariationL2;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float FloatxVariationR2;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float FloatyVariationR2;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int xVariationR;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int yVariationR;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int lastxCoreR;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int lastyCoreR;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float CountfromLastSpawn;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float previousCaseH1L;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float previousCaseH1R;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool previousH1Left;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float previousCaseH2;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float DistanceScalingX;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float DistanceScalingY;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int HitLeftRotation;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int HitRightRotation;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool BoxingDirectionspawn;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1195BF8", Offset = "0x1195BF8", VA = "0x1195BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1196200", Offset = "0x1196200", VA = "0x1196200", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1196234", Offset = "0x1196234", VA = "0x1196234", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x119623C", Offset = "0x119623C", VA = "0x119623C", Slot = "8")]
	public override void OnSL()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x119663C", Offset = "0x119663C", VA = "0x119663C", Slot = "9")]
	public override void OnSR()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11969DC", Offset = "0x11969DC", VA = "0x11969DC", Slot = "10")]
	public override void OnSM()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1196E6C", Offset = "0x1196E6C", VA = "0x1196E6C", Slot = "11")]
	public override void OnUL()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1197324", Offset = "0x1197324", VA = "0x1197324")]
	[IteratorStateMachine(typeof(<ShootLeft>d__57))]
	private IEnumerator<float> ShootLeft(float x, float y)
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11973A0", Offset = "0x11973A0", VA = "0x11973A0", Slot = "12")]
	public override void OnUR()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x119785C", Offset = "0x119785C", VA = "0x119785C")]
	[IteratorStateMachine(typeof(<ShootRight>d__59))]
	private IEnumerator<float> ShootRight(float x, float y)
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11978D8", Offset = "0x11978D8", VA = "0x11978D8")]
	public static float MyRound(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1197908", Offset = "0x1197908", VA = "0x1197908", Slot = "13")]
	public override void OnH1L()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x119818C", Offset = "0x119818C", VA = "0x119818C", Slot = "14")]
	public override void OnH1R()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x11989D0", Offset = "0x11989D0", VA = "0x11989D0", Slot = "15")]
	public override void OnH2()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x11980F0", Offset = "0x11980F0", VA = "0x11980F0")]
	[IteratorStateMachine(typeof(<HitLeft>d__92))]
	private IEnumerator<float> HitLeft(UnityEngine.Vector3 position, int Lrotation)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1198934", Offset = "0x1198934", VA = "0x1198934")]
	[IteratorStateMachine(typeof(<HitRight>d__93))]
	private IEnumerator<float> HitRight(UnityEngine.Vector3 position, int Rrotation)
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1199D7C", Offset = "0x1199D7C", VA = "0x1199D7C", Slot = "16")]
	public override void OnH3()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1199E34", Offset = "0x1199E34", VA = "0x1199E34")]
	[IteratorStateMachine(typeof(<Slider>d__95))]
	private IEnumerator<float> Slider()
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1199E9C", Offset = "0x1199E9C", VA = "0x1199E9C")]
	[IteratorStateMachine(typeof(<HitSound>d__96))]
	private IEnumerator<float> HitSound()
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x11965D4", Offset = "0x11965D4", VA = "0x11965D4")]
	[IteratorStateMachine(typeof(<FylingObstacleSound>d__97))]
	private IEnumerator<float> FylingObstacleSound()
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1199F04", Offset = "0x1199F04", VA = "0x1199F04")]
	public AudioSpawner()
	{
	}
}
[Token(Token = "0x20001BB")]
public class AudioSpawner1 : AudioSyncer
{
	[Token(Token = "0x20001BC")]
	[CompilerGenerated]
	private sealed class <_Spawner>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSpawner1 <>4__this;

		[Token(Token = "0x170000A0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0x119EB00", Offset = "0x119EB00", VA = "0x119EB00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0x119EB48", Offset = "0x119EB48", VA = "0x119EB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x119CCB4", Offset = "0x119CCB4", VA = "0x119CCB4")]
		[DebuggerHidden]
		public <_Spawner>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x119D90C", Offset = "0x119D90C", VA = "0x119D90C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x119D910", Offset = "0x119D910", VA = "0x119D910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x119EB08", Offset = "0x119EB08", VA = "0x119EB08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private objectPooler objectpooler;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] cubes;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] points;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float beat;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float xteTakt;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float xteTaktintern;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float timerSpawner;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int randompointBlue;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int randompointRed;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int randompoint;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int secondPoint;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int randomRotation;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int secondRotation;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int randomSphere;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int randomSphereTrigger;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float distanceTwo;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tutorial tutorial;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RedSpheres;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RedSpheresMiss;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BlueSpheres;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int BlueSpheresMiss;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ShootSpheres;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int ShootSpheresMiss;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Runners;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int RunnersMiss;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool SpawnOKR;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public static bool SpawnOKL;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int triggerSwitcher;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int count;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int takt;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x119CBF4", Offset = "0x119CBF4", VA = "0x119CBF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x119CC4C", Offset = "0x119CC4C", VA = "0x119CC4C")]
	[IteratorStateMachine(typeof(<_Spawner>d__31))]
	private IEnumerator<float> _Spawner()
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x119CCDC", Offset = "0x119CCDC", VA = "0x119CCDC", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x119D878", Offset = "0x119D878", VA = "0x119D878", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x119D8FC", Offset = "0x119D8FC", VA = "0x119D8FC")]
	public AudioSpawner1()
	{
	}
}
[Token(Token = "0x20001BD")]
public class AudioSpectrum : MonoBehaviour
{
	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioSpectrum;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int herzDetail;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numChannels;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numTotalSamples;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sampleRate;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clipLength;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] multiChannelSamples;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpectralFluxAnalyzer preProcessedSpectralFluxAnalyzer;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool realTimeSamples;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool preProcessSamples;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string saveName;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string directoryName;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpectralFluxAnalyzer saveData;

	[Token(Token = "0x170000A2")]
	public static float spectrumValue
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x119EBA4", Offset = "0x119EBA4", VA = "0x119EBA4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x119EBEC", Offset = "0x119EBEC", VA = "0x119EBEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public static float HertzPerBin
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x119EC40", Offset = "0x119EC40", VA = "0x119EC40")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x119EC88", Offset = "0x119EC88", VA = "0x119EC88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x119ECDC", Offset = "0x119ECDC", VA = "0x119ECDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x119F448", Offset = "0x119F448", VA = "0x119F448")]
	private void Update()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x119F5C0", Offset = "0x119F5C0", VA = "0x119F5C0")]
	public void updatePlot(List<SpectralFluxInfo> pointInfo, int curIndex)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x119F540", Offset = "0x119F540", VA = "0x119F540")]
	public int getIndexFromTime(float curTime)
	{
		return default(int);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x119F66C", Offset = "0x119F66C", VA = "0x119F66C")]
	public float getTimeFromIndex(int index)
	{
		return default(float);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x119F688", Offset = "0x119F688", VA = "0x119F688")]
	public void getFullSpectrumThreaded()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x119FD18", Offset = "0x119FD18", VA = "0x119FD18")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x119F224", Offset = "0x119F224", VA = "0x119F224")]
	public void LoadData()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x119FF9C", Offset = "0x119FF9C", VA = "0x119FF9C")]
	public AudioSpectrum()
	{
	}
}
[Token(Token = "0x20001BF")]
[RequireComponent(typeof(Material))]
public class AudioSyncColor : AudioSyncer
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color[] beatColors;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color hitColor;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color fallBack;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool lerpTheColor;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float lerpTime;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color currentColor;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color targetColor;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string basecolor;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_randomIndx;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _mat;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Renderer _renderer;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x11A008C", Offset = "0x11A008C", VA = "0x11A008C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x11A00E0", Offset = "0x11A00E0", VA = "0x11A00E0")]
	private Color RandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x11A01BC", Offset = "0x11A01BC", VA = "0x11A01BC", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x11A0234", Offset = "0x11A0234", VA = "0x11A0234", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x11A02C0", Offset = "0x11A02C0", VA = "0x11A02C0", Slot = "6")]
	public override void OnHit()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x11A02E0", Offset = "0x11A02E0", VA = "0x11A02E0")]
	public AudioSyncColor()
	{
	}
}
[Token(Token = "0x20001C0")]
[RequireComponent(typeof(Material))]
public class AudioSyncColorIndividual : AudioSyncer
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] beatColors;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color hitColor;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color fallBack;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool lerpTheColor;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float lerpTime;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color currentColor;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color targetColor;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string basecolor;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_randomIndx;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _mat;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Renderer _renderer;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x11A03C8", Offset = "0x11A03C8", VA = "0x11A03C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x11A041C", Offset = "0x11A041C", VA = "0x11A041C")]
	private Color RandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x11A04A4", Offset = "0x11A04A4", VA = "0x11A04A4", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x11A051C", Offset = "0x11A051C", VA = "0x11A051C", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x11A05A8", Offset = "0x11A05A8", VA = "0x11A05A8", Slot = "6")]
	public override void OnHit()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x11A05B8", Offset = "0x11A05B8", VA = "0x11A05B8")]
	public AudioSyncColorIndividual()
	{
	}
}
[Token(Token = "0x20001C1")]
[RequireComponent(typeof(Material))]
public class AudioSyncColorLaser : AudioSyncer
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float smooth;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x11A061C", Offset = "0x11A061C", VA = "0x11A061C", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x11A0620", Offset = "0x11A0620", VA = "0x11A0620", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x11A06D8", Offset = "0x11A06D8", VA = "0x11A06D8")]
	public AudioSyncColorLaser()
	{
	}
}
[Token(Token = "0x20001C2")]
[RequireComponent(typeof(Material))]
public class AudioSyncColorSky : AudioSyncer
{
	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material sky;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int minInt;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int maxInt;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int steps;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material laserMat;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_randomIndx;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color fogColor;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color fogColorNew;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color hitColor;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material _mat;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int takt;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float H;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float S;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float V;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color newColor;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color baseColorR;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color baseColorL;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool lerpTheColor;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float t;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool useColorsPicked;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color[] colorsArray;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int _c;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int _cNext;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _cf;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _cfNext;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int count;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x11A06E8", Offset = "0x11A06E8", VA = "0x11A06E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x11A073C", Offset = "0x11A073C", VA = "0x11A073C")]
	private int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x11A076C", Offset = "0x11A076C", VA = "0x11A076C", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x11A089C", Offset = "0x11A089C", VA = "0x11A089C", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x11A0AE4", Offset = "0x11A0AE4", VA = "0x11A0AE4", Slot = "6")]
	public override void OnHit()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x11A0A5C", Offset = "0x11A0A5C", VA = "0x11A0A5C")]
	private Color FogColorlighter(int _c)
	{
		return default(Color);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x11A0C88", Offset = "0x11A0C88", VA = "0x11A0C88")]
	private Color ChildValue(Color[] myColor, int which)
	{
		return default(Color);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11A0D1C", Offset = "0x11A0D1C", VA = "0x11A0D1C")]
	public AudioSyncColorSky()
	{
	}
}
[Token(Token = "0x20001C3")]
public class AudioSyncColorSkyCubemap : AudioSyncer
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material sky;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minFloat;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxFloat;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float steps;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float count;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x11A0D2C", Offset = "0x11A0D2C", VA = "0x11A0D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x11A0D38", Offset = "0x11A0D38", VA = "0x11A0D38")]
	private float RandomInt()
	{
		return default(float);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x11A0D64", Offset = "0x11A0D64", VA = "0x11A0D64", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x11A0D68", Offset = "0x11A0D68", VA = "0x11A0D68", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x11A0E04", Offset = "0x11A0E04", VA = "0x11A0E04", Slot = "5")]
	public override void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x11A0EB0", Offset = "0x11A0EB0", VA = "0x11A0EB0")]
	public AudioSyncColorSkyCubemap()
	{
	}
}
[Token(Token = "0x20001C4")]
[RequireComponent(typeof(Material))]
public class AudioSyncColorSkyLight : AudioSyncer
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sun;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minFloat;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxFloat;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float steps;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_randomIndx;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _mat;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int takt;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float count;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x11A0EB8", Offset = "0x11A0EB8", VA = "0x11A0EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x11A0EC4", Offset = "0x11A0EC4", VA = "0x11A0EC4")]
	private float NextInt()
	{
		return default(float);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x11A0EF0", Offset = "0x11A0EF0", VA = "0x11A0EF0", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x11A0EF4", Offset = "0x11A0EF4", VA = "0x11A0EF4", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x11A0FBC", Offset = "0x11A0FBC", VA = "0x11A0FBC")]
	public AudioSyncColorSkyLight()
	{
	}
}
[Token(Token = "0x20001C5")]
[RequireComponent(typeof(Material))]
public class AudioSyncDisplacement : AudioSyncer
{
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int xTerTakt;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] beatFloats;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float restFlaot;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fallFloat;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_randomIndx;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _mat;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x11A0FC4", Offset = "0x11A0FC4", VA = "0x11A0FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x11A1024", Offset = "0x11A1024", VA = "0x11A1024")]
	private float Randomfloat()
	{
		return default(float);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x11A1084", Offset = "0x11A1084", VA = "0x11A1084", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x11A1088", Offset = "0x11A1088", VA = "0x11A1088", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x11A10F0", Offset = "0x11A10F0", VA = "0x11A10F0")]
	public AudioSyncDisplacement()
	{
	}
}
[Token(Token = "0x20001C6")]
public class AudioSyncer : MonoBehaviour
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("spectrum above or below bias -> beat gets triggered ->frequenz? 10 für bass - 50 höhen")]
	public float targetHZ;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bias;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeStep;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToBeat;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float restSmoothTime;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float previousAudioValue;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float CurrentaudioValue;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float beatSet;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float bpmTimer;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeForStep;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_isBeat;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool m_isRest;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool m_isSL;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	protected bool m_isSR;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool m_isSM;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	protected bool m_isUL;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	protected bool m_isUR;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	protected bool m_isDL;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_isDR;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool m_isHit;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool biasTrigger;

	[Token(Token = "0x170000A4")]
	public static bool OnNoteFalse
	{
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x11A10F8", Offset = "0x11A10F8", VA = "0x11A10F8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x11A1140", Offset = "0x11A1140", VA = "0x11A1140")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public static bool OnRestFalse
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x11A118C", Offset = "0x11A118C", VA = "0x11A118C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x11A11D4", Offset = "0x11A11D4", VA = "0x11A11D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public static bool OnSLFalse
	{
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x11A1220", Offset = "0x11A1220", VA = "0x11A1220")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x11A1268", Offset = "0x11A1268", VA = "0x11A1268")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public static bool OnSRFalse
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x11A12B4", Offset = "0x11A12B4", VA = "0x11A12B4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x11A12FC", Offset = "0x11A12FC", VA = "0x11A12FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public static bool OnSMFalse
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x11A1348", Offset = "0x11A1348", VA = "0x11A1348")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x11A1390", Offset = "0x11A1390", VA = "0x11A1390")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public static bool OnULFalse
	{
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x11A13DC", Offset = "0x11A13DC", VA = "0x11A13DC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x11A1424", Offset = "0x11A1424", VA = "0x11A1424")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public static bool OnURFalse
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x11A1470", Offset = "0x11A1470", VA = "0x11A1470")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x11A14B8", Offset = "0x11A14B8", VA = "0x11A14B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public static bool OnH1LFalse
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x11A1504", Offset = "0x11A1504", VA = "0x11A1504")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x11A154C", Offset = "0x11A154C", VA = "0x11A154C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public static bool OnH1RFalse
	{
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x11A1598", Offset = "0x11A1598", VA = "0x11A1598")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x11A15E0", Offset = "0x11A15E0", VA = "0x11A15E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public static bool OnH2False
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x11A162C", Offset = "0x11A162C", VA = "0x11A162C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000790")]
		[Address(RVA = "0x11A1674", Offset = "0x11A1674", VA = "0x11A1674")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public static bool OnH3False
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x11A16C0", Offset = "0x11A16C0", VA = "0x11A16C0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x11A1708", Offset = "0x11A1708", VA = "0x11A1708")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public static bool OnHitFalse
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x11A1754", Offset = "0x11A1754", VA = "0x11A1754")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x11A179C", Offset = "0x11A179C", VA = "0x11A179C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x119D8EC", Offset = "0x119D8EC", VA = "0x119D8EC", Slot = "4")]
	public virtual void OnBeat()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x11A0EA0", Offset = "0x11A0EA0", VA = "0x11A0EA0", Slot = "5")]
	public virtual void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x11A02D0", Offset = "0x11A02D0", VA = "0x11A02D0", Slot = "6")]
	public virtual void OnHit()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x11A17E8", Offset = "0x11A17E8", VA = "0x11A17E8", Slot = "7")]
	public virtual void OnRest()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x11A17F8", Offset = "0x11A17F8", VA = "0x11A17F8", Slot = "8")]
	public virtual void OnSL()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x11A1808", Offset = "0x11A1808", VA = "0x11A1808", Slot = "9")]
	public virtual void OnSR()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x11A1818", Offset = "0x11A1818", VA = "0x11A1818", Slot = "10")]
	public virtual void OnSM()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x11A1828", Offset = "0x11A1828", VA = "0x11A1828", Slot = "11")]
	public virtual void OnUL()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x11A1838", Offset = "0x11A1838", VA = "0x11A1838", Slot = "12")]
	public virtual void OnUR()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x11A1848", Offset = "0x11A1848", VA = "0x11A1848", Slot = "13")]
	public virtual void OnH1L()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x11A1858", Offset = "0x11A1858", VA = "0x11A1858", Slot = "14")]
	public virtual void OnH1R()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x11A1868", Offset = "0x11A1868", VA = "0x11A1868", Slot = "15")]
	public virtual void OnH2()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x11A1878", Offset = "0x11A1878", VA = "0x11A1878", Slot = "16")]
	public virtual void OnH3()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x119CCE0", Offset = "0x119CCE0", VA = "0x119CCE0", Slot = "17")]
	public virtual void OnUpdate()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x11A1888", Offset = "0x11A1888", VA = "0x11A1888")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x119D904", Offset = "0x119D904", VA = "0x119D904")]
	public AudioSyncer()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AudioSyncerOld : MonoBehaviour
{
	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("spectrum above or below bias -> beat gets triggered ->frequenz? 10 für bass - 50 höhen")]
	public float bias;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeStep;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToBeat;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float restSmoothTime;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_previousAudioValue;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_audioValue;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_timer;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool m_isBeat;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x11A1898", Offset = "0x11A1898", VA = "0x11A1898", Slot = "4")]
	public virtual void OnBeat()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x11A18A8", Offset = "0x11A18A8", VA = "0x11A18A8", Slot = "5")]
	public virtual void OnUpdate()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x11A1998", Offset = "0x11A1998", VA = "0x11A1998")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x11A19A4", Offset = "0x11A19A4", VA = "0x11A19A4")]
	public AudioSyncerOld()
	{
	}
}
[Token(Token = "0x20001C8")]
public class AudioSyncerOld1 : MonoBehaviour
{
	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("spectrum above or below bias -> beat gets triggered ->frequenz? 10 für bass - 50 höhen")]
	public float targetHZ;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bias;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeStep;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToBeat;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float restSmoothTime;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float previousAudioValue;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float CurrentaudioValue;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float beatSet;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float bpmTimer;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeForStep;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_isBeat;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool m_isRest;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	protected bool m_isSL;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	protected bool m_isSR;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool m_isSM;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	protected bool m_isUL;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	protected bool m_isUR;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	protected bool m_isDL;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_isDR;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool m_isHit;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool biasTrigger;

	[Token(Token = "0x170000B0")]
	public static bool OnNoteFalse
	{
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x11A19AC", Offset = "0x11A19AC", VA = "0x11A19AC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x11A19F4", Offset = "0x11A19F4", VA = "0x11A19F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public static bool OnRestFalse
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x11A1A40", Offset = "0x11A1A40", VA = "0x11A1A40")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x11A1A88", Offset = "0x11A1A88", VA = "0x11A1A88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public static bool OnSLFalse
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x11A1AD4", Offset = "0x11A1AD4", VA = "0x11A1AD4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x11A1B1C", Offset = "0x11A1B1C", VA = "0x11A1B1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public static bool OnSRFalse
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x11A1B68", Offset = "0x11A1B68", VA = "0x11A1B68")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x11A1BB0", Offset = "0x11A1BB0", VA = "0x11A1BB0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public static bool OnSMFalse
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x11A1BFC", Offset = "0x11A1BFC", VA = "0x11A1BFC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x11A1C44", Offset = "0x11A1C44", VA = "0x11A1C44")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public static bool OnULFalse
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x11A1C90", Offset = "0x11A1C90", VA = "0x11A1C90")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x11A1CD8", Offset = "0x11A1CD8", VA = "0x11A1CD8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public static bool OnURFalse
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x11A1D24", Offset = "0x11A1D24", VA = "0x11A1D24")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x11A1D6C", Offset = "0x11A1D6C", VA = "0x11A1D6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public static bool OnH1False
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x11A1DB8", Offset = "0x11A1DB8", VA = "0x11A1DB8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x11A1E00", Offset = "0x11A1E00", VA = "0x11A1E00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public static bool OnH2False
	{
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x11A1E4C", Offset = "0x11A1E4C", VA = "0x11A1E4C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x11A1E94", Offset = "0x11A1E94", VA = "0x11A1E94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public static bool OnH3False
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x11A1EE0", Offset = "0x11A1EE0", VA = "0x11A1EE0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x11A1F28", Offset = "0x11A1F28", VA = "0x11A1F28")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public static bool OnH4False
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x11A1F74", Offset = "0x11A1F74", VA = "0x11A1F74")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x11A1FBC", Offset = "0x11A1FBC", VA = "0x11A1FBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public static bool OnHitFalse
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x11A2008", Offset = "0x11A2008", VA = "0x11A2008")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x11A2050", Offset = "0x11A2050", VA = "0x11A2050")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x11A209C", Offset = "0x11A209C", VA = "0x11A209C", Slot = "4")]
	public virtual void OnBeat()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x11A20AC", Offset = "0x11A20AC", VA = "0x11A20AC", Slot = "5")]
	public virtual void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x11A20BC", Offset = "0x11A20BC", VA = "0x11A20BC", Slot = "6")]
	public virtual void OnHit()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x11A20CC", Offset = "0x11A20CC", VA = "0x11A20CC", Slot = "7")]
	public virtual void OnRest()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x11A20DC", Offset = "0x11A20DC", VA = "0x11A20DC", Slot = "8")]
	public virtual void OnSL()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x11A20EC", Offset = "0x11A20EC", VA = "0x11A20EC", Slot = "9")]
	public virtual void OnSR()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x11A20FC", Offset = "0x11A20FC", VA = "0x11A20FC", Slot = "10")]
	public virtual void OnSM()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x11A210C", Offset = "0x11A210C", VA = "0x11A210C", Slot = "11")]
	public virtual void OnUL()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x11A211C", Offset = "0x11A211C", VA = "0x11A211C", Slot = "12")]
	public virtual void OnUR()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x11A212C", Offset = "0x11A212C", VA = "0x11A212C", Slot = "13")]
	public virtual void OnH1()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x11A213C", Offset = "0x11A213C", VA = "0x11A213C", Slot = "14")]
	public virtual void OnH2()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x11A214C", Offset = "0x11A214C", VA = "0x11A214C", Slot = "15")]
	public virtual void OnUpdate()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x11A2B34", Offset = "0x11A2B34", VA = "0x11A2B34")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x11A2B44", Offset = "0x11A2B44", VA = "0x11A2B44")]
	public AudioSyncerOld1()
	{
	}
}
[Token(Token = "0x20001C9")]
public class AudioSyncGlow : AudioSyncer
{
	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material Glow;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float calcRestTime;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minFloat;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxFloat;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float steps;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float count;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x11A2B4C", Offset = "0x11A2B4C", VA = "0x11A2B4C")]
	private float RandomInt()
	{
		return default(float);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x11A2B78", Offset = "0x11A2B78", VA = "0x11A2B78", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x11A2B7C", Offset = "0x11A2B7C", VA = "0x11A2B7C", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x11A2C18", Offset = "0x11A2C18", VA = "0x11A2C18", Slot = "5")]
	public override void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x11A2CB4", Offset = "0x11A2CB4", VA = "0x11A2CB4")]
	public AudioSyncGlow()
	{
	}
}
[Token(Token = "0x20001CA")]
[RequireComponent(typeof(Light))]
public class AudioSyncLight : AudioSyncer
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light thisLight;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int minInetensityInt;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int maxIntensityInt;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int steps;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_randomIndx;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color fogColor;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material _mat;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int takt;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float H;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float S;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float V;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color newColor;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color baseColorR;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color baseColorL;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int count;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x11A2CBC", Offset = "0x11A2CBC", VA = "0x11A2CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x11A2D34", Offset = "0x11A2D34", VA = "0x11A2D34")]
	private int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x11A2D64", Offset = "0x11A2D64", VA = "0x11A2D64", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x11A2D68", Offset = "0x11A2D68", VA = "0x11A2D68", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x11A2DC0", Offset = "0x11A2DC0", VA = "0x11A2DC0")]
	private Color FogColorlighter(int _c)
	{
		return default(Color);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x11A2E30", Offset = "0x11A2E30", VA = "0x11A2E30")]
	public AudioSyncLight()
	{
	}
}
[Token(Token = "0x20001CB")]
[RequireComponent(typeof(Material))]
public class AudioSyncLightBeam : AudioSyncer
{
	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int minInt;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxInt;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int steps;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_randomIndx;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int count;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x11A2E38", Offset = "0x11A2E38", VA = "0x11A2E38")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x11A2E44", Offset = "0x11A2E44", VA = "0x11A2E44")]
	private int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x11A2E68", Offset = "0x11A2E68", VA = "0x11A2E68", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x11A2E6C", Offset = "0x11A2E6C", VA = "0x11A2E6C", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x11A2EFC", Offset = "0x11A2EFC", VA = "0x11A2EFC")]
	public AudioSyncLightBeam()
	{
	}
}
[Token(Token = "0x20001CC")]
public class AudioSyncScale : AudioSyncer
{
	[Token(Token = "0x20001CD")]
	[CompilerGenerated]
	private sealed class <_MoveToScale>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSyncScale <>4__this;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 _target;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UnityEngine.Vector3 <_curr>5__2;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3 <_initial>5__3;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <_timer>5__4;

		[Token(Token = "0x170000BC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x11A349C", Offset = "0x11A349C", VA = "0x11A349C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x11A34E4", Offset = "0x11A34E4", VA = "0x11A34E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x11A2F90", Offset = "0x11A2F90", VA = "0x11A2F90")]
		[DebuggerHidden]
		public <_MoveToScale>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x11A32DC", Offset = "0x11A32DC", VA = "0x11A32DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x11A32E0", Offset = "0x11A32E0", VA = "0x11A32E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x11A34A4", Offset = "0x11A34A4", VA = "0x11A34A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEngine.Vector3 beatScale;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Vector3 restScale;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEngine.Vector3 midScale;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float calcRestTime;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x11A2F04", Offset = "0x11A2F04", VA = "0x11A2F04")]
	[IteratorStateMachine(typeof(<_MoveToScale>d__5))]
	private IEnumerator<float> _MoveToScale(UnityEngine.Vector3 _target)
	{
		return null;
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x11A2FB8", Offset = "0x11A2FB8", VA = "0x11A2FB8", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x11A30D8", Offset = "0x11A30D8", VA = "0x11A30D8", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x11A3188", Offset = "0x11A3188", VA = "0x11A3188", Slot = "5")]
	public override void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x11A3238", Offset = "0x11A3238", VA = "0x11A3238", Slot = "7")]
	public override void OnRest()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x11A32D4", Offset = "0x11A32D4", VA = "0x11A32D4")]
	public AudioSyncScale()
	{
	}
}
[Token(Token = "0x20001CE")]
[RequireComponent(typeof(VolumetricLineBehavior))]
public class AudioSyncScaleLaser : AudioSyncer
{
	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <_MoveToScale>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSyncScaleLaser <>4__this;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _target;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <_curr>5__2;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_initial>5__3;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <_timer>5__4;

		[Token(Token = "0x170000BE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x11A3AB4", Offset = "0x11A3AB4", VA = "0x11A3AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x11A3AFC", Offset = "0x11A3AFC", VA = "0x11A3AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x11A3608", Offset = "0x11A3608", VA = "0x11A3608")]
		[DebuggerHidden]
		public <_MoveToScale>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x11A38FC", Offset = "0x11A38FC", VA = "0x11A38FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x11A3900", Offset = "0x11A3900", VA = "0x11A3900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x11A3ABC", Offset = "0x11A3ABC", VA = "0x11A3ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float beatWidth;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float restWidth;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VolumetricLineBehavior volLine;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x11A3540", Offset = "0x11A3540", VA = "0x11A3540")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x11A3590", Offset = "0x11A3590", VA = "0x11A3590")]
	[IteratorStateMachine(typeof(<_MoveToScale>d__5))]
	private IEnumerator<float> _MoveToScale(float _target)
	{
		return null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x11A3630", Offset = "0x11A3630", VA = "0x11A3630", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x11A36C4", Offset = "0x11A36C4", VA = "0x11A36C4", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x11A37DC", Offset = "0x11A37DC", VA = "0x11A37DC", Slot = "5")]
	public override void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x11A38F4", Offset = "0x11A38F4", VA = "0x11A38F4")]
	public AudioSyncScaleLaser()
	{
	}
}
[Token(Token = "0x20001D0")]
public class AudioSyncScaleUnscaledDelta : AudioSyncer
{
	[Token(Token = "0x20001D1")]
	[CompilerGenerated]
	private sealed class <_MoveToScale>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSyncScaleUnscaledDelta <>4__this;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 _target;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UnityEngine.Vector3 <_curr>5__2;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3 <_initial>5__3;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <_timer>5__4;

		[Token(Token = "0x170000C0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x11A41FC", Offset = "0x11A41FC", VA = "0x11A41FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x11A4244", Offset = "0x11A4244", VA = "0x11A4244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x11A3BE4", Offset = "0x11A3BE4", VA = "0x11A3BE4")]
		[DebuggerHidden]
		public <_MoveToScale>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x11A4034", Offset = "0x11A4034", VA = "0x11A4034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x11A4038", Offset = "0x11A4038", VA = "0x11A4038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x11A4204", Offset = "0x11A4204", VA = "0x11A4204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEngine.Vector3 beatScale;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Vector3 restScale;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEngine.Vector3 midScale;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool AnalyseAndNotMidi;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float calcRestTime;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x11A3B58", Offset = "0x11A3B58", VA = "0x11A3B58")]
	[IteratorStateMachine(typeof(<_MoveToScale>d__5))]
	private IEnumerator<float> _MoveToScale(UnityEngine.Vector3 _target)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x11A3C0C", Offset = "0x11A3C0C", VA = "0x11A3C0C", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x11A3CE0", Offset = "0x11A3CE0", VA = "0x11A3CE0", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x11A3DFC", Offset = "0x11A3DFC", VA = "0x11A3DFC", Slot = "5")]
	public override void OnBeatAnalyse()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x11A3F18", Offset = "0x11A3F18", VA = "0x11A3F18", Slot = "7")]
	public override void OnRest()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x11A402C", Offset = "0x11A402C", VA = "0x11A402C")]
	public AudioSyncScaleUnscaledDelta()
	{
	}
}
[Token(Token = "0x20001D2")]
public class AudioSyncSphereAnimation : AudioSyncer
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool AnimationPause;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int xTerTakt;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int takt;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator animator;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float animationSpeed;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float setAnimationX;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float setAnimationMediatorX;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float setNewAnimationX;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float setAnimationY;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float setAnimationMediatorY;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float setNewAnimationY;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeToReact;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float starTime;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x11A42A0", Offset = "0x11A42A0", VA = "0x11A42A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x11A430C", Offset = "0x11A430C", VA = "0x11A430C", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x11A4378", Offset = "0x11A4378", VA = "0x11A4378", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x11A45A0", Offset = "0x11A45A0", VA = "0x11A45A0")]
	public AudioSyncSphereAnimation()
	{
	}
}
[Token(Token = "0x20001D3")]
public class AudioSyncVibrations : AudioSyncer
{
	[Token(Token = "0x6000807")]
	[Address(RVA = "0x11A45C4", Offset = "0x11A45C4", VA = "0x11A45C4", Slot = "17")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x11A45C8", Offset = "0x11A45C8", VA = "0x11A45C8", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x11A46C4", Offset = "0x11A46C4", VA = "0x11A46C4")]
	public AudioSyncVibrations()
	{
	}
}
[Token(Token = "0x20001D4")]
public class PreprocessedAudioAnalysis : MonoBehaviour
{
	[Token(Token = "0x600080A")]
	[Address(RVA = "0x11A46CC", Offset = "0x11A46CC", VA = "0x11A46CC")]
	public PreprocessedAudioAnalysis()
	{
	}
}
[Token(Token = "0x20001D5")]
public class SpectralFluxInfo
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float spectralFlux;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x11A46D4", Offset = "0x11A46D4", VA = "0x11A46D4")]
	public SpectralFluxInfo()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SpectralFluxAnalyzer
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int numSamples;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float thresholdMultiplier;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int thresholdWindowSize;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpectralFluxInfo> spectralFluxSamples;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] curSpectrum;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] prevSpectrum;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int indexToProcess;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x119F36C", Offset = "0x119F36C", VA = "0x119F36C")]
	public SpectralFluxAnalyzer()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x11A46DC", Offset = "0x11A46DC", VA = "0x11A46DC")]
	public void setCurSpectrum(float[] spectrum)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x119FC0C", Offset = "0x119FC0C", VA = "0x119FC0C")]
	public void analyzeSpectrum(float[] spectrum, float time)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x11A4728", Offset = "0x11A4728", VA = "0x11A4728")]
	private float calculateRectifiedSpectralFlux()
	{
		return default(float);
	}
}
[Token(Token = "0x20001D7")]
public static class AudioFadeOut
{
	[Token(Token = "0x20001D8")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FadeTime;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x11A498C", Offset = "0x11A498C", VA = "0x11A498C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0x11A49D4", Offset = "0x11A49D4", VA = "0x11A49D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x11A4824", Offset = "0x11A4824", VA = "0x11A4824")]
		[DebuggerHidden]
		public <FadeOut>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x11A484C", Offset = "0x11A484C", VA = "0x11A484C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x11A4850", Offset = "0x11A4850", VA = "0x11A4850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x11A4994", Offset = "0x11A4994", VA = "0x11A4994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x11A47AC", Offset = "0x11A47AC", VA = "0x11A47AC")]
	[IteratorStateMachine(typeof(<FadeOut>d__0))]
	public static IEnumerator FadeOut(AudioSource audioSource, float FadeTime)
	{
		return null;
	}
}
[Token(Token = "0x20001D9")]
public class Audioselector : MonoBehaviour
{
	[Token(Token = "0x20001DA")]
	[CompilerGenerated]
	private sealed class <LoadAudioFile>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Audioselector <>4__this;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <AudioFiles>5__3;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x11A4FF8", Offset = "0x11A4FF8", VA = "0x11A4FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x11A5040", Offset = "0x11A5040", VA = "0x11A5040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x11A4CE4", Offset = "0x11A4CE4", VA = "0x11A4CE4")]
		[DebuggerHidden]
		public <LoadAudioFile>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x11A4D14", Offset = "0x11A4D14", VA = "0x11A4D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x11A4D18", Offset = "0x11A4D18", VA = "0x11A4D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x11A5000", Offset = "0x11A5000", VA = "0x11A5000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> audiofiles;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audiosource;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int switcher;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string path;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioClip[] clips;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> audioname;

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x11A49DC", Offset = "0x11A49DC", VA = "0x11A49DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x11A4C38", Offset = "0x11A4C38", VA = "0x11A4C38")]
	public void AudioSwitch()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x11A4BD0", Offset = "0x11A4BD0", VA = "0x11A4BD0")]
	[IteratorStateMachine(typeof(<LoadAudioFile>d__8))]
	private IEnumerator LoadAudioFile()
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x11A4D0C", Offset = "0x11A4D0C", VA = "0x11A4D0C")]
	public Audioselector()
	{
	}
}
[Token(Token = "0x20001DB")]
public class audiospeed : MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x11A5048", Offset = "0x11A5048", VA = "0x11A5048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x11A5098", Offset = "0x11A5098", VA = "0x11A5098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x11A509C", Offset = "0x11A509C", VA = "0x11A509C")]
	public audiospeed()
	{
	}
}
[Token(Token = "0x20001DC")]
[ExecuteInEditMode]
public class BezierCurve3PointRenderer : MonoBehaviour
{
	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.Vector3 EndPoint;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 MiddlePoint;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EndPointObject;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform point1;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform point2;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform point3;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int vertexCount;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int pointCounter;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float seconds;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float hapticsduration;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly List<Vector2> colliderPoints2;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x11A50A4", Offset = "0x11A50A4", VA = "0x11A50A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x11A53AC", Offset = "0x11A53AC", VA = "0x11A53AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x11A50A8", Offset = "0x11A50A8", VA = "0x11A50A8")]
	private void CalculateSpline()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x11A53B0", Offset = "0x11A53B0", VA = "0x11A53B0")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x11A54FC", Offset = "0x11A54FC", VA = "0x11A54FC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x11A5724", Offset = "0x11A5724", VA = "0x11A5724")]
	public BezierCurve3PointRenderer()
	{
	}
}
[Token(Token = "0x20001DD")]
public class BlueVibration : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <OnTriggerStay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider other;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlueVibration <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x11A65FC", Offset = "0x11A65FC", VA = "0x11A65FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x11A6644", Offset = "0x11A6644", VA = "0x11A6644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x11A5F58", Offset = "0x11A5F58", VA = "0x11A5F58")]
		[DebuggerHidden]
		public <OnTriggerStay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x11A5FA0", Offset = "0x11A5FA0", VA = "0x11A5FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x11A5FA4", Offset = "0x11A5FA4", VA = "0x11A5FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x11A6604", Offset = "0x11A6604", VA = "0x11A6604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClash;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask GunMaskLayer;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float SaberLength;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 hitpoint;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject MeltedDecal;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.Vector3 hitpointCorrection;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timerObstacle;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timerSaber;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float vibrationstrength;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x11A57B0", Offset = "0x11A57B0", VA = "0x11A57B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x11A5800", Offset = "0x11A5800", VA = "0x11A5800")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x11A5EE4", Offset = "0x11A5EE4", VA = "0x11A5EE4")]
	[IteratorStateMachine(typeof(<OnTriggerStay>d__12))]
	private IEnumerator OnTriggerStay(Collider other)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x11A5F80", Offset = "0x11A5F80", VA = "0x11A5F80")]
	public BlueVibration()
	{
	}
}
[Token(Token = "0x20001DF")]
public class BodyPartScript : MonoBehaviour
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyScript enemy;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer bodyPartRenderer;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bodyPartPrefab;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool replaced;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x11A664C", Offset = "0x11A664C", VA = "0x11A664C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x11A669C", Offset = "0x11A669C", VA = "0x11A669C")]
	public void HidePartAndReplace()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x11A6964", Offset = "0x11A6964", VA = "0x11A6964")]
	public BodyPartScript()
	{
	}
}
[Token(Token = "0x20001E0")]
public class bulletHit : MonoBehaviour
{
	[Token(Token = "0x6000837")]
	[Address(RVA = "0x11A696C", Offset = "0x11A696C", VA = "0x11A696C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x11A69D4", Offset = "0x11A69D4", VA = "0x11A69D4")]
	public bulletHit()
	{
	}
}
[Token(Token = "0x20001E1")]
public class BulletMovement : MonoBehaviour
{
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float counter;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool deflected;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x11A69DC", Offset = "0x11A69DC", VA = "0x11A69DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x11A6A5C", Offset = "0x11A6A5C", VA = "0x11A6A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x11A6C2C", Offset = "0x11A6C2C", VA = "0x11A6C2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x11A6C84", Offset = "0x11A6C84", VA = "0x11A6C84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x11A6CE4", Offset = "0x11A6CE4", VA = "0x11A6CE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x11A6F88", Offset = "0x11A6F88", VA = "0x11A6F88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x11A709C", Offset = "0x11A709C", VA = "0x11A709C")]
	public BulletMovement()
	{
	}
}
[Token(Token = "0x20001E2")]
[RequireComponent(typeof(Button))]
public class ClickSound : MonoBehaviour
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip sound;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource soundPlay;

	[Token(Token = "0x170000C8")]
	private Button Button
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x11A70A4", Offset = "0x11A70A4", VA = "0x11A70A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x11A70EC", Offset = "0x11A70EC", VA = "0x11A70EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x11A7184", Offset = "0x11A7184", VA = "0x11A7184")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x11A72D8", Offset = "0x11A72D8", VA = "0x11A72D8")]
	public ClickSound()
	{
	}
}
[Token(Token = "0x20001E3")]
[RequireComponent(typeof(Toggle))]
public class ClickSoundToggle : MonoBehaviour
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip sound;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource soundPlay;

	[Token(Token = "0x170000C9")]
	private Toggle toggle
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x11A72E4", Offset = "0x11A72E4", VA = "0x11A72E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x11A732C", Offset = "0x11A732C", VA = "0x11A732C")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x11A7480", Offset = "0x11A7480", VA = "0x11A7480")]
	public ClickSoundToggle()
	{
	}
}
[Token(Token = "0x20001E4")]
public class colortest : MonoBehaviour
{
	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _mat;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x11A7488", Offset = "0x11A7488", VA = "0x11A7488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x11A74E8", Offset = "0x11A74E8", VA = "0x11A74E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x11A754C", Offset = "0x11A754C", VA = "0x11A754C")]
	public colortest()
	{
	}
}
[Token(Token = "0x20001E5")]
public class combine : MonoBehaviour
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh Mesh1;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh Mesh2;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x11A7554", Offset = "0x11A7554", VA = "0x11A7554")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x11A76C0", Offset = "0x11A76C0", VA = "0x11A76C0")]
	private Mesh CombineMeshes(List<Mesh> meshes)
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x11A7858", Offset = "0x11A7858", VA = "0x11A7858")]
	public combine()
	{
	}
}
[Token(Token = "0x20001E6")]
public class CompanyLogo : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompanyLogo <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x11A7C24", Offset = "0x11A7C24", VA = "0x11A7C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x11A7C6C", Offset = "0x11A7C6C", VA = "0x11A7C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x11A78C8", Offset = "0x11A78C8", VA = "0x11A78C8")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x11A7ABC", Offset = "0x11A7ABC", VA = "0x11A7ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x11A7AC0", Offset = "0x11A7AC0", VA = "0x11A7AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x11A7C2C", Offset = "0x11A7C2C", VA = "0x11A7C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <LoadNewScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompanyLogo <>4__this;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x11A7DC0", Offset = "0x11A7DC0", VA = "0x11A7DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x11A7E08", Offset = "0x11A7E08", VA = "0x11A7E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x11A7964", Offset = "0x11A7964", VA = "0x11A7964")]
		[DebuggerHidden]
		public <LoadNewScene>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x11A7C74", Offset = "0x11A7C74", VA = "0x11A7C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x11A7C78", Offset = "0x11A7C78", VA = "0x11A7C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x11A7DC8", Offset = "0x11A7DC8", VA = "0x11A7DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRScreenFade1 ovrFade;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Sound1;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int waitTime;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject triangle;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject triangleReflection;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject text;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject textReflection;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float blend;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool credit;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool skipped;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool loading;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip AndromedaAudio;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string LoadLevelString;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x11A7860", Offset = "0x11A7860", VA = "0x11A7860")]
	[IteratorStateMachine(typeof(<Start>d__13))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x11A78F0", Offset = "0x11A78F0", VA = "0x11A78F0")]
	[IteratorStateMachine(typeof(<LoadNewScene>d__14))]
	private IEnumerator LoadNewScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x11A798C", Offset = "0x11A798C", VA = "0x11A798C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x11A7AAC", Offset = "0x11A7AAC", VA = "0x11A7AAC")]
	public CompanyLogo()
	{
	}
}
[Token(Token = "0x20001E9")]
public class Cube : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <SpeedUp>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cube <>4__this;

		[Token(Token = "0x170000CE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x11A8D0C", Offset = "0x11A8D0C", VA = "0x11A8D0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0x11A8D54", Offset = "0x11A8D54", VA = "0x11A8D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x11A8B74", Offset = "0x11A8B74", VA = "0x11A8B74")]
		[DebuggerHidden]
		public <SpeedUp>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x11A8C10", Offset = "0x11A8C10", VA = "0x11A8C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x11A8C14", Offset = "0x11A8C14", VA = "0x11A8C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x11A8D14", Offset = "0x11A8D14", VA = "0x11A8D14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool move;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioplayer;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float beatsPerSecond;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float secondsPerBeat;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float BpmSpeed;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float BpmSpeedShoot;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float SpeedFlyingObstacle;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float BpmSpeedShootFixed;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float HitSphereDistance;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float shootsphereDistance;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distancehitAdjustment;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float distanceFromCenterHorizontal;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float distanceFromCenterVertical;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float hitSphereTimeToTarget;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Vector3 targetVer;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3[] targetSpline;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float speed;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int current;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Vector3 myosition;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x11A7E10", Offset = "0x11A7E10", VA = "0x11A7E10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x11A8320", Offset = "0x11A8320", VA = "0x11A8320")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x11A83E4", Offset = "0x11A83E4", VA = "0x11A83E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x11A8AC0", Offset = "0x11A8AC0", VA = "0x11A8AC0")]
	public void StopCubeMove()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x11A8B18", Offset = "0x11A8B18", VA = "0x11A8B18")]
	public void StartCubeMove()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x11A82B8", Offset = "0x11A82B8", VA = "0x11A82B8")]
	[IteratorStateMachine(typeof(<SpeedUp>d__24))]
	private IEnumerator<float> SpeedUp()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x11A8B9C", Offset = "0x11A8B9C", VA = "0x11A8B9C")]
	public Cube()
	{
	}
}
[Token(Token = "0x20001EB")]
public class CubeRotate : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool move;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x11A8DB0", Offset = "0x11A8DB0", VA = "0x11A8DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x11A8DFC", Offset = "0x11A8DFC", VA = "0x11A8DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x11A8E9C", Offset = "0x11A8E9C", VA = "0x11A8E9C")]
	public void StopCubeMove()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x11A8EE4", Offset = "0x11A8EE4", VA = "0x11A8EE4")]
	public void StartCubeMove()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x11A8F30", Offset = "0x11A8F30", VA = "0x11A8F30")]
	public CubeRotate()
	{
	}
}
[Token(Token = "0x20001EC")]
public class DestroyInSeconds : MonoBehaviour
{
	[Token(Token = "0x6000871")]
	[Address(RVA = "0x11A8F38", Offset = "0x11A8F38", VA = "0x11A8F38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x11A8F94", Offset = "0x11A8F94", VA = "0x11A8F94")]
	public DestroyInSeconds()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Difficulty : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Difficulty instance;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int difficulty;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string difficultyName;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text easytext;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField tmp_inputfield;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string playerName;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI artistText;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI bpmText;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string easy;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string normal;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string hard;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string extrem;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string kultra;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool practice;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle practiceTog;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle easyTog;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle normalTog;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle hardTog;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle extremeTog;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Toggle kultraTog;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int PlayTimeSelected;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Toggle Regular;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI RegularTimeText;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Toggle Extended;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI ExtendedTimeText;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool ToggleLevelingActive;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Button PlayButton;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int LevelSelected;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool loadingStarted;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ToggleGroup levelToggelGroup;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Toggle Tutorial;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Toggle Cave;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Toggle Violet;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Toggle Orange;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Toggle White;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Toggle Yellow;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Toggle Stars;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Toggle Black;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Toggle Dark;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Toggle Ice;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Toggle Ocean;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Toggle Avatar;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Toggle Tent;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Toggle Letho;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Toggle Iceland;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HighScoreTableOrg highscoreTable;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioSource audioplayer;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioSource audioplayerLeveling;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float audioLevel;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip TutorialAudio;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip CaveAudio;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioClip VioletAudio;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip OrangeAudio;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip WhiteAudio;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioClip YellowAudio;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioClip StarsAudio;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioClip BlackholeAudio;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip DarkAudio;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioClip OthersideAudio;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AudioClip OceanAudio;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioClip AvatarAudio;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioClip TentAudio;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip LethoAudio;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioClip IcelandAudio;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Toggle[] selectLevelToggle;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Sprite[] infinityImages;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Sprite[] discoveryImages;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AudioClip MenuAudio;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Toggle LevelingToggle;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Toggle TogglePinkToBlue;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool TutorialPlayed;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int difficultyLevel4;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int difficutlyLevel5;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int superhuman;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int theOne;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public MidiPlayer midiplayer;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int unlockedLevelDifficulty;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int unlockedLevel;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int unlockedDifficulty;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x11A8F9C", Offset = "0x11A8F9C", VA = "0x11A8F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x11AA040", Offset = "0x11AA040", VA = "0x11AA040")]
	public void PlayTimeSelector()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x11AA1EC", Offset = "0x11AA1EC", VA = "0x11AA1EC")]
	public void ActiveToggle()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x11AA5E0", Offset = "0x11AA5E0", VA = "0x11AA5E0")]
	public void CalculateNiceTime()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x11AAA28", Offset = "0x11AAA28", VA = "0x11AAA28")]
	public void ActiveLevel()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x11AB0C0", Offset = "0x11AB0C0", VA = "0x11AB0C0")]
	public void CheckToggleOn()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x11AB0C4", Offset = "0x11AB0C4", VA = "0x11AB0C4")]
	public void changeLevelingToggleState()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x11A95C8", Offset = "0x11A95C8", VA = "0x11A95C8")]
	public void changeLevelingToggleDisplay()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x11A96E8", Offset = "0x11A96E8", VA = "0x11A96E8")]
	public void CheckActiveToggles()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x11AB13C", Offset = "0x11AB13C", VA = "0x11AB13C")]
	public void SelectionUnlockChecker()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x11A9DBC", Offset = "0x11A9DBC", VA = "0x11A9DBC")]
	public void SelectLevelText(Toggle togglename, int levelNumber)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x11AB654", Offset = "0x11AB654", VA = "0x11AB654")]
	public void SetRandomPlay()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x11AB6A0", Offset = "0x11AB6A0", VA = "0x11AB6A0")]
	public void SetNormalPlay()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x11AB6E8", Offset = "0x11AB6E8", VA = "0x11AB6E8")]
	public void SetPassthrough()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x11AB734", Offset = "0x11AB734", VA = "0x11AB734")]
	public void StartLevel()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x11ABCF4", Offset = "0x11ABCF4", VA = "0x11ABCF4")]
	public Difficulty()
	{
	}
}
[Token(Token = "0x20001EE")]
public class Disabler : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private objectPooler objectpooler;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x11ABD7C", Offset = "0x11ABD7C", VA = "0x11ABD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x11ABDCC", Offset = "0x11ABDCC", VA = "0x11ABDCC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x11AC474", Offset = "0x11AC474", VA = "0x11AC474")]
	public Disabler()
	{
	}
}
[Token(Token = "0x20001EF")]
public class DisablerPooledObjects : MonoBehaviour
{
	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float deactivationDelay;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrailRenderer tr;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x11AC47C", Offset = "0x11AC47C", VA = "0x11AC47C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x11AC484", Offset = "0x11AC484", VA = "0x11AC484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x11AC600", Offset = "0x11AC600", VA = "0x11AC600")]
	public DisablerPooledObjects()
	{
	}
}
[Token(Token = "0x20001F0")]
public class DontGoThroughThings : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sendTriggerMessage;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layerMask;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float skinWidth;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minimumExtent;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float partialExtent;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sqrMinimumExtent;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 previousPosition;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider myCollider;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x11AC610", Offset = "0x11AC610", VA = "0x11AC610")]
	private void Start()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x11AC784", Offset = "0x11AC784", VA = "0x11AC784")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x11AC980", Offset = "0x11AC980", VA = "0x11AC980")]
	public DontGoThroughThings()
	{
	}
}
[Token(Token = "0x20001F1")]
public class DoomGlow : MonoBehaviour
{
	[Token(Token = "0x20001F2")]
	private class EdgePush
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 test1;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 test2;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 w1;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Vector3 w2;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Vector3 sharedPoint;

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x11ACCA0", Offset = "0x11ACCA0", VA = "0x11ACCA0")]
		public EdgePush()
		{
		}
	}

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pushDistance;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showBottom;

	[Token(Token = "0x4000AEB")]
	private const int edgeCount = 4;

	[Token(Token = "0x4000AEC")]
	private const int triCount = 54;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3[] quadPoints;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 centerPoint;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4[] screenQuadPoints;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh mesh;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] triBuffer;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Vector3[] vertBuffer;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color[] colorBuffer;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EdgePush[] pushedEdges;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x11AC9B0", Offset = "0x11AC9B0", VA = "0x11AC9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x11ACCA8", Offset = "0x11ACCA8", VA = "0x11ACCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x11AD9E4", Offset = "0x11AD9E4", VA = "0x11AD9E4")]
	private Vector4 GetScreenFromWorld(UnityEngine.Vector3 world)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x11ADA7C", Offset = "0x11ADA7C", VA = "0x11ADA7C")]
	private UnityEngine.Vector3 GetWorldFromScreen(Vector4 screen)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x11ADA78", Offset = "0x11ADA78", VA = "0x11ADA78")]
	private Vector2 ToVec2(UnityEngine.Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x11ADAC4", Offset = "0x11ADAC4", VA = "0x11ADAC4")]
	private void FillBuffer(UnityEngine.Vector3 pos, ref Color color, ref int currentIndex, UnityEngine.Vector3[] vertBuffer, Color[] colorBuffer)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x11ADA34", Offset = "0x11ADA34", VA = "0x11ADA34")]
	private float LinearMap(float inVal, float inFrom, float inTo, float outFrom, float outTo)
	{
		return default(float);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x11ADB28", Offset = "0x11ADB28", VA = "0x11ADB28")]
	public DoomGlow()
	{
	}
}
[Token(Token = "0x20001F3")]
public class EasterEggAlreadyHit : MonoBehaviour
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject egg;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string key;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x11ADC48", Offset = "0x11ADC48", VA = "0x11ADC48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x11ADD14", Offset = "0x11ADD14", VA = "0x11ADD14")]
	public EasterEggAlreadyHit()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShoot shooter;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int points;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int explodePoints;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float shotPower;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float bulletSpeed;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 BulletVelocity;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float bulletPower;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool dead;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera mainCamera;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool shooting;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject headhit;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform scoreTrans;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeCount;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float delayTime;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource source;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip audioStep;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip audioDead;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Mask;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimateText animateText;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Cape;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int bonus;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool reactivate;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float speedmodify;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float speedEasy;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float speedNormal;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float speedHard;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float speedExtreme;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float speedLegacy;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int CountFrame;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x11ADD1C", Offset = "0x11ADD1C", VA = "0x11ADD1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x11ADE38", Offset = "0x11ADE38", VA = "0x11ADE38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x11AE484", Offset = "0x11AE484", VA = "0x11AE484")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x11AE59C", Offset = "0x11AE59C", VA = "0x11AE59C")]
	private void Update()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x11AEAF0", Offset = "0x11AEAF0", VA = "0x11AEAF0")]
	public void PlayStepSound()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x11ADD8C", Offset = "0x11ADD8C", VA = "0x11ADD8C")]
	private void Ragdoll(bool value)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x11AEC20", Offset = "0x11AEC20", VA = "0x11AEC20")]
	public void Dead(UnityEngine.Vector3 hitpoint)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x11AF174", Offset = "0x11AF174", VA = "0x11AF174")]
	public void EnemyExplode()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x11AF22C", Offset = "0x11AF22C", VA = "0x11AF22C")]
	public void SetAllCollidersStatus(bool active)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x11AF2D8", Offset = "0x11AF2D8", VA = "0x11AF2D8")]
	private UnityEngine.Vector3 GetTargetV()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x11AF3BC", Offset = "0x11AF3BC", VA = "0x11AF3BC")]
	public void aim()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x11AE8F0", Offset = "0x11AE8F0", VA = "0x11AE8F0")]
	public void PauseRunner()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x11AE94C", Offset = "0x11AE94C", VA = "0x11AE94C")]
	public void REactivateRunner()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x11AF404", Offset = "0x11AF404", VA = "0x11AF404")]
	public void shoot()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x11AF5A4", Offset = "0x11AF5A4", VA = "0x11AF5A4")]
	public Enemy()
	{
	}
}
[Token(Token = "0x20001F5")]
public class EnemyRunDrone : MonoBehaviour
{
	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x11AF5E0", Offset = "0x11AF5E0", VA = "0x11AF5E0")]
	public EnemyRunDrone()
	{
	}
}
[Token(Token = "0x20001F6")]
public class EnemyRun : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShoot shooter;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro text;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int points;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Saber saber;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int attackRange;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isAttacking;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _animator;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float attackSpeed;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float moveSpeed;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x11AF5E8", Offset = "0x11AF5E8", VA = "0x11AF5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x11AF5EC", Offset = "0x11AF5EC", VA = "0x11AF5EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x11AF704", Offset = "0x11AF704", VA = "0x11AF704")]
	private void run()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x11AF7D4", Offset = "0x11AF7D4", VA = "0x11AF7D4")]
	private void attack()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x11AFAAC", Offset = "0x11AFAAC", VA = "0x11AFAAC")]
	public void Dead(UnityEngine.Vector3 hitpoint)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x11AF8AC", Offset = "0x11AF8AC", VA = "0x11AF8AC")]
	private UnityEngine.Vector3 GetTarget()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x11AFB74", Offset = "0x11AFB74", VA = "0x11AFB74")]
	public void shoot()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x11AFBA0", Offset = "0x11AFBA0", VA = "0x11AFBA0")]
	public EnemyRun()
	{
	}
}
[Token(Token = "0x20001F7")]
public class enemyRunSpawner : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool spawnEneablerL;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool spawnEneablerR;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DetectL;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DetectR;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EnemyRunner;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject EnemyShooter;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] points;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x11AFBC4", Offset = "0x11AFBC4", VA = "0x11AFBC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x11AFBC8", Offset = "0x11AFBC8", VA = "0x11AFBC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x11AFC18", Offset = "0x11AFC18", VA = "0x11AFC18")]
	public void SpawnEnemy()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x11AFD7C", Offset = "0x11AFD7C", VA = "0x11AFD7C")]
	public enemyRunSpawner()
	{
	}
}
[Token(Token = "0x20001F8")]
[SelectionBase]
public class EnemyScript : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	[CompilerGenerated]
	private sealed class <RandomAnimation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyScript <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x11B02C8", Offset = "0x11B02C8", VA = "0x11B02C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x11B0310", Offset = "0x11B0310", VA = "0x11B0310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x11B01AC", Offset = "0x11B01AC", VA = "0x11B01AC")]
		[DebuggerHidden]
		public <RandomAnimation>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x11B01DC", Offset = "0x11B01DC", VA = "0x11B01DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x11B01E0", Offset = "0x11B01E0", VA = "0x11B01E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x11B02D0", Offset = "0x11B02D0", VA = "0x11B02D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dead;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform weaponHolder;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x11AFD84", Offset = "0x11AFD84", VA = "0x11AFD84")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x11AFED4", Offset = "0x11AFED4", VA = "0x11AFED4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x11AFF64", Offset = "0x11AFF64", VA = "0x11AFF64")]
	public void Ragdoll()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x11B0040", Offset = "0x11B0040", VA = "0x11B0040")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x11AFE6C", Offset = "0x11AFE6C", VA = "0x11AFE6C")]
	[IteratorStateMachine(typeof(<RandomAnimation>d__7))]
	private IEnumerator RandomAnimation()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x11B01D4", Offset = "0x11B01D4", VA = "0x11B01D4")]
	public EnemyScript()
	{
	}
}
[Token(Token = "0x20001FA")]
public class EnemySpawner : MonoBehaviour
{
	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject enemyRunner;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enemyShooter;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Enemy enemyscript;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] spawnPositions;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timePassed;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float pauseSpawn;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float SpawnSpeed;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x11B0318", Offset = "0x11B0318", VA = "0x11B0318")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x11B0324", Offset = "0x11B0324", VA = "0x11B0324")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x11B045C", Offset = "0x11B045C", VA = "0x11B045C")]
	private void SpawnNewEnemy()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x11B05F0", Offset = "0x11B05F0", VA = "0x11B05F0")]
	public EnemySpawner()
	{
	}
}
[Token(Token = "0x20001FB")]
public class ExplodeOnFloor : MonoBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x11B0600", Offset = "0x11B0600", VA = "0x11B0600")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x11B0650", Offset = "0x11B0650", VA = "0x11B0650")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x11B0674", Offset = "0x11B0674", VA = "0x11B0674")]
	public ExplodeOnFloor()
	{
	}
}
[Token(Token = "0x20001FC")]
public class PlaneUsageExample : MonoBehaviour
{
	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x11B067C", Offset = "0x11B067C", VA = "0x11B067C")]
	public SlicedHull SliceObject(GameObject obj, [Optional] Material crossSectionMaterial)
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x11B070C", Offset = "0x11B070C", VA = "0x11B070C")]
	public PlaneUsageExample()
	{
	}
}
[Token(Token = "0x20001FD")]
public class RuntimeShatterExample : MonoBehaviour
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToShatter;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material crossSectionMaterial;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> prevShatters;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x11B0714", Offset = "0x11B0714", VA = "0x11B0714")]
	public GameObject[] ShatterObject(GameObject obj, [Optional] Material crossSectionMaterial)
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x11B07DC", Offset = "0x11B07DC", VA = "0x11B07DC")]
	public EzySlice.Plane GetRandomPlane(UnityEngine.Vector3 positionOffset, UnityEngine.Vector3 scaleOffset)
	{
		return default(EzySlice.Plane);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x11B08FC", Offset = "0x11B08FC", VA = "0x11B08FC")]
	public void RandomShatter()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x11B0BB0", Offset = "0x11B0BB0", VA = "0x11B0BB0")]
	public RuntimeShatterExample()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ShatterExample : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material DissolveMaterial;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x11B0C2C", Offset = "0x11B0C2C", VA = "0x11B0C2C")]
	public bool ShatterObject(GameObject obj, int iterations, [Optional] Material crossSectionMaterial)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x11B0E1C", Offset = "0x11B0E1C", VA = "0x11B0E1C")]
	public EzySlice.Plane GetRandomPlane(UnityEngine.Vector3 positionOffset, UnityEngine.Vector3 scaleOffset)
	{
		return default(EzySlice.Plane);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x11B0F60", Offset = "0x11B0F60", VA = "0x11B0F60")]
	public void AddHullComponents(GameObject go)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x11B1110", Offset = "0x11B1110", VA = "0x11B1110")]
	public ShatterExample()
	{
	}
}
[Token(Token = "0x20001FF")]
public class FadeEffect : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	[CompilerGenerated]
	private sealed class <FadeCanvas>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup canvas;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endTime>5__3;

		[Token(Token = "0x170000D2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x11B12C4", Offset = "0x11B12C4", VA = "0x11B12C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x11B130C", Offset = "0x11B130C", VA = "0x11B130C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x11B11A4", Offset = "0x11B11A4", VA = "0x11B11A4")]
		[DebuggerHidden]
		public <FadeCanvas>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x11B11D4", Offset = "0x11B11D4", VA = "0x11B11D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x11B11D8", Offset = "0x11B11D8", VA = "0x11B11D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x11B12CC", Offset = "0x11B12CC", VA = "0x11B12CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x11B1118", Offset = "0x11B1118", VA = "0x11B1118")]
	[IteratorStateMachine(typeof(<FadeCanvas>d__0))]
	public static IEnumerator<float> FadeCanvas(CanvasGroup canvas, float startAlpha, float endAlpha, float duration)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x11B11CC", Offset = "0x11B11CC", VA = "0x11B11CC")]
	public FadeEffect()
	{
	}
}
[Token(Token = "0x2000201")]
public class Fog : MonoBehaviour
{
	[Token(Token = "0x4000B48")]
	private const int BLOCK_SIZE = 16;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ComputeShader computeShader;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Bounds bounds;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ComputeBuffer positionBuffer;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ComputeBuffer rotationMatrixBuffer;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ComputeBuffer argsBuffer;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private uint[] args;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private uint numeberOfQuads;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.Vector3[] positions;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityEngine.Vector3 maxPos;

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x11B1368", Offset = "0x11B1368", VA = "0x11B1368")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x11B136C", Offset = "0x11B136C", VA = "0x11B136C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x11B17DC", Offset = "0x11B17DC", VA = "0x11B17DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x11B19E8", Offset = "0x11B19E8", VA = "0x11B19E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x11B1A28", Offset = "0x11B1A28", VA = "0x11B1A28")]
	public Fog()
	{
	}
}
[Token(Token = "0x2000202")]
public class floating : MonoBehaviour
{
	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float amplitude;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tempVal;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEngine.Vector3 tempPos;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x11B1A9C", Offset = "0x11B1A9C", VA = "0x11B1A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x11B1AC8", Offset = "0x11B1AC8", VA = "0x11B1AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x11B1B2C", Offset = "0x11B1B2C", VA = "0x11B1B2C")]
	public floating()
	{
	}
}
[Token(Token = "0x2000203")]
public class FlyToTargetObject : MonoBehaviour
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject TargetObject;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int LifeTime;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _attractorTransform;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject playerTrans;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x11B1B34", Offset = "0x11B1B34", VA = "0x11B1B34")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x11B1B60", Offset = "0x11B1B60", VA = "0x11B1B60")]
	public void Update()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x11B1D28", Offset = "0x11B1D28", VA = "0x11B1D28")]
	public FlyToTargetObject()
	{
	}
}
[Token(Token = "0x2000204")]
public class GameOver : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	[CompilerGenerated]
	private sealed class <CoolDownEnemy>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x11B2ED0", Offset = "0x11B2ED0", VA = "0x11B2ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x11B2F18", Offset = "0x11B2F18", VA = "0x11B2F18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x11B2A2C", Offset = "0x11B2A2C", VA = "0x11B2A2C")]
		[DebuggerHidden]
		public <CoolDownEnemy>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x11B2DF8", Offset = "0x11B2DF8", VA = "0x11B2DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x11B2DFC", Offset = "0x11B2DFC", VA = "0x11B2DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x11B2ED8", Offset = "0x11B2ED8", VA = "0x11B2ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[CompilerGenerated]
	private sealed class <WonFadeOutMusicWait>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x11B307C", Offset = "0x11B307C", VA = "0x11B307C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x11B30C4", Offset = "0x11B30C4", VA = "0x11B30C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x11B2A54", Offset = "0x11B2A54", VA = "0x11B2A54")]
		[DebuggerHidden]
		public <WonFadeOutMusicWait>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x11B2F20", Offset = "0x11B2F20", VA = "0x11B2F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x11B2F24", Offset = "0x11B2F24", VA = "0x11B2F24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x11B3084", Offset = "0x11B3084", VA = "0x11B3084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[CompilerGenerated]
	private sealed class <Deactiwaiter>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x11B3164", Offset = "0x11B3164", VA = "0x11B3164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x11B31AC", Offset = "0x11B31AC", VA = "0x11B31AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x11B2D60", Offset = "0x11B2D60", VA = "0x11B2D60")]
		[DebuggerHidden]
		public <Deactiwaiter>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x11B30CC", Offset = "0x11B30CC", VA = "0x11B30CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x11B30D0", Offset = "0x11B30D0", VA = "0x11B30D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x11B316C", Offset = "0x11B316C", VA = "0x11B316C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOver Instance;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRMenue vrMenu;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioHit;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip audioClash;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioplayerSource;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Scores scores;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] SpheresInGame;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] ShootSpheresInGame;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSecondsRealtime delay;

	[Token(Token = "0x170000D4")]
	public static bool fadeout
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x11B1D7C", Offset = "0x11B1D7C", VA = "0x11B1D7C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x11B1DC4", Offset = "0x11B1DC4", VA = "0x11B1DC4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public static bool enemyCool
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x11B1E10", Offset = "0x11B1E10", VA = "0x11B1E10")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x11B1E58", Offset = "0x11B1E58", VA = "0x11B1E58")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x11B1D30", Offset = "0x11B1D30", VA = "0x11B1D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x11B1EA4", Offset = "0x11B1EA4", VA = "0x11B1EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x11B2044", Offset = "0x11B2044", VA = "0x11B2044")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x11B2964", Offset = "0x11B2964", VA = "0x11B2964")]
	[IteratorStateMachine(typeof(<CoolDownEnemy>d__19))]
	private IEnumerator CoolDownEnemy()
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x11B29C4", Offset = "0x11B29C4", VA = "0x11B29C4")]
	[IteratorStateMachine(typeof(<WonFadeOutMusicWait>d__20))]
	private IEnumerator WonFadeOutMusicWait()
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x11B2A7C", Offset = "0x11B2A7C", VA = "0x11B2A7C")]
	public void ExplodeAllSphere()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x11B2CF8", Offset = "0x11B2CF8", VA = "0x11B2CF8")]
	[IteratorStateMachine(typeof(<Deactiwaiter>d__25))]
	private IEnumerator Deactiwaiter()
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x11B2D88", Offset = "0x11B2D88", VA = "0x11B2D88")]
	public GameOver()
	{
	}
}
[Token(Token = "0x2000208")]
public class GravityStars : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public UnityEngine.Vector3 newGravity;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x11B31B4", Offset = "0x11B31B4", VA = "0x11B31B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x11B3284", Offset = "0x11B3284", VA = "0x11B3284")]
	public GravityStars()
	{
	}
}
[Token(Token = "0x2000209")]
public class HapticsController : MonoBehaviour
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float rightAmplitude;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float leftAmplitude;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HapticsController instance;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool hapticsActive;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRController controllerL;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRController controllerR;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool Pico;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x11B3294", Offset = "0x11B3294", VA = "0x11B3294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x11B3398", Offset = "0x11B3398", VA = "0x11B3398")]
	public void HapticsUnderlay(float amplitude, float duration, bool rightHand, bool leftHand)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x11B3588", Offset = "0x11B3588", VA = "0x11B3588")]
	public void Start()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x11B3640", Offset = "0x11B3640", VA = "0x11B3640")]
	public void Haptics(float amplitude, float duration, bool rightHand, bool leftHand)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x11B3830", Offset = "0x11B3830", VA = "0x11B3830")]
	public void HapticsSaber(float duration, bool rightHand, bool leftHand)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x11B3B84", Offset = "0x11B3B84", VA = "0x11B3B84")]
	public HapticsController()
	{
	}
}
[Token(Token = "0x200020A")]
public class HighScoreTable : MonoBehaviour
{
	[Token(Token = "0x200020B")]
	private class Highscores
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HighscoreEntry> highscoreEntryList;

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x11B4A34", Offset = "0x11B4A34", VA = "0x11B4A34")]
		public Highscores()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020C")]
	private class HighscoreEntry
	{
		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int score;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x11B4A2C", Offset = "0x11B4A2C", VA = "0x11B4A2C")]
		public HighscoreEntry()
		{
		}
	}

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighScoreTable singleton;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject entryContainer;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject entryTemplate;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> highscoreEntryTransformList;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<HighscoreEntry> highscoreEntryList;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x11B3B8C", Offset = "0x11B3B8C", VA = "0x11B3B8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x11B4608", Offset = "0x11B4608", VA = "0x11B4608")]
	private void CreateHighscoreEntryTransform(HighscoreEntry highscoreEntry, Transform container, List<Transform> transformList)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x11B4450", Offset = "0x11B4450", VA = "0x11B4450")]
	public void AddHighscoreEntry(int score, string name)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x11B4A3C", Offset = "0x11B4A3C", VA = "0x11B4A3C")]
	public HighScoreTable()
	{
	}
}
[Token(Token = "0x200020D")]
public class HighScoreTableOrg : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	private class Highscores
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HighscoreEntry> highscoreEntryList;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x11B58E4", Offset = "0x11B58E4", VA = "0x11B58E4")]
		public Highscores()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020F")]
	private class HighscoreEntry
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int score;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x11B58DC", Offset = "0x11B58DC", VA = "0x11B58DC")]
		public HighscoreEntry()
		{
		}
	}

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int highestScore;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string highestName;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject entryContainer;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject entryTemplate;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject content;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> highscoreEntryRankList;

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x11B4A44", Offset = "0x11B4A44", VA = "0x11B4A44")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x11B4A48", Offset = "0x11B4A48", VA = "0x11B4A48")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x11B5588", Offset = "0x11B5588", VA = "0x11B5588")]
	private void CreateHighscoreEntry(HighscoreEntry highscoreEntry, List<int> highscoreEntryRankList)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x11B5214", Offset = "0x11B5214", VA = "0x11B5214")]
	public void AddHighscoreEntry(int score, string name)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x11B58EC", Offset = "0x11B58EC", VA = "0x11B58EC")]
	public HighScoreTableOrg()
	{
	}
}
[Token(Token = "0x2000210")]
public class IgnoreCameraClipping : MonoBehaviour
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int drawdistance;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int snowDrawdistance;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x11B58F4", Offset = "0x11B58F4", VA = "0x11B58F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x11B59B4", Offset = "0x11B59B4", VA = "0x11B59B4")]
	public IgnoreCameraClipping()
	{
	}
}
[Token(Token = "0x2000211")]
public class interception : MonoBehaviour
{
	[Token(Token = "0x6000919")]
	[Address(RVA = "0x11B59C8", Offset = "0x11B59C8", VA = "0x11B59C8")]
	public static UnityEngine.Vector3 FirstOrderIntercept(UnityEngine.Vector3 shooterPosition, UnityEngine.Vector3 shooterVelocity, float shotSpeed, UnityEngine.Vector3 targetPosition, UnityEngine.Vector3 targetVelocity)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x11B5A48", Offset = "0x11B5A48", VA = "0x11B5A48")]
	public static float FirstOrderInterceptTime(float shotSpeed, UnityEngine.Vector3 targetRelativePosition, UnityEngine.Vector3 targetRelativeVelocity)
	{
		return default(float);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x11B5B68", Offset = "0x11B5B68", VA = "0x11B5B68")]
	public interception()
	{
	}
}
[Token(Token = "0x2000212")]
public interface IPooledObject
{
	[Token(Token = "0x600091C")]
	void OnObjectSpawn();
}
[Token(Token = "0x2000213")]
public class LevelActivatorScript : MonoBehaviour
{
	[Token(Token = "0x600091D")]
	[Address(RVA = "0x11B5B70", Offset = "0x11B5B70", VA = "0x11B5B70")]
	private void Start()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x11B5BBC", Offset = "0x11B5BBC", VA = "0x11B5BBC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x11B5C74", Offset = "0x11B5C74", VA = "0x11B5C74")]
	public LevelActivatorScript()
	{
	}
}
[Token(Token = "0x2000214")]
public class LevelingSystem : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	[CompilerGenerated]
	private sealed class <DeactivatParticle>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelingSystem <>4__this;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x11B6F24", Offset = "0x11B6F24", VA = "0x11B6F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x11B6F6C", Offset = "0x11B6F6C", VA = "0x11B6F6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x11B6E2C", Offset = "0x11B6E2C", VA = "0x11B6E2C")]
		[DebuggerHidden]
		public <DeactivatParticle>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x11B6E70", Offset = "0x11B6E70", VA = "0x11B6E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x11B6E74", Offset = "0x11B6E74", VA = "0x11B6E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x11B6F2C", Offset = "0x11B6F2C", VA = "0x11B6F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelingSystem instance;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int PlayerLevel;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int PlayerXP;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ExpBase;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int ExpLeft;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ExpMod;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource AudioSourceLeveling;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource AudioSourceLevelup;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text Level;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text xpText;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text lastRank;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text lastScore;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text lastSloMoTime;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text lastGold;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_Text strongestHitText;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text BestMaxChain;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Slider xpSlider;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int TotalXpGained;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timer;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float progressbarfillspeed;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip XPFillAudio;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip LevelUpAudio;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ParticleLevelUp;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int lastScoreLeveling;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Gold;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Gold1;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Gold2;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Gold3;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject Gold4;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject Gold5;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public RadialDisplayIndicator accuracyPlayer;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RadialDisplayIndicator powerPlayer;

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x11B5C7C", Offset = "0x11B5C7C", VA = "0x11B5C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x11B6808", Offset = "0x11B6808", VA = "0x11B6808")]
	private void Update()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x11B6A48", Offset = "0x11B6A48", VA = "0x11B6A48")]
	public void XPResult(int te)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x11B6894", Offset = "0x11B6894", VA = "0x11B6894")]
	public void GainExp(int e)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x11B6A94", Offset = "0x11B6A94", VA = "0x11B6A94")]
	private void LevelUp()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x11B6DC4", Offset = "0x11B6DC4", VA = "0x11B6DC4")]
	[IteratorStateMachine(typeof(<DeactivatParticle>d__37))]
	private IEnumerator DeactivatParticle()
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x11B6E54", Offset = "0x11B6E54", VA = "0x11B6E54")]
	public LevelingSystem()
	{
	}
}
[Token(Token = "0x2000216")]
public class LevelSelection : MonoBehaviour
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] levels;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int selectedLevel;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x11B6F74", Offset = "0x11B6F74", VA = "0x11B6F74")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x11B6FF8", Offset = "0x11B6FF8", VA = "0x11B6FF8")]
	public void PreviousLevel()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x11B708C", Offset = "0x11B708C", VA = "0x11B708C")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x11B70D8", Offset = "0x11B70D8", VA = "0x11B70D8")]
	public LevelSelection()
	{
	}
}
[Token(Token = "0x2000217")]
public enum LimbSide
{
	[Token(Token = "0x4000BB3")]
	Left,
	[Token(Token = "0x4000BB4")]
	Right,
	[Token(Token = "0x4000BB5")]
	FrontLeft,
	[Token(Token = "0x4000BB6")]
	FrontRight,
	[Token(Token = "0x4000BB7")]
	HindLeft,
	[Token(Token = "0x4000BB8")]
	HindRight
}
[Token(Token = "0x2000218")]
public class MidiPlayer : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <Start>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MidiPlayer <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x11B98B0", Offset = "0x11B98B0", VA = "0x11B98B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x11B98F8", Offset = "0x11B98F8", VA = "0x11B98F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x11B79B8", Offset = "0x11B79B8", VA = "0x11B79B8")]
		[DebuggerHidden]
		public <Start>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x11B9614", Offset = "0x11B9614", VA = "0x11B9614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x11B9618", Offset = "0x11B9618", VA = "0x11B9618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x11B98B8", Offset = "0x11B98B8", VA = "0x11B98B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[CompilerGenerated]
	private sealed class <ResetAndPlay>d__72 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MidiPlayer <>4__this;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startTime;

		[Token(Token = "0x170000EC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x11B9BA4", Offset = "0x11B9BA4", VA = "0x11B9BA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x11B9BEC", Offset = "0x11B9BEC", VA = "0x11B9BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x11B7C7C", Offset = "0x11B7C7C", VA = "0x11B7C7C")]
		[DebuggerHidden]
		public <ResetAndPlay>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x11B9900", Offset = "0x11B9900", VA = "0x11B9900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x11B9904", Offset = "0x11B9904", VA = "0x11B9904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x11B9BAC", Offset = "0x11B9BAC", VA = "0x11B9BAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset sourceFile;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset sourceFileEasy;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float audioPitch;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bpm;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float bpmUsed;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool LevelEnd;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool useMidi;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool UseMidi;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float MonkeySpeed;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float AwokenSpeed;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float AviatorSpeed;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float SuperhumanSpeed;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float TheOneSpeed;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MidiFileContainer song;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MidiTrackSequencer sequencer;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float secondsPerBeat;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float beatsPerSecond;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float rythmCount;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool beat;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int takt;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waitTime;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastAdvanceTime;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float correctedDeltaTime;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float deltaTimer;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float audioSourceDeltaTime;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float trueDeltaTimer;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private double lastDspTime;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private double playhead;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int updates;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private double deltaTime;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float diff;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int m_LastSample;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static double AudioDelta;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float timeLastFrame;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<float> audioDeltaTimes;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float smoothAudioDeltaTime;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int framesToSmooth;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float freq;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int sample;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int sampleDelta;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int spawnrythmCount;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int difficulty2Count;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int ULcount;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int URcount;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int SLcount;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int SRcount;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int SMcount;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int H1Rcount;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int H1Lcount;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int H2count;

	[Token(Token = "0x170000DE")]
	public static bool OnNote
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x11B70E0", Offset = "0x11B70E0", VA = "0x11B70E0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000932")]
		[Address(RVA = "0x11B7138", Offset = "0x11B7138", VA = "0x11B7138")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public static bool OnRest
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x11B7194", Offset = "0x11B7194", VA = "0x11B7194")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x11B71EC", Offset = "0x11B71EC", VA = "0x11B71EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public static bool OnSL
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x11B7248", Offset = "0x11B7248", VA = "0x11B7248")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x11B72A0", Offset = "0x11B72A0", VA = "0x11B72A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public static bool OnSR
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x11B72FC", Offset = "0x11B72FC", VA = "0x11B72FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x11B7354", Offset = "0x11B7354", VA = "0x11B7354")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public static bool OnSM
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0x11B73B0", Offset = "0x11B73B0", VA = "0x11B73B0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x11B7408", Offset = "0x11B7408", VA = "0x11B7408")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public static bool OnUL
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0x11B7464", Offset = "0x11B7464", VA = "0x11B7464")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x11B74BC", Offset = "0x11B74BC", VA = "0x11B74BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public static bool OnUR
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x11B7518", Offset = "0x11B7518", VA = "0x11B7518")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x11B7570", Offset = "0x11B7570", VA = "0x11B7570")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public static bool OnH1L
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x11B75CC", Offset = "0x11B75CC", VA = "0x11B75CC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x11B7624", Offset = "0x11B7624", VA = "0x11B7624")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public static bool OnH1R
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x11B7680", Offset = "0x11B7680", VA = "0x11B7680")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x11B76D8", Offset = "0x11B76D8", VA = "0x11B76D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public static bool OnH2
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x11B7734", Offset = "0x11B7734", VA = "0x11B7734")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x11B778C", Offset = "0x11B778C", VA = "0x11B778C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public static bool OnH3
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x11B77E8", Offset = "0x11B77E8", VA = "0x11B77E8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x11B7840", Offset = "0x11B7840", VA = "0x11B7840")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public static bool OnHit
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x11B789C", Offset = "0x11B789C", VA = "0x11B789C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x11B78F4", Offset = "0x11B78F4", VA = "0x11B78F4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x11B7950", Offset = "0x11B7950", VA = "0x11B7950")]
	[IteratorStateMachine(typeof(<Start>d__69))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x11B79E0", Offset = "0x11B79E0", VA = "0x11B79E0")]
	public void SetPitch()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x11B7C04", Offset = "0x11B7C04", VA = "0x11B7C04")]
	[IteratorStateMachine(typeof(<ResetAndPlay>d__72))]
	private IEnumerator<float> ResetAndPlay(float startTime)
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x11B7CA4", Offset = "0x11B7CA4", VA = "0x11B7CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x11B8648", Offset = "0x11B8648", VA = "0x11B8648")]
	private void DispatchEvents(List<MidiEvent> events)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x11B9528", Offset = "0x11B9528", VA = "0x11B9528")]
	public MidiPlayer()
	{
	}
}
[Token(Token = "0x200021B")]
[ExecuteInEditMode]
public class Mirror : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Main Settings")]
	public UnityEngine.Vector3 projectionDirection;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_LayerMask;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_TextureSize;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Advanced Settings")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nearClipLimit;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float farClipLimit;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_framesNeededToUpdate;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<Camera, Camera> m_PortalCameras;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_frameCounter;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<XRNodeState> nodeStates;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture m_PortalTextureLeft;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture m_PortalTextureRight;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool VR;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool camerasCreated;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer rend;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityEngine.Vector3 oldEyePos;

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x11B9C48", Offset = "0x11B9C48", VA = "0x11B9C48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x11B9CF8", Offset = "0x11B9CF8", VA = "0x11B9CF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x11B9FB4", Offset = "0x11B9FB4", VA = "0x11B9FB4")]
	private void CheckForLiv()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x11BA104", Offset = "0x11BA104", VA = "0x11BA104")]
	private void UpdateCamera(ScriptableRenderContext SRC, Camera camera)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x11BA3AC", Offset = "0x11BA3AC", VA = "0x11BA3AC")]
	private void RenderCamera(Camera camera, Renderer rend, Camera.StereoscopicEye eye, ref RenderTexture portalTexture, ScriptableRenderContext SRC)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x11BAB44", Offset = "0x11BAB44", VA = "0x11BAB44")]
	private void CreatePortalCamera(Camera currentCamera, Camera.StereoscopicEye eye, out Camera portalCamera, ref RenderTexture portalTexture)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x11BB040", Offset = "0x11BB040", VA = "0x11BB040")]
	private void CopyCameraProperties(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x11BB5D4", Offset = "0x11BB5D4", VA = "0x11BB5D4")]
	private Vector4 CameraSpacePlane(Matrix4x4 worldToCameraMatrix, UnityEngine.Vector3 pos, UnityEngine.Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x11BB3D4", Offset = "0x11BB3D4", VA = "0x11BB3D4")]
	private XRNodeState findNode(List<XRNodeState> nodeStates, XRNode node)
	{
		return default(XRNodeState);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x11BB340", Offset = "0x11BB340", VA = "0x11BB340")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x11BB890", Offset = "0x11BB890", VA = "0x11BB890")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x11BB738", Offset = "0x11BB738", VA = "0x11BB738")]
	private static void MakeProjectionMatrixOblique(ref Matrix4x4 matrix, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x11BB8B0", Offset = "0x11BB8B0", VA = "0x11BB8B0")]
	public Mirror()
	{
	}
}
[Token(Token = "0x200021C")]
public class movePlayer : MonoBehaviour
{
	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static movePlayer Instance;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioplayer;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool move;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool stop;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float speedDelta;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private UnityEngine.Vector3 pos;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityEngine.Vector3 velocity;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float beatsPerSecond;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float secondsPerBeat;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x11BB9E0", Offset = "0x11BB9E0", VA = "0x11BB9E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x11BBA2C", Offset = "0x11BBA2C", VA = "0x11BBA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x11BBB88", Offset = "0x11BBB88", VA = "0x11BBB88")]
	private void Update()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x11BBD00", Offset = "0x11BBD00", VA = "0x11BBD00")]
	public movePlayer()
	{
	}
}
[Token(Token = "0x200021D")]
public class MoveShip : MonoBehaviour
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x11BBD10", Offset = "0x11BBD10", VA = "0x11BBD10")]
	private void Start()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x11BBD14", Offset = "0x11BBD14", VA = "0x11BBD14")]
	private void Update()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x11BBDB8", Offset = "0x11BBDB8", VA = "0x11BBDB8")]
	public MoveShip()
	{
	}
}
[Token(Token = "0x200021E")]
public class objectPooler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021F")]
	public class Pool
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tag;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x11BC248", Offset = "0x11BC248", VA = "0x11BC248")]
		public Pool()
		{
		}
	}

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static objectPooler Instance;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Pool> pools;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, Queue<GameObject>> poolDictionary;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x11BBDCC", Offset = "0x11BBDCC", VA = "0x11BBDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x11BBE9C", Offset = "0x11BBE9C", VA = "0x11BBE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x11AC154", Offset = "0x11AC154", VA = "0x11AC154")]
	public GameObject SpawnFromPool(string tag, UnityEngine.Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x11BC240", Offset = "0x11BC240", VA = "0x11BC240")]
	public objectPooler()
	{
	}
}
[Token(Token = "0x2000220")]
public class OVRScreenFade1 : MonoBehaviour
{
	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <Fade>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRScreenFade1 <>4__this;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x11BCBB4", Offset = "0x11BCBB4", VA = "0x11BCBB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x11BCBFC", Offset = "0x11BCBFC", VA = "0x11BCBFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x11BC9C8", Offset = "0x11BC9C8", VA = "0x11BC9C8")]
		[DebuggerHidden]
		public <Fade>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x11BCA60", Offset = "0x11BCA60", VA = "0x11BCA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x11BCA64", Offset = "0x11BCA64", VA = "0x11BCA64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x11BCBBC", Offset = "0x11BCBBC", VA = "0x11BCBBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Tooltip("Fade duration")]
	public static float fadeTime;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Screen color at maximum fade")]
	public Color fadeColor;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fadeOnStart;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int renderQueue;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material fadeMaterial;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFading;

	[Token(Token = "0x170000EE")]
	public float currentAlpha
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x11BC250", Offset = "0x11BC250", VA = "0x11BC250")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x11BC258", Offset = "0x11BC258", VA = "0x11BC258")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x11BC260", Offset = "0x11BC260", VA = "0x11BC260")]
	private void Start()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x11BC808", Offset = "0x11BC808", VA = "0x11BC808")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x11BC83C", Offset = "0x11BC83C", VA = "0x11BC83C")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x11BC864", Offset = "0x11BC864", VA = "0x11BC864")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x11BC88C", Offset = "0x11BC88C", VA = "0x11BC88C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x11BC8A0", Offset = "0x11BC8A0", VA = "0x11BC8A0")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x11BC784", Offset = "0x11BC784", VA = "0x11BC784")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x11BC78C", Offset = "0x11BC78C", VA = "0x11BC78C")]
	[IteratorStateMachine(typeof(<Fade>d__20))]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x11BC8BC", Offset = "0x11BC8BC", VA = "0x11BC8BC")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x11BC9F0", Offset = "0x11BC9F0", VA = "0x11BC9F0")]
	public OVRScreenFade1()
	{
	}
}
[Token(Token = "0x2000222")]
public class ParticleAttractor : MonoBehaviour
{
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int speed;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _attractorTransform;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject playerTrans;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string attractionTag;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x11BCC04", Offset = "0x11BCC04", VA = "0x11BCC04")]
	public void Start()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x11BCC64", Offset = "0x11BCC64", VA = "0x11BCC64")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x11BCE5C", Offset = "0x11BCE5C", VA = "0x11BCE5C")]
	public ParticleAttractor()
	{
	}
}
[Token(Token = "0x2000223")]
[RequireComponent(typeof(ParticleSystem))]
public class ParticlePlexus : MonoBehaviour
{
	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDistance;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxConnections;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxLineRenderers;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer lineRendererTemplate;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LineRenderer> lineRenderers;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _transform;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x11BCEBC", Offset = "0x11BCEBC", VA = "0x11BCEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x11BCF20", Offset = "0x11BCF20", VA = "0x11BCF20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x11BD4D8", Offset = "0x11BD4D8", VA = "0x11BD4D8")]
	public ParticlePlexus()
	{
	}
}
[Token(Token = "0x2000224")]
public class ParticleSound : MonoBehaviour
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x11BD568", Offset = "0x11BD568", VA = "0x11BD568")]
	private void Start()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x11BD588", Offset = "0x11BD588", VA = "0x11BD588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x11BD58C", Offset = "0x11BD58C", VA = "0x11BD58C")]
	public ParticleSound()
	{
	}
}
[Token(Token = "0x2000225")]
[RequireComponent(typeof(ParticleSystem))]
public class ParticleViewRollCorrection : MonoBehaviour
{
	[Token(Token = "0x6000991")]
	[Address(RVA = "0x11BD594", Offset = "0x11BD594", VA = "0x11BD594")]
	public ParticleViewRollCorrection()
	{
	}
}
[Token(Token = "0x2000226")]
public class PlanetPlayer : MonoBehaviour
{
	[Token(Token = "0x6000992")]
	[Address(RVA = "0x11BD59C", Offset = "0x11BD59C", VA = "0x11BD59C")]
	public PlanetPlayer()
	{
	}
}
[Token(Token = "0x2000227")]
public static class PlayerPrefsExtra
{
	[Token(Token = "0x2000228")]
	public class ListWrapper<T>
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> list;

		[Token(Token = "0x60009AD")]
		public ListWrapper()
		{
		}
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x11BD5A4", Offset = "0x11BD5A4", VA = "0x11BD5A4")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x11BD5C4", Offset = "0x11BD5C4", VA = "0x11BD5C4")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x11BD5E4", Offset = "0x11BD5E4", VA = "0x11BD5E4")]
	public static void SetBool(string key, bool value)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x11BD5F0", Offset = "0x11BD5F0", VA = "0x11BD5F0")]
	public static Vector2 GetVector2(string key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x11BD66C", Offset = "0x11BD66C", VA = "0x11BD66C")]
	public static Vector2 GetVector2(string key, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x11BD6CC", Offset = "0x11BD6CC", VA = "0x11BD6CC")]
	public static void SetVector2(string key, Vector2 value)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x11BD72C", Offset = "0x11BD72C", VA = "0x11BD72C")]
	public static UnityEngine.Vector3 GetVector3(string key)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x11BD7AC", Offset = "0x11BD7AC", VA = "0x11BD7AC")]
	public static UnityEngine.Vector3 GetVector3(string key, UnityEngine.Vector3 defaultValue)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x11BD81C", Offset = "0x11BD81C", VA = "0x11BD81C")]
	public static void SetVector3(string key, UnityEngine.Vector3 value)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x11BD88C", Offset = "0x11BD88C", VA = "0x11BD88C")]
	public static Vector4 GetVector4(string key)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x11BD90C", Offset = "0x11BD90C", VA = "0x11BD90C")]
	public static Vector4 GetVector4(string key, Vector4 defaultValue)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x11BD984", Offset = "0x11BD984", VA = "0x11BD984")]
	public static void SetVector4(string key, Vector4 value)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x11BD9FC", Offset = "0x11BD9FC", VA = "0x11BD9FC")]
	public static Color GetColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x11BDA54", Offset = "0x11BDA54", VA = "0x11BDA54")]
	public static Color GetColor(string key, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x11BDACC", Offset = "0x11BDACC", VA = "0x11BDACC")]
	public static void SetColor(string key, Color value)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x11BDB44", Offset = "0x11BDB44", VA = "0x11BDB44")]
	public static Quaternion GetQuaternion(string key)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x11BDBC4", Offset = "0x11BDBC4", VA = "0x11BDBC4")]
	public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x11BDC3C", Offset = "0x11BDC3C", VA = "0x11BDC3C")]
	public static void SetQuaternion(string key, Quaternion value)
	{
	}

	[Token(Token = "0x60009A5")]
	public static List<T> GetList<T>(string key)
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	public static List<T> GetList<T>(string key, List<T> defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60009A7")]
	public static void SetList<T>(string key, List<T> value)
	{
	}

	[Token(Token = "0x60009A8")]
	public static T GetObject<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x60009A9")]
	public static T GetObject<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60009AA")]
	public static void SetObject<T>(string key, T value)
	{
	}

	[Token(Token = "0x60009AB")]
	private static T Get<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60009AC")]
	private static void Set<T>(string key, T value)
	{
	}
}
[Token(Token = "0x2000229")]
public class PlayfabManager : MonoBehaviour
{
	[Token(Token = "0x200022B")]
	[CompilerGenerated]
	private sealed class <waitforSendingLeaderboard>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayfabManager <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x11C3A18", Offset = "0x11C3A18", VA = "0x11C3A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x11C3A60", Offset = "0x11C3A60", VA = "0x11C3A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x11C3940", Offset = "0x11C3940", VA = "0x11C3940")]
		[DebuggerHidden]
		public <waitforSendingLeaderboard>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x11C3968", Offset = "0x11C3968", VA = "0x11C3968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x11C396C", Offset = "0x11C396C", VA = "0x11C396C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x11C3A20", Offset = "0x11C3A20", VA = "0x11C3A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rowPrefab;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rowsParent;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string loggedInPlayfabId;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayfabManager instance;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShowLeaderBoard showleaderboardScript;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject NameInputScreen;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject LeaderBoard;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LoadingObject;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_InputField nameInput;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text PlayerName;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoggedIn;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SetVolume setvolume;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color markingColor;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string email;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string password;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float scoreCheck;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Toggle topSelected;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Toggle aroudnplayerselected;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HighScoreTableOrg highScoreTable;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool once;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int highestOnlineScore;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool delayedagain;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool playfabLoading;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x11BDCB4", Offset = "0x11BDCB4", VA = "0x11BDCB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x11BDFDC", Offset = "0x11BDFDC", VA = "0x11BDFDC")]
	public void LoginWithCustomID()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x11BE1C4", Offset = "0x11BE1C4", VA = "0x11BE1C4")]
	private void OnLoginSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x11BFDC0", Offset = "0x11BFDC0", VA = "0x11BFDC0")]
	public void SendNameButton()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x11C0170", Offset = "0x11C0170", VA = "0x11C0170")]
	private void OnPlayFabNameChangeError(PlayFabError obj)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x11C025C", Offset = "0x11C025C", VA = "0x11C025C")]
	private void OnPlayerNameResult(UpdateUserTitleDisplayNameResult obj)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x11C03D0", Offset = "0x11C03D0", VA = "0x11C03D0")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x11BEC08", Offset = "0x11BEC08", VA = "0x11BEC08")]
	private void SendLeaderboard(int score)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x11C0774", Offset = "0x11C0774", VA = "0x11C0774")]
	private void OnLeaderboardUpdate(UpdatePlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x11C0368", Offset = "0x11C0368", VA = "0x11C0368")]
	[IteratorStateMachine(typeof(<waitforSendingLeaderboard>d__30))]
	private IEnumerator waitforSendingLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x11C07F8", Offset = "0x11C07F8", VA = "0x11C07F8")]
	public void GetLeaderboardTop()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x11C0BD4", Offset = "0x11C0BD4", VA = "0x11C0BD4")]
	private void OnLeaderboardGet(GetLeaderboardResult result)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x11C14AC", Offset = "0x11C14AC", VA = "0x11C14AC")]
	public void GetLeaderboardAroundPlayerButton()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x11C14B8", Offset = "0x11C14B8", VA = "0x11C14B8")]
	public void GetLeaderboardAroundPlayer()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x11C1890", Offset = "0x11C1890", VA = "0x11C1890")]
	private void OnLeaderboardAroundPlayerGet(GetLeaderboardAroundPlayerResult result)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x11C214C", Offset = "0x11C214C", VA = "0x11C214C")]
	public void OnWorldSelection(int levelId, int songTimeSelected, int difficulty, bool flowmodeselected)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x11BF580", Offset = "0x11BF580", VA = "0x11BF580")]
	private void OnWon(int levelId, int songTimeSelected, int difficultyId, int misses, float flextime, int points)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x11BF980", Offset = "0x11BF980", VA = "0x11BF980")]
	private void OnGameOverTime(int levelId, int songTimeSelected, int difficultyId, float playTime, float songTime, int misses, float flextime)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x11C24C4", Offset = "0x11C24C4", VA = "0x11C24C4")]
	public PlayfabManager()
	{
	}
}
[Token(Token = "0x200022C")]
public class ClearFlag : MonoBehaviour
{
	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x11C3A68", Offset = "0x11C3A68", VA = "0x11C3A68")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x11C3B08", Offset = "0x11C3B08", VA = "0x11C3B08")]
	public ClearFlag()
	{
	}
}
[Token(Token = "0x200022D")]
[RequireComponent(typeof(ParticleSystem))]
public class ParticlePlexusSimple : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxDistance;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer lineRendererTemplate;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<LineRenderer> lineRenderers;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int lrVertexCount;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lrVertexNoise;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxLines;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool remainingLifeKills;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool remainingLifeInfluenceWidth;

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x11C3B10", Offset = "0x11C3B10", VA = "0x11C3B10")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x11C3B88", Offset = "0x11C3B88", VA = "0x11C3B88")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x11C3EF0", Offset = "0x11C3EF0", VA = "0x11C3EF0")]
	private void InstantiateNewLineRendererIfNecessary(int currenLineRendererIndex, int lineRendererCount)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x11C4018", Offset = "0x11C4018", VA = "0x11C4018")]
	private void DrawLineRenderer(int index, UnityEngine.Vector3 p1_pos, UnityEngine.Vector3 p2_pos, float distanceSqr, float maxDistanceSqr)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x11C4250", Offset = "0x11C4250", VA = "0x11C4250")]
	private UnityEngine.Vector3[] CalculatePoints(UnityEngine.Vector3 p1_pos, UnityEngine.Vector3 p2_pos, float noiseAmplitude)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x11C4108", Offset = "0x11C4108", VA = "0x11C4108")]
	private void SetLineWidth(int currenLineRendererIndex, float maxDistanceSqr, float distanceSqr, float lifeInfluence)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x11C41C4", Offset = "0x11C41C4", VA = "0x11C41C4")]
	private void DisabelRemainingLineRenderers(int currenLineRendererIndex, int lineRendererCount)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x11C4410", Offset = "0x11C4410", VA = "0x11C4410")]
	private float[,] calcNoise(float[,] noise)
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x11C4534", Offset = "0x11C4534", VA = "0x11C4534")]
	public ParticlePlexusSimple()
	{
	}
}
[Token(Token = "0x200022E")]
[RequireComponent(typeof(ParticleSystem))]
public class ParticlePlexus1 : MonoBehaviour
{
	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxDistance;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer lineRendererTemplate;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<LineRenderer> lineRenderers;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lrVertexCount;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxLines;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool remainingLifeKills;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Vector3[] points;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x11C45CC", Offset = "0x11C45CC", VA = "0x11C45CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x11C4644", Offset = "0x11C4644", VA = "0x11C4644")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x11C4998", Offset = "0x11C4998", VA = "0x11C4998")]
	private void InstantiateNewLineRendererIfNecessary(int currenLineRendererIndex, int lineRendererCount)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x11C4AC0", Offset = "0x11C4AC0", VA = "0x11C4AC0")]
	private void DrawLineRenderer(int index, UnityEngine.Vector3 p1_pos, UnityEngine.Vector3 p2_pos, float distanceSqr, float maxDistanceSqr)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x11C4CC4", Offset = "0x11C4CC4", VA = "0x11C4CC4")]
	private UnityEngine.Vector3[] CalculatePoints(UnityEngine.Vector3 p1_pos, UnityEngine.Vector3 p2_pos)
	{
		return null;
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x11C4B9C", Offset = "0x11C4B9C", VA = "0x11C4B9C")]
	private void SetLineWidth(int currenLineRendererIndex, float maxDistanceSqr, float distanceSqr, float lifeInfluence)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x11C4C38", Offset = "0x11C4C38", VA = "0x11C4C38")]
	private void DisabelRemainingLineRenderers(int currenLineRendererIndex, int lineRendererCount)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x11C4DA4", Offset = "0x11C4DA4", VA = "0x11C4DA4")]
	public ParticlePlexus1()
	{
	}
}
[Token(Token = "0x200022F")]
public class Rota : MonoBehaviour
{
	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 vel;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x11C4E58", Offset = "0x11C4E58", VA = "0x11C4E58")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x11C4EB4", Offset = "0x11C4EB4", VA = "0x11C4EB4")]
	public Rota()
	{
	}
}
[Token(Token = "0x2000230")]
public class PointerVibrate : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.Vector3 maxSize;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 minSize;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speed;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip sound;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource soundPlay;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.Vector3 position;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x11C4ECC", Offset = "0x11C4ECC", VA = "0x11C4ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x11C5030", Offset = "0x11C5030", VA = "0x11C5030")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x11C527C", Offset = "0x11C527C", VA = "0x11C527C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x11C5558", Offset = "0x11C5558", VA = "0x11C5558")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x11C5790", Offset = "0x11C5790", VA = "0x11C5790", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x11C5800", Offset = "0x11C5800", VA = "0x11C5800")]
	public PointerVibrate()
	{
	}
}
[Token(Token = "0x2000231")]
public class PointerVibrateNoZ : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.Vector3 maxSize;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 minSize;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speed;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip sound;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource soundPlay;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEngine.Vector3 position;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x11C5824", Offset = "0x11C5824", VA = "0x11C5824")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x11C5988", Offset = "0x11C5988", VA = "0x11C5988")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x11C5BD4", Offset = "0x11C5BD4", VA = "0x11C5BD4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x11C5EB0", Offset = "0x11C5EB0", VA = "0x11C5EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x11C6028", Offset = "0x11C6028", VA = "0x11C6028", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x11C6030", Offset = "0x11C6030", VA = "0x11C6030")]
	public PointerVibrateNoZ()
	{
	}
}
[Token(Token = "0x2000232")]
public class Pulsing : MonoBehaviour
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x11C6054", Offset = "0x11C6054", VA = "0x11C6054")]
	public Pulsing()
	{
	}
}
[Token(Token = "0x2000233")]
public class RadialDisplayIndicator : MonoBehaviour
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("UI Indicator")]
	private Image radialIndicatorUI;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float indicatorValue;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float indicatorSetValue;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float indicatorMax;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fillSpeed;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RadialIndicator radialindicator;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float indicatorScaledValue;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x11C605C", Offset = "0x11C605C", VA = "0x11C605C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x11C6114", Offset = "0x11C6114", VA = "0x11C6114")]
	private void UpdateIndicator(float indicatorSetter)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x11C6130", Offset = "0x11C6130", VA = "0x11C6130")]
	public void SetIndicator(float Value)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x11C6204", Offset = "0x11C6204", VA = "0x11C6204")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x11C6300", Offset = "0x11C6300", VA = "0x11C6300")]
	public RadialDisplayIndicator()
	{
	}
}
[Token(Token = "0x2000234")]
public class RedVibration : MonoBehaviour
{
	[Token(Token = "0x2000235")]
	[CompilerGenerated]
	private sealed class <OnTriggerStay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider other;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RedVibration <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x11C7CFC", Offset = "0x11C7CFC", VA = "0x11C7CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x11C7D44", Offset = "0x11C7D44", VA = "0x11C7D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x11C72B8", Offset = "0x11C72B8", VA = "0x11C72B8")]
		[DebuggerHidden]
		public <OnTriggerStay>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x11C72F4", Offset = "0x11C72F4", VA = "0x11C72F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x11C72F8", Offset = "0x11C72F8", VA = "0x11C72F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x11C7D04", Offset = "0x11C7D04", VA = "0x11C7D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClash;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject MeltedDecal;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 hitpoint;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private UnityEngine.Vector3 hitpointCorrection;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float SaberLength;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask GunMaskLayer;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool FlextimeSaber;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timerFlextime;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timerObstacle;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timerSaber;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x11C6314", Offset = "0x11C6314", VA = "0x11C6314")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x11C63D4", Offset = "0x11C63D4", VA = "0x11C63D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x11C6E30", Offset = "0x11C6E30", VA = "0x11C6E30")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x11C7244", Offset = "0x11C7244", VA = "0x11C7244")]
	[IteratorStateMachine(typeof(<OnTriggerStay>d__14))]
	private IEnumerator OnTriggerStay(Collider other)
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x11C72E0", Offset = "0x11C72E0", VA = "0x11C72E0")]
	public RedVibration()
	{
	}
}
[Token(Token = "0x2000236")]
public class RefreshOnlineLeaderboard : MonoBehaviour
{
	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RefreshOnlineLeaderboard instance;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle wordltoggle;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle playerToggle;

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x11C7D4C", Offset = "0x11C7D4C", VA = "0x11C7D4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x11C7D98", Offset = "0x11C7D98", VA = "0x11C7D98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x11C7E3C", Offset = "0x11C7E3C", VA = "0x11C7E3C")]
	public void UpdateOnlineLEaderboard()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x11C7F44", Offset = "0x11C7F44", VA = "0x11C7F44")]
	public RefreshOnlineLeaderboard()
	{
	}
}
[Token(Token = "0x2000237")]
public class Results : MonoBehaviour
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Results Instance;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI yourPoints;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI bestPoints;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI highestForce;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI longestChain;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI hits;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI accuracyValue;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI misses;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI livesLost;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI treasures;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI SloMoTime;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI rank;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioplayer;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int bonus;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string yourPointsString;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string lastRank;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Gold;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject Gold1;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Gold2;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Gold3;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Gold4;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Gold5;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RadialDisplayIndicator accuracyDisplayRing;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RadialDisplayIndicator powerDisplayRing;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float calcAccuracy;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float calcPower;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int finalScore;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float scorecalc;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int levelSelected;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int unlockedDifficulty;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int difficultySelected;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int unlockedLevelDifficulty;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int calcNewLevel;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool unlockedlevel;

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x11C7F4C", Offset = "0x11C7F4C", VA = "0x11C7F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x11C7FA8", Offset = "0x11C7FA8", VA = "0x11C7FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x11C8020", Offset = "0x11C8020", VA = "0x11C8020")]
	public void showResults()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x11C9134", Offset = "0x11C9134", VA = "0x11C9134")]
	private void RankCalculate()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x11C9610", Offset = "0x11C9610", VA = "0x11C9610")]
	private void Unlocking()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x11C9950", Offset = "0x11C9950", VA = "0x11C9950")]
	public Results()
	{
	}
}
[Token(Token = "0x2000238")]
public class ResultsGameOver : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ResultsGameOver Instance;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI yourPoints;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI bestPoints;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI longestChain;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI hits;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI accuracy;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI misses;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI livesLost;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI treasures;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI highestForce;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Gold;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Gold1;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Gold2;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Gold3;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Gold4;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Gold5;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RadialDisplayIndicator accuracyDisplayRing;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RadialDisplayIndicator powerDisplayRing;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x11C99B8", Offset = "0x11C99B8", VA = "0x11C99B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x11C9A04", Offset = "0x11C9A04", VA = "0x11C9A04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x11C9A08", Offset = "0x11C9A08", VA = "0x11C9A08")]
	public void showResults()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x11CA420", Offset = "0x11CA420", VA = "0x11CA420")]
	public ResultsGameOver()
	{
	}
}
[Token(Token = "0x2000239")]
public class Saber : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	[CompilerGenerated]
	private sealed class <SlashSoundActiveL>d__63 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x170000F5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x11CD878", Offset = "0x11CD878", VA = "0x11CD878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x11CD8C0", Offset = "0x11CD8C0", VA = "0x11CD8C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x11CD63C", Offset = "0x11CD63C", VA = "0x11CD63C")]
		[DebuggerHidden]
		public <SlashSoundActiveL>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x11CD774", Offset = "0x11CD774", VA = "0x11CD774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x11CD778", Offset = "0x11CD778", VA = "0x11CD778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x11CD880", Offset = "0x11CD880", VA = "0x11CD880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023B")]
	[CompilerGenerated]
	private sealed class <SlashSoundActiveR>d__64 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x170000F7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x11CDA20", Offset = "0x11CDA20", VA = "0x11CDA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x11CDA68", Offset = "0x11CDA68", VA = "0x11CDA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x11CD664", Offset = "0x11CD664", VA = "0x11CD664")]
		[DebuggerHidden]
		public <SlashSoundActiveR>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x11CD91C", Offset = "0x11CD91C", VA = "0x11CD91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x11CD920", Offset = "0x11CD920", VA = "0x11CD920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x11CDA28", Offset = "0x11CDA28", VA = "0x11CDA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layer;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.Vector3 privousPos;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float saberSize;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float saberLength;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material crossMaterial;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float blend;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private UnityEngine.Vector3 hitnormal;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask GunIgnoreLayer;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro LeftForce;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro RightForce;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int hitIntensity;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource source;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip kickCLip;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<AudioClip> audiofiles;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float kickVolume;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float effectVolume;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioClip[] Bladeclips;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int randomClip;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float randomLevel;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip audioHit;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip audioMiss;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip deflectAudio;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject OnBladesparkL;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject OnBladesparkR;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float accuracy;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool explosion;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float explosionForceBlue;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float explosionForceRed;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private UnityEngine.Vector3 bottomBounds;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UnityEngine.Vector3 topBounds;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float bottomBoundsAdded;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float topBoundsAdded;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float boundsCompare;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int bonus;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject cube;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private UnityEngine.Vector3 cutPositon;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion cutRotation;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private UnityEngine.Vector3 cutScale;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Material DissolveMaterial;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SimpleShoot simpleshootScriptGun;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float hapticsduration;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float hapticsdurationWrong;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private UnityEngine.Vector3 maxScale;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private UnityEngine.Vector3 HullVelocity;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public BladeVelocity rightBladeVelocity;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public BladeVelocity leftBladeVelcoity;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform FistTopTrans;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform FistButtomTrans;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject shatterSphere;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Quaternion rotationCompensation;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private RaycastHit hit;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool hitBool;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float explosionForceRedMulti;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float explosionRadiusRed;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float explosionForceBlueMulti;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float explosionRadiusBlue;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private WaitForSecondsRealtime delayL;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private WaitForSecondsRealtime delayR;

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x11CA428", Offset = "0x11CA428", VA = "0x11CA428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x11CA4C4", Offset = "0x11CA4C4", VA = "0x11CA4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x11CCB0C", Offset = "0x11CCB0C", VA = "0x11CCB0C")]
	public void AddHullComponents(GameObject go)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x11CC9DC", Offset = "0x11CC9DC", VA = "0x11CC9DC")]
	public SlicedHull SliceObject(GameObject obj, [Optional] Material crossSectionMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x11CD50C", Offset = "0x11CD50C", VA = "0x11CD50C")]
	[IteratorStateMachine(typeof(<SlashSoundActiveL>d__63))]
	private IEnumerator<float> SlashSoundActiveL()
	{
		return null;
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x11CD088", Offset = "0x11CD088", VA = "0x11CD088")]
	[IteratorStateMachine(typeof(<SlashSoundActiveR>d__64))]
	private IEnumerator<float> SlashSoundActiveR()
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x11CD68C", Offset = "0x11CD68C", VA = "0x11CD68C")]
	public Saber()
	{
	}
}
[Token(Token = "0x200023C")]
public class ScaleInARow : MonoBehaviour
{
	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] ObjectsToScale;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x11CDAC4", Offset = "0x11CDAC4", VA = "0x11CDAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x11CDAC8", Offset = "0x11CDAC8", VA = "0x11CDAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x11CDACC", Offset = "0x11CDACC", VA = "0x11CDACC")]
	public ScaleInARow()
	{
	}
}
[Token(Token = "0x200023D")]
public class Scores : MonoBehaviour
{
	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <LowHealth>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x11D1BDC", Offset = "0x11D1BDC", VA = "0x11D1BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x11D1C24", Offset = "0x11D1C24", VA = "0x11D1C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x11D1A00", Offset = "0x11D1A00", VA = "0x11D1A00")]
		[DebuggerHidden]
		public <LowHealth>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x11D1A6C", Offset = "0x11D1A6C", VA = "0x11D1A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x11D1A70", Offset = "0x11D1A70", VA = "0x11D1A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x11D1BE4", Offset = "0x11D1BE4", VA = "0x11D1BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[CompilerGenerated]
	private sealed class <HpCoolDown>d__120 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scores <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x11D1CE4", Offset = "0x11D1CE4", VA = "0x11D1CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x11D1D2C", Offset = "0x11D1D2C", VA = "0x11D1D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x11D1A28", Offset = "0x11D1A28", VA = "0x11D1A28")]
		[DebuggerHidden]
		public <HpCoolDown>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x11D1C2C", Offset = "0x11D1C2C", VA = "0x11D1C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x11D1C30", Offset = "0x11D1C30", VA = "0x11D1C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x11D1CEC", Offset = "0x11D1CEC", VA = "0x11D1CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Scores Instance;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float accuracyFloat;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int spawnsTotal;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int hitsTotal;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int missesTotal;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float hForce;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRMenue vrMenu;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject menueCube;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int hp;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int hpLost;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int Gold;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro scoreText;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro chainText;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro text;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider audioSlider;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioplayerSource;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioSourceAchievement;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip audioEnemyHit;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip audioAwesome;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip audioAchievement;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip audioBullseye;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int startmoveScore;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int maxChain;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int sparkStart;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject heart1;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject heart2;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject heart3;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject steamR;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject steamL;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material heatDistortion;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float HeatLerpTime;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool levelLost;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SimpleShoot simpleShootLGun;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SimpleShoot simpleShootRGun;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SimpleShoot simpleShootLFist;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SimpleShoot simpleShootRFist;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform scoretransform;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject levelWon;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float GoalDistance;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool achievementPlay;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static float chainTimer;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float maxChainTime;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float strongestHit;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float powerRun;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float powerAccumulated;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float lastAudioTime;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static float lastPlayTime;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static float lastSloMoTime;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int lastGold;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int lastMisses;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static int lastPower;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int lastAccuracy;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static float playTime;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float sloMoTime;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string niceslomoTime;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int frames;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ParticleSystem mysticSphereParticles;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public RadialIndicator radialIndicator;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color ColorOrange;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color ColorRed;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Color ColorGold;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool stopAtEndOfSong;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	private bool hpCoolDown;

	[Token(Token = "0x170000F9")]
	public static int score
	{
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x11CDB20", Offset = "0x11CDB20", VA = "0x11CDB20")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x11CDB68", Offset = "0x11CDB68", VA = "0x11CDB68")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public static int lastScore
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x11CDBB4", Offset = "0x11CDBB4", VA = "0x11CDBB4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x11CDBFC", Offset = "0x11CDBFC", VA = "0x11CDBFC")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public static int lastLevelSelected
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x11CDC48", Offset = "0x11CDC48", VA = "0x11CDC48")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x11CDC90", Offset = "0x11CDC90", VA = "0x11CDC90")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public static int lastDifficultySelected
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x11CDCDC", Offset = "0x11CDCDC", VA = "0x11CDCDC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x11CDD24", Offset = "0x11CDD24", VA = "0x11CDD24")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public static int lastPlaytimeSelected
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x11CDD70", Offset = "0x11CDD70", VA = "0x11CDD70")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x11CDDB8", Offset = "0x11CDDB8", VA = "0x11CDDB8")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public static int chain
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x11CDE04", Offset = "0x11CDE04", VA = "0x11CDE04")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x11CDE4C", Offset = "0x11CDE4C", VA = "0x11CDE4C")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public static int highestChain
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x11CDE98", Offset = "0x11CDE98", VA = "0x11CDE98")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x11CDEE0", Offset = "0x11CDEE0", VA = "0x11CDEE0")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x11CDAD4", Offset = "0x11CDAD4", VA = "0x11CDAD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x11CDF2C", Offset = "0x11CDF2C", VA = "0x11CDF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x11CE4EC", Offset = "0x11CE4EC", VA = "0x11CE4EC")]
	public void SetPlayTime()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x11CE964", Offset = "0x11CE964", VA = "0x11CE964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x11CEE94", Offset = "0x11CEE94", VA = "0x11CEE94")]
	public void SlomOTime()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x11CF1A8", Offset = "0x11CF1A8", VA = "0x11CF1A8")]
	public void AddBonus(int bonus)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x11CF220", Offset = "0x11CF220", VA = "0x11CF220")]
	public void ScoreDataRecord()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x11CE878", Offset = "0x11CE878", VA = "0x11CE878")]
	public void ResetLastScore()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x11CF538", Offset = "0x11CF538", VA = "0x11CF538")]
	public void Obstacle()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x11CF7E4", Offset = "0x11CF7E4", VA = "0x11CF7E4")]
	public void FlyingObstacle(UnityEngine.Vector3 position)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x11CFAC8", Offset = "0x11CFAC8", VA = "0x11CFAC8")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x11CFF2C", Offset = "0x11CFF2C", VA = "0x11CFF2C")]
	public void Bullet()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x11D01D8", Offset = "0x11D01D8", VA = "0x11D01D8")]
	public void ObstacleLaser()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x11D0484", Offset = "0x11D0484", VA = "0x11D0484")]
	public void AmmoHit()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x11D08B4", Offset = "0x11D08B4", VA = "0x11D08B4")]
	public void EasterHit()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x11D0A8C", Offset = "0x11D0A8C", VA = "0x11D0A8C")]
	public void GoldHit()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x11D0CCC", Offset = "0x11D0CCC", VA = "0x11D0CCC")]
	public void Enemy(int scorePoints)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x11CD56C", Offset = "0x11CD56C", VA = "0x11CD56C")]
	public void ChainBreak(Transform btransform)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x11D109C", Offset = "0x11D109C", VA = "0x11D109C")]
	public void ChainBreakNoHit()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x11CD0E8", Offset = "0x11CD0E8", VA = "0x11CD0E8")]
	public void Score(int scorePoints, Transform stransform, bool Left)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x11D1390", Offset = "0x11D1390", VA = "0x11D1390")]
	public void ScorePosition(int scorePoints, UnityEngine.Vector3 scoreposition)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x11D1728", Offset = "0x11D1728", VA = "0x11D1728")]
	public void Scoreposition(Transform transform)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x11D1730", Offset = "0x11D1730", VA = "0x11D1730")]
	public void ScoreCube(int scorePoints)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x11CE174", Offset = "0x11CE174", VA = "0x11CE174")]
	private void HealthSetter(int hpSet)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x11CFBE4", Offset = "0x11CFBE4", VA = "0x11CFBE4")]
	public void ChainbreakCheck(bool hurt, bool difficulty5)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x11D116C", Offset = "0x11D116C", VA = "0x11D116C")]
	public string ScoreTextConverter(int points)
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x11D19A0", Offset = "0x11D19A0", VA = "0x11D19A0")]
	[IteratorStateMachine(typeof(<LowHealth>d__119))]
	private IEnumerator LowHealth()
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x11D1938", Offset = "0x11D1938", VA = "0x11D1938")]
	[IteratorStateMachine(typeof(<HpCoolDown>d__120))]
	private IEnumerator HpCoolDown()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x11D1A50", Offset = "0x11D1A50", VA = "0x11D1A50")]
	public Scores()
	{
	}
}
[Token(Token = "0x2000240")]
public enum FadeType
{
	[Token(Token = "0x4000D69")]
	In,
	[Token(Token = "0x4000D6A")]
	Out
}
[Token(Token = "0x2000241")]
public delegate void FadeChangeHandler(object sender, FadeType fadeType);
[Token(Token = "0x2000242")]
public class ScreenFade : MonoBehaviour
{
	[Token(Token = "0x2000243")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFade <>4__this;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x11D25A4", Offset = "0x11D25A4", VA = "0x11D25A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x11D25EC", Offset = "0x11D25EC", VA = "0x11D25EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x11D22D0", Offset = "0x11D22D0", VA = "0x11D22D0")]
		[DebuggerHidden]
		public <FadeIn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x11D2478", Offset = "0x11D2478", VA = "0x11D2478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x11D247C", Offset = "0x11D247C", VA = "0x11D247C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x11D25AC", Offset = "0x11D25AC", VA = "0x11D25AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFade <>4__this;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x11D2720", Offset = "0x11D2720", VA = "0x11D2720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x11D2768", Offset = "0x11D2768", VA = "0x11D2768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x11D22F8", Offset = "0x11D22F8", VA = "0x11D22F8")]
		[DebuggerHidden]
		public <FadeOut>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x11D25F4", Offset = "0x11D25F4", VA = "0x11D25F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x11D25F8", Offset = "0x11D25F8", VA = "0x11D25F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x11D2728", Offset = "0x11D2728", VA = "0x11D2728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material fadeMaterial;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFading;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly YieldInstruction fadeInstruction;

	[Token(Token = "0x17000104")]
	public bool Fading
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x11D1F18", Offset = "0x11D1F18", VA = "0x11D1F18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000011")]
	public event FadeChangeHandler FadeChanged
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x11D1F20", Offset = "0x11D1F20", VA = "0x11D1F20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x11D1FBC", Offset = "0x11D1FBC", VA = "0x11D1FBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x11D2058", Offset = "0x11D2058", VA = "0x11D2058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x11D20EC", Offset = "0x11D20EC", VA = "0x11D20EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x11D2174", Offset = "0x11D2174", VA = "0x11D2174")]
	private void LevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x11D2194", Offset = "0x11D2194", VA = "0x11D2194")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x11D2224", Offset = "0x11D2224", VA = "0x11D2224")]
	public void Fade(FadeType fadeType)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x11D210C", Offset = "0x11D210C", VA = "0x11D210C")]
	[IteratorStateMachine(typeof(<FadeIn>d__15))]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x11D2268", Offset = "0x11D2268", VA = "0x11D2268")]
	[IteratorStateMachine(typeof(<FadeOut>d__16))]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x11D2320", Offset = "0x11D2320", VA = "0x11D2320")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x11D23FC", Offset = "0x11D23FC", VA = "0x11D23FC")]
	public ScreenFade()
	{
	}
}
[Token(Token = "0x2000245")]
public class SetVolume : MonoBehaviour
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float defaultMax;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentValue;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider effectsSlider;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider playerSlider;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider ambienceSlider;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SettingsPanel;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LevelPanel;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject AchPanel;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI messageText;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject WorldScores;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject LocalScores;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject User;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle yurActive;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HighScoreTableOrg highScoreTable;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Toggle TogglePinkToBlue;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Toggle ToggleGreenToOrange;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Toggle ToggleShowPoints;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Toggle ToggleShowHUD;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Toggle ToggleYurActive;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Toggle ToggleDirection;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x11D2770", Offset = "0x11D2770", VA = "0x11D2770")]
	public void SetEffectsVol(float volume)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x11D27D4", Offset = "0x11D27D4", VA = "0x11D27D4")]
	public void SetPlayerVol(float volume)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x11D2874", Offset = "0x11D2874", VA = "0x11D2874")]
	public void SetAmbienceVol(float volume)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x11D28D8", Offset = "0x11D28D8", VA = "0x11D28D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x11D2A6C", Offset = "0x11D2A6C", VA = "0x11D2A6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x11D2B5C", Offset = "0x11D2B5C", VA = "0x11D2B5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x11D2CA0", Offset = "0x11D2CA0", VA = "0x11D2CA0")]
	public void OpenSettings()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x11D2CEC", Offset = "0x11D2CEC", VA = "0x11D2CEC")]
	public void OpenLevelPanel()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x11D2D38", Offset = "0x11D2D38", VA = "0x11D2D38")]
	public void OpenAchPanel()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x11D2D84", Offset = "0x11D2D84", VA = "0x11D2D84")]
	public void OpenWorldScores()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x11D2E94", Offset = "0x11D2E94", VA = "0x11D2E94")]
	public void OpenLocalScores()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x11D2EF0", Offset = "0x11D2EF0", VA = "0x11D2EF0")]
	public void OpenUserScreen()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x11D2F3C", Offset = "0x11D2F3C", VA = "0x11D2F3C")]
	public SetVolume()
	{
	}
}
[Token(Token = "0x2000246")]
public class SimpleCameraFollow : MonoBehaviour
{
	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform follow;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal UnityEngine.Vector3 offset;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x11D2F44", Offset = "0x11D2F44", VA = "0x11D2F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x11D2FAC", Offset = "0x11D2FAC", VA = "0x11D2FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x11D309C", Offset = "0x11D309C", VA = "0x11D309C")]
	public SimpleCameraFollow()
	{
	}
}
[Token(Token = "0x2000247")]
public class SimpleShoot : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[CompilerGenerated]
	private sealed class <ShootLightRActive>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleShoot <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x11D5888", Offset = "0x11D5888", VA = "0x11D5888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x11D58D0", Offset = "0x11D58D0", VA = "0x11D58D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x11D57D0", Offset = "0x11D57D0", VA = "0x11D57D0")]
		[DebuggerHidden]
		public <ShootLightRActive>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x11D57F8", Offset = "0x11D57F8", VA = "0x11D57F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x11D57FC", Offset = "0x11D57FC", VA = "0x11D57FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x11D5890", Offset = "0x11D5890", VA = "0x11D5890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <ShootLightLActive>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleShoot <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x11D5990", Offset = "0x11D5990", VA = "0x11D5990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x11D59D8", Offset = "0x11D59D8", VA = "0x11D59D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x11D58D8", Offset = "0x11D58D8", VA = "0x11D58D8")]
		[DebuggerHidden]
		public <ShootLightLActive>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x11D5900", Offset = "0x11D5900", VA = "0x11D5900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x11D5904", Offset = "0x11D5904", VA = "0x11D5904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x11D5998", Offset = "0x11D5998", VA = "0x11D5998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024A")]
	[CompilerGenerated]
	private sealed class <TextLAnimate>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleShoot <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x11D5A98", Offset = "0x11D5A98", VA = "0x11D5A98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x11D5AE0", Offset = "0x11D5AE0", VA = "0x11D5AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x11D59E0", Offset = "0x11D59E0", VA = "0x11D59E0")]
		[DebuggerHidden]
		public <TextLAnimate>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x11D5A08", Offset = "0x11D5A08", VA = "0x11D5A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x11D5A0C", Offset = "0x11D5A0C", VA = "0x11D5A0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x11D5AA0", Offset = "0x11D5AA0", VA = "0x11D5AA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024B")]
	[CompilerGenerated]
	private sealed class <TextRAnimate>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleShoot <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x11D5BA0", Offset = "0x11D5BA0", VA = "0x11D5BA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x11D5BE8", Offset = "0x11D5BE8", VA = "0x11D5BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x11D5AE8", Offset = "0x11D5AE8", VA = "0x11D5AE8")]
		[DebuggerHidden]
		public <TextRAnimate>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x11D5B10", Offset = "0x11D5B10", VA = "0x11D5B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x11D5B14", Offset = "0x11D5B14", VA = "0x11D5B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x11D5BA8", Offset = "0x11D5BA8", VA = "0x11D5BA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask IgnoreMe;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask IgnoreMe2;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask IgnoreMe3;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask IgnoreMe4;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask IgnoreMe5;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask IgnoreMe6;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask IgnoreMe7;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxammo;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int shootdistance;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int currentammoR;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int currentammoL;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro textL;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro textR;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro textRBlue;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject line;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject aimLine;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject aimLineLaser;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool aimAssist;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float aimAssistSize;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private RaycastHit hitLineInfo;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool hasHit;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool hasHitLine;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool levelHit;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VolumetricLineBehavior SaberLineL;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VolumetricLineBehavior SaberLineR;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Animator LeftAnimator;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator RightAnimator;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject casingPrefab;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject muzzleFlashPrefab;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform barrelLocation;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform casingExitLocation;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject RightTrigger;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject RightSloMoTrigger;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject LeftTrigger;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioSource source;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioClip fire;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioClip fireHaptic;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioClip reload;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioClip recharge;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip noammo;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip goldSound;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Animator anim;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private UnityEngine.Vector3[] nirvana;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float shotPower;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public UnityEngine.Vector3 shotVelocity;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Scores scorePoints;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public VRMenue vrmenue;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Scores score;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float H;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float S;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float V;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Color newColor;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Color baseColorR;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private Color baseColorL;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Autoreload;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Light ShootLightL;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Light ShootLightR;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float hapticsdurationHit;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float hapticsdurationShoot;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool shootLeft;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float shootRight;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float timerTimeL;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float countTimeL;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timerTimeR;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float countTimeR;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private WaitForSecondsRealtime shootRwait;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private WaitForSecondsRealtime shootLwait;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x11D30A4", Offset = "0x11D30A4", VA = "0x11D30A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x11D069C", Offset = "0x11D069C", VA = "0x11D069C")]
	public void Reload(int amount)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x11D33B8", Offset = "0x11D33B8", VA = "0x11D33B8")]
	public float Map(float value, float sourceMin, float sourceMax, float destMin, float destMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x11D33D4", Offset = "0x11D33D4", VA = "0x11D33D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x11D3714", Offset = "0x11D3714", VA = "0x11D3714")]
	public void EnemyShoot()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x11D39AC", Offset = "0x11D39AC", VA = "0x11D39AC")]
	public void HitHaptics()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x11D3BA0", Offset = "0x11D3BA0", VA = "0x11D3BA0")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x11D5208", Offset = "0x11D5208", VA = "0x11D5208")]
	public void Aim()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x11D5478", Offset = "0x11D5478", VA = "0x11D5478")]
	private void CasingRelease()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x11D547C", Offset = "0x11D547C", VA = "0x11D547C")]
	[IteratorStateMachine(typeof(<ShootLightRActive>d__79))]
	private IEnumerator ShootLightRActive()
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x11D54E4", Offset = "0x11D54E4", VA = "0x11D54E4")]
	[IteratorStateMachine(typeof(<ShootLightLActive>d__80))]
	private IEnumerator ShootLightLActive()
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x11D3350", Offset = "0x11D3350", VA = "0x11D3350")]
	[IteratorStateMachine(typeof(<TextLAnimate>d__81))]
	private IEnumerator TextLAnimate()
	{
		return null;
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x11D32E8", Offset = "0x11D32E8", VA = "0x11D32E8")]
	[IteratorStateMachine(typeof(<TextRAnimate>d__82))]
	private IEnumerator TextRAnimate()
	{
		return null;
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x11D554C", Offset = "0x11D554C", VA = "0x11D554C")]
	private Color SaberColorlighter(Color currentColor, string saber)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x11D5178", Offset = "0x11D5178", VA = "0x11D5178")]
	public void EasterEggHit()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x11D56C0", Offset = "0x11D56C0", VA = "0x11D56C0")]
	public SimpleShoot()
	{
	}
}
[Token(Token = "0x200024C")]
public class SkyBox : AudioSyncer
{
	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x11D5BF0", Offset = "0x11D5BF0", VA = "0x11D5BF0")]
	public SkyBox()
	{
	}
}
[Token(Token = "0x200024D")]
public class SparkTimer : MonoBehaviour
{
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sparkDelay;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float sparktimer;

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x11D5BF8", Offset = "0x11D5BF8", VA = "0x11D5BF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x11D5C00", Offset = "0x11D5C00", VA = "0x11D5C00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x11D5C2C", Offset = "0x11D5C2C", VA = "0x11D5C2C")]
	public SparkTimer()
	{
	}
}
[Token(Token = "0x200024E")]
public class spawnandDelete : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <waitforDelete>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public spawnandDelete <>4__this;

		[Token(Token = "0x17000111")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x11D6344", Offset = "0x11D6344", VA = "0x11D6344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x11D638C", Offset = "0x11D638C", VA = "0x11D638C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x11D6014", Offset = "0x11D6014", VA = "0x11D6014")]
		[DebuggerHidden]
		public <waitforDelete>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x11D60CC", Offset = "0x11D60CC", VA = "0x11D60CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x11D60D0", Offset = "0x11D60D0", VA = "0x11D60D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x11D634C", Offset = "0x11D634C", VA = "0x11D634C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> preload;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> preloadcache;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool activated;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 tempTRans;

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x11D5C3C", Offset = "0x11D5C3C", VA = "0x11D5C3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x11D5FAC", Offset = "0x11D5FAC", VA = "0x11D5FAC")]
	[IteratorStateMachine(typeof(<waitforDelete>d__5))]
	private IEnumerator<float> waitforDelete()
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x11D603C", Offset = "0x11D603C", VA = "0x11D603C")]
	public spawnandDelete()
	{
	}
}
[Token(Token = "0x2000250")]
public class spawnerCSV1 : MonoBehaviour
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] cubes;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] points;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float beat;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float bpm;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xteTakt;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int randompointBlue;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int randompointRed;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int secondPoint;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int randomRotation;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int secondRotation;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int randomSphereTrigger;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool enemyRuninScene;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool enemyCrouchInScene;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x11D63E8", Offset = "0x11D63E8", VA = "0x11D63E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x11D6454", Offset = "0x11D6454", VA = "0x11D6454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x11D6678", Offset = "0x11D6678", VA = "0x11D6678")]
	public void triggerEnemyRun()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x11D6680", Offset = "0x11D6680", VA = "0x11D6680")]
	public void triggerEnemyCrouch()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x11D6688", Offset = "0x11D6688", VA = "0x11D6688")]
	public spawnerCSV1()
	{
	}
}
[Token(Token = "0x2000251")]
public class SphereExplode : MonoBehaviour
{
	[Token(Token = "0x2000252")]
	[CompilerGenerated]
	private sealed class <Deactiwaiter>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SphereExplode <>4__this;

		[Token(Token = "0x17000113")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x11D7440", Offset = "0x11D7440", VA = "0x11D7440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x11D7488", Offset = "0x11D7488", VA = "0x11D7488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x11D72A4", Offset = "0x11D72A4", VA = "0x11D72A4")]
		[DebuggerHidden]
		public <Deactiwaiter>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x11D73E4", Offset = "0x11D73E4", VA = "0x11D73E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x11D73E8", Offset = "0x11D73E8", VA = "0x11D73E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x11D7448", Offset = "0x11D7448", VA = "0x11D7448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SelectObjectToDeactivate;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int ShootPointsMulitplier;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int points;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceToTarget;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float calculatePoints;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 hitVector;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DestroyInSeconds destroyInSeconds;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] slices;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 cutPosition;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion cutRotation;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Scores scores;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool projectileHit;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private UnityEngine.Vector3 bulletPosition;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool collidingWithPortal;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x11D6690", Offset = "0x11D6690", VA = "0x11D6690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x11D66E0", Offset = "0x11D66E0", VA = "0x11D66E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x11D7058", Offset = "0x11D7058", VA = "0x11D7058")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x11D67A0", Offset = "0x11D67A0", VA = "0x11D67A0")]
	public void DeadSphere(UnityEngine.Vector3 hit)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x11D723C", Offset = "0x11D723C", VA = "0x11D723C")]
	[IteratorStateMachine(typeof(<Deactiwaiter>d__19))]
	private IEnumerator<float> Deactiwaiter()
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x11D72CC", Offset = "0x11D72CC", VA = "0x11D72CC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x11D73D4", Offset = "0x11D73D4", VA = "0x11D73D4")]
	public SphereExplode()
	{
	}
}
[Token(Token = "0x2000253")]
public class SphereHitLaser : MonoBehaviour
{
	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject collisonObject;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x11D74E4", Offset = "0x11D74E4", VA = "0x11D74E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x11D7588", Offset = "0x11D7588", VA = "0x11D7588")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x11D77A8", Offset = "0x11D77A8", VA = "0x11D77A8")]
	public SphereHitLaser()
	{
	}
}
[Token(Token = "0x2000254")]
public class Sphereshot : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int shotPower;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fireLocation;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x11D77B0", Offset = "0x11D77B0", VA = "0x11D77B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x11D7800", Offset = "0x11D7800", VA = "0x11D7800")]
	public void SphereShoot()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x11D7A98", Offset = "0x11D7A98", VA = "0x11D7A98")]
	public Sphereshot()
	{
	}
}
[Token(Token = "0x2000255")]
public class SuperHot : MonoBehaviour
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject bullet;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x11D7AA8", Offset = "0x11D7AA8", VA = "0x11D7AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x11D7AAC", Offset = "0x11D7AAC", VA = "0x11D7AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x11D7BD0", Offset = "0x11D7BD0", VA = "0x11D7BD0")]
	public SuperHot()
	{
	}
}
[Token(Token = "0x2000256")]
public class SuperHotScript : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	[CompilerGenerated]
	private sealed class <ButtonCool>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SuperHotScript <>4__this;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x11DB860", Offset = "0x11DB860", VA = "0x11DB860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x11DB8A8", Offset = "0x11DB8A8", VA = "0x11DB8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x11DABF8", Offset = "0x11DABF8", VA = "0x11DABF8")]
		[DebuggerHidden]
		public <ButtonCool>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11DB7A8", Offset = "0x11DB7A8", VA = "0x11DB7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11DB7AC", Offset = "0x11DB7AC", VA = "0x11DB7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x11DB868", Offset = "0x11DB868", VA = "0x11DB868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Header("References")]
	public static SuperHotScript instance;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scores scores;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool MenuActive;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Saber saberL;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Saber saberR;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightHand;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody leftRB;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftHand;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rightRB;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform PlayerCamera;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject LeftHandGun;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject LeftFist;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject RightHandGun;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject RightFist;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject RightGunText_Pink;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject RightGunEffect_Pink;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject RightShineEffect_Pink;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject RightBladeSaber_Pink;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject RightBladeSaber_PinkSpark;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject RightBladeSaber_PinkLines;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject RightBladeSaber_PinkAura;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject RightBladeSaber_PinkWave1;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject RightBladeSaber_PinkWave2;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject RightBladeSaber_PinkWave3;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject RightAmmoEffect;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject RightBladeTrail;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material RightFlareLine;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material RightFlareCircle;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject RightBoxText_Pink;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject RightBox_PinkSaber;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject RightBox_PinkSaber1;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject RightBox_PinkWave;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Material ShootLaserRightStatic;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material ShootLaserRight;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material RightHitTargetEye;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject RightGun;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject RightTrigger;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject RightGold;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject RightRing;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject RightSaberPoly;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material RightGlowMaterial;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material LeftGlowMaterial;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject LeftGunText;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject LeftGunEffect;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject LeftShineEffect;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject LeftBladeSaber;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject LeftBladeSpark;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject LeftBladeSaberLines;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject LeftBladeAura;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject LeftBladeSaberWave1;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject LeftBladeSaberWave2;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject LeftBladeSaberWave3;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject LeftAmmoEffect;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject LeftBladeTrail;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Material LeftFlareLine;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Material LeftFlareCircle;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject LeftBoxText;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject LeftBox_Saber;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject LeftBox_Saber1;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject LeftBox_Wave;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Material ShootLaserLeftStatic;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Material ShootLaserLeft;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material LeftHitTargetEye;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject LeftGun;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject LeftTrigger;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject LeftGold;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject LeftRing;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject LeftSaberPoly;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color RightColor;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Color LeftColor;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject RightGunText_Blue;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject RightGunEffect_Blue;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject RightShineEffect_Blue;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject RightBlade_Blue;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject RightBladeSaber_Blue;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject RightHandLine;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject LeftHandLine;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject UISphere;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float minTime;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float maxTime;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float minTimeLerp;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float maxTimeLerp;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private UnityEngine.Vector3 leftHandPrev;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private UnityEngine.Vector3 leftHandPrevFull;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private UnityEngine.Vector3 rightHandPrev;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private UnityEngine.Vector3 rightHandPrevFull;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float RightHandVelocityM;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float LeftHandVelocityM;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float previousAngleL;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float dampenedL;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float previousAngleR;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float dampenedR;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float charge;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public bool canShoot;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
	public bool action;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject bullet;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Material GunCrystal;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Transform bulletSpawner;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float RF;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float LF;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private float slowTime;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[Header("Weapon")]
	public WeaponScript weapon;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Transform weaponHolder;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public LayerMask weaponLayer;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[Space]
	[Space]
	[Header("Prefabs")]
	[Header("UI")]
	public GameObject hitParticlePrefab;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[Header("Slashing Sounds")]
	[Space]
	public AudioClip audioSwooshLeft;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public AudioClip audioSwooshRight;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public AudioSource audiosourceLeft;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioSource audiosourceRight;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioSource audioSourceSlash;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public AudioMixerGroup audioMixerGroupSlash;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public bool audioSlashActiveL;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
	public bool audioSlashActiveR;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
	public bool audioSlashTestActive;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[Header("Misc")]
	[Space]
	public AudioSource audioPlayerSource;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool slowMoActive;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Toggle ToggleShowPoints;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool showPoints;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Toggle ToggleShowHUD;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public static bool showHUD;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Toggle ToggleDirection;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool direction;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public GameObject playerNoHit;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public bool RecordHUDOffOverride;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public GameObject ScoreAndChainHUDText;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public GameObject Slider;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Toggle yurFitWatchToggle;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool yurActiveBool;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public GameObject yurFitWatch;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public AudioSource audioSourceSuperHot;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public RadialIndicator radialIndicator;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public AudioClip flexAudio;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool flextime;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public int TimeDevide;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int totalNumberofColors;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private bool buttonCool;

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x11D7BD8", Offset = "0x11D7BD8", VA = "0x11D7BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x11D80D0", Offset = "0x11D80D0", VA = "0x11D80D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x11D90D4", Offset = "0x11D90D4", VA = "0x11D90D4")]
	public void ChangeColor(Color color)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x11D838C", Offset = "0x11D838C", VA = "0x11D838C")]
	public void ChangeStyle()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x11D8A40", Offset = "0x11D8A40", VA = "0x11D8A40")]
	public void ChangeBladeColorRight(Color rightColor)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x11D8478", Offset = "0x11D8478", VA = "0x11D8478")]
	private void SetColorRight(Color RightColor)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x11D9034", Offset = "0x11D9034", VA = "0x11D9034")]
	public void ChangeBladeColorLeft(Color leftColor)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x11D8AE0", Offset = "0x11D8AE0", VA = "0x11D8AE0")]
	private void SetColorLeft(Color LeftColor)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x11D922C", Offset = "0x11D922C", VA = "0x11D922C")]
	public void ChangeYURFit()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x11D93D8", Offset = "0x11D93D8", VA = "0x11D93D8")]
	public void ChangeShowPoints()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x11D951C", Offset = "0x11D951C", VA = "0x11D951C")]
	public void ChangeShowHUD()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x11D9660", Offset = "0x11D9660", VA = "0x11D9660")]
	public void ShowDirection()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x11D97A4", Offset = "0x11D97A4", VA = "0x11D97A4")]
	public void AddOneColor()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x11D9878", Offset = "0x11D9878", VA = "0x11D9878")]
	public void RefreshNumberOfcolors()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x11D98F4", Offset = "0x11D98F4", VA = "0x11D98F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x11DAB90", Offset = "0x11DAB90", VA = "0x11DAB90")]
	[IteratorStateMachine(typeof(<ButtonCool>d__152))]
	private IEnumerator ButtonCool()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x11DAC20", Offset = "0x11DAC20", VA = "0x11DAC20")]
	public static void ActivateMenuTime()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x11DAC7C", Offset = "0x11DAC7C", VA = "0x11DAC7C")]
	public static void DeActivateMenuTime()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x11DACD4", Offset = "0x11DACD4", VA = "0x11DACD4")]
	public static Color GetSaveColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x11D8470", Offset = "0x11D8470", VA = "0x11D8470")]
	public static bool CheckColor(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x11DAF88", Offset = "0x11DAF88", VA = "0x11DAF88")]
	public static void SaveColor(Color color, string key)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x11DB048", Offset = "0x11DB048", VA = "0x11DB048")]
	public static void SaveColorArray(Color[] col, string key)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x11DB158", Offset = "0x11DB158", VA = "0x11DB158")]
	public static Color[] GetSaveColorArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x11DB284", Offset = "0x11DB284", VA = "0x11DB284")]
	public void DisableRendererGun(bool renderit)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x11DB740", Offset = "0x11DB740", VA = "0x11DB740")]
	public SuperHotScript()
	{
	}
}
[Token(Token = "0x2000258")]
[RequireComponent(typeof(AudioSource))]
public class AudioVisualizer : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public class AudioEvent
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float averageDbSample;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] spectrumData;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] dbData;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color spectrumColorRepresetation;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] frequencySplitData;

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x11DBE68", Offset = "0x11DBE68", VA = "0x11DBE68")]
		public AudioEvent()
		{
		}
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource aSource;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] dbSamples;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] spectrumSamples;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int sSampleCount;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volume;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxAverage;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEventListener[] audioListeners;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioEventListener> expandableAudioListeners;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minimumVolume;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x11DB8B0", Offset = "0x11DB8B0", VA = "0x11DB8B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x11DB900", Offset = "0x11DB900", VA = "0x11DB900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x11DBA88", Offset = "0x11DBA88", VA = "0x11DBA88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x11DBE70", Offset = "0x11DBE70", VA = "0x11DBE70")]
	private Color intToColor(int color, int maxVal)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x11DBECC", Offset = "0x11DBECC", VA = "0x11DBECC")]
	public AudioVisualizer()
	{
	}
}
[Token(Token = "0x200025A")]
public class CubeEmitter : MonoBehaviour
{
	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cubePrefab;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float emissionChancePerSecond;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float threshold;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioVisualizer av;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Bounds bounds;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x11DBF2C", Offset = "0x11DBF2C", VA = "0x11DBF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x11DBFB8", Offset = "0x11DBFB8", VA = "0x11DBFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x11DC21C", Offset = "0x11DC21C", VA = "0x11DC21C")]
	public CubeEmitter()
	{
	}
}
[Token(Token = "0x200025B")]
public class Mover : MonoBehaviour
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 direction;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x11DC22C", Offset = "0x11DC22C", VA = "0x11DC22C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x11DC2C0", Offset = "0x11DC2C0", VA = "0x11DC2C0")]
	public Mover()
	{
	}
}
[Token(Token = "0x200025C")]
public class Rotater : MonoBehaviour
{
	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotation;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentRotation;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x11DC2D4", Offset = "0x11DC2D4", VA = "0x11DC2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x11DC33C", Offset = "0x11DC33C", VA = "0x11DC33C")]
	public Rotater()
	{
	}
}
[Token(Token = "0x200025D")]
public class TimedDestroy : MonoBehaviour
{
	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x11DC344", Offset = "0x11DC344", VA = "0x11DC344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x11DC360", Offset = "0x11DC360", VA = "0x11DC360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x11DC3F0", Offset = "0x11DC3F0", VA = "0x11DC3F0")]
	public TimedDestroy()
	{
	}
}
[Token(Token = "0x200025E")]
public class AudioEventListener : MonoBehaviour
{
	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float currentDbAverage;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float maxAverage;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x11DC400", Offset = "0x11DC400", VA = "0x11DC400", Slot = "4")]
	public virtual void OnAudioEvent(AudioVisualizer.AudioEvent audioEvent)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x11DC60C", Offset = "0x11DC60C", VA = "0x11DC60C", Slot = "5")]
	public virtual void ProcessAverageDBSample(float averageSample)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x11DC610", Offset = "0x11DC610", VA = "0x11DC610", Slot = "6")]
	public virtual void ProcessSpectrumSamples(float[] samples)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x11DC614", Offset = "0x11DC614", VA = "0x11DC614", Slot = "7")]
	public virtual void ProcessDBSamples(float[] samples)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x11DC618", Offset = "0x11DC618", VA = "0x11DC618", Slot = "8")]
	public virtual void ProcessRepresentationalColor(Color color)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x11DC61C", Offset = "0x11DC61C", VA = "0x11DC61C", Slot = "9")]
	protected virtual float GetVolumeIncreaseRate()
	{
		return default(float);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x11DC628", Offset = "0x11DC628", VA = "0x11DC628", Slot = "10")]
	protected virtual float GetVolumeDecreaseRate()
	{
		return default(float);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x11DC634", Offset = "0x11DC634", VA = "0x11DC634", Slot = "11")]
	protected virtual float GetMaxAverageDecrease()
	{
		return default(float);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x11DC52C", Offset = "0x11DC52C", VA = "0x11DC52C")]
	protected void CalculateAverageDb(float averageDbSample)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x11DC63C", Offset = "0x11DC63C", VA = "0x11DC63C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x11DC6F4", Offset = "0x11DC6F4", VA = "0x11DC6F4")]
	public AudioEventListener()
	{
	}
}
[Token(Token = "0x200025F")]
public class BasicObjectListener : AudioEventListener
{
	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minSize;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSize;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x11DC6FC", Offset = "0x11DC6FC", VA = "0x11DC6FC", Slot = "5")]
	public override void ProcessAverageDBSample(float averageSample)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x11DC758", Offset = "0x11DC758", VA = "0x11DC758")]
	public BasicObjectListener()
	{
	}
}
[Token(Token = "0x2000260")]
public class LightsListener : AudioEventListener
{
	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light[] lights;

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x11DC76C", Offset = "0x11DC76C", VA = "0x11DC76C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x11DCB18", Offset = "0x11DCB18", VA = "0x11DCB18", Slot = "8")]
	public override void ProcessRepresentationalColor(Color color)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x11DCBA8", Offset = "0x11DCBA8", VA = "0x11DCBA8", Slot = "5")]
	public override void ProcessAverageDBSample(float averageSample)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x11DCC48", Offset = "0x11DCC48", VA = "0x11DCC48")]
	public LightsListener()
	{
	}
}
[Token(Token = "0x2000261")]
public class MovingBasicObjectListener : BasicObjectListener
{
	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UnityEngine.Vector3 direction;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x11DCC50", Offset = "0x11DCC50", VA = "0x11DCC50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x11DCCE4", Offset = "0x11DCCE4", VA = "0x11DCCE4")]
	public MovingBasicObjectListener()
	{
	}
}
[Token(Token = "0x2000262")]
[RequireComponent(typeof(ParticleSystem))]
public class ParticleSystemListener : AudioEventListener
{
	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem1;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem[] subemitters1;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float emissionMultiplier;

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x11DCD00", Offset = "0x11DCD00", VA = "0x11DCD00", Slot = "12")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x11DD0A4", Offset = "0x11DD0A4", VA = "0x11DD0A4", Slot = "5")]
	public override void ProcessAverageDBSample(float averageSample)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x11DD11C", Offset = "0x11DD11C", VA = "0x11DD11C", Slot = "8")]
	public override void ProcessRepresentationalColor(Color color)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x11DD138", Offset = "0x11DD138", VA = "0x11DD138", Slot = "13")]
	public virtual int CalculateEmittedParticles(float averageSample)
	{
		return default(int);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x11DD15C", Offset = "0x11DD15C", VA = "0x11DD15C", Slot = "14")]
	public virtual float CalculateParticleSpeed(float averageSample)
	{
		return default(float);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x11DD16C", Offset = "0x11DD16C", VA = "0x11DD16C")]
	public ParticleSystemListener()
	{
	}
}
[Token(Token = "0x2000263")]
public class ParticleSystemMoverListener : ParticleSystemListener
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UnityEngine.Vector3 movementDirection;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEngine.Vector3 volumeDirection;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float loopDistance;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float movementMultiplier;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UnityEngine.Vector3 basePosition;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Vector3 startPosition;

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x11DD17C", Offset = "0x11DD17C", VA = "0x11DD17C", Slot = "12")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x11DD1D4", Offset = "0x11DD1D4", VA = "0x11DD1D4", Slot = "5")]
	public override void ProcessAverageDBSample(float averageDbSample)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x11DD410", Offset = "0x11DD410", VA = "0x11DD410", Slot = "13")]
	public override int CalculateEmittedParticles(float averageSample)
	{
		return default(int);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x11DD44C", Offset = "0x11DD44C", VA = "0x11DD44C", Slot = "14")]
	public override float CalculateParticleSpeed(float averageSample)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x11DD458", Offset = "0x11DD458", VA = "0x11DD458")]
	public ParticleSystemMoverListener()
	{
	}
}
[Token(Token = "0x2000264")]
public class ParticleSystemObjectListener : ParticleSystemListener
{
	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x11DD470", Offset = "0x11DD470", VA = "0x11DD470", Slot = "5")]
	public override void ProcessAverageDBSample(float averageDbSample)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x11DD4D4", Offset = "0x11DD4D4", VA = "0x11DD4D4", Slot = "8")]
	public override void ProcessRepresentationalColor(Color color)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x11DD588", Offset = "0x11DD588", VA = "0x11DD588", Slot = "11")]
	protected override float GetMaxAverageDecrease()
	{
		return default(float);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x11DD594", Offset = "0x11DD594", VA = "0x11DD594")]
	public ParticleSystemObjectListener()
	{
	}
}
[Token(Token = "0x2000265")]
public class SpeakerListener : AudioEventListener
{
	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Vector3 movementDirection;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 startLocation;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x11DD5A4", Offset = "0x11DD5A4", VA = "0x11DD5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x11DD5D4", Offset = "0x11DD5D4", VA = "0x11DD5D4", Slot = "5")]
	public override void ProcessAverageDBSample(float averageSample)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x11DD63C", Offset = "0x11DD63C", VA = "0x11DD63C")]
	public SpeakerListener()
	{
	}
}
[Token(Token = "0x2000266")]
public class TrailRendererFrequencyListener : TrailRendererListener
{
	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int frequencySpace;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float yScale;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x11DD69C", Offset = "0x11DD69C", VA = "0x11DD69C", Slot = "4")]
	public override void OnAudioEvent(AudioVisualizer.AudioEvent audioEvent)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x11DD6E4", Offset = "0x11DD6E4", VA = "0x11DD6E4")]
	public void ProcessFrequencyDb(float frequencyDb, float averageDbSample)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11DD8C4", Offset = "0x11DD8C4", VA = "0x11DD8C4", Slot = "5")]
	public override void ProcessAverageDBSample(float averageDbSample)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x11DD8C8", Offset = "0x11DD8C8", VA = "0x11DD8C8")]
	public TrailRendererFrequencyListener()
	{
	}
}
[Token(Token = "0x2000267")]
[RequireComponent(typeof(TrailRenderer))]
public class TrailRendererListener : AudioEventListener
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float resetTime;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool upsideDown;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3 basePosition;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x11DD8E0", Offset = "0x11DD8E0", VA = "0x11DD8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x11DD6F4", Offset = "0x11DD6F4", VA = "0x11DD6F4", Slot = "5")]
	public override void ProcessAverageDBSample(float averageDbSample)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x11DD954", Offset = "0x11DD954", VA = "0x11DD954", Slot = "9")]
	protected override float GetVolumeIncreaseRate()
	{
		return default(float);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x11DD95C", Offset = "0x11DD95C", VA = "0x11DD95C", Slot = "10")]
	protected override float GetVolumeDecreaseRate()
	{
		return default(float);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x11DD964", Offset = "0x11DD964", VA = "0x11DD964", Slot = "11")]
	protected override float GetMaxAverageDecrease()
	{
		return default(float);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x11DD8D8", Offset = "0x11DD8D8", VA = "0x11DD8D8")]
	public TrailRendererListener()
	{
	}
}
[Token(Token = "0x2000268")]
public class TrailRendererLowLowListener : TrailRendererListener
{
	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x11DD970", Offset = "0x11DD970", VA = "0x11DD970")]
	public TrailRendererLowLowListener()
	{
	}
}
[Token(Token = "0x2000269")]
public class WaveListener : AudioEventListener
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer[] lineRenderers;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xScale;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yScale;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedOffset;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleOffset;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float sineFade;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mMax;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mCur;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minSin;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] fMax;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] fCur;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x11DD978", Offset = "0x11DD978", VA = "0x11DD978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x11DDA90", Offset = "0x11DDA90", VA = "0x11DDA90", Slot = "4")]
	public override void OnAudioEvent(AudioVisualizer.AudioEvent audioEvent)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x11DDF10", Offset = "0x11DDF10", VA = "0x11DDF10")]
	public WaveListener()
	{
	}
}
[Token(Token = "0x200026A")]
public class TextAnimation : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	[CompilerGenerated]
	private sealed class <FadeTo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetOpacity;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__2;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startOpacity>5__3;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__4;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x11DE520", Offset = "0x11DE520", VA = "0x11DE520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x11DE568", Offset = "0x11DE568", VA = "0x11DE568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x11DE298", Offset = "0x11DE298", VA = "0x11DE298")]
		[DebuggerHidden]
		public <FadeTo>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x11DE438", Offset = "0x11DE438", VA = "0x11DE438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x11DE43C", Offset = "0x11DE43C", VA = "0x11DE43C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x11DE528", Offset = "0x11DE528", VA = "0x11DE528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[CompilerGenerated]
	private sealed class <WaitforSeconds>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextAnimation <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x11DE62C", Offset = "0x11DE62C", VA = "0x11DE62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x11DE674", Offset = "0x11DE674", VA = "0x11DE674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x11DE3AC", Offset = "0x11DE3AC", VA = "0x11DE3AC")]
		[DebuggerHidden]
		public <WaitforSeconds>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x11DE570", Offset = "0x11DE570", VA = "0x11DE570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x11DE574", Offset = "0x11DE574", VA = "0x11DE574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x11DE634", Offset = "0x11DE634", VA = "0x11DE634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026D")]
	[CompilerGenerated]
	private sealed class <FadeInText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAnimation <>4__this;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_TextInfo <textInfo>5__2;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <currentCharacter>5__3;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <startingCharacterRange>5__4;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <isRangeMax>5__5;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <characterCount>5__6;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte <fadeSteps>5__7;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <i>5__8;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x11DEA60", Offset = "0x11DEA60", VA = "0x11DEA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x11DEAA8", Offset = "0x11DEAA8", VA = "0x11DEAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x11DE3D4", Offset = "0x11DE3D4", VA = "0x11DE3D4")]
		[DebuggerHidden]
		public <FadeInText>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x11DE67C", Offset = "0x11DE67C", VA = "0x11DE67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x11DE680", Offset = "0x11DE680", VA = "0x11DE680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x11DEA68", Offset = "0x11DEA68", VA = "0x11DEA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[CompilerGenerated]
	private sealed class <LoadNewScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAnimation <>4__this;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x11DEBD8", Offset = "0x11DEBD8", VA = "0x11DEBD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x11DEC20", Offset = "0x11DEC20", VA = "0x11DEC20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x11DE3FC", Offset = "0x11DE3FC", VA = "0x11DE3FC")]
		[DebuggerHidden]
		public <LoadNewScene>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x11DEAB0", Offset = "0x11DEAB0", VA = "0x11DEAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x11DEAB4", Offset = "0x11DEAB4", VA = "0x11DEAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x11DEBE0", Offset = "0x11DEBE0", VA = "0x11DEBE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI m_TextComponent;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float FadeSpeed;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int RolloverCharacterSpread;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nextText;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRScreenFade1 ovrFade;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SphereMat;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material TriangleMat;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string introString;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x11DDF28", Offset = "0x11DDF28", VA = "0x11DDF28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x11DE014", Offset = "0x11DE014", VA = "0x11DE014")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x11DE21C", Offset = "0x11DE21C", VA = "0x11DE21C")]
	[IteratorStateMachine(typeof(<FadeTo>d__10))]
	private IEnumerator FadeTo(Material material, float targetOpacity, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x11DE0B4", Offset = "0x11DE0B4", VA = "0x11DE0B4")]
	private void NextText()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x11DE334", Offset = "0x11DE334", VA = "0x11DE334")]
	[IteratorStateMachine(typeof(<WaitforSeconds>d__12))]
	private IEnumerator WaitforSeconds(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x11DDFAC", Offset = "0x11DDFAC", VA = "0x11DDFAC")]
	[IteratorStateMachine(typeof(<FadeInText>d__13))]
	private IEnumerator FadeInText()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x11DE2C0", Offset = "0x11DE2C0", VA = "0x11DE2C0")]
	[IteratorStateMachine(typeof(<LoadNewScene>d__14))]
	private IEnumerator LoadNewScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x11DE424", Offset = "0x11DE424", VA = "0x11DE424")]
	public TextAnimation()
	{
	}
}
[Token(Token = "0x200026F")]
public class TimeControl : MonoBehaviour
{
	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float normTime;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float scaleTime;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doSloMo;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool action;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform prevTransform;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float time;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lerpTime;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3 posOffset;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x11DEC28", Offset = "0x11DEC28", VA = "0x11DEC28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x11DEDD0", Offset = "0x11DEDD0", VA = "0x11DEDD0")]
	public TimeControl()
	{
	}
}
[Token(Token = "0x2000270")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[CompilerGenerated]
	private sealed class <Shoot>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RandomPosition;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x11E1BDC", Offset = "0x11E1BDC", VA = "0x11E1BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x11E1C24", Offset = "0x11E1C24", VA = "0x11E1C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x11E16AC", Offset = "0x11E16AC", VA = "0x11E16AC")]
		[DebuggerHidden]
		public <Shoot>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x11E1898", Offset = "0x11E1898", VA = "0x11E1898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x11E189C", Offset = "0x11E189C", VA = "0x11E189C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x11E1BE4", Offset = "0x11E1BE4", VA = "0x11E1BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <ShootFlex>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RandomPosition;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x11E2074", Offset = "0x11E2074", VA = "0x11E2074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x11E20BC", Offset = "0x11E20BC", VA = "0x11E20BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x11E174C", Offset = "0x11E174C", VA = "0x11E174C")]
		[DebuggerHidden]
		public <ShootFlex>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x11E1C2C", Offset = "0x11E1C2C", VA = "0x11E1C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x11E1C30", Offset = "0x11E1C30", VA = "0x11E1C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x11E207C", Offset = "0x11E207C", VA = "0x11E207C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] points;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject clonetext;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject sphere;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject plasmaPortal;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip audioBlue;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip audioRed;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip audioShoot;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip audioMoveShoot;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject player;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Goal;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material LeftColor;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material RightColorPink;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material RightColorBlue;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource audiosSource;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro Gold;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro Gold1;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro Gold2;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro Gold3;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro ShootL;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro ShootR;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro SlomotionL;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshPro SlomotionR;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro EnergyL;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro EnergyR;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject tutorialScreen1;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject tutorialScreen2;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject tutorialScreen3;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject tutorialScreen4;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject tutorialScreen5;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform shooterTrans;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform ShooterLTrans;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform ShooterRTrans;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject PanelMain;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SuperHotScript superHotScriptref;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool tutorialWait;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool tutDone;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int tutState;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int count;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float rythmCount;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float rythmTime;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool Beat;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool Starting;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	private bool Next;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
	private bool NextOne;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool NextOneSlow;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool NextTwo;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	private bool NextThree;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	private bool NextFour;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool HitLeftActive;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool HitRightActive;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float ShootspherSpawnDelay;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float beatsPerSecond;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float secondsPerBeat;

	[Token(Token = "0x1700011F")]
	public static Tutorial tut
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x11DEE34", Offset = "0x11DEE34", VA = "0x11DEE34")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x11DEDE8", Offset = "0x11DEDE8", VA = "0x11DEDE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x11DEE7C", Offset = "0x11DEE7C", VA = "0x11DEE7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x11DF1A0", Offset = "0x11DF1A0", VA = "0x11DF1A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x11DF574", Offset = "0x11DF574", VA = "0x11DF574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x11DF300", Offset = "0x11DF300", VA = "0x11DF300")]
	public void MenuStart()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x11E12CC", Offset = "0x11E12CC", VA = "0x11E12CC")]
	public void MenuDeactivate()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x11DF784", Offset = "0x11DF784", VA = "0x11DF784")]
	public void TutorialStart()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x11E13AC", Offset = "0x11E13AC", VA = "0x11E13AC")]
	public void CubeHitRedOK()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x11E1428", Offset = "0x11E1428", VA = "0x11E1428")]
	public void CubeHitLeftNOK()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x11E14CC", Offset = "0x11E14CC", VA = "0x11E14CC")]
	public void CubeHitRightNOK()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x11D719C", Offset = "0x11D719C", VA = "0x11D719C")]
	public void CubeHitShootNOK()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x11DFD74", Offset = "0x11DFD74", VA = "0x11DFD74")]
	public void TutorialNext()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x11E1570", Offset = "0x11E1570", VA = "0x11E1570")]
	public void CubeHitBlueOK()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x11E027C", Offset = "0x11E027C", VA = "0x11E027C")]
	public void TutorialNextOne()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x11E1634", Offset = "0x11E1634", VA = "0x11E1634")]
	[IteratorStateMachine(typeof(<Shoot>d__71))]
	private IEnumerator Shoot(int RandomPosition)
	{
		return null;
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x11D70C8", Offset = "0x11D70C8", VA = "0x11D70C8")]
	public void ShootOK()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x11E0568", Offset = "0x11E0568", VA = "0x11E0568")]
	public void TutorialNextOneSlow()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x11E16D4", Offset = "0x11E16D4", VA = "0x11E16D4")]
	[IteratorStateMachine(typeof(<ShootFlex>d__74))]
	private IEnumerator ShootFlex(int RandomPosition)
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x11E0870", Offset = "0x11E0870", VA = "0x11E0870")]
	private void TutorialNextTwo()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x11E0C4C", Offset = "0x11E0C4C", VA = "0x11E0C4C")]
	public void TutorialNextThree()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x11E109C", Offset = "0x11E109C", VA = "0x11E109C")]
	private void TutorialNextFour()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x11E1774", Offset = "0x11E1774", VA = "0x11E1774")]
	public void EnemyShootOK()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x11E1890", Offset = "0x11E1890", VA = "0x11E1890")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000273")]
public class VRMenue : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	[CompilerGenerated]
	private sealed class <waiter>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x11E5A50", Offset = "0x11E5A50", VA = "0x11E5A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x11E5A98", Offset = "0x11E5A98", VA = "0x11E5A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x11E40CC", Offset = "0x11E40CC", VA = "0x11E40CC")]
		[DebuggerHidden]
		public <waiter>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x11E594C", Offset = "0x11E594C", VA = "0x11E594C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x11E5950", Offset = "0x11E5950", VA = "0x11E5950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x11E5A58", Offset = "0x11E5A58", VA = "0x11E5A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <LevelWonLongCo>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x11E5B90", Offset = "0x11E5B90", VA = "0x11E5B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x11E5BD8", Offset = "0x11E5BD8", VA = "0x11E5BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x11E5300", Offset = "0x11E5300", VA = "0x11E5300")]
		[DebuggerHidden]
		public <LevelWonLongCo>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x11E5AA0", Offset = "0x11E5AA0", VA = "0x11E5AA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x11E5AA4", Offset = "0x11E5AA4", VA = "0x11E5AA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x11E5B98", Offset = "0x11E5B98", VA = "0x11E5B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[CompilerGenerated]
	private sealed class <LoadNewScene>d__125 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x11E5EB4", Offset = "0x11E5EB4", VA = "0x11E5EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x11E5EFC", Offset = "0x11E5EFC", VA = "0x11E5EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x11E5440", Offset = "0x11E5440", VA = "0x11E5440")]
		[DebuggerHidden]
		public <LoadNewScene>d__125(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x11E5BE0", Offset = "0x11E5BE0", VA = "0x11E5BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x11E5BE4", Offset = "0x11E5BE4", VA = "0x11E5BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x11E5EBC", Offset = "0x11E5EBC", VA = "0x11E5EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[CompilerGenerated]
	private sealed class <FadeInThenActivate>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x11E5FE8", Offset = "0x11E5FE8", VA = "0x11E5FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x11E6030", Offset = "0x11E6030", VA = "0x11E6030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x11E5468", Offset = "0x11E5468", VA = "0x11E5468")]
		[DebuggerHidden]
		public <FadeInThenActivate>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x11E5F04", Offset = "0x11E5F04", VA = "0x11E5F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x11E5F08", Offset = "0x11E5F08", VA = "0x11E5F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x11E5FF0", Offset = "0x11E5FF0", VA = "0x11E5FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private sealed class <FadeOutThenDeactivate>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x11E6118", Offset = "0x11E6118", VA = "0x11E6118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x11E6160", Offset = "0x11E6160", VA = "0x11E6160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x11E5490", Offset = "0x11E5490", VA = "0x11E5490")]
		[DebuggerHidden]
		public <FadeOutThenDeactivate>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x11E6038", Offset = "0x11E6038", VA = "0x11E6038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x11E603C", Offset = "0x11E603C", VA = "0x11E603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x11E6120", Offset = "0x11E6120", VA = "0x11E6120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <DelayClothAndParticleActivation>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenue <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x11E625C", Offset = "0x11E625C", VA = "0x11E625C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x11E62A4", Offset = "0x11E62A4", VA = "0x11E62A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x11E54B8", Offset = "0x11E54B8", VA = "0x11E54B8")]
		[DebuggerHidden]
		public <DelayClothAndParticleActivation>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x11E6168", Offset = "0x11E6168", VA = "0x11E6168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x11E616C", Offset = "0x11E616C", VA = "0x11E616C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x11E6264", Offset = "0x11E6264", VA = "0x11E6264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighScoreTableOrg highScoreTable;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameInfo gameInfo;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scores scores;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text yourScoreText;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text songText;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text songBpmText;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text songTimeText;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text playTimeText;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject clothR;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject clothL;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject trailR;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject trailL;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject LeftHandAnchor;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject RightHandAnchor;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject barrelLocationL;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject barrelLocationR;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject LeftGun;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject RightGun;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject StartButton;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject RestButton;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject WorldButton;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool levelStarted;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool levelWon;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool LevelisLost;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool MenuActive;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask layerMask;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject aimLineLaser;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Audioselector audioselector;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject easyBtn;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Text easytext;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Difficulty difficulty;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AudioSource audioplayer;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource Sound1fadeout;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject loadingScreen;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool loadScene;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public OVRScreenFade1 ovrFade;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject audioSpawner;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject UIhelper;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_InputField name_inputfield;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject WorldsPanel;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject MainPanel;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject NamePanel;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject ResultsPanel;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject GameOverPanel;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject DifficultyButton;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool MainMenu;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool TutMenu;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioSource MenuSound;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject Fog;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Toggle fogToggle;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Toggle SaberStyle;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Toggle BoxStyle;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject TutorialCanvas;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject DeleteYes;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject DeleteNo;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioMixerGroup mixer;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool BoxingStyle;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public SuperHotScript superHotScript;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject ActionWorldHub;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject FitnessWorldHub;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject InfinityWorldHub;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Cubemap ActionProbe;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Cubemap FitnessProbe;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Cubemap InfinityProbe;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject SBLogo;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject FitLogo;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject InfinityLogo;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public static bool randomStage;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool passthrough;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject buttonRandomStage;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private WaitForSecondsRealtime delay;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private string songtimetext;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private string playtime;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public bool fading;

	[Token(Token = "0x17000124")]
	public static VRMenue menu
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x11E2110", Offset = "0x11E2110", VA = "0x11E2110")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x11E20C4", Offset = "0x11E20C4", VA = "0x11E20C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x11E2158", Offset = "0x11E2158", VA = "0x11E2158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x11E31F4", Offset = "0x11E31F4", VA = "0x11E31F4")]
	public void TutorialStart()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x11E2A28", Offset = "0x11E2A28", VA = "0x11E2A28")]
	private void SelectedMode()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x11E3480", Offset = "0x11E3480", VA = "0x11E3480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x11E3CAC", Offset = "0x11E3CAC", VA = "0x11E3CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x11E3E9C", Offset = "0x11E3E9C", VA = "0x11E3E9C")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x11E3F68", Offset = "0x11E3F68", VA = "0x11E3F68")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x11E409C", Offset = "0x11E409C", VA = "0x11E409C")]
	public void Continue()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x11E2958", Offset = "0x11E2958", VA = "0x11E2958")]
	[IteratorStateMachine(typeof(<waiter>d__84))]
	private IEnumerator waiter()
	{
		return null;
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x11E40F4", Offset = "0x11E40F4", VA = "0x11E40F4")]
	public void LoadLevelTutorial()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x11E4190", Offset = "0x11E4190", VA = "0x11E4190")]
	public void LoadLevelViolet()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x11E41E8", Offset = "0x11E41E8", VA = "0x11E41E8")]
	public void LoadLevelOrange()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x11E4240", Offset = "0x11E4240", VA = "0x11E4240")]
	public void LoadLevelYellow()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x11E4298", Offset = "0x11E4298", VA = "0x11E4298")]
	public void LoadLevelBlack()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x11E42F0", Offset = "0x11E42F0", VA = "0x11E42F0")]
	public void LoadLevelStars()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x11E4348", Offset = "0x11E4348", VA = "0x11E4348")]
	public void LoadLevelDark()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x11E43A0", Offset = "0x11E43A0", VA = "0x11E43A0")]
	public void LoadLevelCave()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x11E43F8", Offset = "0x11E43F8", VA = "0x11E43F8")]
	public void LoadLevelWhite()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x11E4450", Offset = "0x11E4450", VA = "0x11E4450")]
	public void LoadLevelIce()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x11E44A8", Offset = "0x11E44A8", VA = "0x11E44A8")]
	public void LoadLevelOcean()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x11E4500", Offset = "0x11E4500", VA = "0x11E4500")]
	public void LoadLevelAvatar()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x11E4558", Offset = "0x11E4558", VA = "0x11E4558")]
	public void LoadLevelLetho()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x11E45B0", Offset = "0x11E45B0", VA = "0x11E45B0")]
	public void LoadLevelIceland()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x11E4608", Offset = "0x11E4608", VA = "0x11E4608")]
	public void LoadLevelTent()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x11E4660", Offset = "0x11E4660", VA = "0x11E4660")]
	public void LoadLevelWorlds()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x11E47F4", Offset = "0x11E47F4", VA = "0x11E47F4")]
	public void LoadLevelWorldsResetScore()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x11E4988", Offset = "0x11E4988", VA = "0x11E4988")]
	public void LoadLevelWorldsOnly()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x11E49E0", Offset = "0x11E49E0", VA = "0x11E49E0")]
	public void ResetWorlds()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11E4A48", Offset = "0x11E4A48", VA = "0x11E4A48")]
	public void LoadCredits()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x11E4AA0", Offset = "0x11E4AA0", VA = "0x11E4AA0")]
	public void Worlds()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x11E4B20", Offset = "0x11E4B20", VA = "0x11E4B20")]
	public void GoBack()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x11E4B58", Offset = "0x11E4B58", VA = "0x11E4B58")]
	public void SelectStyle()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x11E4C24", Offset = "0x11E4C24", VA = "0x11E4C24")]
	public void GoBackResults()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11E4C28", Offset = "0x11E4C28", VA = "0x11E4C28")]
	public void GoBackGameOver()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11E374C", Offset = "0x11E374C", VA = "0x11E374C")]
	public void ActivateMenu()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11E4CF0", Offset = "0x11E4CF0", VA = "0x11E4CF0")]
	public void ResetAllData()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11E4D88", Offset = "0x11E4D88", VA = "0x11E4D88")]
	public void ShowDeleteOptions()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x11E4E10", Offset = "0x11E4E10", VA = "0x11E4E10")]
	public void HideDeleteOptions()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11E264C", Offset = "0x11E264C", VA = "0x11E264C")]
	public void DeactivateMenu()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x11E4EB0", Offset = "0x11E4EB0", VA = "0x11E4EB0")]
	public void ActivateResults()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x11E5070", Offset = "0x11E5070", VA = "0x11E5070")]
	public void ActivateGameOver()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x11E5224", Offset = "0x11E5224", VA = "0x11E5224")]
	public void LevelWon()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x11E5278", Offset = "0x11E5278", VA = "0x11E5278")]
	public void LevelLongWon()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x11E5298", Offset = "0x11E5298", VA = "0x11E5298")]
	[IteratorStateMachine(typeof(<LevelWonLongCo>d__121))]
	public IEnumerator LevelWonLongCo()
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x11E5328", Offset = "0x11E5328", VA = "0x11E5328")]
	public void LevelWonLongSong()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x11E535C", Offset = "0x11E535C", VA = "0x11E535C")]
	public void LevelResults()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x11E5388", Offset = "0x11E5388", VA = "0x11E5388")]
	public void LevelLost()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x11E3EF4", Offset = "0x11E3EF4", VA = "0x11E3EF4")]
	[IteratorStateMachine(typeof(<LoadNewScene>d__125))]
	private IEnumerator LoadNewScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x11E4C88", Offset = "0x11E4C88", VA = "0x11E4C88")]
	[IteratorStateMachine(typeof(<FadeInThenActivate>d__127))]
	private IEnumerator FadeInThenActivate()
	{
		return null;
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x11E4E48", Offset = "0x11E4E48", VA = "0x11E4E48")]
	[IteratorStateMachine(typeof(<FadeOutThenDeactivate>d__128))]
	private IEnumerator FadeOutThenDeactivate()
	{
		return null;
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x11E29C0", Offset = "0x11E29C0", VA = "0x11E29C0")]
	[IteratorStateMachine(typeof(<DelayClothAndParticleActivation>d__129))]
	private IEnumerator DelayClothAndParticleActivation()
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x11E54E0", Offset = "0x11E54E0", VA = "0x11E54E0")]
	public void ExternalMenuOpen()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x11E5660", Offset = "0x11E5660", VA = "0x11E5660")]
	public void ExternalMenuClose()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11E58E0", Offset = "0x11E58E0", VA = "0x11E58E0")]
	public VRMenue()
	{
	}
}
[Token(Token = "0x200027A")]
[RequireComponent(typeof(Rigidbody))]
[SelectionBase]
public class WeaponScript : MonoBehaviour
{
	[Token(Token = "0x200027B")]
	[CompilerGenerated]
	private sealed class <Reload>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponScript <>4__this;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x11E6EB0", Offset = "0x11E6EB0", VA = "0x11E6EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x11E6EF8", Offset = "0x11E6EF8", VA = "0x11E6EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x11E6AA4", Offset = "0x11E6AA4", VA = "0x11E6AA4")]
		[DebuggerHidden]
		public <Reload>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x11E6D7C", Offset = "0x11E6D7C", VA = "0x11E6D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x11E6D80", Offset = "0x11E6D80", VA = "0x11E6D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x11E6EB8", Offset = "0x11E6EB8", VA = "0x11E6EB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Bools")]
	public bool active;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool reloading;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider collidert;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer renderert;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	[Header("Weapon Settings")]
	public float reloadTime;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bulletAmount;

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x11E62AC", Offset = "0x11E62AC", VA = "0x11E62AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x11E6350", Offset = "0x11E6350", VA = "0x11E6350")]
	private void ChangeSettings()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x11E6518", Offset = "0x11E6518", VA = "0x11E6518")]
	public void Shoot(UnityEngine.Vector3 pos, Quaternion rot, bool isEnemy)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x11E68D4", Offset = "0x11E68D4", VA = "0x11E68D4")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x11E686C", Offset = "0x11E686C", VA = "0x11E686C")]
	[IteratorStateMachine(typeof(<Reload>d__11))]
	private IEnumerator Reload()
	{
		return null;
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x11E6ACC", Offset = "0x11E6ACC", VA = "0x11E6ACC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x11E6D34", Offset = "0x11E6D34", VA = "0x11E6D34")]
	public WeaponScript()
	{
	}
}
[Token(Token = "0x200027C")]
public class XRInputBinder : MonoBehaviour
{
	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRInputBinder Instance;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool triggerLeft;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool triggerRight;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float triggerLeftFloat;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float triggerRightFloat;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool gripLeftHold;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool gripRightHold;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public static bool buttonLeftHold;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public static bool buttonRightHold;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool triggerMenu;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool triggerHome;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool FocusLost;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public static bool FocusAcquired;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool UserPresent;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool bPauseNow;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public static bool externalMenuOpened;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float ControllerPositionX;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float ControllerPositionY;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float ControllerPositionZ;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float ControllerRotationX;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftControllerAnchor;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightControllerAnchor;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftHandAnchor;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightHandAnchor;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject LIV;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject GraphicsButton;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool SpecattatorOn;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SpectatorCamera;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InputActionManager inputActionManager;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Vector3 newRotation;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x11E6F00", Offset = "0x11E6F00", VA = "0x11E6F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x11E70DC", Offset = "0x11E70DC", VA = "0x11E70DC")]
	public void ChangeSpectator()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x11E729C", Offset = "0x11E729C", VA = "0x11E729C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x11E749C", Offset = "0x11E749C", VA = "0x11E749C")]
	public void ControllerPositionUpdate()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x11E7640", Offset = "0x11E7640", VA = "0x11E7640")]
	public void ControllerPositionDefaults()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11E76AC", Offset = "0x11E76AC", VA = "0x11E76AC")]
	public void OnTriggerLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x11E775C", Offset = "0x11E775C", VA = "0x11E775C")]
	public void OnTriggerRight(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x11E7808", Offset = "0x11E7808", VA = "0x11E7808")]
	public void OnGripLeftHold(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x11E7884", Offset = "0x11E7884", VA = "0x11E7884")]
	public void OnGripRightHold(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x11E7900", Offset = "0x11E7900", VA = "0x11E7900")]
	public void OnButtonLeftHold(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x11E797C", Offset = "0x11E797C", VA = "0x11E797C")]
	public void OnButtonRightHold(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x11E79F8", Offset = "0x11E79F8", VA = "0x11E79F8")]
	public void OnTriggerMenu(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x11E7A84", Offset = "0x11E7A84", VA = "0x11E7A84")]
	public void OnTriggerHome(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11E58C4", Offset = "0x11E58C4", VA = "0x11E58C4")]
	public void EnableInput()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x11E7B10", Offset = "0x11E7B10", VA = "0x11E7B10")]
	public void OnTriggerFocusLost()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x11E7BB0", Offset = "0x11E7BB0", VA = "0x11E7BB0")]
	public void OnTriggerFocusAquired()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x11E7C60", Offset = "0x11E7C60", VA = "0x11E7C60")]
	public void OnUserPresent(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x11E7D60", Offset = "0x11E7D60", VA = "0x11E7D60")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x11E7E48", Offset = "0x11E7E48", VA = "0x11E7E48")]
	public XRInputBinder()
	{
	}
}
[Token(Token = "0x200027D")]
public class ScrollButtonsSystem : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDown;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x11E7EA0", Offset = "0x11E7EA0", VA = "0x11E7EA0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x11E7EAC", Offset = "0x11E7EAC", VA = "0x11E7EAC", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x11E7EB4", Offset = "0x11E7EB4", VA = "0x11E7EB4")]
	public ScrollButtonsSystem()
	{
	}
}
[Token(Token = "0x200027E")]
public class ScrollRectScript : MonoBehaviour
{
	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool mouseDown;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool buttonLeft;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool buttonRight;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x11E7EBC", Offset = "0x11E7EBC", VA = "0x11E7EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x11E7F0C", Offset = "0x11E7F0C", VA = "0x11E7F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x11E7FE8", Offset = "0x11E7FE8", VA = "0x11E7FE8")]
	public void ButtonLeftisPressed()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x11E7FF4", Offset = "0x11E7FF4", VA = "0x11E7FF4")]
	public void ButtonRightisPressed()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x11E7F30", Offset = "0x11E7F30", VA = "0x11E7F30")]
	private void ScrollLeft()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x11E7F8C", Offset = "0x11E7F8C", VA = "0x11E7F8C")]
	private void ScrollRight()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x11E8004", Offset = "0x11E8004", VA = "0x11E8004")]
	public ScrollRectScript()
	{
	}
}
[Token(Token = "0x200027F")]
public class ScrollRectToSelected : MonoBehaviour
{
	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform content;

	[Token(Token = "0x17000133")]
	public static ScrollRectToSelected instance
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x11E8058", Offset = "0x11E8058", VA = "0x11E8058")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x11E800C", Offset = "0x11E800C", VA = "0x11E800C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x11E80A0", Offset = "0x11E80A0", VA = "0x11E80A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x11E80EC", Offset = "0x11E80EC", VA = "0x11E80EC")]
	public void ScrollToRect(float target)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x11E812C", Offset = "0x11E812C", VA = "0x11E812C")]
	public ScrollRectToSelected()
	{
	}
}
[Token(Token = "0x2000280")]
public class ScrollViewSystem : MonoBehaviour
{
	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect _scrollRect;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScrollButtonsSystem _buttomButton;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ScrollButtonsSystem _topButton;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float scrollSpeed;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x11E8134", Offset = "0x11E8134", VA = "0x11E8134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x11E8184", Offset = "0x11E8184", VA = "0x11E8184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x11E8304", Offset = "0x11E8304", VA = "0x11E8304")]
	private void ScrollTop()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x11E8250", Offset = "0x11E8250", VA = "0x11E8250")]
	private void ScrollButtom()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x11E83BC", Offset = "0x11E83BC", VA = "0x11E83BC")]
	public ScrollViewSystem()
	{
	}
}
[Token(Token = "0x2000281")]
public class SelectionPlayer : MonoBehaviour
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> LevelAudio;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TextAsset> midiFiles;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] songName;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string songBPM;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x11E83D0", Offset = "0x11E83D0", VA = "0x11E83D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x11E85D4", Offset = "0x11E85D4", VA = "0x11E85D4")]
	public SelectionPlayer()
	{
	}
}
[Token(Token = "0x2000282")]
public class ShatterExchange : MonoBehaviour
{
	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] unharmed;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shattered;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] shatteredObjects;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] shatteredtransforms;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool HitCrystal;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float radius;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float power;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private objectPooler objectpooler;

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x11E85DC", Offset = "0x11E85DC", VA = "0x11E85DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x11E86BC", Offset = "0x11E86BC", VA = "0x11E86BC")]
	public void Exchange(UnityEngine.Vector3 ExplosionPositon, float Force)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x11E8908", Offset = "0x11E8908", VA = "0x11E8908")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x11E8A30", Offset = "0x11E8A30", VA = "0x11E8A30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x11E8B58", Offset = "0x11E8B58", VA = "0x11E8B58")]
	public ShatterExchange()
	{
	}
}
[Token(Token = "0x2000283")]
public class ShowLeaderBoard : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	[CompilerGenerated]
	private sealed class <ShowLeaaderBoard>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowLeaderBoard <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x11E938C", Offset = "0x11E938C", VA = "0x11E938C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x11E93D4", Offset = "0x11E93D4", VA = "0x11E93D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x11E8C14", Offset = "0x11E8C14", VA = "0x11E8C14")]
		[DebuggerHidden]
		public <ShowLeaaderBoard>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x11E8D04", Offset = "0x11E8D04", VA = "0x11E8D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x11E8D08", Offset = "0x11E8D08", VA = "0x11E8D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x11E9394", Offset = "0x11E9394", VA = "0x11E9394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OnlineLeaderBoard;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LocalLeaderBoard;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LoginScreen;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button localButton;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button worldButton;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI messageText;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x11E8B6C", Offset = "0x11E8B6C", VA = "0x11E8B6C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x11E8BF4", Offset = "0x11E8BF4", VA = "0x11E8BF4")]
	public void triggerShowLeaderboard()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x11E8B8C", Offset = "0x11E8B8C", VA = "0x11E8B8C")]
	[IteratorStateMachine(typeof(<ShowLeaaderBoard>d__8))]
	private IEnumerator ShowLeaaderBoard()
	{
		return null;
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x11E8C3C", Offset = "0x11E8C3C", VA = "0x11E8C3C")]
	public ShowLeaderBoard()
	{
	}
}
[Token(Token = "0x2000286")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float height;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float heightDamping;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotationDamping;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x11E93DC", Offset = "0x11E93DC", VA = "0x11E93DC")]
	[AddComponentMenu("Camera-Control/Smooth Follow")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x11E9710", Offset = "0x11E9710", VA = "0x11E9710")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x2000287")]
public class SpawnAmmoReloadRain : MonoBehaviour
{
	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x11E9724", Offset = "0x11E9724", VA = "0x11E9724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x11E9774", Offset = "0x11E9774", VA = "0x11E9774")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x11E9948", Offset = "0x11E9948", VA = "0x11E9948")]
	public SpawnAmmoReloadRain()
	{
	}
}
[Token(Token = "0x2000288")]
public class SpawnTrail : MonoBehaviour
{
	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x11E9950", Offset = "0x11E9950", VA = "0x11E9950")]
	public SpawnTrail()
	{
	}
}
[Token(Token = "0x2000289")]
public class SpawnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private enemyRunSpawner enemySpawn;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int count;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Difficulty difficulty;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x11E9958", Offset = "0x11E9958", VA = "0x11E9958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x11E99CC", Offset = "0x11E99CC", VA = "0x11E99CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x11E99D0", Offset = "0x11E99D0", VA = "0x11E99D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x11E9A54", Offset = "0x11E9A54", VA = "0x11E9A54")]
	public SpawnTrigger()
	{
	}
}
[Token(Token = "0x200028A")]
public class SphereColorLerp : MonoBehaviour
{
	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color startColor;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color lerpedColor;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool lerpstart;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float blend;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer rend;

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x11E9A5C", Offset = "0x11E9A5C", VA = "0x11E9A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x11E9B50", Offset = "0x11E9B50", VA = "0x11E9B50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x11E9C80", Offset = "0x11E9C80", VA = "0x11E9C80")]
	public void LerpColor()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x11E9C8C", Offset = "0x11E9C8C", VA = "0x11E9C8C")]
	public SphereColorLerp()
	{
	}
}
[Token(Token = "0x200028B")]
public class StageSelection : MonoBehaviour
{
	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject activeWorld;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Stages;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubemap[] Probes;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int random;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previous;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject passthrough;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x11E9C9C", Offset = "0x11E9C9C", VA = "0x11E9C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x11E9E3C", Offset = "0x11E9E3C", VA = "0x11E9E3C")]
	public StageSelection()
	{
	}
}
[Token(Token = "0x200028C")]
public class StartOverlayAnimation : MonoBehaviour
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartOverlayAnimation Instance;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x11E9E44", Offset = "0x11E9E44", VA = "0x11E9E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x11E9E90", Offset = "0x11E9E90", VA = "0x11E9E90")]
	public void MissOverlay()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x11E9F34", Offset = "0x11E9F34", VA = "0x11E9F34")]
	public void DamageOverlay()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x11E9FD8", Offset = "0x11E9FD8", VA = "0x11E9FD8")]
	public void GoldOverlay()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x11EA07C", Offset = "0x11EA07C", VA = "0x11EA07C")]
	public void AmmoOverlay()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x11EA120", Offset = "0x11EA120", VA = "0x11EA120")]
	public StartOverlayAnimation()
	{
	}
}
[Token(Token = "0x200028D")]
[RequireComponent(typeof(Rigidbody))]
public class BuoyantObject : MonoBehaviour
{
	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color red;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color green;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color blue;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color orange;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float steepness;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wavelength;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float speed;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] directions;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Water Object")]
	public StylizedWaterURP water;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(1f, 5f)]
	[Header("Buoyancy")]
	public float strength;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(0.2f, 5f)]
	public float objectDepth;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float velocityDrag;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float angularDrag;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Effectors")]
	public Transform[] effectors;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rb;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityEngine.Vector3[] effectorProjections;

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x11EA128", Offset = "0x11EA128", VA = "0x11EA128")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x11EA258", Offset = "0x11EA258", VA = "0x11EA258")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x11EA278", Offset = "0x11EA278", VA = "0x11EA278")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x11EA548", Offset = "0x11EA548", VA = "0x11EA548")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x11EA820", Offset = "0x11EA820", VA = "0x11EA820")]
	public BuoyantObject()
	{
	}
}
[Token(Token = "0x200028E")]
public class swipe : MonoBehaviour
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colors;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scrollbar;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject imageContent;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float scroll_pos;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] pos;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool runIt;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float time;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Button takeTheBtn;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int btnNumber;

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x11EA8B4", Offset = "0x11EA8B4", VA = "0x11EA8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x11EAED0", Offset = "0x11EAED0", VA = "0x11EAED0")]
	private void GecisiDuzenle(float distance, float[] pos, Button btn)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x11EB0B4", Offset = "0x11EB0B4", VA = "0x11EB0B4")]
	public void WhichBtnClicked(Button btn)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x11EB208", Offset = "0x11EB208", VA = "0x11EB208")]
	public swipe()
	{
	}
}
[Token(Token = "0x200028F")]
public class CanvasKeyboardEditableButton : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas CanvasKeyboardObject;

	[Token(Token = "0x17000136")]
	public string text
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x11EB210", Offset = "0x11EB210", VA = "0x11EB210")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x11EB270", Offset = "0x11EB270", VA = "0x11EB270")]
		set
		{
		}
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x11EB2E0", Offset = "0x11EB2E0", VA = "0x11EB2E0")]
	public void Open()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x11EB308", Offset = "0x11EB308", VA = "0x11EB308")]
	public void Close()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x11EB310", Offset = "0x11EB310", VA = "0x11EB310")]
	public CanvasKeyboardEditableButton()
	{
	}
}
[Token(Token = "0x2000290")]
public class ToggleKeyboard : MonoBehaviour
{
	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x11EB318", Offset = "0x11EB318", VA = "0x11EB318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x11EB3A8", Offset = "0x11EB3A8", VA = "0x11EB3A8")]
	public ToggleKeyboard()
	{
	}
}
[Token(Token = "0x2000291")]
public class ButtonListener : MonoBehaviour
{
	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textSelected;

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x11EB3B0", Offset = "0x11EB3B0", VA = "0x11EB3B0")]
	public void MyClick(GameObject obj)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x11EB644", Offset = "0x11EB644", VA = "0x11EB644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x11EB77C", Offset = "0x11EB77C", VA = "0x11EB77C")]
	public ButtonListener()
	{
	}
}
[Token(Token = "0x2000292")]
public class CubeListener : MonoBehaviour
{
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x11EB784", Offset = "0x11EB784", VA = "0x11EB784")]
	public void MyPointerEnter()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x11EB84C", Offset = "0x11EB84C", VA = "0x11EB84C")]
	public void MyPointerLeave()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x11EB8C0", Offset = "0x11EB8C0", VA = "0x11EB8C0")]
	public CubeListener()
	{
	}
}
[Token(Token = "0x2000293")]
public class GazeCrosshairOnOff : MonoBehaviour
{
	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x11EB8C8", Offset = "0x11EB8C8", VA = "0x11EB8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x11EB930", Offset = "0x11EB930", VA = "0x11EB930")]
	public GazeCrosshairOnOff()
	{
	}
}
[Token(Token = "0x2000294")]
public class GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000295")]
	public enum Mode
	{
		[Token(Token = "0x400102B")]
		Click,
		[Token(Token = "0x400102C")]
		Gaze
	}

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mode mode;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Click Settings")]
	public string ClickInputName;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Gaze Settings")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x11EB938", Offset = "0x11EB938", VA = "0x11EB938", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x11EB950", Offset = "0x11EB950", VA = "0x11EB950")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x11EBB34", Offset = "0x11EBB34", VA = "0x11EBB34")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x11EBEB8", Offset = "0x11EBEB8", VA = "0x11EBEB8")]
	public GazeInputModule()
	{
	}
}
[Token(Token = "0x2000296")]
[RequireComponent(typeof(GazeInputModule))]
public class GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Crosshair GameObject attached to your VR Camera")]
	public Transform Crosshair;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GazeInputModule gazeInputModule;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x11EBF10", Offset = "0x11EBF10", VA = "0x11EBF10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x11EBF60", Offset = "0x11EBF60", VA = "0x11EBF60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x11EBFBC", Offset = "0x11EBFBC", VA = "0x11EBFBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x11EC0B0", Offset = "0x11EC0B0", VA = "0x11EC0B0")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x11EC114", Offset = "0x11EC114", VA = "0x11EC114")]
	public GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000297")]
public class ToggleOption : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SloMoToggle;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool value;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x11EC168", Offset = "0x11EC168", VA = "0x11EC168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x11EC270", Offset = "0x11EC270", VA = "0x11EC270")]
	private void OnValueChanged(bool newValue)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x11EC298", Offset = "0x11EC298", VA = "0x11EC298")]
	public ToggleOption()
	{
	}
}
[Token(Token = "0x2000298")]
public class TriangleExplosion : MonoBehaviour
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private objectPooler objectpooler;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material TriangleMaterial;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh M;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int detail;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SelectObjectToDeactivate;

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x11EC2E8", Offset = "0x11EC2E8", VA = "0x11EC2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x11EC478", Offset = "0x11EC478", VA = "0x11EC478")]
	public void SplitMesh(bool destroy, bool halfDetail, bool quarterDetail)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x11ECBEC", Offset = "0x11ECBEC", VA = "0x11ECBEC")]
	public TriangleExplosion()
	{
	}
}
[Token(Token = "0x2000299")]
public class TriggerTutorialSlomo : MonoBehaviour
{
	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TutorialSloMoTrigger;

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x11ECBFC", Offset = "0x11ECBFC", VA = "0x11ECBFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x11ECC44", Offset = "0x11ECC44", VA = "0x11ECC44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x11ECD14", Offset = "0x11ECD14", VA = "0x11ECD14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x11ECD9C", Offset = "0x11ECD9C", VA = "0x11ECD9C")]
	public TriggerTutorialSlomo()
	{
	}
}
[Token(Token = "0x200029A")]
public class TutorialSkip : MonoBehaviour
{
	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioplayer;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject menuCube;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool skipped;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x11ECDA4", Offset = "0x11ECDA4", VA = "0x11ECDA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x11ECE64", Offset = "0x11ECE64", VA = "0x11ECE64")]
	public TutorialSkip()
	{
	}
}
[Token(Token = "0x200029B")]
public class UIControllerPositionValueY : MonoBehaviour
{
	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float valueY;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text valueText;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x11ECE6C", Offset = "0x11ECE6C", VA = "0x11ECE6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x11ECF9C", Offset = "0x11ECF9C", VA = "0x11ECF9C")]
	public void valueplus()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x11ED108", Offset = "0x11ED108", VA = "0x11ED108")]
	public void valueminus()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x11ED044", Offset = "0x11ED044", VA = "0x11ED044")]
	public void SaveValue()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x11ED1B0", Offset = "0x11ED1B0", VA = "0x11ED1B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x11ED28C", Offset = "0x11ED28C", VA = "0x11ED28C")]
	public UIControllerPositionValueY()
	{
	}
}
[Token(Token = "0x200029C")]
public class UIControllerPositionZ : MonoBehaviour
{
	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float valueZ;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text valueText;

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x11ED294", Offset = "0x11ED294", VA = "0x11ED294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x11ED3C4", Offset = "0x11ED3C4", VA = "0x11ED3C4")]
	public void valueplus()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x11ED530", Offset = "0x11ED530", VA = "0x11ED530")]
	public void valueminus()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x11ED46C", Offset = "0x11ED46C", VA = "0x11ED46C")]
	public void SaveValue()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x11ED5D8", Offset = "0x11ED5D8", VA = "0x11ED5D8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x11ED6B4", Offset = "0x11ED6B4", VA = "0x11ED6B4")]
	public UIControllerPositionZ()
	{
	}
}
[Token(Token = "0x200029D")]
public class AutomaticLOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200029E")]
	public enum EvalMode
	{
		[Token(Token = "0x4001067")]
		CameraDistance,
		[Token(Token = "0x4001068")]
		ScreenCoverage
	}

	[Serializable]
	[Token(Token = "0x200029F")]
	public enum LevelsToGenerate
	{
		[Token(Token = "0x400106A")]
		_1 = 1,
		[Token(Token = "0x400106B")]
		_2,
		[Token(Token = "0x400106C")]
		_3,
		[Token(Token = "0x400106D")]
		_4,
		[Token(Token = "0x400106E")]
		_5,
		[Token(Token = "0x400106F")]
		_6
	}

	[Serializable]
	[Token(Token = "0x20002A0")]
	public enum SwitchMode
	{
		[Token(Token = "0x4001071")]
		SwitchMesh,
		[Token(Token = "0x4001072")]
		SwitchGameObject,
		[Token(Token = "0x4001073")]
		UnityLODGroup
	}

	[Serializable]
	[Token(Token = "0x20002A1")]
	public class LODLevelData
	{
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fScreenCoverage;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fMaxCameraDistance;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fMeshVerticesAmount;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_nColorEditorBarIndex;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh m_mesh;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_bUsesOriginalMesh;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_gameObject;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x11EFF14", Offset = "0x11EFF14", VA = "0x11EFF14")]
		public LODLevelData GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x11F0DB4", Offset = "0x11F0DB4", VA = "0x11F0DB4")]
		public LODLevelData()
		{
		}
	}

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EvalMode m_evalMode;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float m_fMaxCameraDistance;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int m_nColorEditorBarNewIndex;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public List<LODLevelData> m_listLODLevels;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AutomaticLOD m_LODObjectRoot;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<AutomaticLOD> m_listDependentChildren;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private LevelsToGenerate m_levelsToGenerate;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SwitchMode m_switchMode;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[HideInInspector]
	[SerializeField]
	private bool m_bLODDataDirty;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private AutomaticLOD m_LODObjectRootPersist;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	private LODGroup m_LODGroup;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_bUseAutomaticCameraLODSwitch;

	[Token(Token = "0x4001057")]
	private const int k_MaxLODChecksPerFrame = 4;

	[Token(Token = "0x4001058")]
	private const int k_MaxFrameCheckLoop = 100;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_currentCheckIndex;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_currentFrameCheckIndex;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int s_checkLoopLength;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int s_lastFrameComputedModulus;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int s_currentFrameInLoop;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Camera s_userDefinedCamera;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera m_renderCamera;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_nCurrentLOD;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<Camera, int> m_cachedFrameLODLevel;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UnityEngine.Vector3 m_localCenter;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private UnityEngine.Vector3[] _corners;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int m_frameToCheck;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool b_performCheck;

	[Token(Token = "0x17000137")]
	public static Camera UserDefinedLODCamera
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x11ED6BC", Offset = "0x11ED6BC", VA = "0x11ED6BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x11ED714", Offset = "0x11ED714", VA = "0x11ED714")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public SwitchMode LODSwitchMode
	{
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x11ED770", Offset = "0x11ED770", VA = "0x11ED770")]
		get
		{
			return default(SwitchMode);
		}
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x11ED81C", Offset = "0x11ED81C", VA = "0x11ED81C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x11EDE70", Offset = "0x11EDE70", VA = "0x11EDE70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x11EE6B0", Offset = "0x11EE6B0", VA = "0x11EE6B0")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x11EE6CC", Offset = "0x11EE6CC", VA = "0x11EE6CC")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x11EE7B4", Offset = "0x11EE7B4", VA = "0x11EE7B4")]
	public static bool IsRootOrBelongsToLODTree(AutomaticLOD automaticLOD, AutomaticLOD root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x11EE8E4", Offset = "0x11EE8E4", VA = "0x11EE8E4")]
	public int GetNumberOfLevelsToGenerate()
	{
		return default(int);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x11EE8EC", Offset = "0x11EE8EC", VA = "0x11EE8EC")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x11EE8F4", Offset = "0x11EE8F4", VA = "0x11EE8F4")]
	public bool IsRootAutomaticLOD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x11EE954", Offset = "0x11EE954", VA = "0x11EE954")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x11EE9A8", Offset = "0x11EE9A8", VA = "0x11EE9A8")]
	public bool HasLODDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x11EE9B0", Offset = "0x11EE9B0", VA = "0x11EE9B0")]
	public bool SetLODDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x11EE9C0", Offset = "0x11EE9C0", VA = "0x11EE9C0")]
	public int GetLODLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x11EEA0C", Offset = "0x11EEA0C", VA = "0x11EEA0C")]
	public float ComputeScreenCoverage(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x11EDAB4", Offset = "0x11EDAB4", VA = "0x11EDAB4")]
	public UnityEngine.Vector3 ComputeWorldCenter()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x11EF230", Offset = "0x11EF230", VA = "0x11EF230")]
	public float ComputeViewSpaceBounds(UnityEngine.Vector3 v3CameraPos, UnityEngine.Vector3 v3CameraDir, UnityEngine.Vector3 v3CameraUp, out UnityEngine.Vector3 v3Min, out UnityEngine.Vector3 v3Max, out UnityEngine.Vector3 v3Center)
	{
		return default(float);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x11EF78C", Offset = "0x11EF78C", VA = "0x11EF78C")]
	public void SetAutomaticCameraLODSwitch(bool bEnabled)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x11EF808", Offset = "0x11EF808", VA = "0x11EF808")]
	private static void SetAutomaticCameraLODSwitchRecursive(AutomaticLOD root, GameObject gameObject, bool bEnabled)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x11EF980", Offset = "0x11EF980", VA = "0x11EF980")]
	public void SetLODLevels(List<LODLevelData> listLODLevelData, EvalMode evalMode, float fMaxCameraDistance, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x11EFADC", Offset = "0x11EFADC", VA = "0x11EFADC")]
	private static void SetLODLevelsRecursive(AutomaticLOD root, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x11F033C", Offset = "0x11F033C", VA = "0x11F033C")]
	public void AddLODLevel(int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x11F03D8", Offset = "0x11F03D8", VA = "0x11F03D8")]
	public static void AddLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x11F0DBC", Offset = "0x11F0DBC", VA = "0x11F0DBC")]
	public void RemoveLODLevel(int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x11F0E50", Offset = "0x11F0E50", VA = "0x11F0E50")]
	public static void RemoveLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x11F12BC", Offset = "0x11F12BC", VA = "0x11F12BC")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x11F12C4", Offset = "0x11F12C4", VA = "0x11F12C4")]
	public void ComputeLODData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x11F1300", Offset = "0x11F1300", VA = "0x11F1300")]
	private void ComputeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x11F1AB8", Offset = "0x11F1AB8", VA = "0x11F1AB8")]
	public bool HasLODData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x11EE32C", Offset = "0x11EE32C", VA = "0x11EE32C")]
	public int GetLODLevelUsingCamera(Camera currentCamera)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x11F1B48", Offset = "0x11F1B48", VA = "0x11F1B48")]
	public int GetCurrentLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x11EE5CC", Offset = "0x11EE5CC", VA = "0x11EE5CC")]
	public void SwitchToLOD(int nLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x11F1B50", Offset = "0x11F1B50", VA = "0x11F1B50")]
	private static void SwitchToLODRecursive(AutomaticLOD root, GameObject gameObject, int nLODLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x11F2100", Offset = "0x11F2100", VA = "0x11F2100")]
	public void ComputeAllLODMeshes(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x11F2D94", Offset = "0x11F2D94", VA = "0x11F2D94")]
	public void ComputeLODMesh(int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x11F2224", Offset = "0x11F2224", VA = "0x11F2224")]
	private static void ComputeLODMeshRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x11F2E30", Offset = "0x11F2E30", VA = "0x11F2E30")]
	public void RestoreOriginalMesh(bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x11F2F08", Offset = "0x11F2F08", VA = "0x11F2F08")]
	private static void RestoreOriginalMeshRecursive(AutomaticLOD root, GameObject gameObject, bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x11F3340", Offset = "0x11F3340", VA = "0x11F3340")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x11F33BC", Offset = "0x11F33BC", VA = "0x11F33BC")]
	private static bool HasOriginalMeshActiveRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x11F3668", Offset = "0x11F3668", VA = "0x11F3668")]
	public bool HasVertexData(int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x11F36EC", Offset = "0x11F36EC", VA = "0x11F36EC")]
	private static bool HasVertexDataRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x11F395C", Offset = "0x11F395C", VA = "0x11F395C")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x11F39E8", Offset = "0x11F39E8", VA = "0x11F39E8")]
	private static void GetOriginalVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x11F3BA4", Offset = "0x11F3BA4", VA = "0x11F3BA4")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x11F3C30", Offset = "0x11F3C30", VA = "0x11F3C30")]
	private static void GetOriginalTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x11F3E0C", Offset = "0x11F3E0C", VA = "0x11F3E0C")]
	public int GetCurrentVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x11F3E98", Offset = "0x11F3E98", VA = "0x11F3E98")]
	private static void GetCurrentVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x11F4160", Offset = "0x11F4160", VA = "0x11F4160")]
	public int GetLODVertexCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x11F41FC", Offset = "0x11F41FC", VA = "0x11F41FC")]
	private static void GetLODVertexCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x11F4470", Offset = "0x11F4470", VA = "0x11F4470")]
	public int GetLODTriangleCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x11F450C", Offset = "0x11F450C", VA = "0x11F450C")]
	private static void GetLODTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x11F47A0", Offset = "0x11F47A0", VA = "0x11F47A0")]
	public void RemoveFromLODTree()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x11F1A3C", Offset = "0x11F1A3C", VA = "0x11F1A3C")]
	public void FreeLODData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x11F4848", Offset = "0x11F4848", VA = "0x11F4848")]
	private static void FreeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x11EFF8C", Offset = "0x11EFF8C", VA = "0x11EFF8C")]
	private static Mesh CreateNewEmptyMesh(AutomaticLOD automaticLOD)
	{
		return null;
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x11F4D48", Offset = "0x11F4D48", VA = "0x11F4D48")]
	private static GameObject CreateBasicObjectCopy(GameObject gameObject, Mesh mesh, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x11F0074", Offset = "0x11F0074", VA = "0x11F0074")]
	private static void CheckForAdditionalLODSetup(AutomaticLOD root, AutomaticLOD automaticLOD, LODLevelData levelData, int level)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x11F29C4", Offset = "0x11F29C4", VA = "0x11F29C4")]
	public void SetupLODGroup()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x11F5240", Offset = "0x11F5240", VA = "0x11F5240")]
	private static void SetupLODGroupRecursive(AutomaticLOD root, GameObject gameObject, ref List<List<Renderer>> renderers)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x11F5238", Offset = "0x11F5238", VA = "0x11F5238")]
	private static Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x11EEEB8", Offset = "0x11EEEB8", VA = "0x11EEEB8")]
	private void BuildCornerData(ref UnityEngine.Vector3[] av3Corners, Bounds bounds)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x11EDDD8", Offset = "0x11EDDD8", VA = "0x11EDDD8")]
	private bool IsDependent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x11F55DC", Offset = "0x11F55DC", VA = "0x11F55DC")]
	public AutomaticLOD()
	{
	}
}
[Token(Token = "0x20002A2")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class ShowcaseObject
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 m_position;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Vector3 m_angles;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 m_rotationAxis;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x11F7044", Offset = "0x11F7044", VA = "0x11F7044")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20002A4")]
	[CompilerGenerated]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x11F7840", Offset = "0x11F7840", VA = "0x11F7840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x11F7888", Offset = "0x11F7888", VA = "0x11F7888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x11F6F9C", Offset = "0x11F6F9C", VA = "0x11F6F9C")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x11F70A4", Offset = "0x11F70A4", VA = "0x11F70A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x11F70C0", Offset = "0x11F70C0", VA = "0x11F70C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x11F77F0", Offset = "0x11F77F0", VA = "0x11F77F0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x11F7848", Offset = "0x11F7848", VA = "0x11F7848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x11F56E8", Offset = "0x11F56E8", VA = "0x11F56E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x11F59AC", Offset = "0x11F59AC", VA = "0x11F59AC")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x11F5AE4", Offset = "0x11F5AE4", VA = "0x11F5AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x11F5FAC", Offset = "0x11F5FAC", VA = "0x11F5FAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x11F57EC", Offset = "0x11F57EC", VA = "0x11F57EC")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x11F6DEC", Offset = "0x11F6DEC", VA = "0x11F6DEC")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x11F5CFC", Offset = "0x11F5CFC", VA = "0x11F5CFC")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x11F6D74", Offset = "0x11F6D74", VA = "0x11F6D74")]
	[IteratorStateMachine(typeof(<ComputeMeshWithVertices>d__12))]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x11F6FC4", Offset = "0x11F6FC4", VA = "0x11F6FC4")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x20002A5")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[HideInInspector]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[HideInInspector]
	[SerializeField]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[HideInInspector]
	[SerializeField]
	private bool m_bUseCurvature;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[HideInInspector]
	[SerializeField]
	private bool m_bDataDirty;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x1700013B")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x11F7890", Offset = "0x11F7890", VA = "0x11F7890")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013C")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x11F7898", Offset = "0x11F7898", VA = "0x11F7898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x11F78A0", Offset = "0x11F78A0", VA = "0x11F78A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x11F78A8", Offset = "0x11F78A8", VA = "0x11F78A8")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x11F7990", Offset = "0x11F7990", VA = "0x11F7990")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x11F7AC8", Offset = "0x11F7AC8", VA = "0x11F7AC8")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x11F7AD0", Offset = "0x11F7AD0", VA = "0x11F7AD0")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x11F7B24", Offset = "0x11F7B24", VA = "0x11F7B24")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x11F7B2C", Offset = "0x11F7B2C", VA = "0x11F7B2C")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x11F7B3C", Offset = "0x11F7B3C", VA = "0x11F7B3C")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x11F7B60", Offset = "0x11F7B60", VA = "0x11F7B60")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x11F7C90", Offset = "0x11F7C90", VA = "0x11F7C90")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x11F7E14", Offset = "0x11F7E14", VA = "0x11F7E14")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x11F7E1C", Offset = "0x11F7E1C", VA = "0x11F7E1C")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x11F7E54", Offset = "0x11F7E54", VA = "0x11F7E54")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x11F8650", Offset = "0x11F8650", VA = "0x11F8650")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x11F8710", Offset = "0x11F8710", VA = "0x11F8710")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x11F879C", Offset = "0x11F879C", VA = "0x11F879C")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x11F87D4", Offset = "0x11F87D4", VA = "0x11F87D4")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x11F8CF4", Offset = "0x11F8CF4", VA = "0x11F8CF4")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x11F8D24", Offset = "0x11F8D24", VA = "0x11F8D24")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x11F8F48", Offset = "0x11F8F48", VA = "0x11F8F48")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x11F8F80", Offset = "0x11F8F80", VA = "0x11F8F80")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x11F9204", Offset = "0x11F9204", VA = "0x11F9204")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x11F9234", Offset = "0x11F9234", VA = "0x11F9234")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x11F94A4", Offset = "0x11F94A4", VA = "0x11F94A4")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x11F94D4", Offset = "0x11F94D4", VA = "0x11F94D4")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x11F6D34", Offset = "0x11F6D34", VA = "0x11F6D34")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x11F9658", Offset = "0x11F9658", VA = "0x11F9658")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x11F97D8", Offset = "0x11F97D8", VA = "0x11F97D8")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x11F9818", Offset = "0x11F9818", VA = "0x11F9818")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x11F6CF4", Offset = "0x11F6CF4", VA = "0x11F6CF4")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x11F99B8", Offset = "0x11F99B8", VA = "0x11F99B8")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x11F9B38", Offset = "0x11F9B38", VA = "0x11F9B38")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x11F9B78", Offset = "0x11F9B78", VA = "0x11F9B78")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x11F9D18", Offset = "0x11F9D18", VA = "0x11F9D18")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x11F8620", Offset = "0x11F8620", VA = "0x11F8620")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x11F9DDC", Offset = "0x11F9DDC", VA = "0x11F9DDC")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x11F8C0C", Offset = "0x11F8C0C", VA = "0x11F8C0C")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x11FA018", Offset = "0x11FA018", VA = "0x11FA018")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x20002A6")]
[RequireComponent(typeof(MeshSimplify))]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[CompilerGenerated]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x11FB130", Offset = "0x11FB130", VA = "0x11FB130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x11FB178", Offset = "0x11FB178", VA = "0x11FB178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x11FA560", Offset = "0x11FA560", VA = "0x11FA560")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x11FA5E0", Offset = "0x11FA5E0", VA = "0x11FA5E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x11FA60C", Offset = "0x11FA60C", VA = "0x11FA60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x11FB0E0", Offset = "0x11FB0E0", VA = "0x11FB0E0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x11FB138", Offset = "0x11FB138", VA = "0x11FB138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x1700013D")]
	public string ProgressTitle
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x11FA0B4", Offset = "0x11FA0B4", VA = "0x11FA0B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013E")]
	public string ProgressMessage
	{
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x11FA0BC", Offset = "0x11FA0BC", VA = "0x11FA0BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	public int ProgressPercent
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x11FA0C4", Offset = "0x11FA0C4", VA = "0x11FA0C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000140")]
	public bool Finished
	{
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x11FA0CC", Offset = "0x11FA0CC", VA = "0x11FA0CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x11FA0D4", Offset = "0x11FA0D4", VA = "0x11FA0D4")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x11FA19C", Offset = "0x11FA19C", VA = "0x11FA19C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x11FA260", Offset = "0x11FA260", VA = "0x11FA260")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x11FA428", Offset = "0x11FA428", VA = "0x11FA428")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x11FA124", Offset = "0x11FA124", VA = "0x11FA124")]
	[IteratorStateMachine(typeof(<ComputeMeshWithVertices>d__12))]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x11FA588", Offset = "0x11FA588", VA = "0x11FA588")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x20002A8")]
[RequireComponent(typeof(MeshFilter))]
public class LoadingOverlay : MonoBehaviour
{
	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool fading;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float fade_timer;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float in_alpha;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float out_alpha;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color from_color;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color to_color;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material material;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x10F29AC", Offset = "0x10F29AC", VA = "0x10F29AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x10F2C80", Offset = "0x10F2C80", VA = "0x10F2C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x10F2D58", Offset = "0x10F2D58", VA = "0x10F2D58")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x10F2DE8", Offset = "0x10F2DE8", VA = "0x10F2DE8")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x10F2A5C", Offset = "0x10F2A5C", VA = "0x10F2A5C")]
	public static void ReverseNormals(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x10F2E78", Offset = "0x10F2E78", VA = "0x10F2E78")]
	public LoadingOverlay()
	{
	}
}
[Token(Token = "0x20002A9")]
public class ValueUI : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float valueX;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text valueText;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x10F2E88", Offset = "0x10F2E88", VA = "0x10F2E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x10F2FB8", Offset = "0x10F2FB8", VA = "0x10F2FB8")]
	public void valueplus()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x10F3120", Offset = "0x10F3120", VA = "0x10F3120")]
	public void valueminus()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x10F305C", Offset = "0x10F305C", VA = "0x10F305C")]
	public void SaveValue()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x10F31C4", Offset = "0x10F31C4", VA = "0x10F31C4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x10F32A0", Offset = "0x10F32A0", VA = "0x10F32A0")]
	public ValueUI()
	{
	}
}
[Token(Token = "0x20002AA")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x10F32A8", Offset = "0x10F32A8", VA = "0x10F32A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x10F32AC", Offset = "0x10F32AC", VA = "0x10F32AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x10F34E8", Offset = "0x10F34E8", VA = "0x10F34E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x10F35C4", Offset = "0x10F35C4", VA = "0x10F35C4")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20002AB")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x10F35CC", Offset = "0x10F35CC", VA = "0x10F35CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x10F3804", Offset = "0x10F3804", VA = "0x10F3804")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x10F38F0", Offset = "0x10F38F0", VA = "0x10F38F0")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20002AC")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x10F390C", Offset = "0x10F390C", VA = "0x10F390C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x10F3910", Offset = "0x10F3910", VA = "0x10F3910")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x10F39C8", Offset = "0x10F39C8", VA = "0x10F39C8")]
	public ShotBehavior()
	{
	}
}
[Token(Token = "0x20002AD")]
public class WelcomeScreen : MonoBehaviour
{
	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WelcomeScreen instance;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool TutMenuActive;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject welcomePanel;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject worldsPanel;

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x10F39D0", Offset = "0x10F39D0", VA = "0x10F39D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x10F3A20", Offset = "0x10F3A20", VA = "0x10F3A20")]
	public void closeWelcome()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x10F3A1C", Offset = "0x10F3A1C", VA = "0x10F3A1C")]
	public void openWelcome()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x10F3A80", Offset = "0x10F3A80", VA = "0x10F3A80")]
	public WelcomeScreen()
	{
	}
}
[Token(Token = "0x20002AE")]
public enum ObjectToTarget
{
	[Token(Token = "0x40010D3")]
	GameObject,
	[Token(Token = "0x40010D4")]
	Text,
	[Token(Token = "0x40010D5")]
	Image,
	[Token(Token = "0x40010D6")]
	Renderer
}
[Token(Token = "0x20002AF")]
public class Dot : MonoBehaviour
{
	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Guide;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Vector3 RaycastOffset;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FingerSeconds;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float UpFactor;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OpacityInTime;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float OpacityOutTime;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsDown;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _currentPos;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image FillCircle;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal LayerMask LayerToHit;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _initialOpacity;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _opacity;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider _lastCollider;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<XRNodeState> _nodeStates;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera myCamera;

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x10F3A88", Offset = "0x10F3A88", VA = "0x10F3A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x10F3B24", Offset = "0x10F3B24", VA = "0x10F3B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x10F4014", Offset = "0x10F4014", VA = "0x10F4014")]
	public Dot()
	{
	}
}
[Token(Token = "0x20002B0")]
public class NoWatchMeshSelector : MonoBehaviour
{
	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh WithoutWatchMesh;

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x10F40E4", Offset = "0x10F40E4", VA = "0x10F40E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x10F4214", Offset = "0x10F4214", VA = "0x10F4214")]
	public NoWatchMeshSelector()
	{
	}
}
[Token(Token = "0x20002B1")]
public class YUR_Identifier : MonoBehaviour
{
	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x10F421C", Offset = "0x10F421C", VA = "0x10F421C")]
	public YUR_Identifier()
	{
	}
}
namespace YUR.SDK.Core.Watch
{
	[Token(Token = "0x20002B2")]
	public class ChangeIndicatorMaterials : MonoBehaviour
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material onlineMat;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material offlineMat;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> m_indicatorRenderers;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x10F4224", Offset = "0x10F4224", VA = "0x10F4224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x10F4344", Offset = "0x10F4344", VA = "0x10F4344")]
		public void GoOnline()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x10F4494", Offset = "0x10F4494", VA = "0x10F4494")]
		public void GoOffline()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x10F45E4", Offset = "0x10F45E4", VA = "0x10F45E4")]
		public ChangeIndicatorMaterials()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class ChangeParticleColor : MonoBehaviour
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x10F4660", Offset = "0x10F4660", VA = "0x10F4660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x10F46B0", Offset = "0x10F46B0", VA = "0x10F46B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x10F46CC", Offset = "0x10F46CC", VA = "0x10F46CC")]
		public void GoOnline()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x10F473C", Offset = "0x10F473C", VA = "0x10F473C")]
		public void GoOffline()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x10F47AC", Offset = "0x10F47AC", VA = "0x10F47AC")]
		public ChangeParticleColor()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class CheckScale : MonoBehaviour
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("HandScale")]
		public UnityEngine.Vector3 Left;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Vector3 Right;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YURWatch m_watch;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x10F47B4", Offset = "0x10F47B4", VA = "0x10F47B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x10F4890", Offset = "0x10F4890", VA = "0x10F4890")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x10F4894", Offset = "0x10F4894", VA = "0x10F4894")]
		private void RunScaleCheck()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x10F4A28", Offset = "0x10F4A28", VA = "0x10F4A28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x10F4AC4", Offset = "0x10F4AC4", VA = "0x10F4AC4")]
		public CheckScale()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public abstract class DataSetter : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DataTag;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Does Nothing if not Applicable")]
		public ObjectToTarget TargetedObject;

		[Token(Token = "0x17000143")]
		private string PropertyPathBase
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x10F4B38", Offset = "0x10F4B38", VA = "0x10F4B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public string PropertyPath
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x10F4BD8", Offset = "0x10F4BD8", VA = "0x10F4BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		protected abstract string DefaultDataTag
		{
			[Token(Token = "0x6000D3A")]
			get;
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x10F4C64", Offset = "0x10F4C64", VA = "0x10F4C64", Slot = "6")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x10F4D10", Offset = "0x10F4D10", VA = "0x10F4D10", Slot = "7")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x10F4DDC", Offset = "0x10F4DDC", VA = "0x10F4DDC", Slot = "8")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x10F4EA8", Offset = "0x10F4EA8", VA = "0x10F4EA8", Slot = "9")]
		public virtual void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x10F4EAC", Offset = "0x10F4EAC", VA = "0x10F4EAC")]
		protected DataSetter()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class LoginController : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		[CompilerGenerated]
		private sealed class <LoginAttemptTimeout>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginController <>4__this;

			[Token(Token = "0x17000146")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4C")]
				[Address(RVA = "0x10F5A38", Offset = "0x10F5A38", VA = "0x10F5A38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000147")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D4E")]
				[Address(RVA = "0x10F5A80", Offset = "0x10F5A80", VA = "0x10F5A80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x10F5964", Offset = "0x10F5964", VA = "0x10F5964")]
			[DebuggerHidden]
			public <LoginAttemptTimeout>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x10F5994", Offset = "0x10F5994", VA = "0x10F5994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x10F5998", Offset = "0x10F5998", VA = "0x10F5998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x10F5A40", Offset = "0x10F5A40", VA = "0x10F5A40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShortcodeLoginEvent OnLoginRequest;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnLoginError;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnLoginSuccess;

		[Token(Token = "0x40010F3")]
		private const float LOGIN_ATTEMPT_TIMEOUT = 10f;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _co;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x10F4F04", Offset = "0x10F4F04", VA = "0x10F4F04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x10F5584", Offset = "0x10F5584", VA = "0x10F5584")]
		private void SetShortcodeMessage(YURShortcodeResponse response)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x10F561C", Offset = "0x10F561C", VA = "0x10F561C")]
		private void SetErrorcodeMessage()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x10F5658", Offset = "0x10F5658", VA = "0x10F5658")]
		private void SetSuccessMessage()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x10F55F8", Offset = "0x10F55F8", VA = "0x10F55F8")]
		private void StopCoroutine()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x10F5694", Offset = "0x10F5694", VA = "0x10F5694")]
		public void RetryLogin()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x10F56F4", Offset = "0x10F56F4", VA = "0x10F56F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x10F551C", Offset = "0x10F551C", VA = "0x10F551C")]
		[IteratorStateMachine(typeof(<LoginAttemptTimeout>d__12))]
		private IEnumerator LoginAttemptTimeout()
		{
			return null;
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x10F598C", Offset = "0x10F598C", VA = "0x10F598C")]
		public LoginController()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[RequireComponent(typeof(AudioSource))]
	public class NotificationController : MonoBehaviour
	{
		[Token(Token = "0x20002B9")]
		[CompilerGenerated]
		private sealed class <ExpandNotification>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationController <>4__this;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <currentPos>5__2;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Vector3 <currentScale>5__3;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D57")]
				[Address(RVA = "0x10F5EF8", Offset = "0x10F5EF8", VA = "0x10F5EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D59")]
				[Address(RVA = "0x10F5F40", Offset = "0x10F5F40", VA = "0x10F5F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x10F5B60", Offset = "0x10F5B60", VA = "0x10F5B60")]
			[DebuggerHidden]
			public <ExpandNotification>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x10F5C2C", Offset = "0x10F5C2C", VA = "0x10F5C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x10F5C30", Offset = "0x10F5C30", VA = "0x10F5C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x10F5F00", Offset = "0x10F5F00", VA = "0x10F5F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BA")]
		[CompilerGenerated]
		private sealed class <RetractNotification>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationController <>4__this;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <currentPos>5__2;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Vector3 <currentScale>5__3;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x1700014A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5D")]
				[Address(RVA = "0x10F6174", Offset = "0x10F6174", VA = "0x10F6174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5F")]
				[Address(RVA = "0x10F61BC", Offset = "0x10F61BC", VA = "0x10F61BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x10F5BF0", Offset = "0x10F5BF0", VA = "0x10F5BF0")]
			[DebuggerHidden]
			public <RetractNotification>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x10F5F48", Offset = "0x10F5F48", VA = "0x10F5F48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x10F5F4C", Offset = "0x10F5F4C", VA = "0x10F5F4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x10F617C", Offset = "0x10F617C", VA = "0x10F617C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject NotificationPanel;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RetractedTransform;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform ExpandedTransform;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip NotificationSound;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve NotificationCurve;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TimeToMove;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float WaitTime;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_source;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x10F5A88", Offset = "0x10F5A88", VA = "0x10F5A88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x10F5AD8", Offset = "0x10F5AD8", VA = "0x10F5AD8")]
		public void Notify()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x10F5AF8", Offset = "0x10F5AF8", VA = "0x10F5AF8")]
		[IteratorStateMachine(typeof(<ExpandNotification>d__10))]
		private IEnumerator ExpandNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x10F5B88", Offset = "0x10F5B88", VA = "0x10F5B88")]
		[IteratorStateMachine(typeof(<RetractNotification>d__11))]
		private IEnumerator RetractNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x10F5C18", Offset = "0x10F5C18", VA = "0x10F5C18")]
		public NotificationController()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class PINTextUpdate : MonoBehaviour
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _pinText;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _urlText;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x10F61C4", Offset = "0x10F61C4", VA = "0x10F61C4")]
		public void SetTextSize(float size)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x10F6204", Offset = "0x10F6204", VA = "0x10F6204")]
		public void UpdateText(YURShortcodeResponse response)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x10F625C", Offset = "0x10F625C", VA = "0x10F625C")]
		public PINTextUpdate()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class PreferenceController : MonoBehaviour
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnPreferenceUpdate;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x10F6264", Offset = "0x10F6264", VA = "0x10F6264")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x10F633C", Offset = "0x10F633C", VA = "0x10F633C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x10F6414", Offset = "0x10F6414", VA = "0x10F6414")]
		private void Reload(UserPreferences arg0)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x10F6430", Offset = "0x10F6430", VA = "0x10F6430")]
		public PreferenceController()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class RotateFan : MonoBehaviour
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _fanSpeed;

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x10F6438", Offset = "0x10F6438", VA = "0x10F6438")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x10F646C", Offset = "0x10F646C", VA = "0x10F646C")]
		public RotateFan()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class SetBlend : MonoBehaviour
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _blendValue;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_thisAnimator;

		[Token(Token = "0x1700014C")]
		public float BlendValue
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x10F647C", Offset = "0x10F647C", VA = "0x10F647C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x10F6484", Offset = "0x10F6484", VA = "0x10F6484")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x10F648C", Offset = "0x10F648C", VA = "0x10F648C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x10F6504", Offset = "0x10F6504", VA = "0x10F6504")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x10F655C", Offset = "0x10F655C", VA = "0x10F655C")]
		public SetBlend()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class SetDownloadText : MonoBehaviour
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_text;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x10F6564", Offset = "0x10F6564", VA = "0x10F6564")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x10F65B4", Offset = "0x10F65B4", VA = "0x10F65B4")]
		public void UpdateProgress(float progress, float maxCount)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x10F698C", Offset = "0x10F698C", VA = "0x10F698C")]
		public SetDownloadText()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public enum ObjectToChangeColorOn
	{
		[Token(Token = "0x4001114")]
		Renderer,
		[Token(Token = "0x4001115")]
		Image,
		[Token(Token = "0x4001116")]
		Text
	}
	[Token(Token = "0x20002C1")]
	public class SetFillColor : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurFillColors FillColor;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ObjectToChangeColorOn ObjectToTarget;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x10F6994", Offset = "0x10F6994", VA = "0x10F6994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x10F6A4C", Offset = "0x10F6A4C", VA = "0x10F6A4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x10F6B18", Offset = "0x10F6B18", VA = "0x10F6B18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x10F6BE4", Offset = "0x10F6BE4", VA = "0x10F6BE4", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x10F6C8C", Offset = "0x10F6C8C", VA = "0x10F6C8C")]
		public static Color GetFillColorTagValue(OverlayStatusUpdate info, YurFillColors tag)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x10F7568", Offset = "0x10F7568", VA = "0x10F7568")]
		public SetFillColor()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class SetFont : MonoBehaviour
	{
		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI m_font;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x10F7570", Offset = "0x10F7570", VA = "0x10F7570")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x10F75EC", Offset = "0x10F75EC", VA = "0x10F75EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x10F76C4", Offset = "0x10F76C4", VA = "0x10F76C4")]
		public SetFont()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class SetPercentageFill : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurDataValues DataValue;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("NOTE: Overrided if Data Value includes a floor/ceiling")]
		public float Floor;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Ceiling;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float? m_overrideFloor;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float? m_overrideCeiling;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x10F76CC", Offset = "0x10F76CC", VA = "0x10F76CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x10F772C", Offset = "0x10F772C", VA = "0x10F772C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x10F77F8", Offset = "0x10F77F8", VA = "0x10F77F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x10F78C4", Offset = "0x10F78C4", VA = "0x10F78C4", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x10F7C34", Offset = "0x10F7C34", VA = "0x10F7C34")]
		private float GetPercentage(float valueToCheck, float floor, float ceiling)
		{
			return default(float);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x10F79A8", Offset = "0x10F79A8", VA = "0x10F79A8")]
		public static float GetDataTagValue(OverlayStatusUpdate info, YurDataValues tag, out float? floorValue, out float? ceilingValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x10F7CB0", Offset = "0x10F7CB0", VA = "0x10F7CB0")]
		public SetPercentageFill()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public enum RenderQueueType
	{
		[Token(Token = "0x4001125")]
		Tile,
		[Token(Token = "0x4001126")]
		Text,
		[Token(Token = "0x4001127")]
		Image
	}
	[Token(Token = "0x20002C5")]
	public class SetRenderQueue : MonoBehaviour
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderQueueType queueType;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x10F7D4C", Offset = "0x10F7D4C", VA = "0x10F7D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x10F7E04", Offset = "0x10F7E04", VA = "0x10F7E04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x10F80D0", Offset = "0x10F80D0", VA = "0x10F80D0")]
		public SetRenderQueue()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public enum ShaderOverrideType
	{
		[Token(Token = "0x400112D")]
		WatchAndTile,
		[Token(Token = "0x400112E")]
		TMP,
		[Token(Token = "0x400112F")]
		Image
	}
	[Token(Token = "0x20002C7")]
	public class SetShader : MonoBehaviour
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShaderOverrideType shaderType;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x10F80D8", Offset = "0x10F80D8", VA = "0x10F80D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x10F8190", Offset = "0x10F8190", VA = "0x10F8190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x10F8540", Offset = "0x10F8540", VA = "0x10F8540")]
		public SetShader()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class SetText : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurDataValues TextValue;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x10F8548", Offset = "0x10F8548", VA = "0x10F8548")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x10F8598", Offset = "0x10F8598", VA = "0x10F8598")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x10F86AC", Offset = "0x10F86AC", VA = "0x10F86AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x10F8778", Offset = "0x10F8778", VA = "0x10F8778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x10F8844", Offset = "0x10F8844", VA = "0x10F8844", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x10F8A14", Offset = "0x10F8A14", VA = "0x10F8A14")]
		public static string GetTextTagValue(OverlayStatusUpdate info, YurDataValues tag)
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x10F8F90", Offset = "0x10F8F90", VA = "0x10F8F90")]
		public SetText()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class SetTileColor : MonoBehaviour
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurFillColors TileColorOverride;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x10F8F98", Offset = "0x10F8F98", VA = "0x10F8F98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x10F91AC", Offset = "0x10F91AC", VA = "0x10F91AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x10F8F9C", Offset = "0x10F8F9C", VA = "0x10F8F9C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x10F9244", Offset = "0x10F9244", VA = "0x10F9244")]
		public SetTileColor()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public enum ObjectToToggle
	{
		[Token(Token = "0x4001138")]
		GameObject,
		[Token(Token = "0x4001139")]
		Image,
		[Token(Token = "0x400113A")]
		Text
	}
	[Token(Token = "0x20002CB")]
	public class SetVisibility : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurVisibilityValues Tag;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ObjectToToggle ToggleObject;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool turnOnIfFalse;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("This value is ignored if not applicable")]
		public int ValueToCheck;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject m_object;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x10F924C", Offset = "0x10F924C", VA = "0x10F924C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x10F9304", Offset = "0x10F9304", VA = "0x10F9304")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x10F93D0", Offset = "0x10F93D0", VA = "0x10F93D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x10F949C", Offset = "0x10F949C", VA = "0x10F949C", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x10F9770", Offset = "0x10F9770", VA = "0x10F9770")]
		public static bool GetElementVisibilityFromTag(OverlayStatusUpdate info, YurVisibilityValues tag, int equalsVal, bool reverseResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x10F9AE0", Offset = "0x10F9AE0", VA = "0x10F9AE0")]
		public SetVisibility()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class SetWidgetPlacements : MonoBehaviour
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _placementSlots;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _placementContainer;

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x10F9AF0", Offset = "0x10F9AF0", VA = "0x10F9AF0")]
		public void TogglePlacements(bool activeState)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x10F9ECC", Offset = "0x10F9ECC", VA = "0x10F9ECC")]
		internal Transform GetOpenSlot()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x10F9F58", Offset = "0x10F9F58", VA = "0x10F9F58")]
		internal Transform GetSlot(WidgetPosition widgetEnum)
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x10FA060", Offset = "0x10FA060", VA = "0x10FA060")]
		public void ClearWidgets()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x10FA19C", Offset = "0x10FA19C", VA = "0x10FA19C")]
		public SetWidgetPlacements()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class TileTransitionController : MonoBehaviour
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggerSleeveState triggerSleeveState;

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x10FA1A4", Offset = "0x10FA1A4", VA = "0x10FA1A4")]
		public void Logout()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x10FA25C", Offset = "0x10FA25C", VA = "0x10FA25C")]
		public TileTransitionController()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ToggleFace : MonoBehaviour
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x10FA264", Offset = "0x10FA264", VA = "0x10FA264")]
		public void Set(bool activeState)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x10FA3E4", Offset = "0x10FA3E4", VA = "0x10FA3E4")]
		public ToggleFace()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class TriggerContent : MonoBehaviour
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] contentObjects;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isActive;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent _onToggleOn;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent _onToggleOff;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x10FA3EC", Offset = "0x10FA3EC", VA = "0x10FA3EC")]
		public void Toggle(bool activeState)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x10FA480", Offset = "0x10FA480", VA = "0x10FA480")]
		public TriggerContent()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class TriggerHandChange : MonoBehaviour
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YURWatch m_watch;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x10FA504", Offset = "0x10FA504", VA = "0x10FA504")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x10FA574", Offset = "0x10FA574", VA = "0x10FA574")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x10FA600", Offset = "0x10FA600", VA = "0x10FA600")]
		public TriggerHandChange()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class TriggerSleeveState : MonoBehaviour
	{
		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SleeveState StateToTransitionTo;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal YURSleeveController referenceToSleeveController;

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x10FA23C", Offset = "0x10FA23C", VA = "0x10FA23C")]
		public void SendTransitionStateToController()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x10FA608", Offset = "0x10FA608", VA = "0x10FA608")]
		public TriggerSleeveState()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class WatchReferenceContainer : MonoBehaviour
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent GoOnlineEvent;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent GoOfflineEvent;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] watchRenders;

		[Token(Token = "0x1700014D")]
		public GameObject ThisWatch
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x10FA618", Offset = "0x10FA618", VA = "0x10FA618")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x10FA620", Offset = "0x10FA620", VA = "0x10FA620")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x10FA628", Offset = "0x10FA628", VA = "0x10FA628")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x10FA644", Offset = "0x10FA644", VA = "0x10FA644")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x10FA6FC", Offset = "0x10FA6FC", VA = "0x10FA6FC")]
		private void SetLoginMat(bool obj)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x10FA724", Offset = "0x10FA724", VA = "0x10FA724")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x10FA7C8", Offset = "0x10FA7C8", VA = "0x10FA7C8")]
		public void SetMaterial(Shader shaderToSet)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x10FA83C", Offset = "0x10FA83C", VA = "0x10FA83C")]
		public void SetRenderQueue(int renderQueue)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x10FA8B0", Offset = "0x10FA8B0", VA = "0x10FA8B0")]
		public WatchReferenceContainer()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class YURSleeveController : MonoBehaviour
	{
		[Token(Token = "0x20002D4")]
		[CompilerGenerated]
		private sealed class <DelayInitialSleeveRoute>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC6")]
				[Address(RVA = "0x10FB978", Offset = "0x10FB978", VA = "0x10FB978", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC8")]
				[Address(RVA = "0x10FB9C0", Offset = "0x10FB9C0", VA = "0x10FB9C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x10FAC48", Offset = "0x10FAC48", VA = "0x10FAC48")]
			[DebuggerHidden]
			public <DelayInitialSleeveRoute>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x10FB810", Offset = "0x10FB810", VA = "0x10FB810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x10FB814", Offset = "0x10FB814", VA = "0x10FB814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x10FB980", Offset = "0x10FB980", VA = "0x10FB980", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D5")]
		[CompilerGenerated]
		private sealed class <RunSleeveRetract>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sleeveName;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCC")]
				[Address(RVA = "0x10FBB1C", Offset = "0x10FBB1C", VA = "0x10FBB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0x10FBB64", Offset = "0x10FBB64", VA = "0x10FBB64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x10FB64C", Offset = "0x10FB64C", VA = "0x10FB64C")]
			[DebuggerHidden]
			public <RunSleeveRetract>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x10FB9C8", Offset = "0x10FB9C8", VA = "0x10FB9C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x10FB9CC", Offset = "0x10FB9CC", VA = "0x10FB9CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x10FBB24", Offset = "0x10FBB24", VA = "0x10FBB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[CompilerGenerated]
		private sealed class <RunSleeveExpand>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sleeveName;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <thisSleeve>5__2;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private MeshRenderer <rend>5__3;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <turnedOn>5__4;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD2")]
				[Address(RVA = "0x10FBD9C", Offset = "0x10FBD9C", VA = "0x10FBD9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD4")]
				[Address(RVA = "0x10FBDE4", Offset = "0x10FBDE4", VA = "0x10FBDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x10FB7D4", Offset = "0x10FB7D4", VA = "0x10FB7D4")]
			[DebuggerHidden]
			public <RunSleeveExpand>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x10FBB6C", Offset = "0x10FBB6C", VA = "0x10FBB6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x10FBB70", Offset = "0x10FBB70", VA = "0x10FBB70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x10FBDA4", Offset = "0x10FBDA4", VA = "0x10FBDA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SleeveState _currentSleeveState;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SleeveState InitialSleeve;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Sleeve References")]
		[SerializeField]
		private GameObject[] _sleeves;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TriggerSleeveState[] _sleeveStateTriggers;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("Blending References")]
		private SetBlend _metalBarsBlend;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SetBlend _sleeveAnchorBlend;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SleeveState m_previousSleeve;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_co;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_wasLoggedIn;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _delayRouteCo;

		[Token(Token = "0x1700014E")]
		public SleeveState CurrentSleeveState
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x10FA8B8", Offset = "0x10FA8B8", VA = "0x10FA8B8")]
			get
			{
				return default(SleeveState);
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x10FA8C0", Offset = "0x10FA8C0", VA = "0x10FA8C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x10FA8C8", Offset = "0x10FA8C8", VA = "0x10FA8C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x10FA9A0", Offset = "0x10FA9A0", VA = "0x10FA9A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x10FAA30", Offset = "0x10FAA30", VA = "0x10FAA30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x10FA9C8", Offset = "0x10FA9C8", VA = "0x10FA9C8")]
		[IteratorStateMachine(typeof(<DelayInitialSleeveRoute>d__16))]
		private IEnumerator DelayInitialSleeveRoute()
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x10FAC70", Offset = "0x10FAC70", VA = "0x10FAC70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x10FAE30", Offset = "0x10FAE30", VA = "0x10FAE30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x10FAED4", Offset = "0x10FAED4", VA = "0x10FAED4")]
		private void OnLoginStateChanged(bool loggedIn)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x10FB404", Offset = "0x10FB404", VA = "0x10FB404")]
		private bool IsSleeveExpanded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x10FB4A8", Offset = "0x10FB4A8", VA = "0x10FB4A8")]
		public void ToggleSleeveExpand()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x10FACB8", Offset = "0x10FACB8", VA = "0x10FACB8")]
		private void CheckSleeveState(SleeveState previousSleeve, SleeveState currentSleeve)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x10FB348", Offset = "0x10FB348", VA = "0x10FB348")]
		internal void TransitionToSleeve(SleeveState sleeveToTransitionTo)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x10FB564", Offset = "0x10FB564", VA = "0x10FB564")]
		[IteratorStateMachine(typeof(<RunSleeveRetract>d__24))]
		private IEnumerator RunSleeveRetract(string sleeveName)
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x10FB674", Offset = "0x10FB674", VA = "0x10FB674")]
		private void TurnOffAllSleeves()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x10FAA68", Offset = "0x10FAA68", VA = "0x10FAA68")]
		private void ResetToStartSleeve()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x10FB5D8", Offset = "0x10FB5D8", VA = "0x10FB5D8")]
		[IteratorStateMachine(typeof(<RunSleeveExpand>d__27))]
		private IEnumerator RunSleeveExpand(string sleeveName)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x10FB7FC", Offset = "0x10FB7FC", VA = "0x10FB7FC")]
		public YURSleeveController()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class YURWatch : MonoBehaviour
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YUR_Settings YURSettingsAsset;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject DefaultWatch;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static GameObject Head;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static Transform LeftHandAnchor;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static Transform RightHandAnchor;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_watchContainer;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_watch;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_defaultWatch;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 m_watchpos;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 m_watcheuler;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 m_watchscale;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<GameObject, int> m_setLayer;

		[Token(Token = "0x17000155")]
		internal UnityEvent OnHandChanged
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x10FBDEC", Offset = "0x10FBDEC", VA = "0x10FBDEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x10FBDF4", Offset = "0x10FBDF4", VA = "0x10FBDF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x10FBDFC", Offset = "0x10FBDFC", VA = "0x10FBDFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x10FBE80", Offset = "0x10FBE80", VA = "0x10FBE80")]
		private void CreateWatch()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x10FC2A4", Offset = "0x10FC2A4", VA = "0x10FC2A4")]
		private void SetDefaultSettings()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x10FC4CC", Offset = "0x10FC4CC", VA = "0x10FC4CC")]
		internal void SetLayers()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x10FC66C", Offset = "0x10FC66C", VA = "0x10FC66C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x10FC6A0", Offset = "0x10FC6A0", VA = "0x10FC6A0")]
		private void UpdateWatchTransform(YUR_Settings settings)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x10FCB2C", Offset = "0x10FCB2C", VA = "0x10FCB2C")]
		public void ToggleWatch(bool isActive)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x10FCC04", Offset = "0x10FCC04", VA = "0x10FCC04")]
		public YURWatch()
		{
		}
	}
}
namespace YUR.SDK.Core.Utils
{
	[Token(Token = "0x20002D8")]
	public static class ColorFunctions
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEFAULT_WIDGET_BG_COLOR;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<int, string> DAY_LEVELS;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Dictionary<int, string> ActivityLevelColors;

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x10F6EB0", Offset = "0x10F6EB0", VA = "0x10F6EB0")]
		public static Color GetDefaultColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x10F7068", Offset = "0x10F7068", VA = "0x10F7068")]
		public static Color GetDayLevelColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x10F731C", Offset = "0x10F731C", VA = "0x10F731C")]
		public static Color GetTodayCalsColor(float todayCals)
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x10F7128", Offset = "0x10F7128", VA = "0x10F7128")]
		public static Color GetWorkoutTimeColor(int seconds)
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x10F7220", Offset = "0x10F7220", VA = "0x10F7220")]
		public static Color GetTodayTimeColor(int seconds)
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x10F6F40", Offset = "0x10F6F40", VA = "0x10F6F40")]
		public static Color GetSquatColor(float squatCount)
		{
			return default(Color);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x10F741C", Offset = "0x10F741C", VA = "0x10F741C")]
		public static Color GetReadableForeColor(string hexColor)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20002D9")]
	public class FormatTest : MonoBehaviour
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugRun;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] floatArray;

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x10FCFA0", Offset = "0x10FCFA0", VA = "0x10FCFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x10FCFB4", Offset = "0x10FCFB4", VA = "0x10FCFB4")]
		private void RunTest()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x10FD188", Offset = "0x10FD188", VA = "0x10FD188")]
		public FormatTest()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class LogInfo : MonoBehaviour
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string myLog;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue myLogQueue;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x10FD20C", Offset = "0x10FD20C", VA = "0x10FD20C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x10FD28C", Offset = "0x10FD28C", VA = "0x10FD28C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x10FD30C", Offset = "0x10FD30C", VA = "0x10FD30C")]
		private void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x10FD730", Offset = "0x10FD730", VA = "0x10FD730")]
		public LogInfo()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class RestartActiveScene : MonoBehaviour
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x10FD798", Offset = "0x10FD798", VA = "0x10FD798")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x10FD818", Offset = "0x10FD818", VA = "0x10FD818")]
		public RestartActiveScene()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class RunRetryEvent : MonoBehaviour
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnRetry;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _retryOnEnable;

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x10FD820", Offset = "0x10FD820", VA = "0x10FD820")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x10FD84C", Offset = "0x10FD84C", VA = "0x10FD84C")]
		public void DoRetry()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x10FD868", Offset = "0x10FD868", VA = "0x10FD868")]
		public RunRetryEvent()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class RunShutdownEvent : MonoBehaviour
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnShutdown;

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x10FD870", Offset = "0x10FD870", VA = "0x10FD870")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x10FD8D8", Offset = "0x10FD8D8", VA = "0x10FD8D8")]
		public RunShutdownEvent()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public static class TimeFunctions
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x10FD8E0", Offset = "0x10FD8E0", VA = "0x10FD8E0")]
		public static string FormatShortK(float number)
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x10FD9D4", Offset = "0x10FD9D4", VA = "0x10FD9D4")]
		public static string FormatTime(int seconds)
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x10FDB48", Offset = "0x10FDB48", VA = "0x10FDB48")]
		public static string FormatTimeNoSeconds(int seconds)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DF")]
	public class TimeScaleTest : MonoBehaviour
	{
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x10FDC90", Offset = "0x10FDC90", VA = "0x10FDC90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x10FDCE8", Offset = "0x10FDCE8", VA = "0x10FDCE8")]
		public TimeScaleTest()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class ToggleCollider : MonoBehaviour
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider coll;

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x10FDCF0", Offset = "0x10FDCF0", VA = "0x10FDCF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10FDD40", Offset = "0x10FDD40", VA = "0x10FDD40")]
		public void EnableCollider()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x10FDD60", Offset = "0x10FDD60", VA = "0x10FDD60")]
		public void DisableCollider()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10FDD80", Offset = "0x10FDD80", VA = "0x10FDD80")]
		public ToggleCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E1")]
	public class YUREvent : UnityEvent<OverlayStatusUpdate>
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x10FDD88", Offset = "0x10FDD88", VA = "0x10FDD88")]
		public YUREvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class UnityEventString : UnityEvent<string>
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x10FDDD0", Offset = "0x10FDDD0", VA = "0x10FDDD0")]
		public UnityEventString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class UnityEventFloat : UnityEvent<float>
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10FDE18", Offset = "0x10FDE18", VA = "0x10FDE18")]
		public UnityEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class UnityEventInt : UnityEvent<int>
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x10FDE60", Offset = "0x10FDE60", VA = "0x10FDE60")]
		public UnityEventInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class ShortcodeLoginEvent : UnityEvent<YURShortcodeResponse>
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x10FDEA8", Offset = "0x10FDEA8", VA = "0x10FDEA8")]
		public ShortcodeLoginEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class UserPreferencesEvent : UnityEvent<UserPreferences>
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x10FDEF0", Offset = "0x10FDEF0", VA = "0x10FDEF0")]
		public UserPreferencesEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class UnityEventTwoFloat : UnityEvent<float, float>
	{
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x10FDF38", Offset = "0x10FDF38", VA = "0x10FDF38")]
		public UnityEventTwoFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class WidgetAppsEvent : UnityEvent<WidgetApp[]>
	{
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x10FDF80", Offset = "0x10FDF80", VA = "0x10FDF80")]
		public WidgetAppsEvent()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public static class YUR_Formatter
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x10FD120", Offset = "0x10FD120", VA = "0x10FD120")]
		internal static UnityEngine.Vector3 ConvertAs(float[] param, YurFormat formatType)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x10F8F1C", Offset = "0x10F8F1C", VA = "0x10F8F1C")]
		internal static string ConvertAs(string param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x10F8E30", Offset = "0x10F8E30", VA = "0x10F8E30")]
		internal static string ConvertAs(int param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x10F8D48", Offset = "0x10F8D48", VA = "0x10F8D48")]
		internal static string ConvertAs(float param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x10FE7A4", Offset = "0x10FE7A4", VA = "0x10FE7A4")]
		public static string ConvertToTimeFromInt(int param)
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x10FE8CC", Offset = "0x10FE8CC", VA = "0x10FE8CC")]
		public static Color ConvertToColor(string obj)
		{
			return default(Color);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x10FDFC8", Offset = "0x10FDFC8", VA = "0x10FDFC8")]
		public static UnityEngine.Vector3 ConvertToVector3(float[] obj)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x10FE910", Offset = "0x10FE910", VA = "0x10FE910")]
		public static Quaternion ConvertToQuaternion(float[] obj)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x10FE788", Offset = "0x10FE788", VA = "0x10FE788")]
		public static string ConvertToStringFromInt(int obj, [Optional] string formatParams)
		{
			return null;
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x10FE8AC", Offset = "0x10FE8AC", VA = "0x10FE8AC")]
		public static string ConvertToStringFromFloat(float obj, [Optional] string formatParams)
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x10FE18C", Offset = "0x10FE18C", VA = "0x10FE18C")]
		public static string ConvertToShortK(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x10FE294", Offset = "0x10FE294", VA = "0x10FE294")]
		public static string ConvertToTime(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x10FE418", Offset = "0x10FE418", VA = "0x10FE418")]
		public static string ConvertToTimeNoSeconds(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x10FE574", Offset = "0x10FE574", VA = "0x10FE574")]
		public static string ConvertToFormattedTime(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x10FE67C", Offset = "0x10FE67C", VA = "0x10FE67C")]
		public static string ConvertToTimeOfDaySignifier(string obj)
		{
			return null;
		}
	}
}
namespace YUR.SDK.Core.Interfaces
{
	[Token(Token = "0x20002EA")]
	public interface IYURUpdatable
	{
		[Token(Token = "0x6000E16")]
		void ApplyOverlayUpdate(OverlayStatusUpdate OSU);
	}
}
namespace YUR.SDK.Core.Interaction
{
	[Token(Token = "0x20002EB")]
	public class GazeEvent : MonoBehaviour
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent _fireGaze;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _fireEventManually;

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x10FEAE8", Offset = "0x10FEAE8", VA = "0x10FEAE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x10F3F94", Offset = "0x10F3F94", VA = "0x10F3F94")]
		public void FireGazeEvent()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x10FEAFC", Offset = "0x10FEAFC", VA = "0x10FEAFC")]
		public GazeEvent()
		{
		}
	}
}
namespace YUR.SDK.Core.Initialization
{
	[Token(Token = "0x20002EC")]
	public class YUR_Hand : MonoBehaviour
	{
		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal GameObject thisAnchor;

		[Token(Token = "0x17000156")]
		internal virtual Transform yurAnchor
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x10FEB04", Offset = "0x10FEB04", VA = "0x10FEB04", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x10FEB0C", Offset = "0x10FEB0C", VA = "0x10FEB0C", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x10FEB14", Offset = "0x10FEB14", VA = "0x10FEB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x10FEBBC", Offset = "0x10FEBBC", VA = "0x10FEBBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x10FEBF0", Offset = "0x10FEBF0", VA = "0x10FEBF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x10FECA4", Offset = "0x10FECA4", VA = "0x10FECA4")]
		public YUR_Hand()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class YUR_Head : MonoBehaviour
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x10FECAC", Offset = "0x10FECAC", VA = "0x10FECAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x10FED04", Offset = "0x10FED04", VA = "0x10FED04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10FEDB0", Offset = "0x10FEDB0", VA = "0x10FEDB0")]
		public YUR_Head()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class YUR_LeftHand : YUR_Hand
	{
		[Token(Token = "0x17000157")]
		internal override Transform yurAnchor
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x10FEDB8", Offset = "0x10FEDB8", VA = "0x10FEDB8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x10FEE00", Offset = "0x10FEE00", VA = "0x10FEE00", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x10FEE4C", Offset = "0x10FEE4C", VA = "0x10FEE4C")]
		public YUR_LeftHand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EF")]
	internal class Watch
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string WatchName;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MinLevelRequired;

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x10FEE54", Offset = "0x10FEE54", VA = "0x10FEE54")]
		public Watch()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class YUR_Loader : MonoBehaviour
	{
		[Token(Token = "0x20002F1")]
		[CompilerGenerated]
		private sealed class <LoadWidgets>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YUR_Loader <>4__this;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UserPreferences prefs;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E39")]
				[Address(RVA = "0x110140C", Offset = "0x110140C", VA = "0x110140C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3B")]
				[Address(RVA = "0x1101454", Offset = "0x1101454", VA = "0x1101454", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x10FFCD0", Offset = "0x10FFCD0", VA = "0x10FFCD0")]
			[DebuggerHidden]
			public <LoadWidgets>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1100644", Offset = "0x1100644", VA = "0x1100644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x1100648", Offset = "0x1100648", VA = "0x1100648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x1101414", Offset = "0x1101414", VA = "0x1101414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _localPath;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _latestFilesUpdated;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SetWidgetPlacements _widgetParent;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _watchAnchor;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Watch[] _watches;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent _onLoadSuccess;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _onLoadFailure;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WatchReferenceContainer m_instantiatedWatchReferences;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_widgets;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<AssetBundle> m_bundlesInUse;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> m_defaultObjects;

		[Token(Token = "0x17000158")]
		public string LocalPath
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x10FEEAC", Offset = "0x10FEEAC", VA = "0x10FEEAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x10FEEB4", Offset = "0x10FEEB4", VA = "0x10FEEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool LatestFilesUpdated
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x10FEEBC", Offset = "0x10FEEBC", VA = "0x10FEEBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x10FEEC4", Offset = "0x10FEEC4", VA = "0x10FEEC4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x10FEED0", Offset = "0x10FEED0", VA = "0x10FEED0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x10FEF78", Offset = "0x10FEF78", VA = "0x10FEF78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x10FF13C", Offset = "0x10FF13C", VA = "0x10FF13C")]
		public void UpdateAssets()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x10FF090", Offset = "0x10FF090", VA = "0x10FF090")]
		public void Load(OverlayStatusUpdate OSU, UserPreferences prefs)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x10FF19C", Offset = "0x10FF19C", VA = "0x10FF19C")]
		private void LoadWatch(int watchIndex, UserPreferences prefs)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x10FF6C4", Offset = "0x10FF6C4", VA = "0x10FF6C4")]
		public void UpdateWidgets(UserPreferences prefs)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x10FFC5C", Offset = "0x10FFC5C", VA = "0x10FFC5C")]
		[IteratorStateMachine(typeof(<LoadWidgets>d__23))]
		private IEnumerator LoadWidgets(UserPreferences prefs)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x10FFCF8", Offset = "0x10FFCF8", VA = "0x10FFCF8")]
		private void SpawnDefaultWidget(WidgetPosition key)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x11003F0", Offset = "0x11003F0", VA = "0x11003F0")]
		private void SpawnWidget(UnityEngine.Object[] assets, WidgetPosition widgetEnum)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x10FFE00", Offset = "0x10FFE00", VA = "0x10FFE00")]
		private void ConfigureWidget(GameObject thisWidget, WidgetPosition widgetEnum)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1100560", Offset = "0x1100560", VA = "0x1100560")]
		public YUR_Loader()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class YUR_Manager : MonoBehaviour
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static YUR_Manager _instance;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("YUR Runtime Events")]
		public UnityEvent OnYURStartup;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YUREvent OnYURUpdate;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UserPreferencesEvent OnPreferenceUpdate;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ShortcodeLoginEvent OnLoginAttempt;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal UnityEvent OnLoginSuccess;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal UnityEvent OnLoginFailed;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public YUR_Settings YURSettings;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("DEBUG OPTIONS")]
		[Tooltip("Resource Heavy. Turn this off before making builds.")]
		public bool TurnOnDebugLogging;

		[Token(Token = "0x1700015C")]
		public OverlayStatusUpdate LatestOSU
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x110145C", Offset = "0x110145C", VA = "0x110145C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x1101464", Offset = "0x1101464", VA = "0x1101464")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public WidgetApp[] LatestWidgetApps
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x110146C", Offset = "0x110146C", VA = "0x110146C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x1101474", Offset = "0x1101474", VA = "0x1101474")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public UserPreferences LatestPreferences
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x110147C", Offset = "0x110147C", VA = "0x110147C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x1101484", Offset = "0x1101484", VA = "0x1101484")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public static YUR_Manager Instance
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x110148C", Offset = "0x110148C", VA = "0x110148C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x11014D4", Offset = "0x11014D4", VA = "0x11014D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1101AD0", Offset = "0x1101AD0", VA = "0x1101AD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x1101BAC", Offset = "0x1101BAC", VA = "0x1101BAC")]
		private void OnStatusUpdate(OverlayStatusUpdate obj)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x1102320", Offset = "0x1102320", VA = "0x1102320")]
		private void OnUpdateWidgetApps(WidgetApp[] apps)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x11024EC", Offset = "0x11024EC", VA = "0x11024EC")]
		private void OnUserPreferencesChanged(UserPreferences obj)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x11026F8", Offset = "0x11026F8", VA = "0x11026F8")]
		private void OnServiceShutdown(CoreServiceManager.ExecutionResult obj)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x10F527C", Offset = "0x10F527C", VA = "0x10F527C")]
		public void Login()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x11027A0", Offset = "0x11027A0", VA = "0x11027A0")]
		public void Logout()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1102910", Offset = "0x1102910", VA = "0x1102910")]
		private void OnLoginRequest(YURShortcodeResponse obj)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1102B18", Offset = "0x1102B18", VA = "0x1102B18")]
		private void OnLoginResponseSuccess()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x1102D00", Offset = "0x1102D00", VA = "0x1102D00")]
		private void OnLoginResponseFailure(string obj)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x10F678C", Offset = "0x10F678C", VA = "0x10F678C")]
		public void Log(object text, [CallerFilePath] string file = "", [CallerMemberName] string member = "", [CallerLineNumber] int line = 0)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1102EE8", Offset = "0x1102EE8", VA = "0x1102EE8")]
		public YUR_Manager()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class YUR_Notification : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnNotification;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEventString OnNotificationHeader;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEventString OnNotificationBody;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _debugHeaderString;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _debugBodyString;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _debugFire;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1102F98", Offset = "0x1102F98", VA = "0x1102F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1103064", Offset = "0x1103064", VA = "0x1103064")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x1103130", Offset = "0x1103130", VA = "0x1103130")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x11031E0", Offset = "0x11031E0", VA = "0x11031E0", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x11033EC", Offset = "0x11033EC", VA = "0x11033EC")]
		public YUR_Notification()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class YUR_RightHand : YUR_Hand
	{
		[Token(Token = "0x17000160")]
		internal override Transform yurAnchor
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1103460", Offset = "0x1103460", VA = "0x1103460", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x11034A8", Offset = "0x11034A8", VA = "0x11034A8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x11034F4", Offset = "0x11034F4", VA = "0x11034F4")]
		public YUR_RightHand()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class YUR_Updater : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[CompilerGenerated]
		private sealed class <StartDownloads>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> apps;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YUR_Updater <>4__this;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, byte[]> <bundlesToSave>5__2;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <assetsDownloaded>5__3;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<string, string>.Enumerator <>7__wrap3;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private KeyValuePair<string, string> <app>5__5;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UnityWebRequest <uwr>5__6;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E68")]
				[Address(RVA = "0x11055AC", Offset = "0x11055AC", VA = "0x11055AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E6A")]
				[Address(RVA = "0x11055F4", Offset = "0x11055F4", VA = "0x11055F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x1104438", Offset = "0x1104438", VA = "0x1104438")]
			[DebuggerHidden]
			public <StartDownloads>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x1104EE0", Offset = "0x1104EE0", VA = "0x1104EE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x1104F98", Offset = "0x1104F98", VA = "0x1104F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x110555C", Offset = "0x110555C", VA = "0x110555C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x11054AC", Offset = "0x11054AC", VA = "0x11054AC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x11055B4", Offset = "0x11055B4", VA = "0x11055B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnUpdateCheck;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnUpdateRequired;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEventTwoFloat OnDownloadProgressUpdate;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnSaveComplete;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_version;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_updated;

		[Token(Token = "0x17000161")]
		public string LocalPath
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x11034FC", Offset = "0x11034FC", VA = "0x11034FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1103504", Offset = "0x1103504", VA = "0x1103504")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x110350C", Offset = "0x110350C", VA = "0x110350C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x11035C0", Offset = "0x11035C0", VA = "0x11035C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1103C30", Offset = "0x1103C30", VA = "0x1103C30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x11036D8", Offset = "0x11036D8", VA = "0x11036D8")]
		private void CheckForUpdates(WidgetApp[] apps)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1103D08", Offset = "0x1103D08", VA = "0x1103D08")]
		public bool CheckForDirectory()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x1103E60", Offset = "0x1103E60", VA = "0x1103E60")]
		private Dictionary<string, string> GetAppsToUpdate(WidgetApp[] apps)
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x11043C4", Offset = "0x11043C4", VA = "0x11043C4")]
		[IteratorStateMachine(typeof(<StartDownloads>d__16))]
		private IEnumerator StartDownloads(Dictionary<string, string> apps)
		{
			return null;
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x1104460", Offset = "0x1104460", VA = "0x1104460")]
		private void SaveBundles(Dictionary<string, byte[]> bundleDataAssets)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x1104E88", Offset = "0x1104E88", VA = "0x1104E88")]
		public YUR_Updater()
		{
		}
	}
}
namespace YUR.SDK.Core.Enums
{
	[Token(Token = "0x20002F7")]
	public enum HandState
	{
		[Token(Token = "0x40011B8")]
		Left,
		[Token(Token = "0x40011B9")]
		Right
	}
	[Token(Token = "0x20002F8")]
	public enum SleeveState
	{
		[Token(Token = "0x40011BB")]
		None,
		[Token(Token = "0x40011BC")]
		StartSleeve,
		[Token(Token = "0x40011BD")]
		PINSleeve,
		[Token(Token = "0x40011BE")]
		TileSleeve,
		[Token(Token = "0x40011BF")]
		LogoutSleeve,
		[Token(Token = "0x40011C0")]
		SetupSleeve
	}
	[Token(Token = "0x20002F9")]
	public enum YurDataValues
	{
		[Token(Token = "0x40011C2")]
		TagValue,
		[Token(Token = "0x40011C3")]
		ClockTime,
		[Token(Token = "0x40011C4")]
		ClockTimeSuffix,
		[Token(Token = "0x40011C5")]
		SquatCount,
		[Token(Token = "0x40011C6")]
		EstOrHeartRate,
		[Token(Token = "0x40011C7")]
		HeartRate,
		[Token(Token = "0x40011C8")]
		EstRate,
		[Token(Token = "0x40011C9")]
		BurnRate,
		[Token(Token = "0x40011CA")]
		TodayCalories,
		[Token(Token = "0x40011CB")]
		TodaySquatCount,
		[Token(Token = "0x40011CC")]
		TodayTime,
		[Token(Token = "0x40011CD")]
		TodayTimeNoSeconds,
		[Token(Token = "0x40011CE")]
		WorkoutTime,
		[Token(Token = "0x40011CF")]
		WorkoutTimeNoSeconds,
		[Token(Token = "0x40011D0")]
		WorkoutCalories,
		[Token(Token = "0x40011D1")]
		UserRank,
		[Token(Token = "0x40011D2")]
		LocalTime,
		[Token(Token = "0x40011D3")]
		NotificationHeader,
		[Token(Token = "0x40011D4")]
		NotificationBody,
		[Token(Token = "0x40011D5")]
		NotificationFooter,
		[Token(Token = "0x40011D6")]
		TotalXP,
		[Token(Token = "0x40011D7")]
		NextLevelXP,
		[Token(Token = "0x40011D8")]
		CurrentLevelXP,
		[Token(Token = "0x40011D9")]
		XPCompletionPercentage
	}
	[Token(Token = "0x20002FA")]
	public enum YurFillColors
	{
		[Token(Token = "0x40011DB")]
		Default,
		[Token(Token = "0x40011DC")]
		SquatCountLevel,
		[Token(Token = "0x40011DD")]
		TodaySquatCountLevel,
		[Token(Token = "0x40011DE")]
		EstOrHeartRateLevel,
		[Token(Token = "0x40011DF")]
		BurnRateLevel,
		[Token(Token = "0x40011E0")]
		TodayCaloriesLevel,
		[Token(Token = "0x40011E1")]
		UserRank,
		[Token(Token = "0x40011E2")]
		UserRankContrast,
		[Token(Token = "0x40011E3")]
		WorkoutCaloriesLevel,
		[Token(Token = "0x40011E4")]
		WorkoutTimeLevel,
		[Token(Token = "0x40011E5")]
		TodayTimeLevel
	}
	[Token(Token = "0x20002FB")]
	public enum YurFormat
	{
		[Token(Token = "0x40011E7")]
		None,
		[Token(Token = "0x40011E8")]
		NoSigValues,
		[Token(Token = "0x40011E9")]
		OneSigValue,
		[Token(Token = "0x40011EA")]
		TwoSigValues,
		[Token(Token = "0x40011EB")]
		FormattedTime,
		[Token(Token = "0x40011EC")]
		TimeOfDaySignifier,
		[Token(Token = "0x40011ED")]
		Vector3,
		[Token(Token = "0x40011EE")]
		ShortK,
		[Token(Token = "0x40011EF")]
		Time,
		[Token(Token = "0x40011F0")]
		TimeNoSeconds
	}
	[Token(Token = "0x20002FC")]
	public enum YurVisibilityValues
	{
		[Token(Token = "0x40011F2")]
		HeartRateAvailable,
		[Token(Token = "0x40011F3")]
		WorkoutInProgress,
		[Token(Token = "0x40011F4")]
		BioDataValid,
		[Token(Token = "0x40011F5")]
		LoggedIn,
		[Token(Token = "0x40011F6")]
		Online,
		[Token(Token = "0x40011F7")]
		NotificationActive,
		[Token(Token = "0x40011F8")]
		NotificationHeaderActive,
		[Token(Token = "0x40011F9")]
		NotificationBodyActive,
		[Token(Token = "0x40011FA")]
		NotificationFooterActive,
		[Token(Token = "0x40011FB")]
		TwentyFourHourTime,
		[Token(Token = "0x40011FC")]
		DayLevel,
		[Token(Token = "0x40011FD")]
		IsFace
	}
}
namespace YUR.SDK.Core.Configuration
{
	[Token(Token = "0x20002FD")]
	[CreateAssetMenu]
	public class YUR_Settings : ScriptableObject
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Transform Options")]
		[HideInInspector]
		public UnityEvent WatchHandChanged;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandState _lastHand;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private HandState _handBeingUsed;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Left Configuration")]
		[SerializeField]
		private UnityEngine.Vector3 _leftPositionOffset;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private UnityEngine.Vector3 _leftEulerOffset;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Right Configuration")]
		private UnityEngine.Vector3 _rightPositionOffset;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private UnityEngine.Vector3 _rightEulerOffset;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Header("Render Settings")]
		private Shader _watchAndTileShaderOverride;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _disableWatchModel;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Shader _tmpShaderOverride;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader _imageShaderOverride;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _shaderColorProperty;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int _watchRenderQueue;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Layer Settings")]
		public string LayerToSet;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Font Settings")]
		public TMP_FontAsset Font;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Header("YUR Service Settings")]
		private bool _turnOffYURServiceOnDisable;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _debugLogging;

		[Token(Token = "0x17000164")]
		public HandState HandBeingUsed
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x11055FC", Offset = "0x11055FC", VA = "0x11055FC")]
			get
			{
				return default(HandState);
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x10FA5DC", Offset = "0x10FA5DC", VA = "0x10FA5DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public UnityEngine.Vector3 LeftPositionOffset
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x110562C", Offset = "0x110562C", VA = "0x110562C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x1105638", Offset = "0x1105638", VA = "0x1105638")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public UnityEngine.Vector3 LeftEulerOffset
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x1105644", Offset = "0x1105644", VA = "0x1105644")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x1105650", Offset = "0x1105650", VA = "0x1105650")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public UnityEngine.Vector3 RightPositionOffset
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x110565C", Offset = "0x110565C", VA = "0x110565C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x1105668", Offset = "0x1105668", VA = "0x1105668")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public UnityEngine.Vector3 RightEulerOffset
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x1105674", Offset = "0x1105674", VA = "0x1105674")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1105680", Offset = "0x1105680", VA = "0x1105680")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public Shader WatchAndTileShaderOverride
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x110568C", Offset = "0x110568C", VA = "0x110568C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x1105694", Offset = "0x1105694", VA = "0x1105694")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public bool DisableWatchModel
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x110569C", Offset = "0x110569C", VA = "0x110569C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x11056A4", Offset = "0x11056A4", VA = "0x11056A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public Shader TmpShaderOverride
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x11056B0", Offset = "0x11056B0", VA = "0x11056B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x11056B8", Offset = "0x11056B8", VA = "0x11056B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public Shader ImageShaderOverride
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x11056C0", Offset = "0x11056C0", VA = "0x11056C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x11056C8", Offset = "0x11056C8", VA = "0x11056C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public string ShaderColorProperty
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x11056D0", Offset = "0x11056D0", VA = "0x11056D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x11056D8", Offset = "0x11056D8", VA = "0x11056D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public int WatchRenderQueue
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x11056E0", Offset = "0x11056E0", VA = "0x11056E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x11056E8", Offset = "0x11056E8", VA = "0x11056E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool TurnOffYURServiceOnDisable
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x11056F0", Offset = "0x11056F0", VA = "0x11056F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x11056F8", Offset = "0x11056F8", VA = "0x11056F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public bool DebugLogging
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x1105704", Offset = "0x1105704", VA = "0x1105704")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x110570C", Offset = "0x110570C", VA = "0x110570C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1105604", Offset = "0x1105604", VA = "0x1105604")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1105774", Offset = "0x1105774", VA = "0x1105774")]
		public YUR_Settings()
		{
		}
	}
}
namespace YUR.SDK.Core.AppData
{
	[Token(Token = "0x20002FE")]
	public class YUR_Alpha : DataSetter
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000171")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x11058E0", Offset = "0x11058E0", VA = "0x11058E0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x110581C", Offset = "0x110581C", VA = "0x110581C", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1105920", Offset = "0x1105920", VA = "0x1105920", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1105D78", Offset = "0x1105D78", VA = "0x1105D78")]
		public YUR_Alpha()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class YUR_Color : DataSetter
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000172")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x1105E40", Offset = "0x1105E40", VA = "0x1105E40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1105D7C", Offset = "0x1105D7C", VA = "0x1105D7C", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1105E80", Offset = "0x1105E80", VA = "0x1105E80", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x11061C8", Offset = "0x11061C8", VA = "0x11061C8")]
		public YUR_Color()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class YUR_Emission : DataSetter
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_rend;

		[Token(Token = "0x17000173")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x1106254", Offset = "0x1106254", VA = "0x1106254", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x11061CC", Offset = "0x11061CC", VA = "0x11061CC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1106294", Offset = "0x1106294", VA = "0x1106294", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x11065C4", Offset = "0x11065C4", VA = "0x11065C4")]
		public YUR_Emission()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class YUR_Euler : DataSetter
	{
		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x17000174")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x11065EC", Offset = "0x11065EC", VA = "0x11065EC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x11065C8", Offset = "0x11065C8", VA = "0x11065C8", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x110662C", Offset = "0x110662C", VA = "0x110662C", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1106874", Offset = "0x1106874", VA = "0x1106874")]
		public YUR_Euler()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class YUR_FontSize : DataSetter
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x17000175")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x11068D0", Offset = "0x11068D0", VA = "0x11068D0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1106878", Offset = "0x1106878", VA = "0x1106878", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1106910", Offset = "0x1106910", VA = "0x1106910", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1106BBC", Offset = "0x1106BBC", VA = "0x1106BBC")]
		public YUR_FontSize()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class YUR_Position : DataSetter
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x17000176")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x1106BE4", Offset = "0x1106BE4", VA = "0x1106BE4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1106BC0", Offset = "0x1106BC0", VA = "0x1106BC0", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1106C24", Offset = "0x1106C24", VA = "0x1106C24", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1106E6C", Offset = "0x1106E6C", VA = "0x1106E6C")]
		public YUR_Position()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class YUR_RenderQueue : DataSetter
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000177")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x1106F34", Offset = "0x1106F34", VA = "0x1106F34", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1106E70", Offset = "0x1106E70", VA = "0x1106E70", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1106F74", Offset = "0x1106F74", VA = "0x1106F74", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x11072F8", Offset = "0x11072F8", VA = "0x11072F8")]
		public YUR_RenderQueue()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class YUR_Scale : DataSetter
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x17000178")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1107320", Offset = "0x1107320", VA = "0x1107320", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x11072FC", Offset = "0x11072FC", VA = "0x11072FC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1107360", Offset = "0x1107360", VA = "0x1107360", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x11075A8", Offset = "0x11075A8", VA = "0x11075A8")]
		public YUR_Scale()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class YUR_Text : DataSetter
	{
		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public YurFormat format;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x17000179")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1107604", Offset = "0x1107604", VA = "0x1107604", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x11075AC", Offset = "0x11075AC", VA = "0x11075AC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1107644", Offset = "0x1107644", VA = "0x1107644", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x110794C", Offset = "0x110794C", VA = "0x110794C")]
		public YUR_Text()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class YUR_TileColor : DataSetter
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_rend;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_arbDataPath;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SetFillColor SFC;

		[Token(Token = "0x1700017A")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1107AF4", Offset = "0x1107AF4", VA = "0x1107AF4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1107950", Offset = "0x1107950", VA = "0x1107950", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1107B34", Offset = "0x1107B34", VA = "0x1107B34", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1107F44", Offset = "0x1107F44", VA = "0x1107F44")]
		public YUR_TileColor()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class YUR_Visibility : DataSetter
	{
		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x1700017B")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x110805C", Offset = "0x110805C", VA = "0x110805C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1107F98", Offset = "0x1107F98", VA = "0x1107F98", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x110809C", Offset = "0x110809C", VA = "0x110809C", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x11083BC", Offset = "0x11083BC", VA = "0x11083BC")]
		public YUR_Visibility()
		{
		}
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x2000309")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.Vector3[] m_lineVertices;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x1700017C")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x11083C0", Offset = "0x11083C0", VA = "0x11083C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x11083C8", Offset = "0x11083C8", VA = "0x11083C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x11083D0", Offset = "0x11083D0", VA = "0x11083D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x11083D8", Offset = "0x11083D8", VA = "0x11083D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public Color LineColor
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x11083E4", Offset = "0x11083E4", VA = "0x11083E4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x11083F0", Offset = "0x11083F0", VA = "0x11083F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float LineWidth
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x11085F4", Offset = "0x11085F4", VA = "0x11085F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x11085FC", Offset = "0x11085FC", VA = "0x11085FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x11087C4", Offset = "0x11087C4", VA = "0x11087C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x11087CC", Offset = "0x11087CC", VA = "0x11087CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x110899C", Offset = "0x110899C", VA = "0x110899C")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x1108D14", Offset = "0x1108D14", VA = "0x1108D14")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1108E60", Offset = "0x1108E60", VA = "0x1108E60")]
		public void UpdateLineVertices(UnityEngine.Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1108E88", Offset = "0x1108E88", VA = "0x1108E88")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1108EB8", Offset = "0x1108EB8", VA = "0x1108EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1108EBC", Offset = "0x1108EBC", VA = "0x1108EBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1108EC0", Offset = "0x1108EC0", VA = "0x1108EC0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1108EC4", Offset = "0x1108EC4", VA = "0x1108EC4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1109018", Offset = "0x1109018", VA = "0x1109018")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(MeshRenderer))]
	[RequireComponent(typeof(MeshFilter))]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UnityEngine.Vector3 Average;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UnityEngine.Vector3 m_startPos;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.Vector3 m_endPos;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_lightSaberFactor;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x17000181")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x1109020", Offset = "0x1109020", VA = "0x1109020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x1109028", Offset = "0x1109028", VA = "0x1109028")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x1109030", Offset = "0x1109030", VA = "0x1109030")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x1109038", Offset = "0x1109038", VA = "0x1109038")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public Color LineColor
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x1109044", Offset = "0x1109044", VA = "0x1109044")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x1108528", Offset = "0x1108528", VA = "0x1108528")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public float LineWidth
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x11091C8", Offset = "0x11091C8", VA = "0x11091C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x1108710", Offset = "0x1108710", VA = "0x1108710")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x11092B0", Offset = "0x11092B0", VA = "0x11092B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x11088E0", Offset = "0x11088E0", VA = "0x11088E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public UnityEngine.Vector3 StartPos
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x11092B8", Offset = "0x11092B8", VA = "0x11092B8")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x1108CE0", Offset = "0x1108CE0", VA = "0x1108CE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public UnityEngine.Vector3 EndPos
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x11095B4", Offset = "0x11095B4", VA = "0x11095B4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x1108CF4", Offset = "0x1108CF4", VA = "0x1108CF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1109050", Offset = "0x1109050", VA = "0x1109050")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x11096C8", Offset = "0x11096C8", VA = "0x11096C8")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1109754", Offset = "0x1109754", VA = "0x1109754")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1109800", Offset = "0x1109800", VA = "0x1109800")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x11095C0", Offset = "0x11095C0", VA = "0x11095C0")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x11098A8", Offset = "0x11098A8", VA = "0x11098A8")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x11091D0", Offset = "0x11091D0", VA = "0x11091D0")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x11092C4", Offset = "0x11092C4", VA = "0x11092C4")]
		public void SetStartAndEndPoints(UnityEngine.Vector3 startPoint, UnityEngine.Vector3 endPoint)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1109A60", Offset = "0x1109A60", VA = "0x1109A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1109B7C", Offset = "0x1109B7C", VA = "0x1109B7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1109C50", Offset = "0x1109C50", VA = "0x1109C50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1109C90", Offset = "0x1109C90", VA = "0x1109C90")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1109D2C", Offset = "0x1109D2C", VA = "0x1109D2C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1109DE8", Offset = "0x1109DE8", VA = "0x1109DE8")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	[RequireComponent(typeof(MeshFilter))]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UnityEngine.Vector3 Average;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_lightSaberFactor;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEngine.Vector3[] m_lineVertices;

		[Token(Token = "0x17000188")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x110AE54", Offset = "0x110AE54", VA = "0x110AE54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x110AE5C", Offset = "0x110AE5C", VA = "0x110AE5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x110AE64", Offset = "0x110AE64", VA = "0x110AE64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x110AE6C", Offset = "0x110AE6C", VA = "0x110AE6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public Color LineColor
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x110AE78", Offset = "0x110AE78", VA = "0x110AE78")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x110AE84", Offset = "0x110AE84", VA = "0x110AE84")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public float LineWidth
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x110B0C8", Offset = "0x110B0C8", VA = "0x110B0C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x110B0D0", Offset = "0x110B0D0", VA = "0x110B0D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x110B264", Offset = "0x110B264", VA = "0x110B264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x110B26C", Offset = "0x110B26C", VA = "0x110B26C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public UnityEngine.Vector3[] LineVertices
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x110B328", Offset = "0x110B328", VA = "0x110B328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x110AF50", Offset = "0x110AF50", VA = "0x110AF50")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x110B430", Offset = "0x110B430", VA = "0x110B430")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x110B4BC", Offset = "0x110B4BC", VA = "0x110B4BC")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x110B568", Offset = "0x110B568", VA = "0x110B568")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x110B330", Offset = "0x110B330", VA = "0x110B330")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x110C224", Offset = "0x110C224", VA = "0x110C224")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x110B184", Offset = "0x110B184", VA = "0x110B184")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x110B610", Offset = "0x110B610", VA = "0x110B610")]
		public void UpdateLineVertices(UnityEngine.Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x110C440", Offset = "0x110C440", VA = "0x110C440")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x110C4E0", Offset = "0x110C4E0", VA = "0x110C4E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x110C5B4", Offset = "0x110C5B4", VA = "0x110C5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x110C5F4", Offset = "0x110C5F4", VA = "0x110C5F4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x110C690", Offset = "0x110C690", VA = "0x110C690")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x110C7E4", Offset = "0x110C7E4", VA = "0x110C7E4")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x200030D")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x200030E")]
		public class ListIndices
		{
			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x110D228", Offset = "0x110D228", VA = "0x110D228")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030F")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x110D4C8", Offset = "0x110D4C8", VA = "0x110D4C8")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x110D574", Offset = "0x110D574", VA = "0x110D574")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x2000310")]
		public class UniqueVertex
		{
			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4001252")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x110D628", Offset = "0x110D628", VA = "0x110D628", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x110D6D8", Offset = "0x110D6D8", VA = "0x110D6D8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x110D2A8", Offset = "0x110D2A8", VA = "0x110D2A8")]
			public UniqueVertex(UnityEngine.Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x110D72C", Offset = "0x110D72C", VA = "0x110D72C")]
			public UnityEngine.Vector3 ToVertex()
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x110D7A8", Offset = "0x110D7A8", VA = "0x110D7A8")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x110D7C4", Offset = "0x110D7C4", VA = "0x110D7C4")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x110D6EC", Offset = "0x110D6EC", VA = "0x110D6EC")]
			private void FromVertex(UnityEngine.Vector3 vertex)
			{
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x110D7EC", Offset = "0x110D7EC", VA = "0x110D7EC")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x110D784", Offset = "0x110D784", VA = "0x110D784")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000311")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x17000192")]
			public int FaceIndex
			{
				[Token(Token = "0x6000F10")]
				[Address(RVA = "0x110D8D0", Offset = "0x110D8D0", VA = "0x110D8D0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000193")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6000F11")]
				[Address(RVA = "0x110D8D8", Offset = "0x110D8D8", VA = "0x110D8D8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x110D2EC", Offset = "0x110D2EC", VA = "0x110D2EC")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x2000312")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x17000194")]
			public int UniqueIndex
			{
				[Token(Token = "0x6000F13")]
				[Address(RVA = "0x110D8E0", Offset = "0x110D8E0", VA = "0x110D8E0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x110D3C0", Offset = "0x110D3C0", VA = "0x110D3C0")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x110D318", Offset = "0x110D318", VA = "0x110D318")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<UnityEngine.Vector3> m_listVertices;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<UnityEngine.Vector3> m_listVerticesWorld;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x1700018E")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x110CA20", Offset = "0x110CA20", VA = "0x110CA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public List<UnityEngine.Vector3> ListVertices
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x110CA28", Offset = "0x110CA28", VA = "0x110CA28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public List<UnityEngine.Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x110CA30", Offset = "0x110CA30", VA = "0x110CA30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x110CA38", Offset = "0x110CA38", VA = "0x110CA38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x110CA40", Offset = "0x110CA40", VA = "0x110CA40")]
		public void BuildData(Mesh sourceMesh, UnityEngine.Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x110D56C", Offset = "0x110D56C", VA = "0x110D56C")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000313")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Vector3 m_v3Position;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 m_v3Rotation;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 m_v3Scale;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x110D8E8", Offset = "0x110D8E8", VA = "0x110D8E8")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x110D948", Offset = "0x110D948", VA = "0x110D948")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x2000315")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x2000316")]
		private class Triangle
		{
			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.Vector3 m_v3Normal;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x1700019C")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6000F3F")]
				[Address(RVA = "0x1110EFC", Offset = "0x1110EFC", VA = "0x1110EFC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			public bool HasUVData
			{
				[Token(Token = "0x6000F40")]
				[Address(RVA = "0x1110F04", Offset = "0x1110F04", VA = "0x1110F04")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019E")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6000F41")]
				[Address(RVA = "0x1110F0C", Offset = "0x1110F0C", VA = "0x1110F0C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019F")]
			public UnityEngine.Vector3 Normal
			{
				[Token(Token = "0x6000F42")]
				[Address(RVA = "0x1110F14", Offset = "0x1110F14", VA = "0x1110F14")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x170001A0")]
			public int[] Indices
			{
				[Token(Token = "0x6000F43")]
				[Address(RVA = "0x1110F20", Offset = "0x1110F20", VA = "0x1110F20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x1110558", Offset = "0x1110558", VA = "0x1110558")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x110F7EC", Offset = "0x110F7EC", VA = "0x110F7EC")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x110EB00", Offset = "0x110EB00", VA = "0x110EB00")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x1110F28", Offset = "0x1110F28", VA = "0x1110F28")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x110EC88", Offset = "0x110EC88", VA = "0x110EC88")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x11111F8", Offset = "0x11111F8", VA = "0x11111F8")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x110F708", Offset = "0x110F708", VA = "0x110F708")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x1111228", Offset = "0x1111228", VA = "0x1111228")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x110F94C", Offset = "0x110F94C", VA = "0x110F94C")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x2000317")]
		private class TriangleList
		{
			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1111258", Offset = "0x1111258", VA = "0x1111258")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x2000318")]
		private class Vertex
		{
			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 m_v3Position;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 m_v3PositionWorld;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x1110134", Offset = "0x1110134", VA = "0x1110134")]
			public Vertex(Simplifier simplifier, UnityEngine.Vector3 v, UnityEngine.Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x110F60C", Offset = "0x110F60C", VA = "0x110F60C")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x11110F8", Offset = "0x11110F8", VA = "0x11110F8")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x110EB60", Offset = "0x110EB60", VA = "0x110EB60")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000319")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x11112D8", Offset = "0x11112D8", VA = "0x11112D8", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x111137C", Offset = "0x111137C", VA = "0x111137C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x111139C", Offset = "0x111139C", VA = "0x111139C")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x200031A")]
		private class VertexDataHash
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UnityEngine.Vector3 _v3Vertex;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private UnityEngine.Vector3 _v3Normal;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x170001A1")]
			public UnityEngine.Vector3 Vertex
			{
				[Token(Token = "0x6000F55")]
				[Address(RVA = "0x11113A4", Offset = "0x11113A4", VA = "0x11113A4")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x170001A2")]
			public UnityEngine.Vector3 Normal
			{
				[Token(Token = "0x6000F56")]
				[Address(RVA = "0x11113B0", Offset = "0x11113B0", VA = "0x11113B0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x170001A3")]
			public Vector2 UV1
			{
				[Token(Token = "0x6000F57")]
				[Address(RVA = "0x11113BC", Offset = "0x11113BC", VA = "0x11113BC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170001A4")]
			public Vector2 UV2
			{
				[Token(Token = "0x6000F58")]
				[Address(RVA = "0x11113C4", Offset = "0x11113C4", VA = "0x11113C4")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170001A5")]
			public Color32 Color
			{
				[Token(Token = "0x6000F59")]
				[Address(RVA = "0x11113CC", Offset = "0x11113CC", VA = "0x11113CC")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x11113D4", Offset = "0x11113D4", VA = "0x11113D4")]
			public VertexDataHash(UnityEngine.Vector3 v3Vertex, UnityEngine.Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x11114C4", Offset = "0x11114C4", VA = "0x11114C4", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x11115F8", Offset = "0x11115F8", VA = "0x11115F8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1111618", Offset = "0x1111618", VA = "0x1111618")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1111634", Offset = "0x1111634", VA = "0x1111634")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200031B")]
		[CompilerGenerated]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F62")]
				[Address(RVA = "0x1112018", Offset = "0x1112018", VA = "0x1112018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F64")]
				[Address(RVA = "0x1112060", Offset = "0x1112060", VA = "0x1112060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x110DC88", Offset = "0x110DC88", VA = "0x110DC88")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x111165C", Offset = "0x111165C", VA = "0x111165C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1111660", Offset = "0x1111660", VA = "0x1111660", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1112020", Offset = "0x1112020", VA = "0x1112020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031C")]
		[CompilerGenerated]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F68")]
				[Address(RVA = "0x1112A98", Offset = "0x1112A98", VA = "0x1112A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6A")]
				[Address(RVA = "0x1112AE0", Offset = "0x1112AE0", VA = "0x1112AE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x110DD50", Offset = "0x110DD50", VA = "0x110DD50")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x1112068", Offset = "0x1112068", VA = "0x1112068", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x111206C", Offset = "0x111206C", VA = "0x111206C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x1112AA0", Offset = "0x1112AA0", VA = "0x1112AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031D")]
		[CompilerGenerated]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityEngine.Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<UnityEngine.Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<UnityEngine.Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6E")]
				[Address(RVA = "0x1114210", Offset = "0x1114210", VA = "0x1114210", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F70")]
				[Address(RVA = "0x1114258", Offset = "0x1114258", VA = "0x1114258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x110E630", Offset = "0x110E630", VA = "0x110E630")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x1112AE8", Offset = "0x1112AE8", VA = "0x1112AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x1112AEC", Offset = "0x1112AEC", VA = "0x1112AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x1114218", Offset = "0x1114218", VA = "0x1114218", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031E")]
		[CompilerGenerated]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F74")]
				[Address(RVA = "0x11144E4", Offset = "0x11144E4", VA = "0x11144E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F76")]
				[Address(RVA = "0x111452C", Offset = "0x111452C", VA = "0x111452C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x110F0DC", Offset = "0x110F0DC", VA = "0x110F0DC")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x1114260", Offset = "0x1114260", VA = "0x1114260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x1114264", Offset = "0x1114264", VA = "0x1114264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x11144EC", Offset = "0x11144EC", VA = "0x11144EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x400125F")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		[SerializeField]
		private bool m_bUseCurvature;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[HideInInspector]
		[SerializeField]
		private bool m_bProtectTexture;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000195")]
		public static bool Cancelled
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x110DA60", Offset = "0x110DA60", VA = "0x110DA60")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x110DAA8", Offset = "0x110DAA8", VA = "0x110DAA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x110DAF4", Offset = "0x110DAF4", VA = "0x110DAF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x110DB3C", Offset = "0x110DB3C", VA = "0x110DB3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x110DB88", Offset = "0x110DB88", VA = "0x110DB88")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x110DB90", Offset = "0x110DB90", VA = "0x110DB90")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x110DB9C", Offset = "0x110DB9C", VA = "0x110DB9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x110DBA4", Offset = "0x110DBA4", VA = "0x110DBA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public bool UseCurvature
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x110DBB0", Offset = "0x110DBB0", VA = "0x110DBB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x110DBB8", Offset = "0x110DBB8", VA = "0x110DBB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x110DBC4", Offset = "0x110DBC4", VA = "0x110DBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x110DBCC", Offset = "0x110DBCC", VA = "0x110DBCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public bool LockBorder
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x110DBD8", Offset = "0x110DBD8", VA = "0x110DBD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x110DBE0", Offset = "0x110DBE0", VA = "0x110DBE0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x110DBEC", Offset = "0x110DBEC", VA = "0x110DBEC")]
		[IteratorStateMachine(typeof(<ProgressiveMesh>d__24))]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x110DCB0", Offset = "0x110DCB0", VA = "0x110DCB0")]
		[IteratorStateMachine(typeof(<ComputeMeshWithVertexCount>d__25))]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x110DD78", Offset = "0x110DD78", VA = "0x110DD78")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x110DD80", Offset = "0x110DD80", VA = "0x110DD80")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x110DDC0", Offset = "0x110DDC0", VA = "0x110DDC0")]
		public static UnityEngine.Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x110E594", Offset = "0x110E594", VA = "0x110E594")]
		[IteratorStateMachine(typeof(<ConsolidateMesh>d__29))]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, UnityEngine.Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x110E658", Offset = "0x110E658", VA = "0x110E658")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x110E6E8", Offset = "0x110E6E8", VA = "0x110E6E8")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x110ED5C", Offset = "0x110ED5C", VA = "0x110ED5C")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x110F04C", Offset = "0x110F04C", VA = "0x110F04C")]
		[IteratorStateMachine(typeof(<ComputeAllEdgeCollapseCosts>d__33))]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x110F104", Offset = "0x110F104", VA = "0x110F104")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x110FF68", Offset = "0x110FF68", VA = "0x110FF68")]
		private void AddVertices(List<UnityEngine.Vector3> listVertices, List<UnityEngine.Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x11102F4", Offset = "0x11102F4", VA = "0x11102F4")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1110974", Offset = "0x1110974", VA = "0x1110974")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1110B38", Offset = "0x1110B38", VA = "0x1110B38")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1110BE0", Offset = "0x1110BE0", VA = "0x1110BE0")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x110FC50", Offset = "0x110FC50", VA = "0x110FC50")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x110FDC8", Offset = "0x110FDC8", VA = "0x110FDC8")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1110C8C", Offset = "0x1110C8C", VA = "0x1110C8C")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1110B3C", Offset = "0x1110B3C", VA = "0x1110B3C")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1110D50", Offset = "0x1110D50", VA = "0x1110D50")]
		public Simplifier()
		{
		}
	}
}
namespace TalesFromTheRift
{
	[Token(Token = "0x200031F")]
	public class CanvasKeyboard : MonoBehaviour
	{
		[Token(Token = "0x2000320")]
		public enum CanvasKeyboardType
		{
			[Token(Token = "0x40012C0")]
			ASCIICapable
		}

		[Token(Token = "0x2000321")]
		[CompilerGenerated]
		private sealed class <ActivateInputFieldWithoutSelection>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputField inputField;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F84")]
				[Address(RVA = "0x1114F78", Offset = "0x1114F78", VA = "0x1114F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F86")]
				[Address(RVA = "0x1114FC0", Offset = "0x1114FC0", VA = "0x1114FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x1114E08", Offset = "0x1114E08", VA = "0x1114E08")]
			[DebuggerHidden]
			public <ActivateInputFieldWithoutSelection>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x1114E38", Offset = "0x1114E38", VA = "0x1114E38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x1114E3C", Offset = "0x1114E3C", VA = "0x1114E3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x1114F80", Offset = "0x1114F80", VA = "0x1114F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject inputObject;

		[Token(Token = "0x170001AE")]
		public static bool IsOpen
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x11147F0", Offset = "0x11147F0", VA = "0x11147F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AF")]
		public string text
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x111486C", Offset = "0x111486C", VA = "0x111486C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x1114A54", Offset = "0x1114A54", VA = "0x1114A54")]
			set
			{
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1114534", Offset = "0x1114534", VA = "0x1114534")]
		public static CanvasKeyboard Open(Canvas canvas, [Optional] GameObject inputObject, CanvasKeyboardType keyboardType = CanvasKeyboardType.ASCIICapable)
		{
			return null;
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x11146D4", Offset = "0x11146D4", VA = "0x11146D4")]
		public static void Close()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1114C14", Offset = "0x1114C14", VA = "0x1114C14")]
		public void SendKeyString(string keyString)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1114784", Offset = "0x1114784", VA = "0x1114784")]
		public void CloseKeyboard()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1114D0C", Offset = "0x1114D0C", VA = "0x1114D0C")]
		private void ReactivateInputField(InputField inputField)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1114DA0", Offset = "0x1114DA0", VA = "0x1114DA0")]
		[IteratorStateMachine(typeof(<ActivateInputFieldWithoutSelection>d__12))]
		private IEnumerator ActivateInputFieldWithoutSelection(InputField inputField)
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1114E30", Offset = "0x1114E30", VA = "0x1114E30")]
		public CanvasKeyboard()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class CanvasKeyboardASCII : MonoBehaviour
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasKeyboard canvasKeyboard;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool ShiftDown;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool AltDown;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject alphaBoardUnsfhifted;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject alphaBoardSfhifted;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject numberBoardUnshifted;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject numberBoardShifted;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1114FC8", Offset = "0x1114FC8", VA = "0x1114FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1114FCC", Offset = "0x1114FCC", VA = "0x1114FCC")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1115098", Offset = "0x1115098", VA = "0x1115098")]
		public void OnKeyDown(GameObject kb)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x111528C", Offset = "0x111528C", VA = "0x111528C")]
		public CanvasKeyboardASCII()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class OpenCanvasKeyboard : MonoBehaviour
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas CanvasKeyboardObject;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1115294", Offset = "0x1115294", VA = "0x1115294")]
		public void OpenKeyboard()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1115318", Offset = "0x1115318", VA = "0x1115318")]
		public void CloseKeyboard()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x111531C", Offset = "0x111531C", VA = "0x111531C")]
		public OpenCanvasKeyboard()
		{
		}
	}
}
namespace StylizedWater
{
	[Token(Token = "0x2000324")]
	public static class GerstnerWaveDisplacement
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1115324", Offset = "0x1115324", VA = "0x1115324")]
		private static UnityEngine.Vector3 GerstnerWave(UnityEngine.Vector3 position, float steepness, float wavelength, float speed, float direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1115480", Offset = "0x1115480", VA = "0x1115480")]
		public static UnityEngine.Vector3 GetWaveDisplacement(UnityEngine.Vector3 position, float steepness, float wavelength, float speed, float[] directions)
		{
			return default(UnityEngine.Vector3);
		}
	}
}
namespace Skinner
{
	[Token(Token = "0x2000325")]
	[AddComponentMenu("")]
	internal class CullingStateController : MonoBehaviour
	{
		[Token(Token = "0x170001B2")]
		public Renderer target
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x1115628", Offset = "0x1115628", VA = "0x1115628")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x1115630", Offset = "0x1115630", VA = "0x1115630")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1115638", Offset = "0x1115638", VA = "0x1115638")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1115658", Offset = "0x1115658", VA = "0x1115658")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1115678", Offset = "0x1115678", VA = "0x1115678")]
		public CullingStateController()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class SkinnerGlitchTemplate : ScriptableObject
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x170001B3")]
		public Mesh mesh
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1115680", Offset = "0x1115680", VA = "0x1115680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1115688", Offset = "0x1115688", VA = "0x1115688")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x1115750", Offset = "0x1115750", VA = "0x1115750")]
		public SkinnerGlitchTemplate()
		{
		}
	}
	[Token(Token = "0x2000327")]
	internal static class SkinnerInternals
	{
		[Token(Token = "0x170001B4")]
		public static RenderTextureFormat supportedBufferFormat
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1115758", Offset = "0x1115758", VA = "0x1115758")]
			get
			{
				return default(RenderTextureFormat);
			}
		}
	}
	[Token(Token = "0x2000328")]
	internal class AnimationKernelSet<KernelEnum, BufferEnum> where KernelEnum : struct where BufferEnum : struct
	{
		[Token(Token = "0x2000329")]
		public delegate int KernelEnumToInt(KernelEnum e);

		[Token(Token = "0x200032A")]
		public delegate int BufferEnumToInt(BufferEnum e);

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private KernelEnumToInt _getKernelIndex;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BufferEnumToInt _getBufferIndex;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader _shader;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _material;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture[] _buffers;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _swapFlag;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _ready;

		[Token(Token = "0x170001B5")]
		public Material material
		{
			[Token(Token = "0x6000F99")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public bool ready
		{
			[Token(Token = "0x6000F9A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F9B")]
		public RenderTexture GetLastBuffer(BufferEnum buffer)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		public RenderTexture GetWorkingBuffer(BufferEnum buffer)
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		public AnimationKernelSet(Shader shader, KernelEnumToInt k2i, BufferEnumToInt b2i)
		{
		}

		[Token(Token = "0x6000F9E")]
		public void Setup(int width, int height)
		{
		}

		[Token(Token = "0x6000F9F")]
		public void Release()
		{
		}

		[Token(Token = "0x6000FA0")]
		public void Invoke(KernelEnum kernel, BufferEnum buffer)
		{
		}

		[Token(Token = "0x6000FA1")]
		public void SwapBuffers()
		{
		}
	}
	[Token(Token = "0x200032B")]
	internal class RendererAdapter
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _gameObject;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _defaultMaterial;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MaterialPropertyBlock _propertyBlock;

		[Token(Token = "0x170001B7")]
		public MaterialPropertyBlock propertyBlock
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1115760", Offset = "0x1115760", VA = "0x1115760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1115768", Offset = "0x1115768", VA = "0x1115768")]
		public RendererAdapter(GameObject gameObject, Material defaultMaterial)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x11157E8", Offset = "0x11157E8", VA = "0x11157E8")]
		public void Update(Mesh templateMesh)
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AddComponentMenu("Skinner/Skinner Debug")]
	public class SkinnerDebug : MonoBehaviour
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Reference to a Skinner source that will be visualized.")]
		private SkinnerSource _source;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _material;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock _props;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh _mesh;

		[Token(Token = "0x40012DE")]
		private const int linesPerMesh = 10922;

		[Token(Token = "0x170001B8")]
		public SkinnerSource source
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x111598C", Offset = "0x111598C", VA = "0x111598C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x1115994", Offset = "0x1115994", VA = "0x1115994")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x111599C", Offset = "0x111599C", VA = "0x111599C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1115CF8", Offset = "0x1115CF8", VA = "0x1115CF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1115DD0", Offset = "0x1115DD0", VA = "0x1115DD0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x11161C0", Offset = "0x11161C0", VA = "0x11161C0")]
		public SkinnerDebug()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AddComponentMenu("Skinner/Skinner Glitch")]
	[RequireComponent(typeof(MeshRenderer))]
	public class SkinnerGlitch : MonoBehaviour
	{
		[Token(Token = "0x200032E")]
		private enum Kernels
		{
			[Token(Token = "0x40012EC")]
			InitializePosition,
			[Token(Token = "0x40012ED")]
			InitializeVelocity,
			[Token(Token = "0x40012EE")]
			UpdatePosition,
			[Token(Token = "0x40012EF")]
			UpdateVelocity
		}

		[Token(Token = "0x200032F")]
		private enum Buffers
		{
			[Token(Token = "0x40012F1")]
			Position,
			[Token(Token = "0x40012F2")]
			Velocity
		}

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Reference to an effect source.")]
		[SerializeField]
		private SkinnerSource _source;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("Length of the frame history buffer.")]
		private int _historyLength;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(0f, 1f)]
		[Tooltip("Determines how an effect element inherit a source velocity.")]
		private float _velocityScale;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Triangles that have longer edges than this value will be culled.")]
		private float _edgeThreshold;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("Triangles that have larger area than this value will be culled.")]
		private float _areaThreshold;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("Determines the random number sequence used for the effect.")]
		private int _randomSeed;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _reconfigured;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SkinnerGlitchTemplate _template;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader _kernelShader;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material _defaultMaterial;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AnimationKernelSet<Kernels, Buffers> _kernel;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RendererAdapter _renderer;

		[Token(Token = "0x170001B9")]
		public SkinnerSource source
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x11161C8", Offset = "0x11161C8", VA = "0x11161C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x11161D0", Offset = "0x11161D0", VA = "0x11161D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public int historyLength
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x11161E0", Offset = "0x11161E0", VA = "0x11161E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x11161E8", Offset = "0x11161E8", VA = "0x11161E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float velocityScale
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x11161F8", Offset = "0x11161F8", VA = "0x11161F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x1116200", Offset = "0x1116200", VA = "0x1116200")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1116208", Offset = "0x1116208", VA = "0x1116208")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1116210", Offset = "0x1116210", VA = "0x1116210")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float areaThreshold
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1116218", Offset = "0x1116218", VA = "0x1116218")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1116220", Offset = "0x1116220", VA = "0x1116220")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public int randomSeed
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1116228", Offset = "0x1116228", VA = "0x1116228")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1116230", Offset = "0x1116230", VA = "0x1116230")]
			set
			{
			}
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1116240", Offset = "0x1116240", VA = "0x1116240")]
		private void InvokeAnimationKernels()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x11166C8", Offset = "0x11166C8", VA = "0x11166C8")]
		private void UpdateRenderer()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1116874", Offset = "0x1116874", VA = "0x1116874")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1116880", Offset = "0x1116880", VA = "0x1116880")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x11168B4", Offset = "0x11168B4", VA = "0x11168B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1116904", Offset = "0x1116904", VA = "0x1116904")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x11169CC", Offset = "0x11169CC", VA = "0x11169CC")]
		public SkinnerGlitch()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class SkinnerModel : ScriptableObject
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _vertexCount;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x170001BF")]
		public int vertexCount
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x1116A70", Offset = "0x1116A70", VA = "0x1116A70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C0")]
		public Mesh mesh
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x1116A78", Offset = "0x1116A78", VA = "0x1116A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1116A80", Offset = "0x1116A80", VA = "0x1116A80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1116A84", Offset = "0x1116A84", VA = "0x1116A84")]
		public SkinnerModel()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AddComponentMenu("Skinner/Skinner Particle")]
	[RequireComponent(typeof(MeshRenderer))]
	public class SkinnerParticle : MonoBehaviour
	{
		[Token(Token = "0x2000333")]
		private enum Kernels
		{
			[Token(Token = "0x400130E")]
			InitializePosition,
			[Token(Token = "0x400130F")]
			InitializeVelocity,
			[Token(Token = "0x4001310")]
			InitializeRotation,
			[Token(Token = "0x4001311")]
			UpdatePosition,
			[Token(Token = "0x4001312")]
			UpdateVelocity,
			[Token(Token = "0x4001313")]
			UpdateRotation
		}

		[Token(Token = "0x2000334")]
		private enum Buffers
		{
			[Token(Token = "0x4001315")]
			Position,
			[Token(Token = "0x4001316")]
			Velocity,
			[Token(Token = "0x4001317")]
			Rotation
		}

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Reference to an effect source.")]
		private SkinnerSource _source;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("Reference to a template object used for rendering particles.")]
		private SkinnerParticleTemplate _template;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Limits speed of particles. This only affects changes in particle positions (doesn't modify velocity vectors).")]
		[SerializeField]
		private float _speedLimit;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 15f)]
		[SerializeField]
		[Tooltip("The drag (damping) coefficient.")]
		private float _drag;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("The constant acceleration.")]
		private UnityEngine.Vector3 _gravity;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Tooltip("Changes the duration of a particle based on its initial speed.")]
		private float _speedToLife;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("The maximum duration of particles.")]
		private float _maxLife;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Changes the angular velocity of a particle based on its speed.")]
		[SerializeField]
		private float _speedToSpin;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The maximum angular velocity of particles.")]
		[SerializeField]
		private float _maxSpin;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Changes the scale of a particle based on its initial speed.")]
		[SerializeField]
		private float _speedToScale;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Tooltip("The maximum scale of particles.")]
		private float _maxScale;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Tooltip("The amplitude of acceleration from the turbulent noise field.")]
		private float _noiseAmplitude;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Tooltip("The spatial frequency of the turbulent noise field.")]
		private float _noiseFrequency;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[Tooltip("Determines how fast the turbulent noise field changes.")]
		private float _noiseMotion;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Tooltip("Determines the random number sequence used for the effect.")]
		private int _randomSeed;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _reconfigured;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Shader _kernelShader;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material _defaultMaterial;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AnimationKernelSet<Kernels, Buffers> _kernel;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEngine.Vector3 _noiseOffset;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RendererAdapter _renderer;

		[Token(Token = "0x170001C1")]
		public SkinnerSource source
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x1116A8C", Offset = "0x1116A8C", VA = "0x1116A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x1116A94", Offset = "0x1116A94", VA = "0x1116A94")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public SkinnerParticleTemplate template
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x1116AA4", Offset = "0x1116AA4", VA = "0x1116AA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1116AAC", Offset = "0x1116AAC", VA = "0x1116AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float speedLimit
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1116ABC", Offset = "0x1116ABC", VA = "0x1116ABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1116AC4", Offset = "0x1116AC4", VA = "0x1116AC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public float drag
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1116ACC", Offset = "0x1116ACC", VA = "0x1116ACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x1116AD4", Offset = "0x1116AD4", VA = "0x1116AD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public UnityEngine.Vector3 gravity
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x1116ADC", Offset = "0x1116ADC", VA = "0x1116ADC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x1116AE8", Offset = "0x1116AE8", VA = "0x1116AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float speedToLife
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x1116AF4", Offset = "0x1116AF4", VA = "0x1116AF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x1116AFC", Offset = "0x1116AFC", VA = "0x1116AFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public float maxLife
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x1116B04", Offset = "0x1116B04", VA = "0x1116B04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x1116B0C", Offset = "0x1116B0C", VA = "0x1116B0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float speedToSpin
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x1116B14", Offset = "0x1116B14", VA = "0x1116B14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x1116B1C", Offset = "0x1116B1C", VA = "0x1116B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float maxSpin
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1116B24", Offset = "0x1116B24", VA = "0x1116B24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x1116B2C", Offset = "0x1116B2C", VA = "0x1116B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public float speedToScale
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x1116B34", Offset = "0x1116B34", VA = "0x1116B34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x1116B3C", Offset = "0x1116B3C", VA = "0x1116B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float maxScale
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x1116B44", Offset = "0x1116B44", VA = "0x1116B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x1116B4C", Offset = "0x1116B4C", VA = "0x1116B4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float noiseAmplitude
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x1116B54", Offset = "0x1116B54", VA = "0x1116B54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x1116B5C", Offset = "0x1116B5C", VA = "0x1116B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public float noiseFrequency
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x1116B64", Offset = "0x1116B64", VA = "0x1116B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x1116B6C", Offset = "0x1116B6C", VA = "0x1116B6C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public float noiseMotion
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x1116B74", Offset = "0x1116B74", VA = "0x1116B74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x1116B7C", Offset = "0x1116B7C", VA = "0x1116B7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public int randomSeed
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x1116B84", Offset = "0x1116B84", VA = "0x1116B84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x1116B8C", Offset = "0x1116B8C", VA = "0x1116B8C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1116B9C", Offset = "0x1116B9C", VA = "0x1116B9C")]
		private void InvokeAnimationKernels()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x111744C", Offset = "0x111744C", VA = "0x111744C")]
		private void UpdateRenderer()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x11176A4", Offset = "0x11176A4", VA = "0x11176A4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x11176B0", Offset = "0x11176B0", VA = "0x11176B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x11176E4", Offset = "0x11176E4", VA = "0x11176E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1117734", Offset = "0x1117734", VA = "0x1117734")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x11177FC", Offset = "0x11177FC", VA = "0x11177FC")]
		public SkinnerParticle()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class SkinnerParticleTemplate : ScriptableObject
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("List of meshes of particle shapes.")]
		[SerializeField]
		private Mesh[] _shapes;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Maximum number of particle instances.")]
		[SerializeField]
		private int _maxInstanceCount;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _instanceCount;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Mesh _defaultShape;

		[Token(Token = "0x170001D0")]
		public Mesh[] shapes
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x1117904", Offset = "0x1117904", VA = "0x1117904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public int maxInstanceCount
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x111790C", Offset = "0x111790C", VA = "0x111790C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		public int instanceCount
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x1117914", Offset = "0x1117914", VA = "0x1117914")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D3")]
		public Mesh mesh
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x111791C", Offset = "0x111791C", VA = "0x111791C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1117924", Offset = "0x1117924", VA = "0x1117924")]
		private Mesh GetShape(int index)
		{
			return null;
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x11179C0", Offset = "0x11179C0", VA = "0x11179C0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x11179E4", Offset = "0x11179E4", VA = "0x11179E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1117AAC", Offset = "0x1117AAC", VA = "0x1117AAC")]
		public SkinnerParticleTemplate()
		{
		}
	}
	[Token(Token = "0x2000337")]
	[AddComponentMenu("Skinner/Skinner Source")]
	[RequireComponent(typeof(SkinnedMeshRenderer))]
	public class SkinnerSource : MonoBehaviour
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Preprocessed model data.")]
		private SkinnerModel _model;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _replacementShader;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader _replacementShaderPosition;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _replacementShaderNormal;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader _replacementShaderTangent;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _placeholderMaterial;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _positionBuffer0;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _positionBuffer1;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _normalBuffer;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _tangentBuffer;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderBuffer[] _mrt0;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderBuffer[] _mrt1;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _swapFlag;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera _camera;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _frameCount;

		[Token(Token = "0x170001D4")]
		public int vertexCount
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x1116140", Offset = "0x1116140", VA = "0x1116140")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D5")]
		public bool isReady
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x11160F8", Offset = "0x11160F8", VA = "0x11160F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D6")]
		public RenderTexture positionBuffer
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x1116124", Offset = "0x1116124", VA = "0x1116124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public RenderTexture previousPositionBuffer
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x1116108", Offset = "0x1116108", VA = "0x1116108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public RenderTexture normalBuffer
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x1117B0C", Offset = "0x1117B0C", VA = "0x1117B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public RenderTexture tangentBuffer
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x1117B14", Offset = "0x1117B14", VA = "0x1117B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1117B1C", Offset = "0x1117B1C", VA = "0x1117B1C")]
		private RenderTexture CreateBuffer()
		{
			return null;
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1117BA8", Offset = "0x1117BA8", VA = "0x1117BA8")]
		private void OverrideRenderer()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1117C44", Offset = "0x1117C44", VA = "0x1117C44")]
		private void BuildCamera()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1117EA4", Offset = "0x1117EA4", VA = "0x1117EA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1118024", Offset = "0x1118024", VA = "0x1118024")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x111818C", Offset = "0x111818C", VA = "0x111818C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x11182F0", Offset = "0x11182F0", VA = "0x11182F0")]
		public SkinnerSource()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AddComponentMenu("Skinner/Skinner Trail")]
	[RequireComponent(typeof(MeshRenderer))]
	public class SkinnerTrail : MonoBehaviour
	{
		[Token(Token = "0x2000339")]
		private enum Kernels
		{
			[Token(Token = "0x400133D")]
			InitializePosition,
			[Token(Token = "0x400133E")]
			InitializeVelocity,
			[Token(Token = "0x400133F")]
			InitializeOrthnorm,
			[Token(Token = "0x4001340")]
			UpdatePosition,
			[Token(Token = "0x4001341")]
			UpdateVelocity,
			[Token(Token = "0x4001342")]
			UpdateOrthnorm
		}

		[Token(Token = "0x200033A")]
		private enum Buffers
		{
			[Token(Token = "0x4001344")]
			Position,
			[Token(Token = "0x4001345")]
			Velocity,
			[Token(Token = "0x4001346")]
			Orthnorm
		}

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Reference to an effect source.")]
		[SerializeField]
		private SkinnerSource _source;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("Reference to a template object used for rendering trail lines.")]
		private SkinnerTrailTemplate _template;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Limits an amount of a vertex movement. This only affects changes in vertex positions (doesn't change velocity vectors).")]
		private float _speedLimit;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("Drag coefficient (damping coefficient).")]
		private float _drag;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Part of lines under this speed will be culled.")]
		[SerializeField]
		private float _cutoffSpeed;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[Tooltip("Increases the line width based on its speed.")]
		private float _speedToWidth;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("The maximum width of lines.")]
		private float _maxWidth;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Tooltip("Determines the random number sequence used for the effect.")]
		private int _randomSeed;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _reconfigured;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _kernelShader;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material _defaultMaterial;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationKernelSet<Kernels, Buffers> _kernel;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RendererAdapter _renderer;

		[Token(Token = "0x170001DA")]
		public SkinnerSource source
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x11182F8", Offset = "0x11182F8", VA = "0x11182F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x1118300", Offset = "0x1118300", VA = "0x1118300")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public SkinnerTrailTemplate template
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x1118310", Offset = "0x1118310", VA = "0x1118310")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x1118318", Offset = "0x1118318", VA = "0x1118318")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float speedLimit
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x1118328", Offset = "0x1118328", VA = "0x1118328")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x1118330", Offset = "0x1118330", VA = "0x1118330")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public float drag
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1118338", Offset = "0x1118338", VA = "0x1118338")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1118340", Offset = "0x1118340", VA = "0x1118340")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public float cutoffSpeed
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1118348", Offset = "0x1118348", VA = "0x1118348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1118350", Offset = "0x1118350", VA = "0x1118350")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public float speedToWidth
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x1118358", Offset = "0x1118358", VA = "0x1118358")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x1118360", Offset = "0x1118360", VA = "0x1118360")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public float maxWidth
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x1118368", Offset = "0x1118368", VA = "0x1118368")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x1118370", Offset = "0x1118370", VA = "0x1118370")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public int randomSeed
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x1118378", Offset = "0x1118378", VA = "0x1118378")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x1118380", Offset = "0x1118380", VA = "0x1118380")]
			set
			{
			}
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1118390", Offset = "0x1118390", VA = "0x1118390")]
		private void InvokeAnimationKernels()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1118950", Offset = "0x1118950", VA = "0x1118950")]
		private void UpdateRenderer()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1118BE8", Offset = "0x1118BE8", VA = "0x1118BE8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1118BF4", Offset = "0x1118BF4", VA = "0x1118BF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1118C44", Offset = "0x1118C44", VA = "0x1118C44")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1118C68", Offset = "0x1118C68", VA = "0x1118C68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1118D30", Offset = "0x1118D30", VA = "0x1118D30")]
		public SkinnerTrail()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class SkinnerTrailTemplate : ScriptableObject
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Determines how long trails can remain (specified in frames).")]
		private int _historyLength;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x170001E2")]
		public int historyLength
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x1118DCC", Offset = "0x1118DCC", VA = "0x1118DCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public int lineCount
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x1118DD4", Offset = "0x1118DD4", VA = "0x1118DD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E4")]
		public Mesh mesh
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x1118DE8", Offset = "0x1118DE8", VA = "0x1118DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1118DF0", Offset = "0x1118DF0", VA = "0x1118DF0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1118E14", Offset = "0x1118E14", VA = "0x1118E14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1118EDC", Offset = "0x1118EDC", VA = "0x1118EDC")]
		public SkinnerTrailTemplate()
		{
		}
	}
}
namespace Assets.SimpleLocalization
{
	[Token(Token = "0x200033D")]
	[ExecuteInEditMode]
	public class Downloader : MonoBehaviour
	{
		[Token(Token = "0x200033E")]
		[CompilerGenerated]
		private sealed class <Coroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<WWW> callback;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__2;

			[Token(Token = "0x170001E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001039")]
				[Address(RVA = "0x1119760", Offset = "0x1119760", VA = "0x1119760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600103B")]
				[Address(RVA = "0x11197A8", Offset = "0x11197A8", VA = "0x11197A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x111937C", Offset = "0x111937C", VA = "0x111937C")]
			[DebuggerHidden]
			public <Coroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x1119504", Offset = "0x1119504", VA = "0x1119504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1119508", Offset = "0x1119508", VA = "0x1119508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x1119768", Offset = "0x1119768", VA = "0x1119768", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Downloader _instance;

		[Token(Token = "0x170001E5")]
		public static Downloader Instance
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x111909C", Offset = "0x111909C", VA = "0x111909C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action OnNetworkReady
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x1118EEC", Offset = "0x1118EEC", VA = "0x1118EEC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x1118FC4", Offset = "0x1118FC4", VA = "0x1118FC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1119188", Offset = "0x1119188", VA = "0x1119188")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x11191E0", Offset = "0x11191E0", VA = "0x11191E0")]
		public static void Download(string url, Action<WWW> callback)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1119308", Offset = "0x1119308", VA = "0x1119308")]
		[IteratorStateMachine(typeof(<Coroutine>d__8))]
		private static IEnumerator Coroutine(string url, Action<WWW> callback)
		{
			return null;
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x11193A4", Offset = "0x11193A4", VA = "0x11193A4")]
		private static string CleaunupText(string text)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1119438", Offset = "0x1119438", VA = "0x1119438")]
		public Downloader()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class LocalizationLogic : MonoBehaviour
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Dropdown dropdown;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string languageSel;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectedValue;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1119820", Offset = "0x1119820", VA = "0x1119820")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x111A9AC", Offset = "0x111A9AC", VA = "0x111A9AC")]
		public void SetLocalization()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x111AB70", Offset = "0x111AB70", VA = "0x111AB70")]
		public LocalizationLogic()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public static class LocalizationManager
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<string, Dictionary<string, string>> Dictionary;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _language;

		[Token(Token = "0x170001E8")]
		public static string Language
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x111AD28", Offset = "0x111AD28", VA = "0x111AD28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x1119C84", Offset = "0x1119C84", VA = "0x1119C84")]
			set
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action LocalizationChanged
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x111AB78", Offset = "0x111AB78", VA = "0x111AB78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x111AC50", Offset = "0x111AC50", VA = "0x111AC50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x111AD80", Offset = "0x111AD80", VA = "0x111AD80")]
		public static void AutoLanguage()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1119D2C", Offset = "0x1119D2C", VA = "0x1119D2C")]
		public static void Read(string path = "Localization")
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x111AE50", Offset = "0x111AE50", VA = "0x111AE50")]
		public static bool HasKey(string localizationKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x111AF34", Offset = "0x111AF34", VA = "0x111AF34")]
		public static string Localize(string localizationKey)
		{
			return null;
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x111B59C", Offset = "0x111B59C", VA = "0x111B59C")]
		public static string Localize(string localizationKey, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x111B608", Offset = "0x111B608", VA = "0x111B608")]
		public static string GetChars()
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x111ADE4", Offset = "0x111ADE4", VA = "0x111ADE4")]
		private static string ReplaceMarkers(string text)
		{
			return null;
		}
	}
	[Token(Token = "0x2000343")]
	[ExecuteInEditMode]
	public class LocalizationSync : MonoBehaviour
	{
		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TableId;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sheet[] Sheets;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object SaveFolder;

		[Token(Token = "0x4001361")]
		private const string UrlPattern = "https://docs.google.com/spreadsheets/d/{0}/export?format=csv&gid={1}";

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x111BDC4", Offset = "0x111BDC4", VA = "0x111BDC4")]
		public LocalizationSync()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[RequireComponent(typeof(TMP_Dropdown))]
	public class LocalizedDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] LocalizationKeys;

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x111BDCC", Offset = "0x111BDCC", VA = "0x111BDCC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x111BFEC", Offset = "0x111BFEC", VA = "0x111BFEC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x111BE74", Offset = "0x111BE74", VA = "0x111BE74")]
		private void Localize()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x111C08C", Offset = "0x111C08C", VA = "0x111C08C")]
		public LocalizedDropdown()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[RequireComponent(typeof(Text))]
	public class LocalizedText : MonoBehaviour
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocalizationKey;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x111C094", Offset = "0x111C094", VA = "0x111C094")]
		private void Start()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x111C1E4", Offset = "0x111C1E4", VA = "0x111C1E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x111C13C", Offset = "0x111C13C", VA = "0x111C13C")]
		private void Localize()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x111C284", Offset = "0x111C284", VA = "0x111C284")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[RequireComponent(typeof(TextMeshPro))]
	public class LocalizedTextMeshPro : MonoBehaviour
	{
		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocalizationKey;

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x111C28C", Offset = "0x111C28C", VA = "0x111C28C")]
		private void Start()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x111C3DC", Offset = "0x111C3DC", VA = "0x111C3DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x111C334", Offset = "0x111C334", VA = "0x111C334")]
		private void Localize()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x111C47C", Offset = "0x111C47C", VA = "0x111C47C")]
		public LocalizedTextMeshPro()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[RequireComponent(typeof(TextMeshProUGUI))]
	public class LocalizedTextMeshPROUGUI : MonoBehaviour
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocalizationKey;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x111C484", Offset = "0x111C484", VA = "0x111C484")]
		private void Start()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x111C5D4", Offset = "0x111C5D4", VA = "0x111C5D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x111C52C", Offset = "0x111C52C", VA = "0x111C52C")]
		private void Localize()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x111C674", Offset = "0x111C674", VA = "0x111C674")]
		public LocalizedTextMeshPROUGUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000348")]
	public struct Sheet
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long Id;
	}
}
namespace ParticleEffects
{
	[Serializable]
	[Token(Token = "0x2000349")]
	public class ParticleMeshData
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> neighborIndices;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int neighborCount;

		[Token(Token = "0x170001E9")]
		public int NeighborCount
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x111C808", Offset = "0x111C808", VA = "0x111C808")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x111C67C", Offset = "0x111C67C", VA = "0x111C67C")]
		public bool HasNeighbor(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x111C71C", Offset = "0x111C71C", VA = "0x111C71C")]
		public void AddNeighbor(int index)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x111C810", Offset = "0x111C810", VA = "0x111C810")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x111C898", Offset = "0x111C898", VA = "0x111C898")]
		public ParticleMeshData()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer), typeof(ParticleSystem))]
	public class PlexusEffect : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Lines")]
		public LineRenderer m_LinePrefab;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_SearchDst;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_MaxLinesCount;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_MaxLinesPerParticle;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float m_LineColorFromParticle;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float m_LineSizeFromParticle;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Mesh")]
		public bool m_UseMesh;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_MaxTrianglesCount;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 1f)]
		public float m_MeshColorFromParticle;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_PS;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.MainModule m_ParticleMainModule;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem.Particle[] m_Particles;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshFilter m_MeshFilter;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh m_Mesh;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<UnityEngine.Vector3> m_Verticies;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> m_Triangles;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Color> m_VertexColors;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_SimulationTransform;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Matrix4x4 m_SimulationTransformMatrix;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<LineRenderer> m_LinePool;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleMeshData[] m_ParticleMeshData;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_VertexIndex;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int m_LineIndex;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_ParticleCount;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color[] m_LineColors;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] m_LineWidths;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x111C914", Offset = "0x111C914", VA = "0x111C914")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x111CAD0", Offset = "0x111CAD0", VA = "0x111CAD0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x111D1C0", Offset = "0x111D1C0", VA = "0x111D1C0")]
		private void CreateOrUpdateArrays()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x111D46C", Offset = "0x111D46C", VA = "0x111D46C")]
		private void SetUpMesh()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x111D4F4", Offset = "0x111D4F4", VA = "0x111D4F4")]
		private void CreateTrianglesFromParticleData()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x111D304", Offset = "0x111D304", VA = "0x111D304")]
		private LineRenderer GetNextLine()
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x111D68C", Offset = "0x111D68C", VA = "0x111D68C")]
		private void AddTriangle(int indexA, int indexB, int indexC)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x111DDE0", Offset = "0x111DDE0", VA = "0x111DDE0")]
		public PlexusEffect()
		{
		}
	}
}
namespace SmfLite
{
	[Token(Token = "0x200034B")]
	public struct MidiEvent
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte status;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte data1;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte data2;

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x111EF28", Offset = "0x111EF28", VA = "0x111EF28")]
		public MidiEvent(byte status, byte data1, byte data2)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x111EF38", Offset = "0x111EF38", VA = "0x111EF38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200034C")]
	public class MidiTrack
	{
		[Token(Token = "0x200034D")]
		public struct DeltaEventPair
		{
			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int delta;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MidiEvent midiEvent;

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x111F6A8", Offset = "0x111F6A8", VA = "0x111F6A8")]
			public DeltaEventPair(int delta, MidiEvent midiEvent)
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x111F430", Offset = "0x111F430", VA = "0x111F430", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<DeltaEventPair> sequence;

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x111F158", Offset = "0x111F158", VA = "0x111F158")]
		public MidiTrack()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x111F1D8", Offset = "0x111F1D8", VA = "0x111F1D8")]
		public List<DeltaEventPair>.Enumerator GetEnumerator()
		{
			return default(List<DeltaEventPair>.Enumerator);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x111F24C", Offset = "0x111F24C", VA = "0x111F24C")]
		public DeltaEventPair GetAtIndex(int index)
		{
			return default(DeltaEventPair);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x111F2A4", Offset = "0x111F2A4", VA = "0x111F2A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x111F5EC", Offset = "0x111F5EC", VA = "0x111F5EC")]
		public void AddEvent(int delta, MidiEvent midiEvent)
		{
		}
	}
	[Token(Token = "0x200034E")]
	public struct MidiFileContainer
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int division;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<MidiTrack> tracks;

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x111F6BC", Offset = "0x111F6BC", VA = "0x111F6BC")]
		public MidiFileContainer(int division, List<MidiTrack> tracks)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x111F6C8", Offset = "0x111F6C8", VA = "0x111F6C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200034F")]
	public class MidiTrackSequencer
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<MidiTrack.DeltaEventPair>.Enumerator enumerator;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool playing;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double pulsePerSecond;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double pulseToNext;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double pulseCounter;

		[Token(Token = "0x170001EA")]
		public bool Playing
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x111F880", Offset = "0x111F880", VA = "0x111F880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x111F888", Offset = "0x111F888", VA = "0x111F888")]
		public MidiTrackSequencer(MidiTrack track, int ppqn, float bpm)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x111F904", Offset = "0x111F904", VA = "0x111F904")]
		public List<MidiEvent> Start(float startTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x111F9A0", Offset = "0x111F9A0", VA = "0x111F9A0")]
		public List<MidiEvent> Advance(double deltaTime)
		{
			return null;
		}
	}
	[Token(Token = "0x2000350")]
	public static class MidiFileLoader
	{
		[Token(Token = "0x6001081")]
		[Address(RVA = "0x111FB38", Offset = "0x111FB38", VA = "0x111FB38")]
		public static MidiFileContainer Load(byte[] data)
		{
			return default(MidiFileContainer);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x111FF1C", Offset = "0x111FF1C", VA = "0x111FF1C")]
		private static MidiTrack ReadTrack(MidiDataStreamReader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000351")]
	internal class MidiDataStreamReader
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] data;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int offset;

		[Token(Token = "0x170001EB")]
		public int Offset
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x11201E0", Offset = "0x11201E0", VA = "0x11201E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x111FDB0", Offset = "0x111FDB0", VA = "0x111FDB0")]
		public MidiDataStreamReader(byte[] data)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x111FEDC", Offset = "0x111FEDC", VA = "0x111FEDC")]
		public void Advance(int length)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1120170", Offset = "0x1120170", VA = "0x1120170")]
		public byte PeekByte()
		{
			return default(byte);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x11201A4", Offset = "0x11201A4", VA = "0x11201A4")]
		public byte ReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x111FDD8", Offset = "0x111FDD8", VA = "0x111FDD8")]
		public char[] ReadChars(int length)
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x111FE80", Offset = "0x111FE80", VA = "0x111FE80")]
		public int ReadBEInt32()
		{
			return default(int);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x111FEEC", Offset = "0x111FEEC", VA = "0x111FEEC")]
		public int ReadBEInt16()
		{
			return default(int);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1120138", Offset = "0x1120138", VA = "0x1120138")]
		public int ReadMultiByteValue()
		{
			return default(int);
		}
	}
}
namespace EzySlice
{
	[Token(Token = "0x2000352")]
	public sealed class IntersectionResult
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool is_success;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Triangle[] upper_hull;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Triangle[] lower_hull;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly UnityEngine.Vector3[] intersection_pt;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int upper_hull_count;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int lower_hull_count;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int intersection_pt_count;

		[Token(Token = "0x170001EC")]
		public Triangle[] upperHull
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x1120288", Offset = "0x1120288", VA = "0x1120288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public Triangle[] lowerHull
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x1120290", Offset = "0x1120290", VA = "0x1120290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public UnityEngine.Vector3[] intersectionPoints
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x1120298", Offset = "0x1120298", VA = "0x1120298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public int upperHullCount
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x11202A0", Offset = "0x11202A0", VA = "0x11202A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F0")]
		public int lowerHullCount
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x11202A8", Offset = "0x11202A8", VA = "0x11202A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F1")]
		public int intersectionPointCount
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x11202B0", Offset = "0x11202B0", VA = "0x11202B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F2")]
		public bool isValid
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x11202B8", Offset = "0x11202B8", VA = "0x11202B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x11201E8", Offset = "0x11201E8", VA = "0x11201E8")]
		public IntersectionResult()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x11202C0", Offset = "0x11202C0", VA = "0x11202C0")]
		public IntersectionResult AddUpperHull(Triangle tri)
		{
			return null;
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1120350", Offset = "0x1120350", VA = "0x1120350")]
		public IntersectionResult AddLowerHull(Triangle tri)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x11203E0", Offset = "0x11203E0", VA = "0x11203E0")]
		public void AddIntersectionPoint(UnityEngine.Vector3 pt)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1120424", Offset = "0x1120424", VA = "0x1120424")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1120434", Offset = "0x1120434", VA = "0x1120434")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1120438", Offset = "0x1120438", VA = "0x1120438")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x2000353")]
	public sealed class Intersector
	{
		[Token(Token = "0x400139A")]
		public const float Epsilon = 0.0001f;

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x112043C", Offset = "0x112043C", VA = "0x112043C")]
		public static bool Intersect(Plane pl, Line ln, out UnityEngine.Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1120474", Offset = "0x1120474", VA = "0x1120474")]
		public static bool Intersect(Plane pl, UnityEngine.Vector3 a, UnityEngine.Vector3 b, out UnityEngine.Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x112055C", Offset = "0x112055C", VA = "0x112055C")]
		public static float TriArea2D(float x1, float y1, float x2, float y2, float x3, float y3)
		{
			return default(float);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x112057C", Offset = "0x112057C", VA = "0x112057C")]
		public static void Intersect(Plane pl, Triangle tri, IntersectionResult result)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1122160", Offset = "0x1122160", VA = "0x1122160")]
		public Intersector()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public struct Line
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityEngine.Vector3 m_pos_a;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly UnityEngine.Vector3 m_pos_b;

		[Token(Token = "0x170001F3")]
		public float dist
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x1122178", Offset = "0x1122178", VA = "0x1122178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F4")]
		public float distSq
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x11221FC", Offset = "0x11221FC", VA = "0x11221FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F5")]
		public UnityEngine.Vector3 positionA
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x112222C", Offset = "0x112222C", VA = "0x112222C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170001F6")]
		public UnityEngine.Vector3 positionB
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x1122238", Offset = "0x1122238", VA = "0x1122238")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1122168", Offset = "0x1122168", VA = "0x1122168")]
		public Line(UnityEngine.Vector3 pta, UnityEngine.Vector3 ptb)
		{
		}
	}
	[Token(Token = "0x2000355")]
	public enum SideOfPlane
	{
		[Token(Token = "0x400139E")]
		UP,
		[Token(Token = "0x400139F")]
		DOWN,
		[Token(Token = "0x40013A0")]
		ON
	}
	[Token(Token = "0x2000356")]
	public struct Plane
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityEngine.Vector3 m_normal;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_dist;

		[Token(Token = "0x170001F7")]
		public UnityEngine.Vector3 normal
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x11224A8", Offset = "0x11224A8", VA = "0x11224A8")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170001F8")]
		public float dist
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x11224B4", Offset = "0x11224B4", VA = "0x11224B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1122244", Offset = "0x1122244", VA = "0x1122244")]
		public Plane(UnityEngine.Vector3 pos, UnityEngine.Vector3 norm)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1122264", Offset = "0x1122264", VA = "0x1122264")]
		public Plane(UnityEngine.Vector3 norm, float dot)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1122270", Offset = "0x1122270", VA = "0x1122270")]
		public Plane(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x11223E8", Offset = "0x11223E8", VA = "0x11223E8")]
		public void Compute(UnityEngine.Vector3 pos, UnityEngine.Vector3 norm)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1122408", Offset = "0x1122408", VA = "0x1122408")]
		public void Compute(Transform trans)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x112247C", Offset = "0x112247C", VA = "0x112247C")]
		public void Compute(GameObject obj)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1121DD4", Offset = "0x1121DD4", VA = "0x1121DD4")]
		public SideOfPlane SideOf(UnityEngine.Vector3 pt)
		{
			return default(SideOfPlane);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x11224BC", Offset = "0x11224BC", VA = "0x11224BC")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x11224C0", Offset = "0x11224C0", VA = "0x11224C0")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public struct TextureRegion
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float pos_start_x;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private readonly float pos_start_y;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly float pos_end_x;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly float pos_end_y;

		[Token(Token = "0x170001F9")]
		public float startX
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x11224D0", Offset = "0x11224D0", VA = "0x11224D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FA")]
		public float startY
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x11224D8", Offset = "0x11224D8", VA = "0x11224D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FB")]
		public float endX
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x11224E0", Offset = "0x11224E0", VA = "0x11224E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FC")]
		public float endY
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x11224E8", Offset = "0x11224E8", VA = "0x11224E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FD")]
		public Vector2 start
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x11224F0", Offset = "0x11224F0", VA = "0x11224F0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001FE")]
		public Vector2 end
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x11224F8", Offset = "0x11224F8", VA = "0x11224F8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x11224C4", Offset = "0x11224C4", VA = "0x11224C4")]
		public TextureRegion(float startX, float startY, float endX, float endY)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1122500", Offset = "0x1122500", VA = "0x1122500")]
		public Vector2 Map(Vector2 uv)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x112251C", Offset = "0x112251C", VA = "0x112251C")]
		public Vector2 Map(float x, float y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1122538", Offset = "0x1122538", VA = "0x1122538")]
		private static float MAP(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000358")]
	public static class TextureRegionExtension
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1122554", Offset = "0x1122554", VA = "0x1122554")]
		public static TextureRegion GetTextureRegion(this Material mat, int pixX, int pixY, int pixWidth, int pixHeight)
		{
			return default(TextureRegion);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x11225A0", Offset = "0x11225A0", VA = "0x11225A0")]
		public static TextureRegion GetTextureRegion(this Texture tex, int pixX, int pixY, int pixWidth, int pixHeight)
		{
			return default(TextureRegion);
		}
	}
	[Token(Token = "0x2000359")]
	public struct Triangle
	{
		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityEngine.Vector3 m_pos_a;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly UnityEngine.Vector3 m_pos_b;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly UnityEngine.Vector3 m_pos_c;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_uv_set;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_uv_a;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 m_uv_b;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 m_uv_c;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_nor_set;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UnityEngine.Vector3 m_nor_a;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.Vector3 m_nor_b;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private UnityEngine.Vector3 m_nor_c;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_tan_set;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector4 m_tan_a;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector4 m_tan_b;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector4 m_tan_c;

		[Token(Token = "0x170001FF")]
		public UnityEngine.Vector3 positionA
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x11226E4", Offset = "0x11226E4", VA = "0x11226E4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000200")]
		public UnityEngine.Vector3 positionB
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x11226F0", Offset = "0x11226F0", VA = "0x11226F0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000201")]
		public UnityEngine.Vector3 positionC
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x11226FC", Offset = "0x11226FC", VA = "0x11226FC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000202")]
		public bool hasUV
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x1122708", Offset = "0x1122708", VA = "0x1122708")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public Vector2 uvA
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x1122710", Offset = "0x1122710", VA = "0x1122710")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000204")]
		public Vector2 uvB
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x1122718", Offset = "0x1122718", VA = "0x1122718")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000205")]
		public Vector2 uvC
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x1122720", Offset = "0x1122720", VA = "0x1122720")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000206")]
		public bool hasNormal
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x1122728", Offset = "0x1122728", VA = "0x1122728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public UnityEngine.Vector3 normalA
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x1122730", Offset = "0x1122730", VA = "0x1122730")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000208")]
		public UnityEngine.Vector3 normalB
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x112273C", Offset = "0x112273C", VA = "0x112273C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000209")]
		public UnityEngine.Vector3 normalC
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x1122748", Offset = "0x1122748", VA = "0x1122748")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool hasTangent
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x1122754", Offset = "0x1122754", VA = "0x1122754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public Vector4 tangentA
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x112275C", Offset = "0x112275C", VA = "0x112275C")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700020C")]
		public Vector4 tangentB
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x1122768", Offset = "0x1122768", VA = "0x1122768")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700020D")]
		public Vector4 tangentC
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x1122774", Offset = "0x1122774", VA = "0x1122774")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1121E24", Offset = "0x1121E24", VA = "0x1121E24")]
		public Triangle(UnityEngine.Vector3 posa, UnityEngine.Vector3 posb, UnityEngine.Vector3 posc)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1121FE0", Offset = "0x1121FE0", VA = "0x1121FE0")]
		public void SetUV(Vector2 uvA, Vector2 uvB, Vector2 uvC)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1122094", Offset = "0x1122094", VA = "0x1122094")]
		public void SetNormal(UnityEngine.Vector3 norA, UnityEngine.Vector3 norB, UnityEngine.Vector3 norC)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x112213C", Offset = "0x112213C", VA = "0x112213C")]
		public void SetTangent(Vector4 tanA, Vector4 tanB, Vector4 tanC)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1122780", Offset = "0x1122780", VA = "0x1122780")]
		public void ComputeTangents()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1122A3C", Offset = "0x1122A3C", VA = "0x1122A3C")]
		public UnityEngine.Vector3 Barycentric(UnityEngine.Vector3 p)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1121F6C", Offset = "0x1121F6C", VA = "0x1121F6C")]
		public Vector2 GenerateUV(UnityEngine.Vector3 pt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1121FF8", Offset = "0x1121FF8", VA = "0x1121FF8")]
		public UnityEngine.Vector3 GenerateNormal(UnityEngine.Vector3 pt)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x11220BC", Offset = "0x11220BC", VA = "0x11220BC")]
		public Vector4 GenerateTangent(UnityEngine.Vector3 pt)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1122B6C", Offset = "0x1122B6C", VA = "0x1122B6C")]
		public bool Split(Plane pl, IntersectionResult result)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1122BDC", Offset = "0x1122BDC", VA = "0x1122BDC")]
		public bool IsCW()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1122C3C", Offset = "0x1122C3C", VA = "0x1122C3C")]
		public static float SignedSquare(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1122C80", Offset = "0x1122C80", VA = "0x1122C80")]
		public void OnDebugDraw()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1122C84", Offset = "0x1122C84", VA = "0x1122C84")]
		public void OnDebugDraw(Color drawColor)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public sealed class Triangulator
	{
		[Token(Token = "0x200035B")]
		internal struct Mapped2D
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly UnityEngine.Vector3 original;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private readonly Vector2 mapped;

			[Token(Token = "0x1700020E")]
			public Vector2 mappedValue
			{
				[Token(Token = "0x60010DC")]
				[Address(RVA = "0x1123674", Offset = "0x1123674", VA = "0x1123674")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x1700020F")]
			public UnityEngine.Vector3 originalValue
			{
				[Token(Token = "0x60010DD")]
				[Address(RVA = "0x112367C", Offset = "0x112367C", VA = "0x112367C")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x112362C", Offset = "0x112362C", VA = "0x112362C")]
			public Mapped2D(UnityEngine.Vector3 newOriginal, UnityEngine.Vector3 u, UnityEngine.Vector3 v)
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1122C88", Offset = "0x1122C88", VA = "0x1122C88")]
		public static bool MonotoneChain(List<UnityEngine.Vector3> vertices, UnityEngine.Vector3 normal, out List<Triangle> tri)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1122C9C", Offset = "0x1122C9C", VA = "0x1122C9C")]
		public static bool MonotoneChain(List<UnityEngine.Vector3> vertices, UnityEngine.Vector3 normal, out List<Triangle> tri, TextureRegion texRegion)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x112366C", Offset = "0x112366C", VA = "0x112366C")]
		public Triangulator()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public sealed class SlicedHull
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh upper_hull;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh lower_hull;

		[Token(Token = "0x17000210")]
		public Mesh upperHull
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x1123E28", Offset = "0x1123E28", VA = "0x1123E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public Mesh lowerHull
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x1123E30", Offset = "0x1123E30", VA = "0x1123E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1123728", Offset = "0x1123728", VA = "0x1123728")]
		public SlicedHull(Mesh upperHull, Mesh lowerHull)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1123754", Offset = "0x1123754", VA = "0x1123754")]
		public GameObject CreateUpperHull(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x112375C", Offset = "0x112375C", VA = "0x112375C")]
		public GameObject CreateUpperHull(GameObject original, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1123A40", Offset = "0x1123A40", VA = "0x1123A40")]
		public GameObject CreateLowerHull(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1123A48", Offset = "0x1123A48", VA = "0x1123A48")]
		public GameObject CreateLowerHull(GameObject original, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x11239F8", Offset = "0x11239F8", VA = "0x11239F8")]
		public GameObject CreateUpperHull()
		{
			return null;
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1123CE4", Offset = "0x1123CE4", VA = "0x1123CE4")]
		public GameObject CreateLowerHull()
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1123D2C", Offset = "0x1123D2C", VA = "0x1123D2C")]
		private static GameObject CreateEmptyObject(string name, Mesh hull)
		{
			return null;
		}
	}
	[Token(Token = "0x200035E")]
	public sealed class Slicer
	{
		[Token(Token = "0x200035F")]
		internal class SlicedSubmesh
		{
			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly List<Triangle> upperHull;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly List<Triangle> lowerHull;

			[Token(Token = "0x17000212")]
			public bool hasUV
			{
				[Token(Token = "0x60010F3")]
				[Address(RVA = "0x1125810", Offset = "0x1125810", VA = "0x1125810")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000213")]
			public bool hasNormal
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0x11258B8", Offset = "0x11258B8", VA = "0x11258B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000214")]
			public bool hasTangent
			{
				[Token(Token = "0x60010F5")]
				[Address(RVA = "0x1125960", Offset = "0x1125960", VA = "0x1125960")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000215")]
			public bool isValid
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0x1124C14", Offset = "0x1124C14", VA = "0x1124C14")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x1124B6C", Offset = "0x1124B6C", VA = "0x1124B6C")]
			public SlicedSubmesh()
			{
			}
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1123E38", Offset = "0x1123E38", VA = "0x1123E38")]
		public static SlicedHull Slice(GameObject obj, Plane pl, TextureRegion crossRegion, Material crossMaterial)
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x112416C", Offset = "0x112416C", VA = "0x112416C")]
		public static SlicedHull Slice(Mesh sharedMesh, Plane pl, TextureRegion region, int crossIndex)
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1124CA4", Offset = "0x1124CA4", VA = "0x1124CA4")]
		private static SlicedHull CreateFrom(SlicedSubmesh[] meshes, List<Triangle> cross, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1124DC4", Offset = "0x1124DC4", VA = "0x1124DC4")]
		private static Mesh CreateUpperHull(SlicedSubmesh[] mesh, int total, List<Triangle> crossSection, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1124DCC", Offset = "0x1124DCC", VA = "0x1124DCC")]
		private static Mesh CreateLowerHull(SlicedSubmesh[] mesh, int total, List<Triangle> crossSection, int crossSectionIndex)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1124DD4", Offset = "0x1124DD4", VA = "0x1124DD4")]
		private static Mesh CreateHull(SlicedSubmesh[] meshes, int total, List<Triangle> crossSection, int crossIndex, bool isUpper)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1124C80", Offset = "0x1124C80", VA = "0x1124C80")]
		private static List<Triangle> CreateFrom(List<UnityEngine.Vector3> intPoints, UnityEngine.Vector3 planeNormal, TextureRegion region)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1125A08", Offset = "0x1125A08", VA = "0x1125A08")]
		public Slicer()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public static class SlicerExtensions
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1125A10", Offset = "0x1125A10", VA = "0x1125A10")]
		public static SlicedHull Slice(this GameObject obj, Plane pl, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1125A28", Offset = "0x1125A28", VA = "0x1125A28")]
		public static SlicedHull Slice(this GameObject obj, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1125A44", Offset = "0x1125A44", VA = "0x1125A44")]
		public static SlicedHull Slice(this GameObject obj, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, TextureRegion textureRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1125A24", Offset = "0x1125A24", VA = "0x1125A24")]
		public static SlicedHull Slice(this GameObject obj, Plane pl, TextureRegion textureRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1125C90", Offset = "0x1125C90", VA = "0x1125C90")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Plane pl)
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1125F30", Offset = "0x1125F30", VA = "0x1125F30")]
		public static GameObject[] SliceInstantiate(this GameObject obj, UnityEngine.Vector3 position, UnityEngine.Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1125F50", Offset = "0x1125F50", VA = "0x1125F50")]
		public static GameObject[] SliceInstantiate(this GameObject obj, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, Material crossSectionMat)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1125F6C", Offset = "0x1125F6C", VA = "0x1125F6C")]
		public static GameObject[] SliceInstantiate(this GameObject obj, UnityEngine.Vector3 position, UnityEngine.Vector3 direction, TextureRegion cuttingRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1125CA8", Offset = "0x1125CA8", VA = "0x1125CA8")]
		public static GameObject[] SliceInstantiate(this GameObject obj, Plane pl, TextureRegion cuttingRegion, [Optional] Material crossSectionMaterial)
		{
			return null;
		}
	}
}
namespace DSPLib
{
	[Token(Token = "0x2000361")]
	public class DFT
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mDFTScale;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint mLengthTotal;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint mLengthHalf;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[,] mCosTerm;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[,] mSinTerm;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool mOutOfMemory;

		[Token(Token = "0x17000216")]
		public bool IsUsingCached
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x11261C4", Offset = "0x11261C4", VA = "0x11261C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x11261C0", Offset = "0x11261C0", VA = "0x11261C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x11261B8", Offset = "0x11261B8", VA = "0x11261B8")]
		public DFT()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x11261D4", Offset = "0x11261D4", VA = "0x11261D4")]
		public void Initialize(uint inputDataLength, uint zeroPaddingLength = 0u, bool forceNoCache = false)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1126468", Offset = "0x1126468", VA = "0x1126468")]
		public Complex[] Execute(double[] timeSeries)
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1126508", Offset = "0x1126508", VA = "0x1126508")]
		private Complex[] Dft(double[] timeSeries)
		{
			return null;
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x112674C", Offset = "0x112674C", VA = "0x112674C")]
		private Complex[] DftCached(double[] timeSeries)
		{
			return null;
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1126988", Offset = "0x1126988", VA = "0x1126988")]
		public double[] FrequencySpan(double samplingFrequencyHz)
		{
			return null;
		}
	}
	[Token(Token = "0x2000364")]
	public class FFT
	{
		[Token(Token = "0x2000365")]
		private class FFTElement
		{
			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double re;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double im;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FFTElement next;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public uint revTgt;

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x11270A8", Offset = "0x11270A8", VA = "0x11270A8")]
			public FFTElement()
			{
			}
		}

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mFFTScale;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint mLogN;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint mN;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint mLengthTotal;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private uint mLengthHalf;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FFTElement[] mX;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1126DCC", Offset = "0x1126DCC", VA = "0x1126DCC")]
		public FFT()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1126DDC", Offset = "0x1126DDC", VA = "0x1126DDC")]
		public void Initialize(uint inputDataLength, uint zeroPaddingLength = 0u)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x11270D4", Offset = "0x11270D4", VA = "0x11270D4")]
		public Complex[] Execute(double[] timeSeries)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x11270B0", Offset = "0x11270B0", VA = "0x11270B0")]
		private uint BitReverse(uint x, uint numBits)
		{
			return default(uint);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1127458", Offset = "0x1127458", VA = "0x1127458")]
		public double[] FrequencySpan(double samplingFrequencyHz)
		{
			return null;
		}
	}
	[Token(Token = "0x2000366")]
	public class DSP
	{
		[Token(Token = "0x2000367")]
		public static class Generate
		{
			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static System.Random mRandom;

			[Token(Token = "0x6001114")]
			[Address(RVA = "0x112751C", Offset = "0x112751C", VA = "0x112751C")]
			public static double[] LinSpace(double startVal, double stopVal, uint points)
			{
				return null;
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x11275D0", Offset = "0x11275D0", VA = "0x11275D0")]
			public static double[] ToneSampling(double amplitudeVrms, double frequencyHz, double samplingFrequencyHz, uint points, double dcV = 0.0, double phaseDeg = 0.0)
			{
				return null;
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0x1127710", Offset = "0x1127710", VA = "0x1127710")]
			public static double[] ToneCycles(double amplitudeVrms, double cycles, uint points, double dcV = 0.0, double phaseDeg = 0.0)
			{
				return null;
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x1127850", Offset = "0x1127850", VA = "0x1127850")]
			public static double[] NoisePsd(double amplitudePsd, double samplingFrequencyHz, uint points)
			{
				return null;
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x11278EC", Offset = "0x11278EC", VA = "0x11278EC")]
			public static double[] NoiseRms(double amplitudeVrms, uint points, double dcV = 0.0)
			{
				return null;
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x1127984", Offset = "0x1127984", VA = "0x1127984")]
			private static double[] Noise(uint size, double scaling_vrms)
			{
				return null;
			}
		}

		[Token(Token = "0x2000368")]
		public static class Window
		{
			[Token(Token = "0x2000369")]
			public enum Type
			{
				[Token(Token = "0x40013DD")]
				None,
				[Token(Token = "0x40013DE")]
				Rectangular,
				[Token(Token = "0x40013DF")]
				Welch,
				[Token(Token = "0x40013E0")]
				Bartlett,
				[Token(Token = "0x40013E1")]
				Hanning,
				[Token(Token = "0x40013E2")]
				Hann,
				[Token(Token = "0x40013E3")]
				Hamming,
				[Token(Token = "0x40013E4")]
				Nutall3,
				[Token(Token = "0x40013E5")]
				Nutall4,
				[Token(Token = "0x40013E6")]
				Nutall3A,
				[Token(Token = "0x40013E7")]
				Nutall3B,
				[Token(Token = "0x40013E8")]
				Nutall4A,
				[Token(Token = "0x40013E9")]
				BH92,
				[Token(Token = "0x40013EA")]
				Nutall4B,
				[Token(Token = "0x40013EB")]
				SFT3F,
				[Token(Token = "0x40013EC")]
				SFT3M,
				[Token(Token = "0x40013ED")]
				FTNI,
				[Token(Token = "0x40013EE")]
				SFT4F,
				[Token(Token = "0x40013EF")]
				SFT5F,
				[Token(Token = "0x40013F0")]
				SFT4M,
				[Token(Token = "0x40013F1")]
				FTHP,
				[Token(Token = "0x40013F2")]
				HFT70,
				[Token(Token = "0x40013F3")]
				FTSRS,
				[Token(Token = "0x40013F4")]
				SFT5M,
				[Token(Token = "0x40013F5")]
				HFT90D,
				[Token(Token = "0x40013F6")]
				HFT95,
				[Token(Token = "0x40013F7")]
				HFT116D,
				[Token(Token = "0x40013F8")]
				HFT144D,
				[Token(Token = "0x40013F9")]
				HFT169D,
				[Token(Token = "0x40013FA")]
				HFT196D,
				[Token(Token = "0x40013FB")]
				HFT223D,
				[Token(Token = "0x40013FC")]
				HFT248D
			}

			[Token(Token = "0x200036A")]
			public static class ScaleFactor
			{
				[Token(Token = "0x600111D")]
				[Address(RVA = "0x112860C", Offset = "0x112860C", VA = "0x112860C")]
				public static double Signal(double[] windowCoefficients)
				{
					return default(double);
				}

				[Token(Token = "0x600111E")]
				[Address(RVA = "0x112867C", Offset = "0x112867C", VA = "0x112867C")]
				public static double Noise(double[] windowCoefficients, double samplingFrequencyHz)
				{
					return default(double);
				}

				[Token(Token = "0x600111F")]
				[Address(RVA = "0x1128754", Offset = "0x1128754", VA = "0x1128754")]
				public static double NENBW(double[] windowCoefficients)
				{
					return default(double);
				}
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x1127CA4", Offset = "0x1127CA4", VA = "0x1127CA4")]
			public static double[] Coefficients(Type windowName, uint points)
			{
				return null;
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1128340", Offset = "0x1128340", VA = "0x1128340")]
			private static double[] SineExpansion(uint points, double c0, double c1 = 0.0, double c2 = 0.0, double c3 = 0.0, double c4 = 0.0, double c5 = 0.0, double c6 = 0.0, double c7 = 0.0, double c8 = 0.0, double c9 = 0.0, double c10 = 0.0)
			{
				return null;
			}
		}

		[Token(Token = "0x200036B")]
		public static class ConvertMagnitude
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x11287D8", Offset = "0x11287D8", VA = "0x11287D8")]
			public static double[] ToMagnitudeSquared(double[] magnitude)
			{
				return null;
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x112887C", Offset = "0x112887C", VA = "0x112887C")]
			public static double[] ToMagnitudeDBV(double[] magnitude)
			{
				return null;
			}
		}

		[Token(Token = "0x200036C")]
		public static class ConvertMagnitudeSquared
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x1128988", Offset = "0x1128988", VA = "0x1128988")]
			public static double[] ToMagnitude(double[] magSquared)
			{
				return null;
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x1128A70", Offset = "0x1128A70", VA = "0x1128A70")]
			public static double[] ToMagnitudeDBV(double[] magSquared)
			{
				return null;
			}
		}

		[Token(Token = "0x200036D")]
		public static class ConvertComplex
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x1128B7C", Offset = "0x1128B7C", VA = "0x1128B7C")]
			public static double[] ToMagnitudeSquared(Complex[] rawFFT)
			{
				return null;
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0x1128C44", Offset = "0x1128C44", VA = "0x1128C44")]
			public static double[] ToMagnitude(Complex[] rawFFT)
			{
				return null;
			}

			[Token(Token = "0x6001126")]
			[Address(RVA = "0x1128D08", Offset = "0x1128D08", VA = "0x1128D08")]
			public static double[] ToMagnitudeDBV(Complex[] rawFFT)
			{
				return null;
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0x1128E20", Offset = "0x1128E20", VA = "0x1128E20")]
			public static double[] ToPhaseDegrees(Complex[] rawFFT)
			{
				return null;
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0x1128EF8", Offset = "0x1128EF8", VA = "0x1128EF8")]
			public static double[] ToPhaseRadians(Complex[] rawFFT)
			{
				return null;
			}
		}

		[Token(Token = "0x200036E")]
		public static class Analyze
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x1128FBC", Offset = "0x1128FBC", VA = "0x1128FBC")]
			public static double FindRms(double[] a, uint startBin = 10u, uint stopBin = 10u)
			{
				return default(double);
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x11290AC", Offset = "0x11290AC", VA = "0x11290AC")]
			public static double FindMean(double[] inData, uint startBin = 10u, uint stopBin = 10u)
			{
				return default(double);
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0x1129144", Offset = "0x1129144", VA = "0x1129144")]
			public static double FindMaxAmplitude(double[] inData)
			{
				return default(double);
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x11291A8", Offset = "0x11291A8", VA = "0x11291A8")]
			public static uint FindMaxPosition(double[] inData)
			{
				return default(uint);
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x1129218", Offset = "0x1129218", VA = "0x1129218")]
			public static double FindMaxFrequency(double[] inData, double[] fSpan)
			{
				return default(double);
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0x112929C", Offset = "0x112929C", VA = "0x112929C")]
			public static double[] UnwrapPhaseDegrees(double[] inPhaseDeg)
			{
				return null;
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x11294E8", Offset = "0x11294E8", VA = "0x11294E8")]
			public static double[] UnwrapPhaseRadians(double[] inPhaseRad)
			{
				return null;
			}
		}

		[Token(Token = "0x200036F")]
		public static class Math
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1129728", Offset = "0x1129728", VA = "0x1129728")]
			public static double[] Multiply(double[] a, double[] b)
			{
				return null;
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0x11297EC", Offset = "0x11297EC", VA = "0x11297EC")]
			public static double[] Multiply(double[] a, double b)
			{
				return null;
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0x11298A0", Offset = "0x11298A0", VA = "0x11298A0")]
			public static double[] Add(double[] a, double[] b)
			{
				return null;
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0x1127B78", Offset = "0x1127B78", VA = "0x1127B78")]
			public static double[] Add(double[] a, double b)
			{
				return null;
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0x1129964", Offset = "0x1129964", VA = "0x1129964")]
			public static double[] Subtract(double[] a, double[] b)
			{
				return null;
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0x1129A28", Offset = "0x1129A28", VA = "0x1129A28")]
			public static double[] Subtract(double[] a, double b)
			{
				return null;
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x1129ADC", Offset = "0x1129ADC", VA = "0x1129ADC")]
			public static double[] Divide(double[] a, double[] b)
			{
				return null;
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x1129BA0", Offset = "0x1129BA0", VA = "0x1129BA0")]
			public static double[] Divide(double[] a, double b)
			{
				return null;
			}

			[Token(Token = "0x6001138")]
			[Address(RVA = "0x1129C54", Offset = "0x1129C54", VA = "0x1129C54")]
			public static double[] Sqrt(double[] a)
			{
				return null;
			}

			[Token(Token = "0x6001139")]
			[Address(RVA = "0x1129D40", Offset = "0x1129D40", VA = "0x1129D40")]
			public static double[] Square(double[] a)
			{
				return null;
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1129DE8", Offset = "0x1129DE8", VA = "0x1129DE8")]
			public static double[] Log10(double[] a)
			{
				return null;
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x1129EE8", Offset = "0x1129EE8", VA = "0x1129EE8")]
			public static double[] RemoveMean(double[] a)
			{
				return null;
			}
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1127514", Offset = "0x1127514", VA = "0x1127514")]
		public DSP()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000370")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000217")]
		public bool Highlight
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1129F50", Offset = "0x1129F50", VA = "0x1129F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x1129F58", Offset = "0x1129F58", VA = "0x1129F58")]
			set
			{
			}
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1129F64", Offset = "0x1129F64", VA = "0x1129F64")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x112A104", Offset = "0x112A104", VA = "0x112A104", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x112A120", Offset = "0x112A120", VA = "0x112A120", Slot = "5")]
		public override void GrabEnd(UnityEngine.Vector3 linearVelocity, UnityEngine.Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x112A13C", Offset = "0x112A13C", VA = "0x112A13C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x112A010", Offset = "0x112A010", VA = "0x112A010")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x112A3A0", Offset = "0x112A3A0", VA = "0x112A3A0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000218")]
		public bool InRange
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x112A418", Offset = "0x112A418", VA = "0x112A418")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x112A420", Offset = "0x112A420", VA = "0x112A420")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool Targeted
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x112A58C", Offset = "0x112A58C", VA = "0x112A58C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x112A594", Offset = "0x112A594", VA = "0x112A594")]
			set
			{
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x112A5A0", Offset = "0x112A5A0", VA = "0x112A5A0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x112A42C", Offset = "0x112A42C", VA = "0x112A42C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x112A75C", Offset = "0x112A75C", VA = "0x112A75C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000372")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700021A")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x112A764", Offset = "0x112A764", VA = "0x112A764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x112A76C", Offset = "0x112A76C", VA = "0x112A76C")]
			set
			{
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x112A788", Offset = "0x112A788", VA = "0x112A788", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x112A98C", Offset = "0x112A98C", VA = "0x112A98C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x112B220", Offset = "0x112B220", VA = "0x112B220", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x112B774", Offset = "0x112B774", VA = "0x112B774", Slot = "8")]
		protected override void MoveGrabbedObject(UnityEngine.Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x112BB84", Offset = "0x112BB84", VA = "0x112BB84")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x112AB94", Offset = "0x112AB94", VA = "0x112AB94")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x112BC70", Offset = "0x112BC70", VA = "0x112BC70")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x112C010", Offset = "0x112C010", VA = "0x112C010", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x112C028", Offset = "0x112C028", VA = "0x112C028", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x112C030", Offset = "0x112C030", VA = "0x112C030")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000374")]
		public enum CrosshairState
		{
			[Token(Token = "0x400141B")]
			Disabled,
			[Token(Token = "0x400141C")]
			Enabled,
			[Token(Token = "0x400141D")]
			Targeted
		}

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x112C050", Offset = "0x112C050", VA = "0x112C050")]
		private void Start()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x112A6D0", Offset = "0x112A6D0", VA = "0x112A6D0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x112C0B0", Offset = "0x112C0B0", VA = "0x112C0B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x112C0E8", Offset = "0x112C0E8", VA = "0x112C0E8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x112C0F0", Offset = "0x112C0F0", VA = "0x112C0F0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x112C19C", Offset = "0x112C19C", VA = "0x112C19C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x112C244", Offset = "0x112C244", VA = "0x112C244")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x112C24C", Offset = "0x112C24C", VA = "0x112C24C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x112C338", Offset = "0x112C338", VA = "0x112C338")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x112C344", Offset = "0x112C344", VA = "0x112C344")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x112C350", Offset = "0x112C350", VA = "0x112C350")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x112C358", Offset = "0x112C358", VA = "0x112C358")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x112C3A8", Offset = "0x112C3A8", VA = "0x112C3A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x112C770", Offset = "0x112C770", VA = "0x112C770")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x112C85C", Offset = "0x112C85C", VA = "0x112C85C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x112C3AC", Offset = "0x112C3AC", VA = "0x112C3AC")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x112C948", Offset = "0x112C948", VA = "0x112C948")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000379")]
		public enum ContactTest
		{
			[Token(Token = "0x4001434")]
			PerpenTest,
			[Token(Token = "0x4001435")]
			BackwardsPress
		}

		[Token(Token = "0x4001425")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001426")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private UnityEngine.Vector3 _localButtonDirection;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700021B")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x112CA08", Offset = "0x112CA08", VA = "0x112CA08", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021C")]
		public UnityEngine.Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x112CA10", Offset = "0x112CA10", VA = "0x112CA10")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700021D")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x112CA1C", Offset = "0x112CA1C", VA = "0x112CA1C")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x112CA24", Offset = "0x112CA24", VA = "0x112CA24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x112CA2C", Offset = "0x112CA2C", VA = "0x112CA2C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x112CB5C", Offset = "0x112CB5C", VA = "0x112CB5C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x112CD4C", Offset = "0x112CD4C", VA = "0x112CD4C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x112D310", Offset = "0x112D310", VA = "0x112D310")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x112D454", Offset = "0x112D454", VA = "0x112D454")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x112D234", Offset = "0x112D234", VA = "0x112D234")]
		private bool IsValidContact(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x112D560", Offset = "0x112D560", VA = "0x112D560")]
		private bool PassEntryTest(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x112D66C", Offset = "0x112D66C", VA = "0x112D66C")]
		private bool PassPerpTest(InteractableTool collidingTool, UnityEngine.Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x112D6EC", Offset = "0x112D6EC", VA = "0x112D6EC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x1700021E")]
		public Collider Collider
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x112D7F8", Offset = "0x112D7F8", VA = "0x112D7F8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x112D800", Offset = "0x112D800", VA = "0x112D800")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x112D808", Offset = "0x112D808", VA = "0x112D808", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x112D810", Offset = "0x112D810", VA = "0x112D810")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x112D818", Offset = "0x112D818", VA = "0x112D818", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x112D868", Offset = "0x112D868", VA = "0x112D868")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x112D8E8", Offset = "0x112D8E8", VA = "0x112D8E8")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000221")]
		Collider Collider
		{
			[Token(Token = "0x600117D")]
			get;
		}

		[Token(Token = "0x17000222")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600117E")]
			get;
		}

		[Token(Token = "0x17000223")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600117F")]
			get;
		}
	}
	[Token(Token = "0x200037C")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x112CCB8", Offset = "0x112CCB8", VA = "0x112CCB8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public enum InteractionType
	{
		[Token(Token = "0x400143E")]
		Enter,
		[Token(Token = "0x400143F")]
		Stay,
		[Token(Token = "0x4001440")]
		Exit
	}
	[Token(Token = "0x200037E")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200037F")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001452")]
			Mesh,
			[Token(Token = "0x4001453")]
			Skeleton,
			[Token(Token = "0x4001454")]
			Both
		}

		[Token(Token = "0x2000380")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A2")]
				[Address(RVA = "0x112EC44", Offset = "0x112EC44", VA = "0x112EC44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0x112EC8C", Offset = "0x112EC8C", VA = "0x112EC8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x112E2B0", Offset = "0x112E2B0", VA = "0x112E2B0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x112EA58", Offset = "0x112EA58", VA = "0x112EA58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x112EA5C", Offset = "0x112EA5C", VA = "0x112EA5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x112EC4C", Offset = "0x112EC4C", VA = "0x112EC4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001441")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x17000224")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x112D8F0", Offset = "0x112D8F0", VA = "0x112D8F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x112D91C", Offset = "0x112D91C", VA = "0x112D91C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x112D978", Offset = "0x112D978", VA = "0x112D978")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x112D9A4", Offset = "0x112D9A4", VA = "0x112D9A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x112DA00", Offset = "0x112DA00", VA = "0x112DA00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x112DA2C", Offset = "0x112DA2C", VA = "0x112DA2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x112DA88", Offset = "0x112DA88", VA = "0x112DA88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x112DAB4", Offset = "0x112DAB4", VA = "0x112DAB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x112DB10", Offset = "0x112DB10", VA = "0x112DB10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x112DB3C", Offset = "0x112DB3C", VA = "0x112DB3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x112DB98", Offset = "0x112DB98", VA = "0x112DB98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x112DBC0", Offset = "0x112DBC0", VA = "0x112DBC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x112DC18", Offset = "0x112DC18", VA = "0x112DC18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x112DC40", Offset = "0x112DC40", VA = "0x112DC40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x112DC98", Offset = "0x112DC98", VA = "0x112DC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x112DCC0", Offset = "0x112DCC0", VA = "0x112DCC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x112DD18", Offset = "0x112DD18", VA = "0x112DD18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001192")]
			[Address(RVA = "0x112DD40", Offset = "0x112DD40", VA = "0x112DD40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x112DD98", Offset = "0x112DD98", VA = "0x112DD98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x112DDC0", Offset = "0x112DDC0", VA = "0x112DDC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x112DE18", Offset = "0x112DE18", VA = "0x112DE18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x112DE60", Offset = "0x112DE60", VA = "0x112DE60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x112DEAC", Offset = "0x112DEAC", VA = "0x112DEAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x112E234", Offset = "0x112E234", VA = "0x112E234")]
		private void Update()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x112E1CC", Offset = "0x112E1CC", VA = "0x112E1CC")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x112E2D8", Offset = "0x112E2D8", VA = "0x112E2D8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x112E39C", Offset = "0x112E39C", VA = "0x112E39C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x112E56C", Offset = "0x112E56C", VA = "0x112E56C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x112E7CC", Offset = "0x112E7CC", VA = "0x112E7CC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x112E92C", Offset = "0x112E92C", VA = "0x112E92C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000382")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x112F2DC", Offset = "0x112F2DC", VA = "0x112F2DC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000231")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x112EC94", Offset = "0x112EC94", VA = "0x112EC94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x112EC9C", Offset = "0x112EC9C", VA = "0x112EC9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x112ECA4", Offset = "0x112ECA4", VA = "0x112ECA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x112ECAC", Offset = "0x112ECAC", VA = "0x112ECAC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x112ECB4", Offset = "0x112ECB4", VA = "0x112ECB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x112ED64", Offset = "0x112ED64", VA = "0x112ED64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x112EE30", Offset = "0x112EE30", VA = "0x112EE30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x112EEE0", Offset = "0x112EEE0", VA = "0x112EEE0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x112EFAC", Offset = "0x112EFAC", VA = "0x112EFAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x112F05C", Offset = "0x112F05C", VA = "0x112F05C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x112EE14", Offset = "0x112EE14", VA = "0x112EE14", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x112EF90", Offset = "0x112EF90", VA = "0x112EF90", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x112F10C", Offset = "0x112F10C", VA = "0x112F10C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011B2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x112CB08", Offset = "0x112CB08", VA = "0x112CB08", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x112F1D8", Offset = "0x112F1D8", VA = "0x112F1D8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x112D7F0", Offset = "0x112D7F0", VA = "0x112D7F0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001460")]
		None,
		[Token(Token = "0x4001461")]
		Proximity,
		[Token(Token = "0x4001462")]
		Contact,
		[Token(Token = "0x4001463")]
		Action
	}
	[Token(Token = "0x2000384")]
	public enum InteractableState
	{
		[Token(Token = "0x4001465")]
		Default,
		[Token(Token = "0x4001466")]
		ProximityState,
		[Token(Token = "0x4001467")]
		ContactState,
		[Token(Token = "0x4001468")]
		ActionState
	}
	[Token(Token = "0x2000385")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x112D3C0", Offset = "0x112D3C0", VA = "0x112D3C0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000235")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x112F324", Offset = "0x112F324", VA = "0x112F324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x112F128", Offset = "0x112F128", VA = "0x112F128")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x112F22C", Offset = "0x112F22C", VA = "0x112F22C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x112F37C", Offset = "0x112F37C", VA = "0x112F37C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000388")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C5")]
				[Address(RVA = "0x112FA90", Offset = "0x112FA90", VA = "0x112FA90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C7")]
				[Address(RVA = "0x112FAD8", Offset = "0x112FAD8", VA = "0x112FAD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x112F500", Offset = "0x112F500", VA = "0x112F500")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x112F63C", Offset = "0x112F63C", VA = "0x112F63C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x112F658", Offset = "0x112F658", VA = "0x112F658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x112FA40", Offset = "0x112FA40", VA = "0x112FA40")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x112FA98", Offset = "0x112FA98", VA = "0x112FA98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x112F410", Offset = "0x112F410", VA = "0x112F410")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x112F47C", Offset = "0x112F47C", VA = "0x112F47C")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x112F528", Offset = "0x112F528", VA = "0x112F528")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x112F634", Offset = "0x112F634", VA = "0x112F634")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000238")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x1130AE0", Offset = "0x1130AE0", VA = "0x1130AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x1130C2C", Offset = "0x1130C2C", VA = "0x1130C2C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1130CC8", Offset = "0x1130CC8", VA = "0x1130CC8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1130D64", Offset = "0x1130D64", VA = "0x1130D64")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x113101C", Offset = "0x113101C", VA = "0x113101C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1131058", Offset = "0x1131058", VA = "0x1131058")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1131314", Offset = "0x1131314", VA = "0x1131314")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x113151C", Offset = "0x113151C", VA = "0x113151C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200038B")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011E1")]
				[Address(RVA = "0x1132620", Offset = "0x1132620", VA = "0x1132620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011E3")]
				[Address(RVA = "0x1132668", Offset = "0x1132668", VA = "0x1132668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1131760", Offset = "0x1131760", VA = "0x1131760")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x11321B0", Offset = "0x11321B0", VA = "0x11321B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x11321B4", Offset = "0x11321B4", VA = "0x11321B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x1132628", Offset = "0x1132628", VA = "0x1132628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001481")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3[] _velocityFrames;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UnityEngine.Vector3 _position;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000239")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x11315F4", Offset = "0x11315F4", VA = "0x11315F4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700023A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x11315FC", Offset = "0x11315FC", VA = "0x11315FC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700023B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1131604", Offset = "0x1131604", VA = "0x1131604", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		public override bool EnableState
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x113160C", Offset = "0x113160C", VA = "0x113160C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1131634", Offset = "0x1131634", VA = "0x1131634", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1131664", Offset = "0x1131664", VA = "0x1131664", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x11316F8", Offset = "0x11316F8", VA = "0x11316F8")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1131788", Offset = "0x1131788", VA = "0x1131788")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1131A10", Offset = "0x1131A10", VA = "0x1131A10")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1131BCC", Offset = "0x1131BCC", VA = "0x1131BCC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1131CB8", Offset = "0x1131CB8", VA = "0x1131CB8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1132034", Offset = "0x1132034", VA = "0x1132034", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1132038", Offset = "0x1132038", VA = "0x1132038", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x113203C", Offset = "0x113203C", VA = "0x113203C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x1700023F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x1132670", Offset = "0x1132670", VA = "0x1132670", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x1132678", Offset = "0x1132678", VA = "0x1132678")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public bool EnableState
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x1132680", Offset = "0x1132680", VA = "0x1132680", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x113269C", Offset = "0x113269C", VA = "0x113269C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x11326BC", Offset = "0x11326BC", VA = "0x11326BC", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x11326C4", Offset = "0x11326C4", VA = "0x11326C4", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float SphereRadius
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x11326D0", Offset = "0x11326D0", VA = "0x11326D0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x11326D8", Offset = "0x11326D8", VA = "0x11326D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x11326E0", Offset = "0x11326E0", VA = "0x11326E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x113271C", Offset = "0x113271C", VA = "0x113271C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1132720", Offset = "0x1132720", VA = "0x1132720")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001494")]
		None = 0,
		[Token(Token = "0x4001495")]
		Ray = 1,
		[Token(Token = "0x4001496")]
		Poke = 4,
		[Token(Token = "0x4001497")]
		All = -1
	}
	[Token(Token = "0x200038E")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001499")]
		Inactive,
		[Token(Token = "0x400149A")]
		PrimaryInputDown,
		[Token(Token = "0x400149B")]
		PrimaryInputDownStay,
		[Token(Token = "0x400149C")]
		PrimaryInputUp
	}
	[Token(Token = "0x200038F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1131FF4", Offset = "0x1131FF4", VA = "0x1131FF4")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000243")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x1132728", Offset = "0x1132728", VA = "0x1132728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x1132730", Offset = "0x1132730", VA = "0x1132730")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x1132738", Offset = "0x1132738", VA = "0x1132738")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011F3")]
			get;
		}

		[Token(Token = "0x17000246")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60011F4")]
			get;
		}

		[Token(Token = "0x17000247")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60011F5")]
			get;
		}

		[Token(Token = "0x17000248")]
		public UnityEngine.Vector3 Velocity
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x1132744", Offset = "0x1132744", VA = "0x1132744")]
			[CompilerGenerated]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x1132750", Offset = "0x1132750", VA = "0x1132750")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public UnityEngine.Vector3 InteractionPosition
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x113275C", Offset = "0x113275C", VA = "0x113275C")]
			[CompilerGenerated]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x1132768", Offset = "0x1132768", VA = "0x1132768")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60011FE")]
			get;
			[Token(Token = "0x60011FF")]
			set;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1132774", Offset = "0x1132774", VA = "0x1132774")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60011FC")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60011FD")]
		public abstract void DeFocus();

		[Token(Token = "0x6001200")]
		public abstract void Initialize();

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1131484", Offset = "0x1131484", VA = "0x1131484")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x11314CC", Offset = "0x11314CC", VA = "0x11314CC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x113277C", Offset = "0x113277C", VA = "0x113277C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1132A28", Offset = "0x1132A28", VA = "0x1132A28", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1132050", Offset = "0x1132050", VA = "0x1132050")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700024B")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001206")]
			get;
		}

		[Token(Token = "0x1700024C")]
		bool EnableState
		{
			[Token(Token = "0x6001208")]
			get;
			[Token(Token = "0x6001209")]
			set;
		}

		[Token(Token = "0x1700024D")]
		bool ToolActivateState
		{
			[Token(Token = "0x600120A")]
			get;
			[Token(Token = "0x600120B")]
			set;
		}

		[Token(Token = "0x6001207")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000392")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000393")]
		private enum PinchState
		{
			[Token(Token = "0x40014AD")]
			None,
			[Token(Token = "0x40014AE")]
			PinchDown,
			[Token(Token = "0x40014AF")]
			PinchStay,
			[Token(Token = "0x40014B0")]
			PinchUp
		}

		[Token(Token = "0x40014A9")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700024E")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x1133270", Offset = "0x1133270", VA = "0x1133270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x11332EC", Offset = "0x11332EC", VA = "0x11332EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x1133368", Offset = "0x1133368", VA = "0x1133368")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x11333E4", Offset = "0x11333E4", VA = "0x11333E4")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1133404", Offset = "0x1133404", VA = "0x1133404")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40014B1")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40014B2")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40014B3")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40014B4")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40014B5")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000251")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1133550", Offset = "0x1133550", VA = "0x1133550", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000252")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x1133558", Offset = "0x1133558", VA = "0x1133558", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000253")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x11335B4", Offset = "0x11335B4", VA = "0x11335B4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public override bool EnableState
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x11335BC", Offset = "0x11335BC", VA = "0x11335BC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x11335FC", Offset = "0x11335FC", VA = "0x11335FC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x113366C", Offset = "0x113366C", VA = "0x113366C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x11336B8", Offset = "0x11336B8", VA = "0x11336B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1133744", Offset = "0x1133744", VA = "0x1133744")]
		private void Update()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x11339F0", Offset = "0x11339F0", VA = "0x11339F0")]
		private UnityEngine.Vector3 GetRayCastOrigin()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1133A6C", Offset = "0x1133A6C", VA = "0x1133A6C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1133E30", Offset = "0x1133E30", VA = "0x1133E30")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1133FCC", Offset = "0x1133FCC", VA = "0x1133FCC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x11340E4", Offset = "0x11340E4", VA = "0x11340E4")]
		private Interactable FindPrimaryRaycastHit(UnityEngine.Vector3 rayOrigin, UnityEngine.Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1134408", Offset = "0x1134408", VA = "0x1134408")]
		private Interactable FindInteractableViaConeTest(UnityEngine.Vector3 rayOrigin, UnityEngine.Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1134784", Offset = "0x1134784", VA = "0x1134784", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1134844", Offset = "0x1134844", VA = "0x1134844", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x113486C", Offset = "0x113486C", VA = "0x113486C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40014C1")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40014C2")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3[] linePositions;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x17000255")]
		public bool EnableState
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x11335E0", Offset = "0x11335E0", VA = "0x11335E0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x1133618", Offset = "0x1133618", VA = "0x1133618", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x1134944", Offset = "0x1134944", VA = "0x1134944", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x11339B4", Offset = "0x11339B4", VA = "0x11339B4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x1134B4C", Offset = "0x1134B4C", VA = "0x1134B4C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x1134B54", Offset = "0x1134B54", VA = "0x1134B54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x113494C", Offset = "0x113494C", VA = "0x113494C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x11347B4", Offset = "0x11347B4", VA = "0x11347B4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1134B5C", Offset = "0x1134B5C", VA = "0x1134B5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1134E08", Offset = "0x1134E08", VA = "0x1134E08")]
		public static UnityEngine.Vector3 GetPointOnBezierCurve(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3, float t)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1134EB0", Offset = "0x1134EB0", VA = "0x1134EB0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000258")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x1134F08", Offset = "0x1134F08", VA = "0x1134F08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x1134F10", Offset = "0x1134F10", VA = "0x1134F10")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1134F7C", Offset = "0x1134F7C", VA = "0x1134F7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x1134F84", Offset = "0x1134F84", VA = "0x1134F84")]
			set
			{
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1134FE0", Offset = "0x1134FE0", VA = "0x1134FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1135280", Offset = "0x1135280", VA = "0x1135280")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1135290", Offset = "0x1135290", VA = "0x1135290")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x11352A0", Offset = "0x11352A0", VA = "0x11352A0")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x11352A8", Offset = "0x11352A8", VA = "0x11352A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x11352AC", Offset = "0x11352AC", VA = "0x11352AC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1135318", Offset = "0x1135318", VA = "0x1135318")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x11353A8", Offset = "0x11353A8", VA = "0x11353A8")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1135438", Offset = "0x1135438", VA = "0x1135438")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x11354E4", Offset = "0x11354E4", VA = "0x11354E4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x11355C0", Offset = "0x11355C0", VA = "0x11355C0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1135604", Offset = "0x1135604", VA = "0x1135604")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1135668", Offset = "0x1135668", VA = "0x1135668")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x11356C8", Offset = "0x11356C8", VA = "0x11356C8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x11356D0", Offset = "0x11356D0", VA = "0x11356D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x11356D4", Offset = "0x11356D4", VA = "0x11356D4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1135698", Offset = "0x1135698", VA = "0x1135698")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1135708", Offset = "0x1135708", VA = "0x1135708")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600124B")]
				[Address(RVA = "0x1135D50", Offset = "0x1135D50", VA = "0x1135D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600124D")]
				[Address(RVA = "0x1135D98", Offset = "0x1135D98", VA = "0x1135D98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001248")]
			[Address(RVA = "0x1135AD8", Offset = "0x1135AD8", VA = "0x1135AD8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001249")]
			[Address(RVA = "0x1135BA0", Offset = "0x1135BA0", VA = "0x1135BA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1135BA4", Offset = "0x1135BA4", VA = "0x1135BA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600124C")]
			[Address(RVA = "0x1135D58", Offset = "0x1135D58", VA = "0x1135D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D2")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40014D3")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 _panelInitialPosition;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 _prevPos;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 _lastMovedToPos;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1135710", Offset = "0x1135710", VA = "0x1135710")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x11357A4", Offset = "0x11357A4", VA = "0x11357A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1135A98", Offset = "0x1135A98", VA = "0x1135A98")]
		private UnityEngine.Vector3 CalculateIdealAnchorPosition()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1135A30", Offset = "0x1135A30", VA = "0x1135A30")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1135B00", Offset = "0x1135B00", VA = "0x1135B00")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200039C")]
		public enum SelectionState
		{
			[Token(Token = "0x40014E9")]
			Off,
			[Token(Token = "0x40014EA")]
			Selected,
			[Token(Token = "0x40014EB")]
			Highlighted
		}

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700025C")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x1135DA0", Offset = "0x1135DA0", VA = "0x1135DA0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x1135DA8", Offset = "0x1135DA8", VA = "0x1135DA8")]
			set
			{
			}
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1135EFC", Offset = "0x1135EFC", VA = "0x1135EFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1136084", Offset = "0x1136084", VA = "0x1136084")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1135E1C", Offset = "0x1135E1C", VA = "0x1135E1C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x113614C", Offset = "0x113614C", VA = "0x113614C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		public enum SegmentType
		{
			[Token(Token = "0x40014FA")]
			Straight,
			[Token(Token = "0x40014FB")]
			LeftTurn,
			[Token(Token = "0x40014FC")]
			RightTurn,
			[Token(Token = "0x40014FD")]
			Switch
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40014F2")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40014F3")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700025D")]
		public float StartDistance
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x11361BC", Offset = "0x11361BC", VA = "0x11361BC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x11361C4", Offset = "0x11361C4", VA = "0x11361C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public float GridSize
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x11361CC", Offset = "0x11361CC", VA = "0x11361CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x11361D4", Offset = "0x11361D4", VA = "0x11361D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public int SubDivCount
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x11361DC", Offset = "0x11361DC", VA = "0x11361DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x11361E4", Offset = "0x11361E4", VA = "0x11361E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public SegmentType Type
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x11361EC", Offset = "0x11361EC", VA = "0x11361EC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000261")]
		public Pose EndPose
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x11361F4", Offset = "0x11361F4", VA = "0x11361F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public float Radius
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x11365C8", Offset = "0x11365C8", VA = "0x11365C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000263")]
		public float SegmentLength
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x1136250", Offset = "0x1136250", VA = "0x1136250")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x11365D8", Offset = "0x11365D8", VA = "0x11365D8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x11365F0", Offset = "0x11365F0", VA = "0x11365F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1136290", Offset = "0x1136290", VA = "0x1136290")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x11365F4", Offset = "0x11365F4", VA = "0x11365F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x11365F8", Offset = "0x11365F8", VA = "0x11365F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1136654", Offset = "0x1136654", VA = "0x1136654")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1136F88", Offset = "0x1136F88", VA = "0x1136F88")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x11371E0", Offset = "0x11371E0", VA = "0x11371E0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20003A0")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001275")]
				[Address(RVA = "0x1137CA8", Offset = "0x1137CA8", VA = "0x1137CA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001277")]
				[Address(RVA = "0x1137CF0", Offset = "0x1137CF0", VA = "0x1137CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1137AEC", Offset = "0x1137AEC", VA = "0x1137AEC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1137B3C", Offset = "0x1137B3C", VA = "0x1137B3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0x1137B40", Offset = "0x1137B40", VA = "0x1137B40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0x1137CB0", Offset = "0x1137CB0", VA = "0x1137CB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014FE")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40014FF")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UnityEngine.Vector3 _oldPosition;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x113731C", Offset = "0x113731C", VA = "0x113731C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x11373C0", Offset = "0x11373C0", VA = "0x11373C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1137450", Offset = "0x1137450", VA = "0x1137450")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x11375A0", Offset = "0x11375A0", VA = "0x11375A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x1137734", Offset = "0x1137734", VA = "0x1137734")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1137844", Offset = "0x1137844", VA = "0x1137844")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1137A30", Offset = "0x1137A30", VA = "0x1137A30")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1137954", Offset = "0x1137954", VA = "0x1137954")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1137968", Offset = "0x1137968", VA = "0x1137968")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1137A84", Offset = "0x1137A84", VA = "0x1137A84")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1137B14", Offset = "0x1137B14", VA = "0x1137B14")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000266")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x1137CF8", Offset = "0x1137CF8", VA = "0x1137CF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1137D08", Offset = "0x1137D08", VA = "0x1137D08", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1137D10", Offset = "0x1137D10", VA = "0x1137D10", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1138040", Offset = "0x1138040", VA = "0x1138040")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Vector3 OFFSET;

		[Token(Token = "0x4001517")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001518")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000267")]
		public float Distance
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x1138124", Offset = "0x1138124", VA = "0x1138124")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x113812C", Offset = "0x113812C", VA = "0x113812C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float Scale
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x1138134", Offset = "0x1138134", VA = "0x1138134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x113813C", Offset = "0x113813C", VA = "0x113813C")]
			set
			{
			}
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1137D0C", Offset = "0x1137D0C", VA = "0x1137D0C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1138144", Offset = "0x1138144", VA = "0x1138144")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1137D4C", Offset = "0x1137D4C", VA = "0x1137D4C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1137F5C", Offset = "0x1137F5C", VA = "0x1137F5C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001284")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x11380A0", Offset = "0x11380A0", VA = "0x11380A0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20003A4")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001293")]
				[Address(RVA = "0x113898C", Offset = "0x113898C", VA = "0x113898C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001295")]
				[Address(RVA = "0x11389D4", Offset = "0x11389D4", VA = "0x11389D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001290")]
			[Address(RVA = "0x1138650", Offset = "0x1138650", VA = "0x1138650")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x11387C4", Offset = "0x11387C4", VA = "0x11387C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001292")]
			[Address(RVA = "0x11387C8", Offset = "0x11387C8", VA = "0x11387C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0x1138994", Offset = "0x1138994", VA = "0x1138994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x11382B4", Offset = "0x11382B4", VA = "0x11382B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x11382F4", Offset = "0x11382F4", VA = "0x11382F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x11383CC", Offset = "0x11383CC", VA = "0x11383CC")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1138510", Offset = "0x1138510", VA = "0x1138510")]
		private void Update()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1138424", Offset = "0x1138424", VA = "0x1138424")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x11385D8", Offset = "0x11385D8", VA = "0x11385D8")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1138678", Offset = "0x1138678", VA = "0x1138678")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1138710", Offset = "0x1138710", VA = "0x1138710")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x113876C", Offset = "0x113876C", VA = "0x113876C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20003A6")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001555")]
			Start,
			[Token(Token = "0x4001556")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001557")]
			Stop
		}

		[Token(Token = "0x20003A7")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A8")]
				[Address(RVA = "0x1139238", Offset = "0x1139238", VA = "0x1139238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012AA")]
				[Address(RVA = "0x1139280", Offset = "0x1139280", VA = "0x1139280", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x1138C64", Offset = "0x1138C64", VA = "0x1138C64")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x113902C", Offset = "0x113902C", VA = "0x113902C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x1139030", Offset = "0x1139030", VA = "0x1139030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x1139240", Offset = "0x1139240", VA = "0x1139240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001537")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001538")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001539")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400153A")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0.2f, 2.7f)]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x11389DC", Offset = "0x11389DC", VA = "0x11389DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1138B20", Offset = "0x1138B20", VA = "0x1138B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1138B2C", Offset = "0x1138B2C", VA = "0x1138B2C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x11352DC", Offset = "0x11352DC", VA = "0x11352DC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1138AA4", Offset = "0x1138AA4", VA = "0x1138AA4")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1138C8C", Offset = "0x1138C8C", VA = "0x1138C8C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1138C04", Offset = "0x1138C04", VA = "0x1138C04")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1135348", Offset = "0x1135348", VA = "0x1135348")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x11353D8", Offset = "0x11353D8", VA = "0x11353D8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1138EA0", Offset = "0x1138EA0", VA = "0x1138EA0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1138F94", Offset = "0x1138F94", VA = "0x1138F94")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1135468", Offset = "0x1135468", VA = "0x1135468")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1135514", Offset = "0x1135514", VA = "0x1135514")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x11355F4", Offset = "0x11355F4", VA = "0x11355F4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1138FD0", Offset = "0x1138FD0", VA = "0x1138FD0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700026D")]
		public float TrackLength
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x1139288", Offset = "0x1139288", VA = "0x1139288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x1139290", Offset = "0x1139290", VA = "0x1139290")]
			private set
			{
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1139298", Offset = "0x1139298", VA = "0x1139298")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x11381AC", Offset = "0x11381AC", VA = "0x11381AC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x113929C", Offset = "0x113929C", VA = "0x113929C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1139488", Offset = "0x1139488", VA = "0x1139488")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1139568", Offset = "0x1139568", VA = "0x1139568")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class Pose
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 Position;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1137284", Offset = "0x1137284", VA = "0x1137284")]
		public Pose()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1139584", Offset = "0x1139584", VA = "0x1139584")]
		public Pose(UnityEngine.Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20003AB")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C0")]
				[Address(RVA = "0x1139B10", Offset = "0x1139B10", VA = "0x1139B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C2")]
				[Address(RVA = "0x1139B58", Offset = "0x1139B58", VA = "0x1139B58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x1139840", Offset = "0x1139840", VA = "0x1139840")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x113998C", Offset = "0x113998C", VA = "0x113998C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x1139990", Offset = "0x1139990", VA = "0x1139990", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x1139B18", Offset = "0x1139B18", VA = "0x1139B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AC")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x1139C28", Offset = "0x1139C28", VA = "0x1139C28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C8")]
				[Address(RVA = "0x1139C70", Offset = "0x1139C70", VA = "0x1139C70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x11398F4", Offset = "0x11398F4", VA = "0x11398F4")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x1139B60", Offset = "0x1139B60", VA = "0x1139B60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x1139B64", Offset = "0x1139B64", VA = "0x1139B64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x1139C30", Offset = "0x1139C30", VA = "0x1139C30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400156A")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700026E")]
		public bool IsMoving
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x11395E8", Offset = "0x11395E8", VA = "0x11395E8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x11395F0", Offset = "0x11395F0", VA = "0x11395F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x11395FC", Offset = "0x11395FC", VA = "0x11395FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x113962C", Offset = "0x113962C", VA = "0x113962C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x113976C", Offset = "0x113976C", VA = "0x113976C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x11397C8", Offset = "0x11397C8", VA = "0x11397C8")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x1139868", Offset = "0x1139868", VA = "0x1139868")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x113991C", Offset = "0x113991C", VA = "0x113991C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x1139984", Offset = "0x1139984", VA = "0x1139984")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1139C78", Offset = "0x1139C78", VA = "0x1139C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1139CD8", Offset = "0x1139CD8", VA = "0x1139CD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1139DA0", Offset = "0x1139DA0", VA = "0x1139DA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1139EB0", Offset = "0x1139EB0", VA = "0x1139EB0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1139F28", Offset = "0x1139F28", VA = "0x1139F28")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1139FF0", Offset = "0x1139FF0", VA = "0x1139FF0")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001587")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001588")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001589")]
		EUDT_None,
		[Token(Token = "0x400158A")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20003AF")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003B0")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0x113B5F4", Offset = "0x113B5F4", VA = "0x113B5F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E4")]
				[Address(RVA = "0x113B63C", Offset = "0x113B63C", VA = "0x113B63C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x113ACB8", Offset = "0x113ACB8", VA = "0x113ACB8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x113B414", Offset = "0x113B414", VA = "0x113B414", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x113B418", Offset = "0x113B418", VA = "0x113B418", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x113B5FC", Offset = "0x113B5FC", VA = "0x113B5FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400158C")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400158D")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400158E")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x113A000", Offset = "0x113A000", VA = "0x113A000")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x113A81C", Offset = "0x113A81C", VA = "0x113A81C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x113A944", Offset = "0x113A944", VA = "0x113A944")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x113AA60", Offset = "0x113AA60", VA = "0x113AA60")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x113AB7C", Offset = "0x113AB7C", VA = "0x113AB7C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x113A924", Offset = "0x113A924", VA = "0x113A924")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x113AC50", Offset = "0x113AC50", VA = "0x113AC50")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x113ACE0", Offset = "0x113ACE0", VA = "0x113ACE0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x113A458", Offset = "0x113A458", VA = "0x113A458")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x113AE28", Offset = "0x113AE28", VA = "0x113AE28")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x113AD08", Offset = "0x113AD08", VA = "0x113AD08")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x113B1A4", Offset = "0x113B1A4", VA = "0x113B1A4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x113B290", Offset = "0x113B290", VA = "0x113B290")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003B1")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x40015A6")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40015A7")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40015A8")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40015A9")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40015AA")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40015AB")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40015AC")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40015AD")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40015AE")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40015AF")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40015B0")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x113B644", Offset = "0x113B644", VA = "0x113B644")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x113B694", Offset = "0x113B694", VA = "0x113B694")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x113BAC4", Offset = "0x113BAC4", VA = "0x113BAC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x113BBB0", Offset = "0x113BBB0", VA = "0x113BBB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x113BD14", Offset = "0x113BD14", VA = "0x113BD14")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x113BFE4", Offset = "0x113BFE4", VA = "0x113BFE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x113C0C8", Offset = "0x113C0C8", VA = "0x113C0C8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x113C270", Offset = "0x113C270", VA = "0x113C270")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x113BDA0", Offset = "0x113BDA0", VA = "0x113BDA0")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x113BDF4", Offset = "0x113BDF4", VA = "0x113BDF4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x113B984", Offset = "0x113B984", VA = "0x113B984")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x113C394", Offset = "0x113C394", VA = "0x113C394")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public enum HandPoseId
	{
		[Token(Token = "0x40015C5")]
		Default,
		[Token(Token = "0x40015C6")]
		Generic,
		[Token(Token = "0x40015C7")]
		PingPongBall,
		[Token(Token = "0x40015C8")]
		Controller
	}
	[Token(Token = "0x20003B4")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000275")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x113C440", Offset = "0x113C440", VA = "0x113C440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000276")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x113C448", Offset = "0x113C448", VA = "0x113C448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x113C450", Offset = "0x113C450", VA = "0x113C450")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x113C458", Offset = "0x113C458", VA = "0x113C458")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x113C460", Offset = "0x113C460", VA = "0x113C460")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x113C72C", Offset = "0x113C72C", VA = "0x113C72C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x113C77C", Offset = "0x113C77C", VA = "0x113C77C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x113C7B4", Offset = "0x113C7B4", VA = "0x113C7B4")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20003B6")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40015CF")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40015D0")]
		public const string Tab = "    ";

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x113C7BC", Offset = "0x113C7BC", VA = "0x113C7BC")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x113C848", Offset = "0x113C848", VA = "0x113C848")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x113C8DC", Offset = "0x113C8DC", VA = "0x113C8DC")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x113C968", Offset = "0x113C968", VA = "0x113C968")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x113C9F4", Offset = "0x113C9F4", VA = "0x113C9F4")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class CAPI
	{
		[Token(Token = "0x20003B8")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20003B9")]
		public enum Result
		{
			[Token(Token = "0x40015DC")]
			Success = 0,
			[Token(Token = "0x40015DD")]
			Failure = -1000,
			[Token(Token = "0x40015DE")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40015DF")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40015E0")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40015E1")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40015E2")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40015E3")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40015E4")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20003BA")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x1143F3C", Offset = "0x1143F3C", VA = "0x1143F3C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40015D1")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40015D9")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x113CAE0", Offset = "0x113CAE0", VA = "0x113CAE0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x113CB6C", Offset = "0x113CB6C", VA = "0x113CB6C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x113CD74", Offset = "0x113CD74", VA = "0x113CD74")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001304")]
		[Address(RVA = "0x113CE48", Offset = "0x113CE48", VA = "0x113CE48")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001305")]
		[Address(RVA = "0x113CEAC", Offset = "0x113CEAC", VA = "0x113CEAC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001306")]
		[Address(RVA = "0x113CF14", Offset = "0x113CF14", VA = "0x113CF14")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x113CF90", Offset = "0x113CF90", VA = "0x113CF90")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001308")]
		[Address(RVA = "0x113D0C0", Offset = "0x113D0C0", VA = "0x113D0C0")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x113D13C", Offset = "0x113D13C", VA = "0x113D13C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x113D26C", Offset = "0x113D26C", VA = "0x113D26C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600130B")]
		[Address(RVA = "0x113D2E8", Offset = "0x113D2E8", VA = "0x113D2E8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x113D364", Offset = "0x113D364", VA = "0x113D364")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600130D")]
		[Address(RVA = "0x113D3E0", Offset = "0x113D3E0", VA = "0x113D3E0")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600130E")]
		[Address(RVA = "0x113D45C", Offset = "0x113D45C", VA = "0x113D45C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600130F")]
		[Address(RVA = "0x113D4E0", Offset = "0x113D4E0", VA = "0x113D4E0")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001310")]
		[Address(RVA = "0x113D564", Offset = "0x113D564", VA = "0x113D564")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001311")]
		[Address(RVA = "0x113D5E8", Offset = "0x113D5E8", VA = "0x113D5E8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001312")]
		[Address(RVA = "0x113D664", Offset = "0x113D664", VA = "0x113D664")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001313")]
		[Address(RVA = "0x113D6E0", Offset = "0x113D6E0", VA = "0x113D6E0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001314")]
		[Address(RVA = "0x113D764", Offset = "0x113D764", VA = "0x113D764")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001315")]
		[Address(RVA = "0x113D7E8", Offset = "0x113D7E8", VA = "0x113D7E8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x113D86C", Offset = "0x113D86C", VA = "0x113D86C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x113D8E8", Offset = "0x113D8E8", VA = "0x113D8E8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x113D97C", Offset = "0x113D97C", VA = "0x113D97C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x113D9E4", Offset = "0x113D9E4", VA = "0x113D9E4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600131A")]
		[Address(RVA = "0x113DA80", Offset = "0x113DA80", VA = "0x113DA80")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600131B")]
		[Address(RVA = "0x113DB34", Offset = "0x113DB34", VA = "0x113DB34")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600131C")]
		[Address(RVA = "0x113DBF8", Offset = "0x113DBF8", VA = "0x113DBF8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x113DC84", Offset = "0x113DC84", VA = "0x113DC84")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600131E")]
		[Address(RVA = "0x113DD08", Offset = "0x113DD08", VA = "0x113DD08")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600131F")]
		[Address(RVA = "0x113DD8C", Offset = "0x113DD8C", VA = "0x113DD8C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001320")]
		[Address(RVA = "0x113DE10", Offset = "0x113DE10", VA = "0x113DE10")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001321")]
		[Address(RVA = "0x113DE94", Offset = "0x113DE94", VA = "0x113DE94")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x113DF10", Offset = "0x113DF10", VA = "0x113DF10")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x113E014", Offset = "0x113E014", VA = "0x113E014")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001324")]
		[Address(RVA = "0x113DF90", Offset = "0x113DF90", VA = "0x113DF90")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x113E1F4", Offset = "0x113E1F4", VA = "0x113E1F4")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001326")]
		[Address(RVA = "0x113E358", Offset = "0x113E358", VA = "0x113E358")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001327")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x113E3D4", Offset = "0x113E3D4", VA = "0x113E3D4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x113E668", Offset = "0x113E668", VA = "0x113E668")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x113E6E4", Offset = "0x113E6E4", VA = "0x113E6E4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x113E848", Offset = "0x113E848", VA = "0x113E848")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x113E8C4", Offset = "0x113E8C4", VA = "0x113E8C4")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x113EA28", Offset = "0x113EA28", VA = "0x113EA28")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x113EAA4", Offset = "0x113EAA4", VA = "0x113EAA4")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x113EC08", Offset = "0x113EC08", VA = "0x113EC08")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x113EC84", Offset = "0x113EC84", VA = "0x113EC84")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001331")]
		[Address(RVA = "0x113EDE8", Offset = "0x113EDE8", VA = "0x113EDE8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x113EE64", Offset = "0x113EE64", VA = "0x113EE64")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x113EEE0", Offset = "0x113EEE0", VA = "0x113EEE0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x113EF6C", Offset = "0x113EF6C", VA = "0x113EF6C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x113EFE8", Offset = "0x113EFE8", VA = "0x113EFE8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x113F1A0", Offset = "0x113F1A0", VA = "0x113F1A0")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x113F2DC", Offset = "0x113F2DC", VA = "0x113F2DC")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x113F124", Offset = "0x113F124", VA = "0x113F124")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x113F358", Offset = "0x113F358", VA = "0x113F358")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x113F3D4", Offset = "0x113F3D4", VA = "0x113F3D4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600133B")]
		[Address(RVA = "0x113F458", Offset = "0x113F458", VA = "0x113F458")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600133C")]
		[Address(RVA = "0x113F4D4", Offset = "0x113F4D4", VA = "0x113F4D4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600133D")]
		[Address(RVA = "0x113F558", Offset = "0x113F558", VA = "0x113F558")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x113F5D4", Offset = "0x113F5D4", VA = "0x113F5D4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x113F650", Offset = "0x113F650", VA = "0x113F650")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001340")]
		[Address(RVA = "0x113F898", Offset = "0x113F898", VA = "0x113F898")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x113F91C", Offset = "0x113F91C", VA = "0x113F91C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001342")]
		[Address(RVA = "0x113FB30", Offset = "0x113FB30", VA = "0x113FB30")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x113FBC4", Offset = "0x113FBC4", VA = "0x113FBC4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0x113FCF8", Offset = "0x113FCF8", VA = "0x113FCF8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001345")]
		[Address(RVA = "0x113FD74", Offset = "0x113FD74", VA = "0x113FD74")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x113FDF0", Offset = "0x113FDF0", VA = "0x113FDF0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001347")]
		[Address(RVA = "0x113FF28", Offset = "0x113FF28", VA = "0x113FF28")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x113FFA4", Offset = "0x113FFA4", VA = "0x113FFA4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x11400DC", Offset = "0x11400DC", VA = "0x11400DC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1140158", Offset = "0x1140158", VA = "0x1140158")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134B")]
		[Address(RVA = "0x11401DC", Offset = "0x11401DC", VA = "0x11401DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1140260", Offset = "0x1140260", VA = "0x1140260")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134D")]
		[Address(RVA = "0x11402E4", Offset = "0x11402E4", VA = "0x11402E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1140360", Offset = "0x1140360", VA = "0x1140360")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600134F")]
		[Address(RVA = "0x11403E4", Offset = "0x11403E4", VA = "0x11403E4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1140468", Offset = "0x1140468", VA = "0x1140468")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001351")]
		[Address(RVA = "0x11404E4", Offset = "0x11404E4", VA = "0x11404E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1140560", Offset = "0x1140560", VA = "0x1140560")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1140610", Offset = "0x1140610", VA = "0x1140610")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1140694", Offset = "0x1140694", VA = "0x1140694")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1140718", Offset = "0x1140718", VA = "0x1140718")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1140794", Offset = "0x1140794", VA = "0x1140794")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1140810", Offset = "0x1140810", VA = "0x1140810")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x114088C", Offset = "0x114088C", VA = "0x114088C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1140920", Offset = "0x1140920", VA = "0x1140920")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x11409AC", Offset = "0x11409AC", VA = "0x11409AC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1140A38", Offset = "0x1140A38", VA = "0x1140A38")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1140AC4", Offset = "0x1140AC4", VA = "0x1140AC4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1140B58", Offset = "0x1140B58", VA = "0x1140B58")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1140BEC", Offset = "0x1140BEC", VA = "0x1140BEC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1140C68", Offset = "0x1140C68", VA = "0x1140C68")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1140CE4", Offset = "0x1140CE4", VA = "0x1140CE4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1140E1C", Offset = "0x1140E1C", VA = "0x1140E1C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1140E98", Offset = "0x1140E98", VA = "0x1140E98")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1140FD0", Offset = "0x1140FD0", VA = "0x1140FD0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x114104C", Offset = "0x114104C", VA = "0x114104C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0x114116C", Offset = "0x114116C", VA = "0x114116C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x11411E8", Offset = "0x11411E8", VA = "0x11411E8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x114139C", Offset = "0x114139C", VA = "0x114139C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1141644", Offset = "0x1141644", VA = "0x1141644")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1141320", Offset = "0x1141320", VA = "0x1141320")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600136A")]
		[Address(RVA = "0x11416C8", Offset = "0x11416C8", VA = "0x11416C8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1141744", Offset = "0x1141744", VA = "0x1141744")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x11417C8", Offset = "0x11417C8", VA = "0x11417C8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600136D")]
		[Address(RVA = "0x114184C", Offset = "0x114184C", VA = "0x114184C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x11418D0", Offset = "0x11418D0", VA = "0x11418D0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600136F")]
		[Address(RVA = "0x114196C", Offset = "0x114196C", VA = "0x114196C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1141A08", Offset = "0x1141A08", VA = "0x1141A08")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1141A9C", Offset = "0x1141A9C", VA = "0x1141A9C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1141B18", Offset = "0x1141B18", VA = "0x1141B18")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1141B94", Offset = "0x1141B94", VA = "0x1141B94")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1141C10", Offset = "0x1141C10", VA = "0x1141C10")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1141C8C", Offset = "0x1141C8C", VA = "0x1141C8C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1141D08", Offset = "0x1141D08", VA = "0x1141D08")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1141E2C", Offset = "0x1141E2C", VA = "0x1141E2C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1141EB8", Offset = "0x1141EB8", VA = "0x1141EB8")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x1141F34", Offset = "0x1141F34", VA = "0x1141F34")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1141F88", Offset = "0x1141F88", VA = "0x1141F88")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x11420BC", Offset = "0x11420BC", VA = "0x11420BC")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1142140", Offset = "0x1142140", VA = "0x1142140")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1142274", Offset = "0x1142274", VA = "0x1142274")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x11422F8", Offset = "0x11422F8", VA = "0x11422F8")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x114238C", Offset = "0x114238C", VA = "0x114238C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x11426C4", Offset = "0x11426C4", VA = "0x11426C4")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1142740", Offset = "0x1142740", VA = "0x1142740")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x11427CC", Offset = "0x11427CC", VA = "0x11427CC")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1142F20", Offset = "0x1142F20", VA = "0x1142F20")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1142F9C", Offset = "0x1142F9C", VA = "0x1142F9C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x113CA88", Offset = "0x113CA88", VA = "0x113CA88")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1143028", Offset = "0x1143028", VA = "0x1143028")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x11430A8", Offset = "0x11430A8", VA = "0x11430A8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1143124", Offset = "0x1143124", VA = "0x1143124")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x11431A0", Offset = "0x11431A0", VA = "0x11431A0")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x114321C", Offset = "0x114321C", VA = "0x114321C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1143B74", Offset = "0x1143B74", VA = "0x1143B74")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1143BF0", Offset = "0x1143BF0", VA = "0x1143BF0")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1144014", Offset = "0x1144014", VA = "0x1144014")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1143EB8", Offset = "0x1143EB8", VA = "0x1143EB8")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x114407C", Offset = "0x114407C", VA = "0x114407C")]
		public CAPI()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003BB")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x40015E7")]
		NONE = 0u,
		[Token(Token = "0x40015E8")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x40015E9")]
		STAGE = 2u,
		[Token(Token = "0x40015EA")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x40015EB")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x20003BC")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	[AddComponentMenu("LIV/LIV")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x20003BD")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013C1")]
				[Address(RVA = "0x114577C", Offset = "0x114577C", VA = "0x114577C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C3")]
				[Address(RVA = "0x11457C4", Offset = "0x11457C4", VA = "0x11457C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x1144D28", Offset = "0x1144D28", VA = "0x1144D28")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x11455DC", Offset = "0x11455DC", VA = "0x11455DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x11455E0", Offset = "0x11455E0", VA = "0x11455E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1145784", Offset = "0x1145784", VA = "0x1145784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[FormerlySerializedAs("StageTransform")]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		private Transform _stageTransform;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		[SerializeField]
		[FormerlySerializedAs("HMDCamera")]
		private Camera _HMDCamera;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Camera prefab for customized rendering.")]
		[SerializeField]
		[FormerlySerializedAs("MRCameraPrefab")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[FormerlySerializedAs("DisableStandardAssets")]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		private bool _disableStandardAssets;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[FormerlySerializedAs("ExcludeBehaviours")]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		private string[] _excludeBehaviours;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x17000278")]
		public Transform stage
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x114432C", Offset = "0x114432C", VA = "0x114432C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x11443BC", Offset = "0x11443BC", VA = "0x11443BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x11444B4", Offset = "0x11444B4", VA = "0x11444B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x11444B8", Offset = "0x11444B8", VA = "0x11444B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x11444BC", Offset = "0x11444BC", VA = "0x11444BC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700027B")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x11445B4", Offset = "0x11445B4", VA = "0x11445B4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700027C")]
		public Transform stageTransform
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x11446AC", Offset = "0x11446AC", VA = "0x11446AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x11446B4", Offset = "0x11446B4", VA = "0x11446B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public Camera HMDCamera
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x11446BC", Offset = "0x11446BC", VA = "0x11446BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x11446C4", Offset = "0x11446C4", VA = "0x11446C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x11447BC", Offset = "0x11447BC", VA = "0x11447BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x11447C4", Offset = "0x11447C4", VA = "0x11447C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x1144854", Offset = "0x1144854", VA = "0x1144854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x114485C", Offset = "0x114485C", VA = "0x114485C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x1144868", Offset = "0x1144868", VA = "0x1144868")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x1144870", Offset = "0x1144870", VA = "0x1144870")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x1144878", Offset = "0x1144878", VA = "0x1144878")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x1144880", Offset = "0x1144880", VA = "0x1144880")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x11448B8", Offset = "0x11448B8", VA = "0x11448B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x11448C0", Offset = "0x11448C0", VA = "0x11448C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool isValid
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x11448CC", Offset = "0x11448CC", VA = "0x11448CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000284")]
		public bool isActive
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x1144A2C", Offset = "0x1144A2C", VA = "0x1144A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000285")]
		private bool _isReady
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x1144A34", Offset = "0x1144A34", VA = "0x1144A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000286")]
		public SDKRender render
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x1144B40", Offset = "0x1144B40", VA = "0x1144B40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1144B48", Offset = "0x1144B48", VA = "0x1144B48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1144B98", Offset = "0x1144B98", VA = "0x1144B98")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1144CB8", Offset = "0x1144CB8", VA = "0x1144CB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1144CC0", Offset = "0x1144CC0", VA = "0x1144CC0")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1144B54", Offset = "0x1144B54", VA = "0x1144B54")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1144D50", Offset = "0x1144D50", VA = "0x1144D50")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1144D5C", Offset = "0x1144D5C", VA = "0x1144D5C")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1144E08", Offset = "0x1144E08", VA = "0x1144E08")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x114500C", Offset = "0x114500C", VA = "0x114500C")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x11450E4", Offset = "0x11450E4", VA = "0x11450E4")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x114507C", Offset = "0x114507C", VA = "0x114507C")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x11450C0", Offset = "0x11450C0", VA = "0x11450C0")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x1144EBC", Offset = "0x1144EBC", VA = "0x1144EBC")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1144BB0", Offset = "0x1144BB0", VA = "0x1144BB0")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x114541C", Offset = "0x114541C", VA = "0x114541C")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public static class SDKBridge
	{
		[Token(Token = "0x20003BF")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000289")]
		public static bool IsActive
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x1144AA8", Offset = "0x1144AA8", VA = "0x1144AA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x11457CC", Offset = "0x11457CC", VA = "0x11457CC")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x11457D4", Offset = "0x11457D4", VA = "0x11457D4")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x11457DC", Offset = "0x11457DC", VA = "0x11457DC")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x11457E4", Offset = "0x11457E4", VA = "0x11457E4")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x11457EC", Offset = "0x11457EC", VA = "0x11457EC")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x11457F4", Offset = "0x11457F4", VA = "0x11457F4")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x114583C", Offset = "0x114583C", VA = "0x114583C")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1145884", Offset = "0x1145884", VA = "0x1145884")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x114588C", Offset = "0x114588C", VA = "0x114588C")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1145894", Offset = "0x1145894", VA = "0x1145894")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x11458DC", Offset = "0x11458DC", VA = "0x11458DC")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1145924", Offset = "0x1145924", VA = "0x1145924")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x114596C", Offset = "0x114596C", VA = "0x114596C")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1145974", Offset = "0x1145974", VA = "0x1145974")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x11459F8", Offset = "0x11459F8", VA = "0x11459F8")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1145AF4", Offset = "0x1145AF4", VA = "0x1145AF4")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1145BB4", Offset = "0x1145BB4", VA = "0x1145BB4")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1145C10", Offset = "0x1145C10", VA = "0x1145C10")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1145C6C", Offset = "0x1145C6C", VA = "0x1145C6C")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x114522C", Offset = "0x114522C", VA = "0x114522C")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x60013D9")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013DB")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DC")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013DD")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1145D1C", Offset = "0x1145D1C", VA = "0x1145D1C")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1145FF0", Offset = "0x1145FF0", VA = "0x1145FF0")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x11461B8", Offset = "0x11461B8", VA = "0x11461B8")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x11462E8", Offset = "0x11462E8", VA = "0x11462E8")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x1146450", Offset = "0x1146450", VA = "0x1146450")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x11464F0", Offset = "0x11464F0", VA = "0x11464F0")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C0")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x1700028A")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x1146878", Offset = "0x1146878", VA = "0x1146878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		private bool interlacedRendering
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x11468C4", Offset = "0x11468C4", VA = "0x11468C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		private bool canRenderBackground
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x11468D4", Offset = "0x11468D4", VA = "0x11468D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		private bool canRenderForeground
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x1146978", Offset = "0x1146978", VA = "0x1146978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x1146A30", Offset = "0x1146A30", VA = "0x1146A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public LIV liv
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x1148EB0", Offset = "0x1148EB0", VA = "0x1148EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x1148EB8", Offset = "0x1148EB8", VA = "0x1148EB8")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000291")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x1148EC8", Offset = "0x1148EC8", VA = "0x1148EC8")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000292")]
		public SDKResolution resolution
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1148ED8", Offset = "0x1148ED8", VA = "0x1148ED8")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000293")]
		public Camera cameraInstance
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x1148EE0", Offset = "0x1148EE0", VA = "0x1148EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public Camera cameraReference
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1148C3C", Offset = "0x1148C3C", VA = "0x1148C3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public Camera hmdCamera
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x1148EE8", Offset = "0x1148EE8", VA = "0x1148EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		public Transform stage
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x1148F04", Offset = "0x1148F04", VA = "0x1148F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		public Transform stageTransform
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x1148F1C", Offset = "0x1148F1C", VA = "0x1148F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1148F38", Offset = "0x1148F38", VA = "0x1148F38")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000299")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1148938", Offset = "0x1148938", VA = "0x1148938")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700029A")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x11489FC", Offset = "0x11489FC", VA = "0x11489FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029B")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1148BB0", Offset = "0x1148BB0", VA = "0x1148BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029C")]
		public bool canSetPose
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x1149030", Offset = "0x1149030", VA = "0x1149030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11466D8", Offset = "0x11466D8", VA = "0x11466D8")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11467DC", Offset = "0x11467DC", VA = "0x11467DC")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1145104", Offset = "0x1145104", VA = "0x1145104")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x11456B0", Offset = "0x11456B0", VA = "0x11456B0")]
		public void Render()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1147654", Offset = "0x1147654", VA = "0x1147654")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1147994", Offset = "0x1147994", VA = "0x1147994")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x11483B4", Offset = "0x11483B4", VA = "0x11483B4")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1146AB4", Offset = "0x1146AB4", VA = "0x1146AB4")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1148CC8", Offset = "0x1148CC8", VA = "0x1148CC8")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x11451E4", Offset = "0x11451E4", VA = "0x11451E4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1149050", Offset = "0x1149050", VA = "0x1149050")]
		public bool SetPose(UnityEngine.Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x114937C", Offset = "0x114937C", VA = "0x114937C")]
		public void SetGroundPlane(float distance, UnityEngine.Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x1149530", Offset = "0x1149530", VA = "0x1149530")]
		public void SetGroundPlane(UnityEngine.Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x11495A8", Offset = "0x11495A8", VA = "0x11495A8")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1148E4C", Offset = "0x1148E4C", VA = "0x1148E4C")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x11471C8", Offset = "0x11471C8", VA = "0x11471C8")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1147220", Offset = "0x1147220", VA = "0x1147220")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x114761C", Offset = "0x114761C", VA = "0x114761C")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1148900", Offset = "0x1148900", VA = "0x1148900")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1148A1C", Offset = "0x1148A1C", VA = "0x1148A1C")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1148B78", Offset = "0x1148B78", VA = "0x1148B78")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1148BCC", Offset = "0x1148BCC", VA = "0x1148BCC")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1148C04", Offset = "0x1148C04", VA = "0x1148C04")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1149748", Offset = "0x1149748", VA = "0x1149748")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x11497E0", Offset = "0x11497E0", VA = "0x11497E0")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1149878", Offset = "0x1149878", VA = "0x1149878")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1149910", Offset = "0x1149910", VA = "0x1149910")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x114735C", Offset = "0x114735C", VA = "0x114735C")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x1148A54", Offset = "0x1148A54", VA = "0x1148A54")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001634")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001635")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001636")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4001637")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4001638")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4001639")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x400163A")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x400163B")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x400163C")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x400163D")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x400163E")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x11499A8", Offset = "0x11499A8", VA = "0x11499A8")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x11499EC", Offset = "0x11499EC", VA = "0x11499EC")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x1149A30", Offset = "0x1149A30", VA = "0x1149A30")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x1149A74", Offset = "0x1149A74", VA = "0x1149A74")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1149AB8", Offset = "0x1149AB8", VA = "0x1149AB8")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1149AFC", Offset = "0x1149AFC", VA = "0x1149AFC")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public struct SDKConstants
	{
		[Token(Token = "0x400163F")]
		public const string SDK_ID = "Q5A8UKSI77SA7BQL10VONSHKVJSKUBI4";

		[Token(Token = "0x4001640")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4001641")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x20003C3")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001643")]
		NONE = 0,
		[Token(Token = "0x4001644")]
		GAME = 63
	}
	[Token(Token = "0x20003C4")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001646")]
		NONE = 0uL,
		[Token(Token = "0x4001647")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4001648")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4001649")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x400164A")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x400164B")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x400164C")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x400164D")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x400164E")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x400164F")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4001650")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4001651")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x20003C5")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001653")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001654")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001655")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4001656")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x20003C6")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001658")]
		UNDEFINED,
		[Token(Token = "0x4001659")]
		COLOR_BUFFER
	}
	[Token(Token = "0x20003C7")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x400165B")]
		UNDEFINED = 0u,
		[Token(Token = "0x400165C")]
		ARGB32 = 10u
	}
	[Token(Token = "0x20003C8")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x400165E")]
		UNDEFINED,
		[Token(Token = "0x400165F")]
		RAW,
		[Token(Token = "0x4001660")]
		DIRECTX,
		[Token(Token = "0x4001661")]
		OPENGL,
		[Token(Token = "0x4001662")]
		VULKAN,
		[Token(Token = "0x4001663")]
		METAL
	}
	[Token(Token = "0x20003C9")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001665")]
		UNDEFINED,
		[Token(Token = "0x4001666")]
		LINEAR,
		[Token(Token = "0x4001667")]
		SRGB
	}
	[Token(Token = "0x20003CA")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001669")]
		UNDEFINED,
		[Token(Token = "0x400166A")]
		FORWARD,
		[Token(Token = "0x400166B")]
		DEFERRED,
		[Token(Token = "0x400166C")]
		VERTEX_LIT,
		[Token(Token = "0x400166D")]
		UNIVERSAL,
		[Token(Token = "0x400166E")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x20003CB")]
	public struct SDKResolution
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700029D")]
		public static SDKResolution zero
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x1149C08", Offset = "0x1149C08", VA = "0x1149C08")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x1149C10", Offset = "0x1149C10", VA = "0x1149C10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CC")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700029E")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1149CB0", Offset = "0x1149CB0", VA = "0x1149CB0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700029F")]
		public static SDKVector3 one
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1149CC0", Offset = "0x1149CC0", VA = "0x1149CC0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002A0")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1149CD0", Offset = "0x1149CD0", VA = "0x1149CD0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002A1")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x1149CE0", Offset = "0x1149CE0", VA = "0x1149CE0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170002A2")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1149CF0", Offset = "0x1149CF0", VA = "0x1149CF0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1149D00", Offset = "0x1149D00", VA = "0x1149D00")]
		public static implicit operator UnityEngine.Vector3(SDKVector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1149D04", Offset = "0x1149D04", VA = "0x1149D04")]
		public static implicit operator SDKVector3(UnityEngine.Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1149D08", Offset = "0x1149D08", VA = "0x1149D08")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1149D18", Offset = "0x1149D18", VA = "0x1149D18")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1149D28", Offset = "0x1149D28", VA = "0x1149D28")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1149D38", Offset = "0x1149D38", VA = "0x1149D38")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1149D48", Offset = "0x1149D48", VA = "0x1149D48", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CD")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170002A3")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x1149E0C", Offset = "0x1149E0C", VA = "0x1149E0C")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1149E20", Offset = "0x1149E20", VA = "0x1149E20")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1149E24", Offset = "0x1149E24", VA = "0x1149E24")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1149E28", Offset = "0x1149E28", VA = "0x1149E28")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1149EDC", Offset = "0x1149EDC", VA = "0x1149EDC")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1149F50", Offset = "0x1149F50", VA = "0x1149F50")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1149FF4", Offset = "0x1149FF4", VA = "0x1149FF4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CE")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170002A4")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x114A1A0", Offset = "0x114A1A0", VA = "0x114A1A0")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x114A1CC", Offset = "0x114A1CC", VA = "0x114A1CC")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x114A210", Offset = "0x114A210", VA = "0x114A210")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x114A254", Offset = "0x114A254", VA = "0x114A254")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x114A300", Offset = "0x114A300", VA = "0x114A300")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x114A40C", Offset = "0x114A40C", VA = "0x114A40C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x114A464", Offset = "0x114A464", VA = "0x114A464")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x114A4A0", Offset = "0x114A4A0", VA = "0x114A4A0")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x114A534", Offset = "0x114A534", VA = "0x114A534")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x114A560", Offset = "0x114A560", VA = "0x114A560")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x114A644", Offset = "0x114A644", VA = "0x114A644", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003CF")]
	public struct SDKPlane
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170002A5")]
		public static SDKPlane empty
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x114AB4C", Offset = "0x114AB4C", VA = "0x114AB4C")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x114AAF0", Offset = "0x114AAF0", VA = "0x114AAF0")]
		public static implicit operator SDKPlane(UnityEngine.Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x114AB60", Offset = "0x114AB60", VA = "0x114AB60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D0")]
	public struct SDKPriority
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x170002A6")]
		public static SDKPriority empty
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x114AC24", Offset = "0x114AC24", VA = "0x114AC24")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x114AC30", Offset = "0x114AC30", VA = "0x114AC30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D1")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x170002A7")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x114AE9C", Offset = "0x114AE9C", VA = "0x114AE9C")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x114AF1C", Offset = "0x114AF1C", VA = "0x114AF1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D2")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x170002A8")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x114B160", Offset = "0x114B160", VA = "0x114B160")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x114B35C", Offset = "0x114B35C", VA = "0x114B35C")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x114B36C", Offset = "0x114B36C", VA = "0x114B36C")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x114B380", Offset = "0x114B380", VA = "0x114B380", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D3")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x170002A9")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x114B6B4", Offset = "0x114B6B4", VA = "0x114B6B4")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x114B778", Offset = "0x114B778", VA = "0x114B778", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D4")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170002AA")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x114B714", Offset = "0x114B714", VA = "0x114B714")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x114B83C", Offset = "0x114B83C", VA = "0x114B83C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D5")]
	public struct SDKTexture
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170002AB")]
		public static SDKTexture empty
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x114BA80", Offset = "0x114BA80", VA = "0x114BA80")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x114BADC", Offset = "0x114BADC", VA = "0x114BADC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D6")]
	public struct SDKTransform
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x170002AC")]
		public static SDKTransform empty
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x114B348", Offset = "0x114B348", VA = "0x114B348")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x114BE80", Offset = "0x114BE80", VA = "0x114BE80", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D7")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x170002AD")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x114B314", Offset = "0x114B314", VA = "0x114B314")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x114BF68", Offset = "0x114BF68", VA = "0x114BF68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D8")]
	public struct SDKControllerState
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x170002AE")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x114C144", Offset = "0x114C144", VA = "0x114C144")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x114C190", Offset = "0x114C190", VA = "0x114C190", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D9")]
	public struct SDKPose
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x170002AF")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x114B2A4", Offset = "0x114B2A4", VA = "0x114B2A4")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x114C4F8", Offset = "0x114C4F8", VA = "0x114C4F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003DA")]
	public static class SDKUtils
	{
		[Token(Token = "0x170002B0")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x114CC44", Offset = "0x114CC44", VA = "0x114CC44")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x114C770", Offset = "0x114C770", VA = "0x114C770")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x114CC2C", Offset = "0x114CC2C", VA = "0x114CC2C")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x114CC70", Offset = "0x114CC70", VA = "0x114CC70")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x114CCFC", Offset = "0x114CCFC", VA = "0x114CCFC")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x114CD1C", Offset = "0x114CD1C", VA = "0x114CD1C")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x114CD80", Offset = "0x114CD80", VA = "0x114CD80")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x114CD8C", Offset = "0x114CD8C", VA = "0x114CD8C")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x114CDA0", Offset = "0x114CDA0", VA = "0x114CDA0")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out UnityEngine.Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x114CF7C", Offset = "0x114CF7C", VA = "0x114CF7C")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x114D300", Offset = "0x114D300", VA = "0x114D300")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x114CE18", Offset = "0x114CE18", VA = "0x114CE18")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x114D54C", Offset = "0x114D54C", VA = "0x114D54C")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001462")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001463")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x114D7C8", Offset = "0x114D7C8", VA = "0x114D7C8")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x114D938", Offset = "0x114D938", VA = "0x114D938")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x114D9CC", Offset = "0x114D9CC", VA = "0x114D9CC")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x114DAC4", Offset = "0x114DAC4", VA = "0x114DAC4")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x114DC58", Offset = "0x114DC58", VA = "0x114DC58")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x114DC64", Offset = "0x114DC64", VA = "0x114DC64")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x114DDD4", Offset = "0x114DDD4", VA = "0x114DDD4")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x114DE5C", Offset = "0x114DE5C", VA = "0x114DE5C")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x20003DB")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20003DC")]
		private class CameraState
		{
			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6001470")]
			[Address(RVA = "0x114E13C", Offset = "0x114E13C", VA = "0x114E13C")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0x114E67C", Offset = "0x114E67C", VA = "0x114E67C")]
			public void Translate(UnityEngine.Vector3 translation)
			{
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0x114E6FC", Offset = "0x114E6FC", VA = "0x114E6FC")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0x114E784", Offset = "0x114E784", VA = "0x114E784")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0x114E978", Offset = "0x114E978", VA = "0x114E978")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		[Header("Movement Settings")]
		public float boost;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Rotation Settings")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float rotationLerpTime;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x114E0E8", Offset = "0x114E0E8", VA = "0x114E0E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x114E1C0", Offset = "0x114E1C0", VA = "0x114E1C0")]
		private UnityEngine.Vector3 GetInputTranslationDirection()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x114E3F0", Offset = "0x114E3F0", VA = "0x114E3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x114E7CC", Offset = "0x114E7CC", VA = "0x114E7CC")]
		public SimpleCameraController()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20003DD")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x6001475")]
		[Address(RVA = "0x114E980", Offset = "0x114E980", VA = "0x114E980")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x114EB1C", Offset = "0x114EB1C", VA = "0x114EB1C")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x114EC90", Offset = "0x114EC90", VA = "0x114EC90")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x114EE08", Offset = "0x114EE08", VA = "0x114EE08")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x114EE70", Offset = "0x114EE70", VA = "0x114EE70")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x114EED8", Offset = "0x114EED8", VA = "0x114EED8")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x114EF30", Offset = "0x114EF30", VA = "0x114EF30")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x114EFA8", Offset = "0x114EFA8", VA = "0x114EFA8")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x114F000", Offset = "0x114F000", VA = "0x114F000")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x114F058", Offset = "0x114F058", VA = "0x114F058")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x114F0B0", Offset = "0x114F0B0", VA = "0x114F0B0")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x114F108", Offset = "0x114F108", VA = "0x114F108")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x114F168", Offset = "0x114F168", VA = "0x114F168")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x114F1C4", Offset = "0x114F1C4", VA = "0x114F1C4")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x114F21C", Offset = "0x114F21C", VA = "0x114F21C")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003E1")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x600148D")]
		[Address(RVA = "0x114F33C", Offset = "0x114F33C", VA = "0x114F33C")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOMove(this Rigidbody target, UnityEngine.Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x114F4E4", Offset = "0x114F4E4", VA = "0x114F4E4")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x114F680", Offset = "0x114F680", VA = "0x114F680")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x114F81C", Offset = "0x114F81C", VA = "0x114F81C")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x114F9B8", Offset = "0x114F9B8", VA = "0x114F9B8")]
		public static TweenerCore<Quaternion, UnityEngine.Vector3, QuaternionOptions> DORotate(this Rigidbody target, UnityEngine.Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x114FB5C", Offset = "0x114FB5C", VA = "0x114FB5C")]
		public static TweenerCore<Quaternion, UnityEngine.Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, UnityEngine.Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] UnityEngine.Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x114FDB4", Offset = "0x114FDB4", VA = "0x114FDB4")]
		public static Sequence DOJump(this Rigidbody target, UnityEngine.Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x1150294", Offset = "0x1150294", VA = "0x1150294")]
		public static TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, UnityEngine.Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x11504F8", Offset = "0x11504F8", VA = "0x11504F8")]
		public static TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, UnityEngine.Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1150768", Offset = "0x1150768", VA = "0x1150768")]
		internal static TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x115092C", Offset = "0x115092C", VA = "0x115092C")]
		internal static TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20003ED")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1150F1C", Offset = "0x1150F1C", VA = "0x1150F1C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x11510BC", Offset = "0x11510BC", VA = "0x11510BC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1151254", Offset = "0x1151254", VA = "0x1151254")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x11513EC", Offset = "0x11513EC", VA = "0x11513EC")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x115156C", Offset = "0x115156C", VA = "0x115156C")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F3")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1151B28", Offset = "0x1151B28", VA = "0x1151B28")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1151CC4", Offset = "0x1151CC4", VA = "0x1151CC4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1151E38", Offset = "0x1151E38", VA = "0x1151E38")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1152014", Offset = "0x1152014", VA = "0x1152014")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F7")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20003F8")]
		public static class Utils
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1156670", Offset = "0x1156670", VA = "0x1156670")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x11522F4", Offset = "0x11522F4", VA = "0x11522F4")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1152468", Offset = "0x1152468", VA = "0x1152468")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1152604", Offset = "0x1152604", VA = "0x1152604")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1152778", Offset = "0x1152778", VA = "0x1152778")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1152914", Offset = "0x1152914", VA = "0x1152914")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1152A88", Offset = "0x1152A88", VA = "0x1152A88")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1152C20", Offset = "0x1152C20", VA = "0x1152C20")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1152E04", Offset = "0x1152E04", VA = "0x1152E04")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1152FA0", Offset = "0x1152FA0", VA = "0x1152FA0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x115313C", Offset = "0x115313C", VA = "0x115313C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x11532D8", Offset = "0x11532D8", VA = "0x11532D8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1153474", Offset = "0x1153474", VA = "0x1153474")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x11535E8", Offset = "0x11535E8", VA = "0x11535E8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x115376C", Offset = "0x115376C", VA = "0x115376C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1153908", Offset = "0x1153908", VA = "0x1153908")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1153A9C", Offset = "0x1153A9C", VA = "0x1153A9C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1153C30", Offset = "0x1153C30", VA = "0x1153C30")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, UnityEngine.Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1153DD4", Offset = "0x1153DD4", VA = "0x1153DD4")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1153F6C", Offset = "0x1153F6C", VA = "0x1153F6C")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1154104", Offset = "0x1154104", VA = "0x1154104")]
		public static TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x115429C", Offset = "0x115429C", VA = "0x115429C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1154438", Offset = "0x1154438", VA = "0x1154438")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x11545D4", Offset = "0x11545D4", VA = "0x11545D4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1154758", Offset = "0x1154758", VA = "0x1154758")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x11548E0", Offset = "0x11548E0", VA = "0x11548E0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1154A68", Offset = "0x1154A68", VA = "0x1154A68")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1154C04", Offset = "0x1154C04", VA = "0x1154C04")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1154DA8", Offset = "0x1154DA8", VA = "0x1154DA8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1154F74", Offset = "0x1154F74", VA = "0x1154F74")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1155148", Offset = "0x1155148", VA = "0x1155148")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1155554", Offset = "0x1155554", VA = "0x1155554")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x11556E4", Offset = "0x11556E4", VA = "0x11556E4")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1155864", Offset = "0x1155864", VA = "0x1155864")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x11559E4", Offset = "0x11559E4", VA = "0x11559E4")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1155B70", Offset = "0x1155B70", VA = "0x1155B70")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1155D0C", Offset = "0x1155D0C", VA = "0x1155D0C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1155E80", Offset = "0x1155E80", VA = "0x1155E80")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1156070", Offset = "0x1156070", VA = "0x1156070")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1156270", Offset = "0x1156270", VA = "0x1156270")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1156470", Offset = "0x1156470", VA = "0x1156470")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000420")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1157560", Offset = "0x1157560", VA = "0x1157560")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1157740", Offset = "0x1157740", VA = "0x1157740")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x115792C", Offset = "0x115792C", VA = "0x115792C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x11579E8", Offset = "0x11579E8", VA = "0x11579E8")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1157AA4", Offset = "0x1157AA4", VA = "0x1157AA4")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1157B60", Offset = "0x1157B60", VA = "0x1157B60")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1157C2C", Offset = "0x1157C2C", VA = "0x1157C2C")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1157D08", Offset = "0x1157D08", VA = "0x1157D08")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1157DC4", Offset = "0x1157DC4", VA = "0x1157DC4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1157F8C", Offset = "0x1157F8C", VA = "0x1157F8C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000424")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002B1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001587")]
				[Address(RVA = "0x11581E4", Offset = "0x11581E4", VA = "0x11581E4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001588")]
			[Address(RVA = "0x11579C0", Offset = "0x11579C0", VA = "0x11579C0")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000425")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002B2")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001589")]
				[Address(RVA = "0x1158214", Offset = "0x1158214", VA = "0x1158214", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600158A")]
			[Address(RVA = "0x1157A7C", Offset = "0x1157A7C", VA = "0x1157A7C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000426")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002B3")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600158B")]
				[Address(RVA = "0x1158274", Offset = "0x1158274", VA = "0x1158274", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0x1157B38", Offset = "0x1157B38", VA = "0x1157B38")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000427")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170002B4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600158D")]
				[Address(RVA = "0x1158290", Offset = "0x1158290", VA = "0x1158290", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x1157BFC", Offset = "0x1157BFC", VA = "0x1157BFC")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000428")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170002B5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600158F")]
				[Address(RVA = "0x11582D0", Offset = "0x11582D0", VA = "0x11582D0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001590")]
			[Address(RVA = "0x1157CD0", Offset = "0x1157CD0", VA = "0x1157CD0")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000429")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002B6")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001591")]
				[Address(RVA = "0x1158328", Offset = "0x1158328", VA = "0x1158328", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x1157D9C", Offset = "0x1157D9C", VA = "0x1157D9C")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200042A")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200042B")]
		public static class Physics
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x11584B8", Offset = "0x11584B8", VA = "0x11584B8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001596")]
			[Address(RVA = "0x11585B8", Offset = "0x11585B8", VA = "0x11585B8")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001597")]
			[Address(RVA = "0x1158644", Offset = "0x1158644", VA = "0x1158644")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001598")]
			[Address(RVA = "0x11586D0", Offset = "0x11586D0", VA = "0x11586D0")]
			[Preserve]
			public static TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x115835C", Offset = "0x115835C", VA = "0x115835C")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1158410", Offset = "0x1158410", VA = "0x1158410")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
